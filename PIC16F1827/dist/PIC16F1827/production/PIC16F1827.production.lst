

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Oct 13 21:50:40 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    18                           	psect	cinit,global,class=CODE,merge=1,delta=2
    19                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    21                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    22                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    23                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    24                           	psect	inittext,global,class=CODE,delta=2
    25                           	psect	clrtext,global,class=CODE,delta=2
    26                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    27                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    28                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    29                           	psect	text1,local,class=CODE,merge=1,delta=2
    30                           	psect	text2,local,class=CODE,merge=1,delta=2
    31                           	psect	text3,local,class=CODE,merge=1,delta=2
    32                           	psect	text4,local,class=CODE,merge=1,delta=2
    33                           	psect	text5,local,class=CODE,merge=1,delta=2
    34                           	psect	text6,local,class=CODE,merge=1,delta=2
    35                           	psect	text7,local,class=CODE,merge=1,delta=2
    36                           	psect	text8,local,class=CODE,merge=1,delta=2
    37                           	psect	text9,local,class=CODE,merge=1,delta=2
    38                           	psect	text10,local,class=CODE,merge=1,delta=2
    39                           	psect	text11,local,class=CODE,merge=1,delta=2
    40                           	psect	text12,local,class=CODE,merge=1,delta=2
    41                           	psect	text13,local,class=CODE,merge=1,delta=2
    42                           	psect	text14,local,class=CODE,merge=1,delta=2
    43                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text17,local,class=CODE,merge=1,delta=2
    46                           	psect	text18,local,class=CODE,merge=1,delta=2
    47                           	psect	text19,local,class=CODE,merge=1,delta=2
    48                           	psect	text20,local,class=CODE,merge=1,delta=2
    49                           	psect	text21,local,class=CODE,merge=1,delta=2
    50                           	psect	text22,local,class=CODE,merge=1,delta=2
    51                           	psect	text23,local,class=CODE,merge=1,delta=2
    52                           	psect	text24,local,class=CODE,merge=1,delta=2
    53                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    54                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    55                           	psect	text27,local,class=CODE,merge=1,delta=2
    56                           	psect	text28,local,class=CODE,merge=1,delta=2
    57                           	psect	text29,local,class=CODE,merge=1,delta=2
    58                           	psect	text30,local,class=CODE,merge=1,delta=2
    59                           	psect	text31,local,class=CODE,merge=1,delta=2
    60                           	psect	text32,local,class=CODE,merge=1,delta=2
    61                           	psect	text33,local,class=CODE,merge=1,delta=2
    62                           	psect	text34,local,class=CODE,merge=1,delta=2
    63                           	psect	text35,local,class=CODE,merge=1,delta=2
    64                           	psect	text36,local,class=CODE,merge=1,delta=2
    65                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    66                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    67                           	dabs	1,0x7E,2
    68     0000                     
    69                           ; Version 2.40
    70                           ; Generated 17/11/2021 GMT
    71                           ; 
    72                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    73                           ; All rights reserved.
    74                           ; 
    75                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    76                           ; 
    77                           ; Redistribution and use in source and binary forms, with or without modification, are
    78                           ; permitted provided that the following conditions are met:
    79                           ; 
    80                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    81                           ;        conditions and the following disclaimer.
    82                           ; 
    83                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    84                           ;        of conditions and the following disclaimer in the documentation and/or other
    85                           ;        materials provided with the distribution. Publication is not required when
    86                           ;        this file is used in an embedded application.
    87                           ; 
    88                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    89                           ;        software without specific prior written permission.
    90                           ; 
    91                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    92                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    93                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    94                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    95                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    96                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    97                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    98                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    99                           ; 
   100                           ; 
   101                           ; Code-generator required, PIC16F1827 Definitions
   102                           ; 
   103                           ; SFR Addresses
   104     0000                     	;# 
   105     0001                     	;# 
   106     0002                     	;# 
   107     0003                     	;# 
   108     0004                     	;# 
   109     0005                     	;# 
   110     0006                     	;# 
   111     0007                     	;# 
   112     0008                     	;# 
   113     0009                     	;# 
   114     000A                     	;# 
   115     000B                     	;# 
   116     000C                     	;# 
   117     000D                     	;# 
   118     0011                     	;# 
   119     0012                     	;# 
   120     0013                     	;# 
   121     0014                     	;# 
   122     0015                     	;# 
   123     0016                     	;# 
   124     0016                     	;# 
   125     0017                     	;# 
   126     0018                     	;# 
   127     0019                     	;# 
   128     001A                     	;# 
   129     001B                     	;# 
   130     001C                     	;# 
   131     001E                     	;# 
   132     001F                     	;# 
   133     008C                     	;# 
   134     008D                     	;# 
   135     0091                     	;# 
   136     0092                     	;# 
   137     0093                     	;# 
   138     0094                     	;# 
   139     0095                     	;# 
   140     0096                     	;# 
   141     0097                     	;# 
   142     0098                     	;# 
   143     0099                     	;# 
   144     009A                     	;# 
   145     009B                     	;# 
   146     009B                     	;# 
   147     009C                     	;# 
   148     009D                     	;# 
   149     009E                     	;# 
   150     010C                     	;# 
   151     010D                     	;# 
   152     0111                     	;# 
   153     0112                     	;# 
   154     0113                     	;# 
   155     0114                     	;# 
   156     0115                     	;# 
   157     0116                     	;# 
   158     0117                     	;# 
   159     0118                     	;# 
   160     0119                     	;# 
   161     011A                     	;# 
   162     011B                     	;# 
   163     011D                     	;# 
   164     011E                     	;# 
   165     018C                     	;# 
   166     018D                     	;# 
   167     0191                     	;# 
   168     0191                     	;# 
   169     0192                     	;# 
   170     0193                     	;# 
   171     0193                     	;# 
   172     0193                     	;# 
   173     0194                     	;# 
   174     0195                     	;# 
   175     0196                     	;# 
   176     0199                     	;# 
   177     019A                     	;# 
   178     019B                     	;# 
   179     019B                     	;# 
   180     019B                     	;# 
   181     019B                     	;# 
   182     019C                     	;# 
   183     019C                     	;# 
   184     019D                     	;# 
   185     019E                     	;# 
   186     019F                     	;# 
   187     020C                     	;# 
   188     020D                     	;# 
   189     0211                     	;# 
   190     0211                     	;# 
   191     0212                     	;# 
   192     0212                     	;# 
   193     0213                     	;# 
   194     0213                     	;# 
   195     0214                     	;# 
   196     0214                     	;# 
   197     0215                     	;# 
   198     0215                     	;# 
   199     0215                     	;# 
   200     0216                     	;# 
   201     0216                     	;# 
   202     0217                     	;# 
   203     0217                     	;# 
   204     0219                     	;# 
   205     021A                     	;# 
   206     021B                     	;# 
   207     021C                     	;# 
   208     021D                     	;# 
   209     021E                     	;# 
   210     021F                     	;# 
   211     0291                     	;# 
   212     0291                     	;# 
   213     0292                     	;# 
   214     0293                     	;# 
   215     0294                     	;# 
   216     0295                     	;# 
   217     0295                     	;# 
   218     0296                     	;# 
   219     0298                     	;# 
   220     0298                     	;# 
   221     0299                     	;# 
   222     029A                     	;# 
   223     029B                     	;# 
   224     029C                     	;# 
   225     029C                     	;# 
   226     029D                     	;# 
   227     029E                     	;# 
   228     029E                     	;# 
   229     0311                     	;# 
   230     0311                     	;# 
   231     0312                     	;# 
   232     0313                     	;# 
   233     0318                     	;# 
   234     0318                     	;# 
   235     0319                     	;# 
   236     031A                     	;# 
   237     0394                     	;# 
   238     0395                     	;# 
   239     0396                     	;# 
   240     039A                     	;# 
   241     039C                     	;# 
   242     039D                     	;# 
   243     039E                     	;# 
   244     039F                     	;# 
   245     0415                     	;# 
   246     0416                     	;# 
   247     0417                     	;# 
   248     041C                     	;# 
   249     041D                     	;# 
   250     041E                     	;# 
   251     0FE4                     	;# 
   252     0FE5                     	;# 
   253     0FE6                     	;# 
   254     0FE7                     	;# 
   255     0FE8                     	;# 
   256     0FE9                     	;# 
   257     0FEA                     	;# 
   258     0FEB                     	;# 
   259     0FED                     	;# 
   260     0FEE                     	;# 
   261     0FEF                     	;# 
   262     0000                     	;# 
   263     0001                     	;# 
   264     0002                     	;# 
   265     0003                     	;# 
   266     0004                     	;# 
   267     0005                     	;# 
   268     0006                     	;# 
   269     0007                     	;# 
   270     0008                     	;# 
   271     0009                     	;# 
   272     000A                     	;# 
   273     000B                     	;# 
   274     000C                     	;# 
   275     000D                     	;# 
   276     0011                     	;# 
   277     0012                     	;# 
   278     0013                     	;# 
   279     0014                     	;# 
   280     0015                     	;# 
   281     0016                     	;# 
   282     0016                     	;# 
   283     0017                     	;# 
   284     0018                     	;# 
   285     0019                     	;# 
   286     001A                     	;# 
   287     001B                     	;# 
   288     001C                     	;# 
   289     001E                     	;# 
   290     001F                     	;# 
   291     008C                     	;# 
   292     008D                     	;# 
   293     0091                     	;# 
   294     0092                     	;# 
   295     0093                     	;# 
   296     0094                     	;# 
   297     0095                     	;# 
   298     0096                     	;# 
   299     0097                     	;# 
   300     0098                     	;# 
   301     0099                     	;# 
   302     009A                     	;# 
   303     009B                     	;# 
   304     009B                     	;# 
   305     009C                     	;# 
   306     009D                     	;# 
   307     009E                     	;# 
   308     010C                     	;# 
   309     010D                     	;# 
   310     0111                     	;# 
   311     0112                     	;# 
   312     0113                     	;# 
   313     0114                     	;# 
   314     0115                     	;# 
   315     0116                     	;# 
   316     0117                     	;# 
   317     0118                     	;# 
   318     0119                     	;# 
   319     011A                     	;# 
   320     011B                     	;# 
   321     011D                     	;# 
   322     011E                     	;# 
   323     018C                     	;# 
   324     018D                     	;# 
   325     0191                     	;# 
   326     0191                     	;# 
   327     0192                     	;# 
   328     0193                     	;# 
   329     0193                     	;# 
   330     0193                     	;# 
   331     0194                     	;# 
   332     0195                     	;# 
   333     0196                     	;# 
   334     0199                     	;# 
   335     019A                     	;# 
   336     019B                     	;# 
   337     019B                     	;# 
   338     019B                     	;# 
   339     019B                     	;# 
   340     019C                     	;# 
   341     019C                     	;# 
   342     019D                     	;# 
   343     019E                     	;# 
   344     019F                     	;# 
   345     020C                     	;# 
   346     020D                     	;# 
   347     0211                     	;# 
   348     0211                     	;# 
   349     0212                     	;# 
   350     0212                     	;# 
   351     0213                     	;# 
   352     0213                     	;# 
   353     0214                     	;# 
   354     0214                     	;# 
   355     0215                     	;# 
   356     0215                     	;# 
   357     0215                     	;# 
   358     0216                     	;# 
   359     0216                     	;# 
   360     0217                     	;# 
   361     0217                     	;# 
   362     0219                     	;# 
   363     021A                     	;# 
   364     021B                     	;# 
   365     021C                     	;# 
   366     021D                     	;# 
   367     021E                     	;# 
   368     021F                     	;# 
   369     0291                     	;# 
   370     0291                     	;# 
   371     0292                     	;# 
   372     0293                     	;# 
   373     0294                     	;# 
   374     0295                     	;# 
   375     0295                     	;# 
   376     0296                     	;# 
   377     0298                     	;# 
   378     0298                     	;# 
   379     0299                     	;# 
   380     029A                     	;# 
   381     029B                     	;# 
   382     029C                     	;# 
   383     029C                     	;# 
   384     029D                     	;# 
   385     029E                     	;# 
   386     029E                     	;# 
   387     0311                     	;# 
   388     0311                     	;# 
   389     0312                     	;# 
   390     0313                     	;# 
   391     0318                     	;# 
   392     0318                     	;# 
   393     0319                     	;# 
   394     031A                     	;# 
   395     0394                     	;# 
   396     0395                     	;# 
   397     0396                     	;# 
   398     039A                     	;# 
   399     039C                     	;# 
   400     039D                     	;# 
   401     039E                     	;# 
   402     039F                     	;# 
   403     0415                     	;# 
   404     0416                     	;# 
   405     0417                     	;# 
   406     041C                     	;# 
   407     041D                     	;# 
   408     041E                     	;# 
   409     0FE4                     	;# 
   410     0FE5                     	;# 
   411     0FE6                     	;# 
   412     0FE7                     	;# 
   413     0FE8                     	;# 
   414     0FE9                     	;# 
   415     0FEA                     	;# 
   416     0FEB                     	;# 
   417     0FED                     	;# 
   418     0FEE                     	;# 
   419     0FEF                     	;# 
   420     0000                     	;# 
   421     0001                     	;# 
   422     0002                     	;# 
   423     0003                     	;# 
   424     0004                     	;# 
   425     0005                     	;# 
   426     0006                     	;# 
   427     0007                     	;# 
   428     0008                     	;# 
   429     0009                     	;# 
   430     000A                     	;# 
   431     000B                     	;# 
   432     000C                     	;# 
   433     000D                     	;# 
   434     0011                     	;# 
   435     0012                     	;# 
   436     0013                     	;# 
   437     0014                     	;# 
   438     0015                     	;# 
   439     0016                     	;# 
   440     0016                     	;# 
   441     0017                     	;# 
   442     0018                     	;# 
   443     0019                     	;# 
   444     001A                     	;# 
   445     001B                     	;# 
   446     001C                     	;# 
   447     001E                     	;# 
   448     001F                     	;# 
   449     008C                     	;# 
   450     008D                     	;# 
   451     0091                     	;# 
   452     0092                     	;# 
   453     0093                     	;# 
   454     0094                     	;# 
   455     0095                     	;# 
   456     0096                     	;# 
   457     0097                     	;# 
   458     0098                     	;# 
   459     0099                     	;# 
   460     009A                     	;# 
   461     009B                     	;# 
   462     009B                     	;# 
   463     009C                     	;# 
   464     009D                     	;# 
   465     009E                     	;# 
   466     010C                     	;# 
   467     010D                     	;# 
   468     0111                     	;# 
   469     0112                     	;# 
   470     0113                     	;# 
   471     0114                     	;# 
   472     0115                     	;# 
   473     0116                     	;# 
   474     0117                     	;# 
   475     0118                     	;# 
   476     0119                     	;# 
   477     011A                     	;# 
   478     011B                     	;# 
   479     011D                     	;# 
   480     011E                     	;# 
   481     018C                     	;# 
   482     018D                     	;# 
   483     0191                     	;# 
   484     0191                     	;# 
   485     0192                     	;# 
   486     0193                     	;# 
   487     0193                     	;# 
   488     0193                     	;# 
   489     0194                     	;# 
   490     0195                     	;# 
   491     0196                     	;# 
   492     0199                     	;# 
   493     019A                     	;# 
   494     019B                     	;# 
   495     019B                     	;# 
   496     019B                     	;# 
   497     019B                     	;# 
   498     019C                     	;# 
   499     019C                     	;# 
   500     019D                     	;# 
   501     019E                     	;# 
   502     019F                     	;# 
   503     020C                     	;# 
   504     020D                     	;# 
   505     0211                     	;# 
   506     0211                     	;# 
   507     0212                     	;# 
   508     0212                     	;# 
   509     0213                     	;# 
   510     0213                     	;# 
   511     0214                     	;# 
   512     0214                     	;# 
   513     0215                     	;# 
   514     0215                     	;# 
   515     0215                     	;# 
   516     0216                     	;# 
   517     0216                     	;# 
   518     0217                     	;# 
   519     0217                     	;# 
   520     0219                     	;# 
   521     021A                     	;# 
   522     021B                     	;# 
   523     021C                     	;# 
   524     021D                     	;# 
   525     021E                     	;# 
   526     021F                     	;# 
   527     0291                     	;# 
   528     0291                     	;# 
   529     0292                     	;# 
   530     0293                     	;# 
   531     0294                     	;# 
   532     0295                     	;# 
   533     0295                     	;# 
   534     0296                     	;# 
   535     0298                     	;# 
   536     0298                     	;# 
   537     0299                     	;# 
   538     029A                     	;# 
   539     029B                     	;# 
   540     029C                     	;# 
   541     029C                     	;# 
   542     029D                     	;# 
   543     029E                     	;# 
   544     029E                     	;# 
   545     0311                     	;# 
   546     0311                     	;# 
   547     0312                     	;# 
   548     0313                     	;# 
   549     0318                     	;# 
   550     0318                     	;# 
   551     0319                     	;# 
   552     031A                     	;# 
   553     0394                     	;# 
   554     0395                     	;# 
   555     0396                     	;# 
   556     039A                     	;# 
   557     039C                     	;# 
   558     039D                     	;# 
   559     039E                     	;# 
   560     039F                     	;# 
   561     0415                     	;# 
   562     0416                     	;# 
   563     0417                     	;# 
   564     041C                     	;# 
   565     041D                     	;# 
   566     041E                     	;# 
   567     0FE4                     	;# 
   568     0FE5                     	;# 
   569     0FE6                     	;# 
   570     0FE7                     	;# 
   571     0FE8                     	;# 
   572     0FE9                     	;# 
   573     0FEA                     	;# 
   574     0FEB                     	;# 
   575     0FED                     	;# 
   576     0FEE                     	;# 
   577     0FEF                     	;# 
   578     0000                     	;# 
   579     0001                     	;# 
   580     0002                     	;# 
   581     0003                     	;# 
   582     0004                     	;# 
   583     0005                     	;# 
   584     0006                     	;# 
   585     0007                     	;# 
   586     0008                     	;# 
   587     0009                     	;# 
   588     000A                     	;# 
   589     000B                     	;# 
   590     000C                     	;# 
   591     000D                     	;# 
   592     0011                     	;# 
   593     0012                     	;# 
   594     0013                     	;# 
   595     0014                     	;# 
   596     0015                     	;# 
   597     0016                     	;# 
   598     0016                     	;# 
   599     0017                     	;# 
   600     0018                     	;# 
   601     0019                     	;# 
   602     001A                     	;# 
   603     001B                     	;# 
   604     001C                     	;# 
   605     001E                     	;# 
   606     001F                     	;# 
   607     008C                     	;# 
   608     008D                     	;# 
   609     0091                     	;# 
   610     0092                     	;# 
   611     0093                     	;# 
   612     0094                     	;# 
   613     0095                     	;# 
   614     0096                     	;# 
   615     0097                     	;# 
   616     0098                     	;# 
   617     0099                     	;# 
   618     009A                     	;# 
   619     009B                     	;# 
   620     009B                     	;# 
   621     009C                     	;# 
   622     009D                     	;# 
   623     009E                     	;# 
   624     010C                     	;# 
   625     010D                     	;# 
   626     0111                     	;# 
   627     0112                     	;# 
   628     0113                     	;# 
   629     0114                     	;# 
   630     0115                     	;# 
   631     0116                     	;# 
   632     0117                     	;# 
   633     0118                     	;# 
   634     0119                     	;# 
   635     011A                     	;# 
   636     011B                     	;# 
   637     011D                     	;# 
   638     011E                     	;# 
   639     018C                     	;# 
   640     018D                     	;# 
   641     0191                     	;# 
   642     0191                     	;# 
   643     0192                     	;# 
   644     0193                     	;# 
   645     0193                     	;# 
   646     0193                     	;# 
   647     0194                     	;# 
   648     0195                     	;# 
   649     0196                     	;# 
   650     0199                     	;# 
   651     019A                     	;# 
   652     019B                     	;# 
   653     019B                     	;# 
   654     019B                     	;# 
   655     019B                     	;# 
   656     019C                     	;# 
   657     019C                     	;# 
   658     019D                     	;# 
   659     019E                     	;# 
   660     019F                     	;# 
   661     020C                     	;# 
   662     020D                     	;# 
   663     0211                     	;# 
   664     0211                     	;# 
   665     0212                     	;# 
   666     0212                     	;# 
   667     0213                     	;# 
   668     0213                     	;# 
   669     0214                     	;# 
   670     0214                     	;# 
   671     0215                     	;# 
   672     0215                     	;# 
   673     0215                     	;# 
   674     0216                     	;# 
   675     0216                     	;# 
   676     0217                     	;# 
   677     0217                     	;# 
   678     0219                     	;# 
   679     021A                     	;# 
   680     021B                     	;# 
   681     021C                     	;# 
   682     021D                     	;# 
   683     021E                     	;# 
   684     021F                     	;# 
   685     0291                     	;# 
   686     0291                     	;# 
   687     0292                     	;# 
   688     0293                     	;# 
   689     0294                     	;# 
   690     0295                     	;# 
   691     0295                     	;# 
   692     0296                     	;# 
   693     0298                     	;# 
   694     0298                     	;# 
   695     0299                     	;# 
   696     029A                     	;# 
   697     029B                     	;# 
   698     029C                     	;# 
   699     029C                     	;# 
   700     029D                     	;# 
   701     029E                     	;# 
   702     029E                     	;# 
   703     0311                     	;# 
   704     0311                     	;# 
   705     0312                     	;# 
   706     0313                     	;# 
   707     0318                     	;# 
   708     0318                     	;# 
   709     0319                     	;# 
   710     031A                     	;# 
   711     0394                     	;# 
   712     0395                     	;# 
   713     0396                     	;# 
   714     039A                     	;# 
   715     039C                     	;# 
   716     039D                     	;# 
   717     039E                     	;# 
   718     039F                     	;# 
   719     0415                     	;# 
   720     0416                     	;# 
   721     0417                     	;# 
   722     041C                     	;# 
   723     041D                     	;# 
   724     041E                     	;# 
   725     0FE4                     	;# 
   726     0FE5                     	;# 
   727     0FE6                     	;# 
   728     0FE7                     	;# 
   729     0FE8                     	;# 
   730     0FE9                     	;# 
   731     0FEA                     	;# 
   732     0FEB                     	;# 
   733     0FED                     	;# 
   734     0FEE                     	;# 
   735     0FEF                     	;# 
   736     0000                     	;# 
   737     0001                     	;# 
   738     0002                     	;# 
   739     0003                     	;# 
   740     0004                     	;# 
   741     0005                     	;# 
   742     0006                     	;# 
   743     0007                     	;# 
   744     0008                     	;# 
   745     0009                     	;# 
   746     000A                     	;# 
   747     000B                     	;# 
   748     000C                     	;# 
   749     000D                     	;# 
   750     0011                     	;# 
   751     0012                     	;# 
   752     0013                     	;# 
   753     0014                     	;# 
   754     0015                     	;# 
   755     0016                     	;# 
   756     0016                     	;# 
   757     0017                     	;# 
   758     0018                     	;# 
   759     0019                     	;# 
   760     001A                     	;# 
   761     001B                     	;# 
   762     001C                     	;# 
   763     001E                     	;# 
   764     001F                     	;# 
   765     008C                     	;# 
   766     008D                     	;# 
   767     0091                     	;# 
   768     0092                     	;# 
   769     0093                     	;# 
   770     0094                     	;# 
   771     0095                     	;# 
   772     0096                     	;# 
   773     0097                     	;# 
   774     0098                     	;# 
   775     0099                     	;# 
   776     009A                     	;# 
   777     009B                     	;# 
   778     009B                     	;# 
   779     009C                     	;# 
   780     009D                     	;# 
   781     009E                     	;# 
   782     010C                     	;# 
   783     010D                     	;# 
   784     0111                     	;# 
   785     0112                     	;# 
   786     0113                     	;# 
   787     0114                     	;# 
   788     0115                     	;# 
   789     0116                     	;# 
   790     0117                     	;# 
   791     0118                     	;# 
   792     0119                     	;# 
   793     011A                     	;# 
   794     011B                     	;# 
   795     011D                     	;# 
   796     011E                     	;# 
   797     018C                     	;# 
   798     018D                     	;# 
   799     0191                     	;# 
   800     0191                     	;# 
   801     0192                     	;# 
   802     0193                     	;# 
   803     0193                     	;# 
   804     0193                     	;# 
   805     0194                     	;# 
   806     0195                     	;# 
   807     0196                     	;# 
   808     0199                     	;# 
   809     019A                     	;# 
   810     019B                     	;# 
   811     019B                     	;# 
   812     019B                     	;# 
   813     019B                     	;# 
   814     019C                     	;# 
   815     019C                     	;# 
   816     019D                     	;# 
   817     019E                     	;# 
   818     019F                     	;# 
   819     020C                     	;# 
   820     020D                     	;# 
   821     0211                     	;# 
   822     0211                     	;# 
   823     0212                     	;# 
   824     0212                     	;# 
   825     0213                     	;# 
   826     0213                     	;# 
   827     0214                     	;# 
   828     0214                     	;# 
   829     0215                     	;# 
   830     0215                     	;# 
   831     0215                     	;# 
   832     0216                     	;# 
   833     0216                     	;# 
   834     0217                     	;# 
   835     0217                     	;# 
   836     0219                     	;# 
   837     021A                     	;# 
   838     021B                     	;# 
   839     021C                     	;# 
   840     021D                     	;# 
   841     021E                     	;# 
   842     021F                     	;# 
   843     0291                     	;# 
   844     0291                     	;# 
   845     0292                     	;# 
   846     0293                     	;# 
   847     0294                     	;# 
   848     0295                     	;# 
   849     0295                     	;# 
   850     0296                     	;# 
   851     0298                     	;# 
   852     0298                     	;# 
   853     0299                     	;# 
   854     029A                     	;# 
   855     029B                     	;# 
   856     029C                     	;# 
   857     029C                     	;# 
   858     029D                     	;# 
   859     029E                     	;# 
   860     029E                     	;# 
   861     0311                     	;# 
   862     0311                     	;# 
   863     0312                     	;# 
   864     0313                     	;# 
   865     0318                     	;# 
   866     0318                     	;# 
   867     0319                     	;# 
   868     031A                     	;# 
   869     0394                     	;# 
   870     0395                     	;# 
   871     0396                     	;# 
   872     039A                     	;# 
   873     039C                     	;# 
   874     039D                     	;# 
   875     039E                     	;# 
   876     039F                     	;# 
   877     0415                     	;# 
   878     0416                     	;# 
   879     0417                     	;# 
   880     041C                     	;# 
   881     041D                     	;# 
   882     041E                     	;# 
   883     0FE4                     	;# 
   884     0FE5                     	;# 
   885     0FE6                     	;# 
   886     0FE7                     	;# 
   887     0FE8                     	;# 
   888     0FE9                     	;# 
   889     0FEA                     	;# 
   890     0FEB                     	;# 
   891     0FED                     	;# 
   892     0FEE                     	;# 
   893     0FEF                     	;# 
   894     0000                     	;# 
   895     0001                     	;# 
   896     0002                     	;# 
   897     0003                     	;# 
   898     0004                     	;# 
   899     0005                     	;# 
   900     0006                     	;# 
   901     0007                     	;# 
   902     0008                     	;# 
   903     0009                     	;# 
   904     000A                     	;# 
   905     000B                     	;# 
   906     000C                     	;# 
   907     000D                     	;# 
   908     0011                     	;# 
   909     0012                     	;# 
   910     0013                     	;# 
   911     0014                     	;# 
   912     0015                     	;# 
   913     0016                     	;# 
   914     0016                     	;# 
   915     0017                     	;# 
   916     0018                     	;# 
   917     0019                     	;# 
   918     001A                     	;# 
   919     001B                     	;# 
   920     001C                     	;# 
   921     001E                     	;# 
   922     001F                     	;# 
   923     008C                     	;# 
   924     008D                     	;# 
   925     0091                     	;# 
   926     0092                     	;# 
   927     0093                     	;# 
   928     0094                     	;# 
   929     0095                     	;# 
   930     0096                     	;# 
   931     0097                     	;# 
   932     0098                     	;# 
   933     0099                     	;# 
   934     009A                     	;# 
   935     009B                     	;# 
   936     009B                     	;# 
   937     009C                     	;# 
   938     009D                     	;# 
   939     009E                     	;# 
   940     010C                     	;# 
   941     010D                     	;# 
   942     0111                     	;# 
   943     0112                     	;# 
   944     0113                     	;# 
   945     0114                     	;# 
   946     0115                     	;# 
   947     0116                     	;# 
   948     0117                     	;# 
   949     0118                     	;# 
   950     0119                     	;# 
   951     011A                     	;# 
   952     011B                     	;# 
   953     011D                     	;# 
   954     011E                     	;# 
   955     018C                     	;# 
   956     018D                     	;# 
   957     0191                     	;# 
   958     0191                     	;# 
   959     0192                     	;# 
   960     0193                     	;# 
   961     0193                     	;# 
   962     0193                     	;# 
   963     0194                     	;# 
   964     0195                     	;# 
   965     0196                     	;# 
   966     0199                     	;# 
   967     019A                     	;# 
   968     019B                     	;# 
   969     019B                     	;# 
   970     019B                     	;# 
   971     019B                     	;# 
   972     019C                     	;# 
   973     019C                     	;# 
   974     019D                     	;# 
   975     019E                     	;# 
   976     019F                     	;# 
   977     020C                     	;# 
   978     020D                     	;# 
   979     0211                     	;# 
   980     0211                     	;# 
   981     0212                     	;# 
   982     0212                     	;# 
   983     0213                     	;# 
   984     0213                     	;# 
   985     0214                     	;# 
   986     0214                     	;# 
   987     0215                     	;# 
   988     0215                     	;# 
   989     0215                     	;# 
   990     0216                     	;# 
   991     0216                     	;# 
   992     0217                     	;# 
   993     0217                     	;# 
   994     0219                     	;# 
   995     021A                     	;# 
   996     021B                     	;# 
   997     021C                     	;# 
   998     021D                     	;# 
   999     021E                     	;# 
  1000     021F                     	;# 
  1001     0291                     	;# 
  1002     0291                     	;# 
  1003     0292                     	;# 
  1004     0293                     	;# 
  1005     0294                     	;# 
  1006     0295                     	;# 
  1007     0295                     	;# 
  1008     0296                     	;# 
  1009     0298                     	;# 
  1010     0298                     	;# 
  1011     0299                     	;# 
  1012     029A                     	;# 
  1013     029B                     	;# 
  1014     029C                     	;# 
  1015     029C                     	;# 
  1016     029D                     	;# 
  1017     029E                     	;# 
  1018     029E                     	;# 
  1019     0311                     	;# 
  1020     0311                     	;# 
  1021     0312                     	;# 
  1022     0313                     	;# 
  1023     0318                     	;# 
  1024     0318                     	;# 
  1025     0319                     	;# 
  1026     031A                     	;# 
  1027     0394                     	;# 
  1028     0395                     	;# 
  1029     0396                     	;# 
  1030     039A                     	;# 
  1031     039C                     	;# 
  1032     039D                     	;# 
  1033     039E                     	;# 
  1034     039F                     	;# 
  1035     0415                     	;# 
  1036     0416                     	;# 
  1037     0417                     	;# 
  1038     041C                     	;# 
  1039     041D                     	;# 
  1040     041E                     	;# 
  1041     0FE4                     	;# 
  1042     0FE5                     	;# 
  1043     0FE6                     	;# 
  1044     0FE7                     	;# 
  1045     0FE8                     	;# 
  1046     0FE9                     	;# 
  1047     0FEA                     	;# 
  1048     0FEB                     	;# 
  1049     0FED                     	;# 
  1050     0FEE                     	;# 
  1051     0FEF                     	;# 
  1052     0000                     	;# 
  1053     0001                     	;# 
  1054     0002                     	;# 
  1055     0003                     	;# 
  1056     0004                     	;# 
  1057     0005                     	;# 
  1058     0006                     	;# 
  1059     0007                     	;# 
  1060     0008                     	;# 
  1061     0009                     	;# 
  1062     000A                     	;# 
  1063     000B                     	;# 
  1064     000C                     	;# 
  1065     000D                     	;# 
  1066     0011                     	;# 
  1067     0012                     	;# 
  1068     0013                     	;# 
  1069     0014                     	;# 
  1070     0015                     	;# 
  1071     0016                     	;# 
  1072     0016                     	;# 
  1073     0017                     	;# 
  1074     0018                     	;# 
  1075     0019                     	;# 
  1076     001A                     	;# 
  1077     001B                     	;# 
  1078     001C                     	;# 
  1079     001E                     	;# 
  1080     001F                     	;# 
  1081     008C                     	;# 
  1082     008D                     	;# 
  1083     0091                     	;# 
  1084     0092                     	;# 
  1085     0093                     	;# 
  1086     0094                     	;# 
  1087     0095                     	;# 
  1088     0096                     	;# 
  1089     0097                     	;# 
  1090     0098                     	;# 
  1091     0099                     	;# 
  1092     009A                     	;# 
  1093     009B                     	;# 
  1094     009B                     	;# 
  1095     009C                     	;# 
  1096     009D                     	;# 
  1097     009E                     	;# 
  1098     010C                     	;# 
  1099     010D                     	;# 
  1100     0111                     	;# 
  1101     0112                     	;# 
  1102     0113                     	;# 
  1103     0114                     	;# 
  1104     0115                     	;# 
  1105     0116                     	;# 
  1106     0117                     	;# 
  1107     0118                     	;# 
  1108     0119                     	;# 
  1109     011A                     	;# 
  1110     011B                     	;# 
  1111     011D                     	;# 
  1112     011E                     	;# 
  1113     018C                     	;# 
  1114     018D                     	;# 
  1115     0191                     	;# 
  1116     0191                     	;# 
  1117     0192                     	;# 
  1118     0193                     	;# 
  1119     0193                     	;# 
  1120     0193                     	;# 
  1121     0194                     	;# 
  1122     0195                     	;# 
  1123     0196                     	;# 
  1124     0199                     	;# 
  1125     019A                     	;# 
  1126     019B                     	;# 
  1127     019B                     	;# 
  1128     019B                     	;# 
  1129     019B                     	;# 
  1130     019C                     	;# 
  1131     019C                     	;# 
  1132     019D                     	;# 
  1133     019E                     	;# 
  1134     019F                     	;# 
  1135     020C                     	;# 
  1136     020D                     	;# 
  1137     0211                     	;# 
  1138     0211                     	;# 
  1139     0212                     	;# 
  1140     0212                     	;# 
  1141     0213                     	;# 
  1142     0213                     	;# 
  1143     0214                     	;# 
  1144     0214                     	;# 
  1145     0215                     	;# 
  1146     0215                     	;# 
  1147     0215                     	;# 
  1148     0216                     	;# 
  1149     0216                     	;# 
  1150     0217                     	;# 
  1151     0217                     	;# 
  1152     0219                     	;# 
  1153     021A                     	;# 
  1154     021B                     	;# 
  1155     021C                     	;# 
  1156     021D                     	;# 
  1157     021E                     	;# 
  1158     021F                     	;# 
  1159     0291                     	;# 
  1160     0291                     	;# 
  1161     0292                     	;# 
  1162     0293                     	;# 
  1163     0294                     	;# 
  1164     0295                     	;# 
  1165     0295                     	;# 
  1166     0296                     	;# 
  1167     0298                     	;# 
  1168     0298                     	;# 
  1169     0299                     	;# 
  1170     029A                     	;# 
  1171     029B                     	;# 
  1172     029C                     	;# 
  1173     029C                     	;# 
  1174     029D                     	;# 
  1175     029E                     	;# 
  1176     029E                     	;# 
  1177     0311                     	;# 
  1178     0311                     	;# 
  1179     0312                     	;# 
  1180     0313                     	;# 
  1181     0318                     	;# 
  1182     0318                     	;# 
  1183     0319                     	;# 
  1184     031A                     	;# 
  1185     0394                     	;# 
  1186     0395                     	;# 
  1187     0396                     	;# 
  1188     039A                     	;# 
  1189     039C                     	;# 
  1190     039D                     	;# 
  1191     039E                     	;# 
  1192     039F                     	;# 
  1193     0415                     	;# 
  1194     0416                     	;# 
  1195     0417                     	;# 
  1196     041C                     	;# 
  1197     041D                     	;# 
  1198     041E                     	;# 
  1199     0FE4                     	;# 
  1200     0FE5                     	;# 
  1201     0FE6                     	;# 
  1202     0FE7                     	;# 
  1203     0FE8                     	;# 
  1204     0FE9                     	;# 
  1205     0FEA                     	;# 
  1206     0FEB                     	;# 
  1207     0FED                     	;# 
  1208     0FEE                     	;# 
  1209     0FEF                     	;# 
  1210     0000                     	;# 
  1211     0001                     	;# 
  1212     0002                     	;# 
  1213     0003                     	;# 
  1214     0004                     	;# 
  1215     0005                     	;# 
  1216     0006                     	;# 
  1217     0007                     	;# 
  1218     0008                     	;# 
  1219     0009                     	;# 
  1220     000A                     	;# 
  1221     000B                     	;# 
  1222     000C                     	;# 
  1223     000D                     	;# 
  1224     0011                     	;# 
  1225     0012                     	;# 
  1226     0013                     	;# 
  1227     0014                     	;# 
  1228     0015                     	;# 
  1229     0016                     	;# 
  1230     0016                     	;# 
  1231     0017                     	;# 
  1232     0018                     	;# 
  1233     0019                     	;# 
  1234     001A                     	;# 
  1235     001B                     	;# 
  1236     001C                     	;# 
  1237     001E                     	;# 
  1238     001F                     	;# 
  1239     008C                     	;# 
  1240     008D                     	;# 
  1241     0091                     	;# 
  1242     0092                     	;# 
  1243     0093                     	;# 
  1244     0094                     	;# 
  1245     0095                     	;# 
  1246     0096                     	;# 
  1247     0097                     	;# 
  1248     0098                     	;# 
  1249     0099                     	;# 
  1250     009A                     	;# 
  1251     009B                     	;# 
  1252     009B                     	;# 
  1253     009C                     	;# 
  1254     009D                     	;# 
  1255     009E                     	;# 
  1256     010C                     	;# 
  1257     010D                     	;# 
  1258     0111                     	;# 
  1259     0112                     	;# 
  1260     0113                     	;# 
  1261     0114                     	;# 
  1262     0115                     	;# 
  1263     0116                     	;# 
  1264     0117                     	;# 
  1265     0118                     	;# 
  1266     0119                     	;# 
  1267     011A                     	;# 
  1268     011B                     	;# 
  1269     011D                     	;# 
  1270     011E                     	;# 
  1271     018C                     	;# 
  1272     018D                     	;# 
  1273     0191                     	;# 
  1274     0191                     	;# 
  1275     0192                     	;# 
  1276     0193                     	;# 
  1277     0193                     	;# 
  1278     0193                     	;# 
  1279     0194                     	;# 
  1280     0195                     	;# 
  1281     0196                     	;# 
  1282     0199                     	;# 
  1283     019A                     	;# 
  1284     019B                     	;# 
  1285     019B                     	;# 
  1286     019B                     	;# 
  1287     019B                     	;# 
  1288     019C                     	;# 
  1289     019C                     	;# 
  1290     019D                     	;# 
  1291     019E                     	;# 
  1292     019F                     	;# 
  1293     020C                     	;# 
  1294     020D                     	;# 
  1295     0211                     	;# 
  1296     0211                     	;# 
  1297     0212                     	;# 
  1298     0212                     	;# 
  1299     0213                     	;# 
  1300     0213                     	;# 
  1301     0214                     	;# 
  1302     0214                     	;# 
  1303     0215                     	;# 
  1304     0215                     	;# 
  1305     0215                     	;# 
  1306     0216                     	;# 
  1307     0216                     	;# 
  1308     0217                     	;# 
  1309     0217                     	;# 
  1310     0219                     	;# 
  1311     021A                     	;# 
  1312     021B                     	;# 
  1313     021C                     	;# 
  1314     021D                     	;# 
  1315     021E                     	;# 
  1316     021F                     	;# 
  1317     0291                     	;# 
  1318     0291                     	;# 
  1319     0292                     	;# 
  1320     0293                     	;# 
  1321     0294                     	;# 
  1322     0295                     	;# 
  1323     0295                     	;# 
  1324     0296                     	;# 
  1325     0298                     	;# 
  1326     0298                     	;# 
  1327     0299                     	;# 
  1328     029A                     	;# 
  1329     029B                     	;# 
  1330     029C                     	;# 
  1331     029C                     	;# 
  1332     029D                     	;# 
  1333     029E                     	;# 
  1334     029E                     	;# 
  1335     0311                     	;# 
  1336     0311                     	;# 
  1337     0312                     	;# 
  1338     0313                     	;# 
  1339     0318                     	;# 
  1340     0318                     	;# 
  1341     0319                     	;# 
  1342     031A                     	;# 
  1343     0394                     	;# 
  1344     0395                     	;# 
  1345     0396                     	;# 
  1346     039A                     	;# 
  1347     039C                     	;# 
  1348     039D                     	;# 
  1349     039E                     	;# 
  1350     039F                     	;# 
  1351     0415                     	;# 
  1352     0416                     	;# 
  1353     0417                     	;# 
  1354     041C                     	;# 
  1355     041D                     	;# 
  1356     041E                     	;# 
  1357     0FE4                     	;# 
  1358     0FE5                     	;# 
  1359     0FE6                     	;# 
  1360     0FE7                     	;# 
  1361     0FE8                     	;# 
  1362     0FE9                     	;# 
  1363     0FEA                     	;# 
  1364     0FEB                     	;# 
  1365     0FED                     	;# 
  1366     0FEE                     	;# 
  1367     0FEF                     	;# 
  1368     0000                     	;# 
  1369     0001                     	;# 
  1370     0002                     	;# 
  1371     0003                     	;# 
  1372     0004                     	;# 
  1373     0005                     	;# 
  1374     0006                     	;# 
  1375     0007                     	;# 
  1376     0008                     	;# 
  1377     0009                     	;# 
  1378     000A                     	;# 
  1379     000B                     	;# 
  1380     000C                     	;# 
  1381     000D                     	;# 
  1382     0011                     	;# 
  1383     0012                     	;# 
  1384     0013                     	;# 
  1385     0014                     	;# 
  1386     0015                     	;# 
  1387     0016                     	;# 
  1388     0016                     	;# 
  1389     0017                     	;# 
  1390     0018                     	;# 
  1391     0019                     	;# 
  1392     001A                     	;# 
  1393     001B                     	;# 
  1394     001C                     	;# 
  1395     001E                     	;# 
  1396     001F                     	;# 
  1397     008C                     	;# 
  1398     008D                     	;# 
  1399     0091                     	;# 
  1400     0092                     	;# 
  1401     0093                     	;# 
  1402     0094                     	;# 
  1403     0095                     	;# 
  1404     0096                     	;# 
  1405     0097                     	;# 
  1406     0098                     	;# 
  1407     0099                     	;# 
  1408     009A                     	;# 
  1409     009B                     	;# 
  1410     009B                     	;# 
  1411     009C                     	;# 
  1412     009D                     	;# 
  1413     009E                     	;# 
  1414     010C                     	;# 
  1415     010D                     	;# 
  1416     0111                     	;# 
  1417     0112                     	;# 
  1418     0113                     	;# 
  1419     0114                     	;# 
  1420     0115                     	;# 
  1421     0116                     	;# 
  1422     0117                     	;# 
  1423     0118                     	;# 
  1424     0119                     	;# 
  1425     011A                     	;# 
  1426     011B                     	;# 
  1427     011D                     	;# 
  1428     011E                     	;# 
  1429     018C                     	;# 
  1430     018D                     	;# 
  1431     0191                     	;# 
  1432     0191                     	;# 
  1433     0192                     	;# 
  1434     0193                     	;# 
  1435     0193                     	;# 
  1436     0193                     	;# 
  1437     0194                     	;# 
  1438     0195                     	;# 
  1439     0196                     	;# 
  1440     0199                     	;# 
  1441     019A                     	;# 
  1442     019B                     	;# 
  1443     019B                     	;# 
  1444     019B                     	;# 
  1445     019B                     	;# 
  1446     019C                     	;# 
  1447     019C                     	;# 
  1448     019D                     	;# 
  1449     019E                     	;# 
  1450     019F                     	;# 
  1451     020C                     	;# 
  1452     020D                     	;# 
  1453     0211                     	;# 
  1454     0211                     	;# 
  1455     0212                     	;# 
  1456     0212                     	;# 
  1457     0213                     	;# 
  1458     0213                     	;# 
  1459     0214                     	;# 
  1460     0214                     	;# 
  1461     0215                     	;# 
  1462     0215                     	;# 
  1463     0215                     	;# 
  1464     0216                     	;# 
  1465     0216                     	;# 
  1466     0217                     	;# 
  1467     0217                     	;# 
  1468     0219                     	;# 
  1469     021A                     	;# 
  1470     021B                     	;# 
  1471     021C                     	;# 
  1472     021D                     	;# 
  1473     021E                     	;# 
  1474     021F                     	;# 
  1475     0291                     	;# 
  1476     0291                     	;# 
  1477     0292                     	;# 
  1478     0293                     	;# 
  1479     0294                     	;# 
  1480     0295                     	;# 
  1481     0295                     	;# 
  1482     0296                     	;# 
  1483     0298                     	;# 
  1484     0298                     	;# 
  1485     0299                     	;# 
  1486     029A                     	;# 
  1487     029B                     	;# 
  1488     029C                     	;# 
  1489     029C                     	;# 
  1490     029D                     	;# 
  1491     029E                     	;# 
  1492     029E                     	;# 
  1493     0311                     	;# 
  1494     0311                     	;# 
  1495     0312                     	;# 
  1496     0313                     	;# 
  1497     0318                     	;# 
  1498     0318                     	;# 
  1499     0319                     	;# 
  1500     031A                     	;# 
  1501     0394                     	;# 
  1502     0395                     	;# 
  1503     0396                     	;# 
  1504     039A                     	;# 
  1505     039C                     	;# 
  1506     039D                     	;# 
  1507     039E                     	;# 
  1508     039F                     	;# 
  1509     0415                     	;# 
  1510     0416                     	;# 
  1511     0417                     	;# 
  1512     041C                     	;# 
  1513     041D                     	;# 
  1514     041E                     	;# 
  1515     0FE4                     	;# 
  1516     0FE5                     	;# 
  1517     0FE6                     	;# 
  1518     0FE7                     	;# 
  1519     0FE8                     	;# 
  1520     0FE9                     	;# 
  1521     0FEA                     	;# 
  1522     0FEB                     	;# 
  1523     0FED                     	;# 
  1524     0FEE                     	;# 
  1525     0FEF                     	;# 
  1526     0000                     	;# 
  1527     0001                     	;# 
  1528     0002                     	;# 
  1529     0003                     	;# 
  1530     0004                     	;# 
  1531     0005                     	;# 
  1532     0006                     	;# 
  1533     0007                     	;# 
  1534     0008                     	;# 
  1535     0009                     	;# 
  1536     000A                     	;# 
  1537     000B                     	;# 
  1538     000C                     	;# 
  1539     000D                     	;# 
  1540     0011                     	;# 
  1541     0012                     	;# 
  1542     0013                     	;# 
  1543     0014                     	;# 
  1544     0015                     	;# 
  1545     0016                     	;# 
  1546     0016                     	;# 
  1547     0017                     	;# 
  1548     0018                     	;# 
  1549     0019                     	;# 
  1550     001A                     	;# 
  1551     001B                     	;# 
  1552     001C                     	;# 
  1553     001E                     	;# 
  1554     001F                     	;# 
  1555     008C                     	;# 
  1556     008D                     	;# 
  1557     0091                     	;# 
  1558     0092                     	;# 
  1559     0093                     	;# 
  1560     0094                     	;# 
  1561     0095                     	;# 
  1562     0096                     	;# 
  1563     0097                     	;# 
  1564     0098                     	;# 
  1565     0099                     	;# 
  1566     009A                     	;# 
  1567     009B                     	;# 
  1568     009B                     	;# 
  1569     009C                     	;# 
  1570     009D                     	;# 
  1571     009E                     	;# 
  1572     010C                     	;# 
  1573     010D                     	;# 
  1574     0111                     	;# 
  1575     0112                     	;# 
  1576     0113                     	;# 
  1577     0114                     	;# 
  1578     0115                     	;# 
  1579     0116                     	;# 
  1580     0117                     	;# 
  1581     0118                     	;# 
  1582     0119                     	;# 
  1583     011A                     	;# 
  1584     011B                     	;# 
  1585     011D                     	;# 
  1586     011E                     	;# 
  1587     018C                     	;# 
  1588     018D                     	;# 
  1589     0191                     	;# 
  1590     0191                     	;# 
  1591     0192                     	;# 
  1592     0193                     	;# 
  1593     0193                     	;# 
  1594     0193                     	;# 
  1595     0194                     	;# 
  1596     0195                     	;# 
  1597     0196                     	;# 
  1598     0199                     	;# 
  1599     019A                     	;# 
  1600     019B                     	;# 
  1601     019B                     	;# 
  1602     019B                     	;# 
  1603     019B                     	;# 
  1604     019C                     	;# 
  1605     019C                     	;# 
  1606     019D                     	;# 
  1607     019E                     	;# 
  1608     019F                     	;# 
  1609     020C                     	;# 
  1610     020D                     	;# 
  1611     0211                     	;# 
  1612     0211                     	;# 
  1613     0212                     	;# 
  1614     0212                     	;# 
  1615     0213                     	;# 
  1616     0213                     	;# 
  1617     0214                     	;# 
  1618     0214                     	;# 
  1619     0215                     	;# 
  1620     0215                     	;# 
  1621     0215                     	;# 
  1622     0216                     	;# 
  1623     0216                     	;# 
  1624     0217                     	;# 
  1625     0217                     	;# 
  1626     0219                     	;# 
  1627     021A                     	;# 
  1628     021B                     	;# 
  1629     021C                     	;# 
  1630     021D                     	;# 
  1631     021E                     	;# 
  1632     021F                     	;# 
  1633     0291                     	;# 
  1634     0291                     	;# 
  1635     0292                     	;# 
  1636     0293                     	;# 
  1637     0294                     	;# 
  1638     0295                     	;# 
  1639     0295                     	;# 
  1640     0296                     	;# 
  1641     0298                     	;# 
  1642     0298                     	;# 
  1643     0299                     	;# 
  1644     029A                     	;# 
  1645     029B                     	;# 
  1646     029C                     	;# 
  1647     029C                     	;# 
  1648     029D                     	;# 
  1649     029E                     	;# 
  1650     029E                     	;# 
  1651     0311                     	;# 
  1652     0311                     	;# 
  1653     0312                     	;# 
  1654     0313                     	;# 
  1655     0318                     	;# 
  1656     0318                     	;# 
  1657     0319                     	;# 
  1658     031A                     	;# 
  1659     0394                     	;# 
  1660     0395                     	;# 
  1661     0396                     	;# 
  1662     039A                     	;# 
  1663     039C                     	;# 
  1664     039D                     	;# 
  1665     039E                     	;# 
  1666     039F                     	;# 
  1667     0415                     	;# 
  1668     0416                     	;# 
  1669     0417                     	;# 
  1670     041C                     	;# 
  1671     041D                     	;# 
  1672     041E                     	;# 
  1673     0FE4                     	;# 
  1674     0FE5                     	;# 
  1675     0FE6                     	;# 
  1676     0FE7                     	;# 
  1677     0FE8                     	;# 
  1678     0FE9                     	;# 
  1679     0FEA                     	;# 
  1680     0FEB                     	;# 
  1681     0FED                     	;# 
  1682     0FEE                     	;# 
  1683     0FEF                     	;# 
  1684     0000                     	;# 
  1685     0001                     	;# 
  1686     0002                     	;# 
  1687     0003                     	;# 
  1688     0004                     	;# 
  1689     0005                     	;# 
  1690     0006                     	;# 
  1691     0007                     	;# 
  1692     0008                     	;# 
  1693     0009                     	;# 
  1694     000A                     	;# 
  1695     000B                     	;# 
  1696     000C                     	;# 
  1697     000D                     	;# 
  1698     0011                     	;# 
  1699     0012                     	;# 
  1700     0013                     	;# 
  1701     0014                     	;# 
  1702     0015                     	;# 
  1703     0016                     	;# 
  1704     0016                     	;# 
  1705     0017                     	;# 
  1706     0018                     	;# 
  1707     0019                     	;# 
  1708     001A                     	;# 
  1709     001B                     	;# 
  1710     001C                     	;# 
  1711     001E                     	;# 
  1712     001F                     	;# 
  1713     008C                     	;# 
  1714     008D                     	;# 
  1715     0091                     	;# 
  1716     0092                     	;# 
  1717     0093                     	;# 
  1718     0094                     	;# 
  1719     0095                     	;# 
  1720     0096                     	;# 
  1721     0097                     	;# 
  1722     0098                     	;# 
  1723     0099                     	;# 
  1724     009A                     	;# 
  1725     009B                     	;# 
  1726     009B                     	;# 
  1727     009C                     	;# 
  1728     009D                     	;# 
  1729     009E                     	;# 
  1730     010C                     	;# 
  1731     010D                     	;# 
  1732     0111                     	;# 
  1733     0112                     	;# 
  1734     0113                     	;# 
  1735     0114                     	;# 
  1736     0115                     	;# 
  1737     0116                     	;# 
  1738     0117                     	;# 
  1739     0118                     	;# 
  1740     0119                     	;# 
  1741     011A                     	;# 
  1742     011B                     	;# 
  1743     011D                     	;# 
  1744     011E                     	;# 
  1745     018C                     	;# 
  1746     018D                     	;# 
  1747     0191                     	;# 
  1748     0191                     	;# 
  1749     0192                     	;# 
  1750     0193                     	;# 
  1751     0193                     	;# 
  1752     0193                     	;# 
  1753     0194                     	;# 
  1754     0195                     	;# 
  1755     0196                     	;# 
  1756     0199                     	;# 
  1757     019A                     	;# 
  1758     019B                     	;# 
  1759     019B                     	;# 
  1760     019B                     	;# 
  1761     019B                     	;# 
  1762     019C                     	;# 
  1763     019C                     	;# 
  1764     019D                     	;# 
  1765     019E                     	;# 
  1766     019F                     	;# 
  1767     020C                     	;# 
  1768     020D                     	;# 
  1769     0211                     	;# 
  1770     0211                     	;# 
  1771     0212                     	;# 
  1772     0212                     	;# 
  1773     0213                     	;# 
  1774     0213                     	;# 
  1775     0214                     	;# 
  1776     0214                     	;# 
  1777     0215                     	;# 
  1778     0215                     	;# 
  1779     0215                     	;# 
  1780     0216                     	;# 
  1781     0216                     	;# 
  1782     0217                     	;# 
  1783     0217                     	;# 
  1784     0219                     	;# 
  1785     021A                     	;# 
  1786     021B                     	;# 
  1787     021C                     	;# 
  1788     021D                     	;# 
  1789     021E                     	;# 
  1790     021F                     	;# 
  1791     0291                     	;# 
  1792     0291                     	;# 
  1793     0292                     	;# 
  1794     0293                     	;# 
  1795     0294                     	;# 
  1796     0295                     	;# 
  1797     0295                     	;# 
  1798     0296                     	;# 
  1799     0298                     	;# 
  1800     0298                     	;# 
  1801     0299                     	;# 
  1802     029A                     	;# 
  1803     029B                     	;# 
  1804     029C                     	;# 
  1805     029C                     	;# 
  1806     029D                     	;# 
  1807     029E                     	;# 
  1808     029E                     	;# 
  1809     0311                     	;# 
  1810     0311                     	;# 
  1811     0312                     	;# 
  1812     0313                     	;# 
  1813     0318                     	;# 
  1814     0318                     	;# 
  1815     0319                     	;# 
  1816     031A                     	;# 
  1817     0394                     	;# 
  1818     0395                     	;# 
  1819     0396                     	;# 
  1820     039A                     	;# 
  1821     039C                     	;# 
  1822     039D                     	;# 
  1823     039E                     	;# 
  1824     039F                     	;# 
  1825     0415                     	;# 
  1826     0416                     	;# 
  1827     0417                     	;# 
  1828     041C                     	;# 
  1829     041D                     	;# 
  1830     041E                     	;# 
  1831     0FE4                     	;# 
  1832     0FE5                     	;# 
  1833     0FE6                     	;# 
  1834     0FE7                     	;# 
  1835     0FE8                     	;# 
  1836     0FE9                     	;# 
  1837     0FEA                     	;# 
  1838     0FEB                     	;# 
  1839     0FED                     	;# 
  1840     0FEE                     	;# 
  1841     0FEF                     	;# 
  1842     0000                     	;# 
  1843     0001                     	;# 
  1844     0002                     	;# 
  1845     0003                     	;# 
  1846     0004                     	;# 
  1847     0005                     	;# 
  1848     0006                     	;# 
  1849     0007                     	;# 
  1850     0008                     	;# 
  1851     0009                     	;# 
  1852     000A                     	;# 
  1853     000B                     	;# 
  1854     000C                     	;# 
  1855     000D                     	;# 
  1856     0011                     	;# 
  1857     0012                     	;# 
  1858     0013                     	;# 
  1859     0014                     	;# 
  1860     0015                     	;# 
  1861     0016                     	;# 
  1862     0016                     	;# 
  1863     0017                     	;# 
  1864     0018                     	;# 
  1865     0019                     	;# 
  1866     001A                     	;# 
  1867     001B                     	;# 
  1868     001C                     	;# 
  1869     001E                     	;# 
  1870     001F                     	;# 
  1871     008C                     	;# 
  1872     008D                     	;# 
  1873     0091                     	;# 
  1874     0092                     	;# 
  1875     0093                     	;# 
  1876     0094                     	;# 
  1877     0095                     	;# 
  1878     0096                     	;# 
  1879     0097                     	;# 
  1880     0098                     	;# 
  1881     0099                     	;# 
  1882     009A                     	;# 
  1883     009B                     	;# 
  1884     009B                     	;# 
  1885     009C                     	;# 
  1886     009D                     	;# 
  1887     009E                     	;# 
  1888     010C                     	;# 
  1889     010D                     	;# 
  1890     0111                     	;# 
  1891     0112                     	;# 
  1892     0113                     	;# 
  1893     0114                     	;# 
  1894     0115                     	;# 
  1895     0116                     	;# 
  1896     0117                     	;# 
  1897     0118                     	;# 
  1898     0119                     	;# 
  1899     011A                     	;# 
  1900     011B                     	;# 
  1901     011D                     	;# 
  1902     011E                     	;# 
  1903     018C                     	;# 
  1904     018D                     	;# 
  1905     0191                     	;# 
  1906     0191                     	;# 
  1907     0192                     	;# 
  1908     0193                     	;# 
  1909     0193                     	;# 
  1910     0193                     	;# 
  1911     0194                     	;# 
  1912     0195                     	;# 
  1913     0196                     	;# 
  1914     0199                     	;# 
  1915     019A                     	;# 
  1916     019B                     	;# 
  1917     019B                     	;# 
  1918     019B                     	;# 
  1919     019B                     	;# 
  1920     019C                     	;# 
  1921     019C                     	;# 
  1922     019D                     	;# 
  1923     019E                     	;# 
  1924     019F                     	;# 
  1925     020C                     	;# 
  1926     020D                     	;# 
  1927     0211                     	;# 
  1928     0211                     	;# 
  1929     0212                     	;# 
  1930     0212                     	;# 
  1931     0213                     	;# 
  1932     0213                     	;# 
  1933     0214                     	;# 
  1934     0214                     	;# 
  1935     0215                     	;# 
  1936     0215                     	;# 
  1937     0215                     	;# 
  1938     0216                     	;# 
  1939     0216                     	;# 
  1940     0217                     	;# 
  1941     0217                     	;# 
  1942     0219                     	;# 
  1943     021A                     	;# 
  1944     021B                     	;# 
  1945     021C                     	;# 
  1946     021D                     	;# 
  1947     021E                     	;# 
  1948     021F                     	;# 
  1949     0291                     	;# 
  1950     0291                     	;# 
  1951     0292                     	;# 
  1952     0293                     	;# 
  1953     0294                     	;# 
  1954     0295                     	;# 
  1955     0295                     	;# 
  1956     0296                     	;# 
  1957     0298                     	;# 
  1958     0298                     	;# 
  1959     0299                     	;# 
  1960     029A                     	;# 
  1961     029B                     	;# 
  1962     029C                     	;# 
  1963     029C                     	;# 
  1964     029D                     	;# 
  1965     029E                     	;# 
  1966     029E                     	;# 
  1967     0311                     	;# 
  1968     0311                     	;# 
  1969     0312                     	;# 
  1970     0313                     	;# 
  1971     0318                     	;# 
  1972     0318                     	;# 
  1973     0319                     	;# 
  1974     031A                     	;# 
  1975     0394                     	;# 
  1976     0395                     	;# 
  1977     0396                     	;# 
  1978     039A                     	;# 
  1979     039C                     	;# 
  1980     039D                     	;# 
  1981     039E                     	;# 
  1982     039F                     	;# 
  1983     0415                     	;# 
  1984     0416                     	;# 
  1985     0417                     	;# 
  1986     041C                     	;# 
  1987     041D                     	;# 
  1988     041E                     	;# 
  1989     0FE4                     	;# 
  1990     0FE5                     	;# 
  1991     0FE6                     	;# 
  1992     0FE7                     	;# 
  1993     0FE8                     	;# 
  1994     0FE9                     	;# 
  1995     0FEA                     	;# 
  1996     0FEB                     	;# 
  1997     0FED                     	;# 
  1998     0FEE                     	;# 
  1999     0FEF                     	;# 
  2000                           
  2001 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  2002     0000                     
  2003 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  2004     0000                     
  2005 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  2006     0000                     
  2007                           	psect	idataBANK1
  2008     0E48                     __pidataBANK1:
  2009                           
  2010                           ;initializer for _snake_mapping
  2011     0E48  3437               	retlw	55
  2012     0E49  343F               	retlw	63
  2013     0E4A  3407               	retlw	7
  2014     0E4B  3408               	retlw	8
  2015     0E4C  3409               	retlw	9
  2016     0E4D  3401               	retlw	1
  2017     0E4E  3439               	retlw	57
  2018     0E4F  3438               	retlw	56
  2019                           
  2020                           	psect	stringtext1
  2021     0800                     __pstringtext1:
  2022     0800                     _de_sigmoidValues:
  2023     0800  3440               	retlw	64
  2024     0801  3432               	retlw	50
  2025     0802  341B               	retlw	27
  2026     0803  3410               	retlw	16
  2027     0804  3410               	retlw	16
  2028     0805  3410               	retlw	16
  2029     0806  3410               	retlw	16
  2030     0807  3410               	retlw	16
  2031     0808  3410               	retlw	16
  2032     0809  3410               	retlw	16
  2033     080A  3410               	retlw	16
  2034     080B  3410               	retlw	16
  2035     080C  3410               	retlw	16
  2036     080D  3410               	retlw	16
  2037     080E  341B               	retlw	27
  2038     080F  3432               	retlw	50
  2039     0810                     __end_of_de_sigmoidValues:
  2040                           
  2041                           	psect	stringtext2
  2042     0810                     __pstringtext2:
  2043     0810                     _sigmoidValues:
  2044     0810  3480               	retlw	128
  2045     0811  34BA               	retlw	186
  2046     0812  34E1               	retlw	225
  2047     0813  34F3               	retlw	243
  2048     0814  34FA               	retlw	250
  2049     0815  34FD               	retlw	253
  2050     0816  34FE               	retlw	254
  2051     0817  34FF               	retlw	255
  2052     0818  3410               	retlw	16
  2053     0819  3410               	retlw	16
  2054     081A  3410               	retlw	16
  2055     081B  3410               	retlw	16
  2056     081C  3410               	retlw	16
  2057     081D  3410               	retlw	16
  2058     081E  341E               	retlw	30
  2059     081F  3445               	retlw	69
  2060     0820                     __end_of_sigmoidValues:
  2061                           
  2062                           	psect	stringtext3
  2063     084C                     __pstringtext3:
  2064     084C                     _spi1_configuration:
  2065     084C  3402               	retlw	2
  2066     084D  3440               	retlw	64
  2067     084E  3401               	retlw	1
  2068     084F  3400               	retlw	0
  2069     0850                     __end_of_spi1_configuration:
  2070                           
  2071                           	psect	nvBANK0
  2072     0069                     __pnvBANK0:
  2073     0069                     _EUSART_ErrorHandler:
  2074     0069                     	ds	2
  2075     006B                     _EUSART_OverrunErrorHandler:
  2076     006B                     	ds	2
  2077     006D                     _EUSART_FramingErrorHandler:
  2078     006D                     	ds	2
  2079     0011                     _PIR1bits	set	17
  2080     000B                     _INTCONbits	set	11
  2081     008C                     _TRISAbits	set	140
  2082     0097                     _WDTCON	set	151
  2083     0098                     _OSCTUNE	set	152
  2084     0099                     _OSCCON	set	153
  2085     008D                     _TRISBbits	set	141
  2086     0095                     _OPTION_REGbits	set	149
  2087     008D                     _TRISB	set	141
  2088     008C                     _TRISA	set	140
  2089     010D                     _LATBbits	set	269
  2090     010C                     _LATAbits	set	268
  2091     0116                     _BORCON	set	278
  2092     011E                     _APFCON1	set	286
  2093     011D                     _APFCON0	set	285
  2094     010D                     _LATB	set	269
  2095     010C                     _LATA	set	268
  2096     018C                     _ANSELA	set	396
  2097     018D                     _ANSELB	set	397
  2098     019A                     _TXREG	set	410
  2099     0199                     _RCREG	set	409
  2100     019D                     _RCSTAbits	set	413
  2101     019E                     _TXSTAbits	set	414
  2102     019C                     _SPBRGH	set	412
  2103     019B                     _SPBRGL	set	411
  2104     019E                     _TXSTA	set	414
  2105     019D                     _RCSTA	set	413
  2106     019F                     _BAUDCON	set	415
  2107     0196                     _EECON2	set	406
  2108     0193                     _EEDATL	set	403
  2109     0194                     _EEDATH	set	404
  2110     0195                     _EECON1bits	set	405
  2111     0192                     _EEADRH	set	402
  2112     0191                     _EEADRL	set	401
  2113     0211                     _SSP1BUF	set	529
  2114     0216                     _SSP1CON2	set	534
  2115     0215                     _SSP1CON1bits	set	533
  2116     0212                     _SSP1ADD	set	530
  2117     0215                     _SSP1CON1	set	533
  2118     0214                     _SSP1STAT	set	532
  2119     020C                     _WPUA	set	524
  2120     020D                     _WPUB	set	525
  2121                           
  2122                           	psect	stringtext4
  2123     0820                     __pstringtext4:
  2124     0820                     STR_6:
  2125     0820  3469               	retlw	105	;'i'
  2126     0821  346E               	retlw	110	;'n'
  2127     0822  3474               	retlw	116	;'t'
  2128     0823  3431               	retlw	49	;'1'
  2129     0824  3436               	retlw	54	;'6'
  2130     0825  345F               	retlw	95	;'_'
  2131     0826  3474               	retlw	116	;'t'
  2132     0827  3400               	retlw	0
  2133                           
  2134                           	psect	stringtext5
  2135     0828                     __pstringtext5:
  2136     0828                     STR_12:
  2137     0828  3475               	retlw	117	;'u'
  2138     0829  3469               	retlw	105	;'i'
  2139     082A  346E               	retlw	110	;'n'
  2140     082B  3474               	retlw	116	;'t'
  2141     082C  3438               	retlw	56	;'8'
  2142     082D  345F               	retlw	95	;'_'
  2143     082E  3474               	retlw	116	;'t'
  2144     082F  3400               	retlw	0
  2145                           
  2146                           	psect	stringtext6
  2147     0830                     __pstringtext6:
  2148     0830                     STR_17:
  2149     0830  3444               	retlw	68	;'D'
  2150     0831  3443               	retlw	67	;'C'
  2151     0832  345F               	retlw	95	;'_'
  2152     0833  3444               	retlw	68	;'D'
  2153     0834  3442               	retlw	66	;'B'
  2154     0835  3431               	retlw	49	;'1'
  2155     0836  3400               	retlw	0
  2156                           
  2157                           	psect	stringtext7
  2158     0837                     __pstringtext7:
  2159     0837                     STR_19:
  2160     0837  3444               	retlw	68	;'D'
  2161     0838  3443               	retlw	67	;'C'
  2162     0839  345F               	retlw	95	;'_'
  2163     083A  3444               	retlw	68	;'D'
  2164     083B  3457               	retlw	87	;'W'
  2165     083C  3431               	retlw	49	;'1'
  2166     083D  3400               	retlw	0
  2167                           
  2168                           	psect	stringtext8
  2169     083E                     __pstringtext8:
  2170     083E                     STR_13:
  2171     083E  3444               	retlw	68	;'D'
  2172     083F  3443               	retlw	67	;'C'
  2173     0840  345F               	retlw	95	;'_'
  2174     0841  3444               	retlw	68	;'D'
  2175     0842  3459               	retlw	89	;'Y'
  2176     0843  3431               	retlw	49	;'1'
  2177     0844  3400               	retlw	0
  2178                           
  2179                           	psect	stringtext9
  2180     0845                     __pstringtext9:
  2181     0845                     STR_15:
  2182     0845  3444               	retlw	68	;'D'
  2183     0846  3443               	retlw	67	;'C'
  2184     0847  345F               	retlw	95	;'_'
  2185     0848  3444               	retlw	68	;'D'
  2186     0849  345A               	retlw	90	;'Z'
  2187     084A  3431               	retlw	49	;'1'
  2188     084B  3400               	retlw	0
  2189                           
  2190                           	psect	stringtext10
  2191     0850                     __pstringtext10:
  2192     0850                     STR_21:
  2193     0850  3444               	retlw	68	;'D'
  2194     0851  3453               	retlw	83	;'S'
  2195     0852  3431               	retlw	49	;'1'
  2196     0853  3400               	retlw	0
  2197                           
  2198                           	psect	stringtext11
  2199     0854                     __pstringtext11:
  2200     0854                     STR_1:
  2201     0854  3459               	retlw	89	;'Y'
  2202     0855  3430               	retlw	48	;'0'
  2203     0856  3400               	retlw	0
  2204                           
  2205                           	psect	stringtext12
  2206     0000                     __pstringtext12:
  2207     0834                     
  2208                           	psect	cinit
  2209     07D1                     start_initialization:	
  2210                           ; #config settings
  2211                           
  2212     07D1                     __initialization:
  2213                           
  2214                           ; Initialize objects allocated to BANK1
  2215     07D1  3048               	movlw	low __pidataBANK1
  2216     07D2  0084               	movwf	4
  2217     07D3  308E               	movlw	(high __pidataBANK1)| (0+128)
  2218     07D4  0085               	movwf	5
  2219     07D5  30D0               	movlw	low __pdataBANK1
  2220     07D6  0086               	movwf	6
  2221     07D7  3000               	movlw	high __pdataBANK1
  2222     07D8  0087               	movwf	7
  2223     07D9  3008               	movlw	8
  2224     07DA  318E  263B  3187   	fcall	init_ram
  2225                           
  2226                           ; Clear objects allocated to BANK0
  2227     07DD  3020               	movlw	low __pbssBANK0
  2228     07DE  0084               	movwf	4
  2229     07DF  3000               	movlw	high __pbssBANK0
  2230     07E0  0085               	movwf	5
  2231     07E1  302A               	movlw	42
  2232     07E2  318E  2635  3187   	fcall	clear_ram0
  2233                           
  2234                           ; Clear objects allocated to BANK1
  2235     07E5  30A0               	movlw	low __pbssBANK1
  2236     07E6  0084               	movwf	4
  2237     07E7  3000               	movlw	high __pbssBANK1
  2238     07E8  0085               	movwf	5
  2239     07E9  3030               	movlw	48
  2240     07EA  318E  2635  3187   	fcall	clear_ram0
  2241                           
  2242                           ; Clear objects allocated to BANK2
  2243     07ED  3020               	movlw	low __pbssBANK2
  2244     07EE  0084               	movwf	4
  2245     07EF  3001               	movlw	high __pbssBANK2
  2246     07F0  0085               	movwf	5
  2247     07F1  3020               	movlw	32
  2248     07F2  318E  2635  3187   	fcall	clear_ram0
  2249                           
  2250                           ; Clear objects allocated to BANK3
  2251     07F5  30A0               	movlw	low __pbssBANK3
  2252     07F6  0084               	movwf	4
  2253     07F7  3001               	movlw	high __pbssBANK3
  2254     07F8  0085               	movwf	5
  2255     07F9  3040               	movlw	64
  2256     07FA  318E  2635  3187   	fcall	clear_ram0
  2257     07FD                     end_of_initialization:	
  2258                           ;End of C runtime variable initialization code
  2259                           
  2260     07FD                     __end_of__initialization:
  2261     07FD  0020               	movlb	0
  2262     07FE  3183  2BE4         	ljmp	_main	;jump to C main() function
  2263                           
  2264                           	psect	bssBANK0
  2265     0020                     __pbssBANK0:
  2266     0020                     _Z1:
  2267     0020                     	ds	8
  2268     0028                     _S:
  2269     0028                     	ds	4
  2270     002C                     _DC_DB1:
  2271     002C                     	ds	4
  2272     0030                     _DC_DZ1:
  2273     0030                     	ds	4
  2274     0034                     _DC_DY1:
  2275     0034                     	ds	4
  2276     0038                     _B1:
  2277     0038                     	ds	4
  2278     003C                     _choice:
  2279     003C                     	ds	1
  2280     003D                     _remainingMoves:
  2281     003D                     	ds	1
  2282     003E                     _foodPosition:
  2283     003E                     	ds	1
  2284     003F                     _headPosition:
  2285     003F                     	ds	1
  2286     0040                     _snakeSize:
  2287     0040                     	ds	1
  2288     0041                     _eusartRxLastError:
  2289     0041                     	ds	1
  2290     0042                     _seed:
  2291     0042                     	ds	4
  2292     0046                     _Y1:
  2293     0046                     	ds	4
  2294                           
  2295                           	psect	bssBANK1
  2296     00A0                     __pbssBANK1:
  2297     00A0                     _W1:
  2298     00A0                     	ds	32
  2299     00C0                     _matrix:
  2300     00C0                     	ds	8
  2301     00C8                     _Y0:
  2302     00C8                     	ds	8
  2303                           
  2304                           	psect	dataBANK1
  2305     00D0                     __pdataBANK1:
  2306     00D0                     _snake_mapping:
  2307     00D0                     	ds	8
  2308                           
  2309                           	psect	bssBANK2
  2310     0120                     __pbssBANK2:
  2311     0120                     _DC_DW1:
  2312     0120                     	ds	32
  2313                           
  2314                           	psect	bssBANK3
  2315     01A0                     __pbssBANK3:
  2316     01A0                     _field:
  2317     01A0                     	ds	64
  2318                           
  2319                           	psect	inittext
  2320     0E3B                     init_ram:
  2321     0E3B  00FE               	movwf	btemp
  2322     0E3C                     initloop:
  2323     0E3C  0012               	moviw fsr0++
  2324     0E3D  001E               	movwi fsr1++
  2325     0E3E  0BFE               	decfsz	btemp,f
  2326     0E3F  2E3C               	goto	initloop
  2327     0E40  3400               	retlw	0
  2328                           
  2329                           	psect	clrtext
  2330     0E35                     clear_ram0:	
  2331                           ;	Called with FSR0 containing the base address, and
  2332                           ;	WREG with the size to clear
  2333                           
  2334     0E35  0064               	clrwdt	;clear the watchdog before getting into this loop
  2335     0E36                     clrloop0:
  2336     0E36  0180               	clrf	0	;clear RAM location pointed to by FSR
  2337     0E37  3101               	addfsr 0,1
  2338     0E38  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2339     0E39  2E36               	goto	clrloop0	;have we reached the end yet?
  2340     0E3A  3400               	retlw	0	;all done for this memory range, return
  2341                           
  2342                           	psect	cstackCOMMON
  2343     0070                     __pcstackCOMMON:
  2344     0070                     ?_EUSART_SetFramingErrorHandler:
  2345     0070                     ?_EUSART_SetOverrunErrorHandler:	
  2346                           ; 1 bytes @ 0x0
  2347                           
  2348     0070                     ?_EUSART_SetErrorHandler:	
  2349                           ; 1 bytes @ 0x0
  2350                           
  2351     0070                     ?_OSCILLATOR_Initialize:	
  2352                           ; 1 bytes @ 0x0
  2353                           
  2354     0070                     ??_OSCILLATOR_Initialize:	
  2355                           ; 1 bytes @ 0x0
  2356                           
  2357     0070                     ?_WDT_Initialize:	
  2358                           ; 1 bytes @ 0x0
  2359                           
  2360     0070                     ??_WDT_Initialize:	
  2361                           ; 1 bytes @ 0x0
  2362                           
  2363     0070                     ?_snake_initiate:	
  2364                           ; 1 bytes @ 0x0
  2365                           
  2366     0070                     ?_ai_initiate:	
  2367                           ; 1 bytes @ 0x0
  2368                           
  2369     0070                     ?_initMAX7219:	
  2370                           ; 1 bytes @ 0x0
  2371                           
  2372     0070                     ?_snake_getField:	
  2373                           ; 1 bytes @ 0x0
  2374                           
  2375     0070                     ??_snake_getField:	
  2376                           ; 1 bytes @ 0x0
  2377                           
  2378     0070                     ?_ledClear:	
  2379                           ; 1 bytes @ 0x0
  2380                           
  2381     0070                     ?_snake_getFoodPosition:	
  2382                           ; 1 bytes @ 0x0
  2383                           
  2384     0070                     ??_snake_getFoodPosition:	
  2385                           ; 1 bytes @ 0x0
  2386                           
  2387     0070                     ?_sendMatrix:	
  2388                           ; 1 bytes @ 0x0
  2389                           
  2390     0070                     ?_snake_getSurroundings:	
  2391                           ; 1 bytes @ 0x0
  2392                           
  2393     0070                     ?_ai_getInputField:	
  2394                           ; 1 bytes @ 0x0
  2395                           
  2396     0070                     ??_ai_getInputField:	
  2397                           ; 1 bytes @ 0x0
  2398                           
  2399     0070                     ?_ai_run:	
  2400                           ; 1 bytes @ 0x0
  2401                           
  2402     0070                     ?_snake_move:	
  2403                           ; 1 bytes @ 0x0
  2404                           
  2405     0070                     ?_ai_propagate:	
  2406                           ; 1 bytes @ 0x0
  2407                           
  2408     0070                     ?_ai_printAI:	
  2409                           ; 1 bytes @ 0x0
  2410                           
  2411     0070                     ?_sigmoid:	
  2412                           ; 1 bytes @ 0x0
  2413                           
  2414     0070                     ?_de_sigmoid:	
  2415                           ; 1 bytes @ 0x0
  2416                           
  2417     0070                     ?_EUSART_Initialize:	
  2418                           ; 1 bytes @ 0x0
  2419                           
  2420     0070                     ?_EUSART_Write:	
  2421                           ; 1 bytes @ 0x0
  2422                           
  2423     0070                     ??_EUSART_Write:	
  2424                           ; 1 bytes @ 0x0
  2425                           
  2426     0070                     ?_PIN_MANAGER_Initialize:	
  2427                           ; 1 bytes @ 0x0
  2428                           
  2429     0070                     ??_PIN_MANAGER_Initialize:	
  2430                           ; 1 bytes @ 0x0
  2431                           
  2432     0070                     ?_SPI1_Initialize:	
  2433                           ; 1 bytes @ 0x0
  2434                           
  2435     0070                     ??_SPI1_Initialize:	
  2436                           ; 1 bytes @ 0x0
  2437                           
  2438     0070                     ?_SPI1_WriteByte:	
  2439                           ; 1 bytes @ 0x0
  2440                           
  2441     0070                     ??_SPI1_WriteByte:	
  2442                           ; 1 bytes @ 0x0
  2443                           
  2444     0070                     ?_SYSTEM_Initialize:	
  2445                           ; 1 bytes @ 0x0
  2446                           
  2447     0070                     ?_deactivateElevator:	
  2448                           ; 1 bytes @ 0x0
  2449                           
  2450     0070                     ??_deactivateElevator:	
  2451                           ; 1 bytes @ 0x0
  2452                           
  2453     0070                     ?_main:	
  2454                           ; 1 bytes @ 0x0
  2455                           
  2456     0070                     ?_print:	
  2457                           ; 1 bytes @ 0x0
  2458                           
  2459     0070                     ?___lmul:	
  2460                           ; 1 bytes @ 0x0
  2461                           
  2462     0070                     EUSART_Write@txData:	
  2463                           ; 4 bytes @ 0x0
  2464                           
  2465     0070                     SPI1_WriteByte@byte:	
  2466                           ; 1 bytes @ 0x0
  2467                           
  2468     0070                     ledClear@c:	
  2469                           ; 1 bytes @ 0x0
  2470                           
  2471     0070                     EUSART_SetFramingErrorHandler@interruptHandler:	
  2472                           ; 1 bytes @ 0x0
  2473                           
  2474     0070                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  2475                           ; 2 bytes @ 0x0
  2476                           
  2477     0070                     EUSART_SetErrorHandler@interruptHandler:	
  2478                           ; 2 bytes @ 0x0
  2479                           
  2480     0070                     sigmoid@z:	
  2481                           ; 2 bytes @ 0x0
  2482                           
  2483     0070                     de_sigmoid@z:	
  2484                           ; 2 bytes @ 0x0
  2485                           
  2486     0070                     ___lmul@multiplier:	
  2487                           ; 2 bytes @ 0x0
  2488                           
  2489                           
  2490                           ; 4 bytes @ 0x0
  2491     0070                     	ds	1
  2492     0071                     ??_ledClear:
  2493     0071                     ?_txMAX7219:	
  2494                           ; 1 bytes @ 0x1
  2495                           
  2496     0071                     ??_print:	
  2497                           ; 1 bytes @ 0x1
  2498                           
  2499     0071                     txMAX7219@dat0:	
  2500                           ; 1 bytes @ 0x1
  2501                           
  2502     0071                     print@b:	
  2503                           ; 1 bytes @ 0x1
  2504                           
  2505                           
  2506                           ; 1 bytes @ 0x1
  2507     0071                     	ds	1
  2508     0072                     ??_EUSART_SetFramingErrorHandler:
  2509     0072                     ??_EUSART_SetOverrunErrorHandler:	
  2510                           ; 1 bytes @ 0x2
  2511                           
  2512     0072                     ??_EUSART_SetErrorHandler:	
  2513                           ; 1 bytes @ 0x2
  2514                           
  2515     0072                     ??_sigmoid:	
  2516                           ; 1 bytes @ 0x2
  2517                           
  2518     0072                     ??_de_sigmoid:	
  2519                           ; 1 bytes @ 0x2
  2520                           
  2521     0072                     ??_EUSART_Initialize:	
  2522                           ; 1 bytes @ 0x2
  2523                           
  2524     0072                     ??_SYSTEM_Initialize:	
  2525                           ; 1 bytes @ 0x2
  2526                           
  2527     0072                     ??_txMAX7219:	
  2528                           ; 1 bytes @ 0x2
  2529                           
  2530     0072                     ?_printInteger:	
  2531                           ; 1 bytes @ 0x2
  2532                           
  2533     0072                     ?_printString:	
  2534                           ; 1 bytes @ 0x2
  2535                           
  2536     0072                     txMAX7219@addr0:	
  2537                           ; 1 bytes @ 0x2
  2538                           
  2539     0072                     printInteger@i:	
  2540                           ; 1 bytes @ 0x2
  2541                           
  2542     0072                     printString@str:	
  2543                           ; 2 bytes @ 0x2
  2544                           
  2545                           
  2546                           ; 2 bytes @ 0x2
  2547     0072                     	ds	1
  2548     0073                     ??_initMAX7219:
  2549     0073                     ??_sendMatrix:	
  2550                           ; 1 bytes @ 0x3
  2551                           
  2552     0073                     ?___wmul:	
  2553                           ; 1 bytes @ 0x3
  2554                           
  2555     0073                     ledClear@l:	
  2556                           ; 2 bytes @ 0x3
  2557                           
  2558     0073                     ___wmul@multiplier:	
  2559                           ; 1 bytes @ 0x3
  2560                           
  2561                           
  2562                           ; 2 bytes @ 0x3
  2563     0073                     	ds	1
  2564     0074                     ??_printInteger:
  2565     0074                     ??_printString:	
  2566                           ; 1 bytes @ 0x4
  2567                           
  2568     0074                     sendMatrix@b:	
  2569                           ; 1 bytes @ 0x4
  2570                           
  2571     0074                     ___lmul@multiplicand:	
  2572                           ; 1 bytes @ 0x4
  2573                           
  2574                           
  2575                           ; 4 bytes @ 0x4
  2576     0074                     	ds	1
  2577     0075                     sendMatrix@nb:
  2578     0075                     ___wmul@multiplicand:	
  2579                           ; 1 bytes @ 0x5
  2580                           
  2581                           
  2582                           ; 2 bytes @ 0x5
  2583     0075                     	ds	1
  2584     0076                     sendMatrix@j:
  2585                           
  2586                           ; 1 bytes @ 0x6
  2587     0076                     	ds	1
  2588     0077                     ??___wmul:
  2589     0077                     sendMatrix@i:	
  2590                           ; 1 bytes @ 0x7
  2591                           
  2592     0077                     printString@i:	
  2593                           ; 1 bytes @ 0x7
  2594                           
  2595     0077                     ___wmul@product:	
  2596                           ; 1 bytes @ 0x7
  2597                           
  2598                           
  2599                           ; 2 bytes @ 0x7
  2600     0077                     	ds	1
  2601     0078                     ??_ai_printAI:
  2602     0078                     ??___lmul:	
  2603                           ; 1 bytes @ 0x8
  2604                           
  2605     0078                     ___lmul@product:	
  2606                           ; 1 bytes @ 0x8
  2607                           
  2608                           
  2609                           ; 4 bytes @ 0x8
  2610     0078                     	ds	1
  2611     0079                     ?___awdiv:
  2612     0079                     ___awdiv@divisor:	
  2613                           ; 2 bytes @ 0x9
  2614                           
  2615                           
  2616                           ; 2 bytes @ 0x9
  2617     0079                     	ds	2
  2618     007B                     ___awdiv@dividend:
  2619                           
  2620                           ; 2 bytes @ 0xB
  2621     007B                     	ds	1
  2622     007C                     ?_rand:
  2623                           
  2624                           ; 2 bytes @ 0xC
  2625     007C                     	ds	1
  2626     007D                     ??___awdiv:
  2627                           
  2628                           ; 1 bytes @ 0xD
  2629     007D                     	ds	1
  2630                           
  2631                           	psect	cstackBANK0
  2632     004A                     __pcstackBANK0:
  2633     004A                     ??_rand:
  2634     004A                     ai_printAI@i:	
  2635                           ; 1 bytes @ 0x0
  2636                           
  2637     004A                     ___awdiv@counter:	
  2638                           ; 1 bytes @ 0x0
  2639                           
  2640                           
  2641                           ; 1 bytes @ 0x0
  2642     004A                     	ds	1
  2643     004B                     ai_printAI@j:
  2644     004B                     ___awdiv@sign:	
  2645                           ; 1 bytes @ 0x1
  2646                           
  2647                           
  2648                           ; 1 bytes @ 0x1
  2649     004B                     	ds	1
  2650     004C                     ai_printAI@j_859:
  2651     004C                     ___awdiv@quotient:	
  2652                           ; 1 bytes @ 0x2
  2653                           
  2654                           
  2655                           ; 2 bytes @ 0x2
  2656     004C                     	ds	1
  2657     004D                     ai_printAI@j_863:
  2658                           
  2659                           ; 1 bytes @ 0x3
  2660     004D                     	ds	1
  2661     004E                     ??_snake_initiate:
  2662     004E                     ??_ai_initiate:	
  2663                           ; 1 bytes @ 0x4
  2664                           
  2665     004E                     ?_ledSet:	
  2666                           ; 1 bytes @ 0x4
  2667                           
  2668     004E                     ??_snake_getSurroundings:	
  2669                           ; 1 bytes @ 0x4
  2670                           
  2671     004E                     ??_ai_run:	
  2672                           ; 1 bytes @ 0x4
  2673                           
  2674     004E                     ??_ai_propagate:	
  2675                           ; 1 bytes @ 0x4
  2676                           
  2677     004E                     ledSet@c:	
  2678                           ; 1 bytes @ 0x4
  2679                           
  2680     004E                     ai_printAI@i_866:	
  2681                           ; 1 bytes @ 0x4
  2682                           
  2683                           
  2684                           ; 1 bytes @ 0x4
  2685     004E                     	ds	1
  2686     004F                     ??_ledSet:
  2687     004F                     snake_initiate@i:	
  2688                           ; 1 bytes @ 0x5
  2689                           
  2690     004F                     ai_printAI@j_867:	
  2691                           ; 1 bytes @ 0x5
  2692                           
  2693                           
  2694                           ; 1 bytes @ 0x5
  2695     004F                     	ds	1
  2696     0050                     ??_snake_move:
  2697     0050                     snake_getSurroundings@p:	
  2698                           ; 1 bytes @ 0x6
  2699                           
  2700     0050                     ai_printAI@i_870:	
  2701                           ; 1 bytes @ 0x6
  2702                           
  2703                           
  2704                           ; 1 bytes @ 0x6
  2705     0050                     	ds	1
  2706     0051                     ledSet@l:
  2707     0051                     snake_getSurroundings@lf:	
  2708                           ; 1 bytes @ 0x7
  2709                           
  2710     0051                     ai_initiate@i:	
  2711                           ; 1 bytes @ 0x7
  2712                           
  2713     0051                     ai_printAI@j_873:	
  2714                           ; 1 bytes @ 0x7
  2715                           
  2716                           
  2717                           ; 1 bytes @ 0x7
  2718     0051                     	ds	1
  2719     0052                     snake_move@direction:
  2720     0052                     snake_getSurroundings@cf:	
  2721                           ; 1 bytes @ 0x8
  2722                           
  2723     0052                     ai_initiate@j:	
  2724                           ; 1 bytes @ 0x8
  2725                           
  2726     0052                     ai_printAI@j_876:	
  2727                           ; 1 bytes @ 0x8
  2728                           
  2729                           
  2730                           ; 1 bytes @ 0x8
  2731     0052                     	ds	1
  2732     0053                     snake_move@incentive:
  2733     0053                     snake_getSurroundings@i:	
  2734                           ; 1 bytes @ 0x9
  2735                           
  2736     0053                     ai_printAI@j_879:	
  2737                           ; 1 bytes @ 0x9
  2738                           
  2739                           
  2740                           ; 1 bytes @ 0x9
  2741     0053                     	ds	1
  2742     0054                     snake_move@i:
  2743     0054                     snake_getSurroundings@lh:	
  2744                           ; 1 bytes @ 0xA
  2745                           
  2746     0054                     ai_run@i:	
  2747                           ; 1 bytes @ 0xA
  2748                           
  2749     0054                     ai_printAI@i_882:	
  2750                           ; 1 bytes @ 0xA
  2751                           
  2752                           
  2753                           ; 1 bytes @ 0xA
  2754     0054                     	ds	1
  2755     0055                     snake_getSurroundings@ch:
  2756     0055                     ai_run@i_838:	
  2757                           ; 1 bytes @ 0xB
  2758                           
  2759     0055                     ai_propagate@incentive:	
  2760                           ; 1 bytes @ 0xB
  2761                           
  2762     0055                     ai_printAI@j_883:	
  2763                           ; 1 bytes @ 0xB
  2764                           
  2765                           
  2766                           ; 1 bytes @ 0xB
  2767     0055                     	ds	1
  2768     0056                     snake_getSurroundings@i_776:
  2769     0056                     ai_run@i_839:	
  2770                           ; 1 bytes @ 0xC
  2771                           
  2772     0056                     ai_propagate@i:	
  2773                           ; 1 bytes @ 0xC
  2774                           
  2775     0056                     ai_printAI@i_886:	
  2776                           ; 1 bytes @ 0xC
  2777                           
  2778                           
  2779                           ; 1 bytes @ 0xC
  2780     0056                     	ds	1
  2781     0057                     snake_getSurroundings@surroundings:
  2782     0057                     ai_run@j:	
  2783                           ; 1 bytes @ 0xD
  2784                           
  2785     0057                     ai_propagate@i_843:	
  2786                           ; 1 bytes @ 0xD
  2787                           
  2788                           
  2789                           ; 1 bytes @ 0xD
  2790     0057                     	ds	1
  2791     0058                     ai_propagate@i_846:
  2792                           
  2793                           ; 1 bytes @ 0xE
  2794     0058                     	ds	1
  2795     0059                     ai_propagate@i_848:
  2796                           
  2797                           ; 1 bytes @ 0xF
  2798     0059                     	ds	1
  2799     005A                     ai_propagate@j:
  2800                           
  2801                           ; 1 bytes @ 0x10
  2802     005A                     	ds	1
  2803     005B                     ai_propagate@j_847:
  2804                           
  2805                           ; 1 bytes @ 0x11
  2806     005B                     	ds	1
  2807     005C                     ai_propagate@j_845:
  2808                           
  2809                           ; 1 bytes @ 0x12
  2810     005C                     	ds	1
  2811     005D                     ??_main:
  2812                           
  2813                           ; 1 bytes @ 0x13
  2814     005D                     	ds	3
  2815     0060                     main@choice:
  2816                           
  2817                           ; 1 bytes @ 0x16
  2818     0060                     	ds	1
  2819     0061                     main@incentive:
  2820                           
  2821                           ; 1 bytes @ 0x17
  2822     0061                     	ds	1
  2823     0062                     main@field:
  2824                           
  2825                           ; 1 bytes @ 0x18
  2826     0062                     	ds	1
  2827     0063                     main@foodPosition:
  2828                           
  2829                           ; 1 bytes @ 0x19
  2830     0063                     	ds	1
  2831     0064                     main@foodPosition_653:
  2832                           
  2833                           ; 1 bytes @ 0x1A
  2834     0064                     	ds	1
  2835     0065                     main@i:
  2836                           
  2837                           ; 1 bytes @ 0x1B
  2838     0065                     	ds	1
  2839     0066                     main@j:
  2840                           
  2841                           ; 1 bytes @ 0x1C
  2842     0066                     	ds	1
  2843     0067                     main@i_651:
  2844                           
  2845                           ; 1 bytes @ 0x1D
  2846     0067                     	ds	1
  2847     0068                     main@j_652:
  2848                           
  2849                           ; 1 bytes @ 0x1E
  2850     0068                     	ds	1
  2851                           
  2852                           	psect	maintext
  2853     03E4                     __pmaintext:	
  2854 ;;
  2855 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  2856 ;;
  2857 ;; *************** function _main *****************
  2858 ;; Defined at:
  2859 ;;		line 67 in file "main.c"
  2860 ;; Parameters:    Size  Location     Type
  2861 ;;		None
  2862 ;; Auto vars:     Size  Location     Type
  2863 ;;  j               1   30[BANK0 ] unsigned char 
  2864 ;;  j               1   28[BANK0 ] unsigned char 
  2865 ;;  i               1   29[BANK0 ] unsigned char 
  2866 ;;  foodPosition    1   26[BANK0 ] unsigned char 
  2867 ;;  incentive       1   23[BANK0 ] char 
  2868 ;;  choice          1   22[BANK0 ] unsigned char 
  2869 ;;  i               1   27[BANK0 ] unsigned char 
  2870 ;;  foodPosition    1   25[BANK0 ] unsigned char 
  2871 ;;  field           1   24[BANK0 ] PTR unsigned char 
  2872 ;;		 -> field(64), 
  2873 ;; Return value:  Size  Location     Type
  2874 ;;                  1    wreg      void 
  2875 ;; Registers used:
  2876 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2877 ;; Tracked objects:
  2878 ;;		On entry : B1F/0
  2879 ;;		On exit  : 0/0
  2880 ;;		Unchanged: 0/0
  2881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2882 ;;      Params:         0       0       0       0       0       0
  2883 ;;      Locals:         0       9       0       0       0       0
  2884 ;;      Temps:          0       3       0       0       0       0
  2885 ;;      Totals:         0      12       0       0       0       0
  2886 ;;Total ram usage:       12 bytes
  2887 ;; Hardware stack levels required when called: 4
  2888 ;; This function calls:
  2889 ;;		_SYSTEM_Initialize
  2890 ;;		___awdiv
  2891 ;;		_ai_getInputField
  2892 ;;		_ai_initiate
  2893 ;;		_ai_printAI
  2894 ;;		_ai_propagate
  2895 ;;		_ai_run
  2896 ;;		_deactivateElevator
  2897 ;;		_initMAX7219
  2898 ;;		_ledClear
  2899 ;;		_ledSet
  2900 ;;		_sendMatrix
  2901 ;;		_snake_getField
  2902 ;;		_snake_getFoodPosition
  2903 ;;		_snake_getSurroundings
  2904 ;;		_snake_initiate
  2905 ;;		_snake_move
  2906 ;; This function is called by:
  2907 ;;		Startup code after reset
  2908 ;; This function uses a non-reentrant model
  2909 ;;
  2910                           
  2911     03E4                     _main:	
  2912                           ;psect for function _main
  2913                           
  2914     03E4                     l3208:	
  2915                           ;incstack = 0
  2916                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2917                           
  2918                           
  2919                           ;main.c: 70:     SYSTEM_Initialize();
  2920     03E4  318E  267C  3183   	fcall	_SYSTEM_Initialize
  2921     03E7                     l3210:
  2922                           
  2923                           ;main.c: 87:     deactivateElevator();
  2924     03E7  318E  266F  3183   	fcall	_deactivateElevator
  2925     03EA                     l3212:
  2926                           
  2927                           ;main.c: 88:     snake_initiate();
  2928     03EA  318F  2749  3183   	fcall	_snake_initiate
  2929     03ED                     l3214:
  2930                           
  2931                           ;main.c: 89:     ai_initiate();
  2932     03ED  3180  209F  3183   	fcall	_ai_initiate
  2933     03F0                     l3216:
  2934                           
  2935                           ;main.c: 90:     initMAX7219();
  2936     03F0  3180  20DA  3183   	fcall	_initMAX7219
  2937     03F3                     l3218:
  2938                           
  2939                           ;main.c: 103:     uint8_t* field = snake_getField();
  2940     03F3  318E  2615  3183   	fcall	_snake_getField
  2941     03F6  0020               	movlb	0	; select bank0
  2942     03F7  00E2               	movwf	main@field
  2943     03F8                     l3220:
  2944                           
  2945                           ;main.c: 105:     for(uint8_t i = 0; i < 8; i++){
  2946     03F8  01E5               	clrf	main@i
  2947     03F9                     l3226:
  2948                           
  2949                           ;main.c: 106:         for(uint8_t j = 0; j < 8; j++){
  2950     03F9  01E6               	clrf	main@j
  2951     03FA                     l3232:
  2952                           
  2953                           ;main.c: 107:             if(field[i+j*8]>0){
  2954     03FA  0866               	movf	main@j,w
  2955     03FB  00DD               	movwf	??_main
  2956     03FC  3002               	movlw	2
  2957     03FD                     u2325:
  2958     03FD  35DD               	lslf	??_main,f
  2959     03FE  3EFF               	addlw	-1
  2960     03FF  1D03               	skipz
  2961     0400  2BFD               	goto	u2325
  2962     0401  355D               	lslf	??_main,w
  2963     0402  0762               	addwf	main@field,w
  2964     0403  00DE               	movwf	??_main+1
  2965     0404  0865               	movf	main@i,w
  2966     0405  075E               	addwf	??_main+1,w
  2967     0406  00DF               	movwf	??_main+2
  2968     0407  085F               	movf	??_main+2,w
  2969     0408  0086               	movwf	6
  2970     0409  3001               	movlw	1	; select bank2/3
  2971     040A  0087               	movwf	7
  2972     040B  0801               	movf	1,w
  2973     040C  1903               	btfsc	3,2
  2974     040D  2C0F               	goto	u2331
  2975     040E  2C10               	goto	u2330
  2976     040F                     u2331:
  2977     040F  2C17               	goto	l3236
  2978     0410                     u2330:
  2979     0410                     l3234:
  2980                           
  2981                           ;main.c: 108:                 ledSet(i,j);
  2982     0410  0866               	movf	main@j,w
  2983     0411  00CE               	movwf	ledSet@c
  2984     0412  0865               	movf	main@i,w
  2985     0413  318E  269E  3183   	fcall	_ledSet
  2986                           
  2987                           ;main.c: 109:             } else{
  2988     0416  2C1D               	goto	l3238
  2989     0417                     l3236:
  2990                           
  2991                           ;main.c: 110:                 ledClear(i,j);
  2992     0417  0866               	movf	main@j,w
  2993     0418  00F0               	movwf	ledClear@c
  2994     0419  0865               	movf	main@i,w
  2995     041A  318E  268C  3183   	fcall	_ledClear
  2996     041D                     l3238:
  2997                           
  2998                           ;main.c: 112:         }
  2999     041D  3001               	movlw	1
  3000     041E  0020               	movlb	0	; select bank0
  3001     041F  00DD               	movwf	??_main
  3002     0420  085D               	movf	??_main,w
  3003     0421  07E6               	addwf	main@j,f
  3004     0422                     l3240:
  3005     0422  3008               	movlw	8
  3006     0423  0266               	subwf	main@j,w
  3007     0424  1C03               	skipc
  3008     0425  2C27               	goto	u2341
  3009     0426  2C28               	goto	u2340
  3010     0427                     u2341:
  3011     0427  2BFA               	goto	l3232
  3012     0428                     u2340:
  3013     0428                     l3242:
  3014                           
  3015                           ;main.c: 113:     }
  3016     0428  3001               	movlw	1
  3017     0429  00DD               	movwf	??_main
  3018     042A  085D               	movf	??_main,w
  3019     042B  07E5               	addwf	main@i,f
  3020     042C                     l3244:
  3021     042C  3008               	movlw	8
  3022     042D  0265               	subwf	main@i,w
  3023     042E  1C03               	skipc
  3024     042F  2C31               	goto	u2351
  3025     0430  2C32               	goto	u2350
  3026     0431                     u2351:
  3027     0431  2BF9               	goto	l3226
  3028     0432                     u2350:
  3029     0432                     l3246:
  3030                           
  3031                           ;main.c: 115:     uint8_t foodPosition = snake_getFoodPosition();
  3032     0432  318E  2617  3183   	fcall	_snake_getFoodPosition
  3033     0435  0020               	movlb	0	; select bank0
  3034     0436  00E3               	movwf	main@foodPosition
  3035     0437                     l3248:
  3036                           
  3037                           ;main.c: 116:     ledSet(foodPosition%8, foodPosition/8);
  3038     0437  3008               	movlw	8
  3039     0438  00F9               	movwf	___awdiv@divisor
  3040     0439  3000               	movlw	0
  3041     043A  00FA               	movwf	___awdiv@divisor+1
  3042     043B  0863               	movf	main@foodPosition,w
  3043     043C  00DD               	movwf	??_main
  3044     043D  01DE               	clrf	??_main+1
  3045     043E  085D               	movf	??_main,w
  3046     043F  00FB               	movwf	___awdiv@dividend
  3047     0440  085E               	movf	??_main+1,w
  3048     0441  00FC               	movwf	___awdiv@dividend+1
  3049     0442  3181  2118  3183   	fcall	___awdiv
  3050     0445  0879               	movf	?___awdiv,w
  3051     0446  0020               	movlb	0	; select bank0
  3052     0447  00CE               	movwf	ledSet@c
  3053     0448  0863               	movf	main@foodPosition,w
  3054     0449  3907               	andlw	7
  3055     044A  318E  269E  3183   	fcall	_ledSet
  3056     044D                     l3250:
  3057                           
  3058                           ;main.c: 117:     sendMatrix();
  3059     044D  318F  27A3  3183   	fcall	_sendMatrix
  3060     0450                     l3252:
  3061                           
  3062                           ;main.c: 120:     {;main.c: 122:         _delay((unsigned long)((500)*(8000000/4000.0)))
      +                          ;
  3063     0450  3006               	movlw	6
  3064     0451  0020               	movlb	0	; select bank0
  3065     0452  00DE               	movwf	??_main+1
  3066     0453  3013               	movlw	19
  3067     0454  00DD               	movwf	??_main
  3068     0455  30AD               	movlw	173
  3069     0456                     u2457:
  3070     0456  0B89               	decfsz	9,f
  3071     0457  2C56               	goto	u2457
  3072     0458  0BDD               	decfsz	??_main,f
  3073     0459  2C56               	goto	u2457
  3074     045A  0BDE               	decfsz	??_main+1,f
  3075     045B  2C56               	goto	u2457
  3076     045C  3200               	nop2
  3077     045D                     l3254:
  3078                           
  3079                           ;main.c: 123:         snake_getSurroundings(ai_getInputField());
  3080     045D  318E  2613  3183   	fcall	_ai_getInputField
  3081     0460  3181  2178  3183   	fcall	_snake_getSurroundings
  3082     0463                     l3256:
  3083                           
  3084                           ;main.c: 124:         uint8_t choice = ai_run();
  3085     0463  3182  223A  3183   	fcall	_ai_run
  3086     0466  0020               	movlb	0	; select bank0
  3087     0467  00E0               	movwf	main@choice
  3088     0468                     l3258:
  3089                           
  3090                           ;main.c: 125:         int8_t incentive = snake_move(choice);
  3091     0468  0860               	movf	main@choice,w
  3092     0469  3183  230D  3183   	fcall	_snake_move
  3093     046C  0020               	movlb	0	; select bank0
  3094     046D  00E1               	movwf	main@incentive
  3095     046E                     l3260:
  3096                           
  3097                           ;main.c: 126:         ai_propagate(incentive);
  3098     046E  0861               	movf	main@incentive,w
  3099     046F  3184  24CE  3183   	fcall	_ai_propagate
  3100     0472                     l3262:
  3101                           
  3102                           ;main.c: 127:         for(uint8_t i = 0; i < 8; i++){
  3103     0472  0020               	movlb	0	; select bank0
  3104     0473  01E7               	clrf	main@i_651
  3105     0474                     l3268:
  3106                           
  3107                           ;main.c: 128:             for(uint8_t j = 0; j < 8; j++){
  3108     0474  01E8               	clrf	main@j_652
  3109     0475                     l3274:
  3110                           
  3111                           ;main.c: 129:                 if(field[i+j*8]>0){
  3112     0475  0868               	movf	main@j_652,w
  3113     0476  00DD               	movwf	??_main
  3114     0477  3002               	movlw	2
  3115     0478                     u2365:
  3116     0478  35DD               	lslf	??_main,f
  3117     0479  3EFF               	addlw	-1
  3118     047A  1D03               	skipz
  3119     047B  2C78               	goto	u2365
  3120     047C  355D               	lslf	??_main,w
  3121     047D  0762               	addwf	main@field,w
  3122     047E  00DE               	movwf	??_main+1
  3123     047F  0867               	movf	main@i_651,w
  3124     0480  075E               	addwf	??_main+1,w
  3125     0481  00DF               	movwf	??_main+2
  3126     0482  085F               	movf	??_main+2,w
  3127     0483  0086               	movwf	6
  3128     0484  3001               	movlw	1	; select bank2/3
  3129     0485  0087               	movwf	7
  3130     0486  0801               	movf	1,w
  3131     0487  1903               	btfsc	3,2
  3132     0488  2C8A               	goto	u2371
  3133     0489  2C8B               	goto	u2370
  3134     048A                     u2371:
  3135     048A  2C92               	goto	l3278
  3136     048B                     u2370:
  3137     048B                     l3276:
  3138                           
  3139                           ;main.c: 130:                     ledSet(i,j);
  3140     048B  0868               	movf	main@j_652,w
  3141     048C  00CE               	movwf	ledSet@c
  3142     048D  0867               	movf	main@i_651,w
  3143     048E  318E  269E  3183   	fcall	_ledSet
  3144                           
  3145                           ;main.c: 131:                 } else{
  3146     0491  2C98               	goto	l3280
  3147     0492                     l3278:
  3148                           
  3149                           ;main.c: 132:                     ledClear(i,j);
  3150     0492  0868               	movf	main@j_652,w
  3151     0493  00F0               	movwf	ledClear@c
  3152     0494  0867               	movf	main@i_651,w
  3153     0495  318E  268C  3183   	fcall	_ledClear
  3154     0498                     l3280:
  3155                           
  3156                           ;main.c: 134:             }
  3157     0498  3001               	movlw	1
  3158     0499  0020               	movlb	0	; select bank0
  3159     049A  00DD               	movwf	??_main
  3160     049B  085D               	movf	??_main,w
  3161     049C  07E8               	addwf	main@j_652,f
  3162     049D                     l3282:
  3163     049D  3008               	movlw	8
  3164     049E  0268               	subwf	main@j_652,w
  3165     049F  1C03               	skipc
  3166     04A0  2CA2               	goto	u2381
  3167     04A1  2CA3               	goto	u2380
  3168     04A2                     u2381:
  3169     04A2  2C75               	goto	l3274
  3170     04A3                     u2380:
  3171     04A3                     l3284:
  3172                           
  3173                           ;main.c: 135:         }
  3174     04A3  3001               	movlw	1
  3175     04A4  00DD               	movwf	??_main
  3176     04A5  085D               	movf	??_main,w
  3177     04A6  07E7               	addwf	main@i_651,f
  3178     04A7                     l3286:
  3179     04A7  3008               	movlw	8
  3180     04A8  0267               	subwf	main@i_651,w
  3181     04A9  1C03               	skipc
  3182     04AA  2CAC               	goto	u2391
  3183     04AB  2CAD               	goto	u2390
  3184     04AC                     u2391:
  3185     04AC  2C74               	goto	l3268
  3186     04AD                     u2390:
  3187     04AD                     l3288:
  3188                           
  3189                           ;main.c: 136:         uint8_t foodPosition = snake_getFoodPosition();
  3190     04AD  318E  2617  3183   	fcall	_snake_getFoodPosition
  3191     04B0  0020               	movlb	0	; select bank0
  3192     04B1  00E4               	movwf	main@foodPosition_653
  3193     04B2                     l3290:
  3194                           
  3195                           ;main.c: 137:         ledSet(foodPosition%8, foodPosition/8);
  3196     04B2  3008               	movlw	8
  3197     04B3  00F9               	movwf	___awdiv@divisor
  3198     04B4  3000               	movlw	0
  3199     04B5  00FA               	movwf	___awdiv@divisor+1
  3200     04B6  0864               	movf	main@foodPosition_653,w
  3201     04B7  00DD               	movwf	??_main
  3202     04B8  01DE               	clrf	??_main+1
  3203     04B9  085D               	movf	??_main,w
  3204     04BA  00FB               	movwf	___awdiv@dividend
  3205     04BB  085E               	movf	??_main+1,w
  3206     04BC  00FC               	movwf	___awdiv@dividend+1
  3207     04BD  3181  2118  3183   	fcall	___awdiv
  3208     04C0  0879               	movf	?___awdiv,w
  3209     04C1  0020               	movlb	0	; select bank0
  3210     04C2  00CE               	movwf	ledSet@c
  3211     04C3  0864               	movf	main@foodPosition_653,w
  3212     04C4  3907               	andlw	7
  3213     04C5  318E  269E  3183   	fcall	_ledSet
  3214     04C8                     l3292:
  3215                           
  3216                           ;main.c: 138:         ai_printAI();
  3217     04C8  3186  2613  3183   	fcall	_ai_printAI
  3218     04CB  2C4D               	goto	l3250
  3219     04CC  3180  2802         	ljmp	start
  3220     04CE                     __end_of_main:
  3221                           
  3222                           	psect	text1
  3223     030D                     __ptext1:	
  3224 ;; *************** function _snake_move *****************
  3225 ;; Defined at:
  3226 ;;		line 32 in file "snake.c"
  3227 ;; Parameters:    Size  Location     Type
  3228 ;;  direction       1    wreg     unsigned char 
  3229 ;; Auto vars:     Size  Location     Type
  3230 ;;  direction       1    8[BANK0 ] unsigned char 
  3231 ;;  i               1   10[BANK0 ] unsigned char 
  3232 ;;  incentive       1    9[BANK0 ] char 
  3233 ;; Return value:  Size  Location     Type
  3234 ;;                  1    wreg      char 
  3235 ;; Registers used:
  3236 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3237 ;; Tracked objects:
  3238 ;;		On entry : 0/0
  3239 ;;		On exit  : 0/0
  3240 ;;		Unchanged: 0/0
  3241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3242 ;;      Params:         0       0       0       0       0       0
  3243 ;;      Locals:         0       3       0       0       0       0
  3244 ;;      Temps:          0       2       0       0       0       0
  3245 ;;      Totals:         0       5       0       0       0       0
  3246 ;;Total ram usage:        5 bytes
  3247 ;; Hardware stack levels used: 1
  3248 ;; Hardware stack levels required when called: 3
  3249 ;; This function calls:
  3250 ;;		___awdiv
  3251 ;;		_rand
  3252 ;;		_snake_initiate
  3253 ;; This function is called by:
  3254 ;;		_main
  3255 ;; This function uses a non-reentrant model
  3256 ;;
  3257                           
  3258     030D                     _snake_move:	
  3259                           ;psect for function _snake_move
  3260                           
  3261                           
  3262                           ;incstack = 0
  3263                           ; Regs used in _snake_move: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3264                           ;snake_move@direction stored from wreg
  3265     030D  0020               	movlb	0	; select bank0
  3266     030E  00D2               	movwf	snake_move@direction
  3267     030F                     l2836:
  3268                           
  3269                           ;snake.c: 33:     remainingMoves--;
  3270     030F  3001               	movlw	1
  3271     0310  02BD               	subwf	_remainingMoves,f
  3272     0311                     l2838:
  3273                           
  3274                           ;snake.c: 34:     for(uint8_t i = 0; i < (8*8); i++){
  3275     0311  01D4               	clrf	snake_move@i
  3276     0312                     l2844:
  3277                           
  3278                           ;snake.c: 35:         if(field[i] > 0){
  3279     0312  0854               	movf	snake_move@i,w
  3280     0313  3EA0               	addlw	(low (_field| (0+256)))& (0+255)
  3281     0314  0086               	movwf	6
  3282     0315  3001               	movlw	1	; select bank3/4
  3283     0316  0087               	movwf	7
  3284     0317  0801               	movf	1,w
  3285     0318  1903               	btfsc	3,2
  3286     0319  2B1B               	goto	u1891
  3287     031A  2B1C               	goto	u1890
  3288     031B                     u1891:
  3289     031B  2B23               	goto	l2848
  3290     031C                     u1890:
  3291     031C                     l2846:
  3292                           
  3293                           ;snake.c: 36:             field[i]--;
  3294     031C  0854               	movf	snake_move@i,w
  3295     031D  3EA0               	addlw	(low (_field| (0+256)))& (0+255)
  3296     031E  0086               	movwf	6
  3297     031F  3001               	movlw	1	; select bank3/4
  3298     0320  0087               	movwf	7
  3299     0321  3001               	movlw	1
  3300     0322  0281               	subwf	1,f
  3301     0323                     l2848:
  3302                           
  3303                           ;snake.c: 38:     }
  3304     0323  3001               	movlw	1
  3305     0324  00D0               	movwf	??_snake_move
  3306     0325  0850               	movf	??_snake_move,w
  3307     0326  07D4               	addwf	snake_move@i,f
  3308     0327                     l2850:
  3309     0327  3040               	movlw	64
  3310     0328  0254               	subwf	snake_move@i,w
  3311     0329  1C03               	skipc
  3312     032A  2B2C               	goto	u1901
  3313     032B  2B2D               	goto	u1900
  3314     032C                     u1901:
  3315     032C  2B12               	goto	l2844
  3316     032D                     u1900:
  3317     032D                     l2852:
  3318                           
  3319                           ;snake.c: 39:     int8_t incentive = 0;
  3320     032D  01D3               	clrf	snake_move@incentive
  3321     032E                     l2854:
  3322                           
  3323                           ;snake.c: 40:     direction &= 0x03;
  3324     032E  3003               	movlw	3
  3325     032F  00D0               	movwf	??_snake_move
  3326     0330  0850               	movf	??_snake_move,w
  3327     0331  05D2               	andwf	snake_move@direction,f
  3328                           
  3329                           ;snake.c: 41:     switch(direction){
  3330     0332  2B84               	goto	l2882
  3331     0333                     l2856:
  3332                           
  3333                           ;snake.c: 43:             if((headPosition%8) == 0){
  3334     0333  083F               	movf	_headPosition,w
  3335     0334  3907               	andlw	7
  3336     0335  1D03               	btfss	3,2
  3337     0336  2B38               	goto	u1911
  3338     0337  2B39               	goto	u1910
  3339     0338                     u1911:
  3340     0338  2B3D               	goto	l2860
  3341     0339                     u1910:
  3342     0339                     l2858:
  3343                           
  3344                           ;snake.c: 44:                 incentive = -1;
  3345     0339  0020               	movlb	0	; select bank0
  3346     033A  01D3               	clrf	snake_move@incentive
  3347     033B  03D3               	decf	snake_move@incentive,f
  3348                           
  3349                           ;snake.c: 45:             } else{
  3350     033C  2B9A               	goto	l2884
  3351     033D                     l2860:
  3352                           
  3353                           ;snake.c: 46:                 headPosition--;
  3354     033D  3001               	movlw	1
  3355     033E  02BF               	subwf	_headPosition,f
  3356     033F  2B9A               	goto	l2884
  3357     0340                     l2862:
  3358                           
  3359                           ;snake.c: 50:             if((headPosition%8) == (8 -1)){
  3360     0340  3007               	movlw	7
  3361     0341  053F               	andwf	_headPosition,w
  3362     0342  00D0               	movwf	??_snake_move
  3363     0343  3007               	movlw	7
  3364     0344  0650               	xorwf	??_snake_move,w
  3365     0345  1D03               	btfss	3,2
  3366     0346  2B48               	goto	u1921
  3367     0347  2B49               	goto	u1920
  3368     0348                     u1921:
  3369     0348  2B4A               	goto	l2866
  3370     0349                     u1920:
  3371     0349  2B39               	goto	l2858
  3372     034A                     l2866:
  3373                           
  3374                           ;snake.c: 53:                 headPosition++;
  3375     034A  3001               	movlw	1
  3376     034B  00D0               	movwf	??_snake_move
  3377     034C  0850               	movf	??_snake_move,w
  3378     034D  07BF               	addwf	_headPosition,f
  3379     034E  2B9A               	goto	l2884
  3380     034F                     l2868:
  3381                           
  3382                           ;snake.c: 57:             if((headPosition/8) == 0){
  3383     034F  3008               	movlw	8
  3384     0350  00F9               	movwf	___awdiv@divisor
  3385     0351  3000               	movlw	0
  3386     0352  00FA               	movwf	___awdiv@divisor+1
  3387     0353  083F               	movf	_headPosition,w
  3388     0354  00D0               	movwf	??_snake_move
  3389     0355  01D1               	clrf	??_snake_move+1
  3390     0356  0850               	movf	??_snake_move,w
  3391     0357  00FB               	movwf	___awdiv@dividend
  3392     0358  0851               	movf	??_snake_move+1,w
  3393     0359  00FC               	movwf	___awdiv@dividend+1
  3394     035A  3181  2118  3183   	fcall	___awdiv
  3395     035D  0879               	movf	?___awdiv,w
  3396     035E  047A               	iorwf	?___awdiv+1,w
  3397     035F  1D03               	btfss	3,2
  3398     0360  2B62               	goto	u1931
  3399     0361  2B63               	goto	u1930
  3400     0362                     u1931:
  3401     0362  2B64               	goto	l2872
  3402     0363                     u1930:
  3403     0363  2B39               	goto	l2858
  3404     0364                     l2872:
  3405                           
  3406                           ;snake.c: 60:                 headPosition -= 8;
  3407     0364  3008               	movlw	8
  3408     0365  0020               	movlb	0	; select bank0
  3409     0366  02BF               	subwf	_headPosition,f
  3410     0367  2B9A               	goto	l2884
  3411     0368                     l2874:
  3412                           
  3413                           ;snake.c: 64:             if((headPosition/8) == (8 -1)){
  3414     0368  3008               	movlw	8
  3415     0369  00F9               	movwf	___awdiv@divisor
  3416     036A  3000               	movlw	0
  3417     036B  00FA               	movwf	___awdiv@divisor+1
  3418     036C  083F               	movf	_headPosition,w
  3419     036D  00D0               	movwf	??_snake_move
  3420     036E  01D1               	clrf	??_snake_move+1
  3421     036F  0850               	movf	??_snake_move,w
  3422     0370  00FB               	movwf	___awdiv@dividend
  3423     0371  0851               	movf	??_snake_move+1,w
  3424     0372  00FC               	movwf	___awdiv@dividend+1
  3425     0373  3181  2118  3183   	fcall	___awdiv
  3426     0376  3007               	movlw	7
  3427     0377  0679               	xorwf	?___awdiv,w
  3428     0378  047A               	iorwf	?___awdiv+1,w
  3429     0379  1D03               	btfss	3,2
  3430     037A  2B7C               	goto	u1941
  3431     037B  2B7D               	goto	u1940
  3432     037C                     u1941:
  3433     037C  2B7E               	goto	l2878
  3434     037D                     u1940:
  3435     037D  2B39               	goto	l2858
  3436     037E                     l2878:
  3437                           
  3438                           ;snake.c: 67:                 headPosition += 8;
  3439     037E  3008               	movlw	8
  3440     037F  0020               	movlb	0	; select bank0
  3441     0380  00D0               	movwf	??_snake_move
  3442     0381  0850               	movf	??_snake_move,w
  3443     0382  07BF               	addwf	_headPosition,f
  3444     0383  2B9A               	goto	l2884
  3445     0384                     l2882:
  3446     0384  0852               	movf	snake_move@direction,w
  3447     0385  00D0               	movwf	??_snake_move
  3448     0386  01D1               	clrf	??_snake_move+1
  3449                           
  3450                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3451                           ; Switch size 1, requested type "simple"
  3452                           ; Number of cases is 1, Range of values is 0 to 0
  3453                           ; switch strategies available:
  3454                           ; Name         Instructions Cycles
  3455                           ; simple_byte            4     3 (average)
  3456                           ; direct_byte            8     6 (fixed)
  3457                           ; jumptable            260     6 (fixed)
  3458                           ;	Chosen strategy is simple_byte
  3459     0387  0851               	movf	??_snake_move+1,w
  3460     0388  3A00               	xorlw	0	; case 0
  3461     0389  1903               	skipnz
  3462     038A  2B8C               	goto	l3360
  3463     038B  2B9A               	goto	l2884
  3464     038C                     l3360:
  3465                           
  3466                           ; Switch size 1, requested type "simple"
  3467                           ; Number of cases is 4, Range of values is 0 to 3
  3468                           ; switch strategies available:
  3469                           ; Name         Instructions Cycles
  3470                           ; simple_byte           13     7 (average)
  3471                           ; direct_byte           14     6 (fixed)
  3472                           ; jumptable            260     6 (fixed)
  3473                           ;	Chosen strategy is simple_byte
  3474     038C  0850               	movf	??_snake_move,w
  3475     038D  3A00               	xorlw	0	; case 0
  3476     038E  1903               	skipnz
  3477     038F  2B33               	goto	l2856
  3478     0390  3A01               	xorlw	1	; case 1
  3479     0391  1903               	skipnz
  3480     0392  2B40               	goto	l2862
  3481     0393  3A03               	xorlw	3	; case 2
  3482     0394  1903               	skipnz
  3483     0395  2B4F               	goto	l2868
  3484     0396  3A01               	xorlw	1	; case 3
  3485     0397  1903               	skipnz
  3486     0398  2B68               	goto	l2874
  3487     0399  2B9A               	goto	l2884
  3488     039A                     l2884:
  3489                           
  3490                           ;snake.c: 71:     if(incentive == -1){
  3491     039A  0A53               	incf	snake_move@incentive,w
  3492     039B  1D03               	btfss	3,2
  3493     039C  2B9E               	goto	u1951
  3494     039D  2B9F               	goto	u1950
  3495     039E                     u1951:
  3496     039E  2BA3               	goto	l2888
  3497     039F                     u1950:
  3498     039F                     l2886:
  3499                           
  3500                           ;snake.c: 72:         snake_initiate();
  3501     039F  318F  2749  3183   	fcall	_snake_initiate
  3502                           
  3503                           ;snake.c: 73:     } else if(field[headPosition] > 0){
  3504     03A2  2BD6               	goto	l2908
  3505     03A3                     l2888:
  3506     03A3  083F               	movf	_headPosition,w
  3507     03A4  3EA0               	addlw	(low (_field| (0+256)))& (0+255)
  3508     03A5  0086               	movwf	6
  3509     03A6  3001               	movlw	1	; select bank3/4
  3510     03A7  0087               	movwf	7
  3511     03A8  0801               	movf	1,w
  3512     03A9  1903               	btfsc	3,2
  3513     03AA  2BAC               	goto	u1961
  3514     03AB  2BAD               	goto	u1960
  3515     03AC                     u1961:
  3516     03AC  2BB0               	goto	l2894
  3517     03AD                     u1960:
  3518     03AD                     l2890:
  3519                           
  3520                           ;snake.c: 74:         incentive = -1;
  3521     03AD  01D3               	clrf	snake_move@incentive
  3522     03AE  03D3               	decf	snake_move@incentive,f
  3523     03AF  2B9F               	goto	l2886
  3524     03B0                     l2894:
  3525                           
  3526                           ;snake.c: 77:         field[headPosition] = snakeSize;
  3527     03B0  083F               	movf	_headPosition,w
  3528     03B1  3EA0               	addlw	(low (_field| (0+256)))& (0+255)
  3529     03B2  0086               	movwf	6
  3530     03B3  3001               	movlw	1	; select bank3/4
  3531     03B4  0087               	movwf	7
  3532     03B5  0840               	movf	_snakeSize,w
  3533     03B6  0081               	movwf	1
  3534     03B7                     l2896:
  3535                           
  3536                           ;snake.c: 78:         if(headPosition == foodPosition){
  3537     03B7  083F               	movf	_headPosition,w
  3538     03B8  063E               	xorwf	_foodPosition,w
  3539     03B9  1D03               	skipz
  3540     03BA  2BBC               	goto	u1971
  3541     03BB  2BBD               	goto	u1970
  3542     03BC                     u1971:
  3543     03BC  2BD6               	goto	l2908
  3544     03BD                     u1970:
  3545     03BD                     l2898:
  3546                           
  3547                           ;snake.c: 79:             remainingMoves = 40;
  3548     03BD  3028               	movlw	40
  3549     03BE  00BD               	movwf	_remainingMoves
  3550     03BF                     l2900:
  3551                           
  3552                           ;snake.c: 80:             incentive = 1;
  3553     03BF  01D3               	clrf	snake_move@incentive
  3554     03C0  0AD3               	incf	snake_move@incentive,f
  3555     03C1                     l2902:
  3556                           
  3557                           ;snake.c: 81:             snakeSize++;
  3558     03C1  3001               	movlw	1
  3559     03C2  00D0               	movwf	??_snake_move
  3560     03C3  0850               	movf	??_snake_move,w
  3561     03C4  07C0               	addwf	_snakeSize,f
  3562     03C5                     l2904:
  3563                           
  3564                           ;snake.c: 83:                 foodPosition = rand()%(8*8);
  3565     03C5  3180  206A  3183   	fcall	_rand
  3566     03C8  087C               	movf	?_rand,w
  3567     03C9  393F               	andlw	63
  3568     03CA  0020               	movlb	0	; select bank0
  3569     03CB  00BE               	movwf	_foodPosition
  3570     03CC                     l2906:
  3571                           
  3572                           ;snake.c: 84:             }while(field[foodPosition] > 0);
  3573     03CC  083E               	movf	_foodPosition,w
  3574     03CD  3EA0               	addlw	(low (_field| (0+256)))& (0+255)
  3575     03CE  0086               	movwf	6
  3576     03CF  3001               	movlw	1	; select bank3/4
  3577     03D0  0087               	movwf	7
  3578     03D1  0801               	movf	1,w
  3579     03D2  1D03               	btfss	3,2
  3580     03D3  2BD5               	goto	u1981
  3581     03D4  2BD6               	goto	u1980
  3582     03D5                     u1981:
  3583     03D5  2BC5               	goto	l2904
  3584     03D6                     u1980:
  3585     03D6                     l2908:
  3586                           
  3587                           ;snake.c: 87:     if(remainingMoves == 0){
  3588     03D6  0020               	movlb	0	; select bank0
  3589     03D7  083D               	movf	_remainingMoves,w
  3590     03D8  1D03               	btfss	3,2
  3591     03D9  2BDB               	goto	u1991
  3592     03DA  2BDC               	goto	u1990
  3593     03DB                     u1991:
  3594     03DB  2BE1               	goto	l2914
  3595     03DC                     u1990:
  3596     03DC                     l2910:
  3597                           
  3598                           ;snake.c: 88:         incentive = -1;
  3599     03DC  01D3               	clrf	snake_move@incentive
  3600     03DD  03D3               	decf	snake_move@incentive,f
  3601     03DE                     l2912:
  3602                           
  3603                           ;snake.c: 89:         snake_initiate();
  3604     03DE  318F  2749  3183   	fcall	_snake_initiate
  3605     03E1                     l2914:
  3606                           
  3607                           ;snake.c: 91:     return incentive;
  3608     03E1  0020               	movlb	0	; select bank0
  3609     03E2  0853               	movf	snake_move@incentive,w
  3610     03E3                     l413:
  3611     03E3  0008               	return
  3612     03E4                     __end_of_snake_move:
  3613                           
  3614                           	psect	text2
  3615     0F49                     __ptext2:	
  3616 ;; *************** function _snake_initiate *****************
  3617 ;; Defined at:
  3618 ;;		line 20 in file "snake.c"
  3619 ;; Parameters:    Size  Location     Type
  3620 ;;		None
  3621 ;; Auto vars:     Size  Location     Type
  3622 ;;  i               1    5[BANK0 ] unsigned char 
  3623 ;; Return value:  Size  Location     Type
  3624 ;;                  1    wreg      void 
  3625 ;; Registers used:
  3626 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3627 ;; Tracked objects:
  3628 ;;		On entry : 0/0
  3629 ;;		On exit  : 0/0
  3630 ;;		Unchanged: 0/0
  3631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3632 ;;      Params:         0       0       0       0       0       0
  3633 ;;      Locals:         0       1       0       0       0       0
  3634 ;;      Temps:          0       1       0       0       0       0
  3635 ;;      Totals:         0       2       0       0       0       0
  3636 ;;Total ram usage:        2 bytes
  3637 ;; Hardware stack levels used: 1
  3638 ;; Hardware stack levels required when called: 2
  3639 ;; This function calls:
  3640 ;;		_rand
  3641 ;; This function is called by:
  3642 ;;		_main
  3643 ;;		_snake_move
  3644 ;; This function uses a non-reentrant model
  3645 ;;
  3646                           
  3647     0F49                     _snake_initiate:	
  3648                           ;psect for function _snake_initiate
  3649                           
  3650     0F49                     l2498:	
  3651                           ;incstack = 0
  3652                           ; Regs used in _snake_initiate: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3653                           
  3654                           
  3655                           ;snake.c: 21:     for(uint8_t i = 0; i < (8*8); i++){
  3656     0F49  0020               	movlb	0	; select bank0
  3657     0F4A  01CF               	clrf	snake_initiate@i
  3658     0F4B                     l2504:
  3659                           
  3660                           ;snake.c: 22:         field[i] = 0;
  3661     0F4B  084F               	movf	snake_initiate@i,w
  3662     0F4C  3EA0               	addlw	(low (_field| (0+256)))& (0+255)
  3663     0F4D  0086               	movwf	6
  3664     0F4E  3001               	movlw	1	; select bank3/4
  3665     0F4F  0087               	movwf	7
  3666     0F50  0181               	clrf	1
  3667     0F51                     l2506:
  3668                           
  3669                           ;snake.c: 23:     }
  3670     0F51  3001               	movlw	1
  3671     0F52  00CE               	movwf	??_snake_initiate
  3672     0F53  084E               	movf	??_snake_initiate,w
  3673     0F54  07CF               	addwf	snake_initiate@i,f
  3674     0F55                     l2508:
  3675     0F55  3040               	movlw	64
  3676     0F56  024F               	subwf	snake_initiate@i,w
  3677     0F57  1C03               	skipc
  3678     0F58  2F5A               	goto	u1391
  3679     0F59  2F5B               	goto	u1390
  3680     0F5A                     u1391:
  3681     0F5A  2F4B               	goto	l2504
  3682     0F5B                     u1390:
  3683     0F5B                     l2510:
  3684                           
  3685                           ;snake.c: 25:     headPosition = rand()%(8*8);
  3686     0F5B  3180  206A  318F   	fcall	_rand
  3687     0F5E  087C               	movf	?_rand,w
  3688     0F5F  393F               	andlw	63
  3689     0F60  0020               	movlb	0	; select bank0
  3690     0F61  00BF               	movwf	_headPosition
  3691                           
  3692                           ;snake.c: 26:     foodPosition = rand()%(8*8);
  3693     0F62  3180  206A  318F   	fcall	_rand
  3694     0F65  087C               	movf	?_rand,w
  3695     0F66  393F               	andlw	63
  3696     0F67  0020               	movlb	0	; select bank0
  3697     0F68  00BE               	movwf	_foodPosition
  3698     0F69                     l2512:
  3699                           
  3700                           ;snake.c: 27:     snakeSize = 3;
  3701     0F69  3003               	movlw	3
  3702     0F6A  00C0               	movwf	_snakeSize
  3703     0F6B                     l2514:
  3704                           
  3705                           ;snake.c: 28:     remainingMoves = 40;
  3706     0F6B  3028               	movlw	40
  3707     0F6C  00BD               	movwf	_remainingMoves
  3708     0F6D                     l2516:
  3709                           
  3710                           ;snake.c: 29:     field[headPosition] = snakeSize;
  3711     0F6D  083F               	movf	_headPosition,w
  3712     0F6E  3EA0               	addlw	(low (_field| (0+256)))& (0+255)
  3713     0F6F  0086               	movwf	6
  3714     0F70  3001               	movlw	1	; select bank3/4
  3715     0F71  0087               	movwf	7
  3716     0F72  0840               	movf	_snakeSize,w
  3717     0F73  0081               	movwf	1
  3718     0F74                     l385:
  3719     0F74  0008               	return
  3720     0F75                     __end_of_snake_initiate:
  3721                           
  3722                           	psect	text3
  3723     0178                     __ptext3:	
  3724 ;; *************** function _snake_getSurroundings *****************
  3725 ;; Defined at:
  3726 ;;		line 98 in file "snake.c"
  3727 ;; Parameters:    Size  Location     Type
  3728 ;;  surroundings    1    wreg     PTR char 
  3729 ;;		 -> Y0(8), 
  3730 ;; Auto vars:     Size  Location     Type
  3731 ;;  surroundings    1   13[BANK0 ] PTR char 
  3732 ;;		 -> Y0(8), 
  3733 ;;  i               1   12[BANK0 ] unsigned char 
  3734 ;;  i               1    9[BANK0 ] unsigned char 
  3735 ;;  ch              1   11[BANK0 ] unsigned char 
  3736 ;;  lh              1   10[BANK0 ] unsigned char 
  3737 ;;  cf              1    8[BANK0 ] unsigned char 
  3738 ;;  lf              1    7[BANK0 ] unsigned char 
  3739 ;;  p               1    6[BANK0 ] unsigned char 
  3740 ;; Return value:  Size  Location     Type
  3741 ;;                  1    wreg      void 
  3742 ;; Registers used:
  3743 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3744 ;; Tracked objects:
  3745 ;;		On entry : 0/0
  3746 ;;		On exit  : 0/0
  3747 ;;		Unchanged: 0/0
  3748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3749 ;;      Params:         0       0       0       0       0       0
  3750 ;;      Locals:         0       8       0       0       0       0
  3751 ;;      Temps:          0       2       0       0       0       0
  3752 ;;      Totals:         0      10       0       0       0       0
  3753 ;;Total ram usage:       10 bytes
  3754 ;; Hardware stack levels used: 1
  3755 ;; Hardware stack levels required when called: 1
  3756 ;; This function calls:
  3757 ;;		___awdiv
  3758 ;; This function is called by:
  3759 ;;		_main
  3760 ;; This function uses a non-reentrant model
  3761 ;;
  3762                           
  3763     0178                     _snake_getSurroundings:	
  3764                           ;psect for function _snake_getSurroundings
  3765                           
  3766                           
  3767                           ;incstack = 0
  3768                           ; Regs used in _snake_getSurroundings: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  3769                           ;snake_getSurroundings@surroundings stored from wreg
  3770     0178  0020               	movlb	0	; select bank0
  3771     0179  00D7               	movwf	snake_getSurroundings@surroundings
  3772     017A                     l2712:
  3773                           
  3774                           ;snake.c: 99:     for(uint8_t i = 0; i < 8; i++){
  3775     017A  01D3               	clrf	snake_getSurroundings@i
  3776     017B                     l2718:
  3777                           
  3778                           ;snake.c: 100:         surroundings[i] = 0;
  3779     017B  0853               	movf	snake_getSurroundings@i,w
  3780     017C  0757               	addwf	snake_getSurroundings@surroundings,w
  3781     017D  00CE               	movwf	??_snake_getSurroundings
  3782     017E  084E               	movf	??_snake_getSurroundings,w
  3783     017F  0086               	movwf	6
  3784     0180  0187               	clrf	7
  3785     0181  0181               	clrf	1
  3786     0182                     l2720:
  3787                           
  3788                           ;snake.c: 101:     }
  3789     0182  3001               	movlw	1
  3790     0183  00CE               	movwf	??_snake_getSurroundings
  3791     0184  084E               	movf	??_snake_getSurroundings,w
  3792     0185  07D3               	addwf	snake_getSurroundings@i,f
  3793     0186                     l2722:
  3794     0186  3008               	movlw	8
  3795     0187  0253               	subwf	snake_getSurroundings@i,w
  3796     0188  1C03               	skipc
  3797     0189  298B               	goto	u1701
  3798     018A  298C               	goto	u1700
  3799     018B                     u1701:
  3800     018B  297B               	goto	l2718
  3801     018C                     u1700:
  3802     018C                     l2724:
  3803                           
  3804                           ;snake.c: 102:     uint8_t lh = headPosition%8;
  3805     018C  083F               	movf	_headPosition,w
  3806     018D  3907               	andlw	7
  3807     018E  00D4               	movwf	snake_getSurroundings@lh
  3808     018F                     l2726:
  3809                           
  3810                           ;snake.c: 103:     uint8_t ch = headPosition/8;
  3811     018F  3008               	movlw	8
  3812     0190  00F9               	movwf	___awdiv@divisor
  3813     0191  3000               	movlw	0
  3814     0192  00FA               	movwf	___awdiv@divisor+1
  3815     0193  083F               	movf	_headPosition,w
  3816     0194  00CE               	movwf	??_snake_getSurroundings
  3817     0195  01CF               	clrf	??_snake_getSurroundings+1
  3818     0196  084E               	movf	??_snake_getSurroundings,w
  3819     0197  00FB               	movwf	___awdiv@dividend
  3820     0198  084F               	movf	??_snake_getSurroundings+1,w
  3821     0199  00FC               	movwf	___awdiv@dividend+1
  3822     019A  3181  2118  3181   	fcall	___awdiv
  3823     019D  0879               	movf	?___awdiv,w
  3824     019E  0020               	movlb	0	; select bank0
  3825     019F  00D5               	movwf	snake_getSurroundings@ch
  3826     01A0                     l2728:
  3827                           
  3828                           ;snake.c: 104:     uint8_t lf = foodPosition%8;
  3829     01A0  083E               	movf	_foodPosition,w
  3830     01A1  3907               	andlw	7
  3831     01A2  00D1               	movwf	snake_getSurroundings@lf
  3832                           
  3833                           ;snake.c: 105:     uint8_t cf = foodPosition/8;
  3834     01A3  3008               	movlw	8
  3835     01A4  00F9               	movwf	___awdiv@divisor
  3836     01A5  3000               	movlw	0
  3837     01A6  00FA               	movwf	___awdiv@divisor+1
  3838     01A7  083E               	movf	_foodPosition,w
  3839     01A8  00CE               	movwf	??_snake_getSurroundings
  3840     01A9  01CF               	clrf	??_snake_getSurroundings+1
  3841     01AA  084E               	movf	??_snake_getSurroundings,w
  3842     01AB  00FB               	movwf	___awdiv@dividend
  3843     01AC  084F               	movf	??_snake_getSurroundings+1,w
  3844     01AD  00FC               	movwf	___awdiv@dividend+1
  3845     01AE  3181  2118  3181   	fcall	___awdiv
  3846     01B1  0879               	movf	?___awdiv,w
  3847     01B2  0020               	movlb	0	; select bank0
  3848     01B3  00D2               	movwf	snake_getSurroundings@cf
  3849     01B4                     l2730:
  3850                           
  3851                           ;snake.c: 106:     if(lh == 0){
  3852     01B4  0854               	movf	snake_getSurroundings@lh,w
  3853     01B5  1D03               	btfss	3,2
  3854     01B6  29B8               	goto	u1711
  3855     01B7  29B9               	goto	u1710
  3856     01B8                     u1711:
  3857     01B8  29BF               	goto	l2734
  3858     01B9                     u1710:
  3859     01B9                     l2732:
  3860                           
  3861                           ;snake.c: 107:         surroundings[0] = 1;
  3862     01B9  0857               	movf	snake_getSurroundings@surroundings,w
  3863     01BA  0086               	movwf	6
  3864     01BB  0187               	clrf	7
  3865     01BC  0181               	clrf	1
  3866     01BD  0A81               	incf	1,f
  3867                           
  3868                           ;snake.c: 108:     } else if(lh == (8 -1)){
  3869     01BE  29CA               	goto	l2738
  3870     01BF                     l2734:
  3871     01BF  3007               	movlw	7
  3872     01C0  0654               	xorwf	snake_getSurroundings@lh,w
  3873     01C1  1D03               	btfss	3,2
  3874     01C2  29C4               	goto	u1721
  3875     01C3  29C5               	goto	u1720
  3876     01C4                     u1721:
  3877     01C4  29CA               	goto	l2738
  3878     01C5                     u1720:
  3879     01C5                     l2736:
  3880                           
  3881                           ;snake.c: 109:         surroundings[1] = 1;
  3882     01C5  0A57               	incf	snake_getSurroundings@surroundings,w
  3883     01C6  0086               	movwf	6
  3884     01C7  0187               	clrf	7
  3885     01C8  0181               	clrf	1
  3886     01C9  0A81               	incf	1,f
  3887     01CA                     l2738:
  3888                           
  3889                           ;snake.c: 111:     if(ch == 0){
  3890     01CA  0855               	movf	snake_getSurroundings@ch,w
  3891     01CB  1D03               	btfss	3,2
  3892     01CC  29CE               	goto	u1731
  3893     01CD  29CF               	goto	u1730
  3894     01CE                     u1731:
  3895     01CE  29D6               	goto	l2742
  3896     01CF                     u1730:
  3897     01CF                     l2740:
  3898                           
  3899                           ;snake.c: 112:         surroundings[2] = 1;
  3900     01CF  0857               	movf	snake_getSurroundings@surroundings,w
  3901     01D0  3E02               	addlw	2
  3902     01D1  0086               	movwf	6
  3903     01D2  0187               	clrf	7
  3904     01D3  0181               	clrf	1
  3905     01D4  0A81               	incf	1,f
  3906                           
  3907                           ;snake.c: 113:     } else if(ch == (8 -1)){
  3908     01D5  29E2               	goto	l2746
  3909     01D6                     l2742:
  3910     01D6  3007               	movlw	7
  3911     01D7  0655               	xorwf	snake_getSurroundings@ch,w
  3912     01D8  1D03               	btfss	3,2
  3913     01D9  29DB               	goto	u1741
  3914     01DA  29DC               	goto	u1740
  3915     01DB                     u1741:
  3916     01DB  29E2               	goto	l2746
  3917     01DC                     u1740:
  3918     01DC                     l2744:
  3919                           
  3920                           ;snake.c: 114:         surroundings[3] = 1;
  3921     01DC  0857               	movf	snake_getSurroundings@surroundings,w
  3922     01DD  3E03               	addlw	3
  3923     01DE  0086               	movwf	6
  3924     01DF  0187               	clrf	7
  3925     01E0  0181               	clrf	1
  3926     01E1  0A81               	incf	1,f
  3927     01E2                     l2746:
  3928                           
  3929                           ;snake.c: 116:     uint8_t p;;snake.c: 117:     for(uint8_t i = 0; i < 4; i++){
  3930     01E2  01D6               	clrf	snake_getSurroundings@i_776
  3931     01E3                     l2752:
  3932                           
  3933                           ;snake.c: 118:         p = (headPosition+snake_mapping[i])%(8*8);
  3934     01E3  0856               	movf	snake_getSurroundings@i_776,w
  3935     01E4  3ED0               	addlw	(low (_snake_mapping| 0))& (0+255)
  3936     01E5  0086               	movwf	6
  3937     01E6  0187               	clrf	7
  3938     01E7  0801               	movf	1,w
  3939     01E8  073F               	addwf	_headPosition,w
  3940     01E9  393F               	andlw	63
  3941     01EA  00D0               	movwf	snake_getSurroundings@p
  3942                           
  3943                           ;snake.c: 119:         if(field[p] > 0){
  3944     01EB  0850               	movf	snake_getSurroundings@p,w
  3945     01EC  3EA0               	addlw	(low (_field| (0+256)))& (0+255)
  3946     01ED  0086               	movwf	6
  3947     01EE  3001               	movlw	1	; select bank3/4
  3948     01EF  0087               	movwf	7
  3949     01F0  0801               	movf	1,w
  3950     01F1  1903               	btfsc	3,2
  3951     01F2  29F4               	goto	u1751
  3952     01F3  29F5               	goto	u1750
  3953     01F4                     u1751:
  3954     01F4  29FD               	goto	l2756
  3955     01F5                     u1750:
  3956     01F5                     l2754:
  3957                           
  3958                           ;snake.c: 120:             surroundings[i] = 1;
  3959     01F5  0856               	movf	snake_getSurroundings@i_776,w
  3960     01F6  0757               	addwf	snake_getSurroundings@surroundings,w
  3961     01F7  00CE               	movwf	??_snake_getSurroundings
  3962     01F8  084E               	movf	??_snake_getSurroundings,w
  3963     01F9  0086               	movwf	6
  3964     01FA  0187               	clrf	7
  3965     01FB  0181               	clrf	1
  3966     01FC  0A81               	incf	1,f
  3967     01FD                     l2756:
  3968                           
  3969                           ;snake.c: 122:     }
  3970     01FD  3001               	movlw	1
  3971     01FE  00CE               	movwf	??_snake_getSurroundings
  3972     01FF  084E               	movf	??_snake_getSurroundings,w
  3973     0200  07D6               	addwf	snake_getSurroundings@i_776,f
  3974     0201                     l2758:
  3975     0201  3004               	movlw	4
  3976     0202  0256               	subwf	snake_getSurroundings@i_776,w
  3977     0203  1C03               	skipc
  3978     0204  2A06               	goto	u1761
  3979     0205  2A07               	goto	u1760
  3980     0206                     u1761:
  3981     0206  29E3               	goto	l2752
  3982     0207                     u1760:
  3983     0207                     l2760:
  3984                           
  3985                           ;snake.c: 123:     if(lf<lh){
  3986     0207  0854               	movf	snake_getSurroundings@lh,w
  3987     0208  0251               	subwf	snake_getSurroundings@lf,w
  3988     0209  1803               	skipnc
  3989     020A  2A0C               	goto	u1771
  3990     020B  2A0D               	goto	u1770
  3991     020C                     u1771:
  3992     020C  2A14               	goto	l2764
  3993     020D                     u1770:
  3994     020D                     l2762:
  3995                           
  3996                           ;snake.c: 124:         surroundings[4] = 1;
  3997     020D  0857               	movf	snake_getSurroundings@surroundings,w
  3998     020E  3E04               	addlw	4
  3999     020F  0086               	movwf	6
  4000     0210  0187               	clrf	7
  4001     0211  0181               	clrf	1
  4002     0212  0A81               	incf	1,f
  4003                           
  4004                           ;snake.c: 125:     } else if(lf>lh){
  4005     0213  2A20               	goto	l2768
  4006     0214                     l2764:
  4007     0214  0851               	movf	snake_getSurroundings@lf,w
  4008     0215  0254               	subwf	snake_getSurroundings@lh,w
  4009     0216  1803               	skipnc
  4010     0217  2A19               	goto	u1781
  4011     0218  2A1A               	goto	u1780
  4012     0219                     u1781:
  4013     0219  2A20               	goto	l2768
  4014     021A                     u1780:
  4015     021A                     l2766:
  4016                           
  4017                           ;snake.c: 126:         surroundings[5] = 1;
  4018     021A  0857               	movf	snake_getSurroundings@surroundings,w
  4019     021B  3E05               	addlw	5
  4020     021C  0086               	movwf	6
  4021     021D  0187               	clrf	7
  4022     021E  0181               	clrf	1
  4023     021F  0A81               	incf	1,f
  4024     0220                     l2768:
  4025                           
  4026                           ;snake.c: 128:     if(cf<ch){
  4027     0220  0855               	movf	snake_getSurroundings@ch,w
  4028     0221  0252               	subwf	snake_getSurroundings@cf,w
  4029     0222  1803               	skipnc
  4030     0223  2A25               	goto	u1791
  4031     0224  2A26               	goto	u1790
  4032     0225                     u1791:
  4033     0225  2A2D               	goto	l2772
  4034     0226                     u1790:
  4035     0226                     l2770:
  4036                           
  4037                           ;snake.c: 129:         surroundings[6] = 1;
  4038     0226  0857               	movf	snake_getSurroundings@surroundings,w
  4039     0227  3E06               	addlw	6
  4040     0228  0086               	movwf	6
  4041     0229  0187               	clrf	7
  4042     022A  0181               	clrf	1
  4043     022B  0A81               	incf	1,f
  4044                           
  4045                           ;snake.c: 130:     } else if(cf>ch){
  4046     022C  2A39               	goto	l436
  4047     022D                     l2772:
  4048     022D  0852               	movf	snake_getSurroundings@cf,w
  4049     022E  0255               	subwf	snake_getSurroundings@ch,w
  4050     022F  1803               	skipnc
  4051     0230  2A32               	goto	u1801
  4052     0231  2A33               	goto	u1800
  4053     0232                     u1801:
  4054     0232  2A39               	goto	l436
  4055     0233                     u1800:
  4056     0233                     l2774:
  4057                           
  4058                           ;snake.c: 131:         surroundings[7] = 1;
  4059     0233  0857               	movf	snake_getSurroundings@surroundings,w
  4060     0234  3E07               	addlw	7
  4061     0235  0086               	movwf	6
  4062     0236  0187               	clrf	7
  4063     0237  0181               	clrf	1
  4064     0238  0A81               	incf	1,f
  4065     0239                     l436:
  4066     0239  0008               	return
  4067     023A                     __end_of_snake_getSurroundings:
  4068                           
  4069                           	psect	text4
  4070     0E17                     __ptext4:	
  4071 ;; *************** function _snake_getFoodPosition *****************
  4072 ;; Defined at:
  4073 ;;		line 142 in file "snake.c"
  4074 ;; Parameters:    Size  Location     Type
  4075 ;;		None
  4076 ;; Auto vars:     Size  Location     Type
  4077 ;;		None
  4078 ;; Return value:  Size  Location     Type
  4079 ;;                  1    wreg      unsigned char 
  4080 ;; Registers used:
  4081 ;;		wreg
  4082 ;; Tracked objects:
  4083 ;;		On entry : 0/0
  4084 ;;		On exit  : 0/0
  4085 ;;		Unchanged: 0/0
  4086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4087 ;;      Params:         0       0       0       0       0       0
  4088 ;;      Locals:         0       0       0       0       0       0
  4089 ;;      Temps:          0       0       0       0       0       0
  4090 ;;      Totals:         0       0       0       0       0       0
  4091 ;;Total ram usage:        0 bytes
  4092 ;; Hardware stack levels used: 1
  4093 ;; This function calls:
  4094 ;;		Nothing
  4095 ;; This function is called by:
  4096 ;;		_main
  4097 ;; This function uses a non-reentrant model
  4098 ;;
  4099                           
  4100     0E17                     _snake_getFoodPosition:	
  4101                           ;psect for function _snake_getFoodPosition
  4102                           
  4103     0E17                     l2674:	
  4104                           ;incstack = 0
  4105                           ; Regs used in _snake_getFoodPosition: [wreg]
  4106                           
  4107                           
  4108                           ;snake.c: 143:     return foodPosition;
  4109     0E17  0020               	movlb	0	; select bank0
  4110     0E18  083E               	movf	_foodPosition,w
  4111     0E19                     l445:
  4112     0E19  0008               	return
  4113     0E1A                     __end_of_snake_getFoodPosition:
  4114                           
  4115                           	psect	text5
  4116     0E15                     __ptext5:	
  4117 ;; *************** function _snake_getField *****************
  4118 ;; Defined at:
  4119 ;;		line 94 in file "snake.c"
  4120 ;; Parameters:    Size  Location     Type
  4121 ;;		None
  4122 ;; Auto vars:     Size  Location     Type
  4123 ;;		None
  4124 ;; Return value:  Size  Location     Type
  4125 ;;                  1    wreg      PTR unsigned char 
  4126 ;; Registers used:
  4127 ;;		wreg
  4128 ;; Tracked objects:
  4129 ;;		On entry : 0/0
  4130 ;;		On exit  : 0/0
  4131 ;;		Unchanged: 0/0
  4132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4133 ;;      Params:         0       0       0       0       0       0
  4134 ;;      Locals:         0       0       0       0       0       0
  4135 ;;      Temps:          0       0       0       0       0       0
  4136 ;;      Totals:         0       0       0       0       0       0
  4137 ;;Total ram usage:        0 bytes
  4138 ;; Hardware stack levels used: 1
  4139 ;; This function calls:
  4140 ;;		Nothing
  4141 ;; This function is called by:
  4142 ;;		_main
  4143 ;; This function uses a non-reentrant model
  4144 ;;
  4145                           
  4146     0E15                     _snake_getField:	
  4147                           ;psect for function _snake_getField
  4148                           
  4149     0E15                     l2666:	
  4150                           ;incstack = 0
  4151                           ; Regs used in _snake_getField: [wreg]
  4152                           
  4153                           
  4154                           ;snake.c: 95:     return field;
  4155     0E15  30A0               	movlw	(low (_field| (0+256)))& (0+255)
  4156     0E16                     l416:
  4157     0E16  0008               	return
  4158     0E17                     __end_of_snake_getField:
  4159                           
  4160                           	psect	text6
  4161     0FA3                     __ptext6:	
  4162 ;; *************** function _sendMatrix *****************
  4163 ;; Defined at:
  4164 ;;		line 55 in file "ledMatrix.c"
  4165 ;; Parameters:    Size  Location     Type
  4166 ;;		None
  4167 ;; Auto vars:     Size  Location     Type
  4168 ;;  j               1    6[COMMON] unsigned char 
  4169 ;;  i               1    7[COMMON] unsigned char 
  4170 ;;  nb              1    5[COMMON] unsigned char 
  4171 ;;  b               1    4[COMMON] unsigned char 
  4172 ;; Return value:  Size  Location     Type
  4173 ;;                  1    wreg      void 
  4174 ;; Registers used:
  4175 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4176 ;; Tracked objects:
  4177 ;;		On entry : 0/0
  4178 ;;		On exit  : 0/0
  4179 ;;		Unchanged: 0/0
  4180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4181 ;;      Params:         0       0       0       0       0       0
  4182 ;;      Locals:         4       0       0       0       0       0
  4183 ;;      Temps:          1       0       0       0       0       0
  4184 ;;      Totals:         5       0       0       0       0       0
  4185 ;;Total ram usage:        5 bytes
  4186 ;; Hardware stack levels used: 1
  4187 ;; Hardware stack levels required when called: 2
  4188 ;; This function calls:
  4189 ;;		_txMAX7219
  4190 ;; This function is called by:
  4191 ;;		_main
  4192 ;; This function uses a non-reentrant model
  4193 ;;
  4194                           
  4195     0FA3                     _sendMatrix:	
  4196                           ;psect for function _sendMatrix
  4197                           
  4198     0FA3                     l2678:	
  4199                           ;incstack = 0
  4200                           ; Regs used in _sendMatrix: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4201                           
  4202                           
  4203                           ;ledMatrix.c: 56:     uint8_t b;;ledMatrix.c: 57:     uint8_t nb;;ledMatrix.c: 58:     f
      +                          or(uint8_t i=0;i<8;i++){
  4204     0FA3  01F7               	clrf	sendMatrix@i
  4205     0FA4                     l2684:
  4206                           
  4207                           ;ledMatrix.c: 62:         b = matrix[i];
  4208     0FA4  0877               	movf	sendMatrix@i,w
  4209     0FA5  3EC0               	addlw	(low (_matrix| 0))& (0+255)
  4210     0FA6  0086               	movwf	6
  4211     0FA7  0187               	clrf	7
  4212     0FA8  0801               	movf	1,w
  4213     0FA9  00F4               	movwf	sendMatrix@b
  4214     0FAA                     l2686:
  4215                           
  4216                           ;ledMatrix.c: 65:         nb = 0x00;
  4217     0FAA  01F5               	clrf	sendMatrix@nb
  4218     0FAB                     l2688:
  4219                           
  4220                           ;ledMatrix.c: 66:         for(uint8_t j = 0; j < 8; j++){
  4221     0FAB  01F6               	clrf	sendMatrix@j
  4222     0FAC                     l2694:
  4223                           
  4224                           ;ledMatrix.c: 67:             nb <<= 1;
  4225     0FAC  1003               	clrc
  4226     0FAD  0DF5               	rlf	sendMatrix@nb,f
  4227     0FAE                     l2696:
  4228                           
  4229                           ;ledMatrix.c: 68:             nb |= b&0x01;
  4230     0FAE  0874               	movf	sendMatrix@b,w
  4231     0FAF  3901               	andlw	1
  4232     0FB0  00F3               	movwf	??_sendMatrix
  4233     0FB1  0873               	movf	??_sendMatrix,w
  4234     0FB2  04F5               	iorwf	sendMatrix@nb,f
  4235     0FB3                     l2698:
  4236                           
  4237                           ;ledMatrix.c: 69:             b >>= 1;
  4238     0FB3  1003               	clrc
  4239     0FB4  0CF4               	rrf	sendMatrix@b,f
  4240                           
  4241                           ;ledMatrix.c: 70:         }
  4242     0FB5  3001               	movlw	1
  4243     0FB6  00F3               	movwf	??_sendMatrix
  4244     0FB7  0873               	movf	??_sendMatrix,w
  4245     0FB8  07F6               	addwf	sendMatrix@j,f
  4246     0FB9                     l2700:
  4247     0FB9  3008               	movlw	8
  4248     0FBA  0276               	subwf	sendMatrix@j,w
  4249     0FBB  1C03               	skipc
  4250     0FBC  2FBE               	goto	u1681
  4251     0FBD  2FBF               	goto	u1680
  4252     0FBE                     u1681:
  4253     0FBE  2FAC               	goto	l2694
  4254     0FBF                     u1680:
  4255     0FBF                     l2702:
  4256                           
  4257                           ;ledMatrix.c: 71:         txMAX7219(i+1,nb);
  4258     0FBF  0875               	movf	sendMatrix@nb,w
  4259     0FC0  00F1               	movwf	txMAX7219@dat0
  4260     0FC1  0877               	movf	sendMatrix@i,w
  4261     0FC2  3E01               	addlw	1
  4262     0FC3  318E  26C8  318F   	fcall	_txMAX7219
  4263     0FC6                     l2704:
  4264                           
  4265                           ;ledMatrix.c: 75:     }
  4266     0FC6  3001               	movlw	1
  4267     0FC7  00F3               	movwf	??_sendMatrix
  4268     0FC8  0873               	movf	??_sendMatrix,w
  4269     0FC9  07F7               	addwf	sendMatrix@i,f
  4270     0FCA                     l2706:
  4271     0FCA  3008               	movlw	8
  4272     0FCB  0277               	subwf	sendMatrix@i,w
  4273     0FCC  1C03               	skipc
  4274     0FCD  2FCF               	goto	u1691
  4275     0FCE  2FD0               	goto	u1690
  4276     0FCF                     u1691:
  4277     0FCF  2FA4               	goto	l2684
  4278     0FD0                     u1690:
  4279     0FD0                     l366:
  4280     0FD0  0008               	return
  4281     0FD1                     __end_of_sendMatrix:
  4282                           
  4283                           	psect	text7
  4284     0E9E                     __ptext7:	
  4285 ;; *************** function _ledSet *****************
  4286 ;; Defined at:
  4287 ;;		line 31 in file "ledMatrix.c"
  4288 ;; Parameters:    Size  Location     Type
  4289 ;;  l               1    wreg     unsigned char 
  4290 ;;  c               1    4[BANK0 ] unsigned char 
  4291 ;; Auto vars:     Size  Location     Type
  4292 ;;  l               1    7[BANK0 ] unsigned char 
  4293 ;; Return value:  Size  Location     Type
  4294 ;;                  1    wreg      void 
  4295 ;; Registers used:
  4296 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4297 ;; Tracked objects:
  4298 ;;		On entry : 0/0
  4299 ;;		On exit  : 0/0
  4300 ;;		Unchanged: 0/0
  4301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4302 ;;      Params:         0       1       0       0       0       0
  4303 ;;      Locals:         0       1       0       0       0       0
  4304 ;;      Temps:          0       2       0       0       0       0
  4305 ;;      Totals:         0       4       0       0       0       0
  4306 ;;Total ram usage:        4 bytes
  4307 ;; Hardware stack levels used: 1
  4308 ;; This function calls:
  4309 ;;		Nothing
  4310 ;; This function is called by:
  4311 ;;		_main
  4312 ;;		_setLine
  4313 ;; This function uses a non-reentrant model
  4314 ;;
  4315                           
  4316     0E9E                     _ledSet:	
  4317                           ;psect for function _ledSet
  4318                           
  4319                           
  4320                           ;incstack = 0
  4321                           ; Regs used in _ledSet: [wreg+fsr1l+fsr1h+status,2+status,0]
  4322                           ;ledSet@l stored from wreg
  4323     0E9E  0020               	movlb	0	; select bank0
  4324     0E9F  00D1               	movwf	ledSet@l
  4325     0EA0                     l2670:
  4326                           
  4327                           ;ledMatrix.c: 32:     (matrix[c]) |= 1UL << (l);
  4328     0EA0  3001               	movlw	1
  4329     0EA1  00CF               	movwf	??_ledSet
  4330     0EA2  0A51               	incf	ledSet@l,w
  4331     0EA3  2EA5               	goto	u1664
  4332     0EA4                     u1665:
  4333     0EA4  35CF               	lslf	??_ledSet,f
  4334     0EA5                     u1664:
  4335     0EA5  0B89               	decfsz	9,f
  4336     0EA6  2EA4               	goto	u1665
  4337     0EA7  084F               	movf	??_ledSet,w
  4338     0EA8  00D0               	movwf	??_ledSet+1
  4339     0EA9  084E               	movf	ledSet@c,w
  4340     0EAA  3EC0               	addlw	(low (_matrix| 0))& (0+255)
  4341     0EAB  0086               	movwf	6
  4342     0EAC  0187               	clrf	7
  4343     0EAD  0850               	movf	??_ledSet+1,w
  4344     0EAE  0481               	iorwf	1,f
  4345     0EAF                     l346:
  4346     0EAF  0008               	return
  4347     0EB0                     __end_of_ledSet:
  4348                           
  4349                           	psect	text8
  4350     0E8C                     __ptext8:	
  4351 ;; *************** function _ledClear *****************
  4352 ;; Defined at:
  4353 ;;		line 35 in file "ledMatrix.c"
  4354 ;; Parameters:    Size  Location     Type
  4355 ;;  l               1    wreg     unsigned char 
  4356 ;;  c               1    0[COMMON] unsigned char 
  4357 ;; Auto vars:     Size  Location     Type
  4358 ;;  l               1    3[COMMON] unsigned char 
  4359 ;; Return value:  Size  Location     Type
  4360 ;;                  1    wreg      void 
  4361 ;; Registers used:
  4362 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4363 ;; Tracked objects:
  4364 ;;		On entry : 0/0
  4365 ;;		On exit  : 0/0
  4366 ;;		Unchanged: 0/0
  4367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4368 ;;      Params:         1       0       0       0       0       0
  4369 ;;      Locals:         1       0       0       0       0       0
  4370 ;;      Temps:          2       0       0       0       0       0
  4371 ;;      Totals:         4       0       0       0       0       0
  4372 ;;Total ram usage:        4 bytes
  4373 ;; Hardware stack levels used: 1
  4374 ;; This function calls:
  4375 ;;		Nothing
  4376 ;; This function is called by:
  4377 ;;		_main
  4378 ;;		_setLine
  4379 ;; This function uses a non-reentrant model
  4380 ;;
  4381                           
  4382     0E8C                     _ledClear:	
  4383                           ;psect for function _ledClear
  4384                           
  4385                           
  4386                           ;incstack = 0
  4387                           ; Regs used in _ledClear: [wreg+fsr1l+fsr1h+status,2+status,0]
  4388                           ;ledClear@l stored from wreg
  4389     0E8C  00F3               	movwf	ledClear@l
  4390     0E8D                     l2672:
  4391                           
  4392                           ;ledMatrix.c: 36:     (matrix[c]) &= ~(1UL << (l));
  4393     0E8D  3001               	movlw	1
  4394     0E8E  00F1               	movwf	??_ledClear
  4395     0E8F  0A73               	incf	ledClear@l,w
  4396     0E90  2E92               	goto	u1674
  4397     0E91                     u1675:
  4398     0E91  35F1               	lslf	??_ledClear,f
  4399     0E92                     u1674:
  4400     0E92  0B89               	decfsz	9,f
  4401     0E93  2E91               	goto	u1675
  4402     0E94  0871               	movf	??_ledClear,w
  4403     0E95  3AFF               	xorlw	255
  4404     0E96  00F2               	movwf	??_ledClear+1
  4405     0E97  0870               	movf	ledClear@c,w
  4406     0E98  3EC0               	addlw	(low (_matrix| 0))& (0+255)
  4407     0E99  0086               	movwf	6
  4408     0E9A  0187               	clrf	7
  4409     0E9B  0872               	movf	??_ledClear+1,w
  4410     0E9C  0581               	andwf	1,f
  4411     0E9D                     l349:
  4412     0E9D  0008               	return
  4413     0E9E                     __end_of_ledClear:
  4414                           
  4415                           	psect	text9
  4416     00DA                     __ptext9:	
  4417 ;; *************** function _initMAX7219 *****************
  4418 ;; Defined at:
  4419 ;;		line 16 in file "ledMatrix.c"
  4420 ;; Parameters:    Size  Location     Type
  4421 ;;		None
  4422 ;; Auto vars:     Size  Location     Type
  4423 ;;		None
  4424 ;; Return value:  Size  Location     Type
  4425 ;;                  1    wreg      void 
  4426 ;; Registers used:
  4427 ;;		wreg, status,2, status,0, pclath, cstack
  4428 ;; Tracked objects:
  4429 ;;		On entry : 0/0
  4430 ;;		On exit  : 0/0
  4431 ;;		Unchanged: 0/0
  4432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4433 ;;      Params:         0       0       0       0       0       0
  4434 ;;      Locals:         0       0       0       0       0       0
  4435 ;;      Temps:          2       0       0       0       0       0
  4436 ;;      Totals:         2       0       0       0       0       0
  4437 ;;Total ram usage:        2 bytes
  4438 ;; Hardware stack levels used: 1
  4439 ;; Hardware stack levels required when called: 2
  4440 ;; This function calls:
  4441 ;;		_txMAX7219
  4442 ;; This function is called by:
  4443 ;;		_main
  4444 ;; This function uses a non-reentrant model
  4445 ;;
  4446                           
  4447     00DA                     _initMAX7219:	
  4448                           ;psect for function _initMAX7219
  4449                           
  4450     00DA                     l2656:	
  4451                           ;incstack = 0
  4452                           ; Regs used in _initMAX7219: [wreg+status,2+status,0+pclath+cstack]
  4453                           
  4454                           
  4455                           ;ledMatrix.c: 17:     LATBbits.LATB1 = 1;
  4456     00DA  0022               	movlb	2	; select bank2
  4457     00DB  148D               	bsf	13,1	;volatile
  4458                           
  4459                           ;ledMatrix.c: 18:     TRISBbits.TRISB1 = 0;
  4460     00DC  0021               	movlb	1	; select bank1
  4461     00DD  108D               	bcf	13,1	;volatile
  4462                           
  4463                           ;ledMatrix.c: 19:     SSP1CON1bits.SSPEN = 1;
  4464     00DE  0024               	movlb	4	; select bank4
  4465     00DF  1695               	bsf	21,5	;volatile
  4466     00E0                     l2658:
  4467                           
  4468                           ;ledMatrix.c: 20:     txMAX7219(0x09,0x00);
  4469     00E0  01F1               	clrf	txMAX7219@dat0
  4470     00E1  3009               	movlw	9
  4471     00E2  318E  26C8  3180   	fcall	_txMAX7219
  4472                           
  4473                           ;ledMatrix.c: 21:     txMAX7219(0x0A,0x00);
  4474     00E5  01F1               	clrf	txMAX7219@dat0
  4475     00E6  300A               	movlw	10
  4476     00E7  318E  26C8  3180   	fcall	_txMAX7219
  4477                           
  4478                           ;ledMatrix.c: 22:     txMAX7219(0x0C,0x00);
  4479     00EA  01F1               	clrf	txMAX7219@dat0
  4480     00EB  300C               	movlw	12
  4481     00EC  318E  26C8  3180   	fcall	_txMAX7219
  4482                           
  4483                           ;ledMatrix.c: 23:     txMAX7219(0x0B,0x07);
  4484     00EF  3007               	movlw	7
  4485     00F0  00F1               	movwf	txMAX7219@dat0
  4486     00F1  300B               	movlw	11
  4487     00F2  318E  26C8  3180   	fcall	_txMAX7219
  4488                           
  4489                           ;ledMatrix.c: 24:     txMAX7219(0x0C,0x01);
  4490     00F5  01F1               	clrf	txMAX7219@dat0
  4491     00F6  0AF1               	incf	txMAX7219@dat0,f
  4492     00F7  300C               	movlw	12
  4493     00F8  318E  26C8  3180   	fcall	_txMAX7219
  4494                           
  4495                           ;ledMatrix.c: 25:     txMAX7219(0x0F,0x01);
  4496     00FB  01F1               	clrf	txMAX7219@dat0
  4497     00FC  0AF1               	incf	txMAX7219@dat0,f
  4498     00FD  300F               	movlw	15
  4499     00FE  318E  26C8  3180   	fcall	_txMAX7219
  4500     0101                     l2660:
  4501                           
  4502                           ;ledMatrix.c: 26:     _delay((unsigned long)((1000)*(8000000/4000.0)));
  4503     0101  300B               	movlw	11
  4504     0102  00F4               	movwf	??_initMAX7219+1
  4505     0103  3026               	movlw	38
  4506     0104  00F3               	movwf	??_initMAX7219
  4507     0105  305E               	movlw	94
  4508     0106                     u2467:
  4509     0106  0B89               	decfsz	9,f
  4510     0107  2906               	goto	u2467
  4511     0108  0BF3               	decfsz	??_initMAX7219,f
  4512     0109  2906               	goto	u2467
  4513     010A  0BF4               	decfsz	??_initMAX7219+1,f
  4514     010B  2906               	goto	u2467
  4515     010C                     l2662:
  4516                           
  4517                           ;ledMatrix.c: 27:     txMAX7219(0x0F,0x00);
  4518     010C  01F1               	clrf	txMAX7219@dat0
  4519     010D  300F               	movlw	15
  4520     010E  318E  26C8  3180   	fcall	_txMAX7219
  4521     0111                     l2664:
  4522                           
  4523                           ;ledMatrix.c: 28:     txMAX7219(0x0C,0x01);
  4524     0111  01F1               	clrf	txMAX7219@dat0
  4525     0112  0AF1               	incf	txMAX7219@dat0,f
  4526     0113  300C               	movlw	12
  4527     0114  318E  26C8  3180   	fcall	_txMAX7219
  4528     0117                     l343:
  4529     0117  0008               	return
  4530     0118                     __end_of_initMAX7219:
  4531                           
  4532                           	psect	text10
  4533     0EC8                     __ptext10:	
  4534 ;; *************** function _txMAX7219 *****************
  4535 ;; Defined at:
  4536 ;;		line 5 in file "ledMatrix.c"
  4537 ;; Parameters:    Size  Location     Type
  4538 ;;  addr0           1    wreg     unsigned char 
  4539 ;;  dat0            1    1[COMMON] unsigned char 
  4540 ;; Auto vars:     Size  Location     Type
  4541 ;;  addr0           1    2[COMMON] unsigned char 
  4542 ;; Return value:  Size  Location     Type
  4543 ;;                  1    wreg      void 
  4544 ;; Registers used:
  4545 ;;		wreg, status,2, status,0, pclath, cstack
  4546 ;; Tracked objects:
  4547 ;;		On entry : 0/0
  4548 ;;		On exit  : 0/0
  4549 ;;		Unchanged: 0/0
  4550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4551 ;;      Params:         1       0       0       0       0       0
  4552 ;;      Locals:         1       0       0       0       0       0
  4553 ;;      Temps:          0       0       0       0       0       0
  4554 ;;      Totals:         2       0       0       0       0       0
  4555 ;;Total ram usage:        2 bytes
  4556 ;; Hardware stack levels used: 1
  4557 ;; Hardware stack levels required when called: 1
  4558 ;; This function calls:
  4559 ;;		_SPI1_WriteByte
  4560 ;; This function is called by:
  4561 ;;		_initMAX7219
  4562 ;;		_sendMatrix
  4563 ;; This function uses a non-reentrant model
  4564 ;;
  4565                           
  4566     0EC8                     _txMAX7219:	
  4567                           ;psect for function _txMAX7219
  4568                           
  4569                           
  4570                           ;incstack = 0
  4571                           ; Regs used in _txMAX7219: [wreg+status,2+status,0+pclath+cstack]
  4572                           ;txMAX7219@addr0 stored from wreg
  4573     0EC8  00F2               	movwf	txMAX7219@addr0
  4574     0EC9                     l2518:
  4575                           
  4576                           ;ledMatrix.c: 6:     LATBbits.LATB1 = 0;
  4577     0EC9  0022               	movlb	2	; select bank2
  4578     0ECA  108D               	bcf	13,1	;volatile
  4579     0ECB                     l2520:
  4580                           
  4581                           ;ledMatrix.c: 7:     SPI1_WriteByte(addr0);
  4582     0ECB  0872               	movf	txMAX7219@addr0,w
  4583     0ECC  318E  261E  318E   	fcall	_SPI1_WriteByte
  4584     0ECF                     l334:	
  4585                           ;ledMatrix.c: 8:     while(!PIR1bits.SSP1IF);
  4586                           
  4587     0ECF  0020               	movlb	0	; select bank0
  4588     0ED0  1D91               	btfss	17,3	;volatile
  4589     0ED1  2ED3               	goto	u1401
  4590     0ED2  2ED4               	goto	u1400
  4591     0ED3                     u1401:
  4592     0ED3  2ECF               	goto	l334
  4593     0ED4                     u1400:
  4594     0ED4                     l336:
  4595                           
  4596                           ;ledMatrix.c: 9:     PIR1bits.SSP1IF = 0;
  4597     0ED4  1191               	bcf	17,3	;volatile
  4598     0ED5                     l2522:
  4599                           
  4600                           ;ledMatrix.c: 10:     SPI1_WriteByte(dat0);
  4601     0ED5  0871               	movf	txMAX7219@dat0,w
  4602     0ED6  318E  261E  318E   	fcall	_SPI1_WriteByte
  4603     0ED9                     l337:	
  4604                           ;ledMatrix.c: 11:     while(!PIR1bits.SSP1IF);
  4605                           
  4606     0ED9  0020               	movlb	0	; select bank0
  4607     0EDA  1D91               	btfss	17,3	;volatile
  4608     0EDB  2EDD               	goto	u1411
  4609     0EDC  2EDE               	goto	u1410
  4610     0EDD                     u1411:
  4611     0EDD  2ED9               	goto	l337
  4612     0EDE                     u1410:
  4613     0EDE                     l339:
  4614                           
  4615                           ;ledMatrix.c: 12:     PIR1bits.SSP1IF = 0;
  4616     0EDE  1191               	bcf	17,3	;volatile
  4617                           
  4618                           ;ledMatrix.c: 13:     LATBbits.LATB1 = 1;
  4619     0EDF  0022               	movlb	2	; select bank2
  4620     0EE0  148D               	bsf	13,1	;volatile
  4621     0EE1                     l340:
  4622     0EE1  0008               	return
  4623     0EE2                     __end_of_txMAX7219:
  4624                           
  4625                           	psect	text11
  4626     0E1E                     __ptext11:	
  4627 ;; *************** function _SPI1_WriteByte *****************
  4628 ;; Defined at:
  4629 ;;		line 131 in file "mcc_generated_files/spi1.c"
  4630 ;; Parameters:    Size  Location     Type
  4631 ;;  byte            1    wreg     unsigned char 
  4632 ;; Auto vars:     Size  Location     Type
  4633 ;;  byte            1    0[COMMON] unsigned char 
  4634 ;; Return value:  Size  Location     Type
  4635 ;;                  1    wreg      void 
  4636 ;; Registers used:
  4637 ;;		wreg
  4638 ;; Tracked objects:
  4639 ;;		On entry : 0/0
  4640 ;;		On exit  : 0/0
  4641 ;;		Unchanged: 0/0
  4642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4643 ;;      Params:         0       0       0       0       0       0
  4644 ;;      Locals:         1       0       0       0       0       0
  4645 ;;      Temps:          0       0       0       0       0       0
  4646 ;;      Totals:         1       0       0       0       0       0
  4647 ;;Total ram usage:        1 bytes
  4648 ;; Hardware stack levels used: 1
  4649 ;; This function calls:
  4650 ;;		Nothing
  4651 ;; This function is called by:
  4652 ;;		_txMAX7219
  4653 ;; This function uses a non-reentrant model
  4654 ;;
  4655                           
  4656     0E1E                     _SPI1_WriteByte:	
  4657                           ;psect for function _SPI1_WriteByte
  4658                           
  4659                           
  4660                           ;incstack = 0
  4661                           ; Regs used in _SPI1_WriteByte: [wreg]
  4662                           ;SPI1_WriteByte@byte stored from wreg
  4663     0E1E  00F0               	movwf	SPI1_WriteByte@byte
  4664     0E1F                     l2434:
  4665                           
  4666                           ;mcc_generated_files/spi1.c: 131: void SPI1_WriteByte(uint8_t byte);mcc_generated_files/
      +                          spi1.c: 132: {;mcc_generated_files/spi1.c: 133:     SSP1BUF = byte;
  4667     0E1F  0870               	movf	SPI1_WriteByte@byte,w
  4668     0E20  0024               	movlb	4	; select bank4
  4669     0E21  0091               	movwf	17	;volatile
  4670     0E22                     l224:
  4671     0E22  0008               	return
  4672     0E23                     __end_of_SPI1_WriteByte:
  4673                           
  4674                           	psect	text12
  4675     0E6F                     __ptext12:	
  4676 ;; *************** function _deactivateElevator *****************
  4677 ;; Defined at:
  4678 ;;		line 50 in file "main.c"
  4679 ;; Parameters:    Size  Location     Type
  4680 ;;		None
  4681 ;; Auto vars:     Size  Location     Type
  4682 ;;		None
  4683 ;; Return value:  Size  Location     Type
  4684 ;;                  1    wreg      void 
  4685 ;; Registers used:
  4686 ;;		None
  4687 ;; Tracked objects:
  4688 ;;		On entry : 0/0
  4689 ;;		On exit  : 0/0
  4690 ;;		Unchanged: 0/0
  4691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4692 ;;      Params:         0       0       0       0       0       0
  4693 ;;      Locals:         0       0       0       0       0       0
  4694 ;;      Temps:          0       0       0       0       0       0
  4695 ;;      Totals:         0       0       0       0       0       0
  4696 ;;Total ram usage:        0 bytes
  4697 ;; Hardware stack levels used: 1
  4698 ;; This function calls:
  4699 ;;		Nothing
  4700 ;; This function is called by:
  4701 ;;		_main
  4702 ;; This function uses a non-reentrant model
  4703 ;;
  4704                           
  4705     0E6F                     _deactivateElevator:	
  4706                           ;psect for function _deactivateElevator
  4707                           
  4708     0E6F                     l2630:	
  4709                           ;incstack = 0
  4710                           ; Regs used in _deactivateElevator: []
  4711                           
  4712                           
  4713                           ;main.c: 51:     LATAbits.LATA3 = 0;
  4714     0E6F  0022               	movlb	2	; select bank2
  4715     0E70  118C               	bcf	12,3	;volatile
  4716                           
  4717                           ;main.c: 52:     LATAbits.LATA7 = 0;
  4718     0E71  138C               	bcf	12,7	;volatile
  4719                           
  4720                           ;main.c: 54:     TRISAbits.TRISA0 = 1;
  4721     0E72  0021               	movlb	1	; select bank1
  4722     0E73  140C               	bsf	12,0	;volatile
  4723                           
  4724                           ;main.c: 55:     TRISAbits.TRISA1 = 1;
  4725     0E74  148C               	bsf	12,1	;volatile
  4726                           
  4727                           ;main.c: 56:     TRISAbits.TRISA2 = 1;
  4728     0E75  150C               	bsf	12,2	;volatile
  4729                           
  4730                           ;main.c: 57:     TRISAbits.TRISA3 = 0;
  4731     0E76  118C               	bcf	12,3	;volatile
  4732                           
  4733                           ;main.c: 58:     TRISAbits.TRISA4 = 1;
  4734     0E77  160C               	bsf	12,4	;volatile
  4735                           
  4736                           ;main.c: 59:     TRISAbits.TRISA7 = 0;
  4737     0E78  138C               	bcf	12,7	;volatile
  4738                           
  4739                           ;main.c: 60:     TRISBbits.TRISB0 = 1;
  4740     0E79  140D               	bsf	13,0	;volatile
  4741                           
  4742                           ;main.c: 61:     TRISBbits.TRISB3 = 1;
  4743     0E7A  158D               	bsf	13,3	;volatile
  4744     0E7B                     l297:
  4745     0E7B  0008               	return
  4746     0E7C                     __end_of_deactivateElevator:
  4747                           
  4748                           	psect	text13
  4749     023A                     __ptext13:	
  4750 ;; *************** function _ai_run *****************
  4751 ;; Defined at:
  4752 ;;		line 37 in file "ai_short.c"
  4753 ;; Parameters:    Size  Location     Type
  4754 ;;		None
  4755 ;; Auto vars:     Size  Location     Type
  4756 ;;  i               1   11[BANK0 ] unsigned char 
  4757 ;;  i               1   12[BANK0 ] unsigned char 
  4758 ;;  j               1   13[BANK0 ] unsigned char 
  4759 ;;  i               1   10[BANK0 ] unsigned char 
  4760 ;; Return value:  Size  Location     Type
  4761 ;;                  1    wreg      unsigned char 
  4762 ;; Registers used:
  4763 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4764 ;; Tracked objects:
  4765 ;;		On entry : 0/0
  4766 ;;		On exit  : 0/0
  4767 ;;		Unchanged: 0/0
  4768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4769 ;;      Params:         0       0       0       0       0       0
  4770 ;;      Locals:         0       4       0       0       0       0
  4771 ;;      Temps:          0       6       0       0       0       0
  4772 ;;      Totals:         0      10       0       0       0       0
  4773 ;;Total ram usage:       10 bytes
  4774 ;; Hardware stack levels used: 1
  4775 ;; Hardware stack levels required when called: 1
  4776 ;; This function calls:
  4777 ;;		___awdiv
  4778 ;;		___wmul
  4779 ;;		_sigmoid
  4780 ;; This function is called by:
  4781 ;;		_main
  4782 ;; This function uses a non-reentrant model
  4783 ;;
  4784                           
  4785     023A                     _ai_run:	
  4786                           ;psect for function _ai_run
  4787                           
  4788     023A                     l2776:	
  4789                           ;incstack = 0
  4790                           ; Regs used in _ai_run: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4791                           
  4792                           
  4793                           ;ai_short.c: 38:     for(uint8_t i = 0; i < 8; i++){
  4794     023A  0020               	movlb	0	; select bank0
  4795     023B  01D4               	clrf	ai_run@i
  4796     023C                     l2782:
  4797                           
  4798                           ;ai_short.c: 39:         if(Y0[i]>0){
  4799     023C  0854               	movf	ai_run@i,w
  4800     023D  3EC8               	addlw	(low (_Y0| 0))& (0+255)
  4801     023E  0086               	movwf	6
  4802     023F  0187               	clrf	7
  4803     0240  0801               	movf	1,w
  4804     0241  3A80               	xorlw	128
  4805     0242  3E7F               	addlw	-129
  4806     0243  1C03               	skipc
  4807     0244  2A46               	goto	u1811
  4808     0245  2A47               	goto	u1810
  4809     0246                     u1811:
  4810     0246  2A4D               	goto	l2786
  4811     0247                     u1810:
  4812     0247                     l2784:
  4813                           
  4814                           ;ai_short.c: 40:             Y0[i] = 1<<4;
  4815     0247  0854               	movf	ai_run@i,w
  4816     0248  3EC8               	addlw	(low (_Y0| 0))& (0+255)
  4817     0249  0086               	movwf	6
  4818     024A  0187               	clrf	7
  4819     024B  3010               	movlw	16
  4820     024C  0081               	movwf	1
  4821     024D                     l2786:
  4822                           
  4823                           ;ai_short.c: 42:     }
  4824     024D  3001               	movlw	1
  4825     024E  00CE               	movwf	??_ai_run
  4826     024F  084E               	movf	??_ai_run,w
  4827     0250  07D4               	addwf	ai_run@i,f
  4828     0251                     l2788:
  4829     0251  3008               	movlw	8
  4830     0252  0254               	subwf	ai_run@i,w
  4831     0253  1C03               	skipc
  4832     0254  2A56               	goto	u1821
  4833     0255  2A57               	goto	u1820
  4834     0256                     u1821:
  4835     0256  2A3C               	goto	l2782
  4836     0257                     u1820:
  4837     0257                     l2790:
  4838                           
  4839                           ;ai_short.c: 44:     for(uint8_t j = 0; j < 4; j++){
  4840     0257  01D7               	clrf	ai_run@j
  4841     0258                     l2796:
  4842                           
  4843                           ;ai_short.c: 45:         Z1[j] = B1[j];
  4844     0258  0857               	movf	ai_run@j,w
  4845     0259  3E38               	addlw	(low (_B1| 0))& (0+255)
  4846     025A  0086               	movwf	6
  4847     025B  0187               	clrf	7
  4848     025C  0801               	movf	1,w
  4849     025D  00CE               	movwf	??_ai_run
  4850     025E  01CF               	clrf	??_ai_run+1
  4851     025F  1BCE               	btfsc	??_ai_run,7
  4852     0260  03CF               	decf	??_ai_run+1,f
  4853     0261  3557               	lslf	ai_run@j,w
  4854     0262  3E20               	addlw	(low (_Z1| 0))& (0+255)
  4855     0263  0086               	movwf	6
  4856     0264  0187               	clrf	7
  4857     0265  084E               	movf	??_ai_run,w
  4858     0266  3FC0               	movwi [0]fsr1
  4859     0267  084F               	movf	??_ai_run+1,w
  4860     0268  3FC1               	movwi [1]fsr1
  4861     0269                     l2798:
  4862                           
  4863                           ;ai_short.c: 46:         for(uint8_t i = 0; i < 8; i++){
  4864     0269  01D5               	clrf	ai_run@i_838
  4865     026A                     l2804:
  4866                           
  4867                           ;ai_short.c: 47:             Z1[j] += (Y0[i]*W1[i][j])>>4;
  4868     026A  0855               	movf	ai_run@i_838,w
  4869     026B  3EC8               	addlw	(low (_Y0| 0))& (0+255)
  4870     026C  0086               	movwf	6
  4871     026D  0187               	clrf	7
  4872     026E  0801               	movf	1,w
  4873     026F  00F3               	movwf	___wmul@multiplier
  4874     0270  01F4               	clrf	___wmul@multiplier+1
  4875     0271  1BF3               	btfsc	___wmul@multiplier,7
  4876     0272  03F4               	decf	___wmul@multiplier+1,f
  4877     0273  0855               	movf	ai_run@i_838,w
  4878     0274  00CE               	movwf	??_ai_run
  4879     0275  3002               	movlw	2
  4880     0276                     u1835:
  4881     0276  35CE               	lslf	??_ai_run,f
  4882     0277  0B89               	decfsz	9,f
  4883     0278  2A76               	goto	u1835
  4884     0279  30A0               	movlw	(low (_W1| 0))& (0+255)
  4885     027A  074E               	addwf	??_ai_run,w
  4886     027B  00CF               	movwf	??_ai_run+1
  4887     027C  0857               	movf	ai_run@j,w
  4888     027D  074F               	addwf	??_ai_run+1,w
  4889     027E  00D0               	movwf	??_ai_run+2
  4890     027F  0850               	movf	??_ai_run+2,w
  4891     0280  0086               	movwf	6
  4892     0281  0187               	clrf	7
  4893     0282  0801               	movf	1,w
  4894     0283  00F5               	movwf	___wmul@multiplicand
  4895     0284  01F6               	clrf	___wmul@multiplicand+1
  4896     0285  1BF5               	btfsc	___wmul@multiplicand,7
  4897     0286  03F6               	decf	___wmul@multiplicand+1,f
  4898     0287  318E  26E2  3182   	fcall	___wmul
  4899     028A  0873               	movf	?___wmul,w
  4900     028B  0020               	movlb	0	; select bank0
  4901     028C  00D1               	movwf	??_ai_run+3
  4902     028D  0874               	movf	?___wmul+1,w
  4903     028E  00D2               	movwf	??_ai_run+4
  4904     028F  3004               	movlw	4
  4905     0290  00D3               	movwf	??_ai_run+5
  4906     0291                     u1845:
  4907     0291  0D52               	rlf	??_ai_run+4,w
  4908     0292  0CD2               	rrf	??_ai_run+4,f
  4909     0293  0CD1               	rrf	??_ai_run+3,f
  4910     0294  0BD3               	decfsz	??_ai_run+5,f
  4911     0295  2A91               	goto	u1845
  4912     0296  3557               	lslf	ai_run@j,w
  4913     0297  3E20               	addlw	(low (_Z1| 0))& (0+255)
  4914     0298  0086               	movwf	6
  4915     0299  0187               	clrf	7
  4916     029A  0851               	movf	??_ai_run+3,w
  4917     029B  0781               	addwf	1,f
  4918     029C  3141               	addfsr 1,1
  4919     029D  0852               	movf	??_ai_run+4,w
  4920     029E  3D81               	addwfc	1,f
  4921     029F  317F               	addfsr 1,-1
  4922     02A0                     l2806:
  4923                           
  4924                           ;ai_short.c: 48:         }
  4925     02A0  3001               	movlw	1
  4926     02A1  00CE               	movwf	??_ai_run
  4927     02A2  084E               	movf	??_ai_run,w
  4928     02A3  07D5               	addwf	ai_run@i_838,f
  4929     02A4                     l2808:
  4930     02A4  3008               	movlw	8
  4931     02A5  0255               	subwf	ai_run@i_838,w
  4932     02A6  1C03               	skipc
  4933     02A7  2AA9               	goto	u1851
  4934     02A8  2AAA               	goto	u1850
  4935     02A9                     u1851:
  4936     02A9  2A6A               	goto	l2804
  4937     02AA                     u1850:
  4938     02AA                     l2810:
  4939                           
  4940                           ;ai_short.c: 49:         Y1[j] = (int8_t)(((int)sigmoid(Z1[j]>>4)<<4)/255);
  4941     02AA  0857               	movf	ai_run@j,w
  4942     02AB  3E46               	addlw	(low (_Y1| 0))& (0+255)
  4943     02AC  0086               	movwf	6
  4944     02AD  0187               	clrf	7
  4945     02AE  30FF               	movlw	255
  4946     02AF  00F9               	movwf	___awdiv@divisor
  4947     02B0  3000               	movlw	0
  4948     02B1  00FA               	movwf	___awdiv@divisor+1
  4949     02B2  3557               	lslf	ai_run@j,w
  4950     02B3  3E20               	addlw	(low (_Z1| 0))& (0+255)
  4951     02B4  0084               	movwf	4
  4952     02B5  0185               	clrf	5
  4953     02B6  3F00               	moviw [0]fsr0
  4954     02B7  00CE               	movwf	??_ai_run
  4955     02B8  3F01               	moviw [1]fsr0
  4956     02B9  00CF               	movwf	??_ai_run+1
  4957     02BA  0E4E               	swapf	??_ai_run,w
  4958     02BB  390F               	andlw	15
  4959     02BC  00F0               	movwf	sigmoid@z
  4960     02BD  0E4F               	swapf	??_ai_run+1,w
  4961     02BE  39F0               	andlw	240
  4962     02BF  04F0               	iorwf	sigmoid@z,f
  4963     02C0  0E4F               	swapf	??_ai_run+1,w
  4964     02C1  390F               	andlw	15
  4965     02C2  00F1               	movwf	sigmoid@z+1
  4966     02C3  30F0               	movlw	240
  4967     02C4  1DF1               	btfss	sigmoid@z+1,3
  4968     02C5  3000               	movlw	0
  4969     02C6  04F1               	iorwf	sigmoid@z+1,f
  4970     02C7  318F  27D1  3182   	fcall	_sigmoid
  4971     02CA  0020               	movlb	0	; select bank0
  4972     02CB  00D0               	movwf	??_ai_run+2
  4973     02CC  01D1               	clrf	??_ai_run+3
  4974     02CD  0ED0               	swapf	??_ai_run+2,f
  4975     02CE  0ED1               	swapf	??_ai_run+3,f
  4976     02CF  30F0               	movlw	240
  4977     02D0  05D1               	andwf	??_ai_run+3,f
  4978     02D1  0850               	movf	??_ai_run+2,w
  4979     02D2  390F               	andlw	15
  4980     02D3  04D1               	iorwf	??_ai_run+3,f
  4981     02D4  30F0               	movlw	240
  4982     02D5  05D0               	andwf	??_ai_run+2,f
  4983     02D6  0850               	movf	??_ai_run+2,w
  4984     02D7  00FB               	movwf	___awdiv@dividend
  4985     02D8  0851               	movf	??_ai_run+3,w
  4986     02D9  00FC               	movwf	___awdiv@dividend+1
  4987     02DA  3181  2118  3182   	fcall	___awdiv
  4988     02DD  0879               	movf	?___awdiv,w
  4989     02DE  0081               	movwf	1
  4990     02DF                     l2812:
  4991                           
  4992                           ;ai_short.c: 50:     }
  4993     02DF  3001               	movlw	1
  4994     02E0  0020               	movlb	0	; select bank0
  4995     02E1  00CE               	movwf	??_ai_run
  4996     02E2  084E               	movf	??_ai_run,w
  4997     02E3  07D7               	addwf	ai_run@j,f
  4998     02E4                     l2814:
  4999     02E4  3004               	movlw	4
  5000     02E5  0257               	subwf	ai_run@j,w
  5001     02E6  1C03               	skipc
  5002     02E7  2AE9               	goto	u1861
  5003     02E8  2AEA               	goto	u1860
  5004     02E9                     u1861:
  5005     02E9  2A58               	goto	l2796
  5006     02EA                     u1860:
  5007     02EA                     l2816:
  5008                           
  5009                           ;ai_short.c: 52:     choice = 0;
  5010     02EA  01BC               	clrf	_choice
  5011     02EB                     l2818:
  5012                           
  5013                           ;ai_short.c: 53:     for(uint8_t i = 1; i < 4; i++){
  5014     02EB  01D6               	clrf	ai_run@i_839
  5015     02EC  0AD6               	incf	ai_run@i_839,f
  5016     02ED                     l2824:
  5017                           
  5018                           ;ai_short.c: 54:         if(Y1[i]>Y1[choice]){
  5019     02ED  083C               	movf	_choice,w
  5020     02EE  3E46               	addlw	(low (_Y1| 0))& (0+255)
  5021     02EF  0086               	movwf	6
  5022     02F0  0187               	clrf	7
  5023     02F1  0801               	movf	1,w
  5024     02F2  3A80               	xorlw	128
  5025     02F3  00CE               	movwf	??_ai_run
  5026     02F4  0856               	movf	ai_run@i_839,w
  5027     02F5  3E46               	addlw	(low (_Y1| 0))& (0+255)
  5028     02F6  0086               	movwf	6
  5029     02F7  0187               	clrf	7
  5030     02F8  0801               	movf	1,w
  5031     02F9  3A80               	xorlw	128
  5032     02FA  02CE               	subwf	??_ai_run,f
  5033     02FB  1803               	skipnc
  5034     02FC  2AFE               	goto	u1871
  5035     02FD  2AFF               	goto	u1870
  5036     02FE                     u1871:
  5037     02FE  2B01               	goto	l2828
  5038     02FF                     u1870:
  5039     02FF                     l2826:
  5040                           
  5041                           ;ai_short.c: 55:             choice = i;
  5042     02FF  0856               	movf	ai_run@i_839,w
  5043     0300  00BC               	movwf	_choice
  5044     0301                     l2828:
  5045                           
  5046                           ;ai_short.c: 57:     }
  5047     0301  3001               	movlw	1
  5048     0302  00CE               	movwf	??_ai_run
  5049     0303  084E               	movf	??_ai_run,w
  5050     0304  07D6               	addwf	ai_run@i_839,f
  5051     0305                     l2830:
  5052     0305  3004               	movlw	4
  5053     0306  0256               	subwf	ai_run@i_839,w
  5054     0307  1C03               	skipc
  5055     0308  2B0A               	goto	u1881
  5056     0309  2B0B               	goto	u1880
  5057     030A                     u1881:
  5058     030A  2AED               	goto	l2824
  5059     030B                     u1880:
  5060     030B                     l2832:
  5061                           
  5062                           ;ai_short.c: 58:     return choice;
  5063     030B  083C               	movf	_choice,w
  5064     030C                     l536:
  5065     030C  0008               	return
  5066     030D                     __end_of_ai_run:
  5067                           
  5068                           	psect	text14
  5069     04CE                     __ptext14:	
  5070 ;; *************** function _ai_propagate *****************
  5071 ;; Defined at:
  5072 ;;		line 61 in file "ai_short.c"
  5073 ;; Parameters:    Size  Location     Type
  5074 ;;  incentive       1    wreg     char 
  5075 ;; Auto vars:     Size  Location     Type
  5076 ;;  incentive       1   11[BANK0 ] char 
  5077 ;;  i               1   15[BANK0 ] unsigned char 
  5078 ;;  i               1   14[BANK0 ] unsigned char 
  5079 ;;  i               1   13[BANK0 ] unsigned char 
  5080 ;;  i               1   12[BANK0 ] unsigned char 
  5081 ;;  j               1   17[BANK0 ] unsigned char 
  5082 ;;  j               1   18[BANK0 ] unsigned char 
  5083 ;;  j               1   16[BANK0 ] unsigned char 
  5084 ;; Return value:  Size  Location     Type
  5085 ;;                  1    wreg      void 
  5086 ;; Registers used:
  5087 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5088 ;; Tracked objects:
  5089 ;;		On entry : 0/0
  5090 ;;		On exit  : 0/0
  5091 ;;		Unchanged: 0/0
  5092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5093 ;;      Params:         0       0       0       0       0       0
  5094 ;;      Locals:         0       8       0       0       0       0
  5095 ;;      Temps:          0       7       0       0       0       0
  5096 ;;      Totals:         0      15       0       0       0       0
  5097 ;;Total ram usage:       15 bytes
  5098 ;; Hardware stack levels used: 1
  5099 ;; Hardware stack levels required when called: 1
  5100 ;; This function calls:
  5101 ;;		___awdiv
  5102 ;;		___wmul
  5103 ;;		_de_sigmoid
  5104 ;; This function is called by:
  5105 ;;		_main
  5106 ;; This function uses a non-reentrant model
  5107 ;;
  5108                           
  5109     04CE                     _ai_propagate:	
  5110                           ;psect for function _ai_propagate
  5111                           
  5112                           
  5113                           ;incstack = 0
  5114                           ; Regs used in _ai_propagate: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5115                           ;ai_propagate@incentive stored from wreg
  5116     04CE  0020               	movlb	0	; select bank0
  5117     04CF  00D5               	movwf	ai_propagate@incentive
  5118     04D0                     l2922:
  5119                           
  5120                           ;ai_short.c: 62:     if(incentive == 0){
  5121     04D0  0855               	movf	ai_propagate@incentive,w
  5122     04D1  1D03               	btfss	3,2
  5123     04D2  2CD4               	goto	u2001
  5124     04D3  2CD5               	goto	u2000
  5125     04D4                     u2001:
  5126     04D4  2CD6               	goto	l2926
  5127     04D5                     u2000:
  5128     04D5  2E12               	goto	l540
  5129     04D6                     l2926:
  5130                           
  5131                           ;ai_short.c: 66:     if(incentive == -1){
  5132     04D6  0A55               	incf	ai_propagate@incentive,w
  5133     04D7  1D03               	btfss	3,2
  5134     04D8  2CDA               	goto	u2011
  5135     04D9  2CDB               	goto	u2010
  5136     04DA                     u2011:
  5137     04DA  2CDC               	goto	l2930
  5138     04DB                     u2010:
  5139     04DB                     l2928:
  5140                           
  5141                           ;ai_short.c: 67:         incentive = 0;
  5142     04DB  01D5               	clrf	ai_propagate@incentive
  5143     04DC                     l2930:
  5144                           
  5145                           ;ai_short.c: 70:     if(incentive == 0){
  5146     04DC  0855               	movf	ai_propagate@incentive,w
  5147     04DD  1D03               	btfss	3,2
  5148     04DE  2CE0               	goto	u2021
  5149     04DF  2CE1               	goto	u2020
  5150     04E0                     u2021:
  5151     04E0  2CF8               	goto	l2946
  5152     04E1                     u2020:
  5153     04E1                     l2932:
  5154                           
  5155                           ;ai_short.c: 71:         for(uint8_t i = 0; i < 4; i++){
  5156     04E1  01D6               	clrf	ai_propagate@i
  5157     04E2                     l2938:
  5158                           
  5159                           ;ai_short.c: 72:             S[i] = 1<<4;
  5160     04E2  0856               	movf	ai_propagate@i,w
  5161     04E3  3E28               	addlw	(low (_S| 0))& (0+255)
  5162     04E4  0086               	movwf	6
  5163     04E5  0187               	clrf	7
  5164     04E6  3010               	movlw	16
  5165     04E7  0081               	movwf	1
  5166     04E8                     l2940:
  5167                           
  5168                           ;ai_short.c: 73:         }
  5169     04E8  3001               	movlw	1
  5170     04E9  00CE               	movwf	??_ai_propagate
  5171     04EA  084E               	movf	??_ai_propagate,w
  5172     04EB  07D6               	addwf	ai_propagate@i,f
  5173     04EC                     l2942:
  5174     04EC  3004               	movlw	4
  5175     04ED  0256               	subwf	ai_propagate@i,w
  5176     04EE  1C03               	skipc
  5177     04EF  2CF1               	goto	u2031
  5178     04F0  2CF2               	goto	u2030
  5179     04F1                     u2031:
  5180     04F1  2CE2               	goto	l2938
  5181     04F2                     u2030:
  5182     04F2                     l2944:
  5183                           
  5184                           ;ai_short.c: 74:         S[choice] = 0;
  5185     04F2  083C               	movf	_choice,w
  5186     04F3  3E28               	addlw	(low (_S| 0))& (0+255)
  5187     04F4  0086               	movwf	6
  5188     04F5  0187               	clrf	7
  5189     04F6  0181               	clrf	1
  5190                           
  5191                           ;ai_short.c: 75:     } else{
  5192     04F7  2D0E               	goto	l2960
  5193     04F8                     l2946:
  5194                           
  5195                           ;ai_short.c: 76:         for(uint8_t i = 0; i < 4; i++){
  5196     04F8  01D7               	clrf	ai_propagate@i_843
  5197     04F9                     l2952:
  5198                           
  5199                           ;ai_short.c: 77:             S[i] = 0;
  5200     04F9  0857               	movf	ai_propagate@i_843,w
  5201     04FA  3E28               	addlw	(low (_S| 0))& (0+255)
  5202     04FB  0086               	movwf	6
  5203     04FC  0187               	clrf	7
  5204     04FD  0181               	clrf	1
  5205     04FE                     l2954:
  5206                           
  5207                           ;ai_short.c: 78:         }
  5208     04FE  3001               	movlw	1
  5209     04FF  00CE               	movwf	??_ai_propagate
  5210     0500  084E               	movf	??_ai_propagate,w
  5211     0501  07D7               	addwf	ai_propagate@i_843,f
  5212     0502                     l2956:
  5213     0502  3004               	movlw	4
  5214     0503  0257               	subwf	ai_propagate@i_843,w
  5215     0504  1C03               	skipc
  5216     0505  2D07               	goto	u2041
  5217     0506  2D08               	goto	u2040
  5218     0507                     u2041:
  5219     0507  2CF9               	goto	l2952
  5220     0508                     u2040:
  5221     0508                     l2958:
  5222                           
  5223                           ;ai_short.c: 79:         S[choice] = 1<<4;
  5224     0508  083C               	movf	_choice,w
  5225     0509  3E28               	addlw	(low (_S| 0))& (0+255)
  5226     050A  0086               	movwf	6
  5227     050B  0187               	clrf	7
  5228     050C  3010               	movlw	16
  5229     050D  0081               	movwf	1
  5230     050E                     l2960:
  5231                           
  5232                           ;ai_short.c: 83:     for(uint8_t j = 0; j < 4; j++){
  5233     050E  01DA               	clrf	ai_propagate@j
  5234     050F                     l2966:
  5235                           
  5236                           ;ai_short.c: 84:         DC_DY1[j] = 2*(Y1[j]-S[j]);
  5237     050F  085A               	movf	ai_propagate@j,w
  5238     0510  3E34               	addlw	(low (_DC_DY1| 0))& (0+255)
  5239     0511  0086               	movwf	6
  5240     0512  0187               	clrf	7
  5241     0513  085A               	movf	ai_propagate@j,w
  5242     0514  3E28               	addlw	(low (_S| 0))& (0+255)
  5243     0515  0084               	movwf	4
  5244     0516  0185               	clrf	5
  5245     0517  0800               	movf	0,w
  5246     0518  00CE               	movwf	??_ai_propagate
  5247     0519  085A               	movf	ai_propagate@j,w
  5248     051A  3E46               	addlw	(low (_Y1| 0))& (0+255)
  5249     051B  0084               	movwf	4
  5250     051C  0185               	clrf	5
  5251     051D  0800               	movf	0,w
  5252     051E  00CF               	movwf	??_ai_propagate+1
  5253     051F  084E               	movf	??_ai_propagate,w
  5254     0520  024F               	subwf	??_ai_propagate+1,w
  5255     0521  0709               	addwf	9,w
  5256     0522  0081               	movwf	1
  5257     0523                     l2968:
  5258                           
  5259                           ;ai_short.c: 85:     }
  5260     0523  3001               	movlw	1
  5261     0524  00CE               	movwf	??_ai_propagate
  5262     0525  084E               	movf	??_ai_propagate,w
  5263     0526  07DA               	addwf	ai_propagate@j,f
  5264     0527                     l2970:
  5265     0527  3004               	movlw	4
  5266     0528  025A               	subwf	ai_propagate@j,w
  5267     0529  1C03               	skipc
  5268     052A  2D2C               	goto	u2051
  5269     052B  2D2D               	goto	u2050
  5270     052C                     u2051:
  5271     052C  2D0F               	goto	l2966
  5272     052D                     u2050:
  5273     052D                     l2972:
  5274                           
  5275                           ;ai_short.c: 87:     for(uint8_t j = 0; j < 4; j++){
  5276     052D  01DC               	clrf	ai_propagate@j_845
  5277     052E                     l2978:
  5278                           
  5279                           ;ai_short.c: 88:         DC_DZ1[j] = ((int)DC_DY1[j]*((int)de_sigmoid(Z1[j]>>4)<<4)/255)
      +                          >>4;
  5280     052E  085C               	movf	ai_propagate@j_845,w
  5281     052F  3E30               	addlw	(low (_DC_DZ1| 0))& (0+255)
  5282     0530  0086               	movwf	6
  5283     0531  0187               	clrf	7
  5284     0532  30FF               	movlw	255
  5285     0533  00F9               	movwf	___awdiv@divisor
  5286     0534  3000               	movlw	0
  5287     0535  00FA               	movwf	___awdiv@divisor+1
  5288     0536  085C               	movf	ai_propagate@j_845,w
  5289     0537  3E34               	addlw	(low (_DC_DY1| 0))& (0+255)
  5290     0538  0084               	movwf	4
  5291     0539  0185               	clrf	5
  5292     053A  0800               	movf	0,w
  5293     053B  00F3               	movwf	___wmul@multiplier
  5294     053C  01F4               	clrf	___wmul@multiplier+1
  5295     053D  1BF3               	btfsc	___wmul@multiplier,7
  5296     053E  03F4               	decf	___wmul@multiplier+1,f
  5297     053F  355C               	lslf	ai_propagate@j_845,w
  5298     0540  3E20               	addlw	(low (_Z1| 0))& (0+255)
  5299     0541  0084               	movwf	4
  5300     0542  0185               	clrf	5
  5301     0543  3F00               	moviw [0]fsr0
  5302     0544  00CE               	movwf	??_ai_propagate
  5303     0545  3F01               	moviw [1]fsr0
  5304     0546  00CF               	movwf	??_ai_propagate+1
  5305     0547  0E4E               	swapf	??_ai_propagate,w
  5306     0548  390F               	andlw	15
  5307     0549  00F0               	movwf	de_sigmoid@z
  5308     054A  0E4F               	swapf	??_ai_propagate+1,w
  5309     054B  39F0               	andlw	240
  5310     054C  04F0               	iorwf	de_sigmoid@z,f
  5311     054D  0E4F               	swapf	??_ai_propagate+1,w
  5312     054E  390F               	andlw	15
  5313     054F  00F1               	movwf	de_sigmoid@z+1
  5314     0550  30F0               	movlw	240
  5315     0551  1DF1               	btfss	de_sigmoid@z+1,3
  5316     0552  3000               	movlw	0
  5317     0553  04F1               	iorwf	de_sigmoid@z+1,f
  5318     0554  318F  2775  3184   	fcall	_de_sigmoid
  5319     0557  0020               	movlb	0	; select bank0
  5320     0558  00D0               	movwf	??_ai_propagate+2
  5321     0559  01D1               	clrf	??_ai_propagate+3
  5322     055A  0ED0               	swapf	??_ai_propagate+2,f
  5323     055B  0ED1               	swapf	??_ai_propagate+3,f
  5324     055C  30F0               	movlw	240
  5325     055D  05D1               	andwf	??_ai_propagate+3,f
  5326     055E  0850               	movf	??_ai_propagate+2,w
  5327     055F  390F               	andlw	15
  5328     0560  04D1               	iorwf	??_ai_propagate+3,f
  5329     0561  30F0               	movlw	240
  5330     0562  05D0               	andwf	??_ai_propagate+2,f
  5331     0563  0850               	movf	??_ai_propagate+2,w
  5332     0564  00F5               	movwf	___wmul@multiplicand
  5333     0565  0851               	movf	??_ai_propagate+3,w
  5334     0566  00F6               	movwf	___wmul@multiplicand+1
  5335     0567  318E  26E2  3184   	fcall	___wmul
  5336     056A  0874               	movf	?___wmul+1,w
  5337     056B  00FC               	movwf	___awdiv@dividend+1
  5338     056C  0873               	movf	?___wmul,w
  5339     056D  00FB               	movwf	___awdiv@dividend
  5340     056E  3181  2118  3184   	fcall	___awdiv
  5341     0571  0879               	movf	?___awdiv,w
  5342     0572  0020               	movlb	0	; select bank0
  5343     0573  00D2               	movwf	??_ai_propagate+4
  5344     0574  087A               	movf	?___awdiv+1,w
  5345     0575  00D3               	movwf	??_ai_propagate+5
  5346     0576  3004               	movlw	4
  5347     0577  00D4               	movwf	??_ai_propagate+6
  5348     0578                     u2065:
  5349     0578  0D53               	rlf	??_ai_propagate+5,w
  5350     0579  0CD3               	rrf	??_ai_propagate+5,f
  5351     057A  0CD2               	rrf	??_ai_propagate+4,f
  5352     057B  0BD4               	decfsz	??_ai_propagate+6,f
  5353     057C  2D78               	goto	u2065
  5354     057D  0852               	movf	??_ai_propagate+4,w
  5355     057E  0081               	movwf	1
  5356     057F                     l2980:
  5357                           
  5358                           ;ai_short.c: 89:         DC_DB1[j] = DC_DZ1[j];
  5359     057F  085C               	movf	ai_propagate@j_845,w
  5360     0580  3E2C               	addlw	(low (_DC_DB1| 0))& (0+255)
  5361     0581  0086               	movwf	6
  5362     0582  0187               	clrf	7
  5363     0583  085C               	movf	ai_propagate@j_845,w
  5364     0584  3E30               	addlw	(low (_DC_DZ1| 0))& (0+255)
  5365     0585  0084               	movwf	4
  5366     0586  0185               	clrf	5
  5367     0587  0800               	movf	0,w
  5368     0588  0081               	movwf	1
  5369     0589                     l2982:
  5370                           
  5371                           ;ai_short.c: 90:         for(uint8_t i = 0; i < 8; i++){
  5372     0589  01D8               	clrf	ai_propagate@i_846
  5373     058A                     l2988:
  5374                           
  5375                           ;ai_short.c: 91:             DC_DW1[i][j] = (DC_DZ1[j]*Y0[i])>>4;
  5376     058A  0858               	movf	ai_propagate@i_846,w
  5377     058B  00CE               	movwf	??_ai_propagate
  5378     058C  3002               	movlw	2
  5379     058D                     u2075:
  5380     058D  35CE               	lslf	??_ai_propagate,f
  5381     058E  0B89               	decfsz	9,f
  5382     058F  2D8D               	goto	u2075
  5383     0590  3020               	movlw	(low (_DC_DW1| (0+256)))& (0+255)
  5384     0591  074E               	addwf	??_ai_propagate,w
  5385     0592  00CF               	movwf	??_ai_propagate+1
  5386     0593  085C               	movf	ai_propagate@j_845,w
  5387     0594  074F               	addwf	??_ai_propagate+1,w
  5388     0595  00D0               	movwf	??_ai_propagate+2
  5389     0596  0850               	movf	??_ai_propagate+2,w
  5390     0597  0086               	movwf	6
  5391     0598  3001               	movlw	1	; select bank2/3
  5392     0599  0087               	movwf	7
  5393     059A  085C               	movf	ai_propagate@j_845,w
  5394     059B  3E30               	addlw	(low (_DC_DZ1| 0))& (0+255)
  5395     059C  0084               	movwf	4
  5396     059D  0185               	clrf	5
  5397     059E  0800               	movf	0,w
  5398     059F  00F3               	movwf	___wmul@multiplier
  5399     05A0  01F4               	clrf	___wmul@multiplier+1
  5400     05A1  1BF3               	btfsc	___wmul@multiplier,7
  5401     05A2  03F4               	decf	___wmul@multiplier+1,f
  5402     05A3  0858               	movf	ai_propagate@i_846,w
  5403     05A4  3EC8               	addlw	(low (_Y0| 0))& (0+255)
  5404     05A5  0084               	movwf	4
  5405     05A6  0185               	clrf	5
  5406     05A7  0800               	movf	0,w
  5407     05A8  00F5               	movwf	___wmul@multiplicand
  5408     05A9  01F6               	clrf	___wmul@multiplicand+1
  5409     05AA  1BF5               	btfsc	___wmul@multiplicand,7
  5410     05AB  03F6               	decf	___wmul@multiplicand+1,f
  5411     05AC  318E  26E2  3184   	fcall	___wmul
  5412     05AF  0873               	movf	?___wmul,w
  5413     05B0  0020               	movlb	0	; select bank0
  5414     05B1  00D1               	movwf	??_ai_propagate+3
  5415     05B2  0874               	movf	?___wmul+1,w
  5416     05B3  00D2               	movwf	??_ai_propagate+4
  5417     05B4  3004               	movlw	4
  5418     05B5  00D3               	movwf	??_ai_propagate+5
  5419     05B6                     u2085:
  5420     05B6  0D52               	rlf	??_ai_propagate+4,w
  5421     05B7  0CD2               	rrf	??_ai_propagate+4,f
  5422     05B8  0CD1               	rrf	??_ai_propagate+3,f
  5423     05B9  0BD3               	decfsz	??_ai_propagate+5,f
  5424     05BA  2DB6               	goto	u2085
  5425     05BB  0851               	movf	??_ai_propagate+3,w
  5426     05BC  0081               	movwf	1
  5427     05BD                     l2990:
  5428                           
  5429                           ;ai_short.c: 92:         }
  5430     05BD  3001               	movlw	1
  5431     05BE  00CE               	movwf	??_ai_propagate
  5432     05BF  084E               	movf	??_ai_propagate,w
  5433     05C0  07D8               	addwf	ai_propagate@i_846,f
  5434     05C1                     l2992:
  5435     05C1  3008               	movlw	8
  5436     05C2  0258               	subwf	ai_propagate@i_846,w
  5437     05C3  1C03               	skipc
  5438     05C4  2DC6               	goto	u2091
  5439     05C5  2DC7               	goto	u2090
  5440     05C6                     u2091:
  5441     05C6  2D8A               	goto	l2988
  5442     05C7                     u2090:
  5443     05C7                     l2994:
  5444                           
  5445                           ;ai_short.c: 93:     }
  5446     05C7  3001               	movlw	1
  5447     05C8  00CE               	movwf	??_ai_propagate
  5448     05C9  084E               	movf	??_ai_propagate,w
  5449     05CA  07DC               	addwf	ai_propagate@j_845,f
  5450     05CB                     l2996:
  5451     05CB  3004               	movlw	4
  5452     05CC  025C               	subwf	ai_propagate@j_845,w
  5453     05CD  1C03               	skipc
  5454     05CE  2DD0               	goto	u2101
  5455     05CF  2DD1               	goto	u2100
  5456     05D0                     u2101:
  5457     05D0  2D2E               	goto	l2978
  5458     05D1                     u2100:
  5459     05D1                     l2998:
  5460                           
  5461                           ;ai_short.c: 95:     for(uint8_t j = 0; j < 4; j++){
  5462     05D1  01DB               	clrf	ai_propagate@j_847
  5463     05D2                     l3004:
  5464                           
  5465                           ;ai_short.c: 96:         B1[j] -= DC_DB1[j];
  5466     05D2  085B               	movf	ai_propagate@j_847,w
  5467     05D3  3E2C               	addlw	(low (_DC_DB1| 0))& (0+255)
  5468     05D4  0086               	movwf	6
  5469     05D5  0187               	clrf	7
  5470     05D6  085B               	movf	ai_propagate@j_847,w
  5471     05D7  3E38               	addlw	(low (_B1| 0))& (0+255)
  5472     05D8  0084               	movwf	4
  5473     05D9  0185               	clrf	5
  5474     05DA  0801               	movf	1,w
  5475     05DB  0280               	subwf	0,f
  5476     05DC                     l3006:
  5477                           
  5478                           ;ai_short.c: 97:         for(uint8_t i = 0; i < 8; i++){
  5479     05DC  01D9               	clrf	ai_propagate@i_848
  5480     05DD                     l3012:
  5481                           
  5482                           ;ai_short.c: 98:             W1[i][j] -= DC_DW1[i][j];
  5483     05DD  0859               	movf	ai_propagate@i_848,w
  5484     05DE  00CE               	movwf	??_ai_propagate
  5485     05DF  3002               	movlw	2
  5486     05E0                     u2115:
  5487     05E0  35CE               	lslf	??_ai_propagate,f
  5488     05E1  0B89               	decfsz	9,f
  5489     05E2  2DE0               	goto	u2115
  5490     05E3  3020               	movlw	(low (_DC_DW1| (0+256)))& (0+255)
  5491     05E4  074E               	addwf	??_ai_propagate,w
  5492     05E5  00CF               	movwf	??_ai_propagate+1
  5493     05E6  085B               	movf	ai_propagate@j_847,w
  5494     05E7  074F               	addwf	??_ai_propagate+1,w
  5495     05E8  00D0               	movwf	??_ai_propagate+2
  5496     05E9  0850               	movf	??_ai_propagate+2,w
  5497     05EA  0086               	movwf	6
  5498     05EB  3001               	movlw	1	; select bank2/3
  5499     05EC  0087               	movwf	7
  5500     05ED  0859               	movf	ai_propagate@i_848,w
  5501     05EE  00D1               	movwf	??_ai_propagate+3
  5502     05EF  3002               	movlw	2
  5503     05F0                     u2125:
  5504     05F0  35D1               	lslf	??_ai_propagate+3,f
  5505     05F1  0B89               	decfsz	9,f
  5506     05F2  2DF0               	goto	u2125
  5507     05F3  30A0               	movlw	(low (_W1| 0))& (0+255)
  5508     05F4  0751               	addwf	??_ai_propagate+3,w
  5509     05F5  00D2               	movwf	??_ai_propagate+4
  5510     05F6  085B               	movf	ai_propagate@j_847,w
  5511     05F7  0752               	addwf	??_ai_propagate+4,w
  5512     05F8  00D3               	movwf	??_ai_propagate+5
  5513     05F9  0853               	movf	??_ai_propagate+5,w
  5514     05FA  0084               	movwf	4
  5515     05FB  0185               	clrf	5
  5516     05FC  0801               	movf	1,w
  5517     05FD  0280               	subwf	0,f
  5518     05FE                     l3014:
  5519                           
  5520                           ;ai_short.c: 99:         }
  5521     05FE  3001               	movlw	1
  5522     05FF  00CE               	movwf	??_ai_propagate
  5523     0600  084E               	movf	??_ai_propagate,w
  5524     0601  07D9               	addwf	ai_propagate@i_848,f
  5525     0602                     l3016:
  5526     0602  3008               	movlw	8
  5527     0603  0259               	subwf	ai_propagate@i_848,w
  5528     0604  1C03               	skipc
  5529     0605  2E07               	goto	u2131
  5530     0606  2E08               	goto	u2130
  5531     0607                     u2131:
  5532     0607  2DDD               	goto	l3012
  5533     0608                     u2130:
  5534     0608                     l3018:
  5535                           
  5536                           ;ai_short.c: 100:     }
  5537     0608  3001               	movlw	1
  5538     0609  00CE               	movwf	??_ai_propagate
  5539     060A  084E               	movf	??_ai_propagate,w
  5540     060B  07DB               	addwf	ai_propagate@j_847,f
  5541     060C                     l3020:
  5542     060C  3004               	movlw	4
  5543     060D  025B               	subwf	ai_propagate@j_847,w
  5544     060E  1C03               	skipc
  5545     060F  2E11               	goto	u2141
  5546     0610  2E12               	goto	u2140
  5547     0611                     u2141:
  5548     0611  2DD2               	goto	l3004
  5549     0612                     u2140:
  5550     0612                     l540:
  5551     0612  0008               	return
  5552     0613                     __end_of_ai_propagate:
  5553                           
  5554                           	psect	text15
  5555     0EE2                     __ptext15:	
  5556 ;; *************** function ___wmul *****************
  5557 ;; Defined at:
  5558 ;;		line 15 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  5559 ;; Parameters:    Size  Location     Type
  5560 ;;  multiplier      2    3[COMMON] unsigned int 
  5561 ;;  multiplicand    2    5[COMMON] unsigned int 
  5562 ;; Auto vars:     Size  Location     Type
  5563 ;;  product         2    7[COMMON] unsigned int 
  5564 ;; Return value:  Size  Location     Type
  5565 ;;                  2    3[COMMON] unsigned int 
  5566 ;; Registers used:
  5567 ;;		wreg, status,2, status,0
  5568 ;; Tracked objects:
  5569 ;;		On entry : 0/0
  5570 ;;		On exit  : 0/0
  5571 ;;		Unchanged: 0/0
  5572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5573 ;;      Params:         4       0       0       0       0       0
  5574 ;;      Locals:         2       0       0       0       0       0
  5575 ;;      Temps:          0       0       0       0       0       0
  5576 ;;      Totals:         6       0       0       0       0       0
  5577 ;;Total ram usage:        6 bytes
  5578 ;; Hardware stack levels used: 1
  5579 ;; This function calls:
  5580 ;;		Nothing
  5581 ;; This function is called by:
  5582 ;;		_ai_run
  5583 ;;		_ai_propagate
  5584 ;; This function uses a non-reentrant model
  5585 ;;
  5586                           
  5587     0EE2                     ___wmul:	
  5588                           ;psect for function ___wmul
  5589                           
  5590     0EE2                     l2570:	
  5591                           ;incstack = 0
  5592                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5593                           
  5594     0EE2  01F7               	clrf	___wmul@product
  5595     0EE3  01F8               	clrf	___wmul@product+1
  5596     0EE4                     l2572:
  5597     0EE4  1C73               	btfss	___wmul@multiplier,0
  5598     0EE5  2EE7               	goto	u1491
  5599     0EE6  2EE8               	goto	u1490
  5600     0EE7                     u1491:
  5601     0EE7  2EEC               	goto	l752
  5602     0EE8                     u1490:
  5603     0EE8                     l2574:
  5604     0EE8  0875               	movf	___wmul@multiplicand,w
  5605     0EE9  07F7               	addwf	___wmul@product,f
  5606     0EEA  0876               	movf	___wmul@multiplicand+1,w
  5607     0EEB  3DF8               	addwfc	___wmul@product+1,f
  5608     0EEC                     l752:
  5609     0EEC  3001               	movlw	1
  5610     0EED                     u1505:
  5611     0EED  35F5               	lslf	___wmul@multiplicand,f
  5612     0EEE  0DF6               	rlf	___wmul@multiplicand+1,f
  5613     0EEF  0B89               	decfsz	9,f
  5614     0EF0  2EED               	goto	u1505
  5615     0EF1                     l2576:
  5616     0EF1  3001               	movlw	1
  5617     0EF2                     u1515:
  5618     0EF2  36F4               	lsrf	___wmul@multiplier+1,f
  5619     0EF3  0CF3               	rrf	___wmul@multiplier,f
  5620     0EF4  0B89               	decfsz	9,f
  5621     0EF5  2EF2               	goto	u1515
  5622     0EF6                     l2578:
  5623     0EF6  0873               	movf	___wmul@multiplier,w
  5624     0EF7  0474               	iorwf	___wmul@multiplier+1,w
  5625     0EF8  1D03               	btfss	3,2
  5626     0EF9  2EFB               	goto	u1521
  5627     0EFA  2EFC               	goto	u1520
  5628     0EFB                     u1521:
  5629     0EFB  2EE4               	goto	l2572
  5630     0EFC                     u1520:
  5631     0EFC                     l2580:
  5632     0EFC  0878               	movf	___wmul@product+1,w
  5633     0EFD  00F4               	movwf	?___wmul+1
  5634     0EFE  0877               	movf	___wmul@product,w
  5635     0EFF  00F3               	movwf	?___wmul
  5636     0F00                     l754:
  5637     0F00  0008               	return
  5638     0F01                     __end_of___wmul:
  5639                           
  5640                           	psect	text16
  5641     0118                     __ptext16:	
  5642 ;; *************** function ___awdiv *****************
  5643 ;; Defined at:
  5644 ;;		line 5 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
  5645 ;; Parameters:    Size  Location     Type
  5646 ;;  divisor         2    9[COMMON] int 
  5647 ;;  dividend        2   11[COMMON] int 
  5648 ;; Auto vars:     Size  Location     Type
  5649 ;;  quotient        2    2[BANK0 ] int 
  5650 ;;  sign            1    1[BANK0 ] unsigned char 
  5651 ;;  counter         1    0[BANK0 ] unsigned char 
  5652 ;; Return value:  Size  Location     Type
  5653 ;;                  2    9[COMMON] int 
  5654 ;; Registers used:
  5655 ;;		wreg, status,2, status,0
  5656 ;; Tracked objects:
  5657 ;;		On entry : 0/0
  5658 ;;		On exit  : 0/0
  5659 ;;		Unchanged: 0/0
  5660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5661 ;;      Params:         4       0       0       0       0       0
  5662 ;;      Locals:         0       4       0       0       0       0
  5663 ;;      Temps:          1       0       0       0       0       0
  5664 ;;      Totals:         5       4       0       0       0       0
  5665 ;;Total ram usage:        9 bytes
  5666 ;; Hardware stack levels used: 1
  5667 ;; This function calls:
  5668 ;;		Nothing
  5669 ;; This function is called by:
  5670 ;;		_main
  5671 ;;		_snake_move
  5672 ;;		_snake_getSurroundings
  5673 ;;		_ai_run
  5674 ;;		_ai_propagate
  5675 ;; This function uses a non-reentrant model
  5676 ;;
  5677                           
  5678     0118                     ___awdiv:	
  5679                           ;psect for function ___awdiv
  5680                           
  5681     0118                     l2584:	
  5682                           ;incstack = 0
  5683                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5684                           
  5685     0118  0020               	movlb	0	; select bank0
  5686     0119  01CB               	clrf	___awdiv@sign
  5687     011A                     l2586:
  5688     011A  1FFA               	btfss	___awdiv@divisor+1,7
  5689     011B  291D               	goto	u1531
  5690     011C  291E               	goto	u1530
  5691     011D                     u1531:
  5692     011D  2925               	goto	l2592
  5693     011E                     u1530:
  5694     011E                     l2588:
  5695     011E  09F9               	comf	___awdiv@divisor,f
  5696     011F  09FA               	comf	___awdiv@divisor+1,f
  5697     0120  0AF9               	incf	___awdiv@divisor,f
  5698     0121  1903               	skipnz
  5699     0122  0AFA               	incf	___awdiv@divisor+1,f
  5700     0123                     l2590:
  5701     0123  01CB               	clrf	___awdiv@sign
  5702     0124  0ACB               	incf	___awdiv@sign,f
  5703     0125                     l2592:
  5704     0125  1FFC               	btfss	___awdiv@dividend+1,7
  5705     0126  2928               	goto	u1541
  5706     0127  2929               	goto	u1540
  5707     0128                     u1541:
  5708     0128  2932               	goto	l2598
  5709     0129                     u1540:
  5710     0129                     l2594:
  5711     0129  09FB               	comf	___awdiv@dividend,f
  5712     012A  09FC               	comf	___awdiv@dividend+1,f
  5713     012B  0AFB               	incf	___awdiv@dividend,f
  5714     012C  1903               	skipnz
  5715     012D  0AFC               	incf	___awdiv@dividend+1,f
  5716     012E                     l2596:
  5717     012E  3001               	movlw	1
  5718     012F  00FD               	movwf	??___awdiv
  5719     0130  087D               	movf	??___awdiv,w
  5720     0131  06CB               	xorwf	___awdiv@sign,f
  5721     0132                     l2598:
  5722     0132  01CC               	clrf	___awdiv@quotient
  5723     0133  01CD               	clrf	___awdiv@quotient+1
  5724     0134                     l2600:
  5725     0134  0879               	movf	___awdiv@divisor,w
  5726     0135  047A               	iorwf	___awdiv@divisor+1,w
  5727     0136  1903               	btfsc	3,2
  5728     0137  2939               	goto	u1551
  5729     0138  293A               	goto	u1550
  5730     0139                     u1551:
  5731     0139  2969               	goto	l2620
  5732     013A                     u1550:
  5733     013A                     l2602:
  5734     013A  01CA               	clrf	___awdiv@counter
  5735     013B  0ACA               	incf	___awdiv@counter,f
  5736     013C  2946               	goto	l2608
  5737     013D                     l2604:
  5738     013D  3001               	movlw	1
  5739     013E                     u1565:
  5740     013E  35F9               	lslf	___awdiv@divisor,f
  5741     013F  0DFA               	rlf	___awdiv@divisor+1,f
  5742     0140  0B89               	decfsz	9,f
  5743     0141  293E               	goto	u1565
  5744     0142                     l2606:
  5745     0142  3001               	movlw	1
  5746     0143  00FD               	movwf	??___awdiv
  5747     0144  087D               	movf	??___awdiv,w
  5748     0145  07CA               	addwf	___awdiv@counter,f
  5749     0146                     l2608:
  5750     0146  1FFA               	btfss	___awdiv@divisor+1,7
  5751     0147  2949               	goto	u1571
  5752     0148  294A               	goto	u1570
  5753     0149                     u1571:
  5754     0149  293D               	goto	l2604
  5755     014A                     u1570:
  5756     014A                     l2610:
  5757     014A  3001               	movlw	1
  5758     014B                     u1585:
  5759     014B  35CC               	lslf	___awdiv@quotient,f
  5760     014C  0DCD               	rlf	___awdiv@quotient+1,f
  5761     014D  0B89               	decfsz	9,f
  5762     014E  294B               	goto	u1585
  5763     014F  087A               	movf	___awdiv@divisor+1,w
  5764     0150  027C               	subwf	___awdiv@dividend+1,w
  5765     0151  1D03               	skipz
  5766     0152  2955               	goto	u1595
  5767     0153  0879               	movf	___awdiv@divisor,w
  5768     0154  027B               	subwf	___awdiv@dividend,w
  5769     0155                     u1595:
  5770     0155  1C03               	skipc
  5771     0156  2958               	goto	u1591
  5772     0157  2959               	goto	u1590
  5773     0158                     u1591:
  5774     0158  295E               	goto	l2616
  5775     0159                     u1590:
  5776     0159                     l2612:
  5777     0159  0879               	movf	___awdiv@divisor,w
  5778     015A  02FB               	subwf	___awdiv@dividend,f
  5779     015B  087A               	movf	___awdiv@divisor+1,w
  5780     015C  3BFC               	subwfb	___awdiv@dividend+1,f
  5781     015D                     l2614:
  5782     015D  144C               	bsf	___awdiv@quotient,0
  5783     015E                     l2616:
  5784     015E  3001               	movlw	1
  5785     015F                     u1605:
  5786     015F  36FA               	lsrf	___awdiv@divisor+1,f
  5787     0160  0CF9               	rrf	___awdiv@divisor,f
  5788     0161  0B89               	decfsz	9,f
  5789     0162  295F               	goto	u1605
  5790     0163                     l2618:
  5791     0163  3001               	movlw	1
  5792     0164  02CA               	subwf	___awdiv@counter,f
  5793     0165  1D03               	btfss	3,2
  5794     0166  2968               	goto	u1611
  5795     0167  2969               	goto	u1610
  5796     0168                     u1611:
  5797     0168  294A               	goto	l2610
  5798     0169                     u1610:
  5799     0169                     l2620:
  5800     0169  084B               	movf	___awdiv@sign,w
  5801     016A  1903               	btfsc	3,2
  5802     016B  296D               	goto	u1621
  5803     016C  296E               	goto	u1620
  5804     016D                     u1621:
  5805     016D  2973               	goto	l2624
  5806     016E                     u1620:
  5807     016E                     l2622:
  5808     016E  09CC               	comf	___awdiv@quotient,f
  5809     016F  09CD               	comf	___awdiv@quotient+1,f
  5810     0170  0ACC               	incf	___awdiv@quotient,f
  5811     0171  1903               	skipnz
  5812     0172  0ACD               	incf	___awdiv@quotient+1,f
  5813     0173                     l2624:
  5814     0173  084D               	movf	___awdiv@quotient+1,w
  5815     0174  00FA               	movwf	?___awdiv+1
  5816     0175  084C               	movf	___awdiv@quotient,w
  5817     0176  00F9               	movwf	?___awdiv
  5818     0177                     l905:
  5819     0177  0008               	return
  5820     0178                     __end_of___awdiv:
  5821                           
  5822                           	psect	text17
  5823     0613                     __ptext17:	
  5824 ;; *************** function _ai_printAI *****************
  5825 ;; Defined at:
  5826 ;;		line 103 in file "ai_short.c"
  5827 ;; Parameters:    Size  Location     Type
  5828 ;;		None
  5829 ;; Auto vars:     Size  Location     Type
  5830 ;;  j               1   11[BANK0 ] unsigned char 
  5831 ;;  j               1    5[BANK0 ] unsigned char 
  5832 ;;  i               1   12[BANK0 ] unsigned char 
  5833 ;;  i               1   10[BANK0 ] unsigned char 
  5834 ;;  j               1    9[BANK0 ] unsigned char 
  5835 ;;  j               1    8[BANK0 ] unsigned char 
  5836 ;;  j               1    7[BANK0 ] unsigned char 
  5837 ;;  i               1    6[BANK0 ] unsigned char 
  5838 ;;  i               1    4[BANK0 ] unsigned char 
  5839 ;;  j               1    3[BANK0 ] unsigned char 
  5840 ;;  j               1    2[BANK0 ] unsigned char 
  5841 ;;  j               1    1[BANK0 ] unsigned char 
  5842 ;;  i               1    0[BANK0 ] unsigned char 
  5843 ;; Return value:  Size  Location     Type
  5844 ;;                  1    wreg      void 
  5845 ;; Registers used:
  5846 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5847 ;; Tracked objects:
  5848 ;;		On entry : 0/0
  5849 ;;		On exit  : 0/0
  5850 ;;		Unchanged: 0/0
  5851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5852 ;;      Params:         0       0       0       0       0       0
  5853 ;;      Locals:         0      13       0       0       0       0
  5854 ;;      Temps:          3       0       0       0       0       0
  5855 ;;      Totals:         3      13       0       0       0       0
  5856 ;;Total ram usage:       16 bytes
  5857 ;; Hardware stack levels used: 1
  5858 ;; Hardware stack levels required when called: 3
  5859 ;; This function calls:
  5860 ;;		_de_sigmoid
  5861 ;;		_print
  5862 ;;		_printInteger
  5863 ;;		_printString
  5864 ;;		_sigmoid
  5865 ;; This function is called by:
  5866 ;;		_main
  5867 ;; This function uses a non-reentrant model
  5868 ;;
  5869                           
  5870     0613                     _ai_printAI:	
  5871                           ;psect for function _ai_printAI
  5872                           
  5873     0613                     l3022:	
  5874                           ;incstack = 0
  5875                           ; Regs used in _ai_printAI: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5876                           
  5877                           
  5878                           ;ai_short.c: 104:     printString("Y0");
  5879     0613  3054               	movlw	low (STR_1| (0+32768))
  5880     0614  00F2               	movwf	printString@str
  5881     0615  3088               	movlw	high (STR_1| (0+32768))
  5882     0616  00F3               	movwf	printString@str+1
  5883     0617  318F  2723  3186   	fcall	_printString
  5884                           
  5885                           ;ai_short.c: 105:     printString("int8_t");
  5886     061A  3029               	movlw	low ((STR_12+1)| (0+32768))
  5887     061B  00F2               	movwf	printString@str
  5888     061C  3088               	movlw	high ((STR_12+1)| (0+32768))
  5889     061D  00F3               	movwf	printString@str+1
  5890     061E  318F  2723  3186   	fcall	_printString
  5891     0621                     l3024:
  5892                           
  5893                           ;ai_short.c: 106:     for(uint8_t i = 0; i < 8; i++){
  5894     0621  0020               	movlb	0	; select bank0
  5895     0622  01CA               	clrf	ai_printAI@i
  5896     0623                     l3030:
  5897                           
  5898                           ;ai_short.c: 107:         print((uint8_t)Y0[i]);
  5899     0623  084A               	movf	ai_printAI@i,w
  5900     0624  3EC8               	addlw	(low (_Y0| 0))& (0+255)
  5901     0625  0086               	movwf	6
  5902     0626  0187               	clrf	7
  5903     0627  0801               	movf	1,w
  5904     0628  3180  2037  3186   	fcall	_print
  5905     062B                     l3032:
  5906                           
  5907                           ;ai_short.c: 108:     }
  5908     062B  3001               	movlw	1
  5909     062C  00F8               	movwf	??_ai_printAI
  5910     062D  0878               	movf	??_ai_printAI,w
  5911     062E  0020               	movlb	0	; select bank0
  5912     062F  07CA               	addwf	ai_printAI@i,f
  5913     0630                     l3034:
  5914     0630  3008               	movlw	8
  5915     0631  024A               	subwf	ai_printAI@i,w
  5916     0632  1C03               	skipc
  5917     0633  2E35               	goto	u2151
  5918     0634  2E36               	goto	u2150
  5919     0635                     u2151:
  5920     0635  2E23               	goto	l3030
  5921     0636                     u2150:
  5922     0636                     l3036:
  5923                           
  5924                           ;ai_short.c: 109:     printString("Y1");
  5925     0636  3042               	movlw	low ((STR_13+4)| (0+32768))
  5926     0637  00F2               	movwf	printString@str
  5927     0638  3088               	movlw	high ((STR_13+4)| (0+32768))
  5928     0639  00F3               	movwf	printString@str+1
  5929     063A  318F  2723  3186   	fcall	_printString
  5930                           
  5931                           ;ai_short.c: 110:     printString("int8_t");
  5932     063D  3029               	movlw	low ((STR_12+1)| (0+32768))
  5933     063E  00F2               	movwf	printString@str
  5934     063F  3088               	movlw	high ((STR_12+1)| (0+32768))
  5935     0640  00F3               	movwf	printString@str+1
  5936     0641  318F  2723  3186   	fcall	_printString
  5937     0644                     l3038:
  5938                           
  5939                           ;ai_short.c: 111:     for(uint8_t j = 0; j < 4; j++){
  5940     0644  0020               	movlb	0	; select bank0
  5941     0645  01CB               	clrf	ai_printAI@j
  5942     0646                     l3044:
  5943                           
  5944                           ;ai_short.c: 112:         print((uint8_t)Y1[j]);
  5945     0646  084B               	movf	ai_printAI@j,w
  5946     0647  3E46               	addlw	(low (_Y1| 0))& (0+255)
  5947     0648  0086               	movwf	6
  5948     0649  0187               	clrf	7
  5949     064A  0801               	movf	1,w
  5950     064B  3180  2037  3186   	fcall	_print
  5951     064E                     l3046:
  5952                           
  5953                           ;ai_short.c: 113:     }
  5954     064E  3001               	movlw	1
  5955     064F  00F8               	movwf	??_ai_printAI
  5956     0650  0878               	movf	??_ai_printAI,w
  5957     0651  0020               	movlb	0	; select bank0
  5958     0652  07CB               	addwf	ai_printAI@j,f
  5959     0653                     l3048:
  5960     0653  3004               	movlw	4
  5961     0654  024B               	subwf	ai_printAI@j,w
  5962     0655  1C03               	skipc
  5963     0656  2E58               	goto	u2161
  5964     0657  2E59               	goto	u2160
  5965     0658                     u2161:
  5966     0658  2E46               	goto	l3044
  5967     0659                     u2160:
  5968     0659                     l3050:
  5969                           
  5970                           ;ai_short.c: 114:     printString("Z1");
  5971     0659  3049               	movlw	low ((STR_15+4)| (0+32768))
  5972     065A  00F2               	movwf	printString@str
  5973     065B  3088               	movlw	high ((STR_15+4)| (0+32768))
  5974     065C  00F3               	movwf	printString@str+1
  5975     065D  318F  2723  3186   	fcall	_printString
  5976                           
  5977                           ;ai_short.c: 115:     printString("int16_t");
  5978     0660  3020               	movlw	low (STR_6| (0+32768))
  5979     0661  00F2               	movwf	printString@str
  5980     0662  3088               	movlw	high (STR_6| (0+32768))
  5981     0663  00F3               	movwf	printString@str+1
  5982     0664  318F  2723  3186   	fcall	_printString
  5983     0667                     l3052:
  5984                           
  5985                           ;ai_short.c: 116:     for(uint8_t j = 0; j < 4; j++){
  5986     0667  0020               	movlb	0	; select bank0
  5987     0668  01CC               	clrf	ai_printAI@j_859
  5988     0669                     l3058:
  5989                           
  5990                           ;ai_short.c: 117:         printInteger(Z1[j]);
  5991     0669  354C               	lslf	ai_printAI@j_859,w
  5992     066A  3E20               	addlw	(low (_Z1| 0))& (0+255)
  5993     066B  0086               	movwf	6
  5994     066C  0187               	clrf	7
  5995     066D  3F40               	moviw [0]fsr1
  5996     066E  00F2               	movwf	printInteger@i
  5997     066F  3F41               	moviw [1]fsr1
  5998     0670  00F3               	movwf	printInteger@i+1
  5999     0671  318E  2650  3186   	fcall	_printInteger
  6000     0674                     l3060:
  6001                           
  6002                           ;ai_short.c: 118:     }
  6003     0674  3001               	movlw	1
  6004     0675  00F8               	movwf	??_ai_printAI
  6005     0676  0878               	movf	??_ai_printAI,w
  6006     0677  0020               	movlb	0	; select bank0
  6007     0678  07CC               	addwf	ai_printAI@j_859,f
  6008     0679                     l3062:
  6009     0679  3004               	movlw	4
  6010     067A  024C               	subwf	ai_printAI@j_859,w
  6011     067B  1C03               	skipc
  6012     067C  2E7E               	goto	u2171
  6013     067D  2E7F               	goto	u2170
  6014     067E                     u2171:
  6015     067E  2E69               	goto	l3058
  6016     067F                     u2170:
  6017     067F                     l3064:
  6018                           
  6019                           ;ai_short.c: 119:     printString("B1");
  6020     067F  3034               	movlw	low ((STR_17+4)| (0+32768))
  6021     0680  00F2               	movwf	printString@str
  6022     0681  3088               	movlw	high ((STR_17+4)| (0+32768))
  6023     0682  00F3               	movwf	printString@str+1
  6024     0683  318F  2723  3186   	fcall	_printString
  6025                           
  6026                           ;ai_short.c: 120:     printString("int8_t");
  6027     0686  3029               	movlw	low ((STR_12+1)| (0+32768))
  6028     0687  00F2               	movwf	printString@str
  6029     0688  3088               	movlw	high ((STR_12+1)| (0+32768))
  6030     0689  00F3               	movwf	printString@str+1
  6031     068A  318F  2723  3186   	fcall	_printString
  6032     068D                     l3066:
  6033                           
  6034                           ;ai_short.c: 121:     for(uint8_t j = 0; j < 4; j++){
  6035     068D  0020               	movlb	0	; select bank0
  6036     068E  01CD               	clrf	ai_printAI@j_863
  6037     068F                     l3072:
  6038                           
  6039                           ;ai_short.c: 122:         print((uint8_t)B1[j]);
  6040     068F  084D               	movf	ai_printAI@j_863,w
  6041     0690  3E38               	addlw	(low (_B1| 0))& (0+255)
  6042     0691  0086               	movwf	6
  6043     0692  0187               	clrf	7
  6044     0693  0801               	movf	1,w
  6045     0694  3180  2037  3186   	fcall	_print
  6046     0697                     l3074:
  6047                           
  6048                           ;ai_short.c: 123:     }
  6049     0697  3001               	movlw	1
  6050     0698  00F8               	movwf	??_ai_printAI
  6051     0699  0878               	movf	??_ai_printAI,w
  6052     069A  0020               	movlb	0	; select bank0
  6053     069B  07CD               	addwf	ai_printAI@j_863,f
  6054     069C                     l3076:
  6055     069C  3004               	movlw	4
  6056     069D  024D               	subwf	ai_printAI@j_863,w
  6057     069E  1C03               	skipc
  6058     069F  2EA1               	goto	u2181
  6059     06A0  2EA2               	goto	u2180
  6060     06A1                     u2181:
  6061     06A1  2E8F               	goto	l3072
  6062     06A2                     u2180:
  6063     06A2                     l3078:
  6064                           
  6065                           ;ai_short.c: 124:     printString("W1");
  6066     06A2  303B               	movlw	low ((STR_19+4)| (0+32768))
  6067     06A3  00F2               	movwf	printString@str
  6068     06A4  3088               	movlw	high ((STR_19+4)| (0+32768))
  6069     06A5  00F3               	movwf	printString@str+1
  6070     06A6  318F  2723  3186   	fcall	_printString
  6071                           
  6072                           ;ai_short.c: 125:     printString("int8_t");
  6073     06A9  3029               	movlw	low ((STR_12+1)| (0+32768))
  6074     06AA  00F2               	movwf	printString@str
  6075     06AB  3088               	movlw	high ((STR_12+1)| (0+32768))
  6076     06AC  00F3               	movwf	printString@str+1
  6077     06AD  318F  2723  3186   	fcall	_printString
  6078     06B0                     l3080:
  6079                           
  6080                           ;ai_short.c: 126:     for(uint8_t i = 0; i < 8; i++){
  6081     06B0  0020               	movlb	0	; select bank0
  6082     06B1  01CE               	clrf	ai_printAI@i_866
  6083     06B2                     l3086:
  6084                           
  6085                           ;ai_short.c: 127:         for(uint8_t j = 0; j < 4; j++){
  6086     06B2  01CF               	clrf	ai_printAI@j_867
  6087     06B3                     l3092:
  6088                           
  6089                           ;ai_short.c: 128:             print((uint8_t)W1[i][j]);
  6090     06B3  084E               	movf	ai_printAI@i_866,w
  6091     06B4  00F8               	movwf	??_ai_printAI
  6092     06B5  3002               	movlw	2
  6093     06B6                     u2195:
  6094     06B6  35F8               	lslf	??_ai_printAI,f
  6095     06B7  0B89               	decfsz	9,f
  6096     06B8  2EB6               	goto	u2195
  6097     06B9  30A0               	movlw	(low (_W1| 0))& (0+255)
  6098     06BA  0778               	addwf	??_ai_printAI,w
  6099     06BB  00F9               	movwf	??_ai_printAI+1
  6100     06BC  084F               	movf	ai_printAI@j_867,w
  6101     06BD  0779               	addwf	??_ai_printAI+1,w
  6102     06BE  00FA               	movwf	??_ai_printAI+2
  6103     06BF  087A               	movf	??_ai_printAI+2,w
  6104     06C0  0086               	movwf	6
  6105     06C1  0187               	clrf	7
  6106     06C2  0801               	movf	1,w
  6107     06C3  3180  2037  3186   	fcall	_print
  6108     06C6                     l3094:
  6109                           
  6110                           ;ai_short.c: 129:         }
  6111     06C6  3001               	movlw	1
  6112     06C7  00F8               	movwf	??_ai_printAI
  6113     06C8  0878               	movf	??_ai_printAI,w
  6114     06C9  0020               	movlb	0	; select bank0
  6115     06CA  07CF               	addwf	ai_printAI@j_867,f
  6116     06CB                     l3096:
  6117     06CB  3004               	movlw	4
  6118     06CC  024F               	subwf	ai_printAI@j_867,w
  6119     06CD  1C03               	skipc
  6120     06CE  2ED0               	goto	u2201
  6121     06CF  2ED1               	goto	u2200
  6122     06D0                     u2201:
  6123     06D0  2EB3               	goto	l3092
  6124     06D1                     u2200:
  6125     06D1                     l3098:
  6126                           
  6127                           ;ai_short.c: 130:     }
  6128     06D1  3001               	movlw	1
  6129     06D2  00F8               	movwf	??_ai_printAI
  6130     06D3  0878               	movf	??_ai_printAI,w
  6131     06D4  07CE               	addwf	ai_printAI@i_866,f
  6132     06D5                     l3100:
  6133     06D5  3008               	movlw	8
  6134     06D6  024E               	subwf	ai_printAI@i_866,w
  6135     06D7  1C03               	skipc
  6136     06D8  2EDA               	goto	u2211
  6137     06D9  2EDB               	goto	u2210
  6138     06DA                     u2211:
  6139     06DA  2EB2               	goto	l3086
  6140     06DB                     u2210:
  6141     06DB                     l3102:
  6142                           
  6143                           ;ai_short.c: 131:     printString("S1");
  6144     06DB  3051               	movlw	low ((STR_21+1)| (0+32768))
  6145     06DC  00F2               	movwf	printString@str
  6146     06DD  3088               	movlw	high ((STR_21+1)| (0+32768))
  6147     06DE  00F3               	movwf	printString@str+1
  6148     06DF  318F  2723  3186   	fcall	_printString
  6149                           
  6150                           ;ai_short.c: 132:     printString("uint8_t");
  6151     06E2  3028               	movlw	low (STR_12| (0+32768))
  6152     06E3  00F2               	movwf	printString@str
  6153     06E4  3088               	movlw	high (STR_12| (0+32768))
  6154     06E5  00F3               	movwf	printString@str+1
  6155     06E6  318F  2723  3186   	fcall	_printString
  6156     06E9                     l3104:
  6157                           
  6158                           ;ai_short.c: 133:     for(uint8_t i = 0; i < 4; i++){
  6159     06E9  0020               	movlb	0	; select bank0
  6160     06EA  01D0               	clrf	ai_printAI@i_870
  6161     06EB                     l3110:
  6162                           
  6163                           ;ai_short.c: 134:         print(sigmoid((int)Z1[i]));
  6164     06EB  3550               	lslf	ai_printAI@i_870,w
  6165     06EC  3E20               	addlw	(low (_Z1| 0))& (0+255)
  6166     06ED  0086               	movwf	6
  6167     06EE  0187               	clrf	7
  6168     06EF  3F40               	moviw [0]fsr1
  6169     06F0  00F0               	movwf	sigmoid@z
  6170     06F1  3F41               	moviw [1]fsr1
  6171     06F2  00F1               	movwf	sigmoid@z+1
  6172     06F3  318F  27D1  3186   	fcall	_sigmoid
  6173     06F6  3180  2037  3186   	fcall	_print
  6174     06F9                     l3112:
  6175                           
  6176                           ;ai_short.c: 135:     }
  6177     06F9  3001               	movlw	1
  6178     06FA  00F8               	movwf	??_ai_printAI
  6179     06FB  0878               	movf	??_ai_printAI,w
  6180     06FC  0020               	movlb	0	; select bank0
  6181     06FD  07D0               	addwf	ai_printAI@i_870,f
  6182     06FE                     l3114:
  6183     06FE  3004               	movlw	4
  6184     06FF  0250               	subwf	ai_printAI@i_870,w
  6185     0700  1C03               	skipc
  6186     0701  2F03               	goto	u2221
  6187     0702  2F04               	goto	u2220
  6188     0703                     u2221:
  6189     0703  2EEB               	goto	l3110
  6190     0704                     u2220:
  6191     0704                     l3116:
  6192                           
  6193                           ;ai_short.c: 137:     printString("DC_DY1");
  6194     0704  303E               	movlw	low (STR_13| (0+32768))
  6195     0705  00F2               	movwf	printString@str
  6196     0706  3088               	movlw	high (STR_13| (0+32768))
  6197     0707  00F3               	movwf	printString@str+1
  6198     0708  318F  2723  3186   	fcall	_printString
  6199                           
  6200                           ;ai_short.c: 138:     printString("int8_t");
  6201     070B  3029               	movlw	low ((STR_12+1)| (0+32768))
  6202     070C  00F2               	movwf	printString@str
  6203     070D  3088               	movlw	high ((STR_12+1)| (0+32768))
  6204     070E  00F3               	movwf	printString@str+1
  6205     070F  318F  2723  3186   	fcall	_printString
  6206     0712                     l3118:
  6207                           
  6208                           ;ai_short.c: 139:     for(uint8_t j = 0; j < 4; j++){
  6209     0712  0020               	movlb	0	; select bank0
  6210     0713  01D1               	clrf	ai_printAI@j_873
  6211     0714                     l3124:
  6212                           
  6213                           ;ai_short.c: 140:         print((uint8_t)DC_DY1[j]);
  6214     0714  0851               	movf	ai_printAI@j_873,w
  6215     0715  3E34               	addlw	(low (_DC_DY1| 0))& (0+255)
  6216     0716  0086               	movwf	6
  6217     0717  0187               	clrf	7
  6218     0718  0801               	movf	1,w
  6219     0719  3180  2037  3186   	fcall	_print
  6220     071C                     l3126:
  6221                           
  6222                           ;ai_short.c: 141:     }
  6223     071C  3001               	movlw	1
  6224     071D  00F8               	movwf	??_ai_printAI
  6225     071E  0878               	movf	??_ai_printAI,w
  6226     071F  0020               	movlb	0	; select bank0
  6227     0720  07D1               	addwf	ai_printAI@j_873,f
  6228     0721                     l3128:
  6229     0721  3004               	movlw	4
  6230     0722  0251               	subwf	ai_printAI@j_873,w
  6231     0723  1C03               	skipc
  6232     0724  2F26               	goto	u2231
  6233     0725  2F27               	goto	u2230
  6234     0726                     u2231:
  6235     0726  2F14               	goto	l3124
  6236     0727                     u2230:
  6237     0727                     l3130:
  6238                           
  6239                           ;ai_short.c: 142:     printString("DC_DZ1");
  6240     0727  3045               	movlw	low (STR_15| (0+32768))
  6241     0728  00F2               	movwf	printString@str
  6242     0729  3088               	movlw	high (STR_15| (0+32768))
  6243     072A  00F3               	movwf	printString@str+1
  6244     072B  318F  2723  3186   	fcall	_printString
  6245                           
  6246                           ;ai_short.c: 143:     printString("int8_t");
  6247     072E  3029               	movlw	low ((STR_12+1)| (0+32768))
  6248     072F  00F2               	movwf	printString@str
  6249     0730  3088               	movlw	high ((STR_12+1)| (0+32768))
  6250     0731  00F3               	movwf	printString@str+1
  6251     0732  318F  2723  3186   	fcall	_printString
  6252     0735                     l3132:
  6253                           
  6254                           ;ai_short.c: 144:     for(uint8_t j = 0; j < 4; j++){
  6255     0735  0020               	movlb	0	; select bank0
  6256     0736  01D2               	clrf	ai_printAI@j_876
  6257     0737                     l3138:
  6258                           
  6259                           ;ai_short.c: 145:         print((uint8_t)DC_DZ1[j]);
  6260     0737  0852               	movf	ai_printAI@j_876,w
  6261     0738  3E30               	addlw	(low (_DC_DZ1| 0))& (0+255)
  6262     0739  0086               	movwf	6
  6263     073A  0187               	clrf	7
  6264     073B  0801               	movf	1,w
  6265     073C  3180  2037  3186   	fcall	_print
  6266     073F                     l3140:
  6267                           
  6268                           ;ai_short.c: 146:     }
  6269     073F  3001               	movlw	1
  6270     0740  00F8               	movwf	??_ai_printAI
  6271     0741  0878               	movf	??_ai_printAI,w
  6272     0742  0020               	movlb	0	; select bank0
  6273     0743  07D2               	addwf	ai_printAI@j_876,f
  6274     0744                     l3142:
  6275     0744  3004               	movlw	4
  6276     0745  0252               	subwf	ai_printAI@j_876,w
  6277     0746  1C03               	skipc
  6278     0747  2F49               	goto	u2241
  6279     0748  2F4A               	goto	u2240
  6280     0749                     u2241:
  6281     0749  2F37               	goto	l3138
  6282     074A                     u2240:
  6283     074A                     l3144:
  6284                           
  6285                           ;ai_short.c: 147:     printString("DC_DB1");
  6286     074A  3030               	movlw	low (STR_17| (0+32768))
  6287     074B  00F2               	movwf	printString@str
  6288     074C  3088               	movlw	high (STR_17| (0+32768))
  6289     074D  00F3               	movwf	printString@str+1
  6290     074E  318F  2723  3186   	fcall	_printString
  6291                           
  6292                           ;ai_short.c: 148:     printString("int8_t");
  6293     0751  3029               	movlw	low ((STR_12+1)| (0+32768))
  6294     0752  00F2               	movwf	printString@str
  6295     0753  3088               	movlw	high ((STR_12+1)| (0+32768))
  6296     0754  00F3               	movwf	printString@str+1
  6297     0755  318F  2723  3186   	fcall	_printString
  6298     0758                     l3146:
  6299                           
  6300                           ;ai_short.c: 149:     for(uint8_t j = 0; j < 4; j++){
  6301     0758  0020               	movlb	0	; select bank0
  6302     0759  01D3               	clrf	ai_printAI@j_879
  6303     075A                     l3152:
  6304                           
  6305                           ;ai_short.c: 150:         print((uint8_t)DC_DB1[j]);
  6306     075A  0853               	movf	ai_printAI@j_879,w
  6307     075B  3E2C               	addlw	(low (_DC_DB1| 0))& (0+255)
  6308     075C  0086               	movwf	6
  6309     075D  0187               	clrf	7
  6310     075E  0801               	movf	1,w
  6311     075F  3180  2037  3186   	fcall	_print
  6312     0762                     l3154:
  6313                           
  6314                           ;ai_short.c: 151:     }
  6315     0762  3001               	movlw	1
  6316     0763  00F8               	movwf	??_ai_printAI
  6317     0764  0878               	movf	??_ai_printAI,w
  6318     0765  0020               	movlb	0	; select bank0
  6319     0766  07D3               	addwf	ai_printAI@j_879,f
  6320     0767                     l3156:
  6321     0767  3004               	movlw	4
  6322     0768  0253               	subwf	ai_printAI@j_879,w
  6323     0769  1C03               	skipc
  6324     076A  2F6C               	goto	u2251
  6325     076B  2F6D               	goto	u2250
  6326     076C                     u2251:
  6327     076C  2F5A               	goto	l3152
  6328     076D                     u2250:
  6329     076D                     l3158:
  6330                           
  6331                           ;ai_short.c: 152:     printString("DC_DW1");
  6332     076D  3037               	movlw	low (STR_19| (0+32768))
  6333     076E  00F2               	movwf	printString@str
  6334     076F  3088               	movlw	high (STR_19| (0+32768))
  6335     0770  00F3               	movwf	printString@str+1
  6336     0771  318F  2723  3186   	fcall	_printString
  6337                           
  6338                           ;ai_short.c: 153:     printString("int8_t");
  6339     0774  3029               	movlw	low ((STR_12+1)| (0+32768))
  6340     0775  00F2               	movwf	printString@str
  6341     0776  3088               	movlw	high ((STR_12+1)| (0+32768))
  6342     0777  00F3               	movwf	printString@str+1
  6343     0778  318F  2723  3186   	fcall	_printString
  6344     077B                     l3160:
  6345                           
  6346                           ;ai_short.c: 154:     for(uint8_t i = 0; i < 8; i++){
  6347     077B  0020               	movlb	0	; select bank0
  6348     077C  01D4               	clrf	ai_printAI@i_882
  6349     077D                     l3166:
  6350                           
  6351                           ;ai_short.c: 155:         for(uint8_t j = 0; j < 4; j++){
  6352     077D  01D5               	clrf	ai_printAI@j_883
  6353     077E                     l3172:
  6354                           
  6355                           ;ai_short.c: 156:             print((uint8_t)DC_DW1[i][j]);
  6356     077E  0854               	movf	ai_printAI@i_882,w
  6357     077F  00F8               	movwf	??_ai_printAI
  6358     0780  3002               	movlw	2
  6359     0781                     u2265:
  6360     0781  35F8               	lslf	??_ai_printAI,f
  6361     0782  0B89               	decfsz	9,f
  6362     0783  2F81               	goto	u2265
  6363     0784  3020               	movlw	(low (_DC_DW1| (0+256)))& (0+255)
  6364     0785  0778               	addwf	??_ai_printAI,w
  6365     0786  00F9               	movwf	??_ai_printAI+1
  6366     0787  0855               	movf	ai_printAI@j_883,w
  6367     0788  0779               	addwf	??_ai_printAI+1,w
  6368     0789  00FA               	movwf	??_ai_printAI+2
  6369     078A  087A               	movf	??_ai_printAI+2,w
  6370     078B  0086               	movwf	6
  6371     078C  3001               	movlw	1	; select bank2/3
  6372     078D  0087               	movwf	7
  6373     078E  0801               	movf	1,w
  6374     078F  3180  2037  3186   	fcall	_print
  6375     0792                     l3174:
  6376                           
  6377                           ;ai_short.c: 157:         }
  6378     0792  3001               	movlw	1
  6379     0793  00F8               	movwf	??_ai_printAI
  6380     0794  0878               	movf	??_ai_printAI,w
  6381     0795  0020               	movlb	0	; select bank0
  6382     0796  07D5               	addwf	ai_printAI@j_883,f
  6383     0797                     l3176:
  6384     0797  3004               	movlw	4
  6385     0798  0255               	subwf	ai_printAI@j_883,w
  6386     0799  1C03               	skipc
  6387     079A  2F9C               	goto	u2271
  6388     079B  2F9D               	goto	u2270
  6389     079C                     u2271:
  6390     079C  2F7E               	goto	l3172
  6391     079D                     u2270:
  6392     079D                     l3178:
  6393                           
  6394                           ;ai_short.c: 158:     }
  6395     079D  3001               	movlw	1
  6396     079E  00F8               	movwf	??_ai_printAI
  6397     079F  0878               	movf	??_ai_printAI,w
  6398     07A0  07D4               	addwf	ai_printAI@i_882,f
  6399     07A1                     l3180:
  6400     07A1  3008               	movlw	8
  6401     07A2  0254               	subwf	ai_printAI@i_882,w
  6402     07A3  1C03               	skipc
  6403     07A4  2FA6               	goto	u2281
  6404     07A5  2FA7               	goto	u2280
  6405     07A6                     u2281:
  6406     07A6  2F7D               	goto	l3166
  6407     07A7                     u2280:
  6408     07A7                     l3182:
  6409                           
  6410                           ;ai_short.c: 159:     printString("DS1");
  6411     07A7  3050               	movlw	low (STR_21| (0+32768))
  6412     07A8  00F2               	movwf	printString@str
  6413     07A9  3088               	movlw	high (STR_21| (0+32768))
  6414     07AA  00F3               	movwf	printString@str+1
  6415     07AB  318F  2723  3186   	fcall	_printString
  6416                           
  6417                           ;ai_short.c: 160:     printString("uint8_t");
  6418     07AE  3028               	movlw	low (STR_12| (0+32768))
  6419     07AF  00F2               	movwf	printString@str
  6420     07B0  3088               	movlw	high (STR_12| (0+32768))
  6421     07B1  00F3               	movwf	printString@str+1
  6422     07B2  318F  2723  3186   	fcall	_printString
  6423     07B5                     l3184:
  6424                           
  6425                           ;ai_short.c: 161:     for(uint8_t i = 0; i < 4; i++){
  6426     07B5  0020               	movlb	0	; select bank0
  6427     07B6  01D6               	clrf	ai_printAI@i_886
  6428     07B7                     l3190:
  6429                           
  6430                           ;ai_short.c: 162:         print(de_sigmoid((int)Z1[i]));
  6431     07B7  3556               	lslf	ai_printAI@i_886,w
  6432     07B8  3E20               	addlw	(low (_Z1| 0))& (0+255)
  6433     07B9  0086               	movwf	6
  6434     07BA  0187               	clrf	7
  6435     07BB  3F40               	moviw [0]fsr1
  6436     07BC  00F0               	movwf	de_sigmoid@z
  6437     07BD  3F41               	moviw [1]fsr1
  6438     07BE  00F1               	movwf	de_sigmoid@z+1
  6439     07BF  318F  2775  3186   	fcall	_de_sigmoid
  6440     07C2  3180  2037  3186   	fcall	_print
  6441     07C5                     l3192:
  6442                           
  6443                           ;ai_short.c: 163:     }
  6444     07C5  3001               	movlw	1
  6445     07C6  00F8               	movwf	??_ai_printAI
  6446     07C7  0878               	movf	??_ai_printAI,w
  6447     07C8  0020               	movlb	0	; select bank0
  6448     07C9  07D6               	addwf	ai_printAI@i_886,f
  6449     07CA                     l3194:
  6450     07CA  3004               	movlw	4
  6451     07CB  0256               	subwf	ai_printAI@i_886,w
  6452     07CC  1C03               	skipc
  6453     07CD  2FCF               	goto	u2291
  6454     07CE  2FD0               	goto	u2290
  6455     07CF                     u2291:
  6456     07CF  2FB7               	goto	l3190
  6457     07D0                     u2290:
  6458     07D0                     l586:
  6459     07D0  0008               	return
  6460     07D1                     __end_of_ai_printAI:
  6461                           
  6462                           	psect	text18
  6463     0FD1                     __ptext18:	
  6464 ;; *************** function _sigmoid *****************
  6465 ;; Defined at:
  6466 ;;		line 8 in file "sigmoid.c"
  6467 ;; Parameters:    Size  Location     Type
  6468 ;;  z               2    0[COMMON] int 
  6469 ;; Auto vars:     Size  Location     Type
  6470 ;;		None
  6471 ;; Return value:  Size  Location     Type
  6472 ;;                  1    wreg      unsigned char 
  6473 ;; Registers used:
  6474 ;;		wreg, fsr0l, fsr0h, pclath
  6475 ;; Tracked objects:
  6476 ;;		On entry : 0/0
  6477 ;;		On exit  : 0/0
  6478 ;;		Unchanged: 0/0
  6479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6480 ;;      Params:         2       0       0       0       0       0
  6481 ;;      Locals:         0       0       0       0       0       0
  6482 ;;      Temps:          1       0       0       0       0       0
  6483 ;;      Totals:         3       0       0       0       0       0
  6484 ;;Total ram usage:        3 bytes
  6485 ;; Hardware stack levels used: 1
  6486 ;; This function calls:
  6487 ;;		Nothing
  6488 ;; This function is called by:
  6489 ;;		_ai_run
  6490 ;;		_ai_printAI
  6491 ;; This function uses a non-reentrant model
  6492 ;;
  6493                           
  6494     0FD1                     _sigmoid:	
  6495                           ;psect for function _sigmoid
  6496                           
  6497     0FD1                     l2534:	
  6498                           ;incstack = 0
  6499                           ; Regs used in _sigmoid: [wreg-fsr0h+pclath]
  6500                           
  6501                           
  6502                           ;sigmoid.c: 9:     if(z < -8){
  6503     0FD1  0871               	movf	sigmoid@z+1,w
  6504     0FD2  3A80               	xorlw	128
  6505     0FD3  00F2               	movwf	??_sigmoid
  6506     0FD4  307F               	movlw	127
  6507     0FD5  0272               	subwf	??_sigmoid,w
  6508     0FD6  1D03               	skipz
  6509     0FD7  2FDA               	goto	u1435
  6510     0FD8  30F8               	movlw	248
  6511     0FD9  0270               	subwf	sigmoid@z,w
  6512     0FDA                     u1435:
  6513     0FDA  1803               	skipnc
  6514     0FDB  2FDD               	goto	u1431
  6515     0FDC  2FDE               	goto	u1430
  6516     0FDD                     u1431:
  6517     0FDD  2FE0               	goto	l2540
  6518     0FDE                     u1430:
  6519     0FDE                     l2536:
  6520                           
  6521                           ;sigmoid.c: 10:         return 16;
  6522     0FDE  3010               	movlw	16
  6523     0FDF  2FFF               	goto	l594
  6524     0FE0                     l2540:
  6525                           
  6526                           ;sigmoid.c: 12:     if(z > 7){
  6527     0FE0  0871               	movf	sigmoid@z+1,w
  6528     0FE1  3A80               	xorlw	128
  6529     0FE2  00F2               	movwf	??_sigmoid
  6530     0FE3  3080               	movlw	128
  6531     0FE4  0272               	subwf	??_sigmoid,w
  6532     0FE5  1D03               	skipz
  6533     0FE6  2FE9               	goto	u1445
  6534     0FE7  3008               	movlw	8
  6535     0FE8  0270               	subwf	sigmoid@z,w
  6536     0FE9                     u1445:
  6537     0FE9  1C03               	skipc
  6538     0FEA  2FEC               	goto	u1441
  6539     0FEB  2FED               	goto	u1440
  6540     0FEC                     u1441:
  6541     0FEC  2FEF               	goto	l595
  6542     0FED                     u1440:
  6543     0FED                     l2542:
  6544                           
  6545                           ;sigmoid.c: 13:         return 255;
  6546     0FED  30FF               	movlw	255
  6547     0FEE  2FFF               	goto	l594
  6548     0FEF                     l595:	
  6549                           ;sigmoid.c: 14:     }
  6550                           
  6551                           
  6552                           ;sigmoid.c: 15:     if(z < 0){
  6553     0FEF  1FF1               	btfss	sigmoid@z+1,7
  6554     0FF0  2FF2               	goto	u1451
  6555     0FF1  2FF3               	goto	u1450
  6556     0FF2                     u1451:
  6557     0FF2  2FF7               	goto	l2548
  6558     0FF3                     u1450:
  6559     0FF3                     l2546:
  6560                           
  6561                           ;sigmoid.c: 16:         z += 16;
  6562     0FF3  3010               	movlw	16
  6563     0FF4  07F0               	addwf	sigmoid@z,f
  6564     0FF5  3000               	movlw	0
  6565     0FF6  3DF1               	addwfc	sigmoid@z+1,f
  6566     0FF7                     l2548:
  6567                           
  6568                           ;sigmoid.c: 18:     return sigmoidValues[(uint8_t)z];
  6569     0FF7  0870               	movf	sigmoid@z,w
  6570     0FF8  3E10               	addlw	low (_sigmoidValues| (0+32768))
  6571     0FF9  0084               	movwf	4
  6572     0FFA  3088               	movlw	high (_sigmoidValues| (0+32768))
  6573     0FFB  1803               	skipnc
  6574     0FFC  3E01               	addlw	1
  6575     0FFD  0085               	movwf	5
  6576     0FFE  0800               	movf	0,w	;code access
  6577     0FFF                     l594:
  6578     0FFF  0008               	return
  6579     1000                     __end_of_sigmoid:
  6580                           
  6581                           	psect	text19
  6582     0F23                     __ptext19:	
  6583 ;; *************** function _printString *****************
  6584 ;; Defined at:
  6585 ;;		line 42 in file "serialCommunication.c"
  6586 ;; Parameters:    Size  Location     Type
  6587 ;;  str             2    2[COMMON] PTR const unsigned char 
  6588 ;;		 -> STR_22(8), STR_21(4), STR_20(7), STR_19(7), 
  6589 ;;		 -> STR_18(7), STR_17(7), STR_16(7), STR_15(7), 
  6590 ;;		 -> STR_14(7), STR_13(7), STR_12(8), STR_11(3), 
  6591 ;;		 -> STR_10(7), STR_9(3), STR_8(7), STR_7(3), 
  6592 ;;		 -> STR_6(8), STR_5(3), STR_4(7), STR_3(3), 
  6593 ;;		 -> STR_2(7), STR_1(3), 
  6594 ;; Auto vars:     Size  Location     Type
  6595 ;;  i               1    7[COMMON] unsigned char 
  6596 ;; Return value:  Size  Location     Type
  6597 ;;                  1    wreg      void 
  6598 ;; Registers used:
  6599 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6600 ;; Tracked objects:
  6601 ;;		On entry : 0/0
  6602 ;;		On exit  : 0/0
  6603 ;;		Unchanged: 0/0
  6604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6605 ;;      Params:         2       0       0       0       0       0
  6606 ;;      Locals:         1       0       0       0       0       0
  6607 ;;      Temps:          3       0       0       0       0       0
  6608 ;;      Totals:         6       0       0       0       0       0
  6609 ;;Total ram usage:        6 bytes
  6610 ;; Hardware stack levels used: 1
  6611 ;; Hardware stack levels required when called: 2
  6612 ;; This function calls:
  6613 ;;		_print
  6614 ;; This function is called by:
  6615 ;;		_ai_printAI
  6616 ;; This function uses a non-reentrant model
  6617 ;;
  6618                           
  6619     0F23                     _printString:	
  6620                           ;psect for function _printString
  6621                           
  6622     0F23                     l2526:	
  6623                           ;incstack = 0
  6624                           ; Regs used in _printString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6625                           
  6626                           
  6627                           ;serialCommunication.c: 43:     for(uint8_t i = 0; str[i]!='\0'; i++){
  6628     0F23  01F7               	clrf	printString@i
  6629     0F24  2F38               	goto	l2532
  6630     0F25                     l2528:
  6631                           
  6632                           ;serialCommunication.c: 44:         print((uint8_t)str[i]);
  6633     0F25  0873               	movf	printString@str+1,w
  6634     0F26  00F5               	movwf	??_printString+1
  6635     0F27  0872               	movf	printString@str,w
  6636     0F28  00F4               	movwf	??_printString
  6637     0F29  0877               	movf	printString@i,w
  6638     0F2A  0774               	addwf	??_printString,w
  6639     0F2B  0084               	movwf	4
  6640     0F2C  0875               	movf	??_printString+1,w
  6641     0F2D  1803               	skipnc
  6642     0F2E  0A75               	incf	??_printString+1,w
  6643     0F2F  0085               	movwf	5
  6644     0F30  0800               	movf	0,w	;code access
  6645     0F31  3180  2037  318F   	fcall	_print
  6646     0F34                     l2530:
  6647                           
  6648                           ;serialCommunication.c: 45:     }
  6649     0F34  3001               	movlw	1
  6650     0F35  00F4               	movwf	??_printString
  6651     0F36  0874               	movf	??_printString,w
  6652     0F37  07F7               	addwf	printString@i,f
  6653     0F38                     l2532:
  6654     0F38  0873               	movf	printString@str+1,w
  6655     0F39  00F5               	movwf	??_printString+1
  6656     0F3A  0872               	movf	printString@str,w
  6657     0F3B  00F4               	movwf	??_printString
  6658     0F3C  0877               	movf	printString@i,w
  6659     0F3D  0774               	addwf	??_printString,w
  6660     0F3E  0084               	movwf	4
  6661     0F3F  0875               	movf	??_printString+1,w
  6662     0F40  1803               	skipnc
  6663     0F41  0A75               	incf	??_printString+1,w
  6664     0F42  0085               	movwf	5
  6665     0F43  0012               	moviw fsr0++
  6666     0F44  1D03               	btfss	3,2
  6667     0F45  2F47               	goto	u1421
  6668     0F46  2F48               	goto	u1420
  6669     0F47                     u1421:
  6670     0F47  2F25               	goto	l2528
  6671     0F48                     u1420:
  6672     0F48                     l473:
  6673     0F48  0008               	return
  6674     0F49                     __end_of_printString:
  6675                           
  6676                           	psect	text20
  6677     0E50                     __ptext20:	
  6678 ;; *************** function _printInteger *****************
  6679 ;; Defined at:
  6680 ;;		line 26 in file "serialCommunication.c"
  6681 ;; Parameters:    Size  Location     Type
  6682 ;;  i               2    2[COMMON] int 
  6683 ;; Auto vars:     Size  Location     Type
  6684 ;;		None
  6685 ;; Return value:  Size  Location     Type
  6686 ;;                  1    wreg      void 
  6687 ;; Registers used:
  6688 ;;		wreg, status,2, status,0, pclath, cstack
  6689 ;; Tracked objects:
  6690 ;;		On entry : 0/0
  6691 ;;		On exit  : 0/0
  6692 ;;		Unchanged: 0/0
  6693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6694 ;;      Params:         2       0       0       0       0       0
  6695 ;;      Locals:         0       0       0       0       0       0
  6696 ;;      Temps:          0       0       0       0       0       0
  6697 ;;      Totals:         2       0       0       0       0       0
  6698 ;;Total ram usage:        2 bytes
  6699 ;; Hardware stack levels used: 1
  6700 ;; Hardware stack levels required when called: 2
  6701 ;; This function calls:
  6702 ;;		_print
  6703 ;; This function is called by:
  6704 ;;		_ai_printAI
  6705 ;; This function uses a non-reentrant model
  6706 ;;
  6707                           
  6708     0E50                     _printInteger:	
  6709                           ;psect for function _printInteger
  6710                           
  6711     0E50                     l2524:	
  6712                           ;incstack = 0
  6713                           ; Regs used in _printInteger: [wreg+status,2+status,0+pclath+cstack]
  6714                           
  6715                           
  6716                           ;serialCommunication.c: 27:     print((uint8_t)i);
  6717     0E50  0872               	movf	printInteger@i,w
  6718     0E51  3180  2037  318E   	fcall	_print
  6719                           
  6720                           ;serialCommunication.c: 28:     print((uint8_t)(i>>8));
  6721     0E54  0873               	movf	printInteger@i+1,w
  6722     0E55  3180  2037  318E   	fcall	_print
  6723     0E58                     l462:
  6724     0E58  0008               	return
  6725     0E59                     __end_of_printInteger:
  6726                           
  6727                           	psect	text21
  6728     0037                     __ptext21:	
  6729 ;; *************** function _print *****************
  6730 ;; Defined at:
  6731 ;;		line 11 in file "serialCommunication.c"
  6732 ;; Parameters:    Size  Location     Type
  6733 ;;  b               1    wreg     unsigned char 
  6734 ;; Auto vars:     Size  Location     Type
  6735 ;;  b               1    1[COMMON] unsigned char 
  6736 ;; Return value:  Size  Location     Type
  6737 ;;                  1    wreg      void 
  6738 ;; Registers used:
  6739 ;;		wreg, status,2, status,0, pclath, cstack
  6740 ;; Tracked objects:
  6741 ;;		On entry : 0/0
  6742 ;;		On exit  : 0/0
  6743 ;;		Unchanged: 0/0
  6744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6745 ;;      Params:         0       0       0       0       0       0
  6746 ;;      Locals:         1       0       0       0       0       0
  6747 ;;      Temps:          0       0       0       0       0       0
  6748 ;;      Totals:         1       0       0       0       0       0
  6749 ;;Total ram usage:        1 bytes
  6750 ;; Hardware stack levels used: 1
  6751 ;; Hardware stack levels required when called: 1
  6752 ;; This function calls:
  6753 ;;		_EUSART_Write
  6754 ;; This function is called by:
  6755 ;;		_printInteger
  6756 ;;		_printString
  6757 ;;		_ai_printAI
  6758 ;;		_printFloat
  6759 ;; This function uses a non-reentrant model
  6760 ;;
  6761                           
  6762     0037                     _print:	
  6763                           ;psect for function _print
  6764                           
  6765                           
  6766                           ;incstack = 0
  6767                           ; Regs used in _print: [wreg+status,2+status,0+pclath+cstack]
  6768                           ;print@b stored from wreg
  6769     0037  00F1               	movwf	print@b
  6770     0038                     l2442:
  6771                           
  6772                           ;serialCommunication.c: 12:     if(b == 0x0Fu){
  6773     0038  300F               	movlw	15
  6774     0039  0671               	xorwf	print@b,w
  6775     003A  1D03               	btfss	3,2
  6776     003B  283D               	goto	u1361
  6777     003C  283E               	goto	u1360
  6778     003D                     u1361:
  6779     003D  2847               	goto	l2446
  6780     003E                     u1360:
  6781     003E                     l2444:
  6782                           
  6783                           ;serialCommunication.c: 13:         EUSART_Write(0xF1u);
  6784     003E  30F1               	movlw	241
  6785     003F  318E  2659  3180   	fcall	_EUSART_Write
  6786                           
  6787                           ;serialCommunication.c: 14:         EUSART_Write(0x1Fu);
  6788     0042  301F               	movlw	31
  6789     0043  318E  2659  3180   	fcall	_EUSART_Write
  6790                           
  6791                           ;serialCommunication.c: 15:     } else if(b == 0x0Au){
  6792     0046  2869               	goto	l459
  6793     0047                     l2446:
  6794     0047  300A               	movlw	10
  6795     0048  0671               	xorwf	print@b,w
  6796     0049  1D03               	btfss	3,2
  6797     004A  284C               	goto	u1371
  6798     004B  284D               	goto	u1370
  6799     004C                     u1371:
  6800     004C  2856               	goto	l2450
  6801     004D                     u1370:
  6802     004D                     l2448:
  6803                           
  6804                           ;serialCommunication.c: 16:         EUSART_Write(0xF1u);
  6805     004D  30F1               	movlw	241
  6806     004E  318E  2659  3180   	fcall	_EUSART_Write
  6807                           
  6808                           ;serialCommunication.c: 17:         EUSART_Write(0x1Au);
  6809     0051  301A               	movlw	26
  6810     0052  318E  2659  3180   	fcall	_EUSART_Write
  6811                           
  6812                           ;serialCommunication.c: 18:     } else if(b == 0xF1u){
  6813     0055  2869               	goto	l459
  6814     0056                     l2450:
  6815     0056  30F1               	movlw	241
  6816     0057  0671               	xorwf	print@b,w
  6817     0058  1D03               	btfss	3,2
  6818     0059  285B               	goto	u1381
  6819     005A  285C               	goto	u1380
  6820     005B                     u1381:
  6821     005B  2865               	goto	l2454
  6822     005C                     u1380:
  6823     005C                     l2452:
  6824                           
  6825                           ;serialCommunication.c: 19:         EUSART_Write(0xF1u);
  6826     005C  30F1               	movlw	241
  6827     005D  318E  2659  3180   	fcall	_EUSART_Write
  6828                           
  6829                           ;serialCommunication.c: 20:         EUSART_Write(0xF1u);
  6830     0060  30F1               	movlw	241
  6831     0061  318E  2659  3180   	fcall	_EUSART_Write
  6832                           
  6833                           ;serialCommunication.c: 21:     } else{
  6834     0064  2869               	goto	l459
  6835     0065                     l2454:
  6836                           
  6837                           ;serialCommunication.c: 22:         EUSART_Write(b);
  6838     0065  0871               	movf	print@b,w
  6839     0066  318E  2659  3180   	fcall	_EUSART_Write
  6840     0069                     l459:
  6841     0069  0008               	return
  6842     006A                     __end_of_print:
  6843                           
  6844                           	psect	text22
  6845     0E59                     __ptext22:	
  6846 ;; *************** function _EUSART_Write *****************
  6847 ;; Defined at:
  6848 ;;		line 132 in file "mcc_generated_files/eusart.c"
  6849 ;; Parameters:    Size  Location     Type
  6850 ;;  txData          1    wreg     unsigned char 
  6851 ;; Auto vars:     Size  Location     Type
  6852 ;;  txData          1    0[COMMON] unsigned char 
  6853 ;; Return value:  Size  Location     Type
  6854 ;;                  1    wreg      void 
  6855 ;; Registers used:
  6856 ;;		wreg
  6857 ;; Tracked objects:
  6858 ;;		On entry : 0/0
  6859 ;;		On exit  : 0/0
  6860 ;;		Unchanged: 0/0
  6861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6862 ;;      Params:         0       0       0       0       0       0
  6863 ;;      Locals:         1       0       0       0       0       0
  6864 ;;      Temps:          0       0       0       0       0       0
  6865 ;;      Totals:         1       0       0       0       0       0
  6866 ;;Total ram usage:        1 bytes
  6867 ;; Hardware stack levels used: 1
  6868 ;; This function calls:
  6869 ;;		Nothing
  6870 ;; This function is called by:
  6871 ;;		_print
  6872 ;;		_startMessage
  6873 ;;		_endMessage
  6874 ;; This function uses a non-reentrant model
  6875 ;;
  6876                           
  6877     0E59                     _EUSART_Write:	
  6878                           ;psect for function _EUSART_Write
  6879                           
  6880                           
  6881                           ;incstack = 0
  6882                           ; Regs used in _EUSART_Write: [wreg]
  6883                           ;EUSART_Write@txData stored from wreg
  6884     0E59  00F0               	movwf	EUSART_Write@txData
  6885     0E5A                     l2410:
  6886     0E5A                     l117:	
  6887                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
  6888                           
  6889                           
  6890                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TXIF)
  6891     0E5A  0020               	movlb	0	; select bank0
  6892     0E5B  1E11               	btfss	17,4	;volatile
  6893     0E5C  2E5E               	goto	u1301
  6894     0E5D  2E5F               	goto	u1300
  6895     0E5E                     u1301:
  6896     0E5E  2E5A               	goto	l117
  6897     0E5F                     u1300:
  6898     0E5F                     l2412:
  6899                           
  6900                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
  6901     0E5F  0870               	movf	EUSART_Write@txData,w
  6902     0E60  0023               	movlb	3	; select bank3
  6903     0E61  009A               	movwf	26	;volatile
  6904     0E62                     l120:
  6905     0E62  0008               	return
  6906     0E63                     __end_of_EUSART_Write:
  6907                           
  6908                           	psect	text23
  6909     0F75                     __ptext23:	
  6910 ;; *************** function _de_sigmoid *****************
  6911 ;; Defined at:
  6912 ;;		line 21 in file "sigmoid.c"
  6913 ;; Parameters:    Size  Location     Type
  6914 ;;  z               2    0[COMMON] int 
  6915 ;; Auto vars:     Size  Location     Type
  6916 ;;		None
  6917 ;; Return value:  Size  Location     Type
  6918 ;;                  1    wreg      unsigned char 
  6919 ;; Registers used:
  6920 ;;		wreg, fsr0l, fsr0h, pclath
  6921 ;; Tracked objects:
  6922 ;;		On entry : 0/0
  6923 ;;		On exit  : 0/0
  6924 ;;		Unchanged: 0/0
  6925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6926 ;;      Params:         2       0       0       0       0       0
  6927 ;;      Locals:         0       0       0       0       0       0
  6928 ;;      Temps:          1       0       0       0       0       0
  6929 ;;      Totals:         3       0       0       0       0       0
  6930 ;;Total ram usage:        3 bytes
  6931 ;; Hardware stack levels used: 1
  6932 ;; This function calls:
  6933 ;;		Nothing
  6934 ;; This function is called by:
  6935 ;;		_ai_propagate
  6936 ;;		_ai_printAI
  6937 ;; This function uses a non-reentrant model
  6938 ;;
  6939                           
  6940     0F75                     _de_sigmoid:	
  6941                           ;psect for function _de_sigmoid
  6942                           
  6943     0F75                     l2552:	
  6944                           ;incstack = 0
  6945                           ; Regs used in _de_sigmoid: [wreg-fsr0h+pclath]
  6946                           
  6947                           
  6948                           ;sigmoid.c: 22:     if(z < -8){
  6949     0F75  0871               	movf	de_sigmoid@z+1,w
  6950     0F76  3A80               	xorlw	128
  6951     0F77  00F2               	movwf	??_de_sigmoid
  6952     0F78  307F               	movlw	127
  6953     0F79  0272               	subwf	??_de_sigmoid,w
  6954     0F7A  1D03               	skipz
  6955     0F7B  2F7E               	goto	u1465
  6956     0F7C  30F8               	movlw	248
  6957     0F7D  0270               	subwf	de_sigmoid@z,w
  6958     0F7E                     u1465:
  6959     0F7E  1803               	skipnc
  6960     0F7F  2F81               	goto	u1461
  6961     0F80  2F82               	goto	u1460
  6962     0F81                     u1461:
  6963     0F81  2F84               	goto	l2558
  6964     0F82                     u1460:
  6965     0F82                     l2554:
  6966                           
  6967                           ;sigmoid.c: 23:         return 16u;
  6968     0F82  3010               	movlw	16
  6969     0F83  2FA2               	goto	l600
  6970     0F84                     l2558:
  6971                           
  6972                           ;sigmoid.c: 25:     if(z > 7){
  6973     0F84  0871               	movf	de_sigmoid@z+1,w
  6974     0F85  3A80               	xorlw	128
  6975     0F86  00F2               	movwf	??_de_sigmoid
  6976     0F87  3080               	movlw	128
  6977     0F88  0272               	subwf	??_de_sigmoid,w
  6978     0F89  1D03               	skipz
  6979     0F8A  2F8D               	goto	u1475
  6980     0F8B  3008               	movlw	8
  6981     0F8C  0270               	subwf	de_sigmoid@z,w
  6982     0F8D                     u1475:
  6983     0F8D  1C03               	skipc
  6984     0F8E  2F90               	goto	u1471
  6985     0F8F  2F91               	goto	u1470
  6986     0F90                     u1471:
  6987     0F90  2F92               	goto	l601
  6988     0F91                     u1470:
  6989     0F91  2F82               	goto	l2554
  6990     0F92                     l601:	
  6991                           ;sigmoid.c: 27:     }
  6992                           
  6993                           
  6994                           ;sigmoid.c: 28:     if(z < 0){
  6995     0F92  1FF1               	btfss	de_sigmoid@z+1,7
  6996     0F93  2F95               	goto	u1481
  6997     0F94  2F96               	goto	u1480
  6998     0F95                     u1481:
  6999     0F95  2F9A               	goto	l2566
  7000     0F96                     u1480:
  7001     0F96                     l2564:
  7002                           
  7003                           ;sigmoid.c: 29:         z += 16;
  7004     0F96  3010               	movlw	16
  7005     0F97  07F0               	addwf	de_sigmoid@z,f
  7006     0F98  3000               	movlw	0
  7007     0F99  3DF1               	addwfc	de_sigmoid@z+1,f
  7008     0F9A                     l2566:
  7009                           
  7010                           ;sigmoid.c: 31:     return de_sigmoidValues[(uint8_t)z];
  7011     0F9A  0870               	movf	de_sigmoid@z,w
  7012     0F9B  3E00               	addlw	low (_de_sigmoidValues| (0+32768))
  7013     0F9C  0084               	movwf	4
  7014     0F9D  3088               	movlw	high (_de_sigmoidValues| (0+32768))
  7015     0F9E  1803               	skipnc
  7016     0F9F  3E01               	addlw	1
  7017     0FA0  0085               	movwf	5
  7018     0FA1  0800               	movf	0,w	;code access
  7019     0FA2                     l600:
  7020     0FA2  0008               	return
  7021     0FA3                     __end_of_de_sigmoid:
  7022                           
  7023                           	psect	text24
  7024     009F                     __ptext24:	
  7025 ;; *************** function _ai_initiate *****************
  7026 ;; Defined at:
  7027 ;;		line 24 in file "ai_short.c"
  7028 ;; Parameters:    Size  Location     Type
  7029 ;;		None
  7030 ;; Auto vars:     Size  Location     Type
  7031 ;;  i               1    7[BANK0 ] unsigned char 
  7032 ;;  j               1    8[BANK0 ] unsigned char 
  7033 ;; Return value:  Size  Location     Type
  7034 ;;                  1    wreg      void 
  7035 ;; Registers used:
  7036 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7037 ;; Tracked objects:
  7038 ;;		On entry : 0/0
  7039 ;;		On exit  : 0/0
  7040 ;;		Unchanged: 0/0
  7041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7042 ;;      Params:         0       0       0       0       0       0
  7043 ;;      Locals:         0       2       0       0       0       0
  7044 ;;      Temps:          0       3       0       0       0       0
  7045 ;;      Totals:         0       5       0       0       0       0
  7046 ;;Total ram usage:        5 bytes
  7047 ;; Hardware stack levels used: 1
  7048 ;; Hardware stack levels required when called: 2
  7049 ;; This function calls:
  7050 ;;		_rand
  7051 ;; This function is called by:
  7052 ;;		_main
  7053 ;; This function uses a non-reentrant model
  7054 ;;
  7055                           
  7056     009F                     _ai_initiate:	
  7057                           ;psect for function _ai_initiate
  7058                           
  7059     009F                     l2632:	
  7060                           ;incstack = 0
  7061                           ; Regs used in _ai_initiate: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7062                           
  7063                           
  7064                           ;ai_short.c: 25:     for(uint8_t j = 0; j < 4; j++){
  7065     009F  0020               	movlb	0	; select bank0
  7066     00A0  01D2               	clrf	ai_initiate@j
  7067     00A1                     l2638:
  7068                           
  7069                           ;ai_short.c: 26:         B1[j] = (rand()%32)-16;
  7070     00A1  0852               	movf	ai_initiate@j,w
  7071     00A2  3E38               	addlw	(low (_B1| 0))& (0+255)
  7072     00A3  0086               	movwf	6
  7073     00A4  0187               	clrf	7
  7074     00A5  3180  206A  3180   	fcall	_rand
  7075     00A8  087C               	movf	?_rand,w
  7076     00A9  391F               	andlw	31
  7077     00AA  3EF0               	addlw	-16
  7078     00AB  0081               	movwf	1
  7079     00AC                     l2640:
  7080                           
  7081                           ;ai_short.c: 27:         for(uint8_t i = 0; i < 8; i++){
  7082     00AC  0020               	movlb	0	; select bank0
  7083     00AD  01D1               	clrf	ai_initiate@i
  7084     00AE                     l2646:
  7085                           
  7086                           ;ai_short.c: 28:             W1[i][j] = (rand()%32)-16;
  7087     00AE  0851               	movf	ai_initiate@i,w
  7088     00AF  00CE               	movwf	??_ai_initiate
  7089     00B0  3002               	movlw	2
  7090     00B1                     u1635:
  7091     00B1  35CE               	lslf	??_ai_initiate,f
  7092     00B2  0B89               	decfsz	9,f
  7093     00B3  28B1               	goto	u1635
  7094     00B4  30A0               	movlw	(low (_W1| 0))& (0+255)
  7095     00B5  074E               	addwf	??_ai_initiate,w
  7096     00B6  00CF               	movwf	??_ai_initiate+1
  7097     00B7  0852               	movf	ai_initiate@j,w
  7098     00B8  074F               	addwf	??_ai_initiate+1,w
  7099     00B9  00D0               	movwf	??_ai_initiate+2
  7100     00BA  0850               	movf	??_ai_initiate+2,w
  7101     00BB  0086               	movwf	6
  7102     00BC  0187               	clrf	7
  7103     00BD  3180  206A  3180   	fcall	_rand
  7104     00C0  087C               	movf	?_rand,w
  7105     00C1  391F               	andlw	31
  7106     00C2  3EF0               	addlw	-16
  7107     00C3  0081               	movwf	1
  7108     00C4                     l2648:
  7109                           
  7110                           ;ai_short.c: 29:         }
  7111     00C4  3001               	movlw	1
  7112     00C5  0020               	movlb	0	; select bank0
  7113     00C6  00CE               	movwf	??_ai_initiate
  7114     00C7  084E               	movf	??_ai_initiate,w
  7115     00C8  07D1               	addwf	ai_initiate@i,f
  7116     00C9                     l2650:
  7117     00C9  3008               	movlw	8
  7118     00CA  0251               	subwf	ai_initiate@i,w
  7119     00CB  1C03               	skipc
  7120     00CC  28CE               	goto	u1641
  7121     00CD  28CF               	goto	u1640
  7122     00CE                     u1641:
  7123     00CE  28AE               	goto	l2646
  7124     00CF                     u1640:
  7125     00CF                     l2652:
  7126                           
  7127                           ;ai_short.c: 30:     }
  7128     00CF  3001               	movlw	1
  7129     00D0  00CE               	movwf	??_ai_initiate
  7130     00D1  084E               	movf	??_ai_initiate,w
  7131     00D2  07D2               	addwf	ai_initiate@j,f
  7132     00D3                     l2654:
  7133     00D3  3004               	movlw	4
  7134     00D4  0252               	subwf	ai_initiate@j,w
  7135     00D5  1C03               	skipc
  7136     00D6  28D8               	goto	u1651
  7137     00D7  28D9               	goto	u1650
  7138     00D8                     u1651:
  7139     00D8  28A1               	goto	l2638
  7140     00D9                     u1650:
  7141     00D9                     l520:
  7142     00D9  0008               	return
  7143     00DA                     __end_of_ai_initiate:
  7144                           
  7145                           	psect	text25
  7146     006A                     __ptext25:	
  7147 ;; *************** function _rand *****************
  7148 ;; Defined at:
  7149 ;;		line 11 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\common\rand.c"
  7150 ;; Parameters:    Size  Location     Type
  7151 ;;		None
  7152 ;; Auto vars:     Size  Location     Type
  7153 ;;		None
  7154 ;; Return value:  Size  Location     Type
  7155 ;;                  2   12[COMMON] int 
  7156 ;; Registers used:
  7157 ;;		wreg, status,2, status,0, pclath, cstack
  7158 ;; Tracked objects:
  7159 ;;		On entry : 0/0
  7160 ;;		On exit  : 0/0
  7161 ;;		Unchanged: 0/0
  7162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7163 ;;      Params:         2       0       0       0       0       0
  7164 ;;      Locals:         0       0       0       0       0       0
  7165 ;;      Temps:          0       4       0       0       0       0
  7166 ;;      Totals:         2       4       0       0       0       0
  7167 ;;Total ram usage:        6 bytes
  7168 ;; Hardware stack levels used: 1
  7169 ;; Hardware stack levels required when called: 1
  7170 ;; This function calls:
  7171 ;;		___lmul
  7172 ;; This function is called by:
  7173 ;;		_snake_initiate
  7174 ;;		_snake_move
  7175 ;;		_ai_initiate
  7176 ;; This function uses a non-reentrant model
  7177 ;;
  7178                           
  7179     006A                     _rand:	
  7180                           ;psect for function _rand
  7181                           
  7182     006A                     l2436:	
  7183                           ;incstack = 0
  7184                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
  7185                           
  7186     006A  0020               	movlb	0	; select bank0
  7187     006B  0845               	movf	_seed+3,w
  7188     006C  00F3               	movwf	___lmul@multiplier+3
  7189     006D  0844               	movf	_seed+2,w
  7190     006E  00F2               	movwf	___lmul@multiplier+2
  7191     006F  0843               	movf	_seed+1,w
  7192     0070  00F1               	movwf	___lmul@multiplier+1
  7193     0071  0842               	movf	_seed,w
  7194     0072  00F0               	movwf	___lmul@multiplier
  7195     0073  304C               	movlw	76
  7196     0074  00F7               	movwf	___lmul@multiplicand+3
  7197     0075  3095               	movlw	149
  7198     0076  00F6               	movwf	___lmul@multiplicand+2
  7199     0077  307F               	movlw	127
  7200     0078  00F5               	movwf	___lmul@multiplicand+1
  7201     0079  302D               	movlw	45
  7202     007A  00F4               	movwf	___lmul@multiplicand
  7203     007B  3180  2004  3180   	fcall	___lmul
  7204     007E  3001               	movlw	1
  7205     007F  0770               	addwf	?___lmul,w
  7206     0080  0020               	movlb	0	; select bank0
  7207     0081  00C2               	movwf	_seed
  7208     0082  3000               	movlw	0
  7209     0083  3D71               	addwfc	?___lmul+1,w
  7210     0084  00C3               	movwf	_seed+1
  7211     0085  3000               	movlw	0
  7212     0086  3D72               	addwfc	?___lmul+2,w
  7213     0087  00C4               	movwf	_seed+2
  7214     0088  3000               	movlw	0
  7215     0089  3D73               	addwfc	?___lmul+3,w
  7216     008A  00C5               	movwf	_seed+3
  7217     008B                     l2438:
  7218     008B  0842               	movf	_seed,w
  7219     008C  00CA               	movwf	??_rand
  7220     008D  0843               	movf	_seed+1,w
  7221     008E  00CB               	movwf	??_rand+1
  7222     008F  0844               	movf	_seed+2,w
  7223     0090  00CC               	movwf	??_rand+2
  7224     0091  0845               	movf	_seed+3,w
  7225     0092  00CD               	movwf	??_rand+3
  7226     0093  3011               	movlw	17
  7227     0094                     u1355:
  7228     0094  36CD               	lsrf	??_rand+3,f
  7229     0095  0CCC               	rrf	??_rand+2,f
  7230     0096  0CCB               	rrf	??_rand+1,f
  7231     0097  0CCA               	rrf	??_rand,f
  7232     0098                     u1350:
  7233     0098  0B89               	decfsz	9,f
  7234     0099  2894               	goto	u1355
  7235     009A  084B               	movf	??_rand+1,w
  7236     009B  00FD               	movwf	?_rand+1
  7237     009C  084A               	movf	??_rand,w
  7238     009D  00FC               	movwf	?_rand
  7239     009E                     l1216:
  7240     009E  0008               	return
  7241     009F                     __end_of_rand:
  7242                           
  7243                           	psect	text26
  7244     0004                     __ptext26:	
  7245 ;; *************** function ___lmul *****************
  7246 ;; Defined at:
  7247 ;;		line 15 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\common\Umul32.c"
  7248 ;; Parameters:    Size  Location     Type
  7249 ;;  multiplier      4    0[COMMON] unsigned long 
  7250 ;;  multiplicand    4    4[COMMON] unsigned long 
  7251 ;; Auto vars:     Size  Location     Type
  7252 ;;  product         4    8[COMMON] unsigned long 
  7253 ;; Return value:  Size  Location     Type
  7254 ;;                  4    0[COMMON] unsigned long 
  7255 ;; Registers used:
  7256 ;;		wreg, status,2, status,0
  7257 ;; Tracked objects:
  7258 ;;		On entry : 0/0
  7259 ;;		On exit  : 0/0
  7260 ;;		Unchanged: 0/0
  7261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7262 ;;      Params:         8       0       0       0       0       0
  7263 ;;      Locals:         4       0       0       0       0       0
  7264 ;;      Temps:          0       0       0       0       0       0
  7265 ;;      Totals:        12       0       0       0       0       0
  7266 ;;Total ram usage:       12 bytes
  7267 ;; Hardware stack levels used: 1
  7268 ;; This function calls:
  7269 ;;		Nothing
  7270 ;; This function is called by:
  7271 ;;		_rand
  7272 ;; This function uses a non-reentrant model
  7273 ;;
  7274                           
  7275     0004                     ___lmul:	
  7276                           ;psect for function ___lmul
  7277                           
  7278     0004                     l2414:	
  7279                           ;incstack = 0
  7280                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  7281                           
  7282     0004  3000               	movlw	0
  7283     0005  00FB               	movwf	___lmul@product+3
  7284     0006  3000               	movlw	0
  7285     0007  00FA               	movwf	___lmul@product+2
  7286     0008  3000               	movlw	0
  7287     0009  00F9               	movwf	___lmul@product+1
  7288     000A  3000               	movlw	0
  7289     000B  00F8               	movwf	___lmul@product
  7290     000C                     l2416:
  7291     000C  1C70               	btfss	___lmul@multiplier,0
  7292     000D  280F               	goto	u1311
  7293     000E  2810               	goto	u1310
  7294     000F                     u1311:
  7295     000F  2818               	goto	l2420
  7296     0010                     u1310:
  7297     0010                     l2418:
  7298     0010  0874               	movf	___lmul@multiplicand,w
  7299     0011  07F8               	addwf	___lmul@product,f
  7300     0012  0875               	movf	___lmul@multiplicand+1,w
  7301     0013  3DF9               	addwfc	___lmul@product+1,f
  7302     0014  0876               	movf	___lmul@multiplicand+2,w
  7303     0015  3DFA               	addwfc	___lmul@product+2,f
  7304     0016  0877               	movf	___lmul@multiplicand+3,w
  7305     0017  3DFB               	addwfc	___lmul@product+3,f
  7306     0018                     l2420:
  7307     0018  3001               	movlw	1
  7308     0019                     u1325:
  7309     0019  35F4               	lslf	___lmul@multiplicand,f
  7310     001A  0DF5               	rlf	___lmul@multiplicand+1,f
  7311     001B  0DF6               	rlf	___lmul@multiplicand+2,f
  7312     001C  0DF7               	rlf	___lmul@multiplicand+3,f
  7313     001D  0B89               	decfsz	9,f
  7314     001E  2819               	goto	u1325
  7315     001F                     l2422:
  7316     001F  3001               	movlw	1
  7317     0020                     u1335:
  7318     0020  36F3               	lsrf	___lmul@multiplier+3,f
  7319     0021  0CF2               	rrf	___lmul@multiplier+2,f
  7320     0022  0CF1               	rrf	___lmul@multiplier+1,f
  7321     0023  0CF0               	rrf	___lmul@multiplier,f
  7322     0024  0B89               	decfsz	9,f
  7323     0025  2820               	goto	u1335
  7324     0026  0873               	movf	___lmul@multiplier+3,w
  7325     0027  0472               	iorwf	___lmul@multiplier+2,w
  7326     0028  0471               	iorwf	___lmul@multiplier+1,w
  7327     0029  0470               	iorwf	___lmul@multiplier,w
  7328     002A  1D03               	skipz
  7329     002B  282D               	goto	u1341
  7330     002C  282E               	goto	u1340
  7331     002D                     u1341:
  7332     002D  280C               	goto	l2416
  7333     002E                     u1340:
  7334     002E                     l2424:
  7335     002E  087B               	movf	___lmul@product+3,w
  7336     002F  00F3               	movwf	?___lmul+3
  7337     0030  087A               	movf	___lmul@product+2,w
  7338     0031  00F2               	movwf	?___lmul+2
  7339     0032  0879               	movf	___lmul@product+1,w
  7340     0033  00F1               	movwf	?___lmul+1
  7341     0034  0878               	movf	___lmul@product,w
  7342     0035  00F0               	movwf	?___lmul
  7343     0036                     l766:
  7344     0036  0008               	return
  7345     0037                     __end_of___lmul:
  7346                           
  7347                           	psect	text27
  7348     0E13                     __ptext27:	
  7349 ;; *************** function _ai_getInputField *****************
  7350 ;; Defined at:
  7351 ;;		line 33 in file "ai_short.c"
  7352 ;; Parameters:    Size  Location     Type
  7353 ;;		None
  7354 ;; Auto vars:     Size  Location     Type
  7355 ;;		None
  7356 ;; Return value:  Size  Location     Type
  7357 ;;                  1    wreg      PTR char 
  7358 ;; Registers used:
  7359 ;;		wreg
  7360 ;; Tracked objects:
  7361 ;;		On entry : 0/0
  7362 ;;		On exit  : 0/0
  7363 ;;		Unchanged: 0/0
  7364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7365 ;;      Params:         0       0       0       0       0       0
  7366 ;;      Locals:         0       0       0       0       0       0
  7367 ;;      Temps:          0       0       0       0       0       0
  7368 ;;      Totals:         0       0       0       0       0       0
  7369 ;;Total ram usage:        0 bytes
  7370 ;; Hardware stack levels used: 1
  7371 ;; This function calls:
  7372 ;;		Nothing
  7373 ;; This function is called by:
  7374 ;;		_main
  7375 ;; This function uses a non-reentrant model
  7376 ;;
  7377                           
  7378     0E13                     _ai_getInputField:	
  7379                           ;psect for function _ai_getInputField
  7380                           
  7381     0E13                     l2708:	
  7382                           ;incstack = 0
  7383                           ; Regs used in _ai_getInputField: [wreg]
  7384                           
  7385                           
  7386                           ;ai_short.c: 34:     return Y0;
  7387     0E13  30C8               	movlw	(low (_Y0| 0))& (0+255)
  7388     0E14                     l523:
  7389     0E14  0008               	return
  7390     0E15                     __end_of_ai_getInputField:
  7391                           
  7392                           	psect	text28
  7393     0E7C                     __ptext28:	
  7394 ;; *************** function _SYSTEM_Initialize *****************
  7395 ;; Defined at:
  7396 ;;		line 50 in file "mcc_generated_files/mcc.c"
  7397 ;; Parameters:    Size  Location     Type
  7398 ;;		None
  7399 ;; Auto vars:     Size  Location     Type
  7400 ;;		None
  7401 ;; Return value:  Size  Location     Type
  7402 ;;                  1    wreg      void 
  7403 ;; Registers used:
  7404 ;;		wreg, status,2, status,0, pclath, cstack
  7405 ;; Tracked objects:
  7406 ;;		On entry : 0/0
  7407 ;;		On exit  : 0/0
  7408 ;;		Unchanged: 0/0
  7409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7410 ;;      Params:         0       0       0       0       0       0
  7411 ;;      Locals:         0       0       0       0       0       0
  7412 ;;      Temps:          0       0       0       0       0       0
  7413 ;;      Totals:         0       0       0       0       0       0
  7414 ;;Total ram usage:        0 bytes
  7415 ;; Hardware stack levels used: 1
  7416 ;; Hardware stack levels required when called: 2
  7417 ;; This function calls:
  7418 ;;		_EUSART_Initialize
  7419 ;;		_OSCILLATOR_Initialize
  7420 ;;		_PIN_MANAGER_Initialize
  7421 ;;		_SPI1_Initialize
  7422 ;;		_WDT_Initialize
  7423 ;; This function is called by:
  7424 ;;		_main
  7425 ;; This function uses a non-reentrant model
  7426 ;;
  7427                           
  7428     0E7C                     _SYSTEM_Initialize:	
  7429                           ;psect for function _SYSTEM_Initialize
  7430                           
  7431     0E7C                     l2628:	
  7432                           ;incstack = 0
  7433                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7434                           
  7435                           
  7436                           ;mcc_generated_files/mcc.c: 53:     SPI1_Initialize();
  7437     0E7C  318E  2663  318E   	fcall	_SPI1_Initialize
  7438                           
  7439                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  7440     0E7F  318E  26B0  318E   	fcall	_PIN_MANAGER_Initialize
  7441                           
  7442                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  7443     0E82  318E  2641  318E   	fcall	_OSCILLATOR_Initialize
  7444                           
  7445                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  7446     0E85  318E  261A  318E   	fcall	_WDT_Initialize
  7447                           
  7448                           ;mcc_generated_files/mcc.c: 57:     EUSART_Initialize();
  7449     0E88  318F  2701  318E   	fcall	_EUSART_Initialize
  7450     0E8B                     l248:
  7451     0E8B  0008               	return
  7452     0E8C                     __end_of_SYSTEM_Initialize:
  7453                           
  7454                           	psect	text29
  7455     0E1A                     __ptext29:	
  7456 ;; *************** function _WDT_Initialize *****************
  7457 ;; Defined at:
  7458 ;;		line 70 in file "mcc_generated_files/mcc.c"
  7459 ;; Parameters:    Size  Location     Type
  7460 ;;		None
  7461 ;; Auto vars:     Size  Location     Type
  7462 ;;		None
  7463 ;; Return value:  Size  Location     Type
  7464 ;;                  1    wreg      void 
  7465 ;; Registers used:
  7466 ;;		wreg
  7467 ;; Tracked objects:
  7468 ;;		On entry : 0/0
  7469 ;;		On exit  : 0/0
  7470 ;;		Unchanged: 0/0
  7471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7472 ;;      Params:         0       0       0       0       0       0
  7473 ;;      Locals:         0       0       0       0       0       0
  7474 ;;      Temps:          0       0       0       0       0       0
  7475 ;;      Totals:         0       0       0       0       0       0
  7476 ;;Total ram usage:        0 bytes
  7477 ;; Hardware stack levels used: 1
  7478 ;; This function calls:
  7479 ;;		Nothing
  7480 ;; This function is called by:
  7481 ;;		_SYSTEM_Initialize
  7482 ;; This function uses a non-reentrant model
  7483 ;;
  7484                           
  7485     0E1A                     _WDT_Initialize:	
  7486                           ;psect for function _WDT_Initialize
  7487                           
  7488     0E1A                     l2496:	
  7489                           ;incstack = 0
  7490                           ; Regs used in _WDT_Initialize: [wreg]
  7491                           
  7492                           
  7493                           ;mcc_generated_files/mcc.c: 73:     WDTCON = 0x16;
  7494     0E1A  3016               	movlw	22
  7495     0E1B  0021               	movlb	1	; select bank1
  7496     0E1C  0097               	movwf	23	;volatile
  7497     0E1D                     l254:
  7498     0E1D  0008               	return
  7499     0E1E                     __end_of_WDT_Initialize:
  7500                           
  7501                           	psect	text30
  7502     0E63                     __ptext30:	
  7503 ;; *************** function _SPI1_Initialize *****************
  7504 ;; Defined at:
  7505 ;;		line 62 in file "mcc_generated_files/spi1.c"
  7506 ;; Parameters:    Size  Location     Type
  7507 ;;		None
  7508 ;; Auto vars:     Size  Location     Type
  7509 ;;		None
  7510 ;; Return value:  Size  Location     Type
  7511 ;;                  1    wreg      void 
  7512 ;; Registers used:
  7513 ;;		wreg
  7514 ;; Tracked objects:
  7515 ;;		On entry : 0/0
  7516 ;;		On exit  : 0/0
  7517 ;;		Unchanged: 0/0
  7518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7519 ;;      Params:         0       0       0       0       0       0
  7520 ;;      Locals:         0       0       0       0       0       0
  7521 ;;      Temps:          0       0       0       0       0       0
  7522 ;;      Totals:         0       0       0       0       0       0
  7523 ;;Total ram usage:        0 bytes
  7524 ;; Hardware stack levels used: 1
  7525 ;; This function calls:
  7526 ;;		Nothing
  7527 ;; This function is called by:
  7528 ;;		_SYSTEM_Initialize
  7529 ;; This function uses a non-reentrant model
  7530 ;;
  7531                           
  7532     0E63                     _SPI1_Initialize:	
  7533                           ;psect for function _SPI1_Initialize
  7534                           
  7535     0E63                     l2484:	
  7536                           ;incstack = 0
  7537                           ; Regs used in _SPI1_Initialize: [wreg]
  7538                           
  7539                           
  7540                           ;mcc_generated_files/spi1.c: 65:     SSP1STAT = 0x40;
  7541     0E63  3040               	movlw	64
  7542     0E64  0024               	movlb	4	; select bank4
  7543     0E65  0094               	movwf	20	;volatile
  7544                           
  7545                           ;mcc_generated_files/spi1.c: 66:     SSP1CON1 = 0x02;
  7546     0E66  3002               	movlw	2
  7547     0E67  0095               	movwf	21	;volatile
  7548                           
  7549                           ;mcc_generated_files/spi1.c: 67:     SSP1ADD = 0x01;
  7550     0E68  3001               	movlw	1
  7551     0E69  0092               	movwf	18	;volatile
  7552     0E6A                     l2486:
  7553                           
  7554                           ;mcc_generated_files/spi1.c: 68:     TRISBbits.TRISB4 = 0;
  7555     0E6A  0021               	movlb	1	; select bank1
  7556     0E6B  120D               	bcf	13,4	;volatile
  7557     0E6C                     l2488:
  7558                           
  7559                           ;mcc_generated_files/spi1.c: 69:     SSP1CON1bits.SSPEN = 0;
  7560     0E6C  0024               	movlb	4	; select bank4
  7561     0E6D  1295               	bcf	21,5	;volatile
  7562     0E6E                     l187:
  7563     0E6E  0008               	return
  7564     0E6F                     __end_of_SPI1_Initialize:
  7565                           
  7566                           	psect	text31
  7567     0EB0                     __ptext31:	
  7568 ;; *************** function _PIN_MANAGER_Initialize *****************
  7569 ;; Defined at:
  7570 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  7571 ;; Parameters:    Size  Location     Type
  7572 ;;		None
  7573 ;; Auto vars:     Size  Location     Type
  7574 ;;		None
  7575 ;; Return value:  Size  Location     Type
  7576 ;;                  1    wreg      void 
  7577 ;; Registers used:
  7578 ;;		wreg, status,2
  7579 ;; Tracked objects:
  7580 ;;		On entry : 0/0
  7581 ;;		On exit  : 0/0
  7582 ;;		Unchanged: 0/0
  7583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7584 ;;      Params:         0       0       0       0       0       0
  7585 ;;      Locals:         0       0       0       0       0       0
  7586 ;;      Temps:          0       0       0       0       0       0
  7587 ;;      Totals:         0       0       0       0       0       0
  7588 ;;Total ram usage:        0 bytes
  7589 ;; Hardware stack levels used: 1
  7590 ;; This function calls:
  7591 ;;		Nothing
  7592 ;; This function is called by:
  7593 ;;		_SYSTEM_Initialize
  7594 ;; This function uses a non-reentrant model
  7595 ;;
  7596                           
  7597     0EB0                     _PIN_MANAGER_Initialize:	
  7598                           ;psect for function _PIN_MANAGER_Initialize
  7599                           
  7600     0EB0                     l2468:	
  7601                           ;incstack = 0
  7602                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  7603                           
  7604                           
  7605                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  7606     0EB0  0022               	movlb	2	; select bank2
  7607     0EB1  018C               	clrf	12	;volatile
  7608                           
  7609                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  7610     0EB2  018D               	clrf	13	;volatile
  7611     0EB3                     l2470:
  7612                           
  7613                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x37;
  7614     0EB3  3037               	movlw	55
  7615     0EB4  0021               	movlb	1	; select bank1
  7616     0EB5  008C               	movwf	12	;volatile
  7617     0EB6                     l2472:
  7618                           
  7619                           ;mcc_generated_files/pin_manager.c: 67:     TRISB = 0xEF;
  7620     0EB6  30EF               	movlw	239
  7621     0EB7  008D               	movwf	13	;volatile
  7622     0EB8                     l2474:
  7623                           
  7624                           ;mcc_generated_files/pin_manager.c: 72:     ANSELB = 0xC8;
  7625     0EB8  30C8               	movlw	200
  7626     0EB9  0023               	movlb	3	; select bank3
  7627     0EBA  008D               	movwf	13	;volatile
  7628     0EBB                     l2476:
  7629                           
  7630                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x1F;
  7631     0EBB  301F               	movlw	31
  7632     0EBC  008C               	movwf	12	;volatile
  7633                           
  7634                           ;mcc_generated_files/pin_manager.c: 78:     WPUB = 0x00;
  7635     0EBD  0024               	movlb	4	; select bank4
  7636     0EBE  018D               	clrf	13	;volatile
  7637                           
  7638                           ;mcc_generated_files/pin_manager.c: 79:     WPUA = 0x00;
  7639     0EBF  018C               	clrf	12	;volatile
  7640     0EC0                     l2478:
  7641                           
  7642                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  7643     0EC0  0021               	movlb	1	; select bank1
  7644     0EC1  1795               	bsf	21,7	;volatile
  7645     0EC2                     l2480:
  7646                           
  7647                           ;mcc_generated_files/pin_manager.c: 86:     APFCON0 = 0xC0;
  7648     0EC2  30C0               	movlw	192
  7649     0EC3  0022               	movlb	2	; select bank2
  7650     0EC4  009D               	movwf	29	;volatile
  7651     0EC5                     l2482:
  7652                           
  7653                           ;mcc_generated_files/pin_manager.c: 87:     APFCON1 = 0x01;
  7654     0EC5  3001               	movlw	1
  7655     0EC6  009E               	movwf	30	;volatile
  7656     0EC7                     l163:
  7657     0EC7  0008               	return
  7658     0EC8                     __end_of_PIN_MANAGER_Initialize:
  7659                           
  7660                           	psect	text32
  7661     0E41                     __ptext32:	
  7662 ;; *************** function _OSCILLATOR_Initialize *****************
  7663 ;; Defined at:
  7664 ;;		line 60 in file "mcc_generated_files/mcc.c"
  7665 ;; Parameters:    Size  Location     Type
  7666 ;;		None
  7667 ;; Auto vars:     Size  Location     Type
  7668 ;;		None
  7669 ;; Return value:  Size  Location     Type
  7670 ;;                  1    wreg      void 
  7671 ;; Registers used:
  7672 ;;		wreg, status,2
  7673 ;; Tracked objects:
  7674 ;;		On entry : 0/0
  7675 ;;		On exit  : 0/0
  7676 ;;		Unchanged: 0/0
  7677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7678 ;;      Params:         0       0       0       0       0       0
  7679 ;;      Locals:         0       0       0       0       0       0
  7680 ;;      Temps:          0       0       0       0       0       0
  7681 ;;      Totals:         0       0       0       0       0       0
  7682 ;;Total ram usage:        0 bytes
  7683 ;; Hardware stack levels used: 1
  7684 ;; This function calls:
  7685 ;;		Nothing
  7686 ;; This function is called by:
  7687 ;;		_SYSTEM_Initialize
  7688 ;; This function uses a non-reentrant model
  7689 ;;
  7690                           
  7691     0E41                     _OSCILLATOR_Initialize:	
  7692                           ;psect for function _OSCILLATOR_Initialize
  7693                           
  7694     0E41                     l2490:	
  7695                           ;incstack = 0
  7696                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  7697                           
  7698                           
  7699                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x70;
  7700     0E41  3070               	movlw	112
  7701     0E42  0021               	movlb	1	; select bank1
  7702     0E43  0099               	movwf	25	;volatile
  7703     0E44                     l2492:
  7704                           
  7705                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x00;
  7706     0E44  0198               	clrf	24	;volatile
  7707     0E45                     l2494:
  7708                           
  7709                           ;mcc_generated_files/mcc.c: 67:     BORCON = 0x00;
  7710     0E45  0022               	movlb	2	; select bank2
  7711     0E46  0196               	clrf	22	;volatile
  7712     0E47                     l251:
  7713     0E47  0008               	return
  7714     0E48                     __end_of_OSCILLATOR_Initialize:
  7715                           
  7716                           	psect	text33
  7717     0F01                     __ptext33:	
  7718 ;; *************** function _EUSART_Initialize *****************
  7719 ;; Defined at:
  7720 ;;		line 66 in file "mcc_generated_files/eusart.c"
  7721 ;; Parameters:    Size  Location     Type
  7722 ;;		None
  7723 ;; Auto vars:     Size  Location     Type
  7724 ;;		None
  7725 ;; Return value:  Size  Location     Type
  7726 ;;                  1    wreg      void 
  7727 ;; Registers used:
  7728 ;;		wreg, status,2, status,0, pclath, cstack
  7729 ;; Tracked objects:
  7730 ;;		On entry : 0/0
  7731 ;;		On exit  : 0/0
  7732 ;;		Unchanged: 0/0
  7733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7734 ;;      Params:         0       0       0       0       0       0
  7735 ;;      Locals:         0       0       0       0       0       0
  7736 ;;      Temps:          0       0       0       0       0       0
  7737 ;;      Totals:         0       0       0       0       0       0
  7738 ;;Total ram usage:        0 bytes
  7739 ;; Hardware stack levels used: 1
  7740 ;; Hardware stack levels required when called: 1
  7741 ;; This function calls:
  7742 ;;		_EUSART_SetErrorHandler
  7743 ;;		_EUSART_SetFramingErrorHandler
  7744 ;;		_EUSART_SetOverrunErrorHandler
  7745 ;; This function is called by:
  7746 ;;		_SYSTEM_Initialize
  7747 ;; This function uses a non-reentrant model
  7748 ;;
  7749                           
  7750     0F01                     _EUSART_Initialize:	
  7751                           ;psect for function _EUSART_Initialize
  7752                           
  7753     0F01                     l2456:	
  7754                           ;incstack = 0
  7755                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7756                           
  7757                           
  7758                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  7759     0F01  3008               	movlw	8
  7760     0F02  0023               	movlb	3	; select bank3
  7761     0F03  009F               	movwf	31	;volatile
  7762                           
  7763                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
  7764     0F04  3090               	movlw	144
  7765     0F05  009D               	movwf	29	;volatile
  7766                           
  7767                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  7768     0F06  3024               	movlw	36
  7769     0F07  009E               	movwf	30	;volatile
  7770                           
  7771                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0x22;
  7772     0F08  3022               	movlw	34
  7773     0F09  009B               	movwf	27	;volatile
  7774     0F0A                     l2458:
  7775                           
  7776                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x00;
  7777     0F0A  019C               	clrf	28	;volatile
  7778     0F0B                     l2460:
  7779                           
  7780                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  7781     0F0B  3000               	movlw	0
  7782     0F0C  00F0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  7783     0F0D  3000               	movlw	0
  7784     0F0E  00F1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  7785     0F0F  318E  2629  318F   	fcall	_EUSART_SetFramingErrorHandler
  7786     0F12                     l2462:
  7787                           
  7788                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  7789     0F12  3000               	movlw	0
  7790     0F13  00F0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  7791     0F14  3000               	movlw	0
  7792     0F15  00F1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  7793     0F16  318E  262F  318F   	fcall	_EUSART_SetOverrunErrorHandler
  7794     0F19                     l2464:
  7795                           
  7796                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  7797     0F19  3000               	movlw	0
  7798     0F1A  00F0               	movwf	EUSART_SetErrorHandler@interruptHandler
  7799     0F1B  3000               	movlw	0
  7800     0F1C  00F1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  7801     0F1D  318E  2623  318F   	fcall	_EUSART_SetErrorHandler
  7802     0F20                     l2466:
  7803                           
  7804                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  7805     0F20  0020               	movlb	0	; select bank0
  7806     0F21  01C1               	clrf	_eusartRxLastError	;volatile
  7807     0F22                     l93:
  7808     0F22  0008               	return
  7809     0F23                     __end_of_EUSART_Initialize:
  7810                           
  7811                           	psect	text34
  7812     0E2F                     __ptext34:	
  7813 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  7814 ;; Defined at:
  7815 ;;		line 161 in file "mcc_generated_files/eusart.c"
  7816 ;; Parameters:    Size  Location     Type
  7817 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  7818 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  7819 ;; Auto vars:     Size  Location     Type
  7820 ;;		None
  7821 ;; Return value:  Size  Location     Type
  7822 ;;                  1    wreg      void 
  7823 ;; Registers used:
  7824 ;;		wreg
  7825 ;; Tracked objects:
  7826 ;;		On entry : 0/0
  7827 ;;		On exit  : 0/0
  7828 ;;		Unchanged: 0/0
  7829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7830 ;;      Params:         2       0       0       0       0       0
  7831 ;;      Locals:         0       0       0       0       0       0
  7832 ;;      Temps:          0       0       0       0       0       0
  7833 ;;      Totals:         2       0       0       0       0       0
  7834 ;;Total ram usage:        2 bytes
  7835 ;; Hardware stack levels used: 1
  7836 ;; This function calls:
  7837 ;;		Nothing
  7838 ;; This function is called by:
  7839 ;;		_EUSART_Initialize
  7840 ;; This function uses a non-reentrant model
  7841 ;;
  7842                           
  7843     0E2F                     _EUSART_SetOverrunErrorHandler:	
  7844                           ;psect for function _EUSART_SetOverrunErrorHandler
  7845                           
  7846     0E2F                     l2430:	
  7847                           ;incstack = 0
  7848                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  7849                           
  7850                           
  7851                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  7852     0E2F  0871               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  7853     0E30  0020               	movlb	0	; select bank0
  7854     0E31  00EC               	movwf	_EUSART_OverrunErrorHandler+1
  7855     0E32  0870               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  7856     0E33  00EB               	movwf	_EUSART_OverrunErrorHandler
  7857     0E34                     l135:
  7858     0E34  0008               	return
  7859     0E35                     __end_of_EUSART_SetOverrunErrorHandler:
  7860                           
  7861                           	psect	text35
  7862     0E29                     __ptext35:	
  7863 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  7864 ;; Defined at:
  7865 ;;		line 157 in file "mcc_generated_files/eusart.c"
  7866 ;; Parameters:    Size  Location     Type
  7867 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  7868 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  7869 ;; Auto vars:     Size  Location     Type
  7870 ;;		None
  7871 ;; Return value:  Size  Location     Type
  7872 ;;                  1    wreg      void 
  7873 ;; Registers used:
  7874 ;;		wreg
  7875 ;; Tracked objects:
  7876 ;;		On entry : 0/0
  7877 ;;		On exit  : 0/0
  7878 ;;		Unchanged: 0/0
  7879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7880 ;;      Params:         2       0       0       0       0       0
  7881 ;;      Locals:         0       0       0       0       0       0
  7882 ;;      Temps:          0       0       0       0       0       0
  7883 ;;      Totals:         2       0       0       0       0       0
  7884 ;;Total ram usage:        2 bytes
  7885 ;; Hardware stack levels used: 1
  7886 ;; This function calls:
  7887 ;;		Nothing
  7888 ;; This function is called by:
  7889 ;;		_EUSART_Initialize
  7890 ;; This function uses a non-reentrant model
  7891 ;;
  7892                           
  7893     0E29                     _EUSART_SetFramingErrorHandler:	
  7894                           ;psect for function _EUSART_SetFramingErrorHandler
  7895                           
  7896     0E29                     l2428:	
  7897                           ;incstack = 0
  7898                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  7899                           
  7900                           
  7901                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  7902     0E29  0871               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  7903     0E2A  0020               	movlb	0	; select bank0
  7904     0E2B  00EE               	movwf	_EUSART_FramingErrorHandler+1
  7905     0E2C  0870               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  7906     0E2D  00ED               	movwf	_EUSART_FramingErrorHandler
  7907     0E2E                     l132:
  7908     0E2E  0008               	return
  7909     0E2F                     __end_of_EUSART_SetFramingErrorHandler:
  7910                           
  7911                           	psect	text36
  7912     0E23                     __ptext36:	
  7913 ;; *************** function _EUSART_SetErrorHandler *****************
  7914 ;; Defined at:
  7915 ;;		line 165 in file "mcc_generated_files/eusart.c"
  7916 ;; Parameters:    Size  Location     Type
  7917 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  7918 ;;		 -> EUSART_DefaultErrorHandler(1), 
  7919 ;; Auto vars:     Size  Location     Type
  7920 ;;		None
  7921 ;; Return value:  Size  Location     Type
  7922 ;;                  1    wreg      void 
  7923 ;; Registers used:
  7924 ;;		wreg
  7925 ;; Tracked objects:
  7926 ;;		On entry : 0/0
  7927 ;;		On exit  : 0/0
  7928 ;;		Unchanged: 0/0
  7929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7930 ;;      Params:         2       0       0       0       0       0
  7931 ;;      Locals:         0       0       0       0       0       0
  7932 ;;      Temps:          0       0       0       0       0       0
  7933 ;;      Totals:         2       0       0       0       0       0
  7934 ;;Total ram usage:        2 bytes
  7935 ;; Hardware stack levels used: 1
  7936 ;; This function calls:
  7937 ;;		Nothing
  7938 ;; This function is called by:
  7939 ;;		_EUSART_Initialize
  7940 ;; This function uses a non-reentrant model
  7941 ;;
  7942                           
  7943     0E23                     _EUSART_SetErrorHandler:	
  7944                           ;psect for function _EUSART_SetErrorHandler
  7945                           
  7946     0E23                     l2432:	
  7947                           ;incstack = 0
  7948                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  7949                           
  7950                           
  7951                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  7952     0E23  0871               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  7953     0E24  0020               	movlb	0	; select bank0
  7954     0E25  00EA               	movwf	_EUSART_ErrorHandler+1
  7955     0E26  0870               	movf	EUSART_SetErrorHandler@interruptHandler,w
  7956     0E27  00E9               	movwf	_EUSART_ErrorHandler
  7957     0E28                     l138:
  7958     0E28  0008               	return
  7959     0E29                     __end_of_EUSART_SetErrorHandler:
  7960     007E                     btemp	set	126	;btemp
  7961     007E                     wtemp0	set	126
  7962                           
  7963                           	psect	idloc
  7964                           
  7965                           ;Config register IDLOC0 @ 0x8000
  7966                           ;	unspecified, using default values
  7967     8000                     	org	32768
  7968     8000  3FFF               	dw	16383
  7969                           
  7970                           ;Config register IDLOC1 @ 0x8001
  7971                           ;	unspecified, using default values
  7972     8001                     	org	32769
  7973     8001  3FFF               	dw	16383
  7974                           
  7975                           ;Config register IDLOC2 @ 0x8002
  7976                           ;	unspecified, using default values
  7977     8002                     	org	32770
  7978     8002  3FFF               	dw	16383
  7979                           
  7980                           ;Config register IDLOC3 @ 0x8003
  7981                           ;	unspecified, using default values
  7982     8003                     	org	32771
  7983     8003  3FFF               	dw	16383
  7984                           
  7985                           	psect	config
  7986                           
  7987                           ;Config register CONFIG1 @ 0x8007
  7988                           ;	Oscillator Selection
  7989                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  7990                           ;	Watchdog Timer Enable
  7991                           ;	WDTE = OFF, WDT disabled
  7992                           ;	Power-up Timer Enable
  7993                           ;	PWRTE = OFF, PWRT disabled
  7994                           ;	MCLR Pin Function Select
  7995                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  7996                           ;	Flash Program Memory Code Protection
  7997                           ;	CP = OFF, Program memory code protection is disabled
  7998                           ;	Data Memory Code Protection
  7999                           ;	CPD = OFF, Data memory code protection is disabled
  8000                           ;	Brown-out Reset Enable
  8001                           ;	BOREN = ON, Brown-out Reset enabled
  8002                           ;	Clock Out Enable
  8003                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  8004                           ;	Internal/External Switchover
  8005                           ;	IESO = ON, Internal/External Switchover mode is enabled
  8006                           ;	Fail-Safe Clock Monitor Enable
  8007                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  8008     8007                     	org	32775
  8009     8007  3FE4               	dw	16356
  8010                           
  8011                           ;Config register CONFIG2 @ 0x8008
  8012                           ;	Flash Memory Self-Write Protection
  8013                           ;	WRT = OFF, Write protection off
  8014                           ;	PLL Enable
  8015                           ;	PLLEN = OFF, 4x PLL disabled
  8016                           ;	Stack Overflow/Underflow Reset Enable
  8017                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  8018                           ;	Brown-out Reset Voltage Selection
  8019                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  8020                           ;	Low-Voltage Programming Enable
  8021                           ;	LVP = ON, Low-voltage programming enabled
  8022     8008                     	org	32776
  8023     8008  3EFF               	dw	16127

Data Sizes:
    Strings     51
    Constant    36
    Data        8
    BSS         186
    Persistent  38
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     31      79
    BANK1            80      0      56
    BANK2            80      0      32
    BANK3            80      0      64
    BANK4            48      0       0

Pointer List with Targets:

    printString@str	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_22(CODE[8]), STR_21(CODE[4]), STR_20(CODE[7]), STR_19(CODE[7]), 
		 -> STR_18(CODE[7]), STR_17(CODE[7]), STR_16(CODE[7]), STR_15(CODE[7]), 
		 -> STR_14(CODE[7]), STR_13(CODE[7]), STR_12(CODE[8]), STR_11(CODE[3]), 
		 -> STR_10(CODE[7]), STR_9(CODE[3]), STR_8(CODE[7]), STR_7(CODE[3]), 
		 -> STR_6(CODE[8]), STR_5(CODE[3]), STR_4(CODE[7]), STR_3(CODE[3]), 
		 -> STR_2(CODE[7]), STR_1(CODE[3]), 

    snake_getSurroundings@surroundings	PTR char  size(1) Largest target is 8
		 -> Y0(BANK1[8]), 

    sp__ai_getInputField	PTR char  size(1) Largest target is 8
		 -> Y0(BANK1[8]), 

    sp__snake_getField	PTR unsigned char  size(1) Largest target is 64
		 -> field(BANK3[64]), 

    main@field	PTR unsigned char  size(1) Largest target is 64
		 -> field(BANK3[64]), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    _main->___awdiv
    _snake_move->___awdiv
    _snake_move->_rand
    _snake_initiate->_rand
    _snake_getSurroundings->___awdiv
    _sendMatrix->_txMAX7219
    _ledSet->___awdiv
    _initMAX7219->_txMAX7219
    _txMAX7219->_SPI1_WriteByte
    _ai_run->___awdiv
    _ai_propagate->___awdiv
    ___wmul->_de_sigmoid
    ___awdiv->___wmul
    _ai_printAI->_printString
    _printString->_print
    _printInteger->_print
    _print->_EUSART_Write
    _ai_initiate->_rand
    _rand->___lmul
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _main in BANK0

    _main->_ai_propagate
    _snake_move->_snake_initiate
    _snake_initiate->_rand
    _snake_getSurroundings->___awdiv
    _ledSet->___awdiv
    _ai_run->___awdiv
    _ai_propagate->___awdiv
    _ai_initiate->_rand

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0   19454
                                             19 BANK0     12    12      0
                  _SYSTEM_Initialize
                            ___awdiv
                   _ai_getInputField
                        _ai_initiate
                         _ai_printAI
                       _ai_propagate
                             _ai_run
                 _deactivateElevator
                        _initMAX7219
                           _ledClear
                             _ledSet
                         _sendMatrix
                     _snake_getField
              _snake_getFoodPosition
              _snake_getSurroundings
                     _snake_initiate
                         _snake_move
 ---------------------------------------------------------------------------------
 (1) _snake_move                                           5     5      0    2237
                                              6 BANK0      5     5      0
                            ___awdiv
                               _rand
                     _snake_initiate
 ---------------------------------------------------------------------------------
 (2) _snake_initiate                                       2     2      0     312
                                              4 BANK0      2     2      0
                               _rand
 ---------------------------------------------------------------------------------
 (1) _snake_getSurroundings                               10    10      0    2218
                                              4 BANK0     10    10      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) _snake_getFoodPosition                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _snake_getField                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sendMatrix                                           5     5      0     935
                                              3 COMMON     5     5      0
                          _txMAX7219
 ---------------------------------------------------------------------------------
 (1) _ledSet                                               4     3      1     424
                                              4 BANK0      4     3      1
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _ledClear                                             4     3      1     272
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _initMAX7219                                          2     2      0     750
                                              3 COMMON     2     2      0
                          _txMAX7219
 ---------------------------------------------------------------------------------
 (2) _txMAX7219                                            2     1      1     750
                                              1 COMMON     2     1      1
                     _SPI1_WriteByte
 ---------------------------------------------------------------------------------
 (3) _SPI1_WriteByte                                       1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _deactivateElevator                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ai_run                                              10    10      0    2753
                                              4 BANK0     10    10      0
                            ___awdiv
                             ___wmul
                            _sigmoid
 ---------------------------------------------------------------------------------
 (1) _ai_propagate                                        15    15      0    3134
                                              4 BANK0     15    15      0
                            ___awdiv
                             ___wmul
                         _de_sigmoid
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              3 COMMON     6     2      4
                         _de_sigmoid (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1516
                                              9 COMMON     5     1      4
                                              0 BANK0      4     4      0
                             ___wmul (ARG)
                         _de_sigmoid (ARG)
                            _sigmoid (ARG)
 ---------------------------------------------------------------------------------
 (1) _ai_printAI                                          16    16      0    3578
                                              8 COMMON     3     3      0
                                              0 BANK0     13    13      0
                         _de_sigmoid
                              _print
                       _printInteger
                        _printString
                            _sigmoid
 ---------------------------------------------------------------------------------
 (2) _sigmoid                                              3     1      2     241
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (2) _printString                                          6     4      2    1872
                                              2 COMMON     6     4      2
                              _print
 ---------------------------------------------------------------------------------
 (2) _printInteger                                         2     0      2     230
                                              2 COMMON     2     0      2
                              _print
 ---------------------------------------------------------------------------------
 (3) _print                                                1     1      0     110
                                              1 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (4) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _de_sigmoid                                           3     1      2     241
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _ai_initiate                                          5     5      0     402
                                              4 BANK0      5     5      0
                               _rand
 ---------------------------------------------------------------------------------
 (3) _rand                                                 6     4      2     244
                                             12 COMMON     2     0      2
                                              0 BANK0      4     4      0
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     244
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _ai_getInputField                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI1_Initialize
     _WDT_Initialize
   ___awdiv
     ___wmul (ARG)
       _de_sigmoid (ARG)
     _de_sigmoid (ARG)
     _sigmoid (ARG)
   _ai_getInputField
   _ai_initiate
     _rand
       ___lmul
   _ai_printAI
     _de_sigmoid
     _print
       _EUSART_Write
     _printInteger
       _print
     _printString
       _print
     _sigmoid
   _ai_propagate
     ___awdiv
     ___wmul
     _de_sigmoid
   _ai_run
     ___awdiv
     ___wmul
     _sigmoid
   _deactivateElevator
   _initMAX7219
     _txMAX7219
       _SPI1_WriteByte
   _ledClear
   _ledSet
     ___awdiv (ARG)
   _sendMatrix
     _txMAX7219
   _snake_getField
   _snake_getFoodPosition
   _snake_getSurroundings
     ___awdiv
   _snake_initiate
     _rand
   _snake_move
     ___awdiv
     _rand
     _snake_initiate

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      F5       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     1F      4F       6       98.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      38       8       70.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      20      10       40.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      40      12       80.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      F5      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Oct 13 21:50:40 2022

                           SPI1_WriteByte@byte 0070                                              _S 0028  
                         __end_of_ai_propagate 0613                                             _B1 0038  
                                           l93 0F22                                             _W1 00A0  
                                           _Y0 00C8                                             _Y1 0046  
                                           _Z1 0020                                   ___awdiv@sign 004B  
                          ___wmul@multiplicand 0075                                            l120 0E62  
                                          l132 0E2E                                            l117 0E5A  
                                          l135 0E34                                            l224 0E22  
                                          l138 0E28                                            l251 0E47  
                                          l163 0EC7                                            l340 0EE1  
                                          l413 03E3                                            l254 0E1D  
                                          l334 0ECF                                            l343 0117  
                                          l248 0E8B                                            l520 00D9  
                                          l600 0FA2                                            l336 0ED4  
                                          l416 0E16                                            l601 0F92  
                                          l337 0ED9                                            l346 0EAF  
                                          l187 0E6E                                            l523 0E14  
                                          l339 0EDE                                            l540 0612  
                                          l436 0239                                            l349 0E9D  
                                          l445 0E19                                            l462 0E58  
                                          l366 0FD0                                            l536 030C  
                                          l473 0F48                                            l297 0E7B  
                                          l385 0F74                                            l459 0069  
                                          l752 0EEC                                            l905 0177  
                                          l594 0FFF                                            l586 07D0  
                                          l754 0F00                                            l595 0FEF  
                                          l766 0036                 ?_EUSART_SetFramingErrorHandler 0070  
                                          wreg 0009                                   ?_initMAX7219 0070  
                                         l1216 009E                                           l3100 06D5  
                                         l3020 060C                                           l3012 05DD  
                                         l3004 05D2                                           l3110 06EB  
                                         l3102 06DB                                           l3030 0623  
                                         l3022 0613                                           l3014 05FE  
                                         l3006 05DC                                           l3112 06F9  
                                         l3104 06E9                                           l3032 062B  
                                         l3024 0621                                           l3016 0602  
                                         l2410 0E5A                                           l3130 0727  
                                         l3114 06FE                                           l3050 0659  
                                         l3034 0630                                           l3018 0608  
                                         l3210 03E7                                           l2420 0018  
                                         l2412 0E5F                                           l3140 073F  
                                         l3132 0735                                           l3124 0714  
                                         l3116 0704                                           l3060 0674  
                                         l3052 0667                                           l3044 0646  
                                         l3036 0636                                           l3220 03F8  
                                         l3212 03EA                                           l2430 0E2F  
                                         l2422 001F                                           l2414 0004  
                                         l3142 0744                                           l3126 071C  
                                         l3118 0712                                           l3062 0679  
                                         l3046 064E                                           l3038 0644  
                                         l2510 0F5B                                           l3214 03ED  
                                         l2432 0E23                                           l2424 002E  
                                         l2416 000C                                           l3160 077B  
                                         l3152 075A                                           l3144 074A  
                                         l3128 0721                                           l3080 06B0  
                                         l3072 068F                                           l3064 067F  
                                         l3048 0653                                           l2600 0134  
                                         l2520 0ECB                                           l2512 0F69  
                                         l2504 0F4B                                           l3240 0422  
                                         l3232 03FA                                           l3216 03F0  
                                         l3208 03E4                                           l2418 0010  
                                         l2450 0056                                           l2442 0038  
                                         l2530 0F34                                           l3154 0762  
                                         l3146 0758                                           l3138 0737  
                                         l3074 0697                                           l3066 068D  
                                         l3058 0669                                           l2610 014A  
                                         l2602 013A                                           l2434 0E1F  
                                         l2522 0ED5                                           l2514 0F6B  
                                         l2506 0F51                                           l3250 044D  
                                         l3242 0428                                           l3234 0410  
                                         l3226 03F9                                           l3218 03F3  
                                         l2428 0E29                                           l2460 0F0B  
                                         l2436 006A                                           l2452 005C  
                                         l2444 003E                                           l2524 0E50  
                                         l2532 0F38                                           l2540 0FE0  
                                         l3180 07A1                                           l3172 077E  
                                         l3156 0767                                           l3092 06B3  
                                         l3076 069C                                           l2612 0159  
                                         l2604 013D                                           l2620 0169  
                                         l2700 0FB9                                           l2516 0F6D  
                                         l2508 0F55                                           l3260 046E  
                                         l3252 0450                                           l3244 042C  
                                         l3236 0417                                           l2462 0F12  
                                         l2470 0EB3                                           l2438 008B  
                                         l2454 0065                                           l2446 0047  
                                         l2526 0F23                                           l2542 0FED  
                                         l2534 0FD1                                           l3190 07B7  
                                         l3182 07A7                                           l3174 0792  
                                         l3166 077D                                           l3158 076D  
                                         l3094 06C6                                           l3086 06B2  
                                         l3078 06A2                                           l2622 016E  
                                         l2614 015D                                           l2606 0142  
                                         l2630 0E6F                                           l2518 0EC9  
                                         l2702 0FBF                                           l3262 0472  
                                         l3254 045D                                           l3246 0432  
                                         l3238 041D                                           l2464 0F19  
                                         l2456 0F01                                           l2480 0EC2  
                                         l2472 0EB6                                           l2640 00AC  
                                         l2632 009F                                           l2552 0F75  
                                         l2448 004D                                           l2528 0F25  
                                         l2536 0FDE                                           l3192 07C5  
                                         l3184 07B5                                           l3176 0797  
                                         l3096 06CB                                           l2624 0173  
                                         l2616 015E                                           l2608 0146  
                                         l2704 0FC6                                           l2720 0182  
                                         l2712 017A                                           l3360 038C  
                                         l3280 0498                                           l3256 0463  
                                         l3248 0437                                           l2466 0F20  
                                         l2458 0F0A                                           l2490 0E41  
                                         l2482 0EC5                                           l2474 0EB8  
                                         l2650 00C9                                           l2554 0F82  
                                         l2546 0FF3                                           l3194 07CA  
                                         l3178 079D                                           l3098 06D1  
                                         l2618 0163                                           l2570 0EE2  
                                         l2810 02AA                                           l2706 0FCA  
                                         l2730 01B4                                           l2722 0186  
                                         l3290 04B2                                           l3282 049D  
                                         l3274 0475                                           l3258 0468  
                                         l2492 0E44                                           l2476 0EBB  
                                         l2468 0EB0                                           l2484 0E63  
                                         l2628 0E7C                                           l2708 0E13  
                                         l2652 00CF                                           l2564 0F96  
                                         l2548 0FF7                                           l2580 0EFC  
                                         l2572 0EE4                                           l2812 02DF  
                                         l2804 026A                                           l2660 0101  
                                         l2740 01CF                                           l2732 01B9  
                                         l2724 018C                                           l2900 03BF  
                                         l3292 04C8                                           l3284 04A3  
                                         l3276 048B                                           l3268 0474  
                                         l2494 0E45                                           l2478 0EC0  
                                         l2486 0E6A                                           l2654 00D3  
                                         l2646 00AE                                           l2638 00A1  
                                         l2566 0F9A                                           l2558 0F84  
                                         l2590 0123                                           l2574 0EE8  
                                         l2830 0305                                           l2814 02E4  
                                         l2806 02A0                                           l2662 010C  
                                         l2670 0EA0                                           l2742 01D6  
                                         l2734 01BF                                           l2726 018F  
                                         l2718 017B                                           l2910 03DC  
                                         l2902 03C1                                           l3286 04A7  
                                         l3278 0492                                           l2488 0E6C  
                                         l2496 0E1A                                           l2648 00C4  
                                         l2592 0125                                           l2584 0118  
                                         l2576 0EF1                                           l2832 030B  
                                         l2824 02ED                                           l2816 02EA  
                                         l2808 02A4                                           l2664 0111  
                                         l2656 00DA                                           l2672 0E8D  
                                         l2760 0207                                           l2752 01E3  
                                         l2744 01DC                                           l2736 01C5  
                                         l2728 01A0                                           l2912 03DE  
                                         l2904 03C5                                           l3288 04AD  
                                         l2594 0129                                           l2586 011A  
                                         l2578 0EF6                                           l2930 04DC  
                                         l2922 04D0                                           l2826 02FF  
                                         l2818 02EB                                           l2658 00E0  
                                         l2666 0E15                                           l2674 0E17  
                                         l2770 0226                                           l2762 020D  
                                         l2754 01F5                                           l2746 01E2  
                                         l2738 01CA                                           l2498 0F49  
                                         l2914 03E1                                           l2906 03CC  
                                         l2850 0327                                           l2596 012E  
                                         l2588 011E                                           l2940 04E8  
                                         l2932 04E1                                           l2828 0301  
                                         l2684 0FA4                                           l2772 022D  
                                         l2764 0214                                           l2756 01FD  
                                         l2908 03D6                                           l2860 033D  
                                         l2852 032D                                           l2844 0312  
                                         l2836 030F                                           l2598 0132  
                                         l2942 04EC                                           l2926 04D6  
                                         l2790 0257                                           l2782 023C  
                                         l2694 0FAC                                           l2686 0FAA  
                                         l2678 0FA3                                           l2774 0233  
                                         l2766 021A                                           l2758 0201  
                                         l2862 0340                                           l2854 032E  
                                         l2846 031C                                           l2838 0311  
                                         l2952 04F9                                           l2960 050E  
                                         l2944 04F2                                           l2928 04DB  
                                         l2784 0247                                           l2776 023A  
                                         l2696 0FAE                                           l2688 0FAB  
                                         l2768 0220                                           l2872 0364  
                                         l2856 0333                                           l2848 0323  
                                         l2970 0527                                           l2954 04FE  
                                         l2938 04E2                                           l2946 04F8  
                                         l2786 024D                                           l2698 0FB3  
                                         l2890 03AD                                           l2874 0368  
                                         l2866 034A                                           l2858 0339  
                                         l2882 0384                                           l2980 057F  
                                         l2972 052D                                           l2956 0502  
                                         l2796 0258                                           l2788 0251  
                                         l2868 034F                                           l2884 039A  
                                         l2990 05BD                                           l2982 0589  
                                         l2966 050F                                           l2958 0508  
                                         l2798 0269                                           l2894 03B0  
                                         l2886 039F                                           l2878 037E  
                                         l2992 05C1                                           l2968 0523  
                                         l2896 03B7                                           l2888 03A3  
                                         l2994 05C7                                           l2978 052E  
                                         l2898 03BD                                           l2996 05CB  
                                         l2988 058A                                           l2998 05D1  
                __end_of_snake_getSurroundings 023A                                           STR_1 0854  
                                         STR_2 0829                                           STR_3 0842  
                                         STR_4 0829                                           STR_5 0849  
                                         STR_6 0820                                           STR_7 0834  
                                         STR_8 0829                                           STR_9 083B  
                                         u2000 04D5                                           u2001 04D4  
                                         u2010 04DB                                           u2011 04DA  
                                         u1300 0E5F                                           u2100 05D1  
                                         u2020 04E1                                           u1301 0E5E  
                                         u2101 05D0                                           u2021 04E0  
                                         u1310 0010                                           u2030 04F2  
                                         u1311 000F                                           u2031 04F1  
                                         u2200 06D1                                           u2040 0508  
                                         u1400 0ED4                                           u2201 06D0  
                                         u2041 0507                                           u1401 0ED3  
                                         u2210 06DB                                           u2130 0608  
                                         u2050 052D                                           u1410 0EDE  
                                         u2211 06DA                                           u2131 0607  
                                         u2115 05E0                                           u2051 052C  
                                         u1411 0EDD                                           u1340 002E  
                                         u1420 0F48                                           u2220 0704  
                                         u2140 0612                                           u1341 002D  
                                         u1325 0019                                           u1421 0F47  
                                         u2221 0703                                           u2141 0611  
                                         u2125 05F0                                           _LATA 010C  
                                         u1350 0098                                           u1430 0FDE  
                                         u2230 0727                                           u2150 0636  
                                         _LATB 010D                                           u1335 0020  
                                         u1431 0FDD                                           u2231 0726  
                                         u2151 0635                                           u1360 003E  
                                         u1440 0FED                                           u2240 074A  
                                         u2160 0659                                           u1520 0EFC  
                                         u1361 003D                                           u1441 0FEC  
                                         u2241 0749                                           u2161 0658  
                                         u1521 0EFB                                           u1505 0EED  
                                         u2065 0578                                           u1370 004D  
                                         u1450 0FF3                                           u2250 076D  
                                         u2170 067F                                           u1610 0169  
                                         u1530 011E                                           u2090 05C7  
                                         u2330 0410                                           u1355 0094  
                                         u1371 004C                                           u1451 0FF2  
                                         u1435 0FDA                                           u2251 076C  
                                         u2171 067E                                           u1611 0168  
                                         u1531 011D                                           u1515 0EF2  
                                         u2091 05C6                                           u2075 058D  
                                         u2331 040F                                           u1460 0F82  
                                         u1380 005C                                           u2180 06A2  
                                         u1620 016E                                           u1540 0129  
                                         u1700 018C                                           u2340 0428  
                                         u1461 0F81                                           u1381 005B  
                                         u1445 0FE9                                           u2181 06A1  
                                         u1621 016D                                           u1605 015F  
                                         u1541 0128                                           u2085 05B6  
                                         u1701 018B                                           u2341 0427  
                                         u2325 03FD                                           u1470 0F91  
                                         u2270 079D                                           u1550 013A  
                                         u1710 01B9                                           u1390 0F5B  
                                         u2350 0432                                           u1471 0F90  
                                         u2271 079C                                           u1551 0139  
                                         u1711 01B8                                           u1391 0F5A  
                                         u2351 0431                                           u1640 00CF  
                                         u1480 0F96                                           u2280 07A7  
                                         u1800 0233                                           u1720 01C5  
                                         u1641 00CE                                           u1481 0F95  
                                         u1465 0F7E                                           u2281 07A6  
                                         u2265 0781                                           u1801 0232  
                                         u1721 01C4                                           u1650 00D9  
                                         u2290 07D0                                           u1570 014A  
                                         u1490 0EE8                                           u1810 0247  
                                         u1730 01CF                                           u2370 048B  
                                         u1651 00D8                                           u1635 00B1  
                                         u1475 0F8D                                           u2291 07CF  
                                         u2195 06B6                                           u1571 0149  
                                         u1491 0EE7                                           u1811 0246  
                                         u1731 01CE                                           u2371 048A  
                                         u1820 0257                                           u1740 01DC  
                                         u1900 032D                                           u2380 04A3  
                                         u1565 013E                                           u1821 0256  
                                         u1741 01DB                                           u1901 032C  
                                         u2381 04A2                                           u2365 0478  
                                         u1590 0159                                           u1750 01F5  
                                         u1910 0339                                           u2390 04AD  
                                         u1591 0158                                           u1751 01F4  
                                         u1911 0338                                           u2391 04AC  
                                         u1664 0EA5                                           u1680 0FBF  
                                         u1760 0207                                           u1920 0349  
                                         u1585 014B                                           u1665 0EA4  
                                         u1681 0FBE                                           u1761 0206  
                                         u1921 0348                                           u2457 0456  
                                         u1850 02AA                                           u1674 0E92  
                                         u1690 0FD0                                           u1770 020D  
                                         u1930 0363                                           u1595 0155  
                                         u1851 02A9                                           u1835 0276  
                                         u2467 0106                                           u1675 0E91  
                                         u1691 0FCF                                           u1771 020C  
                                         u1931 0362                                           u1860 02EA  
                                         u1780 021A                                           u1940 037D  
                                         u1861 02E9                                           u1845 0291  
                                         u1781 0219                                           u1941 037C  
                                         u1870 02FF                                           u1790 0226  
                                         u1950 039F                                           u1871 02FE  
                                         u1791 0225                                           u1951 039E  
                                         u1880 030B                                           u1960 03AD  
                                         u1881 030A                                           u1961 03AC  
                                         u1970 03BD                                           u1890 031C  
                                         u1971 03BC                                           u1891 031B  
                                         u1980 03D6                                           u1981 03D5  
                                         u1990 03DC                                           u1991 03DB  
                                         _WPUA 020C                                           _WPUB 020D  
                                         _main 03E4                                           _rand 006A  
                                         _seed 0042                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           btemp 007E  
                                 printString@i 0077                                  printInteger@i 0072  
                                         start 0002                     __end_of_deactivateElevator 0E7C  
                      ??_snake_getFoodPosition 0070                                  ?_EUSART_Write 0070  
                __end_of_OSCILLATOR_Initialize 0E48                                          ?_main 0070  
                                        ?_rand 007C                                __end_of___awdiv 0178  
                                        STR_10 0829                                          STR_11 0851  
                                        STR_20 0829                                          STR_12 0828  
                                        STR_21 0850                                          STR_13 083E  
                                        STR_14 0829                                          STR_22 0828  
                                        STR_15 0845                                          STR_16 0829  
                                        STR_17 0830                                          STR_18 0829  
                                        STR_19 0837                                ___awdiv@divisor 0079  
                              ___awdiv@counter 004A                                          _RCREG 0199  
                                        _RCSTA 019D                                          _TRISA 008C  
                                        _TRISB 008D                                          _TXREG 019A  
                                        _TXSTA 019E                            ___lmul@multiplicand 0074  
                                        _field 01A0                                 _WDT_Initialize 0E1A  
                                        _print 0037                                          main@i 0065  
                                        main@j 0066                                __end_of_sigmoid 1000  
                                        status 0003                                          wtemp0 007E  
                              __initialization 07D1                                 _remainingMoves 003D  
                                 __end_of_main 04CE                                   __end_of_rand 009F  
                               ??_EUSART_Write 0070                                         ??_main 005D  
                                       ??_rand 004A                         __end_of_WDT_Initialize 0E1E  
            _EUSART_DefaultFramingErrorHandler 0000                     _EUSART_OverrunErrorHandler 006B  
                                       _EEADRH 0192                                         _EEADRL 0191  
                                       _EEDATH 0194                                         _EEDATL 0193  
                                       _EECON2 0196                               ___awdiv@dividend 007B  
                                       ?_print 0070                                         _DC_DB1 002C  
                                       _ANSELA 018C                                         _ANSELB 018D  
                                       _DC_DW1 0120                                         _DC_DY1 0034  
                                       _DC_DZ1 0030                                         _BORCON 0116  
                            ?_ai_getInputField 0070                                  main@incentive 0061  
                                       _OSCCON 0099                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _WDTCON 0097  
                           ??_ai_getInputField 0070                               __end_of_ledClear 0E9E  
            snake_getSurroundings@surroundings 0057                                         ___lmul 0004  
                                       ___wmul 0EE2                                      ??___awdiv 007D  
                                       _ai_run 023A                                         _choice 003C  
                                       _ledSet 0E9E                               _de_sigmoidValues 0800  
                                       _matrix 00C0                               ___awdiv@quotient 004C  
                               printString@str 0072                                ?_WDT_Initialize 0070  
                                    ??_sigmoid 0072                                         print@b 0071  
                                ai_propagate@i 0056                                  ai_propagate@j 005A  
                                 _ai_propagate 04CE                                   ?_printString 0072  
                            _SYSTEM_Initialize 0E7C                        __end_of__initialization 07FD  
                           ?_SYSTEM_Initialize 0070                                 __pcstackCOMMON 0070  
                                 __pidataBANK1 0E48                            ??_SYSTEM_Initialize 0072  
                            ??_SPI1_Initialize 0070                                  __end_of_print 006A  
                           _spi1_configuration 084C                                 _OPTION_REGbits 0095  
                        __end_of_sigmoidValues 0820                ??_EUSART_SetOverrunErrorHandler 0072  
                              snake_initiate@i 004F                      __end_of_SYSTEM_Initialize 0E8C  
                          snake_move@direction 0052                                     _ai_printAI 0613  
                                      ??_print 0071                                   _headPosition 003F  
                                   __pbssBANK0 0020                                     __pbssBANK1 00A0  
                                   __pbssBANK2 0120                                     __pbssBANK3 01A0  
                        ai_propagate@incentive 0055                           __end_of_EUSART_Write 0E63  
                                   _de_sigmoid 0F75                                 _SPI1_WriteByte 0E1E  
                          snake_move@incentive 0053                                     __pmaintext 03E4  
                                      ?___lmul 0070                                        ?___wmul 0073  
                                      ?_ai_run 0070                                    sendMatrix@b 0074  
                                  sendMatrix@i 0077                                    sendMatrix@j 0076  
                                      ?_ledSet 004E                                        _BAUDCON 019F  
                               ___lmul@product 0078                                        _APFCON0 011D  
                                      _APFCON1 011E                  __end_of_snake_getFoodPosition 0E1A  
                         main@foodPosition_653 0064                             _deactivateElevator 0E6F  
                                      _OSCTUNE 0098                                      ?_ledClear 0070  
                                      _SSP1ADD 0212                                        _SSP1BUF 0211  
                     ??_EUSART_SetErrorHandler 0072                            ?_deactivateElevator 0070  
                       __end_of_SPI1_WriteByte 0E23                          _snake_getSurroundings 0178  
                             main@foodPosition 0063                                  ??_ai_initiate 004E  
                                      ___awdiv 0118                           ??_deactivateElevator 0070  
                                      __ptext1 030D                                        __ptext2 0F49  
                                      __ptext3 0178                                        __ptext4 0E17  
                                      __ptext5 0E15                                        __ptext6 0FA3  
                                      __ptext7 0E9E                                        __ptext8 0E8C  
                                      __ptext9 00DA                              __end_of_txMAX7219 0EE2  
                                      ai_run@i 0054                                        ai_run@j 0057  
                        _OSCILLATOR_Initialize 0E41                       ??_PIN_MANAGER_Initialize 0070  
                                      _sigmoid 0FD1                                     ??_ledClear 0071  
                                      ledSet@c 004E                                        ledSet@l 0051  
                                      clrloop0 0E36                                    ?_ai_printAI 0070  
                         end_of_initialization 07FD                                     _sendMatrix 0FA3  
                     __end_of_de_sigmoidValues 0810                                    ?_de_sigmoid 0070  
        __end_of_EUSART_SetOverrunErrorHandler 0E35                  _EUSART_SetOverrunErrorHandler 0E2F  
                              ?_SPI1_WriteByte 0070                                        init_ram 0E3B  
                                      initloop 0E3C                                    snake_move@i 0054  
                            _EUSART_Initialize 0F01                             ?_EUSART_Initialize 0070  
                                    _RCSTAbits 019D                                     _snake_move 030D  
                                ?_printInteger 0072                            ??_EUSART_Initialize 0072  
                          __end_of_ai_initiate 00DA                               ??_WDT_Initialize 0070  
                               txMAX7219@addr0 0072                                      _TRISAbits 008C  
                                    _TRISBbits 008D                         ?_snake_getSurroundings 0070  
                    __end_of_EUSART_Initialize 0F23                                     main@choice 0060  
                              _SPI1_Initialize 0E63                                      _TXSTAbits 019E  
                                 _foodPosition 003E                                 _snake_getField 0E15  
                                 ai_initiate@i 0051                                   ai_initiate@j 0052  
                               ??_printInteger 0074                                 __end_of___lmul 0037  
                   _EUSART_DefaultErrorHandler 0000                                 __end_of___wmul 0F01  
                               __end_of_ai_run 030D                                   _EUSART_Write 0E59  
                               __end_of_ledSet 0EB0                         ?_OSCILLATOR_Initialize 0070  
                               _snake_initiate 0F49                            start_initialization 07D1  
                                ??_initMAX7219 0073                                    ?_sendMatrix 0070  
                       __end_of_snake_getField 0E17                 ?_EUSART_SetOverrunErrorHandler 0070  
                                  _ai_initiate 009F                     _EUSART_FramingErrorHandler 006D  
                                     ??___lmul 0078                                    ?_snake_move 0070  
                                     ??___wmul 0077                         _EUSART_SetErrorHandler 0E23  
                                     ??_ai_run 004E                                       ??_ledSet 004F  
                                  __pdataBANK1 00D0                         __end_of_snake_initiate 0F75  
                                    ___latbits 0001                                  __pcstackBANK0 004A  
                      __end_of_SPI1_Initialize 0E6F                        snake_getSurroundings@cf 0052  
                      snake_getSurroundings@ch 0055                        snake_getSurroundings@lf 0051  
                      snake_getSurroundings@lh 0054                            __end_of_initMAX7219 0118  
                                    __pnvBANK0 0069                                ?_snake_getField 0070  
                       _PIN_MANAGER_Initialize 0EB0                                       ?___awdiv 0079  
                             _ai_getInputField 0E13                                ?_snake_initiate 0070  
                                 sendMatrix@nb 0075                          _snake_getFoodPosition 0E17  
                                     ?_sigmoid 0070                               ??_SPI1_WriteByte 0070  
                                    _txMAX7219 0EC8                                   ??_ai_printAI 0078  
                         __end_of_printInteger 0E59                                   ??_de_sigmoid 0072  
                               ___wmul@product 0077                                       _LATAbits 010C  
       EUSART_SetErrorHandler@interruptHandler 0070                                       _LATBbits 010D  
                                    clear_ram0 0E35                              _eusartRxLastError 0041  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 0072  
                                    ledClear@c 0070                                      ledClear@l 0073  
                                    _snakeSize 0040                                       _SSP1CON1 0215  
                                     _SSP1CON2 0216              _EUSART_DefaultOverrunErrorHandler 0000  
                                     _SSP1STAT 0214                                  txMAX7219@dat0 0071  
                           __end_of_ai_printAI 07D1                                      main@i_651 0067  
                                    main@j_652 0068                              ___wmul@multiplier 0073  
                           __end_of_de_sigmoid 0FA3                                      main@field 0062  
                                  _initMAX7219 00DA                        ??_snake_getSurroundings 004E  
                                   ?_txMAX7219 0071                                  _sigmoidValues 0810  
                             ?_SPI1_Initialize 0070                                  ?_ai_propagate 0070  
                            ___lmul@multiplier 0070                                  _snake_mapping 00D0  
                                ??_printString 0074                                ai_printAI@i_870 0050  
                              ai_printAI@i_882 0054                                ai_printAI@i_866 004E  
                              ai_printAI@i_886 0056                                ai_printAI@j_863 004D  
                              ai_printAI@j_873 0051                                ai_printAI@j_883 0055  
                              ai_printAI@j_867 004F                                ai_printAI@j_859 004C  
                              ai_printAI@j_876 0052                                ai_printAI@j_879 0053  
                                   _EECON1bits 0195                                    ai_run@i_838 0055  
                                  ai_run@i_839 0056                                    ai_printAI@i 004A  
                                  ai_printAI@j 004B                        ??_OSCILLATOR_Initialize 0070  
                          _EUSART_ErrorHandler 0069                         ?_snake_getFoodPosition 0070  
                       snake_getSurroundings@i 0053                         snake_getSurroundings@p 0050  
                            ai_propagate@i_843 0057                              ai_propagate@i_846 0058  
                            ai_propagate@i_848 0059                              ai_propagate@j_845 005C  
                            ai_propagate@j_847 005B                                    de_sigmoid@z 0070  
                                     _ledClear 0E8C                                 ??_ai_propagate 004E  
                                     __ptext10 0EC8                                       __ptext11 0E1E  
                                     __ptext20 0E50                                       __ptext12 0E6F  
                                     __ptext21 0037                                       __ptext13 023A  
                                     __ptext30 0E63                                       __ptext22 0E59  
                                     __ptext14 04CE                                       __ptext31 0EB0  
                                     __ptext23 0F75                                       __ptext15 0EE2  
                                     __ptext32 0E41                                       __ptext24 009F  
                                     __ptext16 0118                                       __ptext33 0F01  
                                     __ptext25 006A                                       __ptext17 0613  
                                     __ptext34 0E2F                                       __ptext26 0004  
                                     __ptext18 0FD1                                       __ptext35 0E29  
                                     __ptext27 0E13                                       __ptext19 0F23  
                                     __ptext36 0E23                                       __ptext28 0E7C  
                                     __ptext29 0E1A                                   _SSP1CON1bits 0215  
                                 ??_sendMatrix 0073                        ?_EUSART_SetErrorHandler 0070  
                          __end_of_printString 0F49                                   ?_ai_initiate 0070  
EUSART_SetOverrunErrorHandler@interruptHandler 0070                                   ??_snake_move 0050  
        __end_of_EUSART_SetFramingErrorHandler 0E2F                  _EUSART_SetFramingErrorHandler 0E29  
                           __end_of_sendMatrix 0FD1                                     _INTCONbits 000B  
                               __pstringtext10 0850                                 __pstringtext11 0854  
                               __pstringtext12 0000                                    ??_txMAX7219 0072  
                     __end_of_ai_getInputField 0E15                               ??_snake_getField 0070  
                           __end_of_snake_move 03E4                        ?_PIN_MANAGER_Initialize 0070  
               __end_of_EUSART_SetErrorHandler 0E29                                       sigmoid@z 0070  
                             ??_snake_initiate 004E                     snake_getSurroundings@i_776 0056  
EUSART_SetFramingErrorHandler@interruptHandler 0070                                   _printInteger 0E50  
                                __pstringtext1 0800                                  __pstringtext2 0810  
                                __pstringtext3 084C                                  __pstringtext4 0820  
                                __pstringtext5 0828                                  __pstringtext6 0830  
                                __pstringtext7 0837                                  __pstringtext8 083E  
                                __pstringtext9 0845                             EUSART_Write@txData 0070  
               __end_of_PIN_MANAGER_Initialize 0EC8                                    _printString 0F23  
                   __end_of_spi1_configuration 0850  
