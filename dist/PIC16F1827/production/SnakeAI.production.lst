

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Oct 10 13:16:53 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,noexec
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    16                           	psect	inittext,global,class=CODE,delta=2
    17                           	psect	clrtext,global,class=CODE,delta=2
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2
    22                           	psect	text2,local,class=CODE,merge=1,delta=2
    23                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text4,local,class=CODE,merge=1,delta=2
    25                           	psect	text5,local,class=CODE,merge=1,delta=2
    26                           	psect	text6,local,class=CODE,merge=1,delta=2
    27                           	psect	text7,local,class=CODE,merge=1,delta=2
    28                           	psect	text8,local,class=CODE,merge=1,delta=2
    29                           	psect	text9,local,class=CODE,merge=1,delta=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2
    32                           	psect	text12,local,class=CODE,merge=1,delta=2
    33                           	psect	text13,local,class=CODE,merge=1,delta=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2
    35                           	psect	text15,local,class=CODE,merge=1,delta=2
    36                           	psect	text16,local,class=CODE,merge=1,delta=2
    37                           	psect	text17,local,class=CODE,merge=1,delta=2
    38                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text20,local,class=CODE,merge=1,delta=2
    41                           	psect	text21,local,class=CODE,merge=1,delta=2
    42                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text25,local,class=CODE,merge=1,delta=2
    46                           	psect	text26,local,class=CODE,merge=1,delta=2
    47                           	psect	text27,local,class=CODE,merge=1,delta=2
    48                           	psect	text28,local,class=CODE,merge=1,delta=2
    49                           	psect	text29,local,class=CODE,merge=1,delta=2
    50                           	psect	text30,local,class=CODE,merge=1,delta=2
    51                           	psect	text31,local,class=CODE,merge=1,delta=2
    52                           	psect	text32,local,class=CODE,merge=1,delta=2
    53                           	psect	text33,local,class=CODE,merge=1,delta=2
    54                           	psect	text34,local,class=CODE,merge=1,delta=2
    55                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    56                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    57                           	dabs	1,0x7E,2
    58     0000                     
    59                           ; Version 2.40
    60                           ; Generated 17/11/2021 GMT
    61                           ; 
    62                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution. Publication is not required when
    76                           ;        this file is used in an embedded application.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC16F1827 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94     0000                     	;# 
    95     0001                     	;# 
    96     0002                     	;# 
    97     0003                     	;# 
    98     0004                     	;# 
    99     0005                     	;# 
   100     0006                     	;# 
   101     0007                     	;# 
   102     0008                     	;# 
   103     0009                     	;# 
   104     000A                     	;# 
   105     000B                     	;# 
   106     000C                     	;# 
   107     000D                     	;# 
   108     0011                     	;# 
   109     0012                     	;# 
   110     0013                     	;# 
   111     0014                     	;# 
   112     0015                     	;# 
   113     0016                     	;# 
   114     0016                     	;# 
   115     0017                     	;# 
   116     0018                     	;# 
   117     0019                     	;# 
   118     001A                     	;# 
   119     001B                     	;# 
   120     001C                     	;# 
   121     001E                     	;# 
   122     001F                     	;# 
   123     008C                     	;# 
   124     008D                     	;# 
   125     0091                     	;# 
   126     0092                     	;# 
   127     0093                     	;# 
   128     0094                     	;# 
   129     0095                     	;# 
   130     0096                     	;# 
   131     0097                     	;# 
   132     0098                     	;# 
   133     0099                     	;# 
   134     009A                     	;# 
   135     009B                     	;# 
   136     009B                     	;# 
   137     009C                     	;# 
   138     009D                     	;# 
   139     009E                     	;# 
   140     010C                     	;# 
   141     010D                     	;# 
   142     0111                     	;# 
   143     0112                     	;# 
   144     0113                     	;# 
   145     0114                     	;# 
   146     0115                     	;# 
   147     0116                     	;# 
   148     0117                     	;# 
   149     0118                     	;# 
   150     0119                     	;# 
   151     011A                     	;# 
   152     011B                     	;# 
   153     011D                     	;# 
   154     011E                     	;# 
   155     018C                     	;# 
   156     018D                     	;# 
   157     0191                     	;# 
   158     0191                     	;# 
   159     0192                     	;# 
   160     0193                     	;# 
   161     0193                     	;# 
   162     0193                     	;# 
   163     0194                     	;# 
   164     0195                     	;# 
   165     0196                     	;# 
   166     0199                     	;# 
   167     019A                     	;# 
   168     019B                     	;# 
   169     019B                     	;# 
   170     019B                     	;# 
   171     019B                     	;# 
   172     019C                     	;# 
   173     019C                     	;# 
   174     019D                     	;# 
   175     019E                     	;# 
   176     019F                     	;# 
   177     020C                     	;# 
   178     020D                     	;# 
   179     0211                     	;# 
   180     0211                     	;# 
   181     0212                     	;# 
   182     0212                     	;# 
   183     0213                     	;# 
   184     0213                     	;# 
   185     0214                     	;# 
   186     0214                     	;# 
   187     0215                     	;# 
   188     0215                     	;# 
   189     0215                     	;# 
   190     0216                     	;# 
   191     0216                     	;# 
   192     0217                     	;# 
   193     0217                     	;# 
   194     0219                     	;# 
   195     021A                     	;# 
   196     021B                     	;# 
   197     021C                     	;# 
   198     021D                     	;# 
   199     021E                     	;# 
   200     021F                     	;# 
   201     0291                     	;# 
   202     0291                     	;# 
   203     0292                     	;# 
   204     0293                     	;# 
   205     0294                     	;# 
   206     0295                     	;# 
   207     0295                     	;# 
   208     0296                     	;# 
   209     0298                     	;# 
   210     0298                     	;# 
   211     0299                     	;# 
   212     029A                     	;# 
   213     029B                     	;# 
   214     029C                     	;# 
   215     029C                     	;# 
   216     029D                     	;# 
   217     029E                     	;# 
   218     029E                     	;# 
   219     0311                     	;# 
   220     0311                     	;# 
   221     0312                     	;# 
   222     0313                     	;# 
   223     0318                     	;# 
   224     0318                     	;# 
   225     0319                     	;# 
   226     031A                     	;# 
   227     0394                     	;# 
   228     0395                     	;# 
   229     0396                     	;# 
   230     039A                     	;# 
   231     039C                     	;# 
   232     039D                     	;# 
   233     039E                     	;# 
   234     039F                     	;# 
   235     0415                     	;# 
   236     0416                     	;# 
   237     0417                     	;# 
   238     041C                     	;# 
   239     041D                     	;# 
   240     041E                     	;# 
   241     0FE4                     	;# 
   242     0FE5                     	;# 
   243     0FE6                     	;# 
   244     0FE7                     	;# 
   245     0FE8                     	;# 
   246     0FE9                     	;# 
   247     0FEA                     	;# 
   248     0FEB                     	;# 
   249     0FED                     	;# 
   250     0FEE                     	;# 
   251     0FEF                     	;# 
   252     0000                     	;# 
   253     0001                     	;# 
   254     0002                     	;# 
   255     0003                     	;# 
   256     0004                     	;# 
   257     0005                     	;# 
   258     0006                     	;# 
   259     0007                     	;# 
   260     0008                     	;# 
   261     0009                     	;# 
   262     000A                     	;# 
   263     000B                     	;# 
   264     000C                     	;# 
   265     000D                     	;# 
   266     0011                     	;# 
   267     0012                     	;# 
   268     0013                     	;# 
   269     0014                     	;# 
   270     0015                     	;# 
   271     0016                     	;# 
   272     0016                     	;# 
   273     0017                     	;# 
   274     0018                     	;# 
   275     0019                     	;# 
   276     001A                     	;# 
   277     001B                     	;# 
   278     001C                     	;# 
   279     001E                     	;# 
   280     001F                     	;# 
   281     008C                     	;# 
   282     008D                     	;# 
   283     0091                     	;# 
   284     0092                     	;# 
   285     0093                     	;# 
   286     0094                     	;# 
   287     0095                     	;# 
   288     0096                     	;# 
   289     0097                     	;# 
   290     0098                     	;# 
   291     0099                     	;# 
   292     009A                     	;# 
   293     009B                     	;# 
   294     009B                     	;# 
   295     009C                     	;# 
   296     009D                     	;# 
   297     009E                     	;# 
   298     010C                     	;# 
   299     010D                     	;# 
   300     0111                     	;# 
   301     0112                     	;# 
   302     0113                     	;# 
   303     0114                     	;# 
   304     0115                     	;# 
   305     0116                     	;# 
   306     0117                     	;# 
   307     0118                     	;# 
   308     0119                     	;# 
   309     011A                     	;# 
   310     011B                     	;# 
   311     011D                     	;# 
   312     011E                     	;# 
   313     018C                     	;# 
   314     018D                     	;# 
   315     0191                     	;# 
   316     0191                     	;# 
   317     0192                     	;# 
   318     0193                     	;# 
   319     0193                     	;# 
   320     0193                     	;# 
   321     0194                     	;# 
   322     0195                     	;# 
   323     0196                     	;# 
   324     0199                     	;# 
   325     019A                     	;# 
   326     019B                     	;# 
   327     019B                     	;# 
   328     019B                     	;# 
   329     019B                     	;# 
   330     019C                     	;# 
   331     019C                     	;# 
   332     019D                     	;# 
   333     019E                     	;# 
   334     019F                     	;# 
   335     020C                     	;# 
   336     020D                     	;# 
   337     0211                     	;# 
   338     0211                     	;# 
   339     0212                     	;# 
   340     0212                     	;# 
   341     0213                     	;# 
   342     0213                     	;# 
   343     0214                     	;# 
   344     0214                     	;# 
   345     0215                     	;# 
   346     0215                     	;# 
   347     0215                     	;# 
   348     0216                     	;# 
   349     0216                     	;# 
   350     0217                     	;# 
   351     0217                     	;# 
   352     0219                     	;# 
   353     021A                     	;# 
   354     021B                     	;# 
   355     021C                     	;# 
   356     021D                     	;# 
   357     021E                     	;# 
   358     021F                     	;# 
   359     0291                     	;# 
   360     0291                     	;# 
   361     0292                     	;# 
   362     0293                     	;# 
   363     0294                     	;# 
   364     0295                     	;# 
   365     0295                     	;# 
   366     0296                     	;# 
   367     0298                     	;# 
   368     0298                     	;# 
   369     0299                     	;# 
   370     029A                     	;# 
   371     029B                     	;# 
   372     029C                     	;# 
   373     029C                     	;# 
   374     029D                     	;# 
   375     029E                     	;# 
   376     029E                     	;# 
   377     0311                     	;# 
   378     0311                     	;# 
   379     0312                     	;# 
   380     0313                     	;# 
   381     0318                     	;# 
   382     0318                     	;# 
   383     0319                     	;# 
   384     031A                     	;# 
   385     0394                     	;# 
   386     0395                     	;# 
   387     0396                     	;# 
   388     039A                     	;# 
   389     039C                     	;# 
   390     039D                     	;# 
   391     039E                     	;# 
   392     039F                     	;# 
   393     0415                     	;# 
   394     0416                     	;# 
   395     0417                     	;# 
   396     041C                     	;# 
   397     041D                     	;# 
   398     041E                     	;# 
   399     0FE4                     	;# 
   400     0FE5                     	;# 
   401     0FE6                     	;# 
   402     0FE7                     	;# 
   403     0FE8                     	;# 
   404     0FE9                     	;# 
   405     0FEA                     	;# 
   406     0FEB                     	;# 
   407     0FED                     	;# 
   408     0FEE                     	;# 
   409     0FEF                     	;# 
   410     0000                     	;# 
   411     0001                     	;# 
   412     0002                     	;# 
   413     0003                     	;# 
   414     0004                     	;# 
   415     0005                     	;# 
   416     0006                     	;# 
   417     0007                     	;# 
   418     0008                     	;# 
   419     0009                     	;# 
   420     000A                     	;# 
   421     000B                     	;# 
   422     000C                     	;# 
   423     000D                     	;# 
   424     0011                     	;# 
   425     0012                     	;# 
   426     0013                     	;# 
   427     0014                     	;# 
   428     0015                     	;# 
   429     0016                     	;# 
   430     0016                     	;# 
   431     0017                     	;# 
   432     0018                     	;# 
   433     0019                     	;# 
   434     001A                     	;# 
   435     001B                     	;# 
   436     001C                     	;# 
   437     001E                     	;# 
   438     001F                     	;# 
   439     008C                     	;# 
   440     008D                     	;# 
   441     0091                     	;# 
   442     0092                     	;# 
   443     0093                     	;# 
   444     0094                     	;# 
   445     0095                     	;# 
   446     0096                     	;# 
   447     0097                     	;# 
   448     0098                     	;# 
   449     0099                     	;# 
   450     009A                     	;# 
   451     009B                     	;# 
   452     009B                     	;# 
   453     009C                     	;# 
   454     009D                     	;# 
   455     009E                     	;# 
   456     010C                     	;# 
   457     010D                     	;# 
   458     0111                     	;# 
   459     0112                     	;# 
   460     0113                     	;# 
   461     0114                     	;# 
   462     0115                     	;# 
   463     0116                     	;# 
   464     0117                     	;# 
   465     0118                     	;# 
   466     0119                     	;# 
   467     011A                     	;# 
   468     011B                     	;# 
   469     011D                     	;# 
   470     011E                     	;# 
   471     018C                     	;# 
   472     018D                     	;# 
   473     0191                     	;# 
   474     0191                     	;# 
   475     0192                     	;# 
   476     0193                     	;# 
   477     0193                     	;# 
   478     0193                     	;# 
   479     0194                     	;# 
   480     0195                     	;# 
   481     0196                     	;# 
   482     0199                     	;# 
   483     019A                     	;# 
   484     019B                     	;# 
   485     019B                     	;# 
   486     019B                     	;# 
   487     019B                     	;# 
   488     019C                     	;# 
   489     019C                     	;# 
   490     019D                     	;# 
   491     019E                     	;# 
   492     019F                     	;# 
   493     020C                     	;# 
   494     020D                     	;# 
   495     0211                     	;# 
   496     0211                     	;# 
   497     0212                     	;# 
   498     0212                     	;# 
   499     0213                     	;# 
   500     0213                     	;# 
   501     0214                     	;# 
   502     0214                     	;# 
   503     0215                     	;# 
   504     0215                     	;# 
   505     0215                     	;# 
   506     0216                     	;# 
   507     0216                     	;# 
   508     0217                     	;# 
   509     0217                     	;# 
   510     0219                     	;# 
   511     021A                     	;# 
   512     021B                     	;# 
   513     021C                     	;# 
   514     021D                     	;# 
   515     021E                     	;# 
   516     021F                     	;# 
   517     0291                     	;# 
   518     0291                     	;# 
   519     0292                     	;# 
   520     0293                     	;# 
   521     0294                     	;# 
   522     0295                     	;# 
   523     0295                     	;# 
   524     0296                     	;# 
   525     0298                     	;# 
   526     0298                     	;# 
   527     0299                     	;# 
   528     029A                     	;# 
   529     029B                     	;# 
   530     029C                     	;# 
   531     029C                     	;# 
   532     029D                     	;# 
   533     029E                     	;# 
   534     029E                     	;# 
   535     0311                     	;# 
   536     0311                     	;# 
   537     0312                     	;# 
   538     0313                     	;# 
   539     0318                     	;# 
   540     0318                     	;# 
   541     0319                     	;# 
   542     031A                     	;# 
   543     0394                     	;# 
   544     0395                     	;# 
   545     0396                     	;# 
   546     039A                     	;# 
   547     039C                     	;# 
   548     039D                     	;# 
   549     039E                     	;# 
   550     039F                     	;# 
   551     0415                     	;# 
   552     0416                     	;# 
   553     0417                     	;# 
   554     041C                     	;# 
   555     041D                     	;# 
   556     041E                     	;# 
   557     0FE4                     	;# 
   558     0FE5                     	;# 
   559     0FE6                     	;# 
   560     0FE7                     	;# 
   561     0FE8                     	;# 
   562     0FE9                     	;# 
   563     0FEA                     	;# 
   564     0FEB                     	;# 
   565     0FED                     	;# 
   566     0FEE                     	;# 
   567     0FEF                     	;# 
   568     0000                     	;# 
   569     0001                     	;# 
   570     0002                     	;# 
   571     0003                     	;# 
   572     0004                     	;# 
   573     0005                     	;# 
   574     0006                     	;# 
   575     0007                     	;# 
   576     0008                     	;# 
   577     0009                     	;# 
   578     000A                     	;# 
   579     000B                     	;# 
   580     000C                     	;# 
   581     000D                     	;# 
   582     0011                     	;# 
   583     0012                     	;# 
   584     0013                     	;# 
   585     0014                     	;# 
   586     0015                     	;# 
   587     0016                     	;# 
   588     0016                     	;# 
   589     0017                     	;# 
   590     0018                     	;# 
   591     0019                     	;# 
   592     001A                     	;# 
   593     001B                     	;# 
   594     001C                     	;# 
   595     001E                     	;# 
   596     001F                     	;# 
   597     008C                     	;# 
   598     008D                     	;# 
   599     0091                     	;# 
   600     0092                     	;# 
   601     0093                     	;# 
   602     0094                     	;# 
   603     0095                     	;# 
   604     0096                     	;# 
   605     0097                     	;# 
   606     0098                     	;# 
   607     0099                     	;# 
   608     009A                     	;# 
   609     009B                     	;# 
   610     009B                     	;# 
   611     009C                     	;# 
   612     009D                     	;# 
   613     009E                     	;# 
   614     010C                     	;# 
   615     010D                     	;# 
   616     0111                     	;# 
   617     0112                     	;# 
   618     0113                     	;# 
   619     0114                     	;# 
   620     0115                     	;# 
   621     0116                     	;# 
   622     0117                     	;# 
   623     0118                     	;# 
   624     0119                     	;# 
   625     011A                     	;# 
   626     011B                     	;# 
   627     011D                     	;# 
   628     011E                     	;# 
   629     018C                     	;# 
   630     018D                     	;# 
   631     0191                     	;# 
   632     0191                     	;# 
   633     0192                     	;# 
   634     0193                     	;# 
   635     0193                     	;# 
   636     0193                     	;# 
   637     0194                     	;# 
   638     0195                     	;# 
   639     0196                     	;# 
   640     0199                     	;# 
   641     019A                     	;# 
   642     019B                     	;# 
   643     019B                     	;# 
   644     019B                     	;# 
   645     019B                     	;# 
   646     019C                     	;# 
   647     019C                     	;# 
   648     019D                     	;# 
   649     019E                     	;# 
   650     019F                     	;# 
   651     020C                     	;# 
   652     020D                     	;# 
   653     0211                     	;# 
   654     0211                     	;# 
   655     0212                     	;# 
   656     0212                     	;# 
   657     0213                     	;# 
   658     0213                     	;# 
   659     0214                     	;# 
   660     0214                     	;# 
   661     0215                     	;# 
   662     0215                     	;# 
   663     0215                     	;# 
   664     0216                     	;# 
   665     0216                     	;# 
   666     0217                     	;# 
   667     0217                     	;# 
   668     0219                     	;# 
   669     021A                     	;# 
   670     021B                     	;# 
   671     021C                     	;# 
   672     021D                     	;# 
   673     021E                     	;# 
   674     021F                     	;# 
   675     0291                     	;# 
   676     0291                     	;# 
   677     0292                     	;# 
   678     0293                     	;# 
   679     0294                     	;# 
   680     0295                     	;# 
   681     0295                     	;# 
   682     0296                     	;# 
   683     0298                     	;# 
   684     0298                     	;# 
   685     0299                     	;# 
   686     029A                     	;# 
   687     029B                     	;# 
   688     029C                     	;# 
   689     029C                     	;# 
   690     029D                     	;# 
   691     029E                     	;# 
   692     029E                     	;# 
   693     0311                     	;# 
   694     0311                     	;# 
   695     0312                     	;# 
   696     0313                     	;# 
   697     0318                     	;# 
   698     0318                     	;# 
   699     0319                     	;# 
   700     031A                     	;# 
   701     0394                     	;# 
   702     0395                     	;# 
   703     0396                     	;# 
   704     039A                     	;# 
   705     039C                     	;# 
   706     039D                     	;# 
   707     039E                     	;# 
   708     039F                     	;# 
   709     0415                     	;# 
   710     0416                     	;# 
   711     0417                     	;# 
   712     041C                     	;# 
   713     041D                     	;# 
   714     041E                     	;# 
   715     0FE4                     	;# 
   716     0FE5                     	;# 
   717     0FE6                     	;# 
   718     0FE7                     	;# 
   719     0FE8                     	;# 
   720     0FE9                     	;# 
   721     0FEA                     	;# 
   722     0FEB                     	;# 
   723     0FED                     	;# 
   724     0FEE                     	;# 
   725     0FEF                     	;# 
   726     0000                     	;# 
   727     0001                     	;# 
   728     0002                     	;# 
   729     0003                     	;# 
   730     0004                     	;# 
   731     0005                     	;# 
   732     0006                     	;# 
   733     0007                     	;# 
   734     0008                     	;# 
   735     0009                     	;# 
   736     000A                     	;# 
   737     000B                     	;# 
   738     000C                     	;# 
   739     000D                     	;# 
   740     0011                     	;# 
   741     0012                     	;# 
   742     0013                     	;# 
   743     0014                     	;# 
   744     0015                     	;# 
   745     0016                     	;# 
   746     0016                     	;# 
   747     0017                     	;# 
   748     0018                     	;# 
   749     0019                     	;# 
   750     001A                     	;# 
   751     001B                     	;# 
   752     001C                     	;# 
   753     001E                     	;# 
   754     001F                     	;# 
   755     008C                     	;# 
   756     008D                     	;# 
   757     0091                     	;# 
   758     0092                     	;# 
   759     0093                     	;# 
   760     0094                     	;# 
   761     0095                     	;# 
   762     0096                     	;# 
   763     0097                     	;# 
   764     0098                     	;# 
   765     0099                     	;# 
   766     009A                     	;# 
   767     009B                     	;# 
   768     009B                     	;# 
   769     009C                     	;# 
   770     009D                     	;# 
   771     009E                     	;# 
   772     010C                     	;# 
   773     010D                     	;# 
   774     0111                     	;# 
   775     0112                     	;# 
   776     0113                     	;# 
   777     0114                     	;# 
   778     0115                     	;# 
   779     0116                     	;# 
   780     0117                     	;# 
   781     0118                     	;# 
   782     0119                     	;# 
   783     011A                     	;# 
   784     011B                     	;# 
   785     011D                     	;# 
   786     011E                     	;# 
   787     018C                     	;# 
   788     018D                     	;# 
   789     0191                     	;# 
   790     0191                     	;# 
   791     0192                     	;# 
   792     0193                     	;# 
   793     0193                     	;# 
   794     0193                     	;# 
   795     0194                     	;# 
   796     0195                     	;# 
   797     0196                     	;# 
   798     0199                     	;# 
   799     019A                     	;# 
   800     019B                     	;# 
   801     019B                     	;# 
   802     019B                     	;# 
   803     019B                     	;# 
   804     019C                     	;# 
   805     019C                     	;# 
   806     019D                     	;# 
   807     019E                     	;# 
   808     019F                     	;# 
   809     020C                     	;# 
   810     020D                     	;# 
   811     0211                     	;# 
   812     0211                     	;# 
   813     0212                     	;# 
   814     0212                     	;# 
   815     0213                     	;# 
   816     0213                     	;# 
   817     0214                     	;# 
   818     0214                     	;# 
   819     0215                     	;# 
   820     0215                     	;# 
   821     0215                     	;# 
   822     0216                     	;# 
   823     0216                     	;# 
   824     0217                     	;# 
   825     0217                     	;# 
   826     0219                     	;# 
   827     021A                     	;# 
   828     021B                     	;# 
   829     021C                     	;# 
   830     021D                     	;# 
   831     021E                     	;# 
   832     021F                     	;# 
   833     0291                     	;# 
   834     0291                     	;# 
   835     0292                     	;# 
   836     0293                     	;# 
   837     0294                     	;# 
   838     0295                     	;# 
   839     0295                     	;# 
   840     0296                     	;# 
   841     0298                     	;# 
   842     0298                     	;# 
   843     0299                     	;# 
   844     029A                     	;# 
   845     029B                     	;# 
   846     029C                     	;# 
   847     029C                     	;# 
   848     029D                     	;# 
   849     029E                     	;# 
   850     029E                     	;# 
   851     0311                     	;# 
   852     0311                     	;# 
   853     0312                     	;# 
   854     0313                     	;# 
   855     0318                     	;# 
   856     0318                     	;# 
   857     0319                     	;# 
   858     031A                     	;# 
   859     0394                     	;# 
   860     0395                     	;# 
   861     0396                     	;# 
   862     039A                     	;# 
   863     039C                     	;# 
   864     039D                     	;# 
   865     039E                     	;# 
   866     039F                     	;# 
   867     0415                     	;# 
   868     0416                     	;# 
   869     0417                     	;# 
   870     041C                     	;# 
   871     041D                     	;# 
   872     041E                     	;# 
   873     0FE4                     	;# 
   874     0FE5                     	;# 
   875     0FE6                     	;# 
   876     0FE7                     	;# 
   877     0FE8                     	;# 
   878     0FE9                     	;# 
   879     0FEA                     	;# 
   880     0FEB                     	;# 
   881     0FED                     	;# 
   882     0FEE                     	;# 
   883     0FEF                     	;# 
   884     0000                     	;# 
   885     0001                     	;# 
   886     0002                     	;# 
   887     0003                     	;# 
   888     0004                     	;# 
   889     0005                     	;# 
   890     0006                     	;# 
   891     0007                     	;# 
   892     0008                     	;# 
   893     0009                     	;# 
   894     000A                     	;# 
   895     000B                     	;# 
   896     000C                     	;# 
   897     000D                     	;# 
   898     0011                     	;# 
   899     0012                     	;# 
   900     0013                     	;# 
   901     0014                     	;# 
   902     0015                     	;# 
   903     0016                     	;# 
   904     0016                     	;# 
   905     0017                     	;# 
   906     0018                     	;# 
   907     0019                     	;# 
   908     001A                     	;# 
   909     001B                     	;# 
   910     001C                     	;# 
   911     001E                     	;# 
   912     001F                     	;# 
   913     008C                     	;# 
   914     008D                     	;# 
   915     0091                     	;# 
   916     0092                     	;# 
   917     0093                     	;# 
   918     0094                     	;# 
   919     0095                     	;# 
   920     0096                     	;# 
   921     0097                     	;# 
   922     0098                     	;# 
   923     0099                     	;# 
   924     009A                     	;# 
   925     009B                     	;# 
   926     009B                     	;# 
   927     009C                     	;# 
   928     009D                     	;# 
   929     009E                     	;# 
   930     010C                     	;# 
   931     010D                     	;# 
   932     0111                     	;# 
   933     0112                     	;# 
   934     0113                     	;# 
   935     0114                     	;# 
   936     0115                     	;# 
   937     0116                     	;# 
   938     0117                     	;# 
   939     0118                     	;# 
   940     0119                     	;# 
   941     011A                     	;# 
   942     011B                     	;# 
   943     011D                     	;# 
   944     011E                     	;# 
   945     018C                     	;# 
   946     018D                     	;# 
   947     0191                     	;# 
   948     0191                     	;# 
   949     0192                     	;# 
   950     0193                     	;# 
   951     0193                     	;# 
   952     0193                     	;# 
   953     0194                     	;# 
   954     0195                     	;# 
   955     0196                     	;# 
   956     0199                     	;# 
   957     019A                     	;# 
   958     019B                     	;# 
   959     019B                     	;# 
   960     019B                     	;# 
   961     019B                     	;# 
   962     019C                     	;# 
   963     019C                     	;# 
   964     019D                     	;# 
   965     019E                     	;# 
   966     019F                     	;# 
   967     020C                     	;# 
   968     020D                     	;# 
   969     0211                     	;# 
   970     0211                     	;# 
   971     0212                     	;# 
   972     0212                     	;# 
   973     0213                     	;# 
   974     0213                     	;# 
   975     0214                     	;# 
   976     0214                     	;# 
   977     0215                     	;# 
   978     0215                     	;# 
   979     0215                     	;# 
   980     0216                     	;# 
   981     0216                     	;# 
   982     0217                     	;# 
   983     0217                     	;# 
   984     0219                     	;# 
   985     021A                     	;# 
   986     021B                     	;# 
   987     021C                     	;# 
   988     021D                     	;# 
   989     021E                     	;# 
   990     021F                     	;# 
   991     0291                     	;# 
   992     0291                     	;# 
   993     0292                     	;# 
   994     0293                     	;# 
   995     0294                     	;# 
   996     0295                     	;# 
   997     0295                     	;# 
   998     0296                     	;# 
   999     0298                     	;# 
  1000     0298                     	;# 
  1001     0299                     	;# 
  1002     029A                     	;# 
  1003     029B                     	;# 
  1004     029C                     	;# 
  1005     029C                     	;# 
  1006     029D                     	;# 
  1007     029E                     	;# 
  1008     029E                     	;# 
  1009     0311                     	;# 
  1010     0311                     	;# 
  1011     0312                     	;# 
  1012     0313                     	;# 
  1013     0318                     	;# 
  1014     0318                     	;# 
  1015     0319                     	;# 
  1016     031A                     	;# 
  1017     0394                     	;# 
  1018     0395                     	;# 
  1019     0396                     	;# 
  1020     039A                     	;# 
  1021     039C                     	;# 
  1022     039D                     	;# 
  1023     039E                     	;# 
  1024     039F                     	;# 
  1025     0415                     	;# 
  1026     0416                     	;# 
  1027     0417                     	;# 
  1028     041C                     	;# 
  1029     041D                     	;# 
  1030     041E                     	;# 
  1031     0FE4                     	;# 
  1032     0FE5                     	;# 
  1033     0FE6                     	;# 
  1034     0FE7                     	;# 
  1035     0FE8                     	;# 
  1036     0FE9                     	;# 
  1037     0FEA                     	;# 
  1038     0FEB                     	;# 
  1039     0FED                     	;# 
  1040     0FEE                     	;# 
  1041     0FEF                     	;# 
  1042     0000                     	;# 
  1043     0001                     	;# 
  1044     0002                     	;# 
  1045     0003                     	;# 
  1046     0004                     	;# 
  1047     0005                     	;# 
  1048     0006                     	;# 
  1049     0007                     	;# 
  1050     0008                     	;# 
  1051     0009                     	;# 
  1052     000A                     	;# 
  1053     000B                     	;# 
  1054     000C                     	;# 
  1055     000D                     	;# 
  1056     0011                     	;# 
  1057     0012                     	;# 
  1058     0013                     	;# 
  1059     0014                     	;# 
  1060     0015                     	;# 
  1061     0016                     	;# 
  1062     0016                     	;# 
  1063     0017                     	;# 
  1064     0018                     	;# 
  1065     0019                     	;# 
  1066     001A                     	;# 
  1067     001B                     	;# 
  1068     001C                     	;# 
  1069     001E                     	;# 
  1070     001F                     	;# 
  1071     008C                     	;# 
  1072     008D                     	;# 
  1073     0091                     	;# 
  1074     0092                     	;# 
  1075     0093                     	;# 
  1076     0094                     	;# 
  1077     0095                     	;# 
  1078     0096                     	;# 
  1079     0097                     	;# 
  1080     0098                     	;# 
  1081     0099                     	;# 
  1082     009A                     	;# 
  1083     009B                     	;# 
  1084     009B                     	;# 
  1085     009C                     	;# 
  1086     009D                     	;# 
  1087     009E                     	;# 
  1088     010C                     	;# 
  1089     010D                     	;# 
  1090     0111                     	;# 
  1091     0112                     	;# 
  1092     0113                     	;# 
  1093     0114                     	;# 
  1094     0115                     	;# 
  1095     0116                     	;# 
  1096     0117                     	;# 
  1097     0118                     	;# 
  1098     0119                     	;# 
  1099     011A                     	;# 
  1100     011B                     	;# 
  1101     011D                     	;# 
  1102     011E                     	;# 
  1103     018C                     	;# 
  1104     018D                     	;# 
  1105     0191                     	;# 
  1106     0191                     	;# 
  1107     0192                     	;# 
  1108     0193                     	;# 
  1109     0193                     	;# 
  1110     0193                     	;# 
  1111     0194                     	;# 
  1112     0195                     	;# 
  1113     0196                     	;# 
  1114     0199                     	;# 
  1115     019A                     	;# 
  1116     019B                     	;# 
  1117     019B                     	;# 
  1118     019B                     	;# 
  1119     019B                     	;# 
  1120     019C                     	;# 
  1121     019C                     	;# 
  1122     019D                     	;# 
  1123     019E                     	;# 
  1124     019F                     	;# 
  1125     020C                     	;# 
  1126     020D                     	;# 
  1127     0211                     	;# 
  1128     0211                     	;# 
  1129     0212                     	;# 
  1130     0212                     	;# 
  1131     0213                     	;# 
  1132     0213                     	;# 
  1133     0214                     	;# 
  1134     0214                     	;# 
  1135     0215                     	;# 
  1136     0215                     	;# 
  1137     0215                     	;# 
  1138     0216                     	;# 
  1139     0216                     	;# 
  1140     0217                     	;# 
  1141     0217                     	;# 
  1142     0219                     	;# 
  1143     021A                     	;# 
  1144     021B                     	;# 
  1145     021C                     	;# 
  1146     021D                     	;# 
  1147     021E                     	;# 
  1148     021F                     	;# 
  1149     0291                     	;# 
  1150     0291                     	;# 
  1151     0292                     	;# 
  1152     0293                     	;# 
  1153     0294                     	;# 
  1154     0295                     	;# 
  1155     0295                     	;# 
  1156     0296                     	;# 
  1157     0298                     	;# 
  1158     0298                     	;# 
  1159     0299                     	;# 
  1160     029A                     	;# 
  1161     029B                     	;# 
  1162     029C                     	;# 
  1163     029C                     	;# 
  1164     029D                     	;# 
  1165     029E                     	;# 
  1166     029E                     	;# 
  1167     0311                     	;# 
  1168     0311                     	;# 
  1169     0312                     	;# 
  1170     0313                     	;# 
  1171     0318                     	;# 
  1172     0318                     	;# 
  1173     0319                     	;# 
  1174     031A                     	;# 
  1175     0394                     	;# 
  1176     0395                     	;# 
  1177     0396                     	;# 
  1178     039A                     	;# 
  1179     039C                     	;# 
  1180     039D                     	;# 
  1181     039E                     	;# 
  1182     039F                     	;# 
  1183     0415                     	;# 
  1184     0416                     	;# 
  1185     0417                     	;# 
  1186     041C                     	;# 
  1187     041D                     	;# 
  1188     041E                     	;# 
  1189     0FE4                     	;# 
  1190     0FE5                     	;# 
  1191     0FE6                     	;# 
  1192     0FE7                     	;# 
  1193     0FE8                     	;# 
  1194     0FE9                     	;# 
  1195     0FEA                     	;# 
  1196     0FEB                     	;# 
  1197     0FED                     	;# 
  1198     0FEE                     	;# 
  1199     0FEF                     	;# 
  1200     0000                     	;# 
  1201     0001                     	;# 
  1202     0002                     	;# 
  1203     0003                     	;# 
  1204     0004                     	;# 
  1205     0005                     	;# 
  1206     0006                     	;# 
  1207     0007                     	;# 
  1208     0008                     	;# 
  1209     0009                     	;# 
  1210     000A                     	;# 
  1211     000B                     	;# 
  1212     000C                     	;# 
  1213     000D                     	;# 
  1214     0011                     	;# 
  1215     0012                     	;# 
  1216     0013                     	;# 
  1217     0014                     	;# 
  1218     0015                     	;# 
  1219     0016                     	;# 
  1220     0016                     	;# 
  1221     0017                     	;# 
  1222     0018                     	;# 
  1223     0019                     	;# 
  1224     001A                     	;# 
  1225     001B                     	;# 
  1226     001C                     	;# 
  1227     001E                     	;# 
  1228     001F                     	;# 
  1229     008C                     	;# 
  1230     008D                     	;# 
  1231     0091                     	;# 
  1232     0092                     	;# 
  1233     0093                     	;# 
  1234     0094                     	;# 
  1235     0095                     	;# 
  1236     0096                     	;# 
  1237     0097                     	;# 
  1238     0098                     	;# 
  1239     0099                     	;# 
  1240     009A                     	;# 
  1241     009B                     	;# 
  1242     009B                     	;# 
  1243     009C                     	;# 
  1244     009D                     	;# 
  1245     009E                     	;# 
  1246     010C                     	;# 
  1247     010D                     	;# 
  1248     0111                     	;# 
  1249     0112                     	;# 
  1250     0113                     	;# 
  1251     0114                     	;# 
  1252     0115                     	;# 
  1253     0116                     	;# 
  1254     0117                     	;# 
  1255     0118                     	;# 
  1256     0119                     	;# 
  1257     011A                     	;# 
  1258     011B                     	;# 
  1259     011D                     	;# 
  1260     011E                     	;# 
  1261     018C                     	;# 
  1262     018D                     	;# 
  1263     0191                     	;# 
  1264     0191                     	;# 
  1265     0192                     	;# 
  1266     0193                     	;# 
  1267     0193                     	;# 
  1268     0193                     	;# 
  1269     0194                     	;# 
  1270     0195                     	;# 
  1271     0196                     	;# 
  1272     0199                     	;# 
  1273     019A                     	;# 
  1274     019B                     	;# 
  1275     019B                     	;# 
  1276     019B                     	;# 
  1277     019B                     	;# 
  1278     019C                     	;# 
  1279     019C                     	;# 
  1280     019D                     	;# 
  1281     019E                     	;# 
  1282     019F                     	;# 
  1283     020C                     	;# 
  1284     020D                     	;# 
  1285     0211                     	;# 
  1286     0211                     	;# 
  1287     0212                     	;# 
  1288     0212                     	;# 
  1289     0213                     	;# 
  1290     0213                     	;# 
  1291     0214                     	;# 
  1292     0214                     	;# 
  1293     0215                     	;# 
  1294     0215                     	;# 
  1295     0215                     	;# 
  1296     0216                     	;# 
  1297     0216                     	;# 
  1298     0217                     	;# 
  1299     0217                     	;# 
  1300     0219                     	;# 
  1301     021A                     	;# 
  1302     021B                     	;# 
  1303     021C                     	;# 
  1304     021D                     	;# 
  1305     021E                     	;# 
  1306     021F                     	;# 
  1307     0291                     	;# 
  1308     0291                     	;# 
  1309     0292                     	;# 
  1310     0293                     	;# 
  1311     0294                     	;# 
  1312     0295                     	;# 
  1313     0295                     	;# 
  1314     0296                     	;# 
  1315     0298                     	;# 
  1316     0298                     	;# 
  1317     0299                     	;# 
  1318     029A                     	;# 
  1319     029B                     	;# 
  1320     029C                     	;# 
  1321     029C                     	;# 
  1322     029D                     	;# 
  1323     029E                     	;# 
  1324     029E                     	;# 
  1325     0311                     	;# 
  1326     0311                     	;# 
  1327     0312                     	;# 
  1328     0313                     	;# 
  1329     0318                     	;# 
  1330     0318                     	;# 
  1331     0319                     	;# 
  1332     031A                     	;# 
  1333     0394                     	;# 
  1334     0395                     	;# 
  1335     0396                     	;# 
  1336     039A                     	;# 
  1337     039C                     	;# 
  1338     039D                     	;# 
  1339     039E                     	;# 
  1340     039F                     	;# 
  1341     0415                     	;# 
  1342     0416                     	;# 
  1343     0417                     	;# 
  1344     041C                     	;# 
  1345     041D                     	;# 
  1346     041E                     	;# 
  1347     0FE4                     	;# 
  1348     0FE5                     	;# 
  1349     0FE6                     	;# 
  1350     0FE7                     	;# 
  1351     0FE8                     	;# 
  1352     0FE9                     	;# 
  1353     0FEA                     	;# 
  1354     0FEB                     	;# 
  1355     0FED                     	;# 
  1356     0FEE                     	;# 
  1357     0FEF                     	;# 
  1358     0000                     	;# 
  1359     0001                     	;# 
  1360     0002                     	;# 
  1361     0003                     	;# 
  1362     0004                     	;# 
  1363     0005                     	;# 
  1364     0006                     	;# 
  1365     0007                     	;# 
  1366     0008                     	;# 
  1367     0009                     	;# 
  1368     000A                     	;# 
  1369     000B                     	;# 
  1370     000C                     	;# 
  1371     000D                     	;# 
  1372     0011                     	;# 
  1373     0012                     	;# 
  1374     0013                     	;# 
  1375     0014                     	;# 
  1376     0015                     	;# 
  1377     0016                     	;# 
  1378     0016                     	;# 
  1379     0017                     	;# 
  1380     0018                     	;# 
  1381     0019                     	;# 
  1382     001A                     	;# 
  1383     001B                     	;# 
  1384     001C                     	;# 
  1385     001E                     	;# 
  1386     001F                     	;# 
  1387     008C                     	;# 
  1388     008D                     	;# 
  1389     0091                     	;# 
  1390     0092                     	;# 
  1391     0093                     	;# 
  1392     0094                     	;# 
  1393     0095                     	;# 
  1394     0096                     	;# 
  1395     0097                     	;# 
  1396     0098                     	;# 
  1397     0099                     	;# 
  1398     009A                     	;# 
  1399     009B                     	;# 
  1400     009B                     	;# 
  1401     009C                     	;# 
  1402     009D                     	;# 
  1403     009E                     	;# 
  1404     010C                     	;# 
  1405     010D                     	;# 
  1406     0111                     	;# 
  1407     0112                     	;# 
  1408     0113                     	;# 
  1409     0114                     	;# 
  1410     0115                     	;# 
  1411     0116                     	;# 
  1412     0117                     	;# 
  1413     0118                     	;# 
  1414     0119                     	;# 
  1415     011A                     	;# 
  1416     011B                     	;# 
  1417     011D                     	;# 
  1418     011E                     	;# 
  1419     018C                     	;# 
  1420     018D                     	;# 
  1421     0191                     	;# 
  1422     0191                     	;# 
  1423     0192                     	;# 
  1424     0193                     	;# 
  1425     0193                     	;# 
  1426     0193                     	;# 
  1427     0194                     	;# 
  1428     0195                     	;# 
  1429     0196                     	;# 
  1430     0199                     	;# 
  1431     019A                     	;# 
  1432     019B                     	;# 
  1433     019B                     	;# 
  1434     019B                     	;# 
  1435     019B                     	;# 
  1436     019C                     	;# 
  1437     019C                     	;# 
  1438     019D                     	;# 
  1439     019E                     	;# 
  1440     019F                     	;# 
  1441     020C                     	;# 
  1442     020D                     	;# 
  1443     0211                     	;# 
  1444     0211                     	;# 
  1445     0212                     	;# 
  1446     0212                     	;# 
  1447     0213                     	;# 
  1448     0213                     	;# 
  1449     0214                     	;# 
  1450     0214                     	;# 
  1451     0215                     	;# 
  1452     0215                     	;# 
  1453     0215                     	;# 
  1454     0216                     	;# 
  1455     0216                     	;# 
  1456     0217                     	;# 
  1457     0217                     	;# 
  1458     0219                     	;# 
  1459     021A                     	;# 
  1460     021B                     	;# 
  1461     021C                     	;# 
  1462     021D                     	;# 
  1463     021E                     	;# 
  1464     021F                     	;# 
  1465     0291                     	;# 
  1466     0291                     	;# 
  1467     0292                     	;# 
  1468     0293                     	;# 
  1469     0294                     	;# 
  1470     0295                     	;# 
  1471     0295                     	;# 
  1472     0296                     	;# 
  1473     0298                     	;# 
  1474     0298                     	;# 
  1475     0299                     	;# 
  1476     029A                     	;# 
  1477     029B                     	;# 
  1478     029C                     	;# 
  1479     029C                     	;# 
  1480     029D                     	;# 
  1481     029E                     	;# 
  1482     029E                     	;# 
  1483     0311                     	;# 
  1484     0311                     	;# 
  1485     0312                     	;# 
  1486     0313                     	;# 
  1487     0318                     	;# 
  1488     0318                     	;# 
  1489     0319                     	;# 
  1490     031A                     	;# 
  1491     0394                     	;# 
  1492     0395                     	;# 
  1493     0396                     	;# 
  1494     039A                     	;# 
  1495     039C                     	;# 
  1496     039D                     	;# 
  1497     039E                     	;# 
  1498     039F                     	;# 
  1499     0415                     	;# 
  1500     0416                     	;# 
  1501     0417                     	;# 
  1502     041C                     	;# 
  1503     041D                     	;# 
  1504     041E                     	;# 
  1505     0FE4                     	;# 
  1506     0FE5                     	;# 
  1507     0FE6                     	;# 
  1508     0FE7                     	;# 
  1509     0FE8                     	;# 
  1510     0FE9                     	;# 
  1511     0FEA                     	;# 
  1512     0FEB                     	;# 
  1513     0FED                     	;# 
  1514     0FEE                     	;# 
  1515     0FEF                     	;# 
  1516     0000                     	;# 
  1517     0001                     	;# 
  1518     0002                     	;# 
  1519     0003                     	;# 
  1520     0004                     	;# 
  1521     0005                     	;# 
  1522     0006                     	;# 
  1523     0007                     	;# 
  1524     0008                     	;# 
  1525     0009                     	;# 
  1526     000A                     	;# 
  1527     000B                     	;# 
  1528     000C                     	;# 
  1529     000D                     	;# 
  1530     0011                     	;# 
  1531     0012                     	;# 
  1532     0013                     	;# 
  1533     0014                     	;# 
  1534     0015                     	;# 
  1535     0016                     	;# 
  1536     0016                     	;# 
  1537     0017                     	;# 
  1538     0018                     	;# 
  1539     0019                     	;# 
  1540     001A                     	;# 
  1541     001B                     	;# 
  1542     001C                     	;# 
  1543     001E                     	;# 
  1544     001F                     	;# 
  1545     008C                     	;# 
  1546     008D                     	;# 
  1547     0091                     	;# 
  1548     0092                     	;# 
  1549     0093                     	;# 
  1550     0094                     	;# 
  1551     0095                     	;# 
  1552     0096                     	;# 
  1553     0097                     	;# 
  1554     0098                     	;# 
  1555     0099                     	;# 
  1556     009A                     	;# 
  1557     009B                     	;# 
  1558     009B                     	;# 
  1559     009C                     	;# 
  1560     009D                     	;# 
  1561     009E                     	;# 
  1562     010C                     	;# 
  1563     010D                     	;# 
  1564     0111                     	;# 
  1565     0112                     	;# 
  1566     0113                     	;# 
  1567     0114                     	;# 
  1568     0115                     	;# 
  1569     0116                     	;# 
  1570     0117                     	;# 
  1571     0118                     	;# 
  1572     0119                     	;# 
  1573     011A                     	;# 
  1574     011B                     	;# 
  1575     011D                     	;# 
  1576     011E                     	;# 
  1577     018C                     	;# 
  1578     018D                     	;# 
  1579     0191                     	;# 
  1580     0191                     	;# 
  1581     0192                     	;# 
  1582     0193                     	;# 
  1583     0193                     	;# 
  1584     0193                     	;# 
  1585     0194                     	;# 
  1586     0195                     	;# 
  1587     0196                     	;# 
  1588     0199                     	;# 
  1589     019A                     	;# 
  1590     019B                     	;# 
  1591     019B                     	;# 
  1592     019B                     	;# 
  1593     019B                     	;# 
  1594     019C                     	;# 
  1595     019C                     	;# 
  1596     019D                     	;# 
  1597     019E                     	;# 
  1598     019F                     	;# 
  1599     020C                     	;# 
  1600     020D                     	;# 
  1601     0211                     	;# 
  1602     0211                     	;# 
  1603     0212                     	;# 
  1604     0212                     	;# 
  1605     0213                     	;# 
  1606     0213                     	;# 
  1607     0214                     	;# 
  1608     0214                     	;# 
  1609     0215                     	;# 
  1610     0215                     	;# 
  1611     0215                     	;# 
  1612     0216                     	;# 
  1613     0216                     	;# 
  1614     0217                     	;# 
  1615     0217                     	;# 
  1616     0219                     	;# 
  1617     021A                     	;# 
  1618     021B                     	;# 
  1619     021C                     	;# 
  1620     021D                     	;# 
  1621     021E                     	;# 
  1622     021F                     	;# 
  1623     0291                     	;# 
  1624     0291                     	;# 
  1625     0292                     	;# 
  1626     0293                     	;# 
  1627     0294                     	;# 
  1628     0295                     	;# 
  1629     0295                     	;# 
  1630     0296                     	;# 
  1631     0298                     	;# 
  1632     0298                     	;# 
  1633     0299                     	;# 
  1634     029A                     	;# 
  1635     029B                     	;# 
  1636     029C                     	;# 
  1637     029C                     	;# 
  1638     029D                     	;# 
  1639     029E                     	;# 
  1640     029E                     	;# 
  1641     0311                     	;# 
  1642     0311                     	;# 
  1643     0312                     	;# 
  1644     0313                     	;# 
  1645     0318                     	;# 
  1646     0318                     	;# 
  1647     0319                     	;# 
  1648     031A                     	;# 
  1649     0394                     	;# 
  1650     0395                     	;# 
  1651     0396                     	;# 
  1652     039A                     	;# 
  1653     039C                     	;# 
  1654     039D                     	;# 
  1655     039E                     	;# 
  1656     039F                     	;# 
  1657     0415                     	;# 
  1658     0416                     	;# 
  1659     0417                     	;# 
  1660     041C                     	;# 
  1661     041D                     	;# 
  1662     041E                     	;# 
  1663     0FE4                     	;# 
  1664     0FE5                     	;# 
  1665     0FE6                     	;# 
  1666     0FE7                     	;# 
  1667     0FE8                     	;# 
  1668     0FE9                     	;# 
  1669     0FEA                     	;# 
  1670     0FEB                     	;# 
  1671     0FED                     	;# 
  1672     0FEE                     	;# 
  1673     0FEF                     	;# 
  1674     0000                     	;# 
  1675     0001                     	;# 
  1676     0002                     	;# 
  1677     0003                     	;# 
  1678     0004                     	;# 
  1679     0005                     	;# 
  1680     0006                     	;# 
  1681     0007                     	;# 
  1682     0008                     	;# 
  1683     0009                     	;# 
  1684     000A                     	;# 
  1685     000B                     	;# 
  1686     000C                     	;# 
  1687     000D                     	;# 
  1688     0011                     	;# 
  1689     0012                     	;# 
  1690     0013                     	;# 
  1691     0014                     	;# 
  1692     0015                     	;# 
  1693     0016                     	;# 
  1694     0016                     	;# 
  1695     0017                     	;# 
  1696     0018                     	;# 
  1697     0019                     	;# 
  1698     001A                     	;# 
  1699     001B                     	;# 
  1700     001C                     	;# 
  1701     001E                     	;# 
  1702     001F                     	;# 
  1703     008C                     	;# 
  1704     008D                     	;# 
  1705     0091                     	;# 
  1706     0092                     	;# 
  1707     0093                     	;# 
  1708     0094                     	;# 
  1709     0095                     	;# 
  1710     0096                     	;# 
  1711     0097                     	;# 
  1712     0098                     	;# 
  1713     0099                     	;# 
  1714     009A                     	;# 
  1715     009B                     	;# 
  1716     009B                     	;# 
  1717     009C                     	;# 
  1718     009D                     	;# 
  1719     009E                     	;# 
  1720     010C                     	;# 
  1721     010D                     	;# 
  1722     0111                     	;# 
  1723     0112                     	;# 
  1724     0113                     	;# 
  1725     0114                     	;# 
  1726     0115                     	;# 
  1727     0116                     	;# 
  1728     0117                     	;# 
  1729     0118                     	;# 
  1730     0119                     	;# 
  1731     011A                     	;# 
  1732     011B                     	;# 
  1733     011D                     	;# 
  1734     011E                     	;# 
  1735     018C                     	;# 
  1736     018D                     	;# 
  1737     0191                     	;# 
  1738     0191                     	;# 
  1739     0192                     	;# 
  1740     0193                     	;# 
  1741     0193                     	;# 
  1742     0193                     	;# 
  1743     0194                     	;# 
  1744     0195                     	;# 
  1745     0196                     	;# 
  1746     0199                     	;# 
  1747     019A                     	;# 
  1748     019B                     	;# 
  1749     019B                     	;# 
  1750     019B                     	;# 
  1751     019B                     	;# 
  1752     019C                     	;# 
  1753     019C                     	;# 
  1754     019D                     	;# 
  1755     019E                     	;# 
  1756     019F                     	;# 
  1757     020C                     	;# 
  1758     020D                     	;# 
  1759     0211                     	;# 
  1760     0211                     	;# 
  1761     0212                     	;# 
  1762     0212                     	;# 
  1763     0213                     	;# 
  1764     0213                     	;# 
  1765     0214                     	;# 
  1766     0214                     	;# 
  1767     0215                     	;# 
  1768     0215                     	;# 
  1769     0215                     	;# 
  1770     0216                     	;# 
  1771     0216                     	;# 
  1772     0217                     	;# 
  1773     0217                     	;# 
  1774     0219                     	;# 
  1775     021A                     	;# 
  1776     021B                     	;# 
  1777     021C                     	;# 
  1778     021D                     	;# 
  1779     021E                     	;# 
  1780     021F                     	;# 
  1781     0291                     	;# 
  1782     0291                     	;# 
  1783     0292                     	;# 
  1784     0293                     	;# 
  1785     0294                     	;# 
  1786     0295                     	;# 
  1787     0295                     	;# 
  1788     0296                     	;# 
  1789     0298                     	;# 
  1790     0298                     	;# 
  1791     0299                     	;# 
  1792     029A                     	;# 
  1793     029B                     	;# 
  1794     029C                     	;# 
  1795     029C                     	;# 
  1796     029D                     	;# 
  1797     029E                     	;# 
  1798     029E                     	;# 
  1799     0311                     	;# 
  1800     0311                     	;# 
  1801     0312                     	;# 
  1802     0313                     	;# 
  1803     0318                     	;# 
  1804     0318                     	;# 
  1805     0319                     	;# 
  1806     031A                     	;# 
  1807     0394                     	;# 
  1808     0395                     	;# 
  1809     0396                     	;# 
  1810     039A                     	;# 
  1811     039C                     	;# 
  1812     039D                     	;# 
  1813     039E                     	;# 
  1814     039F                     	;# 
  1815     0415                     	;# 
  1816     0416                     	;# 
  1817     0417                     	;# 
  1818     041C                     	;# 
  1819     041D                     	;# 
  1820     041E                     	;# 
  1821     0FE4                     	;# 
  1822     0FE5                     	;# 
  1823     0FE6                     	;# 
  1824     0FE7                     	;# 
  1825     0FE8                     	;# 
  1826     0FE9                     	;# 
  1827     0FEA                     	;# 
  1828     0FEB                     	;# 
  1829     0FED                     	;# 
  1830     0FEE                     	;# 
  1831     0FEF                     	;# 
  1832                           
  1833 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  1834     0000                     
  1835 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  1836     0000                     
  1837 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  1838     0000                     
  1839                           	psect	idataBANK1
  1840     0D0A                     __pidataBANK1:
  1841                           
  1842                           ;initializer for _mapping
  1843     0D0A  340B               	retlw	11
  1844     0D0B  340F               	retlw	15
  1845     0D0C  3403               	retlw	3
  1846     0D0D  3404               	retlw	4
  1847     0D0E  3405               	retlw	5
  1848     0D0F  3401               	retlw	1
  1849     0D10  340D               	retlw	13
  1850     0D11  340C               	retlw	12
  1851                           
  1852                           	psect	stringtext1
  1853     0800                     __pstringtext1:
  1854     0800                     _de_sigmoidValues:
  1855     0800  3440               	retlw	64
  1856     0801  3432               	retlw	50
  1857     0802  341B               	retlw	27
  1858     0803  3410               	retlw	16
  1859     0804  3410               	retlw	16
  1860     0805  3410               	retlw	16
  1861     0806  3410               	retlw	16
  1862     0807  3410               	retlw	16
  1863     0808  3410               	retlw	16
  1864     0809  3410               	retlw	16
  1865     080A  3410               	retlw	16
  1866     080B  3410               	retlw	16
  1867     080C  3410               	retlw	16
  1868     080D  3410               	retlw	16
  1869     080E  341B               	retlw	27
  1870     080F  3432               	retlw	50
  1871     0810                     __end_of_de_sigmoidValues:
  1872                           
  1873                           	psect	stringtext2
  1874     0810                     __pstringtext2:
  1875     0810                     _sigmoidValues:
  1876     0810  3480               	retlw	128
  1877     0811  34BA               	retlw	186
  1878     0812  34E1               	retlw	225
  1879     0813  34F3               	retlw	243
  1880     0814  34FA               	retlw	250
  1881     0815  34FD               	retlw	253
  1882     0816  34FE               	retlw	254
  1883     0817  34FF               	retlw	255
  1884     0818  3410               	retlw	16
  1885     0819  3410               	retlw	16
  1886     081A  3410               	retlw	16
  1887     081B  3410               	retlw	16
  1888     081C  3410               	retlw	16
  1889     081D  3410               	retlw	16
  1890     081E  341E               	retlw	30
  1891     081F  3445               	retlw	69
  1892     0820                     __end_of_sigmoidValues:
  1893                           
  1894                           	psect	stringtext3
  1895     0820                     __pstringtext3:
  1896     0820                     _spi1_configuration:
  1897     0820  3402               	retlw	2
  1898     0821  3440               	retlw	64
  1899     0822  3401               	retlw	1
  1900     0823  3400               	retlw	0
  1901     0824                     __end_of_spi1_configuration:
  1902                           
  1903                           	psect	nvBANK1
  1904     00EC                     __pnvBANK1:
  1905     00EC                     _EUSART_OverrunErrorHandler:
  1906     00EC                     	ds	2
  1907     00EE                     _EUSART_FramingErrorHandler:
  1908     00EE                     	ds	2
  1909                           
  1910                           	psect	nvBANK2
  1911     0160                     __pnvBANK2:
  1912     0160                     _EUSART_ErrorHandler:
  1913     0160                     	ds	2
  1914     0011                     _PIR1bits	set	17
  1915     000B                     _INTCONbits	set	11
  1916     008C                     _TRISAbits	set	140
  1917     0097                     _WDTCON	set	151
  1918     0098                     _OSCTUNE	set	152
  1919     0099                     _OSCCON	set	153
  1920     008D                     _TRISBbits	set	141
  1921     0095                     _OPTION_REGbits	set	149
  1922     008D                     _TRISB	set	141
  1923     008C                     _TRISA	set	140
  1924     010D                     _LATBbits	set	269
  1925     010C                     _LATAbits	set	268
  1926     0116                     _BORCON	set	278
  1927     011E                     _APFCON1	set	286
  1928     011D                     _APFCON0	set	285
  1929     010D                     _LATB	set	269
  1930     010C                     _LATA	set	268
  1931     018C                     _ANSELA	set	396
  1932     018D                     _ANSELB	set	397
  1933     019A                     _TXREG	set	410
  1934     0199                     _RCREG	set	409
  1935     019D                     _RCSTAbits	set	413
  1936     019E                     _TXSTAbits	set	414
  1937     019C                     _SPBRGH	set	412
  1938     019B                     _SPBRGL	set	411
  1939     019E                     _TXSTA	set	414
  1940     019D                     _RCSTA	set	413
  1941     019F                     _BAUDCON	set	415
  1942     0196                     _EECON2	set	406
  1943     0193                     _EEDATL	set	403
  1944     0194                     _EEDATH	set	404
  1945     0195                     _EECON1bits	set	405
  1946     0192                     _EEADRH	set	402
  1947     0191                     _EEADRL	set	401
  1948     0211                     _SSP1BUF	set	529
  1949     0216                     _SSP1CON2	set	534
  1950     0215                     _SSP1CON1bits	set	533
  1951     0212                     _SSP1ADD	set	530
  1952     0215                     _SSP1CON1	set	533
  1953     0214                     _SSP1STAT	set	532
  1954     020C                     _WPUA	set	524
  1955     020D                     _WPUB	set	525
  1956                           
  1957                           	psect	cinit
  1958     07D1                     start_initialization:	
  1959                           ; #config settings
  1960                           
  1961     07D1                     __initialization:
  1962                           
  1963                           ; Initialize objects allocated to BANK1
  1964     07D1  300A               	movlw	low __pidataBANK1
  1965     07D2  0084               	movwf	4
  1966     07D3  308D               	movlw	(high __pidataBANK1)| (0+128)
  1967     07D4  0085               	movwf	5
  1968     07D5  30E4               	movlw	low __pdataBANK1
  1969     07D6  0086               	movwf	6
  1970     07D7  3000               	movlw	high __pdataBANK1
  1971     07D8  0087               	movwf	7
  1972     07D9  3008               	movlw	8
  1973     07DA  318C  24FD  3187   	fcall	init_ram
  1974                           
  1975                           ; Clear objects allocated to BANK0
  1976     07DD  3049               	movlw	low __pbssBANK0
  1977     07DE  0084               	movwf	4
  1978     07DF  3000               	movlw	high __pbssBANK0
  1979     07E0  0085               	movwf	5
  1980     07E1  3026               	movlw	38
  1981     07E2  318C  24F7  3187   	fcall	clear_ram0
  1982                           
  1983                           ; Clear objects allocated to BANK1
  1984     07E5  30A0               	movlw	low __pbssBANK1
  1985     07E6  0084               	movwf	4
  1986     07E7  3000               	movlw	high __pbssBANK1
  1987     07E8  0085               	movwf	5
  1988     07E9  3044               	movlw	68
  1989     07EA  318C  24F7  3187   	fcall	clear_ram0
  1990                           
  1991                           ; Clear objects allocated to BANK2
  1992     07ED  3020               	movlw	low __pbssBANK2
  1993     07EE  0084               	movwf	4
  1994     07EF  3001               	movlw	high __pbssBANK2
  1995     07F0  0085               	movwf	5
  1996     07F1  3040               	movlw	64
  1997     07F2  318C  24F7  3187   	fcall	clear_ram0
  1998                           
  1999                           ; Clear objects allocated to BANK3
  2000     07F5  30A0               	movlw	low __pbssBANK3
  2001     07F6  0084               	movwf	4
  2002     07F7  3001               	movlw	high __pbssBANK3
  2003     07F8  0085               	movwf	5
  2004     07F9  3020               	movlw	32
  2005     07FA  318C  24F7  3187   	fcall	clear_ram0
  2006     07FD                     end_of_initialization:	
  2007                           ;End of C runtime variable initialization code
  2008                           
  2009     07FD                     __end_of__initialization:
  2010     07FD  0020               	movlb	0
  2011     07FE  3183  2B84         	ljmp	_main	;jump to C main() function
  2012                           
  2013                           	psect	bssBANK0
  2014     0049                     __pbssBANK0:
  2015     0049                     _DC_DZ2:
  2016     0049                     	ds	8
  2017     0051                     _B1:
  2018     0051                     	ds	4
  2019     0055                     _Y2:
  2020     0055                     	ds	4
  2021     0059                     _Y1:
  2022     0059                     	ds	4
  2023     005D                     _remainingMoves:
  2024     005D                     	ds	1
  2025     005E                     _foodPosition:
  2026     005E                     	ds	1
  2027     005F                     _headPosition:
  2028     005F                     	ds	1
  2029     0060                     _choice:
  2030     0060                     	ds	1
  2031     0061                     _snakeSize:
  2032     0061                     	ds	1
  2033     0062                     _eusartRxLastError:
  2034     0062                     	ds	1
  2035     0063                     _Y0:
  2036     0063                     	ds	8
  2037     006B                     _seed:
  2038     006B                     	ds	4
  2039                           
  2040                           	psect	bssBANK1
  2041     00A0                     __pbssBANK1:
  2042     00A0                     _DC_DZ1:
  2043     00A0                     	ds	8
  2044     00A8                     _Z2:
  2045     00A8                     	ds	8
  2046     00B0                     _Z1:
  2047     00B0                     	ds	8
  2048     00B8                     _matrix:
  2049     00B8                     	ds	8
  2050     00C0                     _DC_DB1:
  2051     00C0                     	ds	4
  2052     00C4                     _DC_DY1:
  2053     00C4                     	ds	4
  2054     00C8                     _DC_DB2:
  2055     00C8                     	ds	4
  2056     00CC                     _DC_DY2:
  2057     00CC                     	ds	4
  2058     00D0                     _B2:
  2059     00D0                     	ds	4
  2060     00D4                     _field:
  2061     00D4                     	ds	16
  2062                           
  2063                           	psect	dataBANK1
  2064     00E4                     __pdataBANK1:
  2065     00E4                     _mapping:
  2066     00E4                     	ds	8
  2067                           
  2068                           	psect	bssBANK2
  2069     0120                     __pbssBANK2:
  2070     0120                     _W1:
  2071     0120                     	ds	32
  2072     0140                     _DC_DW2:
  2073     0140                     	ds	16
  2074     0150                     _W2:
  2075     0150                     	ds	16
  2076                           
  2077                           	psect	bssBANK3
  2078     01A0                     __pbssBANK3:
  2079     01A0                     _DC_DW1:
  2080     01A0                     	ds	32
  2081                           
  2082                           	psect	inittext
  2083     0CFD                     init_ram:
  2084     0CFD  00FE               	movwf	btemp
  2085     0CFE                     initloop:
  2086     0CFE  0012               	moviw fsr0++
  2087     0CFF  001E               	movwi fsr1++
  2088     0D00  0BFE               	decfsz	btemp,f
  2089     0D01  2CFE               	goto	initloop
  2090     0D02  3400               	retlw	0
  2091                           
  2092                           	psect	clrtext
  2093     0CF7                     clear_ram0:	
  2094                           ;	Called with FSR0 containing the base address, and
  2095                           ;	WREG with the size to clear
  2096                           
  2097     0CF7  0064               	clrwdt	;clear the watchdog before getting into this loop
  2098     0CF8                     clrloop0:
  2099     0CF8  0180               	clrf	0	;clear RAM location pointed to by FSR
  2100     0CF9  3101               	addfsr 0,1
  2101     0CFA  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2102     0CFB  2CF8               	goto	clrloop0	;have we reached the end yet?
  2103     0CFC  3400               	retlw	0	;all done for this memory range, return
  2104                           
  2105                           	psect	cstackCOMMON
  2106     0070                     __pcstackCOMMON:
  2107     0070                     ?_EUSART_SetFramingErrorHandler:
  2108     0070                     ?_EUSART_SetOverrunErrorHandler:	
  2109                           ; 1 bytes @ 0x0
  2110                           
  2111     0070                     ?_EUSART_SetErrorHandler:	
  2112                           ; 1 bytes @ 0x0
  2113                           
  2114     0070                     ?_OSCILLATOR_Initialize:	
  2115                           ; 1 bytes @ 0x0
  2116                           
  2117     0070                     ??_OSCILLATOR_Initialize:	
  2118                           ; 1 bytes @ 0x0
  2119                           
  2120     0070                     ?_WDT_Initialize:	
  2121                           ; 1 bytes @ 0x0
  2122                           
  2123     0070                     ??_WDT_Initialize:	
  2124                           ; 1 bytes @ 0x0
  2125                           
  2126     0070                     ?_snake_initiate:	
  2127                           ; 1 bytes @ 0x0
  2128                           
  2129     0070                     ?_ai_initiate:	
  2130                           ; 1 bytes @ 0x0
  2131                           
  2132     0070                     ?_initMAX7219:	
  2133                           ; 1 bytes @ 0x0
  2134                           
  2135     0070                     ?_snake_getField:	
  2136                           ; 1 bytes @ 0x0
  2137                           
  2138     0070                     ??_snake_getField:	
  2139                           ; 1 bytes @ 0x0
  2140                           
  2141     0070                     ?_ledClear:	
  2142                           ; 1 bytes @ 0x0
  2143                           
  2144     0070                     ?_snake_getFoodPosition:	
  2145                           ; 1 bytes @ 0x0
  2146                           
  2147     0070                     ??_snake_getFoodPosition:	
  2148                           ; 1 bytes @ 0x0
  2149                           
  2150     0070                     ?_sendMatrix:	
  2151                           ; 1 bytes @ 0x0
  2152                           
  2153     0070                     ?_snake_getSurroundings:	
  2154                           ; 1 bytes @ 0x0
  2155                           
  2156     0070                     ?_ai_getInputField:	
  2157                           ; 1 bytes @ 0x0
  2158                           
  2159     0070                     ??_ai_getInputField:	
  2160                           ; 1 bytes @ 0x0
  2161                           
  2162     0070                     ?_ai_run:	
  2163                           ; 1 bytes @ 0x0
  2164                           
  2165     0070                     ?_snake_move:	
  2166                           ; 1 bytes @ 0x0
  2167                           
  2168     0070                     ?_ai_propagate:	
  2169                           ; 1 bytes @ 0x0
  2170                           
  2171     0070                     ?_srand:	
  2172                           ; 1 bytes @ 0x0
  2173                           
  2174     0070                     ?_de_sigmoid:	
  2175                           ; 1 bytes @ 0x0
  2176                           
  2177     0070                     ?_EUSART_Initialize:	
  2178                           ; 1 bytes @ 0x0
  2179                           
  2180     0070                     ?_EUSART_Write:	
  2181                           ; 1 bytes @ 0x0
  2182                           
  2183     0070                     ??_EUSART_Write:	
  2184                           ; 1 bytes @ 0x0
  2185                           
  2186     0070                     ?_PIN_MANAGER_Initialize:	
  2187                           ; 1 bytes @ 0x0
  2188                           
  2189     0070                     ??_PIN_MANAGER_Initialize:	
  2190                           ; 1 bytes @ 0x0
  2191                           
  2192     0070                     ?_SPI1_Initialize:	
  2193                           ; 1 bytes @ 0x0
  2194                           
  2195     0070                     ??_SPI1_Initialize:	
  2196                           ; 1 bytes @ 0x0
  2197                           
  2198     0070                     ?_SPI1_WriteByte:	
  2199                           ; 1 bytes @ 0x0
  2200                           
  2201     0070                     ??_SPI1_WriteByte:	
  2202                           ; 1 bytes @ 0x0
  2203                           
  2204     0070                     ?_SYSTEM_Initialize:	
  2205                           ; 1 bytes @ 0x0
  2206                           
  2207     0070                     ?_deactivateElevator:	
  2208                           ; 1 bytes @ 0x0
  2209                           
  2210     0070                     ??_deactivateElevator:	
  2211                           ; 1 bytes @ 0x0
  2212                           
  2213     0070                     ?_main:	
  2214                           ; 1 bytes @ 0x0
  2215                           
  2216     0070                     ?___lmul:	
  2217                           ; 1 bytes @ 0x0
  2218                           
  2219     0070                     EUSART_Write@txData:	
  2220                           ; 4 bytes @ 0x0
  2221                           
  2222     0070                     SPI1_WriteByte@byte:	
  2223                           ; 1 bytes @ 0x0
  2224                           
  2225     0070                     ledClear@c:	
  2226                           ; 1 bytes @ 0x0
  2227                           
  2228     0070                     EUSART_SetFramingErrorHandler@interruptHandler:	
  2229                           ; 1 bytes @ 0x0
  2230                           
  2231     0070                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  2232                           ; 2 bytes @ 0x0
  2233                           
  2234     0070                     EUSART_SetErrorHandler@interruptHandler:	
  2235                           ; 2 bytes @ 0x0
  2236                           
  2237     0070                     de_sigmoid@z:	
  2238                           ; 2 bytes @ 0x0
  2239                           
  2240     0070                     srand@s:	
  2241                           ; 2 bytes @ 0x0
  2242                           
  2243     0070                     ___lmul@multiplier:	
  2244                           ; 2 bytes @ 0x0
  2245                           
  2246                           
  2247                           ; 4 bytes @ 0x0
  2248     0070                     	ds	1
  2249     0071                     ??_ledClear:
  2250     0071                     ?_txMAX7219:	
  2251                           ; 1 bytes @ 0x1
  2252                           
  2253     0071                     txMAX7219@dat0:	
  2254                           ; 1 bytes @ 0x1
  2255                           
  2256                           
  2257                           ; 1 bytes @ 0x1
  2258     0071                     	ds	1
  2259     0072                     ??_EUSART_SetFramingErrorHandler:
  2260     0072                     ??_EUSART_SetOverrunErrorHandler:	
  2261                           ; 1 bytes @ 0x2
  2262                           
  2263     0072                     ??_EUSART_SetErrorHandler:	
  2264                           ; 1 bytes @ 0x2
  2265                           
  2266     0072                     ??_srand:	
  2267                           ; 1 bytes @ 0x2
  2268                           
  2269     0072                     ??_de_sigmoid:	
  2270                           ; 1 bytes @ 0x2
  2271                           
  2272     0072                     ??_EUSART_Initialize:	
  2273                           ; 1 bytes @ 0x2
  2274                           
  2275     0072                     ??_SYSTEM_Initialize:	
  2276                           ; 1 bytes @ 0x2
  2277                           
  2278     0072                     ??_txMAX7219:	
  2279                           ; 1 bytes @ 0x2
  2280                           
  2281     0072                     txMAX7219@addr0:	
  2282                           ; 1 bytes @ 0x2
  2283                           
  2284                           
  2285                           ; 1 bytes @ 0x2
  2286     0072                     	ds	1
  2287     0073                     ??_initMAX7219:
  2288     0073                     ??_sendMatrix:	
  2289                           ; 1 bytes @ 0x3
  2290                           
  2291     0073                     ?___wmul:	
  2292                           ; 1 bytes @ 0x3
  2293                           
  2294     0073                     ledClear@l:	
  2295                           ; 2 bytes @ 0x3
  2296                           
  2297     0073                     ___wmul@multiplier:	
  2298                           ; 1 bytes @ 0x3
  2299                           
  2300                           
  2301                           ; 2 bytes @ 0x3
  2302     0073                     	ds	1
  2303     0074                     sendMatrix@b:
  2304     0074                     ___lmul@multiplicand:	
  2305                           ; 1 bytes @ 0x4
  2306                           
  2307                           
  2308                           ; 4 bytes @ 0x4
  2309     0074                     	ds	1
  2310     0075                     sendMatrix@nb:
  2311     0075                     ___wmul@multiplicand:	
  2312                           ; 1 bytes @ 0x5
  2313                           
  2314                           
  2315                           ; 2 bytes @ 0x5
  2316     0075                     	ds	1
  2317     0076                     sendMatrix@j:
  2318                           
  2319                           ; 1 bytes @ 0x6
  2320     0076                     	ds	1
  2321     0077                     ??___wmul:
  2322     0077                     sendMatrix@i:	
  2323                           ; 1 bytes @ 0x7
  2324                           
  2325     0077                     ___wmul@product:	
  2326                           ; 1 bytes @ 0x7
  2327                           
  2328                           
  2329                           ; 2 bytes @ 0x7
  2330     0077                     	ds	1
  2331     0078                     ??___lmul:
  2332     0078                     ___lmul@product:	
  2333                           ; 1 bytes @ 0x8
  2334                           
  2335                           
  2336                           ; 4 bytes @ 0x8
  2337     0078                     	ds	1
  2338     0079                     ?___awdiv:
  2339     0079                     ___awdiv@divisor:	
  2340                           ; 2 bytes @ 0x9
  2341                           
  2342                           
  2343                           ; 2 bytes @ 0x9
  2344     0079                     	ds	2
  2345     007B                     ___awdiv@dividend:
  2346                           
  2347                           ; 2 bytes @ 0xB
  2348     007B                     	ds	1
  2349     007C                     ?_rand:
  2350                           
  2351                           ; 2 bytes @ 0xC
  2352     007C                     	ds	1
  2353     007D                     ??___awdiv:
  2354                           
  2355                           ; 1 bytes @ 0xD
  2356     007D                     	ds	1
  2357                           
  2358                           	psect	cstackBANK0
  2359     0020                     __pcstackBANK0:
  2360     0020                     ??_rand:
  2361     0020                     ___awdiv@counter:	
  2362                           ; 1 bytes @ 0x0
  2363                           
  2364                           
  2365                           ; 1 bytes @ 0x0
  2366     0020                     	ds	1
  2367     0021                     ___awdiv@sign:
  2368                           
  2369                           ; 1 bytes @ 0x1
  2370     0021                     	ds	1
  2371     0022                     ___awdiv@quotient:
  2372                           
  2373                           ; 2 bytes @ 0x2
  2374     0022                     	ds	2
  2375     0024                     ??_snake_initiate:
  2376     0024                     ?_ledSet:	
  2377                           ; 1 bytes @ 0x4
  2378                           
  2379     0024                     ??_snake_getSurroundings:	
  2380                           ; 1 bytes @ 0x4
  2381                           
  2382     0024                     ??_ai_propagate:	
  2383                           ; 1 bytes @ 0x4
  2384                           
  2385     0024                     ?_sigmoid:	
  2386                           ; 1 bytes @ 0x4
  2387                           
  2388     0024                     ?___awmod:	
  2389                           ; 1 bytes @ 0x4
  2390                           
  2391     0024                     ledSet@c:	
  2392                           ; 2 bytes @ 0x4
  2393                           
  2394     0024                     sigmoid@z:	
  2395                           ; 1 bytes @ 0x4
  2396                           
  2397     0024                     ___awmod@divisor:	
  2398                           ; 2 bytes @ 0x4
  2399                           
  2400                           
  2401                           ; 2 bytes @ 0x4
  2402     0024                     	ds	1
  2403     0025                     ??_ledSet:
  2404     0025                     snake_initiate@i:	
  2405                           ; 1 bytes @ 0x5
  2406                           
  2407                           
  2408                           ; 1 bytes @ 0x5
  2409     0025                     	ds	1
  2410     0026                     ??_snake_move:
  2411     0026                     ??_sigmoid:	
  2412                           ; 1 bytes @ 0x6
  2413                           
  2414     0026                     snake_getSurroundings@p:	
  2415                           ; 1 bytes @ 0x6
  2416                           
  2417     0026                     ___awmod@dividend:	
  2418                           ; 1 bytes @ 0x6
  2419                           
  2420                           
  2421                           ; 2 bytes @ 0x6
  2422     0026                     	ds	1
  2423     0027                     ??_ai_run:
  2424     0027                     ledSet@l:	
  2425                           ; 1 bytes @ 0x7
  2426                           
  2427     0027                     snake_getSurroundings@lf:	
  2428                           ; 1 bytes @ 0x7
  2429                           
  2430                           
  2431                           ; 1 bytes @ 0x7
  2432     0027                     	ds	1
  2433     0028                     ??___awmod:
  2434     0028                     snake_move@direction:	
  2435                           ; 1 bytes @ 0x8
  2436                           
  2437     0028                     snake_getSurroundings@cf:	
  2438                           ; 1 bytes @ 0x8
  2439                           
  2440                           
  2441                           ; 1 bytes @ 0x8
  2442     0028                     	ds	1
  2443     0029                     snake_move@incentive:
  2444     0029                     snake_getSurroundings@i:	
  2445                           ; 1 bytes @ 0x9
  2446                           
  2447     0029                     ___awmod@counter:	
  2448                           ; 1 bytes @ 0x9
  2449                           
  2450                           
  2451                           ; 1 bytes @ 0x9
  2452     0029                     	ds	1
  2453     002A                     snake_move@i:
  2454     002A                     snake_getSurroundings@lh:	
  2455                           ; 1 bytes @ 0xA
  2456                           
  2457     002A                     ___awmod@sign:	
  2458                           ; 1 bytes @ 0xA
  2459                           
  2460     002A                     _ai_run$1558:	
  2461                           ; 1 bytes @ 0xA
  2462                           
  2463     002A                     ai_propagate@S:	
  2464                           ; 2 bytes @ 0xA
  2465                           
  2466                           
  2467                           ; 4 bytes @ 0xA
  2468     002A                     	ds	1
  2469     002B                     ??_ai_initiate:
  2470     002B                     snake_getSurroundings@ch:	
  2471                           ; 1 bytes @ 0xB
  2472                           
  2473                           
  2474                           ; 1 bytes @ 0xB
  2475     002B                     	ds	1
  2476     002C                     snake_getSurroundings@i_806:
  2477     002C                     ai_run@i:	
  2478                           ; 1 bytes @ 0xC
  2479                           
  2480                           
  2481                           ; 1 bytes @ 0xC
  2482     002C                     	ds	1
  2483     002D                     snake_getSurroundings@surroundings:
  2484     002D                     ai_run@i_858:	
  2485                           ; 1 bytes @ 0xD
  2486                           
  2487                           
  2488                           ; 1 bytes @ 0xD
  2489     002D                     	ds	1
  2490     002E                     ai_initiate@i:
  2491     002E                     ai_run@i_860:	
  2492                           ; 1 bytes @ 0xE
  2493                           
  2494     002E                     _ai_propagate$1559:	
  2495                           ; 1 bytes @ 0xE
  2496                           
  2497                           
  2498                           ; 2 bytes @ 0xE
  2499     002E                     	ds	1
  2500     002F                     ai_initiate@i_853:
  2501     002F                     ai_run@i_861:	
  2502                           ; 1 bytes @ 0xF
  2503                           
  2504                           
  2505                           ; 1 bytes @ 0xF
  2506     002F                     	ds	1
  2507     0030                     ai_initiate@j:
  2508     0030                     ai_run@j:	
  2509                           ; 1 bytes @ 0x10
  2510                           
  2511     0030                     ai_propagate@incentive:	
  2512                           ; 1 bytes @ 0x10
  2513                           
  2514                           
  2515                           ; 1 bytes @ 0x10
  2516     0030                     	ds	1
  2517     0031                     ai_initiate@j_852:
  2518     0031                     ai_run@j_859:	
  2519                           ; 1 bytes @ 0x11
  2520                           
  2521     0031                     ai_propagate@i:	
  2522                           ; 1 bytes @ 0x11
  2523                           
  2524                           
  2525                           ; 1 bytes @ 0x11
  2526     0031                     	ds	1
  2527     0032                     ai_propagate@i_866:
  2528                           
  2529                           ; 1 bytes @ 0x12
  2530     0032                     	ds	1
  2531     0033                     ai_propagate@j_868:
  2532                           
  2533                           ; 1 bytes @ 0x13
  2534     0033                     	ds	1
  2535     0034                     ai_propagate@i_873:
  2536                           
  2537                           ; 1 bytes @ 0x14
  2538     0034                     	ds	1
  2539     0035                     ai_propagate@i_875:
  2540                           
  2541                           ; 1 bytes @ 0x15
  2542     0035                     	ds	1
  2543     0036                     ai_propagate@i_877:
  2544                           
  2545                           ; 1 bytes @ 0x16
  2546     0036                     	ds	1
  2547     0037                     ai_propagate@j:
  2548                           
  2549                           ; 1 bytes @ 0x17
  2550     0037                     	ds	1
  2551     0038                     ai_propagate@i_871:
  2552                           
  2553                           ; 1 bytes @ 0x18
  2554     0038                     	ds	1
  2555     0039                     ai_propagate@j_874:
  2556                           
  2557                           ; 1 bytes @ 0x19
  2558     0039                     	ds	1
  2559     003A                     ai_propagate@j_876:
  2560                           
  2561                           ; 1 bytes @ 0x1A
  2562     003A                     	ds	1
  2563     003B                     ai_propagate@j_872:
  2564                           
  2565                           ; 1 bytes @ 0x1B
  2566     003B                     	ds	1
  2567     003C                     ai_propagate@j_869:
  2568                           
  2569                           ; 1 bytes @ 0x1C
  2570     003C                     	ds	1
  2571     003D                     ??_main:
  2572                           
  2573                           ; 1 bytes @ 0x1D
  2574     003D                     	ds	3
  2575     0040                     main@field:
  2576                           
  2577                           ; 1 bytes @ 0x20
  2578     0040                     	ds	1
  2579     0041                     main@foodPosition:
  2580                           
  2581                           ; 1 bytes @ 0x21
  2582     0041                     	ds	1
  2583     0042                     main@choice:
  2584                           
  2585                           ; 1 bytes @ 0x22
  2586     0042                     	ds	1
  2587     0043                     main@foodPosition_674:
  2588                           
  2589                           ; 1 bytes @ 0x23
  2590     0043                     	ds	1
  2591     0044                     main@incentive:
  2592                           
  2593                           ; 1 bytes @ 0x24
  2594     0044                     	ds	1
  2595     0045                     main@i:
  2596                           
  2597                           ; 1 bytes @ 0x25
  2598     0045                     	ds	1
  2599     0046                     main@j:
  2600                           
  2601                           ; 1 bytes @ 0x26
  2602     0046                     	ds	1
  2603     0047                     main@i_672:
  2604                           
  2605                           ; 1 bytes @ 0x27
  2606     0047                     	ds	1
  2607     0048                     main@j_673:
  2608                           
  2609                           ; 1 bytes @ 0x28
  2610     0048                     	ds	1
  2611                           
  2612                           	psect	maintext
  2613     0384                     __pmaintext:	
  2614 ;;
  2615 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  2616 ;;
  2617 ;; *************** function _main *****************
  2618 ;; Defined at:
  2619 ;;		line 67 in file "main.c"
  2620 ;; Parameters:    Size  Location     Type
  2621 ;;		None
  2622 ;; Auto vars:     Size  Location     Type
  2623 ;;  j               1   40[BANK0 ] unsigned char 
  2624 ;;  j               1   38[BANK0 ] unsigned char 
  2625 ;;  i               1   39[BANK0 ] unsigned char 
  2626 ;;  incentive       1   36[BANK0 ] char 
  2627 ;;  foodPosition    1   35[BANK0 ] unsigned char 
  2628 ;;  choice          1   34[BANK0 ] unsigned char 
  2629 ;;  i               1   37[BANK0 ] unsigned char 
  2630 ;;  foodPosition    1   33[BANK0 ] unsigned char 
  2631 ;;  field           1   32[BANK0 ] PTR unsigned char 
  2632 ;;		 -> field(16), 
  2633 ;; Return value:  Size  Location     Type
  2634 ;;                  1    wreg      void 
  2635 ;; Registers used:
  2636 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2637 ;; Tracked objects:
  2638 ;;		On entry : B1F/0
  2639 ;;		On exit  : 0/0
  2640 ;;		Unchanged: 0/0
  2641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2642 ;;      Params:         0       0       0       0       0       0
  2643 ;;      Locals:         0       9       0       0       0       0
  2644 ;;      Temps:          0       3       0       0       0       0
  2645 ;;      Totals:         0      12       0       0       0       0
  2646 ;;Total ram usage:       12 bytes
  2647 ;; Hardware stack levels required when called: 4
  2648 ;; This function calls:
  2649 ;;		_SYSTEM_Initialize
  2650 ;;		___awdiv
  2651 ;;		_ai_getInputField
  2652 ;;		_ai_initiate
  2653 ;;		_ai_propagate
  2654 ;;		_ai_run
  2655 ;;		_deactivateElevator
  2656 ;;		_initMAX7219
  2657 ;;		_ledClear
  2658 ;;		_ledSet
  2659 ;;		_sendMatrix
  2660 ;;		_snake_getField
  2661 ;;		_snake_getFoodPosition
  2662 ;;		_snake_getSurroundings
  2663 ;;		_snake_initiate
  2664 ;;		_snake_move
  2665 ;; This function is called by:
  2666 ;;		Startup code after reset
  2667 ;; This function uses a non-reentrant model
  2668 ;;
  2669                           
  2670     0384                     _main:	
  2671                           ;psect for function _main
  2672                           
  2673     0384                     l3233:	
  2674                           ;incstack = 0
  2675                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2676                           
  2677                           
  2678                           ;main.c: 70:     SYSTEM_Initialize();
  2679     0384  318D  253F  3183   	fcall	_SYSTEM_Initialize
  2680     0387                     l3235:
  2681                           
  2682                           ;main.c: 87:     deactivateElevator();
  2683     0387  318D  2532  3183   	fcall	_deactivateElevator
  2684     038A                     l3237:
  2685                           
  2686                           ;main.c: 88:     snake_initiate();
  2687     038A  3180  2005  3183   	fcall	_snake_initiate
  2688     038D                     l3239:
  2689                           
  2690                           ;main.c: 89:     ai_initiate();
  2691     038D  318F  275E  3183   	fcall	_ai_initiate
  2692     0390                     l3241:
  2693                           
  2694                           ;main.c: 90:     initMAX7219();
  2695     0390  318E  26CC  3183   	fcall	_initMAX7219
  2696     0393                     l3243:
  2697                           
  2698                           ;main.c: 103:     uint8_t* field = snake_getField();
  2699     0393  318C  24D7  3183   	fcall	_snake_getField
  2700     0396  0020               	movlb	0	; select bank0
  2701     0397  00C0               	movwf	main@field
  2702     0398                     l3245:
  2703                           
  2704                           ;main.c: 105:     for(uint8_t i = 0; i < 4; i++){
  2705     0398  01C5               	clrf	main@i
  2706     0399                     l3251:
  2707                           
  2708                           ;main.c: 106:         for(uint8_t j = 0; j < 4; j++){
  2709     0399  01C6               	clrf	main@j
  2710     039A                     l3257:
  2711                           
  2712                           ;main.c: 107:             if(field[i+j*4]>0){
  2713     039A  0846               	movf	main@j,w
  2714     039B  00BD               	movwf	??_main
  2715     039C  3001               	movlw	1
  2716     039D                     u2395:
  2717     039D  35BD               	lslf	??_main,f
  2718     039E  3EFF               	addlw	-1
  2719     039F  1D03               	skipz
  2720     03A0  2B9D               	goto	u2395
  2721     03A1  353D               	lslf	??_main,w
  2722     03A2  0740               	addwf	main@field,w
  2723     03A3  00BE               	movwf	??_main+1
  2724     03A4  0845               	movf	main@i,w
  2725     03A5  073E               	addwf	??_main+1,w
  2726     03A6  00BF               	movwf	??_main+2
  2727     03A7  083F               	movf	??_main+2,w
  2728     03A8  0086               	movwf	6
  2729     03A9  0187               	clrf	7
  2730     03AA  0801               	movf	1,w
  2731     03AB  1903               	btfsc	3,2
  2732     03AC  2BAE               	goto	u2401
  2733     03AD  2BAF               	goto	u2400
  2734     03AE                     u2401:
  2735     03AE  2BB6               	goto	l3261
  2736     03AF                     u2400:
  2737     03AF                     l3259:
  2738                           
  2739                           ;main.c: 108:                 ledSet(i,j);
  2740     03AF  0846               	movf	main@j,w
  2741     03B0  00A4               	movwf	ledSet@c
  2742     03B1  0845               	movf	main@i,w
  2743     03B2  318D  2561  3183   	fcall	_ledSet
  2744                           
  2745                           ;main.c: 109:             } else{
  2746     03B5  2BBC               	goto	l3263
  2747     03B6                     l3261:
  2748                           
  2749                           ;main.c: 110:                 ledClear(i,j);
  2750     03B6  0846               	movf	main@j,w
  2751     03B7  00F0               	movwf	ledClear@c
  2752     03B8  0845               	movf	main@i,w
  2753     03B9  318D  254F  3183   	fcall	_ledClear
  2754     03BC                     l3263:
  2755                           
  2756                           ;main.c: 112:         }
  2757     03BC  3001               	movlw	1
  2758     03BD  0020               	movlb	0	; select bank0
  2759     03BE  00BD               	movwf	??_main
  2760     03BF  083D               	movf	??_main,w
  2761     03C0  07C6               	addwf	main@j,f
  2762     03C1                     l3265:
  2763     03C1  3004               	movlw	4
  2764     03C2  0246               	subwf	main@j,w
  2765     03C3  1C03               	skipc
  2766     03C4  2BC6               	goto	u2411
  2767     03C5  2BC7               	goto	u2410
  2768     03C6                     u2411:
  2769     03C6  2B9A               	goto	l3257
  2770     03C7                     u2410:
  2771     03C7                     l3267:
  2772                           
  2773                           ;main.c: 113:     }
  2774     03C7  3001               	movlw	1
  2775     03C8  00BD               	movwf	??_main
  2776     03C9  083D               	movf	??_main,w
  2777     03CA  07C5               	addwf	main@i,f
  2778     03CB                     l3269:
  2779     03CB  3004               	movlw	4
  2780     03CC  0245               	subwf	main@i,w
  2781     03CD  1C03               	skipc
  2782     03CE  2BD0               	goto	u2421
  2783     03CF  2BD1               	goto	u2420
  2784     03D0                     u2421:
  2785     03D0  2B99               	goto	l3251
  2786     03D1                     u2420:
  2787     03D1                     l3271:
  2788                           
  2789                           ;main.c: 115:     uint8_t foodPosition = snake_getFoodPosition();
  2790     03D1  318C  24D9  3183   	fcall	_snake_getFoodPosition
  2791     03D4  0020               	movlb	0	; select bank0
  2792     03D5  00C1               	movwf	main@foodPosition
  2793     03D6                     l3273:
  2794                           
  2795                           ;main.c: 116:     ledSet(foodPosition%4, foodPosition/4);
  2796     03D6  3004               	movlw	4
  2797     03D7  00F9               	movwf	___awdiv@divisor
  2798     03D8  3000               	movlw	0
  2799     03D9  00FA               	movwf	___awdiv@divisor+1
  2800     03DA  0841               	movf	main@foodPosition,w
  2801     03DB  00BD               	movwf	??_main
  2802     03DC  01BE               	clrf	??_main+1
  2803     03DD  083D               	movf	??_main,w
  2804     03DE  00FB               	movwf	___awdiv@dividend
  2805     03DF  083E               	movf	??_main+1,w
  2806     03E0  00FC               	movwf	___awdiv@dividend+1
  2807     03E1  3180  2035  3183   	fcall	___awdiv
  2808     03E4  0879               	movf	?___awdiv,w
  2809     03E5  0020               	movlb	0	; select bank0
  2810     03E6  00A4               	movwf	ledSet@c
  2811     03E7  0841               	movf	main@foodPosition,w
  2812     03E8  3903               	andlw	3
  2813     03E9  318D  2561  3183   	fcall	_ledSet
  2814     03EC                     l3275:
  2815                           
  2816                           ;main.c: 117:     sendMatrix();
  2817     03EC  318E  2636  3183   	fcall	_sendMatrix
  2818     03EF                     l3277:
  2819                           
  2820                           ;main.c: 120:     {;main.c: 122:         _delay((unsigned long)((500)*(8000000/4000.0)))
      +                          ;
  2821     03EF  3006               	movlw	6
  2822     03F0  0020               	movlb	0	; select bank0
  2823     03F1  00BE               	movwf	??_main+1
  2824     03F2  3013               	movlw	19
  2825     03F3  00BD               	movwf	??_main
  2826     03F4  30AD               	movlw	173
  2827     03F5                     u2597:
  2828     03F5  0B89               	decfsz	9,f
  2829     03F6  2BF5               	goto	u2597
  2830     03F7  0BBD               	decfsz	??_main,f
  2831     03F8  2BF5               	goto	u2597
  2832     03F9  0BBE               	decfsz	??_main+1,f
  2833     03FA  2BF5               	goto	u2597
  2834     03FB  3200               	nop2
  2835     03FC                     l3279:
  2836                           
  2837                           ;main.c: 123:         snake_getSurroundings(ai_getInputField());
  2838     03FC  318C  24D5  3183   	fcall	_ai_getInputField
  2839     03FF  3180  2095  3183   	fcall	_snake_getSurroundings
  2840     0402                     l3281:
  2841                           
  2842                           ;main.c: 124:         uint8_t choice = ai_run();
  2843     0402  3182  2228  3183   	fcall	_ai_run
  2844     0405  0020               	movlb	0	; select bank0
  2845     0406  00C2               	movwf	main@choice
  2846     0407                     l3283:
  2847                           
  2848                           ;main.c: 125:         int8_t incentive = snake_move(choice);
  2849     0407  0842               	movf	main@choice,w
  2850     0408  3181  2156  3183   	fcall	_snake_move
  2851     040B  0020               	movlb	0	; select bank0
  2852     040C  00C4               	movwf	main@incentive
  2853     040D                     l3285:
  2854                           
  2855                           ;main.c: 126:         ai_propagate(incentive);
  2856     040D  0844               	movf	main@incentive,w
  2857     040E  3185  2575  3183   	fcall	_ai_propagate
  2858     0411                     l3287:
  2859                           
  2860                           ;main.c: 127:         for(uint8_t i = 0; i < 4; i++){
  2861     0411  0020               	movlb	0	; select bank0
  2862     0412  01C7               	clrf	main@i_672
  2863     0413                     l3293:
  2864                           
  2865                           ;main.c: 128:             for(uint8_t j = 0; j < 4; j++){
  2866     0413  01C8               	clrf	main@j_673
  2867     0414                     l3299:
  2868                           
  2869                           ;main.c: 129:                 if(field[i+j*4]>0){
  2870     0414  0848               	movf	main@j_673,w
  2871     0415  00BD               	movwf	??_main
  2872     0416  3001               	movlw	1
  2873     0417                     u2435:
  2874     0417  35BD               	lslf	??_main,f
  2875     0418  3EFF               	addlw	-1
  2876     0419  1D03               	skipz
  2877     041A  2C17               	goto	u2435
  2878     041B  353D               	lslf	??_main,w
  2879     041C  0740               	addwf	main@field,w
  2880     041D  00BE               	movwf	??_main+1
  2881     041E  0847               	movf	main@i_672,w
  2882     041F  073E               	addwf	??_main+1,w
  2883     0420  00BF               	movwf	??_main+2
  2884     0421  083F               	movf	??_main+2,w
  2885     0422  0086               	movwf	6
  2886     0423  0187               	clrf	7
  2887     0424  0801               	movf	1,w
  2888     0425  1903               	btfsc	3,2
  2889     0426  2C28               	goto	u2441
  2890     0427  2C29               	goto	u2440
  2891     0428                     u2441:
  2892     0428  2C30               	goto	l3303
  2893     0429                     u2440:
  2894     0429                     l3301:
  2895                           
  2896                           ;main.c: 130:                     ledSet(i,j);
  2897     0429  0848               	movf	main@j_673,w
  2898     042A  00A4               	movwf	ledSet@c
  2899     042B  0847               	movf	main@i_672,w
  2900     042C  318D  2561  3183   	fcall	_ledSet
  2901                           
  2902                           ;main.c: 131:                 } else{
  2903     042F  2C36               	goto	l3305
  2904     0430                     l3303:
  2905                           
  2906                           ;main.c: 132:                     ledClear(i,j);
  2907     0430  0848               	movf	main@j_673,w
  2908     0431  00F0               	movwf	ledClear@c
  2909     0432  0847               	movf	main@i_672,w
  2910     0433  318D  254F  3183   	fcall	_ledClear
  2911     0436                     l3305:
  2912                           
  2913                           ;main.c: 134:             }
  2914     0436  3001               	movlw	1
  2915     0437  0020               	movlb	0	; select bank0
  2916     0438  00BD               	movwf	??_main
  2917     0439  083D               	movf	??_main,w
  2918     043A  07C8               	addwf	main@j_673,f
  2919     043B                     l3307:
  2920     043B  3004               	movlw	4
  2921     043C  0248               	subwf	main@j_673,w
  2922     043D  1C03               	skipc
  2923     043E  2C40               	goto	u2451
  2924     043F  2C41               	goto	u2450
  2925     0440                     u2451:
  2926     0440  2C14               	goto	l3299
  2927     0441                     u2450:
  2928     0441                     l3309:
  2929                           
  2930                           ;main.c: 135:         }
  2931     0441  3001               	movlw	1
  2932     0442  00BD               	movwf	??_main
  2933     0443  083D               	movf	??_main,w
  2934     0444  07C7               	addwf	main@i_672,f
  2935     0445                     l3311:
  2936     0445  3004               	movlw	4
  2937     0446  0247               	subwf	main@i_672,w
  2938     0447  1C03               	skipc
  2939     0448  2C4A               	goto	u2461
  2940     0449  2C4B               	goto	u2460
  2941     044A                     u2461:
  2942     044A  2C13               	goto	l3293
  2943     044B                     u2460:
  2944     044B                     l3313:
  2945                           
  2946                           ;main.c: 136:         ledClear(0,6);
  2947     044B  3006               	movlw	6
  2948     044C  00F0               	movwf	ledClear@c
  2949     044D  3000               	movlw	0
  2950     044E  318D  254F  3183   	fcall	_ledClear
  2951                           
  2952                           ;main.c: 137:         ledClear(2,6);
  2953     0451  3006               	movlw	6
  2954     0452  00F0               	movwf	ledClear@c
  2955     0453  3002               	movlw	2
  2956     0454  318D  254F  3183   	fcall	_ledClear
  2957                           
  2958                           ;main.c: 138:         ledClear(1,5);
  2959     0457  3005               	movlw	5
  2960     0458  00F0               	movwf	ledClear@c
  2961     0459  3001               	movlw	1
  2962     045A  318D  254F  3183   	fcall	_ledClear
  2963                           
  2964                           ;main.c: 139:         ledClear(1,7);
  2965     045D  3007               	movlw	7
  2966     045E  00F0               	movwf	ledClear@c
  2967     045F  3001               	movlw	1
  2968     0460  318D  254F  3183   	fcall	_ledClear
  2969                           
  2970                           ;main.c: 140:         ledClear(4,6);
  2971     0463  3006               	movlw	6
  2972     0464  00F0               	movwf	ledClear@c
  2973     0465  3004               	movlw	4
  2974     0466  318D  254F  3183   	fcall	_ledClear
  2975                           
  2976                           ;main.c: 141:         ledClear(6,6);
  2977     0469  3006               	movlw	6
  2978     046A  00F0               	movwf	ledClear@c
  2979     046B  3006               	movlw	6
  2980     046C  318D  254F  3183   	fcall	_ledClear
  2981                           
  2982                           ;main.c: 142:         ledClear(5,5);
  2983     046F  3005               	movlw	5
  2984     0470  00F0               	movwf	ledClear@c
  2985     0471  3005               	movlw	5
  2986     0472  318D  254F  3183   	fcall	_ledClear
  2987                           
  2988                           ;main.c: 143:         ledClear(5,7);
  2989     0475  3007               	movlw	7
  2990     0476  00F0               	movwf	ledClear@c
  2991     0477  3005               	movlw	5
  2992     0478  318D  254F  3183   	fcall	_ledClear
  2993                           
  2994                           ;main.c: 144:         ledClear(4,1);
  2995     047B  01F0               	clrf	ledClear@c
  2996     047C  0AF0               	incf	ledClear@c,f
  2997     047D  3004               	movlw	4
  2998     047E  318D  254F  3183   	fcall	_ledClear
  2999                           
  3000                           ;main.c: 145:         ledClear(6,1);
  3001     0481  01F0               	clrf	ledClear@c
  3002     0482  0AF0               	incf	ledClear@c,f
  3003     0483  3006               	movlw	6
  3004     0484  318D  254F  3183   	fcall	_ledClear
  3005                           
  3006                           ;main.c: 146:         ledClear(5,0);
  3007     0487  01F0               	clrf	ledClear@c
  3008     0488  3005               	movlw	5
  3009     0489  318D  254F  3183   	fcall	_ledClear
  3010                           
  3011                           ;main.c: 147:         ledClear(5,2);
  3012     048C  3002               	movlw	2
  3013     048D  00F0               	movwf	ledClear@c
  3014     048E  3005               	movlw	5
  3015     048F  318D  254F  3183   	fcall	_ledClear
  3016     0492                     l3315:
  3017                           
  3018                           ;main.c: 148:         if(Y0[0]>0){
  3019     0492  0020               	movlb	0	; select bank0
  3020     0493  0863               	movf	_Y0,w
  3021     0494  3A80               	xorlw	128
  3022     0495  3E7F               	addlw	-129
  3023     0496  1C03               	skipc
  3024     0497  2C99               	goto	u2471
  3025     0498  2C9A               	goto	u2470
  3026     0499                     u2471:
  3027     0499  2CA1               	goto	l3319
  3028     049A                     u2470:
  3029     049A                     l3317:
  3030                           
  3031                           ;main.c: 149:             ledSet(0,6);
  3032     049A  3006               	movlw	6
  3033     049B  00A4               	movwf	ledSet@c
  3034     049C  3000               	movlw	0
  3035     049D  318D  2561  3183   	fcall	_ledSet
  3036                           
  3037                           ;main.c: 150:         } else if(Y0[1]>0){
  3038     04A0  2CAE               	goto	l3323
  3039     04A1                     l3319:
  3040     04A1  0864               	movf	_Y0+1,w
  3041     04A2  3A80               	xorlw	128
  3042     04A3  3E7F               	addlw	-129
  3043     04A4  1C03               	skipc
  3044     04A5  2CA7               	goto	u2481
  3045     04A6  2CA8               	goto	u2480
  3046     04A7                     u2481:
  3047     04A7  2CAE               	goto	l3323
  3048     04A8                     u2480:
  3049     04A8                     l3321:
  3050                           
  3051                           ;main.c: 151:             ledSet(2,6);
  3052     04A8  3006               	movlw	6
  3053     04A9  00A4               	movwf	ledSet@c
  3054     04AA  3002               	movlw	2
  3055     04AB  318D  2561  3183   	fcall	_ledSet
  3056     04AE                     l3323:
  3057                           
  3058                           ;main.c: 153:         if(Y0[2]>0){
  3059     04AE  0020               	movlb	0	; select bank0
  3060     04AF  0865               	movf	_Y0+2,w
  3061     04B0  3A80               	xorlw	128
  3062     04B1  3E7F               	addlw	-129
  3063     04B2  1C03               	skipc
  3064     04B3  2CB5               	goto	u2491
  3065     04B4  2CB6               	goto	u2490
  3066     04B5                     u2491:
  3067     04B5  2CBD               	goto	l3327
  3068     04B6                     u2490:
  3069     04B6                     l3325:
  3070                           
  3071                           ;main.c: 154:             ledSet(1,5);
  3072     04B6  3005               	movlw	5
  3073     04B7  00A4               	movwf	ledSet@c
  3074     04B8  3001               	movlw	1
  3075     04B9  318D  2561  3183   	fcall	_ledSet
  3076                           
  3077                           ;main.c: 155:         } else if(Y0[3]>0){
  3078     04BC  2CCA               	goto	l3331
  3079     04BD                     l3327:
  3080     04BD  0866               	movf	_Y0+3,w
  3081     04BE  3A80               	xorlw	128
  3082     04BF  3E7F               	addlw	-129
  3083     04C0  1C03               	skipc
  3084     04C1  2CC3               	goto	u2501
  3085     04C2  2CC4               	goto	u2500
  3086     04C3                     u2501:
  3087     04C3  2CCA               	goto	l3331
  3088     04C4                     u2500:
  3089     04C4                     l3329:
  3090                           
  3091                           ;main.c: 156:             ledSet(1,7);
  3092     04C4  3007               	movlw	7
  3093     04C5  00A4               	movwf	ledSet@c
  3094     04C6  3001               	movlw	1
  3095     04C7  318D  2561  3183   	fcall	_ledSet
  3096     04CA                     l3331:
  3097                           
  3098                           ;main.c: 158:         if(Y0[4]>0){
  3099     04CA  0020               	movlb	0	; select bank0
  3100     04CB  0867               	movf	_Y0+4,w
  3101     04CC  3A80               	xorlw	128
  3102     04CD  3E7F               	addlw	-129
  3103     04CE  1C03               	skipc
  3104     04CF  2CD1               	goto	u2511
  3105     04D0  2CD2               	goto	u2510
  3106     04D1                     u2511:
  3107     04D1  2CD9               	goto	l3335
  3108     04D2                     u2510:
  3109     04D2                     l3333:
  3110                           
  3111                           ;main.c: 159:             ledSet(4,6);
  3112     04D2  3006               	movlw	6
  3113     04D3  00A4               	movwf	ledSet@c
  3114     04D4  3004               	movlw	4
  3115     04D5  318D  2561  3183   	fcall	_ledSet
  3116                           
  3117                           ;main.c: 160:         } else if(Y0[5]>0){
  3118     04D8  2CE6               	goto	l3339
  3119     04D9                     l3335:
  3120     04D9  0868               	movf	_Y0+5,w
  3121     04DA  3A80               	xorlw	128
  3122     04DB  3E7F               	addlw	-129
  3123     04DC  1C03               	skipc
  3124     04DD  2CDF               	goto	u2521
  3125     04DE  2CE0               	goto	u2520
  3126     04DF                     u2521:
  3127     04DF  2CE6               	goto	l3339
  3128     04E0                     u2520:
  3129     04E0                     l3337:
  3130                           
  3131                           ;main.c: 161:             ledSet(6,6);
  3132     04E0  3006               	movlw	6
  3133     04E1  00A4               	movwf	ledSet@c
  3134     04E2  3006               	movlw	6
  3135     04E3  318D  2561  3183   	fcall	_ledSet
  3136     04E6                     l3339:
  3137                           
  3138                           ;main.c: 163:         if(Y0[6]>0){
  3139     04E6  0020               	movlb	0	; select bank0
  3140     04E7  0869               	movf	_Y0+6,w
  3141     04E8  3A80               	xorlw	128
  3142     04E9  3E7F               	addlw	-129
  3143     04EA  1C03               	skipc
  3144     04EB  2CED               	goto	u2531
  3145     04EC  2CEE               	goto	u2530
  3146     04ED                     u2531:
  3147     04ED  2CF5               	goto	l3343
  3148     04EE                     u2530:
  3149     04EE                     l3341:
  3150                           
  3151                           ;main.c: 164:             ledSet(5,5);
  3152     04EE  3005               	movlw	5
  3153     04EF  00A4               	movwf	ledSet@c
  3154     04F0  3005               	movlw	5
  3155     04F1  318D  2561  3183   	fcall	_ledSet
  3156                           
  3157                           ;main.c: 165:         } else if(Y0[7]>0){
  3158     04F4  2D1E               	goto	l3357
  3159     04F5                     l3343:
  3160     04F5  086A               	movf	_Y0+7,w
  3161     04F6  3A80               	xorlw	128
  3162     04F7  3E7F               	addlw	-129
  3163     04F8  1C03               	skipc
  3164     04F9  2CFB               	goto	u2541
  3165     04FA  2CFC               	goto	u2540
  3166     04FB                     u2541:
  3167     04FB  2D1E               	goto	l3357
  3168     04FC                     u2540:
  3169     04FC                     l3345:
  3170                           
  3171                           ;main.c: 166:             ledSet(5,7);
  3172     04FC  3007               	movlw	7
  3173     04FD  00A4               	movwf	ledSet@c
  3174     04FE  3005               	movlw	5
  3175     04FF  318D  2561  3183   	fcall	_ledSet
  3176     0502  2D1E               	goto	l3357
  3177     0503                     l3347:
  3178                           
  3179                           ;main.c: 170:                 ledSet(4,1);
  3180     0503  01A4               	clrf	ledSet@c
  3181     0504  0AA4               	incf	ledSet@c,f
  3182     0505  3004               	movlw	4
  3183     0506  318D  2561  3183   	fcall	_ledSet
  3184                           
  3185                           ;main.c: 171:                 break;
  3186     0509  2D35               	goto	l3359
  3187     050A                     l3349:
  3188                           
  3189                           ;main.c: 173:                 ledSet(6,1);
  3190     050A  01A4               	clrf	ledSet@c
  3191     050B  0AA4               	incf	ledSet@c,f
  3192     050C  3006               	movlw	6
  3193     050D  318D  2561  3183   	fcall	_ledSet
  3194                           
  3195                           ;main.c: 174:                 break;
  3196     0510  2D35               	goto	l3359
  3197     0511                     l3351:
  3198                           
  3199                           ;main.c: 176:                 ledSet(5,0);
  3200     0511  01A4               	clrf	ledSet@c
  3201     0512  3005               	movlw	5
  3202     0513  318D  2561  3183   	fcall	_ledSet
  3203                           
  3204                           ;main.c: 177:                 break;
  3205     0516  2D35               	goto	l3359
  3206     0517                     l3353:
  3207                           
  3208                           ;main.c: 179:                 ledSet(5,2);
  3209     0517  3002               	movlw	2
  3210     0518  00A4               	movwf	ledSet@c
  3211     0519  3005               	movlw	5
  3212     051A  318D  2561  3183   	fcall	_ledSet
  3213                           
  3214                           ;main.c: 180:                 break;
  3215     051D  2D35               	goto	l3359
  3216     051E                     l3357:
  3217     051E  0020               	movlb	0	; select bank0
  3218     051F  0842               	movf	main@choice,w
  3219     0520  00BD               	movwf	??_main
  3220     0521  01BE               	clrf	??_main+1
  3221                           
  3222                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3223                           ; Switch size 1, requested type "simple"
  3224                           ; Number of cases is 1, Range of values is 0 to 0
  3225                           ; switch strategies available:
  3226                           ; Name         Instructions Cycles
  3227                           ; simple_byte            4     3 (average)
  3228                           ; direct_byte            8     6 (fixed)
  3229                           ; jumptable            260     6 (fixed)
  3230                           ;	Chosen strategy is simple_byte
  3231     0522  083E               	movf	??_main+1,w
  3232     0523  3A00               	xorlw	0	; case 0
  3233     0524  1903               	skipnz
  3234     0525  2D27               	goto	l3445
  3235     0526  2D35               	goto	l3359
  3236     0527                     l3445:
  3237                           
  3238                           ; Switch size 1, requested type "simple"
  3239                           ; Number of cases is 4, Range of values is 0 to 3
  3240                           ; switch strategies available:
  3241                           ; Name         Instructions Cycles
  3242                           ; simple_byte           13     7 (average)
  3243                           ; direct_byte           14     6 (fixed)
  3244                           ; jumptable            260     6 (fixed)
  3245                           ;	Chosen strategy is simple_byte
  3246     0527  083D               	movf	??_main,w
  3247     0528  3A00               	xorlw	0	; case 0
  3248     0529  1903               	skipnz
  3249     052A  2D03               	goto	l3347
  3250     052B  3A01               	xorlw	1	; case 1
  3251     052C  1903               	skipnz
  3252     052D  2D0A               	goto	l3349
  3253     052E  3A03               	xorlw	3	; case 2
  3254     052F  1903               	skipnz
  3255     0530  2D11               	goto	l3351
  3256     0531  3A01               	xorlw	1	; case 3
  3257     0532  1903               	skipnz
  3258     0533  2D17               	goto	l3353
  3259     0534  2D35               	goto	l3359
  3260     0535                     l3359:
  3261                           
  3262                           ;main.c: 182:         ledClear(7,0);
  3263     0535  01F0               	clrf	ledClear@c
  3264     0536  3007               	movlw	7
  3265     0537  318D  254F  3183   	fcall	_ledClear
  3266                           
  3267                           ;main.c: 183:         ledClear(7,1);
  3268     053A  01F0               	clrf	ledClear@c
  3269     053B  0AF0               	incf	ledClear@c,f
  3270     053C  3007               	movlw	7
  3271     053D  318D  254F  3183   	fcall	_ledClear
  3272     0540                     l3361:
  3273                           
  3274                           ;main.c: 184:         if(incentive == -1){
  3275     0540  0020               	movlb	0	; select bank0
  3276     0541  0A44               	incf	main@incentive,w
  3277     0542  1D03               	btfss	3,2
  3278     0543  2D45               	goto	u2551
  3279     0544  2D46               	goto	u2550
  3280     0545                     u2551:
  3281     0545  2D4C               	goto	l3365
  3282     0546                     u2550:
  3283     0546                     l3363:
  3284                           
  3285                           ;main.c: 185:             ledSet(7,0);
  3286     0546  01A4               	clrf	ledSet@c
  3287     0547  3007               	movlw	7
  3288     0548  318D  2561  3183   	fcall	_ledSet
  3289                           
  3290                           ;main.c: 186:         } else if(incentive == 1){
  3291     054B  2D57               	goto	l3369
  3292     054C                     l3365:
  3293     054C  0344               	decf	main@incentive,w
  3294     054D  1D03               	btfss	3,2
  3295     054E  2D50               	goto	u2561
  3296     054F  2D51               	goto	u2560
  3297     0550                     u2561:
  3298     0550  2D57               	goto	l3369
  3299     0551                     u2560:
  3300     0551                     l3367:
  3301                           
  3302                           ;main.c: 187:             ledSet(7,1);
  3303     0551  01A4               	clrf	ledSet@c
  3304     0552  0AA4               	incf	ledSet@c,f
  3305     0553  3007               	movlw	7
  3306     0554  318D  2561  3183   	fcall	_ledSet
  3307     0557                     l3369:
  3308                           
  3309                           ;main.c: 189:         uint8_t foodPosition = snake_getFoodPosition();
  3310     0557  318C  24D9  3183   	fcall	_snake_getFoodPosition
  3311     055A  0020               	movlb	0	; select bank0
  3312     055B  00C3               	movwf	main@foodPosition_674
  3313     055C                     l3371:
  3314                           
  3315                           ;main.c: 190:         ledSet(foodPosition%4, foodPosition/4);
  3316     055C  3004               	movlw	4
  3317     055D  00F9               	movwf	___awdiv@divisor
  3318     055E  3000               	movlw	0
  3319     055F  00FA               	movwf	___awdiv@divisor+1
  3320     0560  0843               	movf	main@foodPosition_674,w
  3321     0561  00BD               	movwf	??_main
  3322     0562  01BE               	clrf	??_main+1
  3323     0563  083D               	movf	??_main,w
  3324     0564  00FB               	movwf	___awdiv@dividend
  3325     0565  083E               	movf	??_main+1,w
  3326     0566  00FC               	movwf	___awdiv@dividend+1
  3327     0567  3180  2035  3183   	fcall	___awdiv
  3328     056A  0879               	movf	?___awdiv,w
  3329     056B  0020               	movlb	0	; select bank0
  3330     056C  00A4               	movwf	ledSet@c
  3331     056D  0843               	movf	main@foodPosition_674,w
  3332     056E  3903               	andlw	3
  3333     056F  318D  2561  3183   	fcall	_ledSet
  3334     0572  2BEC               	goto	l3275
  3335     0573  3180  2802         	ljmp	start
  3336     0575                     __end_of_main:
  3337                           
  3338                           	psect	text1
  3339     0156                     __ptext1:	
  3340 ;; *************** function _snake_move *****************
  3341 ;; Defined at:
  3342 ;;		line 33 in file "snake.c"
  3343 ;; Parameters:    Size  Location     Type
  3344 ;;  direction       1    wreg     unsigned char 
  3345 ;; Auto vars:     Size  Location     Type
  3346 ;;  direction       1    8[BANK0 ] unsigned char 
  3347 ;;  i               1   10[BANK0 ] unsigned char 
  3348 ;;  incentive       1    9[BANK0 ] char 
  3349 ;; Return value:  Size  Location     Type
  3350 ;;                  1    wreg      char 
  3351 ;; Registers used:
  3352 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3353 ;; Tracked objects:
  3354 ;;		On entry : 0/0
  3355 ;;		On exit  : 0/0
  3356 ;;		Unchanged: 0/0
  3357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3358 ;;      Params:         0       0       0       0       0       0
  3359 ;;      Locals:         0       3       0       0       0       0
  3360 ;;      Temps:          0       2       0       0       0       0
  3361 ;;      Totals:         0       5       0       0       0       0
  3362 ;;Total ram usage:        5 bytes
  3363 ;; Hardware stack levels used: 1
  3364 ;; Hardware stack levels required when called: 3
  3365 ;; This function calls:
  3366 ;;		___awdiv
  3367 ;;		_rand
  3368 ;;		_snake_initiate
  3369 ;; This function is called by:
  3370 ;;		_main
  3371 ;; This function uses a non-reentrant model
  3372 ;;
  3373                           
  3374     0156                     _snake_move:	
  3375                           ;psect for function _snake_move
  3376                           
  3377                           
  3378                           ;incstack = 0
  3379                           ; Regs used in _snake_move: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3380                           ;snake_move@direction stored from wreg
  3381     0156  0020               	movlb	0	; select bank0
  3382     0157  00A8               	movwf	snake_move@direction
  3383     0158                     l2965:
  3384                           
  3385                           ;snake.c: 34:     remainingMoves--;
  3386     0158  3001               	movlw	1
  3387     0159  02DD               	subwf	_remainingMoves,f
  3388     015A                     l2967:
  3389                           
  3390                           ;snake.c: 35:     for(uint8_t i = 0; i < (4*4); i++){
  3391     015A  01AA               	clrf	snake_move@i
  3392     015B                     l2973:
  3393                           
  3394                           ;snake.c: 36:         if(field[i] > 0){
  3395     015B  082A               	movf	snake_move@i,w
  3396     015C  3ED4               	addlw	(low (_field| 0))& (0+255)
  3397     015D  0086               	movwf	6
  3398     015E  0187               	clrf	7
  3399     015F  0801               	movf	1,w
  3400     0160  1903               	btfsc	3,2
  3401     0161  2963               	goto	u2041
  3402     0162  2964               	goto	u2040
  3403     0163                     u2041:
  3404     0163  296A               	goto	l2977
  3405     0164                     u2040:
  3406     0164                     l2975:
  3407                           
  3408                           ;snake.c: 37:             field[i]--;
  3409     0164  082A               	movf	snake_move@i,w
  3410     0165  3ED4               	addlw	(low (_field| 0))& (0+255)
  3411     0166  0086               	movwf	6
  3412     0167  0187               	clrf	7
  3413     0168  3001               	movlw	1
  3414     0169  0281               	subwf	1,f
  3415     016A                     l2977:
  3416                           
  3417                           ;snake.c: 39:     }
  3418     016A  3001               	movlw	1
  3419     016B  00A6               	movwf	??_snake_move
  3420     016C  0826               	movf	??_snake_move,w
  3421     016D  07AA               	addwf	snake_move@i,f
  3422     016E                     l2979:
  3423     016E  3010               	movlw	16
  3424     016F  022A               	subwf	snake_move@i,w
  3425     0170  1C03               	skipc
  3426     0171  2973               	goto	u2051
  3427     0172  2974               	goto	u2050
  3428     0173                     u2051:
  3429     0173  295B               	goto	l2973
  3430     0174                     u2050:
  3431     0174                     l2981:
  3432                           
  3433                           ;snake.c: 40:     int8_t incentive = 0;
  3434     0174  01A9               	clrf	snake_move@incentive
  3435     0175                     l2983:
  3436                           
  3437                           ;snake.c: 41:     direction &= 0x03;
  3438     0175  3003               	movlw	3
  3439     0176  00A6               	movwf	??_snake_move
  3440     0177  0826               	movf	??_snake_move,w
  3441     0178  05A8               	andwf	snake_move@direction,f
  3442                           
  3443                           ;snake.c: 42:     switch(direction){
  3444     0179  29CB               	goto	l3011
  3445     017A                     l2985:
  3446                           
  3447                           ;snake.c: 44:             if((headPosition%4) == 0){
  3448     017A  085F               	movf	_headPosition,w
  3449     017B  3903               	andlw	3
  3450     017C  1D03               	btfss	3,2
  3451     017D  297F               	goto	u2061
  3452     017E  2980               	goto	u2060
  3453     017F                     u2061:
  3454     017F  2984               	goto	l2989
  3455     0180                     u2060:
  3456     0180                     l2987:
  3457                           
  3458                           ;snake.c: 45:                 incentive = -1;
  3459     0180  0020               	movlb	0	; select bank0
  3460     0181  01A9               	clrf	snake_move@incentive
  3461     0182  03A9               	decf	snake_move@incentive,f
  3462                           
  3463                           ;snake.c: 46:             } else{
  3464     0183  29E1               	goto	l3013
  3465     0184                     l2989:
  3466                           
  3467                           ;snake.c: 47:                 headPosition--;
  3468     0184  3001               	movlw	1
  3469     0185  02DF               	subwf	_headPosition,f
  3470     0186  29E1               	goto	l3013
  3471     0187                     l2991:
  3472                           
  3473                           ;snake.c: 51:             if((headPosition%4) == (4 -1)){
  3474     0187  3003               	movlw	3
  3475     0188  055F               	andwf	_headPosition,w
  3476     0189  00A6               	movwf	??_snake_move
  3477     018A  3003               	movlw	3
  3478     018B  0626               	xorwf	??_snake_move,w
  3479     018C  1D03               	btfss	3,2
  3480     018D  298F               	goto	u2071
  3481     018E  2990               	goto	u2070
  3482     018F                     u2071:
  3483     018F  2991               	goto	l2995
  3484     0190                     u2070:
  3485     0190  2980               	goto	l2987
  3486     0191                     l2995:
  3487                           
  3488                           ;snake.c: 54:                 headPosition++;
  3489     0191  3001               	movlw	1
  3490     0192  00A6               	movwf	??_snake_move
  3491     0193  0826               	movf	??_snake_move,w
  3492     0194  07DF               	addwf	_headPosition,f
  3493     0195  29E1               	goto	l3013
  3494     0196                     l2997:
  3495                           
  3496                           ;snake.c: 58:             if((headPosition/4) == 0){
  3497     0196  3004               	movlw	4
  3498     0197  00F9               	movwf	___awdiv@divisor
  3499     0198  3000               	movlw	0
  3500     0199  00FA               	movwf	___awdiv@divisor+1
  3501     019A  085F               	movf	_headPosition,w
  3502     019B  00A6               	movwf	??_snake_move
  3503     019C  01A7               	clrf	??_snake_move+1
  3504     019D  0826               	movf	??_snake_move,w
  3505     019E  00FB               	movwf	___awdiv@dividend
  3506     019F  0827               	movf	??_snake_move+1,w
  3507     01A0  00FC               	movwf	___awdiv@dividend+1
  3508     01A1  3180  2035  3181   	fcall	___awdiv
  3509     01A4  0879               	movf	?___awdiv,w
  3510     01A5  047A               	iorwf	?___awdiv+1,w
  3511     01A6  1D03               	btfss	3,2
  3512     01A7  29A9               	goto	u2081
  3513     01A8  29AA               	goto	u2080
  3514     01A9                     u2081:
  3515     01A9  29AB               	goto	l3001
  3516     01AA                     u2080:
  3517     01AA  2980               	goto	l2987
  3518     01AB                     l3001:
  3519                           
  3520                           ;snake.c: 61:                 headPosition -= 4;
  3521     01AB  3004               	movlw	4
  3522     01AC  0020               	movlb	0	; select bank0
  3523     01AD  02DF               	subwf	_headPosition,f
  3524     01AE  29E1               	goto	l3013
  3525     01AF                     l3003:
  3526                           
  3527                           ;snake.c: 65:             if((headPosition/4) == (4 -1)){
  3528     01AF  3004               	movlw	4
  3529     01B0  00F9               	movwf	___awdiv@divisor
  3530     01B1  3000               	movlw	0
  3531     01B2  00FA               	movwf	___awdiv@divisor+1
  3532     01B3  085F               	movf	_headPosition,w
  3533     01B4  00A6               	movwf	??_snake_move
  3534     01B5  01A7               	clrf	??_snake_move+1
  3535     01B6  0826               	movf	??_snake_move,w
  3536     01B7  00FB               	movwf	___awdiv@dividend
  3537     01B8  0827               	movf	??_snake_move+1,w
  3538     01B9  00FC               	movwf	___awdiv@dividend+1
  3539     01BA  3180  2035  3181   	fcall	___awdiv
  3540     01BD  3003               	movlw	3
  3541     01BE  0679               	xorwf	?___awdiv,w
  3542     01BF  047A               	iorwf	?___awdiv+1,w
  3543     01C0  1D03               	btfss	3,2
  3544     01C1  29C3               	goto	u2091
  3545     01C2  29C4               	goto	u2090
  3546     01C3                     u2091:
  3547     01C3  29C5               	goto	l3007
  3548     01C4                     u2090:
  3549     01C4  2980               	goto	l2987
  3550     01C5                     l3007:
  3551                           
  3552                           ;snake.c: 68:                 headPosition += 4;
  3553     01C5  3004               	movlw	4
  3554     01C6  0020               	movlb	0	; select bank0
  3555     01C7  00A6               	movwf	??_snake_move
  3556     01C8  0826               	movf	??_snake_move,w
  3557     01C9  07DF               	addwf	_headPosition,f
  3558     01CA  29E1               	goto	l3013
  3559     01CB                     l3011:
  3560     01CB  0828               	movf	snake_move@direction,w
  3561     01CC  00A6               	movwf	??_snake_move
  3562     01CD  01A7               	clrf	??_snake_move+1
  3563                           
  3564                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3565                           ; Switch size 1, requested type "simple"
  3566                           ; Number of cases is 1, Range of values is 0 to 0
  3567                           ; switch strategies available:
  3568                           ; Name         Instructions Cycles
  3569                           ; simple_byte            4     3 (average)
  3570                           ; direct_byte            8     6 (fixed)
  3571                           ; jumptable            260     6 (fixed)
  3572                           ;	Chosen strategy is simple_byte
  3573     01CE  0827               	movf	??_snake_move+1,w
  3574     01CF  3A00               	xorlw	0	; case 0
  3575     01D0  1903               	skipnz
  3576     01D1  29D3               	goto	l3447
  3577     01D2  29E1               	goto	l3013
  3578     01D3                     l3447:
  3579                           
  3580                           ; Switch size 1, requested type "simple"
  3581                           ; Number of cases is 4, Range of values is 0 to 3
  3582                           ; switch strategies available:
  3583                           ; Name         Instructions Cycles
  3584                           ; simple_byte           13     7 (average)
  3585                           ; direct_byte           14     6 (fixed)
  3586                           ; jumptable            260     6 (fixed)
  3587                           ;	Chosen strategy is simple_byte
  3588     01D3  0826               	movf	??_snake_move,w
  3589     01D4  3A00               	xorlw	0	; case 0
  3590     01D5  1903               	skipnz
  3591     01D6  297A               	goto	l2985
  3592     01D7  3A01               	xorlw	1	; case 1
  3593     01D8  1903               	skipnz
  3594     01D9  2987               	goto	l2991
  3595     01DA  3A03               	xorlw	3	; case 2
  3596     01DB  1903               	skipnz
  3597     01DC  2996               	goto	l2997
  3598     01DD  3A01               	xorlw	1	; case 3
  3599     01DE  1903               	skipnz
  3600     01DF  29AF               	goto	l3003
  3601     01E0  29E1               	goto	l3013
  3602     01E1                     l3013:
  3603                           
  3604                           ;snake.c: 72:     if(incentive == -1){
  3605     01E1  0A29               	incf	snake_move@incentive,w
  3606     01E2  1D03               	btfss	3,2
  3607     01E3  29E5               	goto	u2101
  3608     01E4  29E6               	goto	u2100
  3609     01E5                     u2101:
  3610     01E5  29EA               	goto	l3017
  3611     01E6                     u2100:
  3612     01E6                     l3015:
  3613                           
  3614                           ;snake.c: 73:         snake_initiate();
  3615     01E6  3180  2005  3181   	fcall	_snake_initiate
  3616                           
  3617                           ;snake.c: 74:     } else if(field[headPosition] > 0){
  3618     01E9  2A1A               	goto	l3037
  3619     01EA                     l3017:
  3620     01EA  085F               	movf	_headPosition,w
  3621     01EB  3ED4               	addlw	(low (_field| 0))& (0+255)
  3622     01EC  0086               	movwf	6
  3623     01ED  0187               	clrf	7
  3624     01EE  0801               	movf	1,w
  3625     01EF  1903               	btfsc	3,2
  3626     01F0  29F2               	goto	u2111
  3627     01F1  29F3               	goto	u2110
  3628     01F2                     u2111:
  3629     01F2  29F6               	goto	l3023
  3630     01F3                     u2110:
  3631     01F3                     l3019:
  3632                           
  3633                           ;snake.c: 75:         incentive = -1;
  3634     01F3  01A9               	clrf	snake_move@incentive
  3635     01F4  03A9               	decf	snake_move@incentive,f
  3636     01F5  29E6               	goto	l3015
  3637     01F6                     l3023:
  3638                           
  3639                           ;snake.c: 78:         if(headPosition == foodPosition){
  3640     01F6  085F               	movf	_headPosition,w
  3641     01F7  065E               	xorwf	_foodPosition,w
  3642     01F8  1D03               	skipz
  3643     01F9  29FB               	goto	u2121
  3644     01FA  29FC               	goto	u2120
  3645     01FB                     u2121:
  3646     01FB  2A14               	goto	l3035
  3647     01FC                     u2120:
  3648     01FC                     l3025:
  3649                           
  3650                           ;snake.c: 79:             remainingMoves = 40;
  3651     01FC  3028               	movlw	40
  3652     01FD  00DD               	movwf	_remainingMoves
  3653     01FE                     l3027:
  3654                           
  3655                           ;snake.c: 80:             incentive = 1;
  3656     01FE  01A9               	clrf	snake_move@incentive
  3657     01FF  0AA9               	incf	snake_move@incentive,f
  3658     0200                     l3029:
  3659                           
  3660                           ;snake.c: 81:             snakeSize++;
  3661     0200  3001               	movlw	1
  3662     0201  00A6               	movwf	??_snake_move
  3663     0202  0826               	movf	??_snake_move,w
  3664     0203  07E1               	addwf	_snakeSize,f
  3665     0204                     l3031:
  3666                           
  3667                           ;snake.c: 83:                 foodPosition = rand()%(4*4);
  3668     0204  318E  2697  3181   	fcall	_rand
  3669     0207  087C               	movf	?_rand,w
  3670     0208  390F               	andlw	15
  3671     0209  0020               	movlb	0	; select bank0
  3672     020A  00DE               	movwf	_foodPosition
  3673     020B                     l3033:
  3674                           
  3675                           ;snake.c: 84:             }while(field[foodPosition] > 0);
  3676     020B  085E               	movf	_foodPosition,w
  3677     020C  3ED4               	addlw	(low (_field| 0))& (0+255)
  3678     020D  0086               	movwf	6
  3679     020E  0187               	clrf	7
  3680     020F  0801               	movf	1,w
  3681     0210  1D03               	btfss	3,2
  3682     0211  2A13               	goto	u2131
  3683     0212  2A14               	goto	u2130
  3684     0213                     u2131:
  3685     0213  2A04               	goto	l3031
  3686     0214                     u2130:
  3687     0214                     l3035:
  3688                           
  3689                           ;snake.c: 86:         field[headPosition] = snakeSize;
  3690     0214  085F               	movf	_headPosition,w
  3691     0215  3ED4               	addlw	(low (_field| 0))& (0+255)
  3692     0216  0086               	movwf	6
  3693     0217  0187               	clrf	7
  3694     0218  0861               	movf	_snakeSize,w
  3695     0219  0081               	movwf	1
  3696     021A                     l3037:
  3697                           
  3698                           ;snake.c: 88:     if(remainingMoves == 0){
  3699     021A  0020               	movlb	0	; select bank0
  3700     021B  085D               	movf	_remainingMoves,w
  3701     021C  1D03               	btfss	3,2
  3702     021D  2A1F               	goto	u2141
  3703     021E  2A20               	goto	u2140
  3704     021F                     u2141:
  3705     021F  2A25               	goto	l3043
  3706     0220                     u2140:
  3707     0220                     l3039:
  3708                           
  3709                           ;snake.c: 89:         incentive = -1;
  3710     0220  01A9               	clrf	snake_move@incentive
  3711     0221  03A9               	decf	snake_move@incentive,f
  3712     0222                     l3041:
  3713                           
  3714                           ;snake.c: 90:         snake_initiate();
  3715     0222  3180  2005  3181   	fcall	_snake_initiate
  3716     0225                     l3043:
  3717                           
  3718                           ;snake.c: 92:     return incentive;
  3719     0225  0020               	movlb	0	; select bank0
  3720     0226  0829               	movf	snake_move@incentive,w
  3721     0227                     l484:
  3722     0227  0008               	return
  3723     0228                     __end_of_snake_move:
  3724                           
  3725                           	psect	text2
  3726     0005                     __ptext2:	
  3727 ;; *************** function _snake_initiate *****************
  3728 ;; Defined at:
  3729 ;;		line 21 in file "snake.c"
  3730 ;; Parameters:    Size  Location     Type
  3731 ;;		None
  3732 ;; Auto vars:     Size  Location     Type
  3733 ;;  i               1    5[BANK0 ] unsigned char 
  3734 ;; Return value:  Size  Location     Type
  3735 ;;                  1    wreg      void 
  3736 ;; Registers used:
  3737 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3738 ;; Tracked objects:
  3739 ;;		On entry : 0/0
  3740 ;;		On exit  : 0/0
  3741 ;;		Unchanged: 0/0
  3742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3743 ;;      Params:         0       0       0       0       0       0
  3744 ;;      Locals:         0       1       0       0       0       0
  3745 ;;      Temps:          0       1       0       0       0       0
  3746 ;;      Totals:         0       2       0       0       0       0
  3747 ;;Total ram usage:        2 bytes
  3748 ;; Hardware stack levels used: 1
  3749 ;; Hardware stack levels required when called: 2
  3750 ;; This function calls:
  3751 ;;		_rand
  3752 ;;		_srand
  3753 ;; This function is called by:
  3754 ;;		_main
  3755 ;;		_snake_move
  3756 ;; This function uses a non-reentrant model
  3757 ;;
  3758                           
  3759     0005                     _snake_initiate:	
  3760                           ;psect for function _snake_initiate
  3761                           
  3762     0005                     l2549:	
  3763                           ;incstack = 0
  3764                           ; Regs used in _snake_initiate: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3765                           
  3766                           
  3767                           ;snake.c: 22:     for(uint8_t i = 0; i < (4*4); i++){
  3768     0005  0020               	movlb	0	; select bank0
  3769     0006  01A5               	clrf	snake_initiate@i
  3770     0007                     l2555:
  3771                           
  3772                           ;snake.c: 23:         field[i] = 0;
  3773     0007  0825               	movf	snake_initiate@i,w
  3774     0008  3ED4               	addlw	(low (_field| 0))& (0+255)
  3775     0009  0086               	movwf	6
  3776     000A  0187               	clrf	7
  3777     000B  0181               	clrf	1
  3778     000C                     l2557:
  3779                           
  3780                           ;snake.c: 24:     }
  3781     000C  3001               	movlw	1
  3782     000D  00A4               	movwf	??_snake_initiate
  3783     000E  0824               	movf	??_snake_initiate,w
  3784     000F  07A5               	addwf	snake_initiate@i,f
  3785     0010                     l2559:
  3786     0010  3010               	movlw	16
  3787     0011  0225               	subwf	snake_initiate@i,w
  3788     0012  1C03               	skipc
  3789     0013  2815               	goto	u1431
  3790     0014  2816               	goto	u1430
  3791     0015                     u1431:
  3792     0015  2807               	goto	l2555
  3793     0016                     u1430:
  3794     0016                     l2561:
  3795                           
  3796                           ;snake.c: 25:     srand(0);
  3797     0016  3000               	movlw	0
  3798     0017  00F0               	movwf	srand@s
  3799     0018  00F1               	movwf	srand@s+1
  3800     0019  318D  251C  3180   	fcall	_srand
  3801                           
  3802                           ;snake.c: 26:     headPosition = rand()%(4*4);
  3803     001C  318E  2697  3180   	fcall	_rand
  3804     001F  087C               	movf	?_rand,w
  3805     0020  390F               	andlw	15
  3806     0021  0020               	movlb	0	; select bank0
  3807     0022  00DF               	movwf	_headPosition
  3808                           
  3809                           ;snake.c: 27:     foodPosition = rand()%(4*4);
  3810     0023  318E  2697  3180   	fcall	_rand
  3811     0026  087C               	movf	?_rand,w
  3812     0027  390F               	andlw	15
  3813     0028  0020               	movlb	0	; select bank0
  3814     0029  00DE               	movwf	_foodPosition
  3815     002A                     l2563:
  3816                           
  3817                           ;snake.c: 28:     snakeSize = 3;
  3818     002A  3003               	movlw	3
  3819     002B  00E1               	movwf	_snakeSize
  3820     002C                     l2565:
  3821                           
  3822                           ;snake.c: 29:     remainingMoves = 40;
  3823     002C  3028               	movlw	40
  3824     002D  00DD               	movwf	_remainingMoves
  3825     002E                     l2567:
  3826                           
  3827                           ;snake.c: 30:     field[headPosition] = snakeSize;
  3828     002E  085F               	movf	_headPosition,w
  3829     002F  3ED4               	addlw	(low (_field| 0))& (0+255)
  3830     0030  0086               	movwf	6
  3831     0031  0187               	clrf	7
  3832     0032  0861               	movf	_snakeSize,w
  3833     0033  0081               	movwf	1
  3834     0034                     l456:
  3835     0034  0008               	return
  3836     0035                     __end_of_snake_initiate:
  3837                           
  3838                           	psect	text3
  3839     0D1C                     __ptext3:	
  3840 ;; *************** function _srand *****************
  3841 ;; Defined at:
  3842 ;;		line 6 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\common\rand.c"
  3843 ;; Parameters:    Size  Location     Type
  3844 ;;  s               2    0[COMMON] unsigned int 
  3845 ;; Auto vars:     Size  Location     Type
  3846 ;;		None
  3847 ;; Return value:  Size  Location     Type
  3848 ;;                  1    wreg      void 
  3849 ;; Registers used:
  3850 ;;		wreg, status,2, status,0
  3851 ;; Tracked objects:
  3852 ;;		On entry : 0/0
  3853 ;;		On exit  : 0/0
  3854 ;;		Unchanged: 0/0
  3855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3856 ;;      Params:         2       0       0       0       0       0
  3857 ;;      Locals:         0       0       0       0       0       0
  3858 ;;      Temps:          0       0       0       0       0       0
  3859 ;;      Totals:         2       0       0       0       0       0
  3860 ;;Total ram usage:        2 bytes
  3861 ;; Hardware stack levels used: 1
  3862 ;; This function calls:
  3863 ;;		Nothing
  3864 ;; This function is called by:
  3865 ;;		_snake_initiate
  3866 ;; This function uses a non-reentrant model
  3867 ;;
  3868                           
  3869     0D1C                     _srand:	
  3870                           ;psect for function _srand
  3871                           
  3872     0D1C                     l2495:	
  3873                           ;incstack = 0
  3874                           ; Regs used in _srand: [wreg+status,2+status,0]
  3875                           
  3876     0D1C  0870               	movf	srand@s,w
  3877     0D1D  3EFF               	addlw	255
  3878     0D1E  0020               	movlb	0	; select bank0
  3879     0D1F  00EB               	movwf	_seed
  3880     0D20  30FF               	movlw	255
  3881     0D21  3D71               	addwfc	srand@s+1,w
  3882     0D22  00EC               	movwf	_seed+1
  3883     0D23  01ED               	clrf	_seed+2
  3884     0D24  01EE               	clrf	_seed+3
  3885     0D25                     l1254:
  3886     0D25  0008               	return
  3887     0D26                     __end_of_srand:
  3888                           
  3889                           	psect	text4
  3890     0095                     __ptext4:	
  3891 ;; *************** function _snake_getSurroundings *****************
  3892 ;; Defined at:
  3893 ;;		line 99 in file "snake.c"
  3894 ;; Parameters:    Size  Location     Type
  3895 ;;  surroundings    1    wreg     PTR char 
  3896 ;;		 -> Y0(8), 
  3897 ;; Auto vars:     Size  Location     Type
  3898 ;;  surroundings    1   13[BANK0 ] PTR char 
  3899 ;;		 -> Y0(8), 
  3900 ;;  i               1   12[BANK0 ] unsigned char 
  3901 ;;  i               1    9[BANK0 ] unsigned char 
  3902 ;;  ch              1   11[BANK0 ] unsigned char 
  3903 ;;  lh              1   10[BANK0 ] unsigned char 
  3904 ;;  cf              1    8[BANK0 ] unsigned char 
  3905 ;;  lf              1    7[BANK0 ] unsigned char 
  3906 ;;  p               1    6[BANK0 ] unsigned char 
  3907 ;; Return value:  Size  Location     Type
  3908 ;;                  1    wreg      void 
  3909 ;; Registers used:
  3910 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3911 ;; Tracked objects:
  3912 ;;		On entry : 0/0
  3913 ;;		On exit  : 0/0
  3914 ;;		Unchanged: 0/0
  3915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3916 ;;      Params:         0       0       0       0       0       0
  3917 ;;      Locals:         0       8       0       0       0       0
  3918 ;;      Temps:          0       2       0       0       0       0
  3919 ;;      Totals:         0      10       0       0       0       0
  3920 ;;Total ram usage:       10 bytes
  3921 ;; Hardware stack levels used: 1
  3922 ;; Hardware stack levels required when called: 1
  3923 ;; This function calls:
  3924 ;;		___awdiv
  3925 ;; This function is called by:
  3926 ;;		_main
  3927 ;; This function uses a non-reentrant model
  3928 ;;
  3929                           
  3930     0095                     _snake_getSurroundings:	
  3931                           ;psect for function _snake_getSurroundings
  3932                           
  3933                           
  3934                           ;incstack = 0
  3935                           ; Regs used in _snake_getSurroundings: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  3936                           ;snake_getSurroundings@surroundings stored from wreg
  3937     0095  0020               	movlb	0	; select bank0
  3938     0096  00AD               	movwf	snake_getSurroundings@surroundings
  3939     0097                     l2811:
  3940                           
  3941                           ;snake.c: 100:     for(uint8_t i = 0; i < 8; i++){
  3942     0097  01A9               	clrf	snake_getSurroundings@i
  3943     0098                     l2817:
  3944                           
  3945                           ;snake.c: 101:         surroundings[i] = 0;
  3946     0098  0829               	movf	snake_getSurroundings@i,w
  3947     0099  072D               	addwf	snake_getSurroundings@surroundings,w
  3948     009A  00A4               	movwf	??_snake_getSurroundings
  3949     009B  0824               	movf	??_snake_getSurroundings,w
  3950     009C  0086               	movwf	6
  3951     009D  0187               	clrf	7
  3952     009E  0181               	clrf	1
  3953     009F                     l2819:
  3954                           
  3955                           ;snake.c: 102:     }
  3956     009F  3001               	movlw	1
  3957     00A0  00A4               	movwf	??_snake_getSurroundings
  3958     00A1  0824               	movf	??_snake_getSurroundings,w
  3959     00A2  07A9               	addwf	snake_getSurroundings@i,f
  3960     00A3                     l2821:
  3961     00A3  3008               	movlw	8
  3962     00A4  0229               	subwf	snake_getSurroundings@i,w
  3963     00A5  1C03               	skipc
  3964     00A6  28A8               	goto	u1831
  3965     00A7  28A9               	goto	u1830
  3966     00A8                     u1831:
  3967     00A8  2898               	goto	l2817
  3968     00A9                     u1830:
  3969     00A9                     l2823:
  3970                           
  3971                           ;snake.c: 103:     uint8_t lh = headPosition%4;
  3972     00A9  085F               	movf	_headPosition,w
  3973     00AA  3903               	andlw	3
  3974     00AB  00AA               	movwf	snake_getSurroundings@lh
  3975     00AC                     l2825:
  3976                           
  3977                           ;snake.c: 104:     uint8_t ch = headPosition/4;
  3978     00AC  3004               	movlw	4
  3979     00AD  00F9               	movwf	___awdiv@divisor
  3980     00AE  3000               	movlw	0
  3981     00AF  00FA               	movwf	___awdiv@divisor+1
  3982     00B0  085F               	movf	_headPosition,w
  3983     00B1  00A4               	movwf	??_snake_getSurroundings
  3984     00B2  01A5               	clrf	??_snake_getSurroundings+1
  3985     00B3  0824               	movf	??_snake_getSurroundings,w
  3986     00B4  00FB               	movwf	___awdiv@dividend
  3987     00B5  0825               	movf	??_snake_getSurroundings+1,w
  3988     00B6  00FC               	movwf	___awdiv@dividend+1
  3989     00B7  3180  2035  3180   	fcall	___awdiv
  3990     00BA  0879               	movf	?___awdiv,w
  3991     00BB  0020               	movlb	0	; select bank0
  3992     00BC  00AB               	movwf	snake_getSurroundings@ch
  3993     00BD                     l2827:
  3994                           
  3995                           ;snake.c: 105:     uint8_t lf = foodPosition%4;
  3996     00BD  085E               	movf	_foodPosition,w
  3997     00BE  3903               	andlw	3
  3998     00BF  00A7               	movwf	snake_getSurroundings@lf
  3999                           
  4000                           ;snake.c: 106:     uint8_t cf = foodPosition/4;
  4001     00C0  3004               	movlw	4
  4002     00C1  00F9               	movwf	___awdiv@divisor
  4003     00C2  3000               	movlw	0
  4004     00C3  00FA               	movwf	___awdiv@divisor+1
  4005     00C4  085E               	movf	_foodPosition,w
  4006     00C5  00A4               	movwf	??_snake_getSurroundings
  4007     00C6  01A5               	clrf	??_snake_getSurroundings+1
  4008     00C7  0824               	movf	??_snake_getSurroundings,w
  4009     00C8  00FB               	movwf	___awdiv@dividend
  4010     00C9  0825               	movf	??_snake_getSurroundings+1,w
  4011     00CA  00FC               	movwf	___awdiv@dividend+1
  4012     00CB  3180  2035  3180   	fcall	___awdiv
  4013     00CE  0879               	movf	?___awdiv,w
  4014     00CF  0020               	movlb	0	; select bank0
  4015     00D0  00A8               	movwf	snake_getSurroundings@cf
  4016     00D1                     l2829:
  4017                           
  4018                           ;snake.c: 107:     if(lh == 0){
  4019     00D1  082A               	movf	snake_getSurroundings@lh,w
  4020     00D2  1D03               	btfss	3,2
  4021     00D3  28D5               	goto	u1841
  4022     00D4  28D6               	goto	u1840
  4023     00D5                     u1841:
  4024     00D5  28DC               	goto	l2833
  4025     00D6                     u1840:
  4026     00D6                     l2831:
  4027                           
  4028                           ;snake.c: 108:         surroundings[0] = 1;
  4029     00D6  082D               	movf	snake_getSurroundings@surroundings,w
  4030     00D7  0086               	movwf	6
  4031     00D8  0187               	clrf	7
  4032     00D9  0181               	clrf	1
  4033     00DA  0A81               	incf	1,f
  4034                           
  4035                           ;snake.c: 109:     } else if(lh == (4 -1)){
  4036     00DB  28E7               	goto	l2837
  4037     00DC                     l2833:
  4038     00DC  3003               	movlw	3
  4039     00DD  062A               	xorwf	snake_getSurroundings@lh,w
  4040     00DE  1D03               	btfss	3,2
  4041     00DF  28E1               	goto	u1851
  4042     00E0  28E2               	goto	u1850
  4043     00E1                     u1851:
  4044     00E1  28E7               	goto	l2837
  4045     00E2                     u1850:
  4046     00E2                     l2835:
  4047                           
  4048                           ;snake.c: 110:         surroundings[1] = 1;
  4049     00E2  0A2D               	incf	snake_getSurroundings@surroundings,w
  4050     00E3  0086               	movwf	6
  4051     00E4  0187               	clrf	7
  4052     00E5  0181               	clrf	1
  4053     00E6  0A81               	incf	1,f
  4054     00E7                     l2837:
  4055                           
  4056                           ;snake.c: 112:     if(ch == 0){
  4057     00E7  082B               	movf	snake_getSurroundings@ch,w
  4058     00E8  1D03               	btfss	3,2
  4059     00E9  28EB               	goto	u1861
  4060     00EA  28EC               	goto	u1860
  4061     00EB                     u1861:
  4062     00EB  28F3               	goto	l2841
  4063     00EC                     u1860:
  4064     00EC                     l2839:
  4065                           
  4066                           ;snake.c: 113:         surroundings[2] = 1;
  4067     00EC  082D               	movf	snake_getSurroundings@surroundings,w
  4068     00ED  3E02               	addlw	2
  4069     00EE  0086               	movwf	6
  4070     00EF  0187               	clrf	7
  4071     00F0  0181               	clrf	1
  4072     00F1  0A81               	incf	1,f
  4073                           
  4074                           ;snake.c: 114:     } else if(ch == (4 -1)){
  4075     00F2  28FF               	goto	l2845
  4076     00F3                     l2841:
  4077     00F3  3003               	movlw	3
  4078     00F4  062B               	xorwf	snake_getSurroundings@ch,w
  4079     00F5  1D03               	btfss	3,2
  4080     00F6  28F8               	goto	u1871
  4081     00F7  28F9               	goto	u1870
  4082     00F8                     u1871:
  4083     00F8  28FF               	goto	l2845
  4084     00F9                     u1870:
  4085     00F9                     l2843:
  4086                           
  4087                           ;snake.c: 115:         surroundings[3] = 1;
  4088     00F9  082D               	movf	snake_getSurroundings@surroundings,w
  4089     00FA  3E03               	addlw	3
  4090     00FB  0086               	movwf	6
  4091     00FC  0187               	clrf	7
  4092     00FD  0181               	clrf	1
  4093     00FE  0A81               	incf	1,f
  4094     00FF                     l2845:
  4095                           
  4096                           ;snake.c: 117:     uint8_t p;;snake.c: 118:     for(uint8_t i = 0; i < 4; i++){
  4097     00FF  01AC               	clrf	snake_getSurroundings@i_806
  4098     0100                     l2851:
  4099                           
  4100                           ;snake.c: 119:         p = (headPosition+mapping[i])%(4*4);
  4101     0100  082C               	movf	snake_getSurroundings@i_806,w
  4102     0101  3EE4               	addlw	(low (_mapping| 0))& (0+255)
  4103     0102  0086               	movwf	6
  4104     0103  0187               	clrf	7
  4105     0104  0801               	movf	1,w
  4106     0105  075F               	addwf	_headPosition,w
  4107     0106  390F               	andlw	15
  4108     0107  00A6               	movwf	snake_getSurroundings@p
  4109                           
  4110                           ;snake.c: 120:         if(field[p] > 0){
  4111     0108  0826               	movf	snake_getSurroundings@p,w
  4112     0109  3ED4               	addlw	(low (_field| 0))& (0+255)
  4113     010A  0086               	movwf	6
  4114     010B  0187               	clrf	7
  4115     010C  0801               	movf	1,w
  4116     010D  1903               	btfsc	3,2
  4117     010E  2910               	goto	u1881
  4118     010F  2911               	goto	u1880
  4119     0110                     u1881:
  4120     0110  2919               	goto	l2855
  4121     0111                     u1880:
  4122     0111                     l2853:
  4123                           
  4124                           ;snake.c: 121:             surroundings[i] = 1;
  4125     0111  082C               	movf	snake_getSurroundings@i_806,w
  4126     0112  072D               	addwf	snake_getSurroundings@surroundings,w
  4127     0113  00A4               	movwf	??_snake_getSurroundings
  4128     0114  0824               	movf	??_snake_getSurroundings,w
  4129     0115  0086               	movwf	6
  4130     0116  0187               	clrf	7
  4131     0117  0181               	clrf	1
  4132     0118  0A81               	incf	1,f
  4133     0119                     l2855:
  4134                           
  4135                           ;snake.c: 123:     }
  4136     0119  3001               	movlw	1
  4137     011A  00A4               	movwf	??_snake_getSurroundings
  4138     011B  0824               	movf	??_snake_getSurroundings,w
  4139     011C  07AC               	addwf	snake_getSurroundings@i_806,f
  4140     011D                     l2857:
  4141     011D  3004               	movlw	4
  4142     011E  022C               	subwf	snake_getSurroundings@i_806,w
  4143     011F  1C03               	skipc
  4144     0120  2922               	goto	u1891
  4145     0121  2923               	goto	u1890
  4146     0122                     u1891:
  4147     0122  2900               	goto	l2851
  4148     0123                     u1890:
  4149     0123                     l2859:
  4150                           
  4151                           ;snake.c: 124:     if(lf<lh){
  4152     0123  082A               	movf	snake_getSurroundings@lh,w
  4153     0124  0227               	subwf	snake_getSurroundings@lf,w
  4154     0125  1803               	skipnc
  4155     0126  2928               	goto	u1901
  4156     0127  2929               	goto	u1900
  4157     0128                     u1901:
  4158     0128  2930               	goto	l2863
  4159     0129                     u1900:
  4160     0129                     l2861:
  4161                           
  4162                           ;snake.c: 125:         surroundings[4] = 1;
  4163     0129  082D               	movf	snake_getSurroundings@surroundings,w
  4164     012A  3E04               	addlw	4
  4165     012B  0086               	movwf	6
  4166     012C  0187               	clrf	7
  4167     012D  0181               	clrf	1
  4168     012E  0A81               	incf	1,f
  4169                           
  4170                           ;snake.c: 126:     } else if(lf>lh){
  4171     012F  293C               	goto	l2867
  4172     0130                     l2863:
  4173     0130  0827               	movf	snake_getSurroundings@lf,w
  4174     0131  022A               	subwf	snake_getSurroundings@lh,w
  4175     0132  1803               	skipnc
  4176     0133  2935               	goto	u1911
  4177     0134  2936               	goto	u1910
  4178     0135                     u1911:
  4179     0135  293C               	goto	l2867
  4180     0136                     u1910:
  4181     0136                     l2865:
  4182                           
  4183                           ;snake.c: 127:         surroundings[5] = 1;
  4184     0136  082D               	movf	snake_getSurroundings@surroundings,w
  4185     0137  3E05               	addlw	5
  4186     0138  0086               	movwf	6
  4187     0139  0187               	clrf	7
  4188     013A  0181               	clrf	1
  4189     013B  0A81               	incf	1,f
  4190     013C                     l2867:
  4191                           
  4192                           ;snake.c: 129:     if(cf<ch){
  4193     013C  082B               	movf	snake_getSurroundings@ch,w
  4194     013D  0228               	subwf	snake_getSurroundings@cf,w
  4195     013E  1803               	skipnc
  4196     013F  2941               	goto	u1921
  4197     0140  2942               	goto	u1920
  4198     0141                     u1921:
  4199     0141  2949               	goto	l2871
  4200     0142                     u1920:
  4201     0142                     l2869:
  4202                           
  4203                           ;snake.c: 130:         surroundings[6] = 1;
  4204     0142  082D               	movf	snake_getSurroundings@surroundings,w
  4205     0143  3E06               	addlw	6
  4206     0144  0086               	movwf	6
  4207     0145  0187               	clrf	7
  4208     0146  0181               	clrf	1
  4209     0147  0A81               	incf	1,f
  4210                           
  4211                           ;snake.c: 131:     } else if(cf>ch){
  4212     0148  2955               	goto	l507
  4213     0149                     l2871:
  4214     0149  0828               	movf	snake_getSurroundings@cf,w
  4215     014A  022B               	subwf	snake_getSurroundings@ch,w
  4216     014B  1803               	skipnc
  4217     014C  294E               	goto	u1931
  4218     014D  294F               	goto	u1930
  4219     014E                     u1931:
  4220     014E  2955               	goto	l507
  4221     014F                     u1930:
  4222     014F                     l2873:
  4223                           
  4224                           ;snake.c: 132:         surroundings[7] = 1;
  4225     014F  082D               	movf	snake_getSurroundings@surroundings,w
  4226     0150  3E07               	addlw	7
  4227     0151  0086               	movwf	6
  4228     0152  0187               	clrf	7
  4229     0153  0181               	clrf	1
  4230     0154  0A81               	incf	1,f
  4231     0155                     l507:
  4232     0155  0008               	return
  4233     0156                     __end_of_snake_getSurroundings:
  4234                           
  4235                           	psect	text5
  4236     0CD9                     __ptext5:	
  4237 ;; *************** function _snake_getFoodPosition *****************
  4238 ;; Defined at:
  4239 ;;		line 143 in file "snake.c"
  4240 ;; Parameters:    Size  Location     Type
  4241 ;;		None
  4242 ;; Auto vars:     Size  Location     Type
  4243 ;;		None
  4244 ;; Return value:  Size  Location     Type
  4245 ;;                  1    wreg      unsigned char 
  4246 ;; Registers used:
  4247 ;;		wreg
  4248 ;; Tracked objects:
  4249 ;;		On entry : 0/0
  4250 ;;		On exit  : 0/0
  4251 ;;		Unchanged: 0/0
  4252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4253 ;;      Params:         0       0       0       0       0       0
  4254 ;;      Locals:         0       0       0       0       0       0
  4255 ;;      Temps:          0       0       0       0       0       0
  4256 ;;      Totals:         0       0       0       0       0       0
  4257 ;;Total ram usage:        0 bytes
  4258 ;; Hardware stack levels used: 1
  4259 ;; This function calls:
  4260 ;;		Nothing
  4261 ;; This function is called by:
  4262 ;;		_main
  4263 ;; This function uses a non-reentrant model
  4264 ;;
  4265                           
  4266     0CD9                     _snake_getFoodPosition:	
  4267                           ;psect for function _snake_getFoodPosition
  4268                           
  4269     0CD9                     l2773:	
  4270                           ;incstack = 0
  4271                           ; Regs used in _snake_getFoodPosition: [wreg]
  4272                           
  4273                           
  4274                           ;snake.c: 144:     return foodPosition;
  4275     0CD9  0020               	movlb	0	; select bank0
  4276     0CDA  085E               	movf	_foodPosition,w
  4277     0CDB                     l516:
  4278     0CDB  0008               	return
  4279     0CDC                     __end_of_snake_getFoodPosition:
  4280                           
  4281                           	psect	text6
  4282     0CD7                     __ptext6:	
  4283 ;; *************** function _snake_getField *****************
  4284 ;; Defined at:
  4285 ;;		line 95 in file "snake.c"
  4286 ;; Parameters:    Size  Location     Type
  4287 ;;		None
  4288 ;; Auto vars:     Size  Location     Type
  4289 ;;		None
  4290 ;; Return value:  Size  Location     Type
  4291 ;;                  1    wreg      PTR unsigned char 
  4292 ;; Registers used:
  4293 ;;		wreg
  4294 ;; Tracked objects:
  4295 ;;		On entry : 0/0
  4296 ;;		On exit  : 0/0
  4297 ;;		Unchanged: 0/0
  4298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4299 ;;      Params:         0       0       0       0       0       0
  4300 ;;      Locals:         0       0       0       0       0       0
  4301 ;;      Temps:          0       0       0       0       0       0
  4302 ;;      Totals:         0       0       0       0       0       0
  4303 ;;Total ram usage:        0 bytes
  4304 ;; Hardware stack levels used: 1
  4305 ;; This function calls:
  4306 ;;		Nothing
  4307 ;; This function is called by:
  4308 ;;		_main
  4309 ;; This function uses a non-reentrant model
  4310 ;;
  4311                           
  4312     0CD7                     _snake_getField:	
  4313                           ;psect for function _snake_getField
  4314                           
  4315     0CD7                     l2765:	
  4316                           ;incstack = 0
  4317                           ; Regs used in _snake_getField: [wreg]
  4318                           
  4319                           
  4320                           ;snake.c: 96:     return field;
  4321     0CD7  30D4               	movlw	(low (_field| 0))& (0+255)
  4322     0CD8                     l487:
  4323     0CD8  0008               	return
  4324     0CD9                     __end_of_snake_getField:
  4325                           
  4326                           	psect	text7
  4327     0E36                     __ptext7:	
  4328 ;; *************** function _sendMatrix *****************
  4329 ;; Defined at:
  4330 ;;		line 55 in file "ledMatrix.c"
  4331 ;; Parameters:    Size  Location     Type
  4332 ;;		None
  4333 ;; Auto vars:     Size  Location     Type
  4334 ;;  j               1    6[COMMON] unsigned char 
  4335 ;;  i               1    7[COMMON] unsigned char 
  4336 ;;  nb              1    5[COMMON] unsigned char 
  4337 ;;  b               1    4[COMMON] unsigned char 
  4338 ;; Return value:  Size  Location     Type
  4339 ;;                  1    wreg      void 
  4340 ;; Registers used:
  4341 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4342 ;; Tracked objects:
  4343 ;;		On entry : 0/0
  4344 ;;		On exit  : 0/0
  4345 ;;		Unchanged: 0/0
  4346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4347 ;;      Params:         0       0       0       0       0       0
  4348 ;;      Locals:         4       0       0       0       0       0
  4349 ;;      Temps:          1       0       0       0       0       0
  4350 ;;      Totals:         5       0       0       0       0       0
  4351 ;;Total ram usage:        5 bytes
  4352 ;; Hardware stack levels used: 1
  4353 ;; Hardware stack levels required when called: 2
  4354 ;; This function calls:
  4355 ;;		_txMAX7219
  4356 ;; This function is called by:
  4357 ;;		_main
  4358 ;; This function uses a non-reentrant model
  4359 ;;
  4360                           
  4361     0E36                     _sendMatrix:	
  4362                           ;psect for function _sendMatrix
  4363                           
  4364     0E36                     l2777:	
  4365                           ;incstack = 0
  4366                           ; Regs used in _sendMatrix: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4367                           
  4368                           
  4369                           ;ledMatrix.c: 56:     uint8_t b;;ledMatrix.c: 57:     uint8_t nb;;ledMatrix.c: 58:     f
      +                          or(uint8_t i=0;i<8;i++){
  4370     0E36  01F7               	clrf	sendMatrix@i
  4371     0E37                     l2783:
  4372                           
  4373                           ;ledMatrix.c: 62:         b = matrix[i];
  4374     0E37  0877               	movf	sendMatrix@i,w
  4375     0E38  3EB8               	addlw	(low (_matrix| 0))& (0+255)
  4376     0E39  0086               	movwf	6
  4377     0E3A  0187               	clrf	7
  4378     0E3B  0801               	movf	1,w
  4379     0E3C  00F4               	movwf	sendMatrix@b
  4380     0E3D                     l2785:
  4381                           
  4382                           ;ledMatrix.c: 65:         nb = 0x00;
  4383     0E3D  01F5               	clrf	sendMatrix@nb
  4384     0E3E                     l2787:
  4385                           
  4386                           ;ledMatrix.c: 66:         for(uint8_t j = 0; j < 8; j++){
  4387     0E3E  01F6               	clrf	sendMatrix@j
  4388     0E3F                     l2793:
  4389                           
  4390                           ;ledMatrix.c: 67:             nb <<= 1;
  4391     0E3F  1003               	clrc
  4392     0E40  0DF5               	rlf	sendMatrix@nb,f
  4393     0E41                     l2795:
  4394                           
  4395                           ;ledMatrix.c: 68:             nb |= b&0x01;
  4396     0E41  0874               	movf	sendMatrix@b,w
  4397     0E42  3901               	andlw	1
  4398     0E43  00F3               	movwf	??_sendMatrix
  4399     0E44  0873               	movf	??_sendMatrix,w
  4400     0E45  04F5               	iorwf	sendMatrix@nb,f
  4401     0E46                     l2797:
  4402                           
  4403                           ;ledMatrix.c: 69:             b >>= 1;
  4404     0E46  1003               	clrc
  4405     0E47  0CF4               	rrf	sendMatrix@b,f
  4406                           
  4407                           ;ledMatrix.c: 70:         }
  4408     0E48  3001               	movlw	1
  4409     0E49  00F3               	movwf	??_sendMatrix
  4410     0E4A  0873               	movf	??_sendMatrix,w
  4411     0E4B  07F6               	addwf	sendMatrix@j,f
  4412     0E4C                     l2799:
  4413     0E4C  3008               	movlw	8
  4414     0E4D  0276               	subwf	sendMatrix@j,w
  4415     0E4E  1C03               	skipc
  4416     0E4F  2E51               	goto	u1811
  4417     0E50  2E52               	goto	u1810
  4418     0E51                     u1811:
  4419     0E51  2E3F               	goto	l2793
  4420     0E52                     u1810:
  4421     0E52                     l2801:
  4422                           
  4423                           ;ledMatrix.c: 71:         txMAX7219(i+1,nb);
  4424     0E52  0875               	movf	sendMatrix@nb,w
  4425     0E53  00F1               	movwf	txMAX7219@dat0
  4426     0E54  0877               	movf	sendMatrix@i,w
  4427     0E55  3E01               	addlw	1
  4428     0E56  318D  258B  318E   	fcall	_txMAX7219
  4429     0E59                     l2803:
  4430                           
  4431                           ;ledMatrix.c: 75:     }
  4432     0E59  3001               	movlw	1
  4433     0E5A  00F3               	movwf	??_sendMatrix
  4434     0E5B  0873               	movf	??_sendMatrix,w
  4435     0E5C  07F7               	addwf	sendMatrix@i,f
  4436     0E5D                     l2805:
  4437     0E5D  3008               	movlw	8
  4438     0E5E  0277               	subwf	sendMatrix@i,w
  4439     0E5F  1C03               	skipc
  4440     0E60  2E62               	goto	u1821
  4441     0E61  2E63               	goto	u1820
  4442     0E62                     u1821:
  4443     0E62  2E37               	goto	l2783
  4444     0E63                     u1820:
  4445     0E63                     l427:
  4446     0E63  0008               	return
  4447     0E64                     __end_of_sendMatrix:
  4448                           
  4449                           	psect	text8
  4450     0D61                     __ptext8:	
  4451 ;; *************** function _ledSet *****************
  4452 ;; Defined at:
  4453 ;;		line 31 in file "ledMatrix.c"
  4454 ;; Parameters:    Size  Location     Type
  4455 ;;  l               1    wreg     unsigned char 
  4456 ;;  c               1    4[BANK0 ] unsigned char 
  4457 ;; Auto vars:     Size  Location     Type
  4458 ;;  l               1    7[BANK0 ] unsigned char 
  4459 ;; Return value:  Size  Location     Type
  4460 ;;                  1    wreg      void 
  4461 ;; Registers used:
  4462 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4463 ;; Tracked objects:
  4464 ;;		On entry : 0/0
  4465 ;;		On exit  : 0/0
  4466 ;;		Unchanged: 0/0
  4467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4468 ;;      Params:         0       1       0       0       0       0
  4469 ;;      Locals:         0       1       0       0       0       0
  4470 ;;      Temps:          0       2       0       0       0       0
  4471 ;;      Totals:         0       4       0       0       0       0
  4472 ;;Total ram usage:        4 bytes
  4473 ;; Hardware stack levels used: 1
  4474 ;; This function calls:
  4475 ;;		Nothing
  4476 ;; This function is called by:
  4477 ;;		_main
  4478 ;;		_setLine
  4479 ;; This function uses a non-reentrant model
  4480 ;;
  4481                           
  4482     0D61                     _ledSet:	
  4483                           ;psect for function _ledSet
  4484                           
  4485                           
  4486                           ;incstack = 0
  4487                           ; Regs used in _ledSet: [wreg+fsr1l+fsr1h+status,2+status,0]
  4488                           ;ledSet@l stored from wreg
  4489     0D61  0020               	movlb	0	; select bank0
  4490     0D62  00A7               	movwf	ledSet@l
  4491     0D63                     l2769:
  4492                           
  4493                           ;ledMatrix.c: 32:     (matrix[c]) |= 1UL << (l);
  4494     0D63  3001               	movlw	1
  4495     0D64  00A5               	movwf	??_ledSet
  4496     0D65  0A27               	incf	ledSet@l,w
  4497     0D66  2D68               	goto	u1794
  4498     0D67                     u1795:
  4499     0D67  35A5               	lslf	??_ledSet,f
  4500     0D68                     u1794:
  4501     0D68  0B89               	decfsz	9,f
  4502     0D69  2D67               	goto	u1795
  4503     0D6A  0825               	movf	??_ledSet,w
  4504     0D6B  00A6               	movwf	??_ledSet+1
  4505     0D6C  0824               	movf	ledSet@c,w
  4506     0D6D  3EB8               	addlw	(low (_matrix| 0))& (0+255)
  4507     0D6E  0086               	movwf	6
  4508     0D6F  0187               	clrf	7
  4509     0D70  0826               	movf	??_ledSet+1,w
  4510     0D71  0481               	iorwf	1,f
  4511     0D72                     l407:
  4512     0D72  0008               	return
  4513     0D73                     __end_of_ledSet:
  4514                           
  4515                           	psect	text9
  4516     0D4F                     __ptext9:	
  4517 ;; *************** function _ledClear *****************
  4518 ;; Defined at:
  4519 ;;		line 35 in file "ledMatrix.c"
  4520 ;; Parameters:    Size  Location     Type
  4521 ;;  l               1    wreg     unsigned char 
  4522 ;;  c               1    0[COMMON] unsigned char 
  4523 ;; Auto vars:     Size  Location     Type
  4524 ;;  l               1    3[COMMON] unsigned char 
  4525 ;; Return value:  Size  Location     Type
  4526 ;;                  1    wreg      void 
  4527 ;; Registers used:
  4528 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4529 ;; Tracked objects:
  4530 ;;		On entry : 0/0
  4531 ;;		On exit  : 0/0
  4532 ;;		Unchanged: 0/0
  4533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4534 ;;      Params:         1       0       0       0       0       0
  4535 ;;      Locals:         1       0       0       0       0       0
  4536 ;;      Temps:          2       0       0       0       0       0
  4537 ;;      Totals:         4       0       0       0       0       0
  4538 ;;Total ram usage:        4 bytes
  4539 ;; Hardware stack levels used: 1
  4540 ;; This function calls:
  4541 ;;		Nothing
  4542 ;; This function is called by:
  4543 ;;		_main
  4544 ;;		_setLine
  4545 ;; This function uses a non-reentrant model
  4546 ;;
  4547                           
  4548     0D4F                     _ledClear:	
  4549                           ;psect for function _ledClear
  4550                           
  4551                           
  4552                           ;incstack = 0
  4553                           ; Regs used in _ledClear: [wreg+fsr1l+fsr1h+status,2+status,0]
  4554                           ;ledClear@l stored from wreg
  4555     0D4F  00F3               	movwf	ledClear@l
  4556     0D50                     l2771:
  4557                           
  4558                           ;ledMatrix.c: 36:     (matrix[c]) &= ~(1UL << (l));
  4559     0D50  3001               	movlw	1
  4560     0D51  00F1               	movwf	??_ledClear
  4561     0D52  0A73               	incf	ledClear@l,w
  4562     0D53  2D55               	goto	u1804
  4563     0D54                     u1805:
  4564     0D54  35F1               	lslf	??_ledClear,f
  4565     0D55                     u1804:
  4566     0D55  0B89               	decfsz	9,f
  4567     0D56  2D54               	goto	u1805
  4568     0D57  0871               	movf	??_ledClear,w
  4569     0D58  3AFF               	xorlw	255
  4570     0D59  00F2               	movwf	??_ledClear+1
  4571     0D5A  0870               	movf	ledClear@c,w
  4572     0D5B  3EB8               	addlw	(low (_matrix| 0))& (0+255)
  4573     0D5C  0086               	movwf	6
  4574     0D5D  0187               	clrf	7
  4575     0D5E  0872               	movf	??_ledClear+1,w
  4576     0D5F  0581               	andwf	1,f
  4577     0D60                     l410:
  4578     0D60  0008               	return
  4579     0D61                     __end_of_ledClear:
  4580                           
  4581                           	psect	text10
  4582     0ECC                     __ptext10:	
  4583 ;; *************** function _initMAX7219 *****************
  4584 ;; Defined at:
  4585 ;;		line 16 in file "ledMatrix.c"
  4586 ;; Parameters:    Size  Location     Type
  4587 ;;		None
  4588 ;; Auto vars:     Size  Location     Type
  4589 ;;		None
  4590 ;; Return value:  Size  Location     Type
  4591 ;;                  1    wreg      void 
  4592 ;; Registers used:
  4593 ;;		wreg, status,2, status,0, pclath, cstack
  4594 ;; Tracked objects:
  4595 ;;		On entry : 0/0
  4596 ;;		On exit  : 0/0
  4597 ;;		Unchanged: 0/0
  4598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4599 ;;      Params:         0       0       0       0       0       0
  4600 ;;      Locals:         0       0       0       0       0       0
  4601 ;;      Temps:          2       0       0       0       0       0
  4602 ;;      Totals:         2       0       0       0       0       0
  4603 ;;Total ram usage:        2 bytes
  4604 ;; Hardware stack levels used: 1
  4605 ;; Hardware stack levels required when called: 2
  4606 ;; This function calls:
  4607 ;;		_txMAX7219
  4608 ;; This function is called by:
  4609 ;;		_main
  4610 ;; This function uses a non-reentrant model
  4611 ;;
  4612                           
  4613     0ECC                     _initMAX7219:	
  4614                           ;psect for function _initMAX7219
  4615                           
  4616     0ECC                     l2755:	
  4617                           ;incstack = 0
  4618                           ; Regs used in _initMAX7219: [wreg+status,2+status,0+pclath+cstack]
  4619                           
  4620                           
  4621                           ;ledMatrix.c: 17:     LATBbits.LATB1 = 1;
  4622     0ECC  0022               	movlb	2	; select bank2
  4623     0ECD  148D               	bsf	13,1	;volatile
  4624                           
  4625                           ;ledMatrix.c: 18:     TRISBbits.TRISB1 = 0;
  4626     0ECE  0021               	movlb	1	; select bank1
  4627     0ECF  108D               	bcf	13,1	;volatile
  4628                           
  4629                           ;ledMatrix.c: 19:     SSP1CON1bits.SSPEN = 1;
  4630     0ED0  0024               	movlb	4	; select bank4
  4631     0ED1  1695               	bsf	21,5	;volatile
  4632     0ED2                     l2757:
  4633                           
  4634                           ;ledMatrix.c: 20:     txMAX7219(0x09,0x00);
  4635     0ED2  01F1               	clrf	txMAX7219@dat0
  4636     0ED3  3009               	movlw	9
  4637     0ED4  318D  258B  318E   	fcall	_txMAX7219
  4638                           
  4639                           ;ledMatrix.c: 21:     txMAX7219(0x0A,0x00);
  4640     0ED7  01F1               	clrf	txMAX7219@dat0
  4641     0ED8  300A               	movlw	10
  4642     0ED9  318D  258B  318E   	fcall	_txMAX7219
  4643                           
  4644                           ;ledMatrix.c: 22:     txMAX7219(0x0C,0x00);
  4645     0EDC  01F1               	clrf	txMAX7219@dat0
  4646     0EDD  300C               	movlw	12
  4647     0EDE  318D  258B  318E   	fcall	_txMAX7219
  4648                           
  4649                           ;ledMatrix.c: 23:     txMAX7219(0x0B,0x07);
  4650     0EE1  3007               	movlw	7
  4651     0EE2  00F1               	movwf	txMAX7219@dat0
  4652     0EE3  300B               	movlw	11
  4653     0EE4  318D  258B  318E   	fcall	_txMAX7219
  4654                           
  4655                           ;ledMatrix.c: 24:     txMAX7219(0x0C,0x01);
  4656     0EE7  01F1               	clrf	txMAX7219@dat0
  4657     0EE8  0AF1               	incf	txMAX7219@dat0,f
  4658     0EE9  300C               	movlw	12
  4659     0EEA  318D  258B  318E   	fcall	_txMAX7219
  4660                           
  4661                           ;ledMatrix.c: 25:     txMAX7219(0x0F,0x01);
  4662     0EED  01F1               	clrf	txMAX7219@dat0
  4663     0EEE  0AF1               	incf	txMAX7219@dat0,f
  4664     0EEF  300F               	movlw	15
  4665     0EF0  318D  258B  318E   	fcall	_txMAX7219
  4666     0EF3                     l2759:
  4667                           
  4668                           ;ledMatrix.c: 26:     _delay((unsigned long)((1000)*(8000000/4000.0)));
  4669     0EF3  300B               	movlw	11
  4670     0EF4  00F4               	movwf	??_initMAX7219+1
  4671     0EF5  3026               	movlw	38
  4672     0EF6  00F3               	movwf	??_initMAX7219
  4673     0EF7  305E               	movlw	94
  4674     0EF8                     u2607:
  4675     0EF8  0B89               	decfsz	9,f
  4676     0EF9  2EF8               	goto	u2607
  4677     0EFA  0BF3               	decfsz	??_initMAX7219,f
  4678     0EFB  2EF8               	goto	u2607
  4679     0EFC  0BF4               	decfsz	??_initMAX7219+1,f
  4680     0EFD  2EF8               	goto	u2607
  4681     0EFE                     l2761:
  4682                           
  4683                           ;ledMatrix.c: 27:     txMAX7219(0x0F,0x00);
  4684     0EFE  01F1               	clrf	txMAX7219@dat0
  4685     0EFF  300F               	movlw	15
  4686     0F00  318D  258B  318E   	fcall	_txMAX7219
  4687     0F03                     l2763:
  4688                           
  4689                           ;ledMatrix.c: 28:     txMAX7219(0x0C,0x01);
  4690     0F03  01F1               	clrf	txMAX7219@dat0
  4691     0F04  0AF1               	incf	txMAX7219@dat0,f
  4692     0F05  300C               	movlw	12
  4693     0F06  318D  258B  318E   	fcall	_txMAX7219
  4694     0F09                     l404:
  4695     0F09  0008               	return
  4696     0F0A                     __end_of_initMAX7219:
  4697                           
  4698                           	psect	text11
  4699     0D8B                     __ptext11:	
  4700 ;; *************** function _txMAX7219 *****************
  4701 ;; Defined at:
  4702 ;;		line 5 in file "ledMatrix.c"
  4703 ;; Parameters:    Size  Location     Type
  4704 ;;  addr0           1    wreg     unsigned char 
  4705 ;;  dat0            1    1[COMMON] unsigned char 
  4706 ;; Auto vars:     Size  Location     Type
  4707 ;;  addr0           1    2[COMMON] unsigned char 
  4708 ;; Return value:  Size  Location     Type
  4709 ;;                  1    wreg      void 
  4710 ;; Registers used:
  4711 ;;		wreg, status,2, status,0, pclath, cstack
  4712 ;; Tracked objects:
  4713 ;;		On entry : 0/0
  4714 ;;		On exit  : 0/0
  4715 ;;		Unchanged: 0/0
  4716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4717 ;;      Params:         1       0       0       0       0       0
  4718 ;;      Locals:         1       0       0       0       0       0
  4719 ;;      Temps:          0       0       0       0       0       0
  4720 ;;      Totals:         2       0       0       0       0       0
  4721 ;;Total ram usage:        2 bytes
  4722 ;; Hardware stack levels used: 1
  4723 ;; Hardware stack levels required when called: 1
  4724 ;; This function calls:
  4725 ;;		_SPI1_WriteByte
  4726 ;; This function is called by:
  4727 ;;		_initMAX7219
  4728 ;;		_sendMatrix
  4729 ;; This function uses a non-reentrant model
  4730 ;;
  4731                           
  4732     0D8B                     _txMAX7219:	
  4733                           ;psect for function _txMAX7219
  4734                           
  4735                           
  4736                           ;incstack = 0
  4737                           ; Regs used in _txMAX7219: [wreg+status,2+status,0+pclath+cstack]
  4738                           ;txMAX7219@addr0 stored from wreg
  4739     0D8B  00F2               	movwf	txMAX7219@addr0
  4740     0D8C                     l2569:
  4741                           
  4742                           ;ledMatrix.c: 6:     LATBbits.LATB1 = 0;
  4743     0D8C  0022               	movlb	2	; select bank2
  4744     0D8D  108D               	bcf	13,1	;volatile
  4745     0D8E                     l2571:
  4746                           
  4747                           ;ledMatrix.c: 7:     SPI1_WriteByte(addr0);
  4748     0D8E  0872               	movf	txMAX7219@addr0,w
  4749     0D8F  318C  24E0  318D   	fcall	_SPI1_WriteByte
  4750     0D92                     l395:	
  4751                           ;ledMatrix.c: 8:     while(!PIR1bits.SSP1IF);
  4752                           
  4753     0D92  0020               	movlb	0	; select bank0
  4754     0D93  1D91               	btfss	17,3	;volatile
  4755     0D94  2D96               	goto	u1441
  4756     0D95  2D97               	goto	u1440
  4757     0D96                     u1441:
  4758     0D96  2D92               	goto	l395
  4759     0D97                     u1440:
  4760     0D97                     l397:
  4761                           
  4762                           ;ledMatrix.c: 9:     PIR1bits.SSP1IF = 0;
  4763     0D97  1191               	bcf	17,3	;volatile
  4764     0D98                     l2573:
  4765                           
  4766                           ;ledMatrix.c: 10:     SPI1_WriteByte(dat0);
  4767     0D98  0871               	movf	txMAX7219@dat0,w
  4768     0D99  318C  24E0  318D   	fcall	_SPI1_WriteByte
  4769     0D9C                     l398:	
  4770                           ;ledMatrix.c: 11:     while(!PIR1bits.SSP1IF);
  4771                           
  4772     0D9C  0020               	movlb	0	; select bank0
  4773     0D9D  1D91               	btfss	17,3	;volatile
  4774     0D9E  2DA0               	goto	u1451
  4775     0D9F  2DA1               	goto	u1450
  4776     0DA0                     u1451:
  4777     0DA0  2D9C               	goto	l398
  4778     0DA1                     u1450:
  4779     0DA1                     l400:
  4780                           
  4781                           ;ledMatrix.c: 12:     PIR1bits.SSP1IF = 0;
  4782     0DA1  1191               	bcf	17,3	;volatile
  4783                           
  4784                           ;ledMatrix.c: 13:     LATBbits.LATB1 = 1;
  4785     0DA2  0022               	movlb	2	; select bank2
  4786     0DA3  148D               	bsf	13,1	;volatile
  4787     0DA4                     l401:
  4788     0DA4  0008               	return
  4789     0DA5                     __end_of_txMAX7219:
  4790                           
  4791                           	psect	text12
  4792     0CE0                     __ptext12:	
  4793 ;; *************** function _SPI1_WriteByte *****************
  4794 ;; Defined at:
  4795 ;;		line 131 in file "mcc_generated_files/spi1.c"
  4796 ;; Parameters:    Size  Location     Type
  4797 ;;  byte            1    wreg     unsigned char 
  4798 ;; Auto vars:     Size  Location     Type
  4799 ;;  byte            1    0[COMMON] unsigned char 
  4800 ;; Return value:  Size  Location     Type
  4801 ;;                  1    wreg      void 
  4802 ;; Registers used:
  4803 ;;		wreg
  4804 ;; Tracked objects:
  4805 ;;		On entry : 0/0
  4806 ;;		On exit  : 0/0
  4807 ;;		Unchanged: 0/0
  4808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4809 ;;      Params:         0       0       0       0       0       0
  4810 ;;      Locals:         1       0       0       0       0       0
  4811 ;;      Temps:          0       0       0       0       0       0
  4812 ;;      Totals:         1       0       0       0       0       0
  4813 ;;Total ram usage:        1 bytes
  4814 ;; Hardware stack levels used: 1
  4815 ;; This function calls:
  4816 ;;		Nothing
  4817 ;; This function is called by:
  4818 ;;		_txMAX7219
  4819 ;; This function uses a non-reentrant model
  4820 ;;
  4821                           
  4822     0CE0                     _SPI1_WriteByte:	
  4823                           ;psect for function _SPI1_WriteByte
  4824                           
  4825                           
  4826                           ;incstack = 0
  4827                           ; Regs used in _SPI1_WriteByte: [wreg]
  4828                           ;SPI1_WriteByte@byte stored from wreg
  4829     0CE0  00F0               	movwf	SPI1_WriteByte@byte
  4830     0CE1                     l2493:
  4831                           
  4832                           ;mcc_generated_files/spi1.c: 131: void SPI1_WriteByte(uint8_t byte);mcc_generated_files/
      +                          spi1.c: 132: {;mcc_generated_files/spi1.c: 133:     SSP1BUF = byte;
  4833     0CE1  0870               	movf	SPI1_WriteByte@byte,w
  4834     0CE2  0024               	movlb	4	; select bank4
  4835     0CE3  0091               	movwf	17	;volatile
  4836     0CE4                     l224:
  4837     0CE4  0008               	return
  4838     0CE5                     __end_of_SPI1_WriteByte:
  4839                           
  4840                           	psect	text13
  4841     0D32                     __ptext13:	
  4842 ;; *************** function _deactivateElevator *****************
  4843 ;; Defined at:
  4844 ;;		line 50 in file "main.c"
  4845 ;; Parameters:    Size  Location     Type
  4846 ;;		None
  4847 ;; Auto vars:     Size  Location     Type
  4848 ;;		None
  4849 ;; Return value:  Size  Location     Type
  4850 ;;                  1    wreg      void 
  4851 ;; Registers used:
  4852 ;;		None
  4853 ;; Tracked objects:
  4854 ;;		On entry : 0/0
  4855 ;;		On exit  : 0/0
  4856 ;;		Unchanged: 0/0
  4857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4858 ;;      Params:         0       0       0       0       0       0
  4859 ;;      Locals:         0       0       0       0       0       0
  4860 ;;      Temps:          0       0       0       0       0       0
  4861 ;;      Totals:         0       0       0       0       0       0
  4862 ;;Total ram usage:        0 bytes
  4863 ;; Hardware stack levels used: 1
  4864 ;; This function calls:
  4865 ;;		Nothing
  4866 ;; This function is called by:
  4867 ;;		_main
  4868 ;; This function uses a non-reentrant model
  4869 ;;
  4870                           
  4871     0D32                     _deactivateElevator:	
  4872                           ;psect for function _deactivateElevator
  4873                           
  4874     0D32                     l2705:	
  4875                           ;incstack = 0
  4876                           ; Regs used in _deactivateElevator: []
  4877                           
  4878                           
  4879                           ;main.c: 51:     LATAbits.LATA3 = 0;
  4880     0D32  0022               	movlb	2	; select bank2
  4881     0D33  118C               	bcf	12,3	;volatile
  4882                           
  4883                           ;main.c: 52:     LATAbits.LATA7 = 0;
  4884     0D34  138C               	bcf	12,7	;volatile
  4885                           
  4886                           ;main.c: 54:     TRISAbits.TRISA0 = 1;
  4887     0D35  0021               	movlb	1	; select bank1
  4888     0D36  140C               	bsf	12,0	;volatile
  4889                           
  4890                           ;main.c: 55:     TRISAbits.TRISA1 = 1;
  4891     0D37  148C               	bsf	12,1	;volatile
  4892                           
  4893                           ;main.c: 56:     TRISAbits.TRISA2 = 1;
  4894     0D38  150C               	bsf	12,2	;volatile
  4895                           
  4896                           ;main.c: 57:     TRISAbits.TRISA3 = 0;
  4897     0D39  118C               	bcf	12,3	;volatile
  4898                           
  4899                           ;main.c: 58:     TRISAbits.TRISA4 = 1;
  4900     0D3A  160C               	bsf	12,4	;volatile
  4901                           
  4902                           ;main.c: 59:     TRISAbits.TRISA7 = 0;
  4903     0D3B  138C               	bcf	12,7	;volatile
  4904                           
  4905                           ;main.c: 60:     TRISBbits.TRISB0 = 1;
  4906     0D3C  140D               	bsf	13,0	;volatile
  4907                           
  4908                           ;main.c: 61:     TRISBbits.TRISB3 = 1;
  4909     0D3D  158D               	bsf	13,3	;volatile
  4910     0D3E                     l337:
  4911     0D3E  0008               	return
  4912     0D3F                     __end_of_deactivateElevator:
  4913                           
  4914                           	psect	text14
  4915     0228                     __ptext14:	
  4916 ;; *************** function _ai_run *****************
  4917 ;; Defined at:
  4918 ;;		line 92 in file "ai.c"
  4919 ;; Parameters:    Size  Location     Type
  4920 ;;		None
  4921 ;; Auto vars:     Size  Location     Type
  4922 ;;  i               1   14[BANK0 ] unsigned char 
  4923 ;;  i               1   13[BANK0 ] unsigned char 
  4924 ;;  i               1   15[BANK0 ] unsigned char 
  4925 ;;  j               1   17[BANK0 ] unsigned char 
  4926 ;;  j               1   16[BANK0 ] unsigned char 
  4927 ;;  i               1   12[BANK0 ] unsigned char 
  4928 ;; Return value:  Size  Location     Type
  4929 ;;                  1    wreg      unsigned char 
  4930 ;; Registers used:
  4931 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4932 ;; Tracked objects:
  4933 ;;		On entry : 0/0
  4934 ;;		On exit  : 0/0
  4935 ;;		Unchanged: 0/0
  4936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4937 ;;      Params:         0       0       0       0       0       0
  4938 ;;      Locals:         0       8       0       0       0       0
  4939 ;;      Temps:          0       3       0       0       0       0
  4940 ;;      Totals:         0      11       0       0       0       0
  4941 ;;Total ram usage:       11 bytes
  4942 ;; Hardware stack levels used: 1
  4943 ;; Hardware stack levels required when called: 1
  4944 ;; This function calls:
  4945 ;;		___awdiv
  4946 ;;		___wmul
  4947 ;;		_sigmoid
  4948 ;; This function is called by:
  4949 ;;		_main
  4950 ;; This function uses a non-reentrant model
  4951 ;;
  4952                           
  4953     0228                     _ai_run:	
  4954                           ;psect for function _ai_run
  4955                           
  4956     0228                     l2875:	
  4957                           ;incstack = 0
  4958                           ; Regs used in _ai_run: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4959                           
  4960                           
  4961                           ;ai.c: 93:     for(uint8_t i = 0; i < 8; i++){
  4962     0228  0020               	movlb	0	; select bank0
  4963     0229  01AC               	clrf	ai_run@i
  4964     022A                     l2881:
  4965                           
  4966                           ;ai.c: 94:         if(Y0[i] > 0){
  4967     022A  082C               	movf	ai_run@i,w
  4968     022B  3E63               	addlw	(low (_Y0| 0))& (0+255)
  4969     022C  0086               	movwf	6
  4970     022D  0187               	clrf	7
  4971     022E  0801               	movf	1,w
  4972     022F  3A80               	xorlw	128
  4973     0230  3E7F               	addlw	-129
  4974     0231  1C03               	skipc
  4975     0232  2A34               	goto	u1941
  4976     0233  2A35               	goto	u1940
  4977     0234                     u1941:
  4978     0234  2A3B               	goto	l2885
  4979     0235                     u1940:
  4980     0235                     l2883:
  4981                           
  4982                           ;ai.c: 95:             Y0[i] = 16;
  4983     0235  082C               	movf	ai_run@i,w
  4984     0236  3E63               	addlw	(low (_Y0| 0))& (0+255)
  4985     0237  0086               	movwf	6
  4986     0238  0187               	clrf	7
  4987     0239  3010               	movlw	16
  4988     023A  0081               	movwf	1
  4989     023B                     l2885:
  4990                           
  4991                           ;ai.c: 97:     }
  4992     023B  3001               	movlw	1
  4993     023C  00A7               	movwf	??_ai_run
  4994     023D  0827               	movf	??_ai_run,w
  4995     023E  07AC               	addwf	ai_run@i,f
  4996     023F                     l2887:
  4997     023F  3008               	movlw	8
  4998     0240  022C               	subwf	ai_run@i,w
  4999     0241  1C03               	skipc
  5000     0242  2A44               	goto	u1951
  5001     0243  2A45               	goto	u1950
  5002     0244                     u1951:
  5003     0244  2A2A               	goto	l2881
  5004     0245                     u1950:
  5005     0245                     l2889:
  5006                           
  5007                           ;ai.c: 99:     for(uint8_t j = 0; j < 4; j++){
  5008     0245  01B0               	clrf	ai_run@j
  5009     0246                     l2895:
  5010                           
  5011                           ;ai.c: 100:         Z1[j] = B1[j];
  5012     0246  0830               	movf	ai_run@j,w
  5013     0247  3E51               	addlw	(low (_B1| 0))& (0+255)
  5014     0248  0086               	movwf	6
  5015     0249  0187               	clrf	7
  5016     024A  0801               	movf	1,w
  5017     024B  00A7               	movwf	??_ai_run
  5018     024C  01A8               	clrf	??_ai_run+1
  5019     024D  1BA7               	btfsc	??_ai_run,7
  5020     024E  03A8               	decf	??_ai_run+1,f
  5021     024F  3530               	lslf	ai_run@j,w
  5022     0250  3EB0               	addlw	(low (_Z1| 0))& (0+255)
  5023     0251  0086               	movwf	6
  5024     0252  0187               	clrf	7
  5025     0253  0827               	movf	??_ai_run,w
  5026     0254  3FC0               	movwi [0]fsr1
  5027     0255  0828               	movf	??_ai_run+1,w
  5028     0256  3FC1               	movwi [1]fsr1
  5029     0257                     l2897:
  5030                           
  5031                           ;ai.c: 101:         for(uint8_t i = 0; i < 8; i++){
  5032     0257  01AD               	clrf	ai_run@i_858
  5033     0258                     l2903:
  5034                           
  5035                           ;ai.c: 102:             Z1[j] += ((int)Y0[i]*(int)W1[i][j])/16;
  5036     0258  3010               	movlw	16
  5037     0259  00F9               	movwf	___awdiv@divisor
  5038     025A  3000               	movlw	0
  5039     025B  00FA               	movwf	___awdiv@divisor+1
  5040     025C  082D               	movf	ai_run@i_858,w
  5041     025D  3E63               	addlw	(low (_Y0| 0))& (0+255)
  5042     025E  0086               	movwf	6
  5043     025F  0187               	clrf	7
  5044     0260  0801               	movf	1,w
  5045     0261  00F3               	movwf	___wmul@multiplier
  5046     0262  01F4               	clrf	___wmul@multiplier+1
  5047     0263  1BF3               	btfsc	___wmul@multiplier,7
  5048     0264  03F4               	decf	___wmul@multiplier+1,f
  5049     0265  082D               	movf	ai_run@i_858,w
  5050     0266  00A7               	movwf	??_ai_run
  5051     0267  3002               	movlw	2
  5052     0268                     u1965:
  5053     0268  35A7               	lslf	??_ai_run,f
  5054     0269  0B89               	decfsz	9,f
  5055     026A  2A68               	goto	u1965
  5056     026B  3020               	movlw	(low (_W1| (0+256)))& (0+255)
  5057     026C  0727               	addwf	??_ai_run,w
  5058     026D  00A8               	movwf	??_ai_run+1
  5059     026E  0830               	movf	ai_run@j,w
  5060     026F  0728               	addwf	??_ai_run+1,w
  5061     0270  00A9               	movwf	??_ai_run+2
  5062     0271  0829               	movf	??_ai_run+2,w
  5063     0272  0086               	movwf	6
  5064     0273  3001               	movlw	1	; select bank2/3
  5065     0274  0087               	movwf	7
  5066     0275  0801               	movf	1,w
  5067     0276  00F5               	movwf	___wmul@multiplicand
  5068     0277  01F6               	clrf	___wmul@multiplicand+1
  5069     0278  1BF5               	btfsc	___wmul@multiplicand,7
  5070     0279  03F6               	decf	___wmul@multiplicand+1,f
  5071     027A  318D  25A5  3182   	fcall	___wmul
  5072     027D  0874               	movf	?___wmul+1,w
  5073     027E  00FC               	movwf	___awdiv@dividend+1
  5074     027F  0873               	movf	?___wmul,w
  5075     0280  00FB               	movwf	___awdiv@dividend
  5076     0281  3180  2035  3182   	fcall	___awdiv
  5077     0284  0020               	movlb	0	; select bank0
  5078     0285  3530               	lslf	ai_run@j,w
  5079     0286  3EB0               	addlw	(low (_Z1| 0))& (0+255)
  5080     0287  0086               	movwf	6
  5081     0288  0187               	clrf	7
  5082     0289  0879               	movf	?___awdiv,w
  5083     028A  0781               	addwf	1,f
  5084     028B  3141               	addfsr 1,1
  5085     028C  087A               	movf	?___awdiv+1,w
  5086     028D  3D81               	addwfc	1,f
  5087     028E  317F               	addfsr 1,-1
  5088     028F                     l2905:
  5089                           
  5090                           ;ai.c: 103:         }
  5091     028F  3001               	movlw	1
  5092     0290  00A7               	movwf	??_ai_run
  5093     0291  0827               	movf	??_ai_run,w
  5094     0292  07AD               	addwf	ai_run@i_858,f
  5095     0293                     l2907:
  5096     0293  3008               	movlw	8
  5097     0294  022D               	subwf	ai_run@i_858,w
  5098     0295  1C03               	skipc
  5099     0296  2A98               	goto	u1971
  5100     0297  2A99               	goto	u1970
  5101     0298                     u1971:
  5102     0298  2A58               	goto	l2903
  5103     0299                     u1970:
  5104     0299                     l2909:
  5105                           
  5106                           ;ai.c: 104:         Y1[j] = sigmoid(Z1[j]/16)/16;
  5107     0299  3530               	lslf	ai_run@j,w
  5108     029A  3EB0               	addlw	(low (_Z1| 0))& (0+255)
  5109     029B  0086               	movwf	6
  5110     029C  0187               	clrf	7
  5111     029D  3F40               	moviw [0]fsr1
  5112     029E  00FB               	movwf	___awdiv@dividend
  5113     029F  3F41               	moviw [1]fsr1
  5114     02A0  00FC               	movwf	___awdiv@dividend+1
  5115     02A1  3010               	movlw	16
  5116     02A2  00F9               	movwf	___awdiv@divisor
  5117     02A3  3000               	movlw	0
  5118     02A4  00FA               	movwf	___awdiv@divisor+1
  5119     02A5  3180  2035  3182   	fcall	___awdiv
  5120     02A8  087A               	movf	?___awdiv+1,w
  5121     02A9  0020               	movlb	0	; select bank0
  5122     02AA  00A5               	movwf	sigmoid@z+1
  5123     02AB  0879               	movf	?___awdiv,w
  5124     02AC  00A4               	movwf	sigmoid@z
  5125     02AD  318E  260C  3182   	fcall	_sigmoid
  5126     02B0  0020               	movlb	0	; select bank0
  5127     02B1  00A7               	movwf	??_ai_run
  5128     02B2  01A8               	clrf	??_ai_run+1
  5129     02B3  0827               	movf	??_ai_run,w
  5130     02B4  00AA               	movwf	_ai_run$1558
  5131     02B5  0828               	movf	??_ai_run+1,w
  5132     02B6  00AB               	movwf	_ai_run$1558+1
  5133     02B7                     l2911:
  5134                           
  5135                           ;ai.c: 104:         Y1[j] = sigmoid(Z1[j]/16)/16;
  5136     02B7  0830               	movf	ai_run@j,w
  5137     02B8  3E59               	addlw	(low (_Y1| 0))& (0+255)
  5138     02B9  0086               	movwf	6
  5139     02BA  0187               	clrf	7
  5140     02BB  3010               	movlw	16
  5141     02BC  00F9               	movwf	___awdiv@divisor
  5142     02BD  3000               	movlw	0
  5143     02BE  00FA               	movwf	___awdiv@divisor+1
  5144     02BF  082B               	movf	_ai_run$1558+1,w
  5145     02C0  00FC               	movwf	___awdiv@dividend+1
  5146     02C1  082A               	movf	_ai_run$1558,w
  5147     02C2  00FB               	movwf	___awdiv@dividend
  5148     02C3  3180  2035  3182   	fcall	___awdiv
  5149     02C6  0879               	movf	?___awdiv,w
  5150     02C7  0081               	movwf	1
  5151     02C8                     l2913:
  5152                           
  5153                           ;ai.c: 105:     }
  5154     02C8  3001               	movlw	1
  5155     02C9  0020               	movlb	0	; select bank0
  5156     02CA  00A7               	movwf	??_ai_run
  5157     02CB  0827               	movf	??_ai_run,w
  5158     02CC  07B0               	addwf	ai_run@j,f
  5159     02CD                     l2915:
  5160     02CD  3004               	movlw	4
  5161     02CE  0230               	subwf	ai_run@j,w
  5162     02CF  1C03               	skipc
  5163     02D0  2AD2               	goto	u1981
  5164     02D1  2AD3               	goto	u1980
  5165     02D2                     u1981:
  5166     02D2  2A46               	goto	l2895
  5167     02D3                     u1980:
  5168     02D3                     l2917:
  5169                           
  5170                           ;ai.c: 106:     for(uint8_t j = 0; j < 4; j++){
  5171     02D3  01B1               	clrf	ai_run@j_859
  5172     02D4                     l2923:
  5173                           
  5174                           ;ai.c: 107:         Z2[j] = B2[j];
  5175     02D4  0831               	movf	ai_run@j_859,w
  5176     02D5  3ED0               	addlw	(low (_B2| 0))& (0+255)
  5177     02D6  0086               	movwf	6
  5178     02D7  0187               	clrf	7
  5179     02D8  0801               	movf	1,w
  5180     02D9  00A7               	movwf	??_ai_run
  5181     02DA  01A8               	clrf	??_ai_run+1
  5182     02DB  1BA7               	btfsc	??_ai_run,7
  5183     02DC  03A8               	decf	??_ai_run+1,f
  5184     02DD  3531               	lslf	ai_run@j_859,w
  5185     02DE  3EA8               	addlw	(low (_Z2| 0))& (0+255)
  5186     02DF  0086               	movwf	6
  5187     02E0  0187               	clrf	7
  5188     02E1  0827               	movf	??_ai_run,w
  5189     02E2  3FC0               	movwi [0]fsr1
  5190     02E3  0828               	movf	??_ai_run+1,w
  5191     02E4  3FC1               	movwi [1]fsr1
  5192     02E5                     l2925:
  5193                           
  5194                           ;ai.c: 108:         for(uint8_t i = 0; i < 4; i++){
  5195     02E5  01AE               	clrf	ai_run@i_860
  5196     02E6                     l2931:
  5197                           
  5198                           ;ai.c: 109:             Z2[j] += ((int)Y1[i]*(int)W2[i][j])/16;
  5199     02E6  3010               	movlw	16
  5200     02E7  00F9               	movwf	___awdiv@divisor
  5201     02E8  3000               	movlw	0
  5202     02E9  00FA               	movwf	___awdiv@divisor+1
  5203     02EA  082E               	movf	ai_run@i_860,w
  5204     02EB  3E59               	addlw	(low (_Y1| 0))& (0+255)
  5205     02EC  0086               	movwf	6
  5206     02ED  0187               	clrf	7
  5207     02EE  0801               	movf	1,w
  5208     02EF  00F3               	movwf	___wmul@multiplier
  5209     02F0  01F4               	clrf	___wmul@multiplier+1
  5210     02F1  1BF3               	btfsc	___wmul@multiplier,7
  5211     02F2  03F4               	decf	___wmul@multiplier+1,f
  5212     02F3  082E               	movf	ai_run@i_860,w
  5213     02F4  00A7               	movwf	??_ai_run
  5214     02F5  3002               	movlw	2
  5215     02F6                     u1995:
  5216     02F6  35A7               	lslf	??_ai_run,f
  5217     02F7  0B89               	decfsz	9,f
  5218     02F8  2AF6               	goto	u1995
  5219     02F9  3050               	movlw	(low (_W2| (0+256)))& (0+255)
  5220     02FA  0727               	addwf	??_ai_run,w
  5221     02FB  00A8               	movwf	??_ai_run+1
  5222     02FC  0831               	movf	ai_run@j_859,w
  5223     02FD  0728               	addwf	??_ai_run+1,w
  5224     02FE  00A9               	movwf	??_ai_run+2
  5225     02FF  0829               	movf	??_ai_run+2,w
  5226     0300  0086               	movwf	6
  5227     0301  3001               	movlw	1	; select bank2/3
  5228     0302  0087               	movwf	7
  5229     0303  0801               	movf	1,w
  5230     0304  00F5               	movwf	___wmul@multiplicand
  5231     0305  01F6               	clrf	___wmul@multiplicand+1
  5232     0306  1BF5               	btfsc	___wmul@multiplicand,7
  5233     0307  03F6               	decf	___wmul@multiplicand+1,f
  5234     0308  318D  25A5  3182   	fcall	___wmul
  5235     030B  0874               	movf	?___wmul+1,w
  5236     030C  00FC               	movwf	___awdiv@dividend+1
  5237     030D  0873               	movf	?___wmul,w
  5238     030E  00FB               	movwf	___awdiv@dividend
  5239     030F  3180  2035  3182   	fcall	___awdiv
  5240     0312  0020               	movlb	0	; select bank0
  5241     0313  3531               	lslf	ai_run@j_859,w
  5242     0314  3EA8               	addlw	(low (_Z2| 0))& (0+255)
  5243     0315  0086               	movwf	6
  5244     0316  0187               	clrf	7
  5245     0317  0879               	movf	?___awdiv,w
  5246     0318  0781               	addwf	1,f
  5247     0319  3141               	addfsr 1,1
  5248     031A  087A               	movf	?___awdiv+1,w
  5249     031B  3D81               	addwfc	1,f
  5250     031C  317F               	addfsr 1,-1
  5251     031D                     l2933:
  5252                           
  5253                           ;ai.c: 110:         }
  5254     031D  3001               	movlw	1
  5255     031E  00A7               	movwf	??_ai_run
  5256     031F  0827               	movf	??_ai_run,w
  5257     0320  07AE               	addwf	ai_run@i_860,f
  5258     0321                     l2935:
  5259     0321  3004               	movlw	4
  5260     0322  022E               	subwf	ai_run@i_860,w
  5261     0323  1C03               	skipc
  5262     0324  2B26               	goto	u2001
  5263     0325  2B27               	goto	u2000
  5264     0326                     u2001:
  5265     0326  2AE6               	goto	l2931
  5266     0327                     u2000:
  5267     0327                     l2937:
  5268                           
  5269                           ;ai.c: 111:         Y2[j] = sigmoid(Z2[j]/16)/16;
  5270     0327  3531               	lslf	ai_run@j_859,w
  5271     0328  3EA8               	addlw	(low (_Z2| 0))& (0+255)
  5272     0329  0086               	movwf	6
  5273     032A  0187               	clrf	7
  5274     032B  3F40               	moviw [0]fsr1
  5275     032C  00FB               	movwf	___awdiv@dividend
  5276     032D  3F41               	moviw [1]fsr1
  5277     032E  00FC               	movwf	___awdiv@dividend+1
  5278     032F  3010               	movlw	16
  5279     0330  00F9               	movwf	___awdiv@divisor
  5280     0331  3000               	movlw	0
  5281     0332  00FA               	movwf	___awdiv@divisor+1
  5282     0333  3180  2035  3182   	fcall	___awdiv
  5283     0336  087A               	movf	?___awdiv+1,w
  5284     0337  0020               	movlb	0	; select bank0
  5285     0338  00A5               	movwf	sigmoid@z+1
  5286     0339  0879               	movf	?___awdiv,w
  5287     033A  00A4               	movwf	sigmoid@z
  5288     033B  318E  260C  3182   	fcall	_sigmoid
  5289     033E  0020               	movlb	0	; select bank0
  5290     033F  00A7               	movwf	??_ai_run
  5291     0340  01A8               	clrf	??_ai_run+1
  5292     0341  0827               	movf	??_ai_run,w
  5293     0342  00AA               	movwf	_ai_run$1558
  5294     0343  0828               	movf	??_ai_run+1,w
  5295     0344  00AB               	movwf	_ai_run$1558+1
  5296     0345                     l2939:
  5297                           
  5298                           ;ai.c: 111:         Y2[j] = sigmoid(Z2[j]/16)/16;
  5299     0345  0831               	movf	ai_run@j_859,w
  5300     0346  3E55               	addlw	(low (_Y2| 0))& (0+255)
  5301     0347  0086               	movwf	6
  5302     0348  0187               	clrf	7
  5303     0349  3010               	movlw	16
  5304     034A  00F9               	movwf	___awdiv@divisor
  5305     034B  3000               	movlw	0
  5306     034C  00FA               	movwf	___awdiv@divisor+1
  5307     034D  082B               	movf	_ai_run$1558+1,w
  5308     034E  00FC               	movwf	___awdiv@dividend+1
  5309     034F  082A               	movf	_ai_run$1558,w
  5310     0350  00FB               	movwf	___awdiv@dividend
  5311     0351  3180  2035  3182   	fcall	___awdiv
  5312     0354  0879               	movf	?___awdiv,w
  5313     0355  0081               	movwf	1
  5314     0356                     l2941:
  5315                           
  5316                           ;ai.c: 112:     }
  5317     0356  3001               	movlw	1
  5318     0357  0020               	movlb	0	; select bank0
  5319     0358  00A7               	movwf	??_ai_run
  5320     0359  0827               	movf	??_ai_run,w
  5321     035A  07B1               	addwf	ai_run@j_859,f
  5322     035B                     l2943:
  5323     035B  3004               	movlw	4
  5324     035C  0231               	subwf	ai_run@j_859,w
  5325     035D  1C03               	skipc
  5326     035E  2B60               	goto	u2011
  5327     035F  2B61               	goto	u2010
  5328     0360                     u2011:
  5329     0360  2AD4               	goto	l2923
  5330     0361                     u2010:
  5331     0361                     l2945:
  5332                           
  5333                           ;ai.c: 114:     choice = 0;
  5334     0361  01E0               	clrf	_choice
  5335     0362                     l2947:
  5336                           
  5337                           ;ai.c: 115:     for(uint8_t i = 1; i < 4; i++){
  5338     0362  01AF               	clrf	ai_run@i_861
  5339     0363  0AAF               	incf	ai_run@i_861,f
  5340     0364                     l2953:
  5341                           
  5342                           ;ai.c: 116:         if(Y2[i]>Y2[choice]){
  5343     0364  0860               	movf	_choice,w
  5344     0365  3E55               	addlw	(low (_Y2| 0))& (0+255)
  5345     0366  0086               	movwf	6
  5346     0367  0187               	clrf	7
  5347     0368  0801               	movf	1,w
  5348     0369  3A80               	xorlw	128
  5349     036A  00A7               	movwf	??_ai_run
  5350     036B  082F               	movf	ai_run@i_861,w
  5351     036C  3E55               	addlw	(low (_Y2| 0))& (0+255)
  5352     036D  0086               	movwf	6
  5353     036E  0187               	clrf	7
  5354     036F  0801               	movf	1,w
  5355     0370  3A80               	xorlw	128
  5356     0371  02A7               	subwf	??_ai_run,f
  5357     0372  1803               	skipnc
  5358     0373  2B75               	goto	u2021
  5359     0374  2B76               	goto	u2020
  5360     0375                     u2021:
  5361     0375  2B78               	goto	l2957
  5362     0376                     u2020:
  5363     0376                     l2955:
  5364                           
  5365                           ;ai.c: 117:             choice = i;
  5366     0376  082F               	movf	ai_run@i_861,w
  5367     0377  00E0               	movwf	_choice
  5368     0378                     l2957:
  5369                           
  5370                           ;ai.c: 119:     }
  5371     0378  3001               	movlw	1
  5372     0379  00A7               	movwf	??_ai_run
  5373     037A  0827               	movf	??_ai_run,w
  5374     037B  07AF               	addwf	ai_run@i_861,f
  5375     037C                     l2959:
  5376     037C  3004               	movlw	4
  5377     037D  022F               	subwf	ai_run@i_861,w
  5378     037E  1C03               	skipc
  5379     037F  2B81               	goto	u2031
  5380     0380  2B82               	goto	u2030
  5381     0381                     u2031:
  5382     0381  2B64               	goto	l2953
  5383     0382                     u2030:
  5384     0382                     l2961:
  5385                           
  5386                           ;ai.c: 120:     return choice;
  5387     0382  0860               	movf	_choice,w
  5388     0383                     l598:
  5389     0383  0008               	return
  5390     0384                     __end_of_ai_run:
  5391                           
  5392                           	psect	text15
  5393     0E0C                     __ptext15:	
  5394 ;; *************** function _sigmoid *****************
  5395 ;; Defined at:
  5396 ;;		line 5 in file "sigmoid.c"
  5397 ;; Parameters:    Size  Location     Type
  5398 ;;  z               2    4[BANK0 ] int 
  5399 ;; Auto vars:     Size  Location     Type
  5400 ;;		None
  5401 ;; Return value:  Size  Location     Type
  5402 ;;                  1    wreg      unsigned char 
  5403 ;; Registers used:
  5404 ;;		wreg, fsr0l, fsr0h, pclath
  5405 ;; Tracked objects:
  5406 ;;		On entry : 0/0
  5407 ;;		On exit  : 0/0
  5408 ;;		Unchanged: 0/0
  5409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5410 ;;      Params:         0       2       0       0       0       0
  5411 ;;      Locals:         0       0       0       0       0       0
  5412 ;;      Temps:          0       1       0       0       0       0
  5413 ;;      Totals:         0       3       0       0       0       0
  5414 ;;Total ram usage:        3 bytes
  5415 ;; Hardware stack levels used: 1
  5416 ;; This function calls:
  5417 ;;		Nothing
  5418 ;; This function is called by:
  5419 ;;		_ai_run
  5420 ;; This function uses a non-reentrant model
  5421 ;;
  5422                           
  5423     0E0C                     _sigmoid:	
  5424                           ;psect for function _sigmoid
  5425                           
  5426     0E0C                     l2575:	
  5427                           ;incstack = 0
  5428                           ; Regs used in _sigmoid: [wreg-fsr0h+pclath]
  5429                           
  5430                           
  5431                           ;sigmoid.c: 6:     if(z > 7){
  5432     0E0C  0020               	movlb	0	; select bank0
  5433     0E0D  0825               	movf	sigmoid@z+1,w
  5434     0E0E  3A80               	xorlw	128
  5435     0E0F  00A6               	movwf	??_sigmoid
  5436     0E10  3080               	movlw	128
  5437     0E11  0226               	subwf	??_sigmoid,w
  5438     0E12  1D03               	skipz
  5439     0E13  2E16               	goto	u1465
  5440     0E14  3008               	movlw	8
  5441     0E15  0224               	subwf	sigmoid@z,w
  5442     0E16                     u1465:
  5443     0E16  1C03               	skipc
  5444     0E17  2E19               	goto	u1461
  5445     0E18  2E1A               	goto	u1460
  5446     0E19                     u1461:
  5447     0E19  2E1C               	goto	l2581
  5448     0E1A                     u1460:
  5449     0E1A                     l2577:
  5450                           
  5451                           ;sigmoid.c: 7:         return 16;
  5452     0E1A  3010               	movlw	16
  5453     0E1B  2E35               	goto	l637
  5454     0E1C                     l2581:
  5455                           
  5456                           ;sigmoid.c: 9:     if(z < -8){
  5457     0E1C  0020               	movlb	0	; select bank0
  5458     0E1D  0825               	movf	sigmoid@z+1,w
  5459     0E1E  3A80               	xorlw	128
  5460     0E1F  00A6               	movwf	??_sigmoid
  5461     0E20  307F               	movlw	127
  5462     0E21  0226               	subwf	??_sigmoid,w
  5463     0E22  1D03               	skipz
  5464     0E23  2E26               	goto	u1475
  5465     0E24  30F8               	movlw	248
  5466     0E25  0224               	subwf	sigmoid@z,w
  5467     0E26                     u1475:
  5468     0E26  1803               	skipnc
  5469     0E27  2E29               	goto	u1471
  5470     0E28  2E2A               	goto	u1470
  5471     0E29                     u1471:
  5472     0E29  2E2C               	goto	l2587
  5473     0E2A                     u1470:
  5474     0E2A                     l2583:
  5475                           
  5476                           ;sigmoid.c: 10:         return 255;
  5477     0E2A  30FF               	movlw	255
  5478     0E2B  2E35               	goto	l637
  5479     0E2C                     l2587:
  5480                           
  5481                           ;sigmoid.c: 12:     return sigmoidValues[(uint8_t)z];
  5482     0E2C  0020               	movlb	0	; select bank0
  5483     0E2D  0824               	movf	sigmoid@z,w
  5484     0E2E  3E10               	addlw	low (_sigmoidValues| (0+32768))
  5485     0E2F  0084               	movwf	4
  5486     0E30  3088               	movlw	high (_sigmoidValues| (0+32768))
  5487     0E31  1803               	skipnc
  5488     0E32  3E01               	addlw	1
  5489     0E33  0085               	movwf	5
  5490     0E34  0800               	movf	0,w	;code access
  5491     0E35                     l637:
  5492     0E35  0008               	return
  5493     0E36                     __end_of_sigmoid:
  5494                           
  5495                           	psect	text16
  5496     0575                     __ptext16:	
  5497 ;; *************** function _ai_propagate *****************
  5498 ;; Defined at:
  5499 ;;		line 123 in file "ai.c"
  5500 ;; Parameters:    Size  Location     Type
  5501 ;;  incentive       1    wreg     char 
  5502 ;; Auto vars:     Size  Location     Type
  5503 ;;  incentive       1   16[BANK0 ] char 
  5504 ;;  i               1   22[BANK0 ] unsigned char 
  5505 ;;  i               1   21[BANK0 ] unsigned char 
  5506 ;;  i               1   20[BANK0 ] unsigned char 
  5507 ;;  i               1   24[BANK0 ] unsigned char 
  5508 ;;  i               1   18[BANK0 ] unsigned char 
  5509 ;;  i               1   17[BANK0 ] unsigned char 
  5510 ;;  j               1   26[BANK0 ] unsigned char 
  5511 ;;  j               1   25[BANK0 ] unsigned char 
  5512 ;;  j               1   27[BANK0 ] unsigned char 
  5513 ;;  j               1   28[BANK0 ] unsigned char 
  5514 ;;  j               1   19[BANK0 ] unsigned char 
  5515 ;;  j               1   23[BANK0 ] unsigned char 
  5516 ;;  S               4   10[BANK0 ] char [4]
  5517 ;; Return value:  Size  Location     Type
  5518 ;;                  1    wreg      void 
  5519 ;; Registers used:
  5520 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5521 ;; Tracked objects:
  5522 ;;		On entry : 0/0
  5523 ;;		On exit  : 0/0
  5524 ;;		Unchanged: 0/0
  5525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5526 ;;      Params:         0       0       0       0       0       0
  5527 ;;      Locals:         0      19       0       0       0       0
  5528 ;;      Temps:          0       6       0       0       0       0
  5529 ;;      Totals:         0      25       0       0       0       0
  5530 ;;Total ram usage:       25 bytes
  5531 ;; Hardware stack levels used: 1
  5532 ;; Hardware stack levels required when called: 1
  5533 ;; This function calls:
  5534 ;;		_EUSART_Write
  5535 ;;		___awdiv
  5536 ;;		___wmul
  5537 ;;		_de_sigmoid
  5538 ;; This function is called by:
  5539 ;;		_main
  5540 ;; This function uses a non-reentrant model
  5541 ;;
  5542                           
  5543     0575                     _ai_propagate:	
  5544                           ;psect for function _ai_propagate
  5545                           
  5546                           
  5547                           ;incstack = 0
  5548                           ; Regs used in _ai_propagate: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5549                           ;ai_propagate@incentive stored from wreg
  5550     0575  0020               	movlb	0	; select bank0
  5551     0576  00B0               	movwf	ai_propagate@incentive
  5552     0577                     l3051:
  5553                           
  5554                           ;ai.c: 124:     if(incentive == 0){
  5555     0577  0830               	movf	ai_propagate@incentive,w
  5556     0578  1D03               	btfss	3,2
  5557     0579  2D7B               	goto	u2151
  5558     057A  2D7C               	goto	u2150
  5559     057B                     u2151:
  5560     057B  2D7D               	goto	l3055
  5561     057C                     u2150:
  5562     057C  2FD0               	goto	l602
  5563     057D                     l3055:
  5564                           
  5565                           ;ai.c: 128:     if(incentive == -1){
  5566     057D  0A30               	incf	ai_propagate@incentive,w
  5567     057E  1D03               	btfss	3,2
  5568     057F  2D81               	goto	u2161
  5569     0580  2D82               	goto	u2160
  5570     0581                     u2161:
  5571     0581  2D83               	goto	l3059
  5572     0582                     u2160:
  5573     0582                     l3057:
  5574                           
  5575                           ;ai.c: 129:         incentive = 0;
  5576     0582  01B0               	clrf	ai_propagate@incentive
  5577     0583                     l3059:
  5578                           
  5579                           ;ai.c: 132:     int8_t S[4];;ai.c: 133:     if(incentive == 0){
  5580     0583  0830               	movf	ai_propagate@incentive,w
  5581     0584  1D03               	btfss	3,2
  5582     0585  2D87               	goto	u2171
  5583     0586  2D88               	goto	u2170
  5584     0587                     u2171:
  5585     0587  2D9F               	goto	l3075
  5586     0588                     u2170:
  5587     0588                     l3061:
  5588                           
  5589                           ;ai.c: 134:         for(uint8_t i = 0; i < 4; i++){
  5590     0588  01B1               	clrf	ai_propagate@i
  5591     0589                     l3067:
  5592                           
  5593                           ;ai.c: 135:             S[i] = 16;
  5594     0589  0831               	movf	ai_propagate@i,w
  5595     058A  3E2A               	addlw	(low (ai_propagate@S| 0))& (0+255)
  5596     058B  0086               	movwf	6
  5597     058C  0187               	clrf	7
  5598     058D  3010               	movlw	16
  5599     058E  0081               	movwf	1
  5600     058F                     l3069:
  5601                           
  5602                           ;ai.c: 136:         }
  5603     058F  3001               	movlw	1
  5604     0590  00A4               	movwf	??_ai_propagate
  5605     0591  0824               	movf	??_ai_propagate,w
  5606     0592  07B1               	addwf	ai_propagate@i,f
  5607     0593                     l3071:
  5608     0593  3004               	movlw	4
  5609     0594  0231               	subwf	ai_propagate@i,w
  5610     0595  1C03               	skipc
  5611     0596  2D98               	goto	u2181
  5612     0597  2D99               	goto	u2180
  5613     0598                     u2181:
  5614     0598  2D89               	goto	l3067
  5615     0599                     u2180:
  5616     0599                     l3073:
  5617                           
  5618                           ;ai.c: 137:         S[choice] = 0;
  5619     0599  0860               	movf	_choice,w
  5620     059A  3E2A               	addlw	(low (ai_propagate@S| 0))& (0+255)
  5621     059B  0086               	movwf	6
  5622     059C  0187               	clrf	7
  5623     059D  0181               	clrf	1
  5624                           
  5625                           ;ai.c: 138:     } else{
  5626     059E  2DB5               	goto	l3089
  5627     059F                     l3075:
  5628                           
  5629                           ;ai.c: 139:         for(uint8_t i = 0; i < 4; i++){
  5630     059F  01B2               	clrf	ai_propagate@i_866
  5631     05A0                     l3081:
  5632                           
  5633                           ;ai.c: 140:             S[i] = 0;
  5634     05A0  0832               	movf	ai_propagate@i_866,w
  5635     05A1  3E2A               	addlw	(low (ai_propagate@S| 0))& (0+255)
  5636     05A2  0086               	movwf	6
  5637     05A3  0187               	clrf	7
  5638     05A4  0181               	clrf	1
  5639     05A5                     l3083:
  5640                           
  5641                           ;ai.c: 141:         }
  5642     05A5  3001               	movlw	1
  5643     05A6  00A4               	movwf	??_ai_propagate
  5644     05A7  0824               	movf	??_ai_propagate,w
  5645     05A8  07B2               	addwf	ai_propagate@i_866,f
  5646     05A9                     l3085:
  5647     05A9  3004               	movlw	4
  5648     05AA  0232               	subwf	ai_propagate@i_866,w
  5649     05AB  1C03               	skipc
  5650     05AC  2DAE               	goto	u2191
  5651     05AD  2DAF               	goto	u2190
  5652     05AE                     u2191:
  5653     05AE  2DA0               	goto	l3081
  5654     05AF                     u2190:
  5655     05AF                     l3087:
  5656                           
  5657                           ;ai.c: 142:         S[choice] = 16;
  5658     05AF  0860               	movf	_choice,w
  5659     05B0  3E2A               	addlw	(low (ai_propagate@S| 0))& (0+255)
  5660     05B1  0086               	movwf	6
  5661     05B2  0187               	clrf	7
  5662     05B3  3010               	movlw	16
  5663     05B4  0081               	movwf	1
  5664     05B5                     l3089:
  5665                           
  5666                           ;ai.c: 145:     for(uint8_t j = 0; j < 4; j++){
  5667     05B5  01B7               	clrf	ai_propagate@j
  5668     05B6                     l3095:
  5669                           
  5670                           ;ai.c: 146:         DC_DY2[j] = Y2[j] - S[j];
  5671     05B6  0837               	movf	ai_propagate@j,w
  5672     05B7  3ECC               	addlw	(low (_DC_DY2| 0))& (0+255)
  5673     05B8  0086               	movwf	6
  5674     05B9  0187               	clrf	7
  5675     05BA  0837               	movf	ai_propagate@j,w
  5676     05BB  3E2A               	addlw	(low (ai_propagate@S| 0))& (0+255)
  5677     05BC  0084               	movwf	4
  5678     05BD  0185               	clrf	5
  5679     05BE  0800               	movf	0,w
  5680     05BF  00A4               	movwf	??_ai_propagate
  5681     05C0  0837               	movf	ai_propagate@j,w
  5682     05C1  3E55               	addlw	(low (_Y2| 0))& (0+255)
  5683     05C2  0084               	movwf	4
  5684     05C3  0185               	clrf	5
  5685     05C4  0800               	movf	0,w
  5686     05C5  00A5               	movwf	??_ai_propagate+1
  5687     05C6  0824               	movf	??_ai_propagate,w
  5688     05C7  0225               	subwf	??_ai_propagate+1,w
  5689     05C8  0081               	movwf	1
  5690     05C9                     l3097:
  5691                           
  5692                           ;ai.c: 147:     }
  5693     05C9  3001               	movlw	1
  5694     05CA  00A4               	movwf	??_ai_propagate
  5695     05CB  0824               	movf	??_ai_propagate,w
  5696     05CC  07B7               	addwf	ai_propagate@j,f
  5697     05CD                     l3099:
  5698     05CD  3004               	movlw	4
  5699     05CE  0237               	subwf	ai_propagate@j,w
  5700     05CF  1C03               	skipc
  5701     05D0  2DD2               	goto	u2201
  5702     05D1  2DD3               	goto	u2200
  5703     05D2                     u2201:
  5704     05D2  2DB6               	goto	l3095
  5705     05D3                     u2200:
  5706     05D3                     l3101:
  5707                           
  5708                           ;ai.c: 149:     for(uint8_t j = 0; j < 4; j++){
  5709     05D3  01B3               	clrf	ai_propagate@j_868
  5710     05D4                     l3107:
  5711                           
  5712                           ;ai.c: 150:         DC_DY1[j] = 0;
  5713     05D4  0833               	movf	ai_propagate@j_868,w
  5714     05D5  3EC4               	addlw	(low (_DC_DY1| 0))& (0+255)
  5715     05D6  0086               	movwf	6
  5716     05D7  0187               	clrf	7
  5717     05D8  0181               	clrf	1
  5718     05D9                     l3109:
  5719                           
  5720                           ;ai.c: 151:     }
  5721     05D9  3001               	movlw	1
  5722     05DA  00A4               	movwf	??_ai_propagate
  5723     05DB  0824               	movf	??_ai_propagate,w
  5724     05DC  07B3               	addwf	ai_propagate@j_868,f
  5725     05DD                     l3111:
  5726     05DD  3004               	movlw	4
  5727     05DE  0233               	subwf	ai_propagate@j_868,w
  5728     05DF  1C03               	skipc
  5729     05E0  2DE2               	goto	u2211
  5730     05E1  2DE3               	goto	u2210
  5731     05E2                     u2211:
  5732     05E2  2DD4               	goto	l3107
  5733     05E3                     u2210:
  5734     05E3                     l3113:
  5735                           
  5736                           ;ai.c: 153:     for(uint8_t j = 0; j < 4; j++){
  5737     05E3  01BC               	clrf	ai_propagate@j_869
  5738     05E4                     l3119:
  5739                           
  5740                           ;ai.c: 154:         DC_DZ2[j] = ((int)DC_DY2[j]*(int)(de_sigmoid(Z2[j])/16))/16;
  5741     05E4  083C               	movf	ai_propagate@j_869,w
  5742     05E5  3ECC               	addlw	(low (_DC_DY2| 0))& (0+255)
  5743     05E6  0086               	movwf	6
  5744     05E7  0187               	clrf	7
  5745     05E8  0801               	movf	1,w
  5746     05E9  00F3               	movwf	___wmul@multiplier
  5747     05EA  01F4               	clrf	___wmul@multiplier+1
  5748     05EB  1BF3               	btfsc	___wmul@multiplier,7
  5749     05EC  03F4               	decf	___wmul@multiplier+1,f
  5750     05ED  3010               	movlw	16
  5751     05EE  00F9               	movwf	___awdiv@divisor
  5752     05EF  3000               	movlw	0
  5753     05F0  00FA               	movwf	___awdiv@divisor+1
  5754     05F1  353C               	lslf	ai_propagate@j_869,w
  5755     05F2  3EA8               	addlw	(low (_Z2| 0))& (0+255)
  5756     05F3  0086               	movwf	6
  5757     05F4  0187               	clrf	7
  5758     05F5  3F40               	moviw [0]fsr1
  5759     05F6  00F0               	movwf	de_sigmoid@z
  5760     05F7  3F41               	moviw [1]fsr1
  5761     05F8  00F1               	movwf	de_sigmoid@z+1
  5762     05F9  318D  25E6  3185   	fcall	_de_sigmoid
  5763     05FC  0020               	movlb	0	; select bank0
  5764     05FD  00A4               	movwf	??_ai_propagate
  5765     05FE  01A5               	clrf	??_ai_propagate+1
  5766     05FF  0824               	movf	??_ai_propagate,w
  5767     0600  00FB               	movwf	___awdiv@dividend
  5768     0601  0825               	movf	??_ai_propagate+1,w
  5769     0602  00FC               	movwf	___awdiv@dividend+1
  5770     0603  3180  2035  3185   	fcall	___awdiv
  5771     0606  087A               	movf	?___awdiv+1,w
  5772     0607  00F6               	movwf	___wmul@multiplicand+1
  5773     0608  0879               	movf	?___awdiv,w
  5774     0609  00F5               	movwf	___wmul@multiplicand
  5775     060A  318D  25A5  3185   	fcall	___wmul
  5776     060D  0874               	movf	?___wmul+1,w
  5777     060E  0020               	movlb	0	; select bank0
  5778     060F  00AF               	movwf	_ai_propagate$1559+1
  5779     0610  0873               	movf	?___wmul,w
  5780     0611  00AE               	movwf	_ai_propagate$1559
  5781     0612                     l3121:
  5782                           
  5783                           ;ai.c: 154:         DC_DZ2[j] = ((int)DC_DY2[j]*(int)(de_sigmoid(Z2[j])/16))/16;
  5784     0612  3010               	movlw	16
  5785     0613  00F9               	movwf	___awdiv@divisor
  5786     0614  3000               	movlw	0
  5787     0615  00FA               	movwf	___awdiv@divisor+1
  5788     0616  082F               	movf	_ai_propagate$1559+1,w
  5789     0617  00FC               	movwf	___awdiv@dividend+1
  5790     0618  082E               	movf	_ai_propagate$1559,w
  5791     0619  00FB               	movwf	___awdiv@dividend
  5792     061A  3180  2035  3185   	fcall	___awdiv
  5793     061D  0020               	movlb	0	; select bank0
  5794     061E  353C               	lslf	ai_propagate@j_869,w
  5795     061F  3E49               	addlw	(low (_DC_DZ2| 0))& (0+255)
  5796     0620  0086               	movwf	6
  5797     0621  0187               	clrf	7
  5798     0622  0879               	movf	?___awdiv,w
  5799     0623  3FC0               	movwi [0]fsr1
  5800     0624  087A               	movf	?___awdiv+1,w
  5801     0625  3FC1               	movwi [1]fsr1
  5802     0626                     l3123:
  5803                           
  5804                           ;ai.c: 155:         DC_DB2[j] = DC_DZ2[j];
  5805     0626  083C               	movf	ai_propagate@j_869,w
  5806     0627  3EC8               	addlw	(low (_DC_DB2| 0))& (0+255)
  5807     0628  0086               	movwf	6
  5808     0629  0187               	clrf	7
  5809     062A  353C               	lslf	ai_propagate@j_869,w
  5810     062B  3E49               	addlw	(low (_DC_DZ2| 0))& (0+255)
  5811     062C  0084               	movwf	4
  5812     062D  0185               	clrf	5
  5813     062E  0800               	movf	0,w
  5814     062F  0081               	movwf	1
  5815     0630                     l3125:
  5816                           
  5817                           ;ai.c: 156:         EUSART_Write(DC_DZ2[j]);
  5818     0630  353C               	lslf	ai_propagate@j_869,w
  5819     0631  3E49               	addlw	(low (_DC_DZ2| 0))& (0+255)
  5820     0632  0086               	movwf	6
  5821     0633  0187               	clrf	7
  5822     0634  0801               	movf	1,w
  5823     0635  318D  2512  3185   	fcall	_EUSART_Write
  5824     0638                     l3127:
  5825                           
  5826                           ;ai.c: 157:         for(uint8_t i = 0; i < 4; i++){
  5827     0638  0020               	movlb	0	; select bank0
  5828     0639  01B8               	clrf	ai_propagate@i_871
  5829     063A                     l3133:
  5830                           
  5831                           ;ai.c: 158:             DC_DW2[i][j] = ((int)DC_DZ2[j]*(int)Y1[i])/16;
  5832     063A  0838               	movf	ai_propagate@i_871,w
  5833     063B  00A4               	movwf	??_ai_propagate
  5834     063C  3002               	movlw	2
  5835     063D                     u2225:
  5836     063D  35A4               	lslf	??_ai_propagate,f
  5837     063E  0B89               	decfsz	9,f
  5838     063F  2E3D               	goto	u2225
  5839     0640  3040               	movlw	(low (_DC_DW2| (0+256)))& (0+255)
  5840     0641  0724               	addwf	??_ai_propagate,w
  5841     0642  00A5               	movwf	??_ai_propagate+1
  5842     0643  083C               	movf	ai_propagate@j_869,w
  5843     0644  0725               	addwf	??_ai_propagate+1,w
  5844     0645  00A6               	movwf	??_ai_propagate+2
  5845     0646  0826               	movf	??_ai_propagate+2,w
  5846     0647  0086               	movwf	6
  5847     0648  3001               	movlw	1	; select bank2/3
  5848     0649  0087               	movwf	7
  5849     064A  3010               	movlw	16
  5850     064B  00F9               	movwf	___awdiv@divisor
  5851     064C  3000               	movlw	0
  5852     064D  00FA               	movwf	___awdiv@divisor+1
  5853     064E  0838               	movf	ai_propagate@i_871,w
  5854     064F  3E59               	addlw	(low (_Y1| 0))& (0+255)
  5855     0650  0084               	movwf	4
  5856     0651  0185               	clrf	5
  5857     0652  0800               	movf	0,w
  5858     0653  00F3               	movwf	___wmul@multiplier
  5859     0654  01F4               	clrf	___wmul@multiplier+1
  5860     0655  1BF3               	btfsc	___wmul@multiplier,7
  5861     0656  03F4               	decf	___wmul@multiplier+1,f
  5862     0657  353C               	lslf	ai_propagate@j_869,w
  5863     0658  3E49               	addlw	(low (_DC_DZ2| 0))& (0+255)
  5864     0659  0084               	movwf	4
  5865     065A  0185               	clrf	5
  5866     065B  3F00               	moviw [0]fsr0
  5867     065C  00F5               	movwf	___wmul@multiplicand
  5868     065D  3F01               	moviw [1]fsr0
  5869     065E  00F6               	movwf	___wmul@multiplicand+1
  5870     065F  318D  25A5  3185   	fcall	___wmul
  5871     0662  0874               	movf	?___wmul+1,w
  5872     0663  00FC               	movwf	___awdiv@dividend+1
  5873     0664  0873               	movf	?___wmul,w
  5874     0665  00FB               	movwf	___awdiv@dividend
  5875     0666  3180  2035  3185   	fcall	___awdiv
  5876     0669  0879               	movf	?___awdiv,w
  5877     066A  0081               	movwf	1
  5878     066B                     l3135:
  5879                           
  5880                           ;ai.c: 159:             DC_DY1[i] += ((int)DC_DZ2[j]*(int)W2[i][j])/16;
  5881     066B  3010               	movlw	16
  5882     066C  00F9               	movwf	___awdiv@divisor
  5883     066D  3000               	movlw	0
  5884     066E  00FA               	movwf	___awdiv@divisor+1
  5885     066F  0020               	movlb	0	; select bank0
  5886     0670  0838               	movf	ai_propagate@i_871,w
  5887     0671  00A4               	movwf	??_ai_propagate
  5888     0672  3002               	movlw	2
  5889     0673                     u2235:
  5890     0673  35A4               	lslf	??_ai_propagate,f
  5891     0674  0B89               	decfsz	9,f
  5892     0675  2E73               	goto	u2235
  5893     0676  3050               	movlw	(low (_W2| (0+256)))& (0+255)
  5894     0677  0724               	addwf	??_ai_propagate,w
  5895     0678  00A5               	movwf	??_ai_propagate+1
  5896     0679  083C               	movf	ai_propagate@j_869,w
  5897     067A  0725               	addwf	??_ai_propagate+1,w
  5898     067B  00A6               	movwf	??_ai_propagate+2
  5899     067C  0826               	movf	??_ai_propagate+2,w
  5900     067D  0086               	movwf	6
  5901     067E  3001               	movlw	1	; select bank2/3
  5902     067F  0087               	movwf	7
  5903     0680  0801               	movf	1,w
  5904     0681  00F3               	movwf	___wmul@multiplier
  5905     0682  01F4               	clrf	___wmul@multiplier+1
  5906     0683  1BF3               	btfsc	___wmul@multiplier,7
  5907     0684  03F4               	decf	___wmul@multiplier+1,f
  5908     0685  353C               	lslf	ai_propagate@j_869,w
  5909     0686  3E49               	addlw	(low (_DC_DZ2| 0))& (0+255)
  5910     0687  0086               	movwf	6
  5911     0688  0187               	clrf	7
  5912     0689  3F40               	moviw [0]fsr1
  5913     068A  00F5               	movwf	___wmul@multiplicand
  5914     068B  3F41               	moviw [1]fsr1
  5915     068C  00F6               	movwf	___wmul@multiplicand+1
  5916     068D  318D  25A5  3185   	fcall	___wmul
  5917     0690  0874               	movf	?___wmul+1,w
  5918     0691  00FC               	movwf	___awdiv@dividend+1
  5919     0692  0873               	movf	?___wmul,w
  5920     0693  00FB               	movwf	___awdiv@dividend
  5921     0694  3180  2035  3185   	fcall	___awdiv
  5922     0697  0879               	movf	?___awdiv,w
  5923     0698  0020               	movlb	0	; select bank0
  5924     0699  00A7               	movwf	??_ai_propagate+3
  5925     069A  0838               	movf	ai_propagate@i_871,w
  5926     069B  3EC4               	addlw	(low (_DC_DY1| 0))& (0+255)
  5927     069C  0086               	movwf	6
  5928     069D  0187               	clrf	7
  5929     069E  0827               	movf	??_ai_propagate+3,w
  5930     069F  0781               	addwf	1,f
  5931     06A0                     l3137:
  5932                           
  5933                           ;ai.c: 160:         }
  5934     06A0  3001               	movlw	1
  5935     06A1  00A4               	movwf	??_ai_propagate
  5936     06A2  0824               	movf	??_ai_propagate,w
  5937     06A3  07B8               	addwf	ai_propagate@i_871,f
  5938     06A4                     l3139:
  5939     06A4  3004               	movlw	4
  5940     06A5  0238               	subwf	ai_propagate@i_871,w
  5941     06A6  1C03               	skipc
  5942     06A7  2EA9               	goto	u2241
  5943     06A8  2EAA               	goto	u2240
  5944     06A9                     u2241:
  5945     06A9  2E3A               	goto	l3133
  5946     06AA                     u2240:
  5947     06AA                     l3141:
  5948                           
  5949                           ;ai.c: 161:     }
  5950     06AA  3001               	movlw	1
  5951     06AB  00A4               	movwf	??_ai_propagate
  5952     06AC  0824               	movf	??_ai_propagate,w
  5953     06AD  07BC               	addwf	ai_propagate@j_869,f
  5954     06AE                     l3143:
  5955     06AE  3004               	movlw	4
  5956     06AF  023C               	subwf	ai_propagate@j_869,w
  5957     06B0  1C03               	skipc
  5958     06B1  2EB3               	goto	u2251
  5959     06B2  2EB4               	goto	u2250
  5960     06B3                     u2251:
  5961     06B3  2DE4               	goto	l3119
  5962     06B4                     u2250:
  5963     06B4                     l3145:
  5964                           
  5965                           ;ai.c: 162:     for(uint8_t j = 0; j < 4; j++){
  5966     06B4  01BB               	clrf	ai_propagate@j_872
  5967     06B5                     l3151:
  5968                           
  5969                           ;ai.c: 163:         DC_DZ1[j] = ((int)DC_DY1[j]*(int)(de_sigmoid(Z1[j])/16))/16;
  5970     06B5  083B               	movf	ai_propagate@j_872,w
  5971     06B6  3EC4               	addlw	(low (_DC_DY1| 0))& (0+255)
  5972     06B7  0086               	movwf	6
  5973     06B8  0187               	clrf	7
  5974     06B9  0801               	movf	1,w
  5975     06BA  00F3               	movwf	___wmul@multiplier
  5976     06BB  01F4               	clrf	___wmul@multiplier+1
  5977     06BC  1BF3               	btfsc	___wmul@multiplier,7
  5978     06BD  03F4               	decf	___wmul@multiplier+1,f
  5979     06BE  3010               	movlw	16
  5980     06BF  00F9               	movwf	___awdiv@divisor
  5981     06C0  3000               	movlw	0
  5982     06C1  00FA               	movwf	___awdiv@divisor+1
  5983     06C2  353B               	lslf	ai_propagate@j_872,w
  5984     06C3  3EB0               	addlw	(low (_Z1| 0))& (0+255)
  5985     06C4  0086               	movwf	6
  5986     06C5  0187               	clrf	7
  5987     06C6  3F40               	moviw [0]fsr1
  5988     06C7  00F0               	movwf	de_sigmoid@z
  5989     06C8  3F41               	moviw [1]fsr1
  5990     06C9  00F1               	movwf	de_sigmoid@z+1
  5991     06CA  318D  25E6  3185   	fcall	_de_sigmoid
  5992     06CD  0020               	movlb	0	; select bank0
  5993     06CE  00A4               	movwf	??_ai_propagate
  5994     06CF  01A5               	clrf	??_ai_propagate+1
  5995     06D0  0824               	movf	??_ai_propagate,w
  5996     06D1  00FB               	movwf	___awdiv@dividend
  5997     06D2  0825               	movf	??_ai_propagate+1,w
  5998     06D3  00FC               	movwf	___awdiv@dividend+1
  5999     06D4  3180  2035  3185   	fcall	___awdiv
  6000     06D7  087A               	movf	?___awdiv+1,w
  6001     06D8  00F6               	movwf	___wmul@multiplicand+1
  6002     06D9  0879               	movf	?___awdiv,w
  6003     06DA  00F5               	movwf	___wmul@multiplicand
  6004     06DB  318D  25A5  3185   	fcall	___wmul
  6005     06DE  0874               	movf	?___wmul+1,w
  6006     06DF  0020               	movlb	0	; select bank0
  6007     06E0  00AF               	movwf	_ai_propagate$1559+1
  6008     06E1  0873               	movf	?___wmul,w
  6009     06E2  00AE               	movwf	_ai_propagate$1559
  6010     06E3                     l3153:
  6011                           
  6012                           ;ai.c: 163:         DC_DZ1[j] = ((int)DC_DY1[j]*(int)(de_sigmoid(Z1[j])/16))/16;
  6013     06E3  3010               	movlw	16
  6014     06E4  00F9               	movwf	___awdiv@divisor
  6015     06E5  3000               	movlw	0
  6016     06E6  00FA               	movwf	___awdiv@divisor+1
  6017     06E7  082F               	movf	_ai_propagate$1559+1,w
  6018     06E8  00FC               	movwf	___awdiv@dividend+1
  6019     06E9  082E               	movf	_ai_propagate$1559,w
  6020     06EA  00FB               	movwf	___awdiv@dividend
  6021     06EB  3180  2035  3185   	fcall	___awdiv
  6022     06EE  0020               	movlb	0	; select bank0
  6023     06EF  353B               	lslf	ai_propagate@j_872,w
  6024     06F0  3EA0               	addlw	(low (_DC_DZ1| 0))& (0+255)
  6025     06F1  0086               	movwf	6
  6026     06F2  0187               	clrf	7
  6027     06F3  0879               	movf	?___awdiv,w
  6028     06F4  3FC0               	movwi [0]fsr1
  6029     06F5  087A               	movf	?___awdiv+1,w
  6030     06F6  3FC1               	movwi [1]fsr1
  6031     06F7                     l3155:
  6032                           
  6033                           ;ai.c: 164:         DC_DB1[j] = DC_DZ1[j];
  6034     06F7  083B               	movf	ai_propagate@j_872,w
  6035     06F8  3EC0               	addlw	(low (_DC_DB1| 0))& (0+255)
  6036     06F9  0086               	movwf	6
  6037     06FA  0187               	clrf	7
  6038     06FB  353B               	lslf	ai_propagate@j_872,w
  6039     06FC  3EA0               	addlw	(low (_DC_DZ1| 0))& (0+255)
  6040     06FD  0084               	movwf	4
  6041     06FE  0185               	clrf	5
  6042     06FF  0800               	movf	0,w
  6043     0700  0081               	movwf	1
  6044     0701                     l3157:
  6045                           
  6046                           ;ai.c: 165:         for(uint8_t i = 0; i < 8; i++){
  6047     0701  01B4               	clrf	ai_propagate@i_873
  6048     0702                     l3163:
  6049                           
  6050                           ;ai.c: 166:             DC_DW2[i][j] = ((int)DC_DZ2[j]*(int)Y0[i])/16;
  6051     0702  0834               	movf	ai_propagate@i_873,w
  6052     0703  00A4               	movwf	??_ai_propagate
  6053     0704  3002               	movlw	2
  6054     0705                     u2265:
  6055     0705  35A4               	lslf	??_ai_propagate,f
  6056     0706  0B89               	decfsz	9,f
  6057     0707  2F05               	goto	u2265
  6058     0708  3040               	movlw	(low (_DC_DW2| (0+256)))& (0+255)
  6059     0709  0724               	addwf	??_ai_propagate,w
  6060     070A  00A5               	movwf	??_ai_propagate+1
  6061     070B  083B               	movf	ai_propagate@j_872,w
  6062     070C  0725               	addwf	??_ai_propagate+1,w
  6063     070D  00A6               	movwf	??_ai_propagate+2
  6064     070E  0826               	movf	??_ai_propagate+2,w
  6065     070F  0086               	movwf	6
  6066     0710  3001               	movlw	1	; select bank2/3
  6067     0711  0087               	movwf	7
  6068     0712  3010               	movlw	16
  6069     0713  00F9               	movwf	___awdiv@divisor
  6070     0714  3000               	movlw	0
  6071     0715  00FA               	movwf	___awdiv@divisor+1
  6072     0716  0834               	movf	ai_propagate@i_873,w
  6073     0717  3E63               	addlw	(low (_Y0| 0))& (0+255)
  6074     0718  0084               	movwf	4
  6075     0719  0185               	clrf	5
  6076     071A  0800               	movf	0,w
  6077     071B  00F3               	movwf	___wmul@multiplier
  6078     071C  01F4               	clrf	___wmul@multiplier+1
  6079     071D  1BF3               	btfsc	___wmul@multiplier,7
  6080     071E  03F4               	decf	___wmul@multiplier+1,f
  6081     071F  353B               	lslf	ai_propagate@j_872,w
  6082     0720  3E49               	addlw	(low (_DC_DZ2| 0))& (0+255)
  6083     0721  0084               	movwf	4
  6084     0722  0185               	clrf	5
  6085     0723  3F00               	moviw [0]fsr0
  6086     0724  00F5               	movwf	___wmul@multiplicand
  6087     0725  3F01               	moviw [1]fsr0
  6088     0726  00F6               	movwf	___wmul@multiplicand+1
  6089     0727  318D  25A5  3185   	fcall	___wmul
  6090     072A  0874               	movf	?___wmul+1,w
  6091     072B  00FC               	movwf	___awdiv@dividend+1
  6092     072C  0873               	movf	?___wmul,w
  6093     072D  00FB               	movwf	___awdiv@dividend
  6094     072E  3180  2035  3185   	fcall	___awdiv
  6095     0731  0879               	movf	?___awdiv,w
  6096     0732  0081               	movwf	1
  6097     0733                     l3165:
  6098                           
  6099                           ;ai.c: 167:         }
  6100     0733  3001               	movlw	1
  6101     0734  0020               	movlb	0	; select bank0
  6102     0735  00A4               	movwf	??_ai_propagate
  6103     0736  0824               	movf	??_ai_propagate,w
  6104     0737  07B4               	addwf	ai_propagate@i_873,f
  6105     0738                     l3167:
  6106     0738  3008               	movlw	8
  6107     0739  0234               	subwf	ai_propagate@i_873,w
  6108     073A  1C03               	skipc
  6109     073B  2F3D               	goto	u2271
  6110     073C  2F3E               	goto	u2270
  6111     073D                     u2271:
  6112     073D  2F02               	goto	l3163
  6113     073E                     u2270:
  6114     073E                     l3169:
  6115                           
  6116                           ;ai.c: 168:     }
  6117     073E  3001               	movlw	1
  6118     073F  00A4               	movwf	??_ai_propagate
  6119     0740  0824               	movf	??_ai_propagate,w
  6120     0741  07BB               	addwf	ai_propagate@j_872,f
  6121     0742                     l3171:
  6122     0742  3004               	movlw	4
  6123     0743  023B               	subwf	ai_propagate@j_872,w
  6124     0744  1C03               	skipc
  6125     0745  2F47               	goto	u2281
  6126     0746  2F48               	goto	u2280
  6127     0747                     u2281:
  6128     0747  2EB5               	goto	l3151
  6129     0748                     u2280:
  6130     0748                     l3173:
  6131                           
  6132                           ;ai.c: 170:     for(uint8_t j = 0; j < 4; j++){
  6133     0748  01B9               	clrf	ai_propagate@j_874
  6134     0749                     l3179:
  6135                           
  6136                           ;ai.c: 171:         B2[j] -= DC_DB2[j];
  6137     0749  0839               	movf	ai_propagate@j_874,w
  6138     074A  3EC8               	addlw	(low (_DC_DB2| 0))& (0+255)
  6139     074B  0086               	movwf	6
  6140     074C  0187               	clrf	7
  6141     074D  0839               	movf	ai_propagate@j_874,w
  6142     074E  3ED0               	addlw	(low (_B2| 0))& (0+255)
  6143     074F  0084               	movwf	4
  6144     0750  0185               	clrf	5
  6145     0751  0801               	movf	1,w
  6146     0752  0280               	subwf	0,f
  6147     0753                     l3181:
  6148                           
  6149                           ;ai.c: 172:         for(uint8_t i = 0; i < 4; i++){
  6150     0753  01B5               	clrf	ai_propagate@i_875
  6151     0754                     l3187:
  6152                           
  6153                           ;ai.c: 173:             W2[i][j] -= DC_DW2[i][j];
  6154     0754  0835               	movf	ai_propagate@i_875,w
  6155     0755  00A4               	movwf	??_ai_propagate
  6156     0756  3002               	movlw	2
  6157     0757                     u2295:
  6158     0757  35A4               	lslf	??_ai_propagate,f
  6159     0758  0B89               	decfsz	9,f
  6160     0759  2F57               	goto	u2295
  6161     075A  3040               	movlw	(low (_DC_DW2| (0+256)))& (0+255)
  6162     075B  0724               	addwf	??_ai_propagate,w
  6163     075C  00A5               	movwf	??_ai_propagate+1
  6164     075D  0839               	movf	ai_propagate@j_874,w
  6165     075E  0725               	addwf	??_ai_propagate+1,w
  6166     075F  00A6               	movwf	??_ai_propagate+2
  6167     0760  0826               	movf	??_ai_propagate+2,w
  6168     0761  0086               	movwf	6
  6169     0762  3001               	movlw	1	; select bank2/3
  6170     0763  0087               	movwf	7
  6171     0764  0835               	movf	ai_propagate@i_875,w
  6172     0765  00A7               	movwf	??_ai_propagate+3
  6173     0766  3002               	movlw	2
  6174     0767                     u2305:
  6175     0767  35A7               	lslf	??_ai_propagate+3,f
  6176     0768  0B89               	decfsz	9,f
  6177     0769  2F67               	goto	u2305
  6178     076A  3050               	movlw	(low (_W2| (0+256)))& (0+255)
  6179     076B  0727               	addwf	??_ai_propagate+3,w
  6180     076C  00A8               	movwf	??_ai_propagate+4
  6181     076D  0839               	movf	ai_propagate@j_874,w
  6182     076E  0728               	addwf	??_ai_propagate+4,w
  6183     076F  00A9               	movwf	??_ai_propagate+5
  6184     0770  0829               	movf	??_ai_propagate+5,w
  6185     0771  0084               	movwf	4
  6186     0772  3001               	movlw	1	; select bank2/3
  6187     0773  0085               	movwf	5
  6188     0774  0801               	movf	1,w
  6189     0775  0280               	subwf	0,f
  6190     0776                     l3189:
  6191                           
  6192                           ;ai.c: 174:         }
  6193     0776  3001               	movlw	1
  6194     0777  00A4               	movwf	??_ai_propagate
  6195     0778  0824               	movf	??_ai_propagate,w
  6196     0779  07B5               	addwf	ai_propagate@i_875,f
  6197     077A                     l3191:
  6198     077A  3004               	movlw	4
  6199     077B  0235               	subwf	ai_propagate@i_875,w
  6200     077C  1C03               	skipc
  6201     077D  2F7F               	goto	u2311
  6202     077E  2F80               	goto	u2310
  6203     077F                     u2311:
  6204     077F  2F54               	goto	l3187
  6205     0780                     u2310:
  6206     0780                     l3193:
  6207                           
  6208                           ;ai.c: 175:     }
  6209     0780  3001               	movlw	1
  6210     0781  00A4               	movwf	??_ai_propagate
  6211     0782  0824               	movf	??_ai_propagate,w
  6212     0783  07B9               	addwf	ai_propagate@j_874,f
  6213     0784                     l3195:
  6214     0784  3004               	movlw	4
  6215     0785  0239               	subwf	ai_propagate@j_874,w
  6216     0786  1C03               	skipc
  6217     0787  2F89               	goto	u2321
  6218     0788  2F8A               	goto	u2320
  6219     0789                     u2321:
  6220     0789  2F49               	goto	l3179
  6221     078A                     u2320:
  6222     078A                     l3197:
  6223                           
  6224                           ;ai.c: 176:     for(uint8_t j = 0; j < 4; j++){
  6225     078A  01BA               	clrf	ai_propagate@j_876
  6226     078B                     l3199:
  6227     078B  3004               	movlw	4
  6228     078C  023A               	subwf	ai_propagate@j_876,w
  6229     078D  1C03               	skipc
  6230     078E  2F90               	goto	u2331
  6231     078F  2F91               	goto	u2330
  6232     0790                     u2331:
  6233     0790  2F92               	goto	l3203
  6234     0791                     u2330:
  6235     0791  2FD0               	goto	l602
  6236     0792                     l3203:
  6237                           
  6238                           ;ai.c: 177:         B1[j] -= DC_DB1[j];
  6239     0792  083A               	movf	ai_propagate@j_876,w
  6240     0793  3EC0               	addlw	(low (_DC_DB1| 0))& (0+255)
  6241     0794  0086               	movwf	6
  6242     0795  0187               	clrf	7
  6243     0796  083A               	movf	ai_propagate@j_876,w
  6244     0797  3E51               	addlw	(low (_B1| 0))& (0+255)
  6245     0798  0084               	movwf	4
  6246     0799  0185               	clrf	5
  6247     079A  0801               	movf	1,w
  6248     079B  0280               	subwf	0,f
  6249     079C                     l3205:
  6250                           
  6251                           ;ai.c: 178:         for(uint8_t i = 0; i < 8; i++){
  6252     079C  01B6               	clrf	ai_propagate@i_877
  6253     079D                     l3207:
  6254     079D  3008               	movlw	8
  6255     079E  0236               	subwf	ai_propagate@i_877,w
  6256     079F  1C03               	skipc
  6257     07A0  2FA2               	goto	u2341
  6258     07A1  2FA3               	goto	u2340
  6259     07A2                     u2341:
  6260     07A2  2FA4               	goto	l3211
  6261     07A3                     u2340:
  6262     07A3  2FCB               	goto	l3217
  6263     07A4                     l3211:
  6264                           
  6265                           ;ai.c: 179:             W1[i][j] -= DC_DW1[i][j];
  6266     07A4  0836               	movf	ai_propagate@i_877,w
  6267     07A5  00A4               	movwf	??_ai_propagate
  6268     07A6  3002               	movlw	2
  6269     07A7                     u2355:
  6270     07A7  35A4               	lslf	??_ai_propagate,f
  6271     07A8  0B89               	decfsz	9,f
  6272     07A9  2FA7               	goto	u2355
  6273     07AA  30A0               	movlw	(low (_DC_DW1| (0+256)))& (0+255)
  6274     07AB  0724               	addwf	??_ai_propagate,w
  6275     07AC  00A5               	movwf	??_ai_propagate+1
  6276     07AD  083A               	movf	ai_propagate@j_876,w
  6277     07AE  0725               	addwf	??_ai_propagate+1,w
  6278     07AF  00A6               	movwf	??_ai_propagate+2
  6279     07B0  0826               	movf	??_ai_propagate+2,w
  6280     07B1  0086               	movwf	6
  6281     07B2  3001               	movlw	1	; select bank3/4
  6282     07B3  0087               	movwf	7
  6283     07B4  0836               	movf	ai_propagate@i_877,w
  6284     07B5  00A7               	movwf	??_ai_propagate+3
  6285     07B6  3002               	movlw	2
  6286     07B7                     u2365:
  6287     07B7  35A7               	lslf	??_ai_propagate+3,f
  6288     07B8  0B89               	decfsz	9,f
  6289     07B9  2FB7               	goto	u2365
  6290     07BA  3020               	movlw	(low (_W1| (0+256)))& (0+255)
  6291     07BB  0727               	addwf	??_ai_propagate+3,w
  6292     07BC  00A8               	movwf	??_ai_propagate+4
  6293     07BD  083A               	movf	ai_propagate@j_876,w
  6294     07BE  0728               	addwf	??_ai_propagate+4,w
  6295     07BF  00A9               	movwf	??_ai_propagate+5
  6296     07C0  0829               	movf	??_ai_propagate+5,w
  6297     07C1  0084               	movwf	4
  6298     07C2  3001               	movlw	1	; select bank2/3
  6299     07C3  0085               	movwf	5
  6300     07C4  0801               	movf	1,w
  6301     07C5  0280               	subwf	0,f
  6302     07C6                     l3213:
  6303                           
  6304                           ;ai.c: 180:         }
  6305     07C6  3001               	movlw	1
  6306     07C7  00A4               	movwf	??_ai_propagate
  6307     07C8  0824               	movf	??_ai_propagate,w
  6308     07C9  07B6               	addwf	ai_propagate@i_877,f
  6309     07CA  2F9D               	goto	l3207
  6310     07CB                     l3217:
  6311                           
  6312                           ;ai.c: 181:     }
  6313     07CB  3001               	movlw	1
  6314     07CC  00A4               	movwf	??_ai_propagate
  6315     07CD  0824               	movf	??_ai_propagate,w
  6316     07CE  07BA               	addwf	ai_propagate@j_876,f
  6317     07CF  2F8B               	goto	l3199
  6318     07D0                     l602:
  6319     07D0  0008               	return
  6320     07D1                     __end_of_ai_propagate:
  6321                           
  6322                           	psect	text17
  6323     0DE6                     __ptext17:	
  6324 ;; *************** function _de_sigmoid *****************
  6325 ;; Defined at:
  6326 ;;		line 15 in file "sigmoid.c"
  6327 ;; Parameters:    Size  Location     Type
  6328 ;;  z               2    0[COMMON] int 
  6329 ;; Auto vars:     Size  Location     Type
  6330 ;;		None
  6331 ;; Return value:  Size  Location     Type
  6332 ;;                  1    wreg      unsigned char 
  6333 ;; Registers used:
  6334 ;;		wreg, fsr0l, fsr0h, pclath
  6335 ;; Tracked objects:
  6336 ;;		On entry : 0/0
  6337 ;;		On exit  : 0/0
  6338 ;;		Unchanged: 0/0
  6339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6340 ;;      Params:         2       0       0       0       0       0
  6341 ;;      Locals:         0       0       0       0       0       0
  6342 ;;      Temps:          1       0       0       0       0       0
  6343 ;;      Totals:         3       0       0       0       0       0
  6344 ;;Total ram usage:        3 bytes
  6345 ;; Hardware stack levels used: 1
  6346 ;; This function calls:
  6347 ;;		Nothing
  6348 ;; This function is called by:
  6349 ;;		_ai_propagate
  6350 ;; This function uses a non-reentrant model
  6351 ;;
  6352                           
  6353     0DE6                     _de_sigmoid:	
  6354                           ;psect for function _de_sigmoid
  6355                           
  6356     0DE6                     l2591:	
  6357                           ;incstack = 0
  6358                           ; Regs used in _de_sigmoid: [wreg-fsr0h+pclath]
  6359                           
  6360                           
  6361                           ;sigmoid.c: 16:     if(z > 7){
  6362     0DE6  0871               	movf	de_sigmoid@z+1,w
  6363     0DE7  3A80               	xorlw	128
  6364     0DE8  00F2               	movwf	??_de_sigmoid
  6365     0DE9  3080               	movlw	128
  6366     0DEA  0272               	subwf	??_de_sigmoid,w
  6367     0DEB  1D03               	skipz
  6368     0DEC  2DEF               	goto	u1485
  6369     0DED  3008               	movlw	8
  6370     0DEE  0270               	subwf	de_sigmoid@z,w
  6371     0DEF                     u1485:
  6372     0DEF  1C03               	skipc
  6373     0DF0  2DF2               	goto	u1481
  6374     0DF1  2DF3               	goto	u1480
  6375     0DF2                     u1481:
  6376     0DF2  2DF5               	goto	l2597
  6377     0DF3                     u1480:
  6378     0DF3                     l2593:
  6379                           
  6380                           ;sigmoid.c: 17:         return 16;
  6381     0DF3  3010               	movlw	16
  6382     0DF4  2E0B               	goto	l642
  6383     0DF5                     l2597:
  6384                           
  6385                           ;sigmoid.c: 19:     if(z < -8){
  6386     0DF5  0871               	movf	de_sigmoid@z+1,w
  6387     0DF6  3A80               	xorlw	128
  6388     0DF7  00F2               	movwf	??_de_sigmoid
  6389     0DF8  307F               	movlw	127
  6390     0DF9  0272               	subwf	??_de_sigmoid,w
  6391     0DFA  1D03               	skipz
  6392     0DFB  2DFE               	goto	u1495
  6393     0DFC  30F8               	movlw	248
  6394     0DFD  0270               	subwf	de_sigmoid@z,w
  6395     0DFE                     u1495:
  6396     0DFE  1803               	skipnc
  6397     0DFF  2E01               	goto	u1491
  6398     0E00  2E02               	goto	u1490
  6399     0E01                     u1491:
  6400     0E01  2E03               	goto	l2603
  6401     0E02                     u1490:
  6402     0E02  2DF3               	goto	l2593
  6403     0E03                     l2603:
  6404                           
  6405                           ;sigmoid.c: 22:     return de_sigmoidValues[(uint8_t)z];
  6406     0E03  0870               	movf	de_sigmoid@z,w
  6407     0E04  3E00               	addlw	low (_de_sigmoidValues| (0+32768))
  6408     0E05  0084               	movwf	4
  6409     0E06  3088               	movlw	high (_de_sigmoidValues| (0+32768))
  6410     0E07  1803               	skipnc
  6411     0E08  3E01               	addlw	1
  6412     0E09  0085               	movwf	5
  6413     0E0A  0800               	movf	0,w	;code access
  6414     0E0B                     l642:
  6415     0E0B  0008               	return
  6416     0E0C                     __end_of_de_sigmoid:
  6417                           
  6418                           	psect	text18
  6419     0DA5                     __ptext18:	
  6420 ;; *************** function ___wmul *****************
  6421 ;; Defined at:
  6422 ;;		line 15 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  6423 ;; Parameters:    Size  Location     Type
  6424 ;;  multiplier      2    3[COMMON] unsigned int 
  6425 ;;  multiplicand    2    5[COMMON] unsigned int 
  6426 ;; Auto vars:     Size  Location     Type
  6427 ;;  product         2    7[COMMON] unsigned int 
  6428 ;; Return value:  Size  Location     Type
  6429 ;;                  2    3[COMMON] unsigned int 
  6430 ;; Registers used:
  6431 ;;		wreg, status,2, status,0
  6432 ;; Tracked objects:
  6433 ;;		On entry : 0/0
  6434 ;;		On exit  : 0/0
  6435 ;;		Unchanged: 0/0
  6436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6437 ;;      Params:         4       0       0       0       0       0
  6438 ;;      Locals:         2       0       0       0       0       0
  6439 ;;      Temps:          0       0       0       0       0       0
  6440 ;;      Totals:         6       0       0       0       0       0
  6441 ;;Total ram usage:        6 bytes
  6442 ;; Hardware stack levels used: 1
  6443 ;; This function calls:
  6444 ;;		Nothing
  6445 ;; This function is called by:
  6446 ;;		_ai_run
  6447 ;;		_ai_propagate
  6448 ;; This function uses a non-reentrant model
  6449 ;;
  6450                           
  6451     0DA5                     ___wmul:	
  6452                           ;psect for function ___wmul
  6453                           
  6454     0DA5                     l2607:	
  6455                           ;incstack = 0
  6456                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6457                           
  6458     0DA5  01F7               	clrf	___wmul@product
  6459     0DA6  01F8               	clrf	___wmul@product+1
  6460     0DA7                     l2609:
  6461     0DA7  1C73               	btfss	___wmul@multiplier,0
  6462     0DA8  2DAA               	goto	u1501
  6463     0DA9  2DAB               	goto	u1500
  6464     0DAA                     u1501:
  6465     0DAA  2DAF               	goto	l793
  6466     0DAB                     u1500:
  6467     0DAB                     l2611:
  6468     0DAB  0875               	movf	___wmul@multiplicand,w
  6469     0DAC  07F7               	addwf	___wmul@product,f
  6470     0DAD  0876               	movf	___wmul@multiplicand+1,w
  6471     0DAE  3DF8               	addwfc	___wmul@product+1,f
  6472     0DAF                     l793:
  6473     0DAF  3001               	movlw	1
  6474     0DB0                     u1515:
  6475     0DB0  35F5               	lslf	___wmul@multiplicand,f
  6476     0DB1  0DF6               	rlf	___wmul@multiplicand+1,f
  6477     0DB2  0B89               	decfsz	9,f
  6478     0DB3  2DB0               	goto	u1515
  6479     0DB4                     l2613:
  6480     0DB4  3001               	movlw	1
  6481     0DB5                     u1525:
  6482     0DB5  36F4               	lsrf	___wmul@multiplier+1,f
  6483     0DB6  0CF3               	rrf	___wmul@multiplier,f
  6484     0DB7  0B89               	decfsz	9,f
  6485     0DB8  2DB5               	goto	u1525
  6486     0DB9                     l2615:
  6487     0DB9  0873               	movf	___wmul@multiplier,w
  6488     0DBA  0474               	iorwf	___wmul@multiplier+1,w
  6489     0DBB  1D03               	btfss	3,2
  6490     0DBC  2DBE               	goto	u1531
  6491     0DBD  2DBF               	goto	u1530
  6492     0DBE                     u1531:
  6493     0DBE  2DA7               	goto	l2609
  6494     0DBF                     u1530:
  6495     0DBF                     l2617:
  6496     0DBF  0878               	movf	___wmul@product+1,w
  6497     0DC0  00F4               	movwf	?___wmul+1
  6498     0DC1  0877               	movf	___wmul@product,w
  6499     0DC2  00F3               	movwf	?___wmul
  6500     0DC3                     l795:
  6501     0DC3  0008               	return
  6502     0DC4                     __end_of___wmul:
  6503                           
  6504                           	psect	text19
  6505     0035                     __ptext19:	
  6506 ;; *************** function ___awdiv *****************
  6507 ;; Defined at:
  6508 ;;		line 5 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
  6509 ;; Parameters:    Size  Location     Type
  6510 ;;  divisor         2    9[COMMON] int 
  6511 ;;  dividend        2   11[COMMON] int 
  6512 ;; Auto vars:     Size  Location     Type
  6513 ;;  quotient        2    2[BANK0 ] int 
  6514 ;;  sign            1    1[BANK0 ] unsigned char 
  6515 ;;  counter         1    0[BANK0 ] unsigned char 
  6516 ;; Return value:  Size  Location     Type
  6517 ;;                  2    9[COMMON] int 
  6518 ;; Registers used:
  6519 ;;		wreg, status,2, status,0
  6520 ;; Tracked objects:
  6521 ;;		On entry : 0/0
  6522 ;;		On exit  : 0/0
  6523 ;;		Unchanged: 0/0
  6524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6525 ;;      Params:         4       0       0       0       0       0
  6526 ;;      Locals:         0       4       0       0       0       0
  6527 ;;      Temps:          1       0       0       0       0       0
  6528 ;;      Totals:         5       4       0       0       0       0
  6529 ;;Total ram usage:        9 bytes
  6530 ;; Hardware stack levels used: 1
  6531 ;; This function calls:
  6532 ;;		Nothing
  6533 ;; This function is called by:
  6534 ;;		_main
  6535 ;;		_snake_move
  6536 ;;		_snake_getSurroundings
  6537 ;;		_ai_run
  6538 ;;		_ai_propagate
  6539 ;; This function uses a non-reentrant model
  6540 ;;
  6541                           
  6542     0035                     ___awdiv:	
  6543                           ;psect for function ___awdiv
  6544                           
  6545     0035                     l2621:	
  6546                           ;incstack = 0
  6547                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  6548                           
  6549     0035  0020               	movlb	0	; select bank0
  6550     0036  01A1               	clrf	___awdiv@sign
  6551     0037                     l2623:
  6552     0037  1FFA               	btfss	___awdiv@divisor+1,7
  6553     0038  283A               	goto	u1541
  6554     0039  283B               	goto	u1540
  6555     003A                     u1541:
  6556     003A  2842               	goto	l2629
  6557     003B                     u1540:
  6558     003B                     l2625:
  6559     003B  09F9               	comf	___awdiv@divisor,f
  6560     003C  09FA               	comf	___awdiv@divisor+1,f
  6561     003D  0AF9               	incf	___awdiv@divisor,f
  6562     003E  1903               	skipnz
  6563     003F  0AFA               	incf	___awdiv@divisor+1,f
  6564     0040                     l2627:
  6565     0040  01A1               	clrf	___awdiv@sign
  6566     0041  0AA1               	incf	___awdiv@sign,f
  6567     0042                     l2629:
  6568     0042  1FFC               	btfss	___awdiv@dividend+1,7
  6569     0043  2845               	goto	u1551
  6570     0044  2846               	goto	u1550
  6571     0045                     u1551:
  6572     0045  284F               	goto	l2635
  6573     0046                     u1550:
  6574     0046                     l2631:
  6575     0046  09FB               	comf	___awdiv@dividend,f
  6576     0047  09FC               	comf	___awdiv@dividend+1,f
  6577     0048  0AFB               	incf	___awdiv@dividend,f
  6578     0049  1903               	skipnz
  6579     004A  0AFC               	incf	___awdiv@dividend+1,f
  6580     004B                     l2633:
  6581     004B  3001               	movlw	1
  6582     004C  00FD               	movwf	??___awdiv
  6583     004D  087D               	movf	??___awdiv,w
  6584     004E  06A1               	xorwf	___awdiv@sign,f
  6585     004F                     l2635:
  6586     004F  01A2               	clrf	___awdiv@quotient
  6587     0050  01A3               	clrf	___awdiv@quotient+1
  6588     0051                     l2637:
  6589     0051  0879               	movf	___awdiv@divisor,w
  6590     0052  047A               	iorwf	___awdiv@divisor+1,w
  6591     0053  1903               	btfsc	3,2
  6592     0054  2856               	goto	u1561
  6593     0055  2857               	goto	u1560
  6594     0056                     u1561:
  6595     0056  2886               	goto	l2657
  6596     0057                     u1560:
  6597     0057                     l2639:
  6598     0057  01A0               	clrf	___awdiv@counter
  6599     0058  0AA0               	incf	___awdiv@counter,f
  6600     0059  2863               	goto	l2645
  6601     005A                     l2641:
  6602     005A  3001               	movlw	1
  6603     005B                     u1575:
  6604     005B  35F9               	lslf	___awdiv@divisor,f
  6605     005C  0DFA               	rlf	___awdiv@divisor+1,f
  6606     005D  0B89               	decfsz	9,f
  6607     005E  285B               	goto	u1575
  6608     005F                     l2643:
  6609     005F  3001               	movlw	1
  6610     0060  00FD               	movwf	??___awdiv
  6611     0061  087D               	movf	??___awdiv,w
  6612     0062  07A0               	addwf	___awdiv@counter,f
  6613     0063                     l2645:
  6614     0063  1FFA               	btfss	___awdiv@divisor+1,7
  6615     0064  2866               	goto	u1581
  6616     0065  2867               	goto	u1580
  6617     0066                     u1581:
  6618     0066  285A               	goto	l2641
  6619     0067                     u1580:
  6620     0067                     l2647:
  6621     0067  3001               	movlw	1
  6622     0068                     u1595:
  6623     0068  35A2               	lslf	___awdiv@quotient,f
  6624     0069  0DA3               	rlf	___awdiv@quotient+1,f
  6625     006A  0B89               	decfsz	9,f
  6626     006B  2868               	goto	u1595
  6627     006C  087A               	movf	___awdiv@divisor+1,w
  6628     006D  027C               	subwf	___awdiv@dividend+1,w
  6629     006E  1D03               	skipz
  6630     006F  2872               	goto	u1605
  6631     0070  0879               	movf	___awdiv@divisor,w
  6632     0071  027B               	subwf	___awdiv@dividend,w
  6633     0072                     u1605:
  6634     0072  1C03               	skipc
  6635     0073  2875               	goto	u1601
  6636     0074  2876               	goto	u1600
  6637     0075                     u1601:
  6638     0075  287B               	goto	l2653
  6639     0076                     u1600:
  6640     0076                     l2649:
  6641     0076  0879               	movf	___awdiv@divisor,w
  6642     0077  02FB               	subwf	___awdiv@dividend,f
  6643     0078  087A               	movf	___awdiv@divisor+1,w
  6644     0079  3BFC               	subwfb	___awdiv@dividend+1,f
  6645     007A                     l2651:
  6646     007A  1422               	bsf	___awdiv@quotient,0
  6647     007B                     l2653:
  6648     007B  3001               	movlw	1
  6649     007C                     u1615:
  6650     007C  36FA               	lsrf	___awdiv@divisor+1,f
  6651     007D  0CF9               	rrf	___awdiv@divisor,f
  6652     007E  0B89               	decfsz	9,f
  6653     007F  287C               	goto	u1615
  6654     0080                     l2655:
  6655     0080  3001               	movlw	1
  6656     0081  02A0               	subwf	___awdiv@counter,f
  6657     0082  1D03               	btfss	3,2
  6658     0083  2885               	goto	u1621
  6659     0084  2886               	goto	u1620
  6660     0085                     u1621:
  6661     0085  2867               	goto	l2647
  6662     0086                     u1620:
  6663     0086                     l2657:
  6664     0086  0821               	movf	___awdiv@sign,w
  6665     0087  1903               	btfsc	3,2
  6666     0088  288A               	goto	u1631
  6667     0089  288B               	goto	u1630
  6668     008A                     u1631:
  6669     008A  2890               	goto	l2661
  6670     008B                     u1630:
  6671     008B                     l2659:
  6672     008B  09A2               	comf	___awdiv@quotient,f
  6673     008C  09A3               	comf	___awdiv@quotient+1,f
  6674     008D  0AA2               	incf	___awdiv@quotient,f
  6675     008E  1903               	skipnz
  6676     008F  0AA3               	incf	___awdiv@quotient+1,f
  6677     0090                     l2661:
  6678     0090  0823               	movf	___awdiv@quotient+1,w
  6679     0091  00FA               	movwf	?___awdiv+1
  6680     0092  0822               	movf	___awdiv@quotient,w
  6681     0093  00F9               	movwf	?___awdiv
  6682     0094                     l946:
  6683     0094  0008               	return
  6684     0095                     __end_of___awdiv:
  6685                           
  6686                           	psect	text20
  6687     0D12                     __ptext20:	
  6688 ;; *************** function _EUSART_Write *****************
  6689 ;; Defined at:
  6690 ;;		line 132 in file "mcc_generated_files/eusart.c"
  6691 ;; Parameters:    Size  Location     Type
  6692 ;;  txData          1    wreg     unsigned char 
  6693 ;; Auto vars:     Size  Location     Type
  6694 ;;  txData          1    0[COMMON] unsigned char 
  6695 ;; Return value:  Size  Location     Type
  6696 ;;                  1    wreg      void 
  6697 ;; Registers used:
  6698 ;;		wreg
  6699 ;; Tracked objects:
  6700 ;;		On entry : 0/0
  6701 ;;		On exit  : 0/0
  6702 ;;		Unchanged: 0/0
  6703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6704 ;;      Params:         0       0       0       0       0       0
  6705 ;;      Locals:         1       0       0       0       0       0
  6706 ;;      Temps:          0       0       0       0       0       0
  6707 ;;      Totals:         1       0       0       0       0       0
  6708 ;;Total ram usage:        1 bytes
  6709 ;; Hardware stack levels used: 1
  6710 ;; This function calls:
  6711 ;;		Nothing
  6712 ;; This function is called by:
  6713 ;;		_ai_propagate
  6714 ;; This function uses a non-reentrant model
  6715 ;;
  6716                           
  6717     0D12                     _EUSART_Write:	
  6718                           ;psect for function _EUSART_Write
  6719                           
  6720                           
  6721                           ;incstack = 0
  6722                           ; Regs used in _EUSART_Write: [wreg]
  6723                           ;EUSART_Write@txData stored from wreg
  6724     0D12  00F0               	movwf	EUSART_Write@txData
  6725     0D13                     l2515:
  6726     0D13                     l117:	
  6727                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
  6728                           
  6729                           
  6730                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TXIF)
  6731     0D13  0020               	movlb	0	; select bank0
  6732     0D14  1E11               	btfss	17,4	;volatile
  6733     0D15  2D17               	goto	u1421
  6734     0D16  2D18               	goto	u1420
  6735     0D17                     u1421:
  6736     0D17  2D13               	goto	l117
  6737     0D18                     u1420:
  6738     0D18                     l2517:
  6739                           
  6740                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
  6741     0D18  0870               	movf	EUSART_Write@txData,w
  6742     0D19  0023               	movlb	3	; select bank3
  6743     0D1A  009A               	movwf	26	;volatile
  6744     0D1B                     l120:
  6745     0D1B  0008               	return
  6746     0D1C                     __end_of_EUSART_Write:
  6747                           
  6748                           	psect	text21
  6749     0F5E                     __ptext21:	
  6750 ;; *************** function _ai_initiate *****************
  6751 ;; Defined at:
  6752 ;;		line 69 in file "ai.c"
  6753 ;; Parameters:    Size  Location     Type
  6754 ;;		None
  6755 ;; Auto vars:     Size  Location     Type
  6756 ;;  i               1   15[BANK0 ] unsigned char 
  6757 ;;  i               1   14[BANK0 ] unsigned char 
  6758 ;;  j               1   17[BANK0 ] unsigned char 
  6759 ;;  j               1   16[BANK0 ] unsigned char 
  6760 ;; Return value:  Size  Location     Type
  6761 ;;                  1    wreg      void 
  6762 ;; Registers used:
  6763 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6764 ;; Tracked objects:
  6765 ;;		On entry : 0/0
  6766 ;;		On exit  : 0/0
  6767 ;;		Unchanged: 0/0
  6768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6769 ;;      Params:         0       0       0       0       0       0
  6770 ;;      Locals:         0       4       0       0       0       0
  6771 ;;      Temps:          0       3       0       0       0       0
  6772 ;;      Totals:         0       7       0       0       0       0
  6773 ;;Total ram usage:        7 bytes
  6774 ;; Hardware stack levels used: 1
  6775 ;; Hardware stack levels required when called: 2
  6776 ;; This function calls:
  6777 ;;		___awmod
  6778 ;;		_rand
  6779 ;; This function is called by:
  6780 ;;		_main
  6781 ;; This function uses a non-reentrant model
  6782 ;;
  6783                           
  6784     0F5E                     _ai_initiate:	
  6785                           ;psect for function _ai_initiate
  6786                           
  6787     0F5E                     l2707:	
  6788                           ;incstack = 0
  6789                           ; Regs used in _ai_initiate: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6790                           
  6791                           
  6792                           ;ai.c: 73:     for(uint8_t j = 0; j < 4; j++){
  6793     0F5E  0020               	movlb	0	; select bank0
  6794     0F5F  01B0               	clrf	ai_initiate@j
  6795     0F60                     l2713:
  6796                           
  6797                           ;ai.c: 74:         B1[j] = (rand()%0x0f)-8;
  6798     0F60  0830               	movf	ai_initiate@j,w
  6799     0F61  3E51               	addlw	(low (_B1| 0))& (0+255)
  6800     0F62  0086               	movwf	6
  6801     0F63  0187               	clrf	7
  6802     0F64  300F               	movlw	15
  6803     0F65  00A4               	movwf	___awmod@divisor
  6804     0F66  3000               	movlw	0
  6805     0F67  00A5               	movwf	___awmod@divisor+1
  6806     0F68  318E  2697  318F   	fcall	_rand
  6807     0F6B  087D               	movf	?_rand+1,w
  6808     0F6C  0020               	movlb	0	; select bank0
  6809     0F6D  00A7               	movwf	___awmod@dividend+1
  6810     0F6E  087C               	movf	?_rand,w
  6811     0F6F  00A6               	movwf	___awmod@dividend
  6812     0F70  318F  270A  318F   	fcall	___awmod
  6813     0F73  0020               	movlb	0	; select bank0
  6814     0F74  0824               	movf	?___awmod,w
  6815     0F75  3EF8               	addlw	-8
  6816     0F76  0081               	movwf	1
  6817     0F77                     l2715:
  6818                           
  6819                           ;ai.c: 75:         for(uint8_t i = 0; i < 8; i++){
  6820     0F77  01AE               	clrf	ai_initiate@i
  6821     0F78                     l2721:
  6822                           
  6823                           ;ai.c: 76:             W1[i][j] = (rand()%0x0f)-8;
  6824     0F78  082E               	movf	ai_initiate@i,w
  6825     0F79  00AB               	movwf	??_ai_initiate
  6826     0F7A  3002               	movlw	2
  6827     0F7B                     u1735:
  6828     0F7B  35AB               	lslf	??_ai_initiate,f
  6829     0F7C  0B89               	decfsz	9,f
  6830     0F7D  2F7B               	goto	u1735
  6831     0F7E  3020               	movlw	(low (_W1| (0+256)))& (0+255)
  6832     0F7F  072B               	addwf	??_ai_initiate,w
  6833     0F80  00AC               	movwf	??_ai_initiate+1
  6834     0F81  0830               	movf	ai_initiate@j,w
  6835     0F82  072C               	addwf	??_ai_initiate+1,w
  6836     0F83  00AD               	movwf	??_ai_initiate+2
  6837     0F84  082D               	movf	??_ai_initiate+2,w
  6838     0F85  0086               	movwf	6
  6839     0F86  3001               	movlw	1	; select bank2/3
  6840     0F87  0087               	movwf	7
  6841     0F88  300F               	movlw	15
  6842     0F89  00A4               	movwf	___awmod@divisor
  6843     0F8A  3000               	movlw	0
  6844     0F8B  00A5               	movwf	___awmod@divisor+1
  6845     0F8C  318E  2697  318F   	fcall	_rand
  6846     0F8F  087D               	movf	?_rand+1,w
  6847     0F90  0020               	movlb	0	; select bank0
  6848     0F91  00A7               	movwf	___awmod@dividend+1
  6849     0F92  087C               	movf	?_rand,w
  6850     0F93  00A6               	movwf	___awmod@dividend
  6851     0F94  318F  270A  318F   	fcall	___awmod
  6852     0F97  0020               	movlb	0	; select bank0
  6853     0F98  0824               	movf	?___awmod,w
  6854     0F99  3EF8               	addlw	-8
  6855     0F9A  0081               	movwf	1
  6856     0F9B                     l2723:
  6857                           
  6858                           ;ai.c: 77:         }
  6859     0F9B  3001               	movlw	1
  6860     0F9C  00AB               	movwf	??_ai_initiate
  6861     0F9D  082B               	movf	??_ai_initiate,w
  6862     0F9E  07AE               	addwf	ai_initiate@i,f
  6863     0F9F                     l2725:
  6864     0F9F  3008               	movlw	8
  6865     0FA0  022E               	subwf	ai_initiate@i,w
  6866     0FA1  1C03               	skipc
  6867     0FA2  2FA4               	goto	u1741
  6868     0FA3  2FA5               	goto	u1740
  6869     0FA4                     u1741:
  6870     0FA4  2F78               	goto	l2721
  6871     0FA5                     u1740:
  6872     0FA5                     l2727:
  6873                           
  6874                           ;ai.c: 78:     }
  6875     0FA5  3001               	movlw	1
  6876     0FA6  00AB               	movwf	??_ai_initiate
  6877     0FA7  082B               	movf	??_ai_initiate,w
  6878     0FA8  07B0               	addwf	ai_initiate@j,f
  6879     0FA9                     l2729:
  6880     0FA9  3004               	movlw	4
  6881     0FAA  0230               	subwf	ai_initiate@j,w
  6882     0FAB  1C03               	skipc
  6883     0FAC  2FAE               	goto	u1751
  6884     0FAD  2FAF               	goto	u1750
  6885     0FAE                     u1751:
  6886     0FAE  2F60               	goto	l2713
  6887     0FAF                     u1750:
  6888     0FAF                     l2731:
  6889                           
  6890                           ;ai.c: 79:     for(uint8_t j = 0; j < 4; j++){
  6891     0FAF  01B1               	clrf	ai_initiate@j_852
  6892     0FB0                     l2737:
  6893                           
  6894                           ;ai.c: 80:         B2[j] = (rand()%0x0f)-8;
  6895     0FB0  0831               	movf	ai_initiate@j_852,w
  6896     0FB1  3ED0               	addlw	(low (_B2| 0))& (0+255)
  6897     0FB2  0086               	movwf	6
  6898     0FB3  0187               	clrf	7
  6899     0FB4  300F               	movlw	15
  6900     0FB5  00A4               	movwf	___awmod@divisor
  6901     0FB6  3000               	movlw	0
  6902     0FB7  00A5               	movwf	___awmod@divisor+1
  6903     0FB8  318E  2697  318F   	fcall	_rand
  6904     0FBB  087D               	movf	?_rand+1,w
  6905     0FBC  0020               	movlb	0	; select bank0
  6906     0FBD  00A7               	movwf	___awmod@dividend+1
  6907     0FBE  087C               	movf	?_rand,w
  6908     0FBF  00A6               	movwf	___awmod@dividend
  6909     0FC0  318F  270A  318F   	fcall	___awmod
  6910     0FC3  0020               	movlb	0	; select bank0
  6911     0FC4  0824               	movf	?___awmod,w
  6912     0FC5  3EF8               	addlw	-8
  6913     0FC6  0081               	movwf	1
  6914     0FC7                     l2739:
  6915                           
  6916                           ;ai.c: 81:         for(uint8_t i = 0; i < 4; i++){
  6917     0FC7  01AF               	clrf	ai_initiate@i_853
  6918     0FC8                     l2745:
  6919                           
  6920                           ;ai.c: 82:             W2[i][j] = (rand()%0x0f)-8;
  6921     0FC8  082F               	movf	ai_initiate@i_853,w
  6922     0FC9  00AB               	movwf	??_ai_initiate
  6923     0FCA  3002               	movlw	2
  6924     0FCB                     u1765:
  6925     0FCB  35AB               	lslf	??_ai_initiate,f
  6926     0FCC  0B89               	decfsz	9,f
  6927     0FCD  2FCB               	goto	u1765
  6928     0FCE  3050               	movlw	(low (_W2| (0+256)))& (0+255)
  6929     0FCF  072B               	addwf	??_ai_initiate,w
  6930     0FD0  00AC               	movwf	??_ai_initiate+1
  6931     0FD1  0831               	movf	ai_initiate@j_852,w
  6932     0FD2  072C               	addwf	??_ai_initiate+1,w
  6933     0FD3  00AD               	movwf	??_ai_initiate+2
  6934     0FD4  082D               	movf	??_ai_initiate+2,w
  6935     0FD5  0086               	movwf	6
  6936     0FD6  3001               	movlw	1	; select bank2/3
  6937     0FD7  0087               	movwf	7
  6938     0FD8  300F               	movlw	15
  6939     0FD9  00A4               	movwf	___awmod@divisor
  6940     0FDA  3000               	movlw	0
  6941     0FDB  00A5               	movwf	___awmod@divisor+1
  6942     0FDC  318E  2697  318F   	fcall	_rand
  6943     0FDF  087D               	movf	?_rand+1,w
  6944     0FE0  0020               	movlb	0	; select bank0
  6945     0FE1  00A7               	movwf	___awmod@dividend+1
  6946     0FE2  087C               	movf	?_rand,w
  6947     0FE3  00A6               	movwf	___awmod@dividend
  6948     0FE4  318F  270A  318F   	fcall	___awmod
  6949     0FE7  0020               	movlb	0	; select bank0
  6950     0FE8  0824               	movf	?___awmod,w
  6951     0FE9  3EF8               	addlw	-8
  6952     0FEA  0081               	movwf	1
  6953     0FEB                     l2747:
  6954                           
  6955                           ;ai.c: 83:         }
  6956     0FEB  3001               	movlw	1
  6957     0FEC  00AB               	movwf	??_ai_initiate
  6958     0FED  082B               	movf	??_ai_initiate,w
  6959     0FEE  07AF               	addwf	ai_initiate@i_853,f
  6960     0FEF                     l2749:
  6961     0FEF  3004               	movlw	4
  6962     0FF0  022F               	subwf	ai_initiate@i_853,w
  6963     0FF1  1C03               	skipc
  6964     0FF2  2FF4               	goto	u1771
  6965     0FF3  2FF5               	goto	u1770
  6966     0FF4                     u1771:
  6967     0FF4  2FC8               	goto	l2745
  6968     0FF5                     u1770:
  6969     0FF5                     l2751:
  6970                           
  6971                           ;ai.c: 84:     }
  6972     0FF5  3001               	movlw	1
  6973     0FF6  00AB               	movwf	??_ai_initiate
  6974     0FF7  082B               	movf	??_ai_initiate,w
  6975     0FF8  07B1               	addwf	ai_initiate@j_852,f
  6976     0FF9                     l2753:
  6977     0FF9  3004               	movlw	4
  6978     0FFA  0231               	subwf	ai_initiate@j_852,w
  6979     0FFB  1C03               	skipc
  6980     0FFC  2FFE               	goto	u1781
  6981     0FFD  2FFF               	goto	u1780
  6982     0FFE                     u1781:
  6983     0FFE  2FB0               	goto	l2737
  6984     0FFF                     u1780:
  6985     0FFF                     l578:
  6986     0FFF  0008               	return
  6987     1000                     __end_of_ai_initiate:
  6988                           
  6989                           	psect	text22
  6990     0E97                     __ptext22:	
  6991 ;; *************** function _rand *****************
  6992 ;; Defined at:
  6993 ;;		line 11 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\common\rand.c"
  6994 ;; Parameters:    Size  Location     Type
  6995 ;;		None
  6996 ;; Auto vars:     Size  Location     Type
  6997 ;;		None
  6998 ;; Return value:  Size  Location     Type
  6999 ;;                  2   12[COMMON] int 
  7000 ;; Registers used:
  7001 ;;		wreg, status,2, status,0, pclath, cstack
  7002 ;; Tracked objects:
  7003 ;;		On entry : 0/0
  7004 ;;		On exit  : 0/0
  7005 ;;		Unchanged: 0/0
  7006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7007 ;;      Params:         2       0       0       0       0       0
  7008 ;;      Locals:         0       0       0       0       0       0
  7009 ;;      Temps:          0       4       0       0       0       0
  7010 ;;      Totals:         2       4       0       0       0       0
  7011 ;;Total ram usage:        6 bytes
  7012 ;; Hardware stack levels used: 1
  7013 ;; Hardware stack levels required when called: 1
  7014 ;; This function calls:
  7015 ;;		___lmul
  7016 ;; This function is called by:
  7017 ;;		_snake_initiate
  7018 ;;		_snake_move
  7019 ;;		_ai_initiate
  7020 ;; This function uses a non-reentrant model
  7021 ;;
  7022                           
  7023     0E97                     _rand:	
  7024                           ;psect for function _rand
  7025                           
  7026     0E97                     l2497:	
  7027                           ;incstack = 0
  7028                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
  7029                           
  7030     0E97  0020               	movlb	0	; select bank0
  7031     0E98  086E               	movf	_seed+3,w
  7032     0E99  00F3               	movwf	___lmul@multiplier+3
  7033     0E9A  086D               	movf	_seed+2,w
  7034     0E9B  00F2               	movwf	___lmul@multiplier+2
  7035     0E9C  086C               	movf	_seed+1,w
  7036     0E9D  00F1               	movwf	___lmul@multiplier+1
  7037     0E9E  086B               	movf	_seed,w
  7038     0E9F  00F0               	movwf	___lmul@multiplier
  7039     0EA0  304C               	movlw	76
  7040     0EA1  00F7               	movwf	___lmul@multiplicand+3
  7041     0EA2  3095               	movlw	149
  7042     0EA3  00F6               	movwf	___lmul@multiplicand+2
  7043     0EA4  307F               	movlw	127
  7044     0EA5  00F5               	movwf	___lmul@multiplicand+1
  7045     0EA6  302D               	movlw	45
  7046     0EA7  00F4               	movwf	___lmul@multiplicand
  7047     0EA8  318E  2664  318E   	fcall	___lmul
  7048     0EAB  3001               	movlw	1
  7049     0EAC  0770               	addwf	?___lmul,w
  7050     0EAD  0020               	movlb	0	; select bank0
  7051     0EAE  00EB               	movwf	_seed
  7052     0EAF  3000               	movlw	0
  7053     0EB0  3D71               	addwfc	?___lmul+1,w
  7054     0EB1  00EC               	movwf	_seed+1
  7055     0EB2  3000               	movlw	0
  7056     0EB3  3D72               	addwfc	?___lmul+2,w
  7057     0EB4  00ED               	movwf	_seed+2
  7058     0EB5  3000               	movlw	0
  7059     0EB6  3D73               	addwfc	?___lmul+3,w
  7060     0EB7  00EE               	movwf	_seed+3
  7061     0EB8                     l2499:
  7062     0EB8  086B               	movf	_seed,w
  7063     0EB9  00A0               	movwf	??_rand
  7064     0EBA  086C               	movf	_seed+1,w
  7065     0EBB  00A1               	movwf	??_rand+1
  7066     0EBC  086D               	movf	_seed+2,w
  7067     0EBD  00A2               	movwf	??_rand+2
  7068     0EBE  086E               	movf	_seed+3,w
  7069     0EBF  00A3               	movwf	??_rand+3
  7070     0EC0  3011               	movlw	17
  7071     0EC1                     u1415:
  7072     0EC1  36A3               	lsrf	??_rand+3,f
  7073     0EC2  0CA2               	rrf	??_rand+2,f
  7074     0EC3  0CA1               	rrf	??_rand+1,f
  7075     0EC4  0CA0               	rrf	??_rand,f
  7076     0EC5                     u1410:
  7077     0EC5  0B89               	decfsz	9,f
  7078     0EC6  2EC1               	goto	u1415
  7079     0EC7  0821               	movf	??_rand+1,w
  7080     0EC8  00FD               	movwf	?_rand+1
  7081     0EC9  0820               	movf	??_rand,w
  7082     0ECA  00FC               	movwf	?_rand
  7083     0ECB                     l1257:
  7084     0ECB  0008               	return
  7085     0ECC                     __end_of_rand:
  7086                           
  7087                           	psect	text23
  7088     0E64                     __ptext23:	
  7089 ;; *************** function ___lmul *****************
  7090 ;; Defined at:
  7091 ;;		line 15 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\common\Umul32.c"
  7092 ;; Parameters:    Size  Location     Type
  7093 ;;  multiplier      4    0[COMMON] unsigned long 
  7094 ;;  multiplicand    4    4[COMMON] unsigned long 
  7095 ;; Auto vars:     Size  Location     Type
  7096 ;;  product         4    8[COMMON] unsigned long 
  7097 ;; Return value:  Size  Location     Type
  7098 ;;                  4    0[COMMON] unsigned long 
  7099 ;; Registers used:
  7100 ;;		wreg, status,2, status,0
  7101 ;; Tracked objects:
  7102 ;;		On entry : 0/0
  7103 ;;		On exit  : 0/0
  7104 ;;		Unchanged: 0/0
  7105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7106 ;;      Params:         8       0       0       0       0       0
  7107 ;;      Locals:         4       0       0       0       0       0
  7108 ;;      Temps:          0       0       0       0       0       0
  7109 ;;      Totals:        12       0       0       0       0       0
  7110 ;;Total ram usage:       12 bytes
  7111 ;; Hardware stack levels used: 1
  7112 ;; This function calls:
  7113 ;;		Nothing
  7114 ;; This function is called by:
  7115 ;;		_rand
  7116 ;; This function uses a non-reentrant model
  7117 ;;
  7118                           
  7119     0E64                     ___lmul:	
  7120                           ;psect for function ___lmul
  7121                           
  7122     0E64                     l2473:	
  7123                           ;incstack = 0
  7124                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  7125                           
  7126     0E64  3000               	movlw	0
  7127     0E65  00FB               	movwf	___lmul@product+3
  7128     0E66  3000               	movlw	0
  7129     0E67  00FA               	movwf	___lmul@product+2
  7130     0E68  3000               	movlw	0
  7131     0E69  00F9               	movwf	___lmul@product+1
  7132     0E6A  3000               	movlw	0
  7133     0E6B  00F8               	movwf	___lmul@product
  7134     0E6C                     l2475:
  7135     0E6C  1C70               	btfss	___lmul@multiplier,0
  7136     0E6D  2E6F               	goto	u1371
  7137     0E6E  2E70               	goto	u1370
  7138     0E6F                     u1371:
  7139     0E6F  2E78               	goto	l2479
  7140     0E70                     u1370:
  7141     0E70                     l2477:
  7142     0E70  0874               	movf	___lmul@multiplicand,w
  7143     0E71  07F8               	addwf	___lmul@product,f
  7144     0E72  0875               	movf	___lmul@multiplicand+1,w
  7145     0E73  3DF9               	addwfc	___lmul@product+1,f
  7146     0E74  0876               	movf	___lmul@multiplicand+2,w
  7147     0E75  3DFA               	addwfc	___lmul@product+2,f
  7148     0E76  0877               	movf	___lmul@multiplicand+3,w
  7149     0E77  3DFB               	addwfc	___lmul@product+3,f
  7150     0E78                     l2479:
  7151     0E78  3001               	movlw	1
  7152     0E79                     u1385:
  7153     0E79  35F4               	lslf	___lmul@multiplicand,f
  7154     0E7A  0DF5               	rlf	___lmul@multiplicand+1,f
  7155     0E7B  0DF6               	rlf	___lmul@multiplicand+2,f
  7156     0E7C  0DF7               	rlf	___lmul@multiplicand+3,f
  7157     0E7D  0B89               	decfsz	9,f
  7158     0E7E  2E79               	goto	u1385
  7159     0E7F                     l2481:
  7160     0E7F  3001               	movlw	1
  7161     0E80                     u1395:
  7162     0E80  36F3               	lsrf	___lmul@multiplier+3,f
  7163     0E81  0CF2               	rrf	___lmul@multiplier+2,f
  7164     0E82  0CF1               	rrf	___lmul@multiplier+1,f
  7165     0E83  0CF0               	rrf	___lmul@multiplier,f
  7166     0E84  0B89               	decfsz	9,f
  7167     0E85  2E80               	goto	u1395
  7168     0E86  0873               	movf	___lmul@multiplier+3,w
  7169     0E87  0472               	iorwf	___lmul@multiplier+2,w
  7170     0E88  0471               	iorwf	___lmul@multiplier+1,w
  7171     0E89  0470               	iorwf	___lmul@multiplier,w
  7172     0E8A  1D03               	skipz
  7173     0E8B  2E8D               	goto	u1401
  7174     0E8C  2E8E               	goto	u1400
  7175     0E8D                     u1401:
  7176     0E8D  2E6C               	goto	l2475
  7177     0E8E                     u1400:
  7178     0E8E                     l2483:
  7179     0E8E  087B               	movf	___lmul@product+3,w
  7180     0E8F  00F3               	movwf	?___lmul+3
  7181     0E90  087A               	movf	___lmul@product+2,w
  7182     0E91  00F2               	movwf	?___lmul+2
  7183     0E92  0879               	movf	___lmul@product+1,w
  7184     0E93  00F1               	movwf	?___lmul+1
  7185     0E94  0878               	movf	___lmul@product,w
  7186     0E95  00F0               	movwf	?___lmul
  7187     0E96                     l807:
  7188     0E96  0008               	return
  7189     0E97                     __end_of___lmul:
  7190                           
  7191                           	psect	text24
  7192     0F0A                     __ptext24:	
  7193 ;; *************** function ___awmod *****************
  7194 ;; Defined at:
  7195 ;;		line 5 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\common\awmod.c"
  7196 ;; Parameters:    Size  Location     Type
  7197 ;;  divisor         2    4[BANK0 ] int 
  7198 ;;  dividend        2    6[BANK0 ] int 
  7199 ;; Auto vars:     Size  Location     Type
  7200 ;;  sign            1   10[BANK0 ] unsigned char 
  7201 ;;  counter         1    9[BANK0 ] unsigned char 
  7202 ;; Return value:  Size  Location     Type
  7203 ;;                  2    4[BANK0 ] int 
  7204 ;; Registers used:
  7205 ;;		wreg, status,2, status,0
  7206 ;; Tracked objects:
  7207 ;;		On entry : 0/0
  7208 ;;		On exit  : 0/0
  7209 ;;		Unchanged: 0/0
  7210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7211 ;;      Params:         0       4       0       0       0       0
  7212 ;;      Locals:         0       2       0       0       0       0
  7213 ;;      Temps:          0       1       0       0       0       0
  7214 ;;      Totals:         0       7       0       0       0       0
  7215 ;;Total ram usage:        7 bytes
  7216 ;; Hardware stack levels used: 1
  7217 ;; This function calls:
  7218 ;;		Nothing
  7219 ;; This function is called by:
  7220 ;;		_ai_initiate
  7221 ;; This function uses a non-reentrant model
  7222 ;;
  7223                           
  7224     0F0A                     ___awmod:	
  7225                           ;psect for function ___awmod
  7226                           
  7227     0F0A                     l2665:	
  7228                           ;incstack = 0
  7229                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  7230                           
  7231     0F0A  0020               	movlb	0	; select bank0
  7232     0F0B  01AA               	clrf	___awmod@sign
  7233     0F0C                     l2667:
  7234     0F0C  1FA7               	btfss	___awmod@dividend+1,7
  7235     0F0D  2F0F               	goto	u1641
  7236     0F0E  2F10               	goto	u1640
  7237     0F0F                     u1641:
  7238     0F0F  2F17               	goto	l2673
  7239     0F10                     u1640:
  7240     0F10                     l2669:
  7241     0F10  09A6               	comf	___awmod@dividend,f
  7242     0F11  09A7               	comf	___awmod@dividend+1,f
  7243     0F12  0AA6               	incf	___awmod@dividend,f
  7244     0F13  1903               	skipnz
  7245     0F14  0AA7               	incf	___awmod@dividend+1,f
  7246     0F15                     l2671:
  7247     0F15  01AA               	clrf	___awmod@sign
  7248     0F16  0AAA               	incf	___awmod@sign,f
  7249     0F17                     l2673:
  7250     0F17  1FA5               	btfss	___awmod@divisor+1,7
  7251     0F18  2F1A               	goto	u1651
  7252     0F19  2F1B               	goto	u1650
  7253     0F1A                     u1651:
  7254     0F1A  2F20               	goto	l2677
  7255     0F1B                     u1650:
  7256     0F1B                     l2675:
  7257     0F1B  09A4               	comf	___awmod@divisor,f
  7258     0F1C  09A5               	comf	___awmod@divisor+1,f
  7259     0F1D  0AA4               	incf	___awmod@divisor,f
  7260     0F1E  1903               	skipnz
  7261     0F1F  0AA5               	incf	___awmod@divisor+1,f
  7262     0F20                     l2677:
  7263     0F20  0824               	movf	___awmod@divisor,w
  7264     0F21  0425               	iorwf	___awmod@divisor+1,w
  7265     0F22  1903               	btfsc	3,2
  7266     0F23  2F25               	goto	u1661
  7267     0F24  2F26               	goto	u1660
  7268     0F25                     u1661:
  7269     0F25  2F4F               	goto	l2695
  7270     0F26                     u1660:
  7271     0F26                     l2679:
  7272     0F26  01A9               	clrf	___awmod@counter
  7273     0F27  0AA9               	incf	___awmod@counter,f
  7274     0F28  2F32               	goto	l2685
  7275     0F29                     l2681:
  7276     0F29  3001               	movlw	1
  7277     0F2A                     u1675:
  7278     0F2A  35A4               	lslf	___awmod@divisor,f
  7279     0F2B  0DA5               	rlf	___awmod@divisor+1,f
  7280     0F2C  0B89               	decfsz	9,f
  7281     0F2D  2F2A               	goto	u1675
  7282     0F2E                     l2683:
  7283     0F2E  3001               	movlw	1
  7284     0F2F  00A8               	movwf	??___awmod
  7285     0F30  0828               	movf	??___awmod,w
  7286     0F31  07A9               	addwf	___awmod@counter,f
  7287     0F32                     l2685:
  7288     0F32  1FA5               	btfss	___awmod@divisor+1,7
  7289     0F33  2F35               	goto	u1681
  7290     0F34  2F36               	goto	u1680
  7291     0F35                     u1681:
  7292     0F35  2F29               	goto	l2681
  7293     0F36                     u1680:
  7294     0F36                     l2687:
  7295     0F36  0825               	movf	___awmod@divisor+1,w
  7296     0F37  0227               	subwf	___awmod@dividend+1,w
  7297     0F38  1D03               	skipz
  7298     0F39  2F3C               	goto	u1695
  7299     0F3A  0824               	movf	___awmod@divisor,w
  7300     0F3B  0226               	subwf	___awmod@dividend,w
  7301     0F3C                     u1695:
  7302     0F3C  1C03               	skipc
  7303     0F3D  2F3F               	goto	u1691
  7304     0F3E  2F40               	goto	u1690
  7305     0F3F                     u1691:
  7306     0F3F  2F44               	goto	l2691
  7307     0F40                     u1690:
  7308     0F40                     l2689:
  7309     0F40  0824               	movf	___awmod@divisor,w
  7310     0F41  02A6               	subwf	___awmod@dividend,f
  7311     0F42  0825               	movf	___awmod@divisor+1,w
  7312     0F43  3BA7               	subwfb	___awmod@dividend+1,f
  7313     0F44                     l2691:
  7314     0F44  3001               	movlw	1
  7315     0F45                     u1705:
  7316     0F45  36A5               	lsrf	___awmod@divisor+1,f
  7317     0F46  0CA4               	rrf	___awmod@divisor,f
  7318     0F47  0B89               	decfsz	9,f
  7319     0F48  2F45               	goto	u1705
  7320     0F49                     l2693:
  7321     0F49  3001               	movlw	1
  7322     0F4A  02A9               	subwf	___awmod@counter,f
  7323     0F4B  1D03               	btfss	3,2
  7324     0F4C  2F4E               	goto	u1711
  7325     0F4D  2F4F               	goto	u1710
  7326     0F4E                     u1711:
  7327     0F4E  2F36               	goto	l2687
  7328     0F4F                     u1710:
  7329     0F4F                     l2695:
  7330     0F4F  082A               	movf	___awmod@sign,w
  7331     0F50  1903               	btfsc	3,2
  7332     0F51  2F53               	goto	u1721
  7333     0F52  2F54               	goto	u1720
  7334     0F53                     u1721:
  7335     0F53  2F59               	goto	l2699
  7336     0F54                     u1720:
  7337     0F54                     l2697:
  7338     0F54  09A6               	comf	___awmod@dividend,f
  7339     0F55  09A7               	comf	___awmod@dividend+1,f
  7340     0F56  0AA6               	incf	___awmod@dividend,f
  7341     0F57  1903               	skipnz
  7342     0F58  0AA7               	incf	___awmod@dividend+1,f
  7343     0F59                     l2699:
  7344     0F59  0827               	movf	___awmod@dividend+1,w
  7345     0F5A  00A5               	movwf	?___awmod+1
  7346     0F5B  0826               	movf	___awmod@dividend,w
  7347     0F5C  00A4               	movwf	?___awmod
  7348     0F5D                     l959:
  7349     0F5D  0008               	return
  7350     0F5E                     __end_of___awmod:
  7351                           
  7352                           	psect	text25
  7353     0CD5                     __ptext25:	
  7354 ;; *************** function _ai_getInputField *****************
  7355 ;; Defined at:
  7356 ;;		line 88 in file "ai.c"
  7357 ;; Parameters:    Size  Location     Type
  7358 ;;		None
  7359 ;; Auto vars:     Size  Location     Type
  7360 ;;		None
  7361 ;; Return value:  Size  Location     Type
  7362 ;;                  1    wreg      PTR char 
  7363 ;; Registers used:
  7364 ;;		wreg
  7365 ;; Tracked objects:
  7366 ;;		On entry : 0/0
  7367 ;;		On exit  : 0/0
  7368 ;;		Unchanged: 0/0
  7369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7370 ;;      Params:         0       0       0       0       0       0
  7371 ;;      Locals:         0       0       0       0       0       0
  7372 ;;      Temps:          0       0       0       0       0       0
  7373 ;;      Totals:         0       0       0       0       0       0
  7374 ;;Total ram usage:        0 bytes
  7375 ;; Hardware stack levels used: 1
  7376 ;; This function calls:
  7377 ;;		Nothing
  7378 ;; This function is called by:
  7379 ;;		_main
  7380 ;; This function uses a non-reentrant model
  7381 ;;
  7382                           
  7383     0CD5                     _ai_getInputField:	
  7384                           ;psect for function _ai_getInputField
  7385                           
  7386     0CD5                     l2807:	
  7387                           ;incstack = 0
  7388                           ; Regs used in _ai_getInputField: [wreg]
  7389                           
  7390                           
  7391                           ;ai.c: 89:     return Y0;
  7392     0CD5  3063               	movlw	(low (_Y0| 0))& (0+255)
  7393     0CD6                     l581:
  7394     0CD6  0008               	return
  7395     0CD7                     __end_of_ai_getInputField:
  7396                           
  7397                           	psect	text26
  7398     0D3F                     __ptext26:	
  7399 ;; *************** function _SYSTEM_Initialize *****************
  7400 ;; Defined at:
  7401 ;;		line 50 in file "mcc_generated_files/mcc.c"
  7402 ;; Parameters:    Size  Location     Type
  7403 ;;		None
  7404 ;; Auto vars:     Size  Location     Type
  7405 ;;		None
  7406 ;; Return value:  Size  Location     Type
  7407 ;;                  1    wreg      void 
  7408 ;; Registers used:
  7409 ;;		wreg, status,2, status,0, pclath, cstack
  7410 ;; Tracked objects:
  7411 ;;		On entry : 0/0
  7412 ;;		On exit  : 0/0
  7413 ;;		Unchanged: 0/0
  7414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7415 ;;      Params:         0       0       0       0       0       0
  7416 ;;      Locals:         0       0       0       0       0       0
  7417 ;;      Temps:          0       0       0       0       0       0
  7418 ;;      Totals:         0       0       0       0       0       0
  7419 ;;Total ram usage:        0 bytes
  7420 ;; Hardware stack levels used: 1
  7421 ;; Hardware stack levels required when called: 2
  7422 ;; This function calls:
  7423 ;;		_EUSART_Initialize
  7424 ;;		_OSCILLATOR_Initialize
  7425 ;;		_PIN_MANAGER_Initialize
  7426 ;;		_SPI1_Initialize
  7427 ;;		_WDT_Initialize
  7428 ;; This function is called by:
  7429 ;;		_main
  7430 ;; This function uses a non-reentrant model
  7431 ;;
  7432                           
  7433     0D3F                     _SYSTEM_Initialize:	
  7434                           ;psect for function _SYSTEM_Initialize
  7435                           
  7436     0D3F                     l2703:	
  7437                           ;incstack = 0
  7438                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7439                           
  7440                           
  7441                           ;mcc_generated_files/mcc.c: 53:     SPI1_Initialize();
  7442     0D3F  318D  2526  318D   	fcall	_SPI1_Initialize
  7443                           
  7444                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  7445     0D42  318D  2573  318D   	fcall	_PIN_MANAGER_Initialize
  7446                           
  7447                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  7448     0D45  318D  2503  318D   	fcall	_OSCILLATOR_Initialize
  7449                           
  7450                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  7451     0D48  318C  24DC  318D   	fcall	_WDT_Initialize
  7452                           
  7453                           ;mcc_generated_files/mcc.c: 57:     EUSART_Initialize();
  7454     0D4B  318D  25C4  318D   	fcall	_EUSART_Initialize
  7455     0D4E                     l248:
  7456     0D4E  0008               	return
  7457     0D4F                     __end_of_SYSTEM_Initialize:
  7458                           
  7459                           	psect	text27
  7460     0CDC                     __ptext27:	
  7461 ;; *************** function _WDT_Initialize *****************
  7462 ;; Defined at:
  7463 ;;		line 70 in file "mcc_generated_files/mcc.c"
  7464 ;; Parameters:    Size  Location     Type
  7465 ;;		None
  7466 ;; Auto vars:     Size  Location     Type
  7467 ;;		None
  7468 ;; Return value:  Size  Location     Type
  7469 ;;                  1    wreg      void 
  7470 ;; Registers used:
  7471 ;;		wreg
  7472 ;; Tracked objects:
  7473 ;;		On entry : 0/0
  7474 ;;		On exit  : 0/0
  7475 ;;		Unchanged: 0/0
  7476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7477 ;;      Params:         0       0       0       0       0       0
  7478 ;;      Locals:         0       0       0       0       0       0
  7479 ;;      Temps:          0       0       0       0       0       0
  7480 ;;      Totals:         0       0       0       0       0       0
  7481 ;;Total ram usage:        0 bytes
  7482 ;; Hardware stack levels used: 1
  7483 ;; This function calls:
  7484 ;;		Nothing
  7485 ;; This function is called by:
  7486 ;;		_SYSTEM_Initialize
  7487 ;; This function uses a non-reentrant model
  7488 ;;
  7489                           
  7490     0CDC                     _WDT_Initialize:	
  7491                           ;psect for function _WDT_Initialize
  7492                           
  7493     0CDC                     l2547:	
  7494                           ;incstack = 0
  7495                           ; Regs used in _WDT_Initialize: [wreg]
  7496                           
  7497                           
  7498                           ;mcc_generated_files/mcc.c: 73:     WDTCON = 0x16;
  7499     0CDC  3016               	movlw	22
  7500     0CDD  0021               	movlb	1	; select bank1
  7501     0CDE  0097               	movwf	23	;volatile
  7502     0CDF                     l254:
  7503     0CDF  0008               	return
  7504     0CE0                     __end_of_WDT_Initialize:
  7505                           
  7506                           	psect	text28
  7507     0D26                     __ptext28:	
  7508 ;; *************** function _SPI1_Initialize *****************
  7509 ;; Defined at:
  7510 ;;		line 62 in file "mcc_generated_files/spi1.c"
  7511 ;; Parameters:    Size  Location     Type
  7512 ;;		None
  7513 ;; Auto vars:     Size  Location     Type
  7514 ;;		None
  7515 ;; Return value:  Size  Location     Type
  7516 ;;                  1    wreg      void 
  7517 ;; Registers used:
  7518 ;;		wreg
  7519 ;; Tracked objects:
  7520 ;;		On entry : 0/0
  7521 ;;		On exit  : 0/0
  7522 ;;		Unchanged: 0/0
  7523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7524 ;;      Params:         0       0       0       0       0       0
  7525 ;;      Locals:         0       0       0       0       0       0
  7526 ;;      Temps:          0       0       0       0       0       0
  7527 ;;      Totals:         0       0       0       0       0       0
  7528 ;;Total ram usage:        0 bytes
  7529 ;; Hardware stack levels used: 1
  7530 ;; This function calls:
  7531 ;;		Nothing
  7532 ;; This function is called by:
  7533 ;;		_SYSTEM_Initialize
  7534 ;; This function uses a non-reentrant model
  7535 ;;
  7536                           
  7537     0D26                     _SPI1_Initialize:	
  7538                           ;psect for function _SPI1_Initialize
  7539                           
  7540     0D26                     l2535:	
  7541                           ;incstack = 0
  7542                           ; Regs used in _SPI1_Initialize: [wreg]
  7543                           
  7544                           
  7545                           ;mcc_generated_files/spi1.c: 65:     SSP1STAT = 0x40;
  7546     0D26  3040               	movlw	64
  7547     0D27  0024               	movlb	4	; select bank4
  7548     0D28  0094               	movwf	20	;volatile
  7549                           
  7550                           ;mcc_generated_files/spi1.c: 66:     SSP1CON1 = 0x02;
  7551     0D29  3002               	movlw	2
  7552     0D2A  0095               	movwf	21	;volatile
  7553                           
  7554                           ;mcc_generated_files/spi1.c: 67:     SSP1ADD = 0x01;
  7555     0D2B  3001               	movlw	1
  7556     0D2C  0092               	movwf	18	;volatile
  7557     0D2D                     l2537:
  7558                           
  7559                           ;mcc_generated_files/spi1.c: 68:     TRISBbits.TRISB4 = 0;
  7560     0D2D  0021               	movlb	1	; select bank1
  7561     0D2E  120D               	bcf	13,4	;volatile
  7562     0D2F                     l2539:
  7563                           
  7564                           ;mcc_generated_files/spi1.c: 69:     SSP1CON1bits.SSPEN = 0;
  7565     0D2F  0024               	movlb	4	; select bank4
  7566     0D30  1295               	bcf	21,5	;volatile
  7567     0D31                     l187:
  7568     0D31  0008               	return
  7569     0D32                     __end_of_SPI1_Initialize:
  7570                           
  7571                           	psect	text29
  7572     0D73                     __ptext29:	
  7573 ;; *************** function _PIN_MANAGER_Initialize *****************
  7574 ;; Defined at:
  7575 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  7576 ;; Parameters:    Size  Location     Type
  7577 ;;		None
  7578 ;; Auto vars:     Size  Location     Type
  7579 ;;		None
  7580 ;; Return value:  Size  Location     Type
  7581 ;;                  1    wreg      void 
  7582 ;; Registers used:
  7583 ;;		wreg, status,2
  7584 ;; Tracked objects:
  7585 ;;		On entry : 0/0
  7586 ;;		On exit  : 0/0
  7587 ;;		Unchanged: 0/0
  7588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7589 ;;      Params:         0       0       0       0       0       0
  7590 ;;      Locals:         0       0       0       0       0       0
  7591 ;;      Temps:          0       0       0       0       0       0
  7592 ;;      Totals:         0       0       0       0       0       0
  7593 ;;Total ram usage:        0 bytes
  7594 ;; Hardware stack levels used: 1
  7595 ;; This function calls:
  7596 ;;		Nothing
  7597 ;; This function is called by:
  7598 ;;		_SYSTEM_Initialize
  7599 ;; This function uses a non-reentrant model
  7600 ;;
  7601                           
  7602     0D73                     _PIN_MANAGER_Initialize:	
  7603                           ;psect for function _PIN_MANAGER_Initialize
  7604                           
  7605     0D73                     l2519:	
  7606                           ;incstack = 0
  7607                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  7608                           
  7609                           
  7610                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  7611     0D73  0022               	movlb	2	; select bank2
  7612     0D74  018C               	clrf	12	;volatile
  7613                           
  7614                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  7615     0D75  018D               	clrf	13	;volatile
  7616     0D76                     l2521:
  7617                           
  7618                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x37;
  7619     0D76  3037               	movlw	55
  7620     0D77  0021               	movlb	1	; select bank1
  7621     0D78  008C               	movwf	12	;volatile
  7622     0D79                     l2523:
  7623                           
  7624                           ;mcc_generated_files/pin_manager.c: 67:     TRISB = 0xEF;
  7625     0D79  30EF               	movlw	239
  7626     0D7A  008D               	movwf	13	;volatile
  7627     0D7B                     l2525:
  7628                           
  7629                           ;mcc_generated_files/pin_manager.c: 72:     ANSELB = 0xC8;
  7630     0D7B  30C8               	movlw	200
  7631     0D7C  0023               	movlb	3	; select bank3
  7632     0D7D  008D               	movwf	13	;volatile
  7633     0D7E                     l2527:
  7634                           
  7635                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x1F;
  7636     0D7E  301F               	movlw	31
  7637     0D7F  008C               	movwf	12	;volatile
  7638                           
  7639                           ;mcc_generated_files/pin_manager.c: 78:     WPUB = 0x00;
  7640     0D80  0024               	movlb	4	; select bank4
  7641     0D81  018D               	clrf	13	;volatile
  7642                           
  7643                           ;mcc_generated_files/pin_manager.c: 79:     WPUA = 0x00;
  7644     0D82  018C               	clrf	12	;volatile
  7645     0D83                     l2529:
  7646                           
  7647                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  7648     0D83  0021               	movlb	1	; select bank1
  7649     0D84  1795               	bsf	21,7	;volatile
  7650     0D85                     l2531:
  7651                           
  7652                           ;mcc_generated_files/pin_manager.c: 86:     APFCON0 = 0xC0;
  7653     0D85  30C0               	movlw	192
  7654     0D86  0022               	movlb	2	; select bank2
  7655     0D87  009D               	movwf	29	;volatile
  7656     0D88                     l2533:
  7657                           
  7658                           ;mcc_generated_files/pin_manager.c: 87:     APFCON1 = 0x01;
  7659     0D88  3001               	movlw	1
  7660     0D89  009E               	movwf	30	;volatile
  7661     0D8A                     l163:
  7662     0D8A  0008               	return
  7663     0D8B                     __end_of_PIN_MANAGER_Initialize:
  7664                           
  7665                           	psect	text30
  7666     0D03                     __ptext30:	
  7667 ;; *************** function _OSCILLATOR_Initialize *****************
  7668 ;; Defined at:
  7669 ;;		line 60 in file "mcc_generated_files/mcc.c"
  7670 ;; Parameters:    Size  Location     Type
  7671 ;;		None
  7672 ;; Auto vars:     Size  Location     Type
  7673 ;;		None
  7674 ;; Return value:  Size  Location     Type
  7675 ;;                  1    wreg      void 
  7676 ;; Registers used:
  7677 ;;		wreg, status,2
  7678 ;; Tracked objects:
  7679 ;;		On entry : 0/0
  7680 ;;		On exit  : 0/0
  7681 ;;		Unchanged: 0/0
  7682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7683 ;;      Params:         0       0       0       0       0       0
  7684 ;;      Locals:         0       0       0       0       0       0
  7685 ;;      Temps:          0       0       0       0       0       0
  7686 ;;      Totals:         0       0       0       0       0       0
  7687 ;;Total ram usage:        0 bytes
  7688 ;; Hardware stack levels used: 1
  7689 ;; This function calls:
  7690 ;;		Nothing
  7691 ;; This function is called by:
  7692 ;;		_SYSTEM_Initialize
  7693 ;; This function uses a non-reentrant model
  7694 ;;
  7695                           
  7696     0D03                     _OSCILLATOR_Initialize:	
  7697                           ;psect for function _OSCILLATOR_Initialize
  7698                           
  7699     0D03                     l2541:	
  7700                           ;incstack = 0
  7701                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  7702                           
  7703                           
  7704                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x70;
  7705     0D03  3070               	movlw	112
  7706     0D04  0021               	movlb	1	; select bank1
  7707     0D05  0099               	movwf	25	;volatile
  7708     0D06                     l2543:
  7709                           
  7710                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x00;
  7711     0D06  0198               	clrf	24	;volatile
  7712     0D07                     l2545:
  7713                           
  7714                           ;mcc_generated_files/mcc.c: 67:     BORCON = 0x00;
  7715     0D07  0022               	movlb	2	; select bank2
  7716     0D08  0196               	clrf	22	;volatile
  7717     0D09                     l251:
  7718     0D09  0008               	return
  7719     0D0A                     __end_of_OSCILLATOR_Initialize:
  7720                           
  7721                           	psect	text31
  7722     0DC4                     __ptext31:	
  7723 ;; *************** function _EUSART_Initialize *****************
  7724 ;; Defined at:
  7725 ;;		line 66 in file "mcc_generated_files/eusart.c"
  7726 ;; Parameters:    Size  Location     Type
  7727 ;;		None
  7728 ;; Auto vars:     Size  Location     Type
  7729 ;;		None
  7730 ;; Return value:  Size  Location     Type
  7731 ;;                  1    wreg      void 
  7732 ;; Registers used:
  7733 ;;		wreg, status,2, status,0, pclath, cstack
  7734 ;; Tracked objects:
  7735 ;;		On entry : 0/0
  7736 ;;		On exit  : 0/0
  7737 ;;		Unchanged: 0/0
  7738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7739 ;;      Params:         0       0       0       0       0       0
  7740 ;;      Locals:         0       0       0       0       0       0
  7741 ;;      Temps:          0       0       0       0       0       0
  7742 ;;      Totals:         0       0       0       0       0       0
  7743 ;;Total ram usage:        0 bytes
  7744 ;; Hardware stack levels used: 1
  7745 ;; Hardware stack levels required when called: 1
  7746 ;; This function calls:
  7747 ;;		_EUSART_SetErrorHandler
  7748 ;;		_EUSART_SetFramingErrorHandler
  7749 ;;		_EUSART_SetOverrunErrorHandler
  7750 ;; This function is called by:
  7751 ;;		_SYSTEM_Initialize
  7752 ;; This function uses a non-reentrant model
  7753 ;;
  7754                           
  7755     0DC4                     _EUSART_Initialize:	
  7756                           ;psect for function _EUSART_Initialize
  7757                           
  7758     0DC4                     l2503:	
  7759                           ;incstack = 0
  7760                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7761                           
  7762                           
  7763                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  7764     0DC4  3008               	movlw	8
  7765     0DC5  0023               	movlb	3	; select bank3
  7766     0DC6  009F               	movwf	31	;volatile
  7767                           
  7768                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
  7769     0DC7  3090               	movlw	144
  7770     0DC8  009D               	movwf	29	;volatile
  7771                           
  7772                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  7773     0DC9  3024               	movlw	36
  7774     0DCA  009E               	movwf	30	;volatile
  7775                           
  7776                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0x67;
  7777     0DCB  3067               	movlw	103
  7778     0DCC  009B               	movwf	27	;volatile
  7779     0DCD                     l2505:
  7780                           
  7781                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x00;
  7782     0DCD  019C               	clrf	28	;volatile
  7783     0DCE                     l2507:
  7784                           
  7785                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  7786     0DCE  3000               	movlw	0
  7787     0DCF  00F0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  7788     0DD0  3000               	movlw	0
  7789     0DD1  00F1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  7790     0DD2  318C  24EB  318D   	fcall	_EUSART_SetFramingErrorHandler
  7791     0DD5                     l2509:
  7792                           
  7793                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  7794     0DD5  3000               	movlw	0
  7795     0DD6  00F0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  7796     0DD7  3000               	movlw	0
  7797     0DD8  00F1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  7798     0DD9  318C  24F1  318D   	fcall	_EUSART_SetOverrunErrorHandler
  7799     0DDC                     l2511:
  7800                           
  7801                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  7802     0DDC  3000               	movlw	0
  7803     0DDD  00F0               	movwf	EUSART_SetErrorHandler@interruptHandler
  7804     0DDE  3000               	movlw	0
  7805     0DDF  00F1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  7806     0DE0  318C  24E5  318D   	fcall	_EUSART_SetErrorHandler
  7807     0DE3                     l2513:
  7808                           
  7809                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  7810     0DE3  0020               	movlb	0	; select bank0
  7811     0DE4  01E2               	clrf	_eusartRxLastError	;volatile
  7812     0DE5                     l93:
  7813     0DE5  0008               	return
  7814     0DE6                     __end_of_EUSART_Initialize:
  7815                           
  7816                           	psect	text32
  7817     0CF1                     __ptext32:	
  7818 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  7819 ;; Defined at:
  7820 ;;		line 161 in file "mcc_generated_files/eusart.c"
  7821 ;; Parameters:    Size  Location     Type
  7822 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  7823 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  7824 ;; Auto vars:     Size  Location     Type
  7825 ;;		None
  7826 ;; Return value:  Size  Location     Type
  7827 ;;                  1    wreg      void 
  7828 ;; Registers used:
  7829 ;;		wreg
  7830 ;; Tracked objects:
  7831 ;;		On entry : 0/0
  7832 ;;		On exit  : 0/0
  7833 ;;		Unchanged: 0/0
  7834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7835 ;;      Params:         2       0       0       0       0       0
  7836 ;;      Locals:         0       0       0       0       0       0
  7837 ;;      Temps:          0       0       0       0       0       0
  7838 ;;      Totals:         2       0       0       0       0       0
  7839 ;;Total ram usage:        2 bytes
  7840 ;; Hardware stack levels used: 1
  7841 ;; This function calls:
  7842 ;;		Nothing
  7843 ;; This function is called by:
  7844 ;;		_EUSART_Initialize
  7845 ;; This function uses a non-reentrant model
  7846 ;;
  7847                           
  7848     0CF1                     _EUSART_SetOverrunErrorHandler:	
  7849                           ;psect for function _EUSART_SetOverrunErrorHandler
  7850                           
  7851     0CF1                     l2489:	
  7852                           ;incstack = 0
  7853                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  7854                           
  7855                           
  7856                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  7857     0CF1  0871               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  7858     0CF2  0021               	movlb	1	; select bank1
  7859     0CF3  00ED               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  7860     0CF4  0870               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  7861     0CF5  00EC               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  7862     0CF6                     l135:
  7863     0CF6  0008               	return
  7864     0CF7                     __end_of_EUSART_SetOverrunErrorHandler:
  7865                           
  7866                           	psect	text33
  7867     0CEB                     __ptext33:	
  7868 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  7869 ;; Defined at:
  7870 ;;		line 157 in file "mcc_generated_files/eusart.c"
  7871 ;; Parameters:    Size  Location     Type
  7872 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  7873 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  7874 ;; Auto vars:     Size  Location     Type
  7875 ;;		None
  7876 ;; Return value:  Size  Location     Type
  7877 ;;                  1    wreg      void 
  7878 ;; Registers used:
  7879 ;;		wreg
  7880 ;; Tracked objects:
  7881 ;;		On entry : 0/0
  7882 ;;		On exit  : 0/0
  7883 ;;		Unchanged: 0/0
  7884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7885 ;;      Params:         2       0       0       0       0       0
  7886 ;;      Locals:         0       0       0       0       0       0
  7887 ;;      Temps:          0       0       0       0       0       0
  7888 ;;      Totals:         2       0       0       0       0       0
  7889 ;;Total ram usage:        2 bytes
  7890 ;; Hardware stack levels used: 1
  7891 ;; This function calls:
  7892 ;;		Nothing
  7893 ;; This function is called by:
  7894 ;;		_EUSART_Initialize
  7895 ;; This function uses a non-reentrant model
  7896 ;;
  7897                           
  7898     0CEB                     _EUSART_SetFramingErrorHandler:	
  7899                           ;psect for function _EUSART_SetFramingErrorHandler
  7900                           
  7901     0CEB                     l2487:	
  7902                           ;incstack = 0
  7903                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  7904                           
  7905                           
  7906                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  7907     0CEB  0871               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  7908     0CEC  0021               	movlb	1	; select bank1
  7909     0CED  00EF               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
  7910     0CEE  0870               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  7911     0CEF  00EE               	movwf	_EUSART_FramingErrorHandler^(0+128)
  7912     0CF0                     l132:
  7913     0CF0  0008               	return
  7914     0CF1                     __end_of_EUSART_SetFramingErrorHandler:
  7915                           
  7916                           	psect	text34
  7917     0CE5                     __ptext34:	
  7918 ;; *************** function _EUSART_SetErrorHandler *****************
  7919 ;; Defined at:
  7920 ;;		line 165 in file "mcc_generated_files/eusart.c"
  7921 ;; Parameters:    Size  Location     Type
  7922 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  7923 ;;		 -> EUSART_DefaultErrorHandler(1), 
  7924 ;; Auto vars:     Size  Location     Type
  7925 ;;		None
  7926 ;; Return value:  Size  Location     Type
  7927 ;;                  1    wreg      void 
  7928 ;; Registers used:
  7929 ;;		wreg
  7930 ;; Tracked objects:
  7931 ;;		On entry : 0/0
  7932 ;;		On exit  : 0/0
  7933 ;;		Unchanged: 0/0
  7934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7935 ;;      Params:         2       0       0       0       0       0
  7936 ;;      Locals:         0       0       0       0       0       0
  7937 ;;      Temps:          0       0       0       0       0       0
  7938 ;;      Totals:         2       0       0       0       0       0
  7939 ;;Total ram usage:        2 bytes
  7940 ;; Hardware stack levels used: 1
  7941 ;; This function calls:
  7942 ;;		Nothing
  7943 ;; This function is called by:
  7944 ;;		_EUSART_Initialize
  7945 ;; This function uses a non-reentrant model
  7946 ;;
  7947                           
  7948     0CE5                     _EUSART_SetErrorHandler:	
  7949                           ;psect for function _EUSART_SetErrorHandler
  7950                           
  7951     0CE5                     l2491:	
  7952                           ;incstack = 0
  7953                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  7954                           
  7955                           
  7956                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  7957     0CE5  0871               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  7958     0CE6  0022               	movlb	2	; select bank2
  7959     0CE7  00E1               	movwf	(_EUSART_ErrorHandler+1)^(0+256)
  7960     0CE8  0870               	movf	EUSART_SetErrorHandler@interruptHandler,w
  7961     0CE9  00E0               	movwf	_EUSART_ErrorHandler^(0+256)
  7962     0CEA                     l138:
  7963     0CEA  0008               	return
  7964     0CEB                     __end_of_EUSART_SetErrorHandler:
  7965     007E                     btemp	set	126	;btemp
  7966     007E                     wtemp0	set	126
  7967                           
  7968                           	psect	idloc
  7969                           
  7970                           ;Config register IDLOC0 @ 0x8000
  7971                           ;	unspecified, using default values
  7972     8000                     	org	32768
  7973     8000  3FFF               	dw	16383
  7974                           
  7975                           ;Config register IDLOC1 @ 0x8001
  7976                           ;	unspecified, using default values
  7977     8001                     	org	32769
  7978     8001  3FFF               	dw	16383
  7979                           
  7980                           ;Config register IDLOC2 @ 0x8002
  7981                           ;	unspecified, using default values
  7982     8002                     	org	32770
  7983     8002  3FFF               	dw	16383
  7984                           
  7985                           ;Config register IDLOC3 @ 0x8003
  7986                           ;	unspecified, using default values
  7987     8003                     	org	32771
  7988     8003  3FFF               	dw	16383
  7989                           
  7990                           	psect	config
  7991                           
  7992                           ;Config register CONFIG1 @ 0x8007
  7993                           ;	Oscillator Selection
  7994                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  7995                           ;	Watchdog Timer Enable
  7996                           ;	WDTE = OFF, WDT disabled
  7997                           ;	Power-up Timer Enable
  7998                           ;	PWRTE = OFF, PWRT disabled
  7999                           ;	MCLR Pin Function Select
  8000                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  8001                           ;	Flash Program Memory Code Protection
  8002                           ;	CP = OFF, Program memory code protection is disabled
  8003                           ;	Data Memory Code Protection
  8004                           ;	CPD = OFF, Data memory code protection is disabled
  8005                           ;	Brown-out Reset Enable
  8006                           ;	BOREN = ON, Brown-out Reset enabled
  8007                           ;	Clock Out Enable
  8008                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  8009                           ;	Internal/External Switchover
  8010                           ;	IESO = ON, Internal/External Switchover mode is enabled
  8011                           ;	Fail-Safe Clock Monitor Enable
  8012                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  8013     8007                     	org	32775
  8014     8007  3FE4               	dw	16356
  8015                           
  8016                           ;Config register CONFIG2 @ 0x8008
  8017                           ;	Flash Memory Self-Write Protection
  8018                           ;	WRT = OFF, Write protection off
  8019                           ;	PLL Enable
  8020                           ;	PLLEN = OFF, 4x PLL disabled
  8021                           ;	Stack Overflow/Underflow Reset Enable
  8022                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  8023                           ;	Brown-out Reset Voltage Selection
  8024                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  8025                           ;	Low-Voltage Programming Enable
  8026                           ;	LVP = ON, Low-voltage programming enabled
  8027     8008                     	org	32776
  8028     8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    36
    Data        8
    BSS         202
    Persistent  38
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     41      79
    BANK1            80      0      80
    BANK2            80      0      66
    BANK3            80      0      32
    BANK4            48      0       0

Pointer List with Targets:

    snake_getSurroundings@surroundings	PTR char  size(1) Largest target is 8
		 -> Y0(BANK0[8]), 

    sp__ai_getInputField	PTR char  size(1) Largest target is 8
		 -> Y0(BANK0[8]), 

    sp__snake_getField	PTR unsigned char  size(1) Largest target is 16
		 -> field(BANK1[16]), 

    main@field	PTR unsigned char  size(1) Largest target is 16
		 -> field(BANK1[16]), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    _main->___awdiv
    _snake_move->___awdiv
    _snake_move->_rand
    _snake_initiate->_rand
    _snake_getSurroundings->___awdiv
    _sendMatrix->_txMAX7219
    _ledSet->___awdiv
    _initMAX7219->_txMAX7219
    _txMAX7219->_SPI1_WriteByte
    _ai_run->___awdiv
    _sigmoid->___awdiv
    _ai_propagate->___awdiv
    ___wmul->_de_sigmoid
    ___awdiv->___wmul
    _ai_initiate->_rand
    _rand->___lmul
    ___awmod->_rand
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _main in BANK0

    _main->_ai_propagate
    _snake_move->_snake_initiate
    _snake_initiate->_rand
    _snake_getSurroundings->___awdiv
    _ledSet->___awdiv
    _ai_run->_sigmoid
    _sigmoid->___awdiv
    _ai_propagate->___awdiv
    _ai_initiate->___awmod
    ___awmod->_rand

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0   30051
                                             29 BANK0     12    12      0
                  _SYSTEM_Initialize
                            ___awdiv
                   _ai_getInputField
                        _ai_initiate
                       _ai_propagate
                             _ai_run
                 _deactivateElevator
                        _initMAX7219
                           _ledClear
                             _ledSet
                         _sendMatrix
                     _snake_getField
              _snake_getFoodPosition
              _snake_getSurroundings
                     _snake_initiate
                         _snake_move
 ---------------------------------------------------------------------------------
 (1) _snake_move                                           5     5      0    4007
                                              6 BANK0      5     5      0
                            ___awdiv
                               _rand
                     _snake_initiate
 ---------------------------------------------------------------------------------
 (2) _snake_initiate                                       2     2      0     410
                                              4 BANK0      2     2      0
                               _rand
                              _srand
 ---------------------------------------------------------------------------------
 (3) _srand                                                2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _snake_getSurroundings                               10    10      0    3890
                                              4 BANK0     10    10      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) _snake_getFoodPosition                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _snake_getField                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sendMatrix                                           5     5      0     935
                                              3 COMMON     5     5      0
                          _txMAX7219
 ---------------------------------------------------------------------------------
 (1) _ledSet                                               4     3      1    1488
                                              4 BANK0      4     3      1
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _ledClear                                             4     3      1    1336
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _initMAX7219                                          2     2      0     750
                                              3 COMMON     2     2      0
                          _txMAX7219
 ---------------------------------------------------------------------------------
 (2) _txMAX7219                                            2     1      1     750
                                              1 COMMON     2     1      1
                     _SPI1_WriteByte
 ---------------------------------------------------------------------------------
 (3) _SPI1_WriteByte                                       1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _deactivateElevator                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ai_run                                              11    11      0    5324
                                              7 BANK0     11    11      0
                            ___awdiv
                             ___wmul
                            _sigmoid
 ---------------------------------------------------------------------------------
 (2) _sigmoid                                              3     1      2     218
                                              4 BANK0      3     1      2
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _ai_propagate                                        25    25      0    6270
                                              4 BANK0     25    25      0
                       _EUSART_Write
                            ___awdiv
                             ___wmul
                         _de_sigmoid
 ---------------------------------------------------------------------------------
 (2) _de_sigmoid                                           3     1      2     218
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1156
                                              3 COMMON     6     2      4
                         _de_sigmoid (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    3188
                                              9 COMMON     5     1      4
                                              0 BANK0      4     4      0
                             ___wmul (ARG)
                         _de_sigmoid (ARG)
 ---------------------------------------------------------------------------------
 (2) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ai_initiate                                          7     7      0    1464
                                             11 BANK0      7     7      0
                            ___awmod
                               _rand
 ---------------------------------------------------------------------------------
 (3) _rand                                                 6     4      2     244
                                             12 COMMON     2     0      2
                                              0 BANK0      4     4      0
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     244
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     904
                                              4 BANK0      7     3      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (1) _ai_getInputField                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI1_Initialize
     _WDT_Initialize
   ___awdiv
     ___wmul (ARG)
       _de_sigmoid (ARG)
     _de_sigmoid (ARG)
   _ai_getInputField
   _ai_initiate
     ___awmod
       _rand (ARG)
         ___lmul
     _rand
   _ai_propagate
     _EUSART_Write
     ___awdiv
     ___wmul
     _de_sigmoid
   _ai_run
     ___awdiv
     ___wmul
     _sigmoid
       ___awdiv (ARG)
   _deactivateElevator
   _initMAX7219
     _txMAX7219
       _SPI1_WriteByte
   _ledClear
   _ledSet
     ___awdiv (ARG)
   _sendMatrix
     _txMAX7219
   _snake_getField
   _snake_getFoodPosition
   _snake_getSurroundings
     ___awdiv
   _snake_initiate
     _rand
     _srand
   _snake_move
     ___awdiv
     _rand
     _snake_initiate

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0     10F       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     29      4F       6       98.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      42      10       82.5%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      20      12       40.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0     10F      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Oct 10 13:16:53 2022

                           SPI1_WriteByte@byte 0070                           __end_of_ai_propagate 07D1  
                                           _B1 0051                                             _B2 00D0  
                                           l93 0DE5                                             _W1 0120  
                                           _W2 0150                                             _Y0 0063  
                                           _Y1 0059                                             _Y2 0055  
                                           _Z1 00B0                                             _Z2 00A8  
                                 ___awdiv@sign 0021                            ___wmul@multiplicand 0075  
                                          l120 0D1B                                            l132 0CF0  
                                          l117 0D13                                            l135 0CF6  
                                          l224 0CE4                                            l400 0DA1  
                                          l401 0DA4                                            l138 0CEA  
                                          l410 0D60                                            l251 0D09  
                                          l163 0D8A                                            l404 0F09  
                                          l254 0CDF                                            l407 0D72  
                                          l248 0D4E                                            l337 0D3E  
                                          l602 07D0                                            l187 0D31  
                                          l427 0E63                                            l507 0155  
                                          l516 0CDB                                            l456 0034  
                                          l642 0E0B                                            l395 0D92  
                                          l484 0227                                            l581 0CD6  
                                          l637 0E35                                            l397 0D97  
                                          l398 0D9C                                            l807 0E96  
                                          l487 0CD8                                            l578 0FFF  
                                          l598 0383                                            l793 0DAF  
                                          l946 0094                                            l795 0DC3  
                                          l959 0F5D                 ?_EUSART_SetFramingErrorHandler 0070  
                                 ___awmod@sign 002A                                            wreg 0009  
                                 ?_initMAX7219 0070                                           l3001 01AB  
                                         l3003 01AF                                           l3011 01CB  
                                         l3101 05D3                                           l3013 01E1  
                                         l1254 0D25                                           l3111 05DD  
                                         l3031 0204                                           l3023 01F6  
                                         l3015 01E6                                           l3007 01C5  
                                         l1257 0ECB                                           l3121 0612  
                                         l3113 05E3                                           l3041 0222  
                                         l3033 020B                                           l3025 01FC  
                                         l3017 01EA                                           l3211 07A4  
                                         l3203 0792                                           l3123 0626  
                                         l3107 05D4                                           l3051 0577  
                                         l3043 0225                                           l3027 01FE  
                                         l3035 0214                                           l3019 01F3  
                                         l3213 07C6                                           l3205 079C  
                                         l3141 06AA                                           l3133 063A  
                                         l3125 0630                                           l3109 05D9  
                                         l3061 0588                                           l3029 0200  
                                         l3037 021A                                           l3301 0429  
                                         l2511 0DDC                                           l2503 0DC4  
                                         l3207 079D                                           l3151 06B5  
                                         l3143 06AE                                           l3135 066B  
                                         l3127 0638                                           l3119 05E4  
                                         l3071 0593                                           l3055 057D  
                                         l3039 0220                                           l3311 0445  
                                         l3303 0430                                           l2513 0DE3  
                                         l2505 0DCD                                           l2521 0D76  
                                         l3217 07CB                                           l3153 06E3  
                                         l3145 06B4                                           l3137 06A0  
                                         l3081 05A0                                           l3073 0599  
                                         l3057 0582                                           l3321 04A8  
                                         l3313 044B                                           l3305 0436  
                                         l3241 0390                                           l3233 0384  
                                         l2507 0DCE                                           l2531 0D85  
                                         l2523 0D79                                           l2515 0D13  
                                         l2611 0DAB                                           l2603 0E03  
                                         l3171 0742                                           l3163 0702  
                                         l3155 06F7                                           l3139 06A4  
                                         l3083 05A5                                           l3067 0589  
                                         l3075 059F                                           l3059 0583  
                                         l3331 04CA                                           l3323 04AE  
                                         l3315 0492                                           l3307 043B  
                                         l3251 0399                                           l3243 0393  
                                         l3235 0387                                           l2509 0DD5  
                                         l2541 0D03                                           l2533 0D88  
                                         l2525 0D7B                                           l2517 0D18  
                                         l2621 0035                                           l2613 0DB4  
                                         l3181 0753                                           l3173 0748  
                                         l3165 0733                                           l3157 0701  
                                         l3085 05A9                                           l3069 058F  
                                         l3341 04EE                                           l3333 04D2  
                                         l3325 04B6                                           l3317 049A  
                                         l3309 0441                                           l3261 03B6  
                                         l3245 0398                                           l3237 038A  
                                         l2543 0D06                                           l2527 0D7E  
                                         l2519 0D73                                           l2535 0D26  
                                         l2703 0D3F                                           l2631 0046  
                                         l2623 0037                                           l2615 0DB9  
                                         l2607 0DA5                                           l3191 077A  
                                         l3167 0738                                           l3095 05B6  
                                         l3087 05AF                                           l3351 0511  
                                         l3343 04F5                                           l3335 04D9  
                                         l3327 04BD                                           l3319 04A1  
                                         l3271 03D1                                           l3263 03BC  
                                         l3239 038D                                           l2545 0D07  
                                         l2529 0D83                                           l2537 0D2D  
                                         l2481 0E7F                                           l2473 0E64  
                                         l2721 0F78                                           l2713 0F60  
                                         l2641 005A                                           l2633 004B  
                                         l2625 003B                                           l2617 0DBF  
                                         l2609 0DA7                                           l3193 0780  
                                         l3169 073E                                           l3097 05C9  
                                         l3089 05B5                                           l2705 0D32  
                                         l2801 0E52                                           l2561 0016  
                                         l3361 0540                                           l3353 0517  
                                         l3345 04FC                                           l3337 04E0  
                                         l3329 04C4                                           l3281 0402  
                                         l3273 03D6                                           l3265 03C1  
                                         l3257 039A                                           l2491 0CE5  
                                         l2539 0D2F                                           l2547 0CDC  
                                         l2483 0E8E                                           l2475 0E6C  
                                         l2731 0FAF                                           l2723 0F9B  
                                         l2715 0F77                                           l2707 0F5E  
                                         l2651 007A                                           l2643 005F  
                                         l2635 004F                                           l2627 0040  
                                         l3195 0784                                           l3187 0754  
                                         l3179 0749                                           l3099 05CD  
                                         l2571 0D8E                                           l2803 0E59  
                                         l2811 0097                                           l2563 002A  
                                         l2555 0007                                           l3371 055C  
                                         l3363 0546                                           l3347 0503  
                                         l3339 04E6                                           l3283 0407  
                                         l3275 03EC                                           l3267 03C7  
                                         l3259 03AF                                           l2477 0E70  
                                         l2725 0F9F                                           l2661 0090  
                                         l2653 007B                                           l2645 0063  
                                         l2637 0051                                           l2629 0042  
                                         l3197 078A                                           l3189 0776  
                                         l2581 0E1C                                           l2493 0CE1  
                                         l2573 0D98                                           l2805 0E5D  
                                         l2821 00A3                                           l2565 002C  
                                         l2557 000C                                           l2549 0005  
                                         l3365 054C                                           l3445 0527  
                                         l3349 050A                                           l3357 051E  
                                         l3293 0413                                           l3285 040D  
                                         l3277 03EF                                           l3269 03CB  
                                         l2487 0CEB                                           l2807 0CD5  
                                         l2671 0F15                                           l2479 0E78  
                                         l2751 0FF5                                           l2727 0FA5  
                                         l2655 0080                                           l2647 0067  
                                         l2639 0057                                           l2591 0DE6  
                                         l3199 078B                                           l2583 0E2A  
                                         l2575 0E0C                                           l2911 02B7  
                                         l2903 0258                                           l2831 00D6  
                                         l2823 00A9                                           l2495 0D1C  
                                         l2567 002E                                           l2559 0010  
                                         l3447 01D3                                           l3367 0551  
                                         l3359 0535                                           l3287 0411  
                                         l3279 03FC                                           l2489 0CF1  
                                         l2681 0F29                                           l2673 0F17  
                                         l2665 0F0A                                           l2497 0E97  
                                         l2753 0FF9                                           l2745 0FC8  
                                         l2737 0FB0                                           l2729 0FA9  
                                         l2649 0076                                           l2657 0086  
                                         l2593 0DF3                                           l2577 0E1A  
                                         l2913 02C8                                           l2905 028F  
                                         l2569 0D8C                                           l2761 0EFE  
                                         l2841 00F3                                           l2833 00DC  
                                         l2825 00AC                                           l2817 0098  
                                         l3369 0557                                           l2691 0F44  
                                         l2683 0F2E                                           l2675 0F1B  
                                         l2667 0F0C                                           l2499 0EB8  
                                         l2747 0FEB                                           l2739 0FC7  
                                         l2659 008B                                           l2587 0E2C  
                                         l2931 02E6                                           l2923 02D4  
                                         l2915 02CD                                           l2907 0293  
                                         l2763 0F03                                           l2755 0ECC  
                                         l2771 0D50                                           l2851 0100  
                                         l2843 00F9                                           l2835 00E2  
                                         l2827 00BD                                           l2819 009F  
                                         l3299 0414                                           l2693 0F49  
                                         l2685 0F32                                           l2677 0F20  
                                         l2669 0F10                                           l2749 0FEF  
                                         l2597 0DF5                                           l2941 0356  
                                         l2933 031D                                           l2925 02E5  
                                         l2917 02D3                                           l2909 0299  
                                         l2757 0ED2                                           l2765 0CD7  
                                         l2773 0CD9                                           l2861 0129  
                                         l2853 0111                                           l2845 00FF  
                                         l2837 00E7                                           l2829 00D1  
                                         l2687 0F36                                           l2679 0F26  
                                         l2695 0F4F                                           l2943 035B  
                                         l2935 0321                                           l2759 0EF3  
                                         l2783 0E37                                           l2871 0149  
                                         l2863 0130                                           l2855 0119  
                                         l2839 00EC                                           l2697 0F54  
                                         l2689 0F40                                           l2961 0382  
                                         l2953 0364                                           l2945 0361  
                                         l2937 0327                                           l2881 022A  
                                         l2769 0D63                                           l2793 0E3F  
                                         l2785 0E3D                                           l2777 0E36  
                                         l2873 014F                                           l2865 0136  
                                         l2857 011D                                           l2699 0F59  
                                         l2955 0376                                           l2947 0362  
                                         l2939 0345                                           l2883 0235  
                                         l2875 0228                                           l2795 0E41  
                                         l2787 0E3E                                           l2867 013C  
                                         l2859 0123                                           l2957 0378  
                                         l2885 023B                                           l2797 0E46  
                                         l2869 0142                                           l2981 0174  
                                         l2973 015B                                           l2965 0158  
                                         l2959 037C                                           l2895 0246  
                                         l2887 023F                                           l2799 0E4C  
                                         l2991 0187                                           l2983 0175  
                                         l2975 0164                                           l2967 015A  
                                         l2897 0257                                           l2889 0245  
                                         l2985 017A                                           l2977 016A  
                                         l2995 0191                                           l2987 0180  
                                         l2979 016E                                           l2997 0196  
                                         l2989 0184                  __end_of_snake_getSurroundings 0156  
                                         u2000 0327                                           u2001 0326  
                                         u2010 0361                                           u2011 0360  
                                         u2020 0376                                           u2100 01E6  
                                         u2021 0375                                           u2101 01E5  
                                         u2030 0382                                           u2110 01F3  
                                         u2031 0381                                           u2111 01F2  
                                         u1400 0E8E                                           u2200 05D3  
                                         u2120 01FC                                           u2040 0164  
                                         u1401 0E8D                                           u2201 05D2  
                                         u2121 01FB                                           u2041 0163  
                                         u1410 0EC5                                           u2210 05E3  
                                         u2130 0214                                           u2050 0174  
                                         u2211 05E2                                           u2131 0213  
                                         u2051 0173                                           u1420 0D18  
                                         u1500 0DAB                                           u2140 0220  
                                         u2060 0180                                           u1421 0D17  
                                         u1501 0DAA                                           u2141 021F  
                                         u2061 017F                                           _LATA 010C  
                                         u2310 0780                                           u2150 057C  
                                         u1430 0016                                           u2070 0190  
                                         _LATB 010D                                           u1415 0EC1  
                                         u2311 077F                                           u2151 057B  
                                         u1431 0015                                           u2071 018F  
                                         u1600 0076                                           u2320 078A  
                                         u2240 06AA                                           u2160 0582  
                                         u1440 0D97                                           u2080 01AA  
                                         u2400 03AF                                           u1601 0075  
                                         u2321 0789                                           u2305 0767  
                                         u2241 06A9                                           u2225 063D  
                                         u2161 0581                                           u1441 0D96  
                                         u2081 01A9                                           u2401 03AE  
                                         u1370 0E70                                           u1530 0DBF  
                                         u2330 0791                                           u2250 06B4  
                                         u2170 0588                                           u1450 0DA1  
                                         u2090 01C4                                           u2410 03C7  
                                         u1371 0E6F                                           u1531 0DBE  
                                         u1515 0DB0                                           u2331 0790  
                                         u2251 06B3                                           u2235 0673  
                                         u2171 0587                                           u1451 0DA0  
                                         u2091 01C3                                           u2411 03C6  
                                         u1620 0086                                           u1540 003B  
                                         u2340 07A3                                           u2180 0599  
                                         u1460 0E1A                                           u2500 04C4  
                                         u2420 03D1                                           u1621 0085  
                                         u1605 0072                                           u1541 003A  
                                         u1525 0DB5                                           u2341 07A2  
                                         u2181 0598                                           u1461 0E19  
                                         u2501 04C3                                           u2421 03D0  
                                         u1710 0F4F                                           u1630 008B  
                                         u1550 0046                                           u2270 073E  
                                         u2190 05AF                                           u1470 0E2A  
                                         u2510 04D2                                           u1711 0F4E  
                                         u1631 008A                                           u1615 007C  
                                         u1551 0045                                           u2271 073D  
                                         u2191 05AE                                           u1471 0E29  
                                         u2511 04D1                                           u1720 0F54  
                                         u1640 0F10                                           u1560 0057  
                                         u1480 0DF3                                           u2280 0748  
                                         u2520 04E0                                           u2440 0429  
                                         u1721 0F53                                           u1705 0F45  
                                         u1641 0F0F                                           u1385 0E79  
                                         u1561 0056                                           u1481 0DF2  
                                         u2281 0747                                           u2265 0705  
                                         u1465 0E16                                           u2521 04DF  
                                         u2441 0428                                           u1650 0F1B  
                                         u1490 0E02                                           u1810 0E52  
                                         u2530 04EE                                           u2450 0441  
                                         u1651 0F1A                                           u1395 0E80  
                                         u1491 0E01                                           u2355 07A7  
                                         u1475 0E26                                           u1811 0E51  
                                         u2531 04ED                                           u2451 0440  
                                         u2435 0417                                           u1660 0F26  
                                         u1740 0FA5                                           u1580 0067  
                                         u1804 0D55                                           u1820 0E63  
                                         u1900 0129                                           u2540 04FC  
                                         u2460 044B                                           u1661 0F25  
                                         u1741 0FA4                                           u1581 0066  
                                         u1485 0DEF                                           u2365 07B7  
                                         u1805 0D54                                           u1821 0E62  
                                         u1901 0128                                           u2541 04FB  
                                         u2461 044A                                           u1750 0FAF  
                                         u1910 0136                                           u1830 00A9  
                                         u2550 0546                                           u2470 049A  
                                         u1751 0FAE                                           u1735 0F7B  
                                         u1575 005B                                           u1495 0DFE  
                                         u2295 0757                                           u2607 0EF8  
                                         u1911 0135                                           u1831 00A8  
                                         u2551 0545                                           u2471 0499  
                                         u1680 0F36                                           u1920 0142  
                                         u1840 00D6                                           u2560 0551  
                                         u2480 04A8                                           u1681 0F35  
                                         u1921 0141                                           u1841 00D5  
                                         u2561 0550                                           u2481 04A7  
                                         u1690 0F40                                           u1770 0FF5  
                                         u1930 014F                                           u1850 00E2  
                                         u2490 04B6                                           u1691 0F3F  
                                         u1675 0F2A                                           u1771 0FF4  
                                         u1595 0068                                           u1931 014E  
                                         u1851 00E1                                           u2491 04B5  
                                         u2395 039D                                           u1780 0FFF  
                                         u1940 0235                                           u1860 00EC  
                                         u1781 0FFE                                           u1765 0FCB  
                                         u1941 0234                                           u1861 00EB  
                                         u1950 0245                                           u1870 00F9  
                                         u1695 0F3C                                           u1951 0244  
                                         u1871 00F8                                           u1880 0111  
                                         u1881 0110                                           u1970 0299  
                                         u1794 0D68                                           u1890 0123  
                                         u1971 0298                                           u1795 0D67  
                                         u1891 0122                                           u1980 02D3  
                                         u1981 02D2                                           u1965 0268  
                                         u2597 03F5                                           u1995 02F6  
                                         _WPUA 020C                                           _WPUB 020D  
                                         _main 0384                                           _rand 0E97  
                                         _seed 006B                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           btemp 007E  
                                         start 0002                     __end_of_deactivateElevator 0D3F  
                      ??_snake_getFoodPosition 0070                                  ?_EUSART_Write 0070  
                __end_of_OSCILLATOR_Initialize 0D0A                                          ?_main 0070  
                                        ?_rand 007C                                __end_of___awdiv 0095  
                              __end_of___awmod 0F5E                                ___awdiv@divisor 0079  
                              ___awdiv@counter 0020                                          _RCREG 0199  
                                        _RCSTA 019D                                          _TRISA 008C  
                                        _TRISB 008D                                          _TXREG 019A  
                                        _TXSTA 019E                            ___lmul@multiplicand 0074  
                                        _field 00D4                                 _WDT_Initialize 0CDC  
                                        _srand 0D1C                                          main@i 0045  
                                        main@j 0046                                __end_of_sigmoid 0E36  
                                        status 0003                                          wtemp0 007E  
                              __initialization 07D1                                 _remainingMoves 005D  
                                 __end_of_main 0575                                   __end_of_rand 0ECC  
                               ??_EUSART_Write 0070                                         ??_main 003D  
                                       ??_rand 0020                         __end_of_WDT_Initialize 0CE0  
            _EUSART_DefaultFramingErrorHandler 0000                     _EUSART_OverrunErrorHandler 00EC  
                                       _EEADRH 0192                                         _EEADRL 0191  
                                       _EEDATH 0194                                         _EEDATL 0193  
                                       _EECON2 0196                               ___awdiv@dividend 007B  
                                       ?_srand 0070                                         _DC_DB1 00C0  
                                       _DC_DB2 00C8                                         _ANSELA 018C  
                                       _ANSELB 018D                                         _DC_DW1 01A0  
                                       _DC_DW2 0140                                         _DC_DY1 00C4  
                                       _DC_DY2 00CC                                         _DC_DZ1 00A0  
                                       _DC_DZ2 0049                                         _BORCON 0116  
                            ?_ai_getInputField 0070                                  main@incentive 0044  
                                       _OSCCON 0099                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _WDTCON 0097  
                           ??_ai_getInputField 0070                               __end_of_ledClear 0D61  
            snake_getSurroundings@surroundings 002D                                         ___lmul 0E64  
                                       ___wmul 0DA5                                      ??___awdiv 007D  
                                       _ai_run 0228                                      ??___awmod 0028  
                                       _choice 0060                                         _ledSet 0D61  
                             _de_sigmoidValues 0800                                         _matrix 00B8  
                             ___awdiv@quotient 0022                                ___awmod@divisor 0024  
                              ___awmod@counter 0029                                ?_WDT_Initialize 0070  
                                    ??_sigmoid 0026                                         srand@s 0070  
                                ai_propagate@S 002A                                  ai_propagate@i 0031  
                                ai_propagate@j 0037                                   _ai_propagate 0575  
                            _SYSTEM_Initialize 0D3F                        __end_of__initialization 07FD  
                           ?_SYSTEM_Initialize 0070                                 __pcstackCOMMON 0070  
                                 __pidataBANK1 0D0A                            ??_SYSTEM_Initialize 0072  
                            ??_SPI1_Initialize 0070                                  __end_of_srand 0D26  
                           _spi1_configuration 0820                                 _OPTION_REGbits 0095  
                        __end_of_sigmoidValues 0820                ??_EUSART_SetOverrunErrorHandler 0072  
                              snake_initiate@i 0025                      __end_of_SYSTEM_Initialize 0D4F  
                          snake_move@direction 0028                                        ??_srand 0072  
                                 _headPosition 005F                                     __pbssBANK0 0049  
                                   __pbssBANK1 00A0                                     __pbssBANK2 0120  
                                   __pbssBANK3 01A0                          ai_propagate@incentive 0030  
                         __end_of_EUSART_Write 0D1C                                     _de_sigmoid 0DE6  
                               _SPI1_WriteByte 0CE0                            snake_move@incentive 0029  
                                   __pmaintext 0384                                        ?___lmul 0070  
                                      ?___wmul 0073                                        ?_ai_run 0070  
                                  sendMatrix@b 0074                                    sendMatrix@i 0077  
                                  sendMatrix@j 0076                                        ?_ledSet 0024  
                                      _BAUDCON 019F                                 ___lmul@product 0078  
                                      _APFCON0 011D                                        _APFCON1 011E  
                __end_of_snake_getFoodPosition 0CDC                           main@foodPosition_674 0043  
                           _deactivateElevator 0D32                                        _OSCTUNE 0098  
                                    ?_ledClear 0070                                        _SSP1ADD 0212  
                                      _SSP1BUF 0211                       ??_EUSART_SetErrorHandler 0072  
                          ?_deactivateElevator 0070                         __end_of_SPI1_WriteByte 0CE5  
                        _snake_getSurroundings 0095                               main@foodPosition 0041  
                                ??_ai_initiate 002B                                        ___awdiv 0035  
                                      ___awmod 0F0A                           ??_deactivateElevator 0070  
                                      __ptext1 0156                                        __ptext2 0005  
                                      __ptext3 0D1C                                        __ptext4 0095  
                                      __ptext5 0CD9                                        __ptext6 0CD7  
                                      __ptext7 0E36                                        __ptext8 0D61  
                                      __ptext9 0D4F                              __end_of_txMAX7219 0DA5  
                                      ai_run@i 002C                                        ai_run@j 0030  
                        _OSCILLATOR_Initialize 0D03                                        _mapping 00E4  
                             ___awmod@dividend 0026                       ??_PIN_MANAGER_Initialize 0070  
                                      _sigmoid 0E0C                                     ??_ledClear 0071  
                                      ledSet@c 0024                                        ledSet@l 0027  
                                      clrloop0 0CF8                           end_of_initialization 07FD  
                                   _sendMatrix 0E36                       __end_of_de_sigmoidValues 0810  
                                  ?_de_sigmoid 0070          __end_of_EUSART_SetOverrunErrorHandler 0CF7  
                _EUSART_SetOverrunErrorHandler 0CF1                                ?_SPI1_WriteByte 0070  
                                      init_ram 0CFD                                        initloop 0CFE  
                                  snake_move@i 002A                              _EUSART_Initialize 0DC4  
                           ?_EUSART_Initialize 0070                                      _RCSTAbits 019D  
                                   _snake_move 0156                            ??_EUSART_Initialize 0072  
                          __end_of_ai_initiate 1000                               ??_WDT_Initialize 0070  
                               txMAX7219@addr0 0072                                      _TRISAbits 008C  
                                    _TRISBbits 008D                         ?_snake_getSurroundings 0070  
                    __end_of_EUSART_Initialize 0DE6                                     main@choice 0042  
                              _SPI1_Initialize 0D26                                      _TXSTAbits 019E  
                                 _foodPosition 005E                                 _snake_getField 0CD7  
                                 ai_initiate@i 002E                                   ai_initiate@j 0030  
                               __end_of___lmul 0E97                     _EUSART_DefaultErrorHandler 0000  
                               __end_of___wmul 0DC4                                 __end_of_ai_run 0384  
                                 _EUSART_Write 0D12                                 __end_of_ledSet 0D73  
                       ?_OSCILLATOR_Initialize 0070                                 _snake_initiate 0005  
                          start_initialization 07D1                                  ??_initMAX7219 0073  
                                  ?_sendMatrix 0070                         __end_of_snake_getField 0CD9  
                                  _ai_run$1558 002A                 ?_EUSART_SetOverrunErrorHandler 0070  
                                  _ai_initiate 0F5E                     _EUSART_FramingErrorHandler 00EE  
                                     ??___lmul 0078                                    ?_snake_move 0070  
                                     ??___wmul 0077                         _EUSART_SetErrorHandler 0CE5  
                                     ??_ai_run 0027                                       ??_ledSet 0025  
                                  __pdataBANK1 00E4                               ai_initiate@i_853 002F  
                             ai_initiate@j_852 0031                         __end_of_snake_initiate 0035  
                                    ___latbits 0001                                  __pcstackBANK0 0020  
                      __end_of_SPI1_Initialize 0D32                        snake_getSurroundings@cf 0028  
                      snake_getSurroundings@ch 002B                        snake_getSurroundings@lf 0027  
                      snake_getSurroundings@lh 002A                            __end_of_initMAX7219 0F0A  
                                    __pnvBANK1 00EC                                      __pnvBANK2 0160  
                              ?_snake_getField 0070                         _PIN_MANAGER_Initialize 0D73  
                                     ?___awdiv 0079                                       ?___awmod 0024  
                             _ai_getInputField 0CD5                                ?_snake_initiate 0070  
                                 sendMatrix@nb 0075                          _snake_getFoodPosition 0CD9  
                                     ?_sigmoid 0024                               ??_SPI1_WriteByte 0070  
                                    _txMAX7219 0D8B                                   ??_de_sigmoid 0072  
                               ___wmul@product 0077                                       _LATAbits 010C  
       EUSART_SetErrorHandler@interruptHandler 0070                                       _LATBbits 010D  
                                    clear_ram0 0CF7                              _eusartRxLastError 0062  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 0072  
                                    ledClear@c 0070                                      ledClear@l 0073  
                            _ai_propagate$1559 002E                                      _snakeSize 0061  
                                     _SSP1CON1 0215                                       _SSP1CON2 0216  
            _EUSART_DefaultOverrunErrorHandler 0000                                       _SSP1STAT 0214  
                                txMAX7219@dat0 0071                                      main@i_672 0047  
                            ___wmul@multiplier 0073                                      main@j_673 0048  
                           __end_of_de_sigmoid 0E0C                                      main@field 0040  
                                  _initMAX7219 0ECC                        ??_snake_getSurroundings 0024  
                                   ?_txMAX7219 0071                                  _sigmoidValues 0810  
                             ?_SPI1_Initialize 0070                                  ?_ai_propagate 0070  
                            ___lmul@multiplier 0070                                     _EECON1bits 0195  
                                  ai_run@i_860 002E                                    ai_run@i_861 002F  
                                  ai_run@i_858 002D                                    ai_run@j_859 0031  
                      ??_OSCILLATOR_Initialize 0070                            _EUSART_ErrorHandler 0160  
                       ?_snake_getFoodPosition 0070                         snake_getSurroundings@i 0029  
                       snake_getSurroundings@p 0026                              ai_propagate@i_871 0038  
                            ai_propagate@i_873 0034                              ai_propagate@i_866 0032  
                            ai_propagate@i_875 0035                              ai_propagate@i_877 0036  
                            ai_propagate@j_872 003B                              ai_propagate@j_874 0039  
                            ai_propagate@j_876 003A                              ai_propagate@j_868 0033  
                            ai_propagate@j_869 003C                                    de_sigmoid@z 0070  
                                     _ledClear 0D4F                                 ??_ai_propagate 0024  
                                     __ptext10 0ECC                                       __ptext11 0D8B  
                                     __ptext20 0D12                                       __ptext12 0CE0  
                                     __ptext21 0F5E                                       __ptext13 0D32  
                                     __ptext30 0D03                                       __ptext22 0E97  
                                     __ptext14 0228                                       __ptext31 0DC4  
                                     __ptext23 0E64                                       __ptext15 0E0C  
                                     __ptext32 0CF1                                       __ptext24 0F0A  
                                     __ptext16 0575                                       __ptext33 0CEB  
                                     __ptext25 0CD5                                       __ptext17 0DE6  
                                     __ptext34 0CE5                                       __ptext26 0D3F  
                                     __ptext18 0DA5                                       __ptext27 0CDC  
                                     __ptext19 0035                                       __ptext28 0D26  
                                     __ptext29 0D73                                   _SSP1CON1bits 0215  
                                 ??_sendMatrix 0073                        ?_EUSART_SetErrorHandler 0070  
                                 ?_ai_initiate 0070  EUSART_SetOverrunErrorHandler@interruptHandler 0070  
                                 ??_snake_move 0026          __end_of_EUSART_SetFramingErrorHandler 0CF1  
                _EUSART_SetFramingErrorHandler 0CEB                             __end_of_sendMatrix 0E64  
                                   _INTCONbits 000B                                    ??_txMAX7219 0072  
                     __end_of_ai_getInputField 0CD7                               ??_snake_getField 0070  
                           __end_of_snake_move 0228                        ?_PIN_MANAGER_Initialize 0070  
               __end_of_EUSART_SetErrorHandler 0CEB                                       sigmoid@z 0024  
                   snake_getSurroundings@i_806 002C                               ??_snake_initiate 0024  
EUSART_SetFramingErrorHandler@interruptHandler 0070                                  __pstringtext1 0800  
                                __pstringtext2 0810                                  __pstringtext3 0820  
                           EUSART_Write@txData 0070                 __end_of_PIN_MANAGER_Initialize 0D8B  
                   __end_of_spi1_configuration 0824  
