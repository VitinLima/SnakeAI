

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Oct 09 12:20:26 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    15                           	psect	inittext,global,class=CODE,delta=2
    16                           	psect	clrtext,global,class=CODE,delta=2
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text25,local,class=CODE,merge=1,delta=2
    45                           	psect	text26,local,class=CODE,merge=1,delta=2
    46                           	psect	text27,local,class=CODE,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,merge=1,delta=2
    48                           	psect	text29,local,class=CODE,merge=1,delta=2
    49                           	psect	text30,local,class=CODE,merge=1,delta=2
    50                           	psect	text31,local,class=CODE,merge=1,delta=2
    51                           	psect	text32,local,class=CODE,merge=1,delta=2
    52                           	psect	text33,local,class=CODE,merge=1,delta=2
    53                           	psect	text34,local,class=CODE,merge=1,delta=2
    54                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    55                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    56                           	dabs	1,0x7E,2
    57     0000                     
    58                           ; Version 2.40
    59                           ; Generated 17/11/2021 GMT
    60                           ; 
    61                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution. Publication is not required when
    75                           ;        this file is used in an embedded application.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC16F1827 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93     0000                     	;# 
    94     0001                     	;# 
    95     0002                     	;# 
    96     0003                     	;# 
    97     0004                     	;# 
    98     0005                     	;# 
    99     0006                     	;# 
   100     0007                     	;# 
   101     0008                     	;# 
   102     0009                     	;# 
   103     000A                     	;# 
   104     000B                     	;# 
   105     000C                     	;# 
   106     000D                     	;# 
   107     0011                     	;# 
   108     0012                     	;# 
   109     0013                     	;# 
   110     0014                     	;# 
   111     0015                     	;# 
   112     0016                     	;# 
   113     0016                     	;# 
   114     0017                     	;# 
   115     0018                     	;# 
   116     0019                     	;# 
   117     001A                     	;# 
   118     001B                     	;# 
   119     001C                     	;# 
   120     001E                     	;# 
   121     001F                     	;# 
   122     008C                     	;# 
   123     008D                     	;# 
   124     0091                     	;# 
   125     0092                     	;# 
   126     0093                     	;# 
   127     0094                     	;# 
   128     0095                     	;# 
   129     0096                     	;# 
   130     0097                     	;# 
   131     0098                     	;# 
   132     0099                     	;# 
   133     009A                     	;# 
   134     009B                     	;# 
   135     009B                     	;# 
   136     009C                     	;# 
   137     009D                     	;# 
   138     009E                     	;# 
   139     010C                     	;# 
   140     010D                     	;# 
   141     0111                     	;# 
   142     0112                     	;# 
   143     0113                     	;# 
   144     0114                     	;# 
   145     0115                     	;# 
   146     0116                     	;# 
   147     0117                     	;# 
   148     0118                     	;# 
   149     0119                     	;# 
   150     011A                     	;# 
   151     011B                     	;# 
   152     011D                     	;# 
   153     011E                     	;# 
   154     018C                     	;# 
   155     018D                     	;# 
   156     0191                     	;# 
   157     0191                     	;# 
   158     0192                     	;# 
   159     0193                     	;# 
   160     0193                     	;# 
   161     0193                     	;# 
   162     0194                     	;# 
   163     0195                     	;# 
   164     0196                     	;# 
   165     0199                     	;# 
   166     019A                     	;# 
   167     019B                     	;# 
   168     019B                     	;# 
   169     019B                     	;# 
   170     019B                     	;# 
   171     019C                     	;# 
   172     019C                     	;# 
   173     019D                     	;# 
   174     019E                     	;# 
   175     019F                     	;# 
   176     020C                     	;# 
   177     020D                     	;# 
   178     0211                     	;# 
   179     0211                     	;# 
   180     0212                     	;# 
   181     0212                     	;# 
   182     0213                     	;# 
   183     0213                     	;# 
   184     0214                     	;# 
   185     0214                     	;# 
   186     0215                     	;# 
   187     0215                     	;# 
   188     0215                     	;# 
   189     0216                     	;# 
   190     0216                     	;# 
   191     0217                     	;# 
   192     0217                     	;# 
   193     0219                     	;# 
   194     021A                     	;# 
   195     021B                     	;# 
   196     021C                     	;# 
   197     021D                     	;# 
   198     021E                     	;# 
   199     021F                     	;# 
   200     0291                     	;# 
   201     0291                     	;# 
   202     0292                     	;# 
   203     0293                     	;# 
   204     0294                     	;# 
   205     0295                     	;# 
   206     0295                     	;# 
   207     0296                     	;# 
   208     0298                     	;# 
   209     0298                     	;# 
   210     0299                     	;# 
   211     029A                     	;# 
   212     029B                     	;# 
   213     029C                     	;# 
   214     029C                     	;# 
   215     029D                     	;# 
   216     029E                     	;# 
   217     029E                     	;# 
   218     0311                     	;# 
   219     0311                     	;# 
   220     0312                     	;# 
   221     0313                     	;# 
   222     0318                     	;# 
   223     0318                     	;# 
   224     0319                     	;# 
   225     031A                     	;# 
   226     0394                     	;# 
   227     0395                     	;# 
   228     0396                     	;# 
   229     039A                     	;# 
   230     039C                     	;# 
   231     039D                     	;# 
   232     039E                     	;# 
   233     039F                     	;# 
   234     0415                     	;# 
   235     0416                     	;# 
   236     0417                     	;# 
   237     041C                     	;# 
   238     041D                     	;# 
   239     041E                     	;# 
   240     0FE4                     	;# 
   241     0FE5                     	;# 
   242     0FE6                     	;# 
   243     0FE7                     	;# 
   244     0FE8                     	;# 
   245     0FE9                     	;# 
   246     0FEA                     	;# 
   247     0FEB                     	;# 
   248     0FED                     	;# 
   249     0FEE                     	;# 
   250     0FEF                     	;# 
   251     0000                     	;# 
   252     0001                     	;# 
   253     0002                     	;# 
   254     0003                     	;# 
   255     0004                     	;# 
   256     0005                     	;# 
   257     0006                     	;# 
   258     0007                     	;# 
   259     0008                     	;# 
   260     0009                     	;# 
   261     000A                     	;# 
   262     000B                     	;# 
   263     000C                     	;# 
   264     000D                     	;# 
   265     0011                     	;# 
   266     0012                     	;# 
   267     0013                     	;# 
   268     0014                     	;# 
   269     0015                     	;# 
   270     0016                     	;# 
   271     0016                     	;# 
   272     0017                     	;# 
   273     0018                     	;# 
   274     0019                     	;# 
   275     001A                     	;# 
   276     001B                     	;# 
   277     001C                     	;# 
   278     001E                     	;# 
   279     001F                     	;# 
   280     008C                     	;# 
   281     008D                     	;# 
   282     0091                     	;# 
   283     0092                     	;# 
   284     0093                     	;# 
   285     0094                     	;# 
   286     0095                     	;# 
   287     0096                     	;# 
   288     0097                     	;# 
   289     0098                     	;# 
   290     0099                     	;# 
   291     009A                     	;# 
   292     009B                     	;# 
   293     009B                     	;# 
   294     009C                     	;# 
   295     009D                     	;# 
   296     009E                     	;# 
   297     010C                     	;# 
   298     010D                     	;# 
   299     0111                     	;# 
   300     0112                     	;# 
   301     0113                     	;# 
   302     0114                     	;# 
   303     0115                     	;# 
   304     0116                     	;# 
   305     0117                     	;# 
   306     0118                     	;# 
   307     0119                     	;# 
   308     011A                     	;# 
   309     011B                     	;# 
   310     011D                     	;# 
   311     011E                     	;# 
   312     018C                     	;# 
   313     018D                     	;# 
   314     0191                     	;# 
   315     0191                     	;# 
   316     0192                     	;# 
   317     0193                     	;# 
   318     0193                     	;# 
   319     0193                     	;# 
   320     0194                     	;# 
   321     0195                     	;# 
   322     0196                     	;# 
   323     0199                     	;# 
   324     019A                     	;# 
   325     019B                     	;# 
   326     019B                     	;# 
   327     019B                     	;# 
   328     019B                     	;# 
   329     019C                     	;# 
   330     019C                     	;# 
   331     019D                     	;# 
   332     019E                     	;# 
   333     019F                     	;# 
   334     020C                     	;# 
   335     020D                     	;# 
   336     0211                     	;# 
   337     0211                     	;# 
   338     0212                     	;# 
   339     0212                     	;# 
   340     0213                     	;# 
   341     0213                     	;# 
   342     0214                     	;# 
   343     0214                     	;# 
   344     0215                     	;# 
   345     0215                     	;# 
   346     0215                     	;# 
   347     0216                     	;# 
   348     0216                     	;# 
   349     0217                     	;# 
   350     0217                     	;# 
   351     0219                     	;# 
   352     021A                     	;# 
   353     021B                     	;# 
   354     021C                     	;# 
   355     021D                     	;# 
   356     021E                     	;# 
   357     021F                     	;# 
   358     0291                     	;# 
   359     0291                     	;# 
   360     0292                     	;# 
   361     0293                     	;# 
   362     0294                     	;# 
   363     0295                     	;# 
   364     0295                     	;# 
   365     0296                     	;# 
   366     0298                     	;# 
   367     0298                     	;# 
   368     0299                     	;# 
   369     029A                     	;# 
   370     029B                     	;# 
   371     029C                     	;# 
   372     029C                     	;# 
   373     029D                     	;# 
   374     029E                     	;# 
   375     029E                     	;# 
   376     0311                     	;# 
   377     0311                     	;# 
   378     0312                     	;# 
   379     0313                     	;# 
   380     0318                     	;# 
   381     0318                     	;# 
   382     0319                     	;# 
   383     031A                     	;# 
   384     0394                     	;# 
   385     0395                     	;# 
   386     0396                     	;# 
   387     039A                     	;# 
   388     039C                     	;# 
   389     039D                     	;# 
   390     039E                     	;# 
   391     039F                     	;# 
   392     0415                     	;# 
   393     0416                     	;# 
   394     0417                     	;# 
   395     041C                     	;# 
   396     041D                     	;# 
   397     041E                     	;# 
   398     0FE4                     	;# 
   399     0FE5                     	;# 
   400     0FE6                     	;# 
   401     0FE7                     	;# 
   402     0FE8                     	;# 
   403     0FE9                     	;# 
   404     0FEA                     	;# 
   405     0FEB                     	;# 
   406     0FED                     	;# 
   407     0FEE                     	;# 
   408     0FEF                     	;# 
   409     0000                     	;# 
   410     0001                     	;# 
   411     0002                     	;# 
   412     0003                     	;# 
   413     0004                     	;# 
   414     0005                     	;# 
   415     0006                     	;# 
   416     0007                     	;# 
   417     0008                     	;# 
   418     0009                     	;# 
   419     000A                     	;# 
   420     000B                     	;# 
   421     000C                     	;# 
   422     000D                     	;# 
   423     0011                     	;# 
   424     0012                     	;# 
   425     0013                     	;# 
   426     0014                     	;# 
   427     0015                     	;# 
   428     0016                     	;# 
   429     0016                     	;# 
   430     0017                     	;# 
   431     0018                     	;# 
   432     0019                     	;# 
   433     001A                     	;# 
   434     001B                     	;# 
   435     001C                     	;# 
   436     001E                     	;# 
   437     001F                     	;# 
   438     008C                     	;# 
   439     008D                     	;# 
   440     0091                     	;# 
   441     0092                     	;# 
   442     0093                     	;# 
   443     0094                     	;# 
   444     0095                     	;# 
   445     0096                     	;# 
   446     0097                     	;# 
   447     0098                     	;# 
   448     0099                     	;# 
   449     009A                     	;# 
   450     009B                     	;# 
   451     009B                     	;# 
   452     009C                     	;# 
   453     009D                     	;# 
   454     009E                     	;# 
   455     010C                     	;# 
   456     010D                     	;# 
   457     0111                     	;# 
   458     0112                     	;# 
   459     0113                     	;# 
   460     0114                     	;# 
   461     0115                     	;# 
   462     0116                     	;# 
   463     0117                     	;# 
   464     0118                     	;# 
   465     0119                     	;# 
   466     011A                     	;# 
   467     011B                     	;# 
   468     011D                     	;# 
   469     011E                     	;# 
   470     018C                     	;# 
   471     018D                     	;# 
   472     0191                     	;# 
   473     0191                     	;# 
   474     0192                     	;# 
   475     0193                     	;# 
   476     0193                     	;# 
   477     0193                     	;# 
   478     0194                     	;# 
   479     0195                     	;# 
   480     0196                     	;# 
   481     0199                     	;# 
   482     019A                     	;# 
   483     019B                     	;# 
   484     019B                     	;# 
   485     019B                     	;# 
   486     019B                     	;# 
   487     019C                     	;# 
   488     019C                     	;# 
   489     019D                     	;# 
   490     019E                     	;# 
   491     019F                     	;# 
   492     020C                     	;# 
   493     020D                     	;# 
   494     0211                     	;# 
   495     0211                     	;# 
   496     0212                     	;# 
   497     0212                     	;# 
   498     0213                     	;# 
   499     0213                     	;# 
   500     0214                     	;# 
   501     0214                     	;# 
   502     0215                     	;# 
   503     0215                     	;# 
   504     0215                     	;# 
   505     0216                     	;# 
   506     0216                     	;# 
   507     0217                     	;# 
   508     0217                     	;# 
   509     0219                     	;# 
   510     021A                     	;# 
   511     021B                     	;# 
   512     021C                     	;# 
   513     021D                     	;# 
   514     021E                     	;# 
   515     021F                     	;# 
   516     0291                     	;# 
   517     0291                     	;# 
   518     0292                     	;# 
   519     0293                     	;# 
   520     0294                     	;# 
   521     0295                     	;# 
   522     0295                     	;# 
   523     0296                     	;# 
   524     0298                     	;# 
   525     0298                     	;# 
   526     0299                     	;# 
   527     029A                     	;# 
   528     029B                     	;# 
   529     029C                     	;# 
   530     029C                     	;# 
   531     029D                     	;# 
   532     029E                     	;# 
   533     029E                     	;# 
   534     0311                     	;# 
   535     0311                     	;# 
   536     0312                     	;# 
   537     0313                     	;# 
   538     0318                     	;# 
   539     0318                     	;# 
   540     0319                     	;# 
   541     031A                     	;# 
   542     0394                     	;# 
   543     0395                     	;# 
   544     0396                     	;# 
   545     039A                     	;# 
   546     039C                     	;# 
   547     039D                     	;# 
   548     039E                     	;# 
   549     039F                     	;# 
   550     0415                     	;# 
   551     0416                     	;# 
   552     0417                     	;# 
   553     041C                     	;# 
   554     041D                     	;# 
   555     041E                     	;# 
   556     0FE4                     	;# 
   557     0FE5                     	;# 
   558     0FE6                     	;# 
   559     0FE7                     	;# 
   560     0FE8                     	;# 
   561     0FE9                     	;# 
   562     0FEA                     	;# 
   563     0FEB                     	;# 
   564     0FED                     	;# 
   565     0FEE                     	;# 
   566     0FEF                     	;# 
   567     0000                     	;# 
   568     0001                     	;# 
   569     0002                     	;# 
   570     0003                     	;# 
   571     0004                     	;# 
   572     0005                     	;# 
   573     0006                     	;# 
   574     0007                     	;# 
   575     0008                     	;# 
   576     0009                     	;# 
   577     000A                     	;# 
   578     000B                     	;# 
   579     000C                     	;# 
   580     000D                     	;# 
   581     0011                     	;# 
   582     0012                     	;# 
   583     0013                     	;# 
   584     0014                     	;# 
   585     0015                     	;# 
   586     0016                     	;# 
   587     0016                     	;# 
   588     0017                     	;# 
   589     0018                     	;# 
   590     0019                     	;# 
   591     001A                     	;# 
   592     001B                     	;# 
   593     001C                     	;# 
   594     001E                     	;# 
   595     001F                     	;# 
   596     008C                     	;# 
   597     008D                     	;# 
   598     0091                     	;# 
   599     0092                     	;# 
   600     0093                     	;# 
   601     0094                     	;# 
   602     0095                     	;# 
   603     0096                     	;# 
   604     0097                     	;# 
   605     0098                     	;# 
   606     0099                     	;# 
   607     009A                     	;# 
   608     009B                     	;# 
   609     009B                     	;# 
   610     009C                     	;# 
   611     009D                     	;# 
   612     009E                     	;# 
   613     010C                     	;# 
   614     010D                     	;# 
   615     0111                     	;# 
   616     0112                     	;# 
   617     0113                     	;# 
   618     0114                     	;# 
   619     0115                     	;# 
   620     0116                     	;# 
   621     0117                     	;# 
   622     0118                     	;# 
   623     0119                     	;# 
   624     011A                     	;# 
   625     011B                     	;# 
   626     011D                     	;# 
   627     011E                     	;# 
   628     018C                     	;# 
   629     018D                     	;# 
   630     0191                     	;# 
   631     0191                     	;# 
   632     0192                     	;# 
   633     0193                     	;# 
   634     0193                     	;# 
   635     0193                     	;# 
   636     0194                     	;# 
   637     0195                     	;# 
   638     0196                     	;# 
   639     0199                     	;# 
   640     019A                     	;# 
   641     019B                     	;# 
   642     019B                     	;# 
   643     019B                     	;# 
   644     019B                     	;# 
   645     019C                     	;# 
   646     019C                     	;# 
   647     019D                     	;# 
   648     019E                     	;# 
   649     019F                     	;# 
   650     020C                     	;# 
   651     020D                     	;# 
   652     0211                     	;# 
   653     0211                     	;# 
   654     0212                     	;# 
   655     0212                     	;# 
   656     0213                     	;# 
   657     0213                     	;# 
   658     0214                     	;# 
   659     0214                     	;# 
   660     0215                     	;# 
   661     0215                     	;# 
   662     0215                     	;# 
   663     0216                     	;# 
   664     0216                     	;# 
   665     0217                     	;# 
   666     0217                     	;# 
   667     0219                     	;# 
   668     021A                     	;# 
   669     021B                     	;# 
   670     021C                     	;# 
   671     021D                     	;# 
   672     021E                     	;# 
   673     021F                     	;# 
   674     0291                     	;# 
   675     0291                     	;# 
   676     0292                     	;# 
   677     0293                     	;# 
   678     0294                     	;# 
   679     0295                     	;# 
   680     0295                     	;# 
   681     0296                     	;# 
   682     0298                     	;# 
   683     0298                     	;# 
   684     0299                     	;# 
   685     029A                     	;# 
   686     029B                     	;# 
   687     029C                     	;# 
   688     029C                     	;# 
   689     029D                     	;# 
   690     029E                     	;# 
   691     029E                     	;# 
   692     0311                     	;# 
   693     0311                     	;# 
   694     0312                     	;# 
   695     0313                     	;# 
   696     0318                     	;# 
   697     0318                     	;# 
   698     0319                     	;# 
   699     031A                     	;# 
   700     0394                     	;# 
   701     0395                     	;# 
   702     0396                     	;# 
   703     039A                     	;# 
   704     039C                     	;# 
   705     039D                     	;# 
   706     039E                     	;# 
   707     039F                     	;# 
   708     0415                     	;# 
   709     0416                     	;# 
   710     0417                     	;# 
   711     041C                     	;# 
   712     041D                     	;# 
   713     041E                     	;# 
   714     0FE4                     	;# 
   715     0FE5                     	;# 
   716     0FE6                     	;# 
   717     0FE7                     	;# 
   718     0FE8                     	;# 
   719     0FE9                     	;# 
   720     0FEA                     	;# 
   721     0FEB                     	;# 
   722     0FED                     	;# 
   723     0FEE                     	;# 
   724     0FEF                     	;# 
   725     0000                     	;# 
   726     0001                     	;# 
   727     0002                     	;# 
   728     0003                     	;# 
   729     0004                     	;# 
   730     0005                     	;# 
   731     0006                     	;# 
   732     0007                     	;# 
   733     0008                     	;# 
   734     0009                     	;# 
   735     000A                     	;# 
   736     000B                     	;# 
   737     000C                     	;# 
   738     000D                     	;# 
   739     0011                     	;# 
   740     0012                     	;# 
   741     0013                     	;# 
   742     0014                     	;# 
   743     0015                     	;# 
   744     0016                     	;# 
   745     0016                     	;# 
   746     0017                     	;# 
   747     0018                     	;# 
   748     0019                     	;# 
   749     001A                     	;# 
   750     001B                     	;# 
   751     001C                     	;# 
   752     001E                     	;# 
   753     001F                     	;# 
   754     008C                     	;# 
   755     008D                     	;# 
   756     0091                     	;# 
   757     0092                     	;# 
   758     0093                     	;# 
   759     0094                     	;# 
   760     0095                     	;# 
   761     0096                     	;# 
   762     0097                     	;# 
   763     0098                     	;# 
   764     0099                     	;# 
   765     009A                     	;# 
   766     009B                     	;# 
   767     009B                     	;# 
   768     009C                     	;# 
   769     009D                     	;# 
   770     009E                     	;# 
   771     010C                     	;# 
   772     010D                     	;# 
   773     0111                     	;# 
   774     0112                     	;# 
   775     0113                     	;# 
   776     0114                     	;# 
   777     0115                     	;# 
   778     0116                     	;# 
   779     0117                     	;# 
   780     0118                     	;# 
   781     0119                     	;# 
   782     011A                     	;# 
   783     011B                     	;# 
   784     011D                     	;# 
   785     011E                     	;# 
   786     018C                     	;# 
   787     018D                     	;# 
   788     0191                     	;# 
   789     0191                     	;# 
   790     0192                     	;# 
   791     0193                     	;# 
   792     0193                     	;# 
   793     0193                     	;# 
   794     0194                     	;# 
   795     0195                     	;# 
   796     0196                     	;# 
   797     0199                     	;# 
   798     019A                     	;# 
   799     019B                     	;# 
   800     019B                     	;# 
   801     019B                     	;# 
   802     019B                     	;# 
   803     019C                     	;# 
   804     019C                     	;# 
   805     019D                     	;# 
   806     019E                     	;# 
   807     019F                     	;# 
   808     020C                     	;# 
   809     020D                     	;# 
   810     0211                     	;# 
   811     0211                     	;# 
   812     0212                     	;# 
   813     0212                     	;# 
   814     0213                     	;# 
   815     0213                     	;# 
   816     0214                     	;# 
   817     0214                     	;# 
   818     0215                     	;# 
   819     0215                     	;# 
   820     0215                     	;# 
   821     0216                     	;# 
   822     0216                     	;# 
   823     0217                     	;# 
   824     0217                     	;# 
   825     0219                     	;# 
   826     021A                     	;# 
   827     021B                     	;# 
   828     021C                     	;# 
   829     021D                     	;# 
   830     021E                     	;# 
   831     021F                     	;# 
   832     0291                     	;# 
   833     0291                     	;# 
   834     0292                     	;# 
   835     0293                     	;# 
   836     0294                     	;# 
   837     0295                     	;# 
   838     0295                     	;# 
   839     0296                     	;# 
   840     0298                     	;# 
   841     0298                     	;# 
   842     0299                     	;# 
   843     029A                     	;# 
   844     029B                     	;# 
   845     029C                     	;# 
   846     029C                     	;# 
   847     029D                     	;# 
   848     029E                     	;# 
   849     029E                     	;# 
   850     0311                     	;# 
   851     0311                     	;# 
   852     0312                     	;# 
   853     0313                     	;# 
   854     0318                     	;# 
   855     0318                     	;# 
   856     0319                     	;# 
   857     031A                     	;# 
   858     0394                     	;# 
   859     0395                     	;# 
   860     0396                     	;# 
   861     039A                     	;# 
   862     039C                     	;# 
   863     039D                     	;# 
   864     039E                     	;# 
   865     039F                     	;# 
   866     0415                     	;# 
   867     0416                     	;# 
   868     0417                     	;# 
   869     041C                     	;# 
   870     041D                     	;# 
   871     041E                     	;# 
   872     0FE4                     	;# 
   873     0FE5                     	;# 
   874     0FE6                     	;# 
   875     0FE7                     	;# 
   876     0FE8                     	;# 
   877     0FE9                     	;# 
   878     0FEA                     	;# 
   879     0FEB                     	;# 
   880     0FED                     	;# 
   881     0FEE                     	;# 
   882     0FEF                     	;# 
   883     0000                     	;# 
   884     0001                     	;# 
   885     0002                     	;# 
   886     0003                     	;# 
   887     0004                     	;# 
   888     0005                     	;# 
   889     0006                     	;# 
   890     0007                     	;# 
   891     0008                     	;# 
   892     0009                     	;# 
   893     000A                     	;# 
   894     000B                     	;# 
   895     000C                     	;# 
   896     000D                     	;# 
   897     0011                     	;# 
   898     0012                     	;# 
   899     0013                     	;# 
   900     0014                     	;# 
   901     0015                     	;# 
   902     0016                     	;# 
   903     0016                     	;# 
   904     0017                     	;# 
   905     0018                     	;# 
   906     0019                     	;# 
   907     001A                     	;# 
   908     001B                     	;# 
   909     001C                     	;# 
   910     001E                     	;# 
   911     001F                     	;# 
   912     008C                     	;# 
   913     008D                     	;# 
   914     0091                     	;# 
   915     0092                     	;# 
   916     0093                     	;# 
   917     0094                     	;# 
   918     0095                     	;# 
   919     0096                     	;# 
   920     0097                     	;# 
   921     0098                     	;# 
   922     0099                     	;# 
   923     009A                     	;# 
   924     009B                     	;# 
   925     009B                     	;# 
   926     009C                     	;# 
   927     009D                     	;# 
   928     009E                     	;# 
   929     010C                     	;# 
   930     010D                     	;# 
   931     0111                     	;# 
   932     0112                     	;# 
   933     0113                     	;# 
   934     0114                     	;# 
   935     0115                     	;# 
   936     0116                     	;# 
   937     0117                     	;# 
   938     0118                     	;# 
   939     0119                     	;# 
   940     011A                     	;# 
   941     011B                     	;# 
   942     011D                     	;# 
   943     011E                     	;# 
   944     018C                     	;# 
   945     018D                     	;# 
   946     0191                     	;# 
   947     0191                     	;# 
   948     0192                     	;# 
   949     0193                     	;# 
   950     0193                     	;# 
   951     0193                     	;# 
   952     0194                     	;# 
   953     0195                     	;# 
   954     0196                     	;# 
   955     0199                     	;# 
   956     019A                     	;# 
   957     019B                     	;# 
   958     019B                     	;# 
   959     019B                     	;# 
   960     019B                     	;# 
   961     019C                     	;# 
   962     019C                     	;# 
   963     019D                     	;# 
   964     019E                     	;# 
   965     019F                     	;# 
   966     020C                     	;# 
   967     020D                     	;# 
   968     0211                     	;# 
   969     0211                     	;# 
   970     0212                     	;# 
   971     0212                     	;# 
   972     0213                     	;# 
   973     0213                     	;# 
   974     0214                     	;# 
   975     0214                     	;# 
   976     0215                     	;# 
   977     0215                     	;# 
   978     0215                     	;# 
   979     0216                     	;# 
   980     0216                     	;# 
   981     0217                     	;# 
   982     0217                     	;# 
   983     0219                     	;# 
   984     021A                     	;# 
   985     021B                     	;# 
   986     021C                     	;# 
   987     021D                     	;# 
   988     021E                     	;# 
   989     021F                     	;# 
   990     0291                     	;# 
   991     0291                     	;# 
   992     0292                     	;# 
   993     0293                     	;# 
   994     0294                     	;# 
   995     0295                     	;# 
   996     0295                     	;# 
   997     0296                     	;# 
   998     0298                     	;# 
   999     0298                     	;# 
  1000     0299                     	;# 
  1001     029A                     	;# 
  1002     029B                     	;# 
  1003     029C                     	;# 
  1004     029C                     	;# 
  1005     029D                     	;# 
  1006     029E                     	;# 
  1007     029E                     	;# 
  1008     0311                     	;# 
  1009     0311                     	;# 
  1010     0312                     	;# 
  1011     0313                     	;# 
  1012     0318                     	;# 
  1013     0318                     	;# 
  1014     0319                     	;# 
  1015     031A                     	;# 
  1016     0394                     	;# 
  1017     0395                     	;# 
  1018     0396                     	;# 
  1019     039A                     	;# 
  1020     039C                     	;# 
  1021     039D                     	;# 
  1022     039E                     	;# 
  1023     039F                     	;# 
  1024     0415                     	;# 
  1025     0416                     	;# 
  1026     0417                     	;# 
  1027     041C                     	;# 
  1028     041D                     	;# 
  1029     041E                     	;# 
  1030     0FE4                     	;# 
  1031     0FE5                     	;# 
  1032     0FE6                     	;# 
  1033     0FE7                     	;# 
  1034     0FE8                     	;# 
  1035     0FE9                     	;# 
  1036     0FEA                     	;# 
  1037     0FEB                     	;# 
  1038     0FED                     	;# 
  1039     0FEE                     	;# 
  1040     0FEF                     	;# 
  1041     0000                     	;# 
  1042     0001                     	;# 
  1043     0002                     	;# 
  1044     0003                     	;# 
  1045     0004                     	;# 
  1046     0005                     	;# 
  1047     0006                     	;# 
  1048     0007                     	;# 
  1049     0008                     	;# 
  1050     0009                     	;# 
  1051     000A                     	;# 
  1052     000B                     	;# 
  1053     000C                     	;# 
  1054     000D                     	;# 
  1055     0011                     	;# 
  1056     0012                     	;# 
  1057     0013                     	;# 
  1058     0014                     	;# 
  1059     0015                     	;# 
  1060     0016                     	;# 
  1061     0016                     	;# 
  1062     0017                     	;# 
  1063     0018                     	;# 
  1064     0019                     	;# 
  1065     001A                     	;# 
  1066     001B                     	;# 
  1067     001C                     	;# 
  1068     001E                     	;# 
  1069     001F                     	;# 
  1070     008C                     	;# 
  1071     008D                     	;# 
  1072     0091                     	;# 
  1073     0092                     	;# 
  1074     0093                     	;# 
  1075     0094                     	;# 
  1076     0095                     	;# 
  1077     0096                     	;# 
  1078     0097                     	;# 
  1079     0098                     	;# 
  1080     0099                     	;# 
  1081     009A                     	;# 
  1082     009B                     	;# 
  1083     009B                     	;# 
  1084     009C                     	;# 
  1085     009D                     	;# 
  1086     009E                     	;# 
  1087     010C                     	;# 
  1088     010D                     	;# 
  1089     0111                     	;# 
  1090     0112                     	;# 
  1091     0113                     	;# 
  1092     0114                     	;# 
  1093     0115                     	;# 
  1094     0116                     	;# 
  1095     0117                     	;# 
  1096     0118                     	;# 
  1097     0119                     	;# 
  1098     011A                     	;# 
  1099     011B                     	;# 
  1100     011D                     	;# 
  1101     011E                     	;# 
  1102     018C                     	;# 
  1103     018D                     	;# 
  1104     0191                     	;# 
  1105     0191                     	;# 
  1106     0192                     	;# 
  1107     0193                     	;# 
  1108     0193                     	;# 
  1109     0193                     	;# 
  1110     0194                     	;# 
  1111     0195                     	;# 
  1112     0196                     	;# 
  1113     0199                     	;# 
  1114     019A                     	;# 
  1115     019B                     	;# 
  1116     019B                     	;# 
  1117     019B                     	;# 
  1118     019B                     	;# 
  1119     019C                     	;# 
  1120     019C                     	;# 
  1121     019D                     	;# 
  1122     019E                     	;# 
  1123     019F                     	;# 
  1124     020C                     	;# 
  1125     020D                     	;# 
  1126     0211                     	;# 
  1127     0211                     	;# 
  1128     0212                     	;# 
  1129     0212                     	;# 
  1130     0213                     	;# 
  1131     0213                     	;# 
  1132     0214                     	;# 
  1133     0214                     	;# 
  1134     0215                     	;# 
  1135     0215                     	;# 
  1136     0215                     	;# 
  1137     0216                     	;# 
  1138     0216                     	;# 
  1139     0217                     	;# 
  1140     0217                     	;# 
  1141     0219                     	;# 
  1142     021A                     	;# 
  1143     021B                     	;# 
  1144     021C                     	;# 
  1145     021D                     	;# 
  1146     021E                     	;# 
  1147     021F                     	;# 
  1148     0291                     	;# 
  1149     0291                     	;# 
  1150     0292                     	;# 
  1151     0293                     	;# 
  1152     0294                     	;# 
  1153     0295                     	;# 
  1154     0295                     	;# 
  1155     0296                     	;# 
  1156     0298                     	;# 
  1157     0298                     	;# 
  1158     0299                     	;# 
  1159     029A                     	;# 
  1160     029B                     	;# 
  1161     029C                     	;# 
  1162     029C                     	;# 
  1163     029D                     	;# 
  1164     029E                     	;# 
  1165     029E                     	;# 
  1166     0311                     	;# 
  1167     0311                     	;# 
  1168     0312                     	;# 
  1169     0313                     	;# 
  1170     0318                     	;# 
  1171     0318                     	;# 
  1172     0319                     	;# 
  1173     031A                     	;# 
  1174     0394                     	;# 
  1175     0395                     	;# 
  1176     0396                     	;# 
  1177     039A                     	;# 
  1178     039C                     	;# 
  1179     039D                     	;# 
  1180     039E                     	;# 
  1181     039F                     	;# 
  1182     0415                     	;# 
  1183     0416                     	;# 
  1184     0417                     	;# 
  1185     041C                     	;# 
  1186     041D                     	;# 
  1187     041E                     	;# 
  1188     0FE4                     	;# 
  1189     0FE5                     	;# 
  1190     0FE6                     	;# 
  1191     0FE7                     	;# 
  1192     0FE8                     	;# 
  1193     0FE9                     	;# 
  1194     0FEA                     	;# 
  1195     0FEB                     	;# 
  1196     0FED                     	;# 
  1197     0FEE                     	;# 
  1198     0FEF                     	;# 
  1199     0000                     	;# 
  1200     0001                     	;# 
  1201     0002                     	;# 
  1202     0003                     	;# 
  1203     0004                     	;# 
  1204     0005                     	;# 
  1205     0006                     	;# 
  1206     0007                     	;# 
  1207     0008                     	;# 
  1208     0009                     	;# 
  1209     000A                     	;# 
  1210     000B                     	;# 
  1211     000C                     	;# 
  1212     000D                     	;# 
  1213     0011                     	;# 
  1214     0012                     	;# 
  1215     0013                     	;# 
  1216     0014                     	;# 
  1217     0015                     	;# 
  1218     0016                     	;# 
  1219     0016                     	;# 
  1220     0017                     	;# 
  1221     0018                     	;# 
  1222     0019                     	;# 
  1223     001A                     	;# 
  1224     001B                     	;# 
  1225     001C                     	;# 
  1226     001E                     	;# 
  1227     001F                     	;# 
  1228     008C                     	;# 
  1229     008D                     	;# 
  1230     0091                     	;# 
  1231     0092                     	;# 
  1232     0093                     	;# 
  1233     0094                     	;# 
  1234     0095                     	;# 
  1235     0096                     	;# 
  1236     0097                     	;# 
  1237     0098                     	;# 
  1238     0099                     	;# 
  1239     009A                     	;# 
  1240     009B                     	;# 
  1241     009B                     	;# 
  1242     009C                     	;# 
  1243     009D                     	;# 
  1244     009E                     	;# 
  1245     010C                     	;# 
  1246     010D                     	;# 
  1247     0111                     	;# 
  1248     0112                     	;# 
  1249     0113                     	;# 
  1250     0114                     	;# 
  1251     0115                     	;# 
  1252     0116                     	;# 
  1253     0117                     	;# 
  1254     0118                     	;# 
  1255     0119                     	;# 
  1256     011A                     	;# 
  1257     011B                     	;# 
  1258     011D                     	;# 
  1259     011E                     	;# 
  1260     018C                     	;# 
  1261     018D                     	;# 
  1262     0191                     	;# 
  1263     0191                     	;# 
  1264     0192                     	;# 
  1265     0193                     	;# 
  1266     0193                     	;# 
  1267     0193                     	;# 
  1268     0194                     	;# 
  1269     0195                     	;# 
  1270     0196                     	;# 
  1271     0199                     	;# 
  1272     019A                     	;# 
  1273     019B                     	;# 
  1274     019B                     	;# 
  1275     019B                     	;# 
  1276     019B                     	;# 
  1277     019C                     	;# 
  1278     019C                     	;# 
  1279     019D                     	;# 
  1280     019E                     	;# 
  1281     019F                     	;# 
  1282     020C                     	;# 
  1283     020D                     	;# 
  1284     0211                     	;# 
  1285     0211                     	;# 
  1286     0212                     	;# 
  1287     0212                     	;# 
  1288     0213                     	;# 
  1289     0213                     	;# 
  1290     0214                     	;# 
  1291     0214                     	;# 
  1292     0215                     	;# 
  1293     0215                     	;# 
  1294     0215                     	;# 
  1295     0216                     	;# 
  1296     0216                     	;# 
  1297     0217                     	;# 
  1298     0217                     	;# 
  1299     0219                     	;# 
  1300     021A                     	;# 
  1301     021B                     	;# 
  1302     021C                     	;# 
  1303     021D                     	;# 
  1304     021E                     	;# 
  1305     021F                     	;# 
  1306     0291                     	;# 
  1307     0291                     	;# 
  1308     0292                     	;# 
  1309     0293                     	;# 
  1310     0294                     	;# 
  1311     0295                     	;# 
  1312     0295                     	;# 
  1313     0296                     	;# 
  1314     0298                     	;# 
  1315     0298                     	;# 
  1316     0299                     	;# 
  1317     029A                     	;# 
  1318     029B                     	;# 
  1319     029C                     	;# 
  1320     029C                     	;# 
  1321     029D                     	;# 
  1322     029E                     	;# 
  1323     029E                     	;# 
  1324     0311                     	;# 
  1325     0311                     	;# 
  1326     0312                     	;# 
  1327     0313                     	;# 
  1328     0318                     	;# 
  1329     0318                     	;# 
  1330     0319                     	;# 
  1331     031A                     	;# 
  1332     0394                     	;# 
  1333     0395                     	;# 
  1334     0396                     	;# 
  1335     039A                     	;# 
  1336     039C                     	;# 
  1337     039D                     	;# 
  1338     039E                     	;# 
  1339     039F                     	;# 
  1340     0415                     	;# 
  1341     0416                     	;# 
  1342     0417                     	;# 
  1343     041C                     	;# 
  1344     041D                     	;# 
  1345     041E                     	;# 
  1346     0FE4                     	;# 
  1347     0FE5                     	;# 
  1348     0FE6                     	;# 
  1349     0FE7                     	;# 
  1350     0FE8                     	;# 
  1351     0FE9                     	;# 
  1352     0FEA                     	;# 
  1353     0FEB                     	;# 
  1354     0FED                     	;# 
  1355     0FEE                     	;# 
  1356     0FEF                     	;# 
  1357     0000                     	;# 
  1358     0001                     	;# 
  1359     0002                     	;# 
  1360     0003                     	;# 
  1361     0004                     	;# 
  1362     0005                     	;# 
  1363     0006                     	;# 
  1364     0007                     	;# 
  1365     0008                     	;# 
  1366     0009                     	;# 
  1367     000A                     	;# 
  1368     000B                     	;# 
  1369     000C                     	;# 
  1370     000D                     	;# 
  1371     0011                     	;# 
  1372     0012                     	;# 
  1373     0013                     	;# 
  1374     0014                     	;# 
  1375     0015                     	;# 
  1376     0016                     	;# 
  1377     0016                     	;# 
  1378     0017                     	;# 
  1379     0018                     	;# 
  1380     0019                     	;# 
  1381     001A                     	;# 
  1382     001B                     	;# 
  1383     001C                     	;# 
  1384     001E                     	;# 
  1385     001F                     	;# 
  1386     008C                     	;# 
  1387     008D                     	;# 
  1388     0091                     	;# 
  1389     0092                     	;# 
  1390     0093                     	;# 
  1391     0094                     	;# 
  1392     0095                     	;# 
  1393     0096                     	;# 
  1394     0097                     	;# 
  1395     0098                     	;# 
  1396     0099                     	;# 
  1397     009A                     	;# 
  1398     009B                     	;# 
  1399     009B                     	;# 
  1400     009C                     	;# 
  1401     009D                     	;# 
  1402     009E                     	;# 
  1403     010C                     	;# 
  1404     010D                     	;# 
  1405     0111                     	;# 
  1406     0112                     	;# 
  1407     0113                     	;# 
  1408     0114                     	;# 
  1409     0115                     	;# 
  1410     0116                     	;# 
  1411     0117                     	;# 
  1412     0118                     	;# 
  1413     0119                     	;# 
  1414     011A                     	;# 
  1415     011B                     	;# 
  1416     011D                     	;# 
  1417     011E                     	;# 
  1418     018C                     	;# 
  1419     018D                     	;# 
  1420     0191                     	;# 
  1421     0191                     	;# 
  1422     0192                     	;# 
  1423     0193                     	;# 
  1424     0193                     	;# 
  1425     0193                     	;# 
  1426     0194                     	;# 
  1427     0195                     	;# 
  1428     0196                     	;# 
  1429     0199                     	;# 
  1430     019A                     	;# 
  1431     019B                     	;# 
  1432     019B                     	;# 
  1433     019B                     	;# 
  1434     019B                     	;# 
  1435     019C                     	;# 
  1436     019C                     	;# 
  1437     019D                     	;# 
  1438     019E                     	;# 
  1439     019F                     	;# 
  1440     020C                     	;# 
  1441     020D                     	;# 
  1442     0211                     	;# 
  1443     0211                     	;# 
  1444     0212                     	;# 
  1445     0212                     	;# 
  1446     0213                     	;# 
  1447     0213                     	;# 
  1448     0214                     	;# 
  1449     0214                     	;# 
  1450     0215                     	;# 
  1451     0215                     	;# 
  1452     0215                     	;# 
  1453     0216                     	;# 
  1454     0216                     	;# 
  1455     0217                     	;# 
  1456     0217                     	;# 
  1457     0219                     	;# 
  1458     021A                     	;# 
  1459     021B                     	;# 
  1460     021C                     	;# 
  1461     021D                     	;# 
  1462     021E                     	;# 
  1463     021F                     	;# 
  1464     0291                     	;# 
  1465     0291                     	;# 
  1466     0292                     	;# 
  1467     0293                     	;# 
  1468     0294                     	;# 
  1469     0295                     	;# 
  1470     0295                     	;# 
  1471     0296                     	;# 
  1472     0298                     	;# 
  1473     0298                     	;# 
  1474     0299                     	;# 
  1475     029A                     	;# 
  1476     029B                     	;# 
  1477     029C                     	;# 
  1478     029C                     	;# 
  1479     029D                     	;# 
  1480     029E                     	;# 
  1481     029E                     	;# 
  1482     0311                     	;# 
  1483     0311                     	;# 
  1484     0312                     	;# 
  1485     0313                     	;# 
  1486     0318                     	;# 
  1487     0318                     	;# 
  1488     0319                     	;# 
  1489     031A                     	;# 
  1490     0394                     	;# 
  1491     0395                     	;# 
  1492     0396                     	;# 
  1493     039A                     	;# 
  1494     039C                     	;# 
  1495     039D                     	;# 
  1496     039E                     	;# 
  1497     039F                     	;# 
  1498     0415                     	;# 
  1499     0416                     	;# 
  1500     0417                     	;# 
  1501     041C                     	;# 
  1502     041D                     	;# 
  1503     041E                     	;# 
  1504     0FE4                     	;# 
  1505     0FE5                     	;# 
  1506     0FE6                     	;# 
  1507     0FE7                     	;# 
  1508     0FE8                     	;# 
  1509     0FE9                     	;# 
  1510     0FEA                     	;# 
  1511     0FEB                     	;# 
  1512     0FED                     	;# 
  1513     0FEE                     	;# 
  1514     0FEF                     	;# 
  1515     0000                     	;# 
  1516     0001                     	;# 
  1517     0002                     	;# 
  1518     0003                     	;# 
  1519     0004                     	;# 
  1520     0005                     	;# 
  1521     0006                     	;# 
  1522     0007                     	;# 
  1523     0008                     	;# 
  1524     0009                     	;# 
  1525     000A                     	;# 
  1526     000B                     	;# 
  1527     000C                     	;# 
  1528     000D                     	;# 
  1529     0011                     	;# 
  1530     0012                     	;# 
  1531     0013                     	;# 
  1532     0014                     	;# 
  1533     0015                     	;# 
  1534     0016                     	;# 
  1535     0016                     	;# 
  1536     0017                     	;# 
  1537     0018                     	;# 
  1538     0019                     	;# 
  1539     001A                     	;# 
  1540     001B                     	;# 
  1541     001C                     	;# 
  1542     001E                     	;# 
  1543     001F                     	;# 
  1544     008C                     	;# 
  1545     008D                     	;# 
  1546     0091                     	;# 
  1547     0092                     	;# 
  1548     0093                     	;# 
  1549     0094                     	;# 
  1550     0095                     	;# 
  1551     0096                     	;# 
  1552     0097                     	;# 
  1553     0098                     	;# 
  1554     0099                     	;# 
  1555     009A                     	;# 
  1556     009B                     	;# 
  1557     009B                     	;# 
  1558     009C                     	;# 
  1559     009D                     	;# 
  1560     009E                     	;# 
  1561     010C                     	;# 
  1562     010D                     	;# 
  1563     0111                     	;# 
  1564     0112                     	;# 
  1565     0113                     	;# 
  1566     0114                     	;# 
  1567     0115                     	;# 
  1568     0116                     	;# 
  1569     0117                     	;# 
  1570     0118                     	;# 
  1571     0119                     	;# 
  1572     011A                     	;# 
  1573     011B                     	;# 
  1574     011D                     	;# 
  1575     011E                     	;# 
  1576     018C                     	;# 
  1577     018D                     	;# 
  1578     0191                     	;# 
  1579     0191                     	;# 
  1580     0192                     	;# 
  1581     0193                     	;# 
  1582     0193                     	;# 
  1583     0193                     	;# 
  1584     0194                     	;# 
  1585     0195                     	;# 
  1586     0196                     	;# 
  1587     0199                     	;# 
  1588     019A                     	;# 
  1589     019B                     	;# 
  1590     019B                     	;# 
  1591     019B                     	;# 
  1592     019B                     	;# 
  1593     019C                     	;# 
  1594     019C                     	;# 
  1595     019D                     	;# 
  1596     019E                     	;# 
  1597     019F                     	;# 
  1598     020C                     	;# 
  1599     020D                     	;# 
  1600     0211                     	;# 
  1601     0211                     	;# 
  1602     0212                     	;# 
  1603     0212                     	;# 
  1604     0213                     	;# 
  1605     0213                     	;# 
  1606     0214                     	;# 
  1607     0214                     	;# 
  1608     0215                     	;# 
  1609     0215                     	;# 
  1610     0215                     	;# 
  1611     0216                     	;# 
  1612     0216                     	;# 
  1613     0217                     	;# 
  1614     0217                     	;# 
  1615     0219                     	;# 
  1616     021A                     	;# 
  1617     021B                     	;# 
  1618     021C                     	;# 
  1619     021D                     	;# 
  1620     021E                     	;# 
  1621     021F                     	;# 
  1622     0291                     	;# 
  1623     0291                     	;# 
  1624     0292                     	;# 
  1625     0293                     	;# 
  1626     0294                     	;# 
  1627     0295                     	;# 
  1628     0295                     	;# 
  1629     0296                     	;# 
  1630     0298                     	;# 
  1631     0298                     	;# 
  1632     0299                     	;# 
  1633     029A                     	;# 
  1634     029B                     	;# 
  1635     029C                     	;# 
  1636     029C                     	;# 
  1637     029D                     	;# 
  1638     029E                     	;# 
  1639     029E                     	;# 
  1640     0311                     	;# 
  1641     0311                     	;# 
  1642     0312                     	;# 
  1643     0313                     	;# 
  1644     0318                     	;# 
  1645     0318                     	;# 
  1646     0319                     	;# 
  1647     031A                     	;# 
  1648     0394                     	;# 
  1649     0395                     	;# 
  1650     0396                     	;# 
  1651     039A                     	;# 
  1652     039C                     	;# 
  1653     039D                     	;# 
  1654     039E                     	;# 
  1655     039F                     	;# 
  1656     0415                     	;# 
  1657     0416                     	;# 
  1658     0417                     	;# 
  1659     041C                     	;# 
  1660     041D                     	;# 
  1661     041E                     	;# 
  1662     0FE4                     	;# 
  1663     0FE5                     	;# 
  1664     0FE6                     	;# 
  1665     0FE7                     	;# 
  1666     0FE8                     	;# 
  1667     0FE9                     	;# 
  1668     0FEA                     	;# 
  1669     0FEB                     	;# 
  1670     0FED                     	;# 
  1671     0FEE                     	;# 
  1672     0FEF                     	;# 
  1673     0000                     	;# 
  1674     0001                     	;# 
  1675     0002                     	;# 
  1676     0003                     	;# 
  1677     0004                     	;# 
  1678     0005                     	;# 
  1679     0006                     	;# 
  1680     0007                     	;# 
  1681     0008                     	;# 
  1682     0009                     	;# 
  1683     000A                     	;# 
  1684     000B                     	;# 
  1685     000C                     	;# 
  1686     000D                     	;# 
  1687     0011                     	;# 
  1688     0012                     	;# 
  1689     0013                     	;# 
  1690     0014                     	;# 
  1691     0015                     	;# 
  1692     0016                     	;# 
  1693     0016                     	;# 
  1694     0017                     	;# 
  1695     0018                     	;# 
  1696     0019                     	;# 
  1697     001A                     	;# 
  1698     001B                     	;# 
  1699     001C                     	;# 
  1700     001E                     	;# 
  1701     001F                     	;# 
  1702     008C                     	;# 
  1703     008D                     	;# 
  1704     0091                     	;# 
  1705     0092                     	;# 
  1706     0093                     	;# 
  1707     0094                     	;# 
  1708     0095                     	;# 
  1709     0096                     	;# 
  1710     0097                     	;# 
  1711     0098                     	;# 
  1712     0099                     	;# 
  1713     009A                     	;# 
  1714     009B                     	;# 
  1715     009B                     	;# 
  1716     009C                     	;# 
  1717     009D                     	;# 
  1718     009E                     	;# 
  1719     010C                     	;# 
  1720     010D                     	;# 
  1721     0111                     	;# 
  1722     0112                     	;# 
  1723     0113                     	;# 
  1724     0114                     	;# 
  1725     0115                     	;# 
  1726     0116                     	;# 
  1727     0117                     	;# 
  1728     0118                     	;# 
  1729     0119                     	;# 
  1730     011A                     	;# 
  1731     011B                     	;# 
  1732     011D                     	;# 
  1733     011E                     	;# 
  1734     018C                     	;# 
  1735     018D                     	;# 
  1736     0191                     	;# 
  1737     0191                     	;# 
  1738     0192                     	;# 
  1739     0193                     	;# 
  1740     0193                     	;# 
  1741     0193                     	;# 
  1742     0194                     	;# 
  1743     0195                     	;# 
  1744     0196                     	;# 
  1745     0199                     	;# 
  1746     019A                     	;# 
  1747     019B                     	;# 
  1748     019B                     	;# 
  1749     019B                     	;# 
  1750     019B                     	;# 
  1751     019C                     	;# 
  1752     019C                     	;# 
  1753     019D                     	;# 
  1754     019E                     	;# 
  1755     019F                     	;# 
  1756     020C                     	;# 
  1757     020D                     	;# 
  1758     0211                     	;# 
  1759     0211                     	;# 
  1760     0212                     	;# 
  1761     0212                     	;# 
  1762     0213                     	;# 
  1763     0213                     	;# 
  1764     0214                     	;# 
  1765     0214                     	;# 
  1766     0215                     	;# 
  1767     0215                     	;# 
  1768     0215                     	;# 
  1769     0216                     	;# 
  1770     0216                     	;# 
  1771     0217                     	;# 
  1772     0217                     	;# 
  1773     0219                     	;# 
  1774     021A                     	;# 
  1775     021B                     	;# 
  1776     021C                     	;# 
  1777     021D                     	;# 
  1778     021E                     	;# 
  1779     021F                     	;# 
  1780     0291                     	;# 
  1781     0291                     	;# 
  1782     0292                     	;# 
  1783     0293                     	;# 
  1784     0294                     	;# 
  1785     0295                     	;# 
  1786     0295                     	;# 
  1787     0296                     	;# 
  1788     0298                     	;# 
  1789     0298                     	;# 
  1790     0299                     	;# 
  1791     029A                     	;# 
  1792     029B                     	;# 
  1793     029C                     	;# 
  1794     029C                     	;# 
  1795     029D                     	;# 
  1796     029E                     	;# 
  1797     029E                     	;# 
  1798     0311                     	;# 
  1799     0311                     	;# 
  1800     0312                     	;# 
  1801     0313                     	;# 
  1802     0318                     	;# 
  1803     0318                     	;# 
  1804     0319                     	;# 
  1805     031A                     	;# 
  1806     0394                     	;# 
  1807     0395                     	;# 
  1808     0396                     	;# 
  1809     039A                     	;# 
  1810     039C                     	;# 
  1811     039D                     	;# 
  1812     039E                     	;# 
  1813     039F                     	;# 
  1814     0415                     	;# 
  1815     0416                     	;# 
  1816     0417                     	;# 
  1817     041C                     	;# 
  1818     041D                     	;# 
  1819     041E                     	;# 
  1820     0FE4                     	;# 
  1821     0FE5                     	;# 
  1822     0FE6                     	;# 
  1823     0FE7                     	;# 
  1824     0FE8                     	;# 
  1825     0FE9                     	;# 
  1826     0FEA                     	;# 
  1827     0FEB                     	;# 
  1828     0FED                     	;# 
  1829     0FEE                     	;# 
  1830     0FEF                     	;# 
  1831                           
  1832 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  1833     0000                     
  1834 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  1835     0000                     
  1836 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  1837     0000                     
  1838                           	psect	idataBANK1
  1839     0D27                     __pidataBANK1:
  1840                           
  1841                           ;initializer for _mapping
  1842     0D27  340B               	retlw	11
  1843     0D28  340F               	retlw	15
  1844     0D29  3403               	retlw	3
  1845     0D2A  3404               	retlw	4
  1846     0D2B  3405               	retlw	5
  1847     0D2C  3401               	retlw	1
  1848     0D2D  340D               	retlw	13
  1849     0D2E  340C               	retlw	12
  1850                           
  1851                           	psect	stringtext1
  1852     0800                     __pstringtext1:
  1853     0800                     _de_sigmoidValues:
  1854     0800  3440               	retlw	64
  1855     0801  3432               	retlw	50
  1856     0802  341B               	retlw	27
  1857     0803  340C               	retlw	12
  1858     0804  3405               	retlw	5
  1859     0805  3402               	retlw	2
  1860     0806  3401               	retlw	1
  1861     0807  3400               	retlw	0
  1862     0808  3400               	retlw	0
  1863     0809  3400               	retlw	0
  1864     080A  3401               	retlw	1
  1865     080B  3402               	retlw	2
  1866     080C  3405               	retlw	5
  1867     080D  340C               	retlw	12
  1868     080E  341B               	retlw	27
  1869     080F  3432               	retlw	50
  1870     0810                     __end_of_de_sigmoidValues:
  1871                           
  1872                           	psect	stringtext2
  1873     0810                     __pstringtext2:
  1874     0810                     _sigmoidValues:
  1875     0810  3480               	retlw	128
  1876     0811  34BA               	retlw	186
  1877     0812  34E1               	retlw	225
  1878     0813  34F3               	retlw	243
  1879     0814  34FA               	retlw	250
  1880     0815  34FD               	retlw	253
  1881     0816  34FE               	retlw	254
  1882     0817  34FF               	retlw	255
  1883     0818  3400               	retlw	0
  1884     0819  3400               	retlw	0
  1885     081A  3401               	retlw	1
  1886     081B  3402               	retlw	2
  1887     081C  3405               	retlw	5
  1888     081D  340C               	retlw	12
  1889     081E  341E               	retlw	30
  1890     081F  3445               	retlw	69
  1891     0820                     __end_of_sigmoidValues:
  1892                           
  1893                           	psect	stringtext3
  1894     0820                     __pstringtext3:
  1895     0820                     _spi1_configuration:
  1896     0820  3402               	retlw	2
  1897     0821  3440               	retlw	64
  1898     0822  3401               	retlw	1
  1899     0823  3400               	retlw	0
  1900     0824                     __end_of_spi1_configuration:
  1901                           
  1902                           	psect	nvBANK1
  1903     00E8                     __pnvBANK1:
  1904     00E8                     _EUSART_ErrorHandler:
  1905     00E8                     	ds	2
  1906     00EA                     _EUSART_OverrunErrorHandler:
  1907     00EA                     	ds	2
  1908     00EC                     _EUSART_FramingErrorHandler:
  1909     00EC                     	ds	2
  1910     0011                     _PIR1bits	set	17
  1911     000B                     _INTCONbits	set	11
  1912     008C                     _TRISAbits	set	140
  1913     0097                     _WDTCON	set	151
  1914     0098                     _OSCTUNE	set	152
  1915     0099                     _OSCCON	set	153
  1916     008D                     _TRISBbits	set	141
  1917     0095                     _OPTION_REGbits	set	149
  1918     008D                     _TRISB	set	141
  1919     008C                     _TRISA	set	140
  1920     010D                     _LATBbits	set	269
  1921     010C                     _LATAbits	set	268
  1922     0116                     _BORCON	set	278
  1923     011E                     _APFCON1	set	286
  1924     011D                     _APFCON0	set	285
  1925     010D                     _LATB	set	269
  1926     010C                     _LATA	set	268
  1927     018C                     _ANSELA	set	396
  1928     018D                     _ANSELB	set	397
  1929     019A                     _TXREG	set	410
  1930     0199                     _RCREG	set	409
  1931     019D                     _RCSTAbits	set	413
  1932     019E                     _TXSTAbits	set	414
  1933     019C                     _SPBRGH	set	412
  1934     019B                     _SPBRGL	set	411
  1935     019E                     _TXSTA	set	414
  1936     019D                     _RCSTA	set	413
  1937     019F                     _BAUDCON	set	415
  1938     0196                     _EECON2	set	406
  1939     0193                     _EEDATL	set	403
  1940     0194                     _EEDATH	set	404
  1941     0195                     _EECON1bits	set	405
  1942     0192                     _EEADRH	set	402
  1943     0191                     _EEADRL	set	401
  1944     0211                     _SSP1BUF	set	529
  1945     0216                     _SSP1CON2	set	534
  1946     0215                     _SSP1CON1bits	set	533
  1947     0212                     _SSP1ADD	set	530
  1948     0215                     _SSP1CON1	set	533
  1949     0214                     _SSP1STAT	set	532
  1950     020C                     _WPUA	set	524
  1951     020D                     _WPUB	set	525
  1952                           
  1953                           	psect	cinit
  1954     07D1                     start_initialization:	
  1955                           ; #config settings
  1956                           
  1957     07D1                     __initialization:
  1958                           
  1959                           ; Initialize objects allocated to BANK1
  1960     07D1  3027               	movlw	low __pidataBANK1
  1961     07D2  0084               	movwf	4
  1962     07D3  308D               	movlw	(high __pidataBANK1)| (0+128)
  1963     07D4  0085               	movwf	5
  1964     07D5  30E0               	movlw	low __pdataBANK1
  1965     07D6  0086               	movwf	6
  1966     07D7  3000               	movlw	high __pdataBANK1
  1967     07D8  0087               	movwf	7
  1968     07D9  3008               	movlw	8
  1969     07DA  318D  251A  3187   	fcall	init_ram
  1970                           
  1971                           ; Clear objects allocated to BANK0
  1972     07DD  3049               	movlw	low __pbssBANK0
  1973     07DE  0084               	movwf	4
  1974     07DF  3000               	movlw	high __pbssBANK0
  1975     07E0  0085               	movwf	5
  1976     07E1  3026               	movlw	38
  1977     07E2  318D  2514  3187   	fcall	clear_ram0
  1978                           
  1979                           ; Clear objects allocated to BANK1
  1980     07E5  30A0               	movlw	low __pbssBANK1
  1981     07E6  0084               	movwf	4
  1982     07E7  3000               	movlw	high __pbssBANK1
  1983     07E8  0085               	movwf	5
  1984     07E9  3040               	movlw	64
  1985     07EA  318D  2514  3187   	fcall	clear_ram0
  1986                           
  1987                           ; Clear objects allocated to BANK2
  1988     07ED  3020               	movlw	low __pbssBANK2
  1989     07EE  0084               	movwf	4
  1990     07EF  3001               	movlw	high __pbssBANK2
  1991     07F0  0085               	movwf	5
  1992     07F1  3050               	movlw	80
  1993     07F2  318D  2514  3187   	fcall	clear_ram0
  1994                           
  1995                           ; Clear objects allocated to BANK3
  1996     07F5  30A0               	movlw	low __pbssBANK3
  1997     07F6  0084               	movwf	4
  1998     07F7  3001               	movlw	high __pbssBANK3
  1999     07F8  0085               	movwf	5
  2000     07F9  3040               	movlw	64
  2001     07FA  318D  2514  3187   	fcall	clear_ram0
  2002     07FD                     end_of_initialization:	
  2003                           ;End of C runtime variable initialization code
  2004                           
  2005     07FD                     __end_of__initialization:
  2006     07FD  0020               	movlb	0
  2007     07FE  3183  2B4E         	ljmp	_main	;jump to C main() function
  2008                           
  2009                           	psect	bssBANK0
  2010     0049                     __pbssBANK0:
  2011     0049                     _DC_DZ2:
  2012     0049                     	ds	4
  2013     004D                     _Z2:
  2014     004D                     	ds	4
  2015     0051                     _Z1:
  2016     0051                     	ds	4
  2017     0055                     _Y2:
  2018     0055                     	ds	4
  2019     0059                     _Y1:
  2020     0059                     	ds	4
  2021     005D                     _remainingMoves:
  2022     005D                     	ds	1
  2023     005E                     _foodPosition:
  2024     005E                     	ds	1
  2025     005F                     _headPosition:
  2026     005F                     	ds	1
  2027     0060                     _choice:
  2028     0060                     	ds	1
  2029     0061                     _snakeSize:
  2030     0061                     	ds	1
  2031     0062                     _eusartRxLastError:
  2032     0062                     	ds	1
  2033     0063                     _Y0:
  2034     0063                     	ds	8
  2035     006B                     _seed:
  2036     006B                     	ds	4
  2037                           
  2038                           	psect	bssBANK1
  2039     00A0                     __pbssBANK1:
  2040     00A0                     _matrix:
  2041     00A0                     	ds	8
  2042     00A8                     _DC_DB1:
  2043     00A8                     	ds	4
  2044     00AC                     _DC_DZ1:
  2045     00AC                     	ds	4
  2046     00B0                     _DC_DY1:
  2047     00B0                     	ds	4
  2048     00B4                     _DC_DB2:
  2049     00B4                     	ds	4
  2050     00B8                     _DZ2_DB2:
  2051     00B8                     	ds	4
  2052     00BC                     _DZ1_DB1:
  2053     00BC                     	ds	4
  2054     00C0                     _DZ2_DY1:
  2055     00C0                     	ds	4
  2056     00C4                     _DC_DY2:
  2057     00C4                     	ds	4
  2058     00C8                     _B2:
  2059     00C8                     	ds	4
  2060     00CC                     _B1:
  2061     00CC                     	ds	4
  2062     00D0                     _field:
  2063     00D0                     	ds	16
  2064                           
  2065                           	psect	dataBANK1
  2066     00E0                     __pdataBANK1:
  2067     00E0                     _mapping:
  2068     00E0                     	ds	8
  2069                           
  2070                           	psect	bssBANK2
  2071     0120                     __pbssBANK2:
  2072     0120                     _W1:
  2073     0120                     	ds	32
  2074     0140                     _DC_DW2:
  2075     0140                     	ds	16
  2076     0150                     _DZ2_DW2:
  2077     0150                     	ds	16
  2078     0160                     _W2:
  2079     0160                     	ds	16
  2080                           
  2081                           	psect	bssBANK3
  2082     01A0                     __pbssBANK3:
  2083     01A0                     _DC_DW1:
  2084     01A0                     	ds	32
  2085     01C0                     _DZ1_DW1:
  2086     01C0                     	ds	32
  2087                           
  2088                           	psect	inittext
  2089     0D1A                     init_ram:
  2090     0D1A  00FE               	movwf	btemp
  2091     0D1B                     initloop:
  2092     0D1B  0012               	moviw fsr0++
  2093     0D1C  001E               	movwi fsr1++
  2094     0D1D  0BFE               	decfsz	btemp,f
  2095     0D1E  2D1B               	goto	initloop
  2096     0D1F  3400               	retlw	0
  2097                           
  2098                           	psect	clrtext
  2099     0D14                     clear_ram0:	
  2100                           ;	Called with FSR0 containing the base address, and
  2101                           ;	WREG with the size to clear
  2102                           
  2103     0D14  0064               	clrwdt	;clear the watchdog before getting into this loop
  2104     0D15                     clrloop0:
  2105     0D15  0180               	clrf	0	;clear RAM location pointed to by FSR
  2106     0D16  3101               	addfsr 0,1
  2107     0D17  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2108     0D18  2D15               	goto	clrloop0	;have we reached the end yet?
  2109     0D19  3400               	retlw	0	;all done for this memory range, return
  2110                           
  2111                           	psect	cstackCOMMON
  2112     0070                     __pcstackCOMMON:
  2113     0070                     ?_EUSART_SetFramingErrorHandler:
  2114     0070                     ?_EUSART_SetOverrunErrorHandler:	
  2115                           ; 1 bytes @ 0x0
  2116                           
  2117     0070                     ?_EUSART_SetErrorHandler:	
  2118                           ; 1 bytes @ 0x0
  2119                           
  2120     0070                     ?_OSCILLATOR_Initialize:	
  2121                           ; 1 bytes @ 0x0
  2122                           
  2123     0070                     ??_OSCILLATOR_Initialize:	
  2124                           ; 1 bytes @ 0x0
  2125                           
  2126     0070                     ?_WDT_Initialize:	
  2127                           ; 1 bytes @ 0x0
  2128                           
  2129     0070                     ??_WDT_Initialize:	
  2130                           ; 1 bytes @ 0x0
  2131                           
  2132     0070                     ?_snake_initiate:	
  2133                           ; 1 bytes @ 0x0
  2134                           
  2135     0070                     ?_ai_initiate:	
  2136                           ; 1 bytes @ 0x0
  2137                           
  2138     0070                     ?_initMAX7219:	
  2139                           ; 1 bytes @ 0x0
  2140                           
  2141     0070                     ?_snake_getField:	
  2142                           ; 1 bytes @ 0x0
  2143                           
  2144     0070                     ??_snake_getField:	
  2145                           ; 1 bytes @ 0x0
  2146                           
  2147     0070                     ?_ledClear:	
  2148                           ; 1 bytes @ 0x0
  2149                           
  2150     0070                     ?_snake_getFoodPosition:	
  2151                           ; 1 bytes @ 0x0
  2152                           
  2153     0070                     ??_snake_getFoodPosition:	
  2154                           ; 1 bytes @ 0x0
  2155                           
  2156     0070                     ?_sendMatrix:	
  2157                           ; 1 bytes @ 0x0
  2158                           
  2159     0070                     ?_snake_getSurroundings:	
  2160                           ; 1 bytes @ 0x0
  2161                           
  2162     0070                     ?_ai_getInputField:	
  2163                           ; 1 bytes @ 0x0
  2164                           
  2165     0070                     ??_ai_getInputField:	
  2166                           ; 1 bytes @ 0x0
  2167                           
  2168     0070                     ?_ai_run:	
  2169                           ; 1 bytes @ 0x0
  2170                           
  2171     0070                     ?_snake_move:	
  2172                           ; 1 bytes @ 0x0
  2173                           
  2174     0070                     ?_ai_propagate:	
  2175                           ; 1 bytes @ 0x0
  2176                           
  2177     0070                     ?_srand:	
  2178                           ; 1 bytes @ 0x0
  2179                           
  2180     0070                     ?_sigmoid:	
  2181                           ; 1 bytes @ 0x0
  2182                           
  2183     0070                     ??_sigmoid:	
  2184                           ; 1 bytes @ 0x0
  2185                           
  2186     0070                     ?_de_sigmoid:	
  2187                           ; 1 bytes @ 0x0
  2188                           
  2189     0070                     ??_de_sigmoid:	
  2190                           ; 1 bytes @ 0x0
  2191                           
  2192     0070                     ?_EUSART_Initialize:	
  2193                           ; 1 bytes @ 0x0
  2194                           
  2195     0070                     ?_EUSART_Write:	
  2196                           ; 1 bytes @ 0x0
  2197                           
  2198     0070                     ??_EUSART_Write:	
  2199                           ; 1 bytes @ 0x0
  2200                           
  2201     0070                     ?_PIN_MANAGER_Initialize:	
  2202                           ; 1 bytes @ 0x0
  2203                           
  2204     0070                     ??_PIN_MANAGER_Initialize:	
  2205                           ; 1 bytes @ 0x0
  2206                           
  2207     0070                     ?_SPI1_Initialize:	
  2208                           ; 1 bytes @ 0x0
  2209                           
  2210     0070                     ??_SPI1_Initialize:	
  2211                           ; 1 bytes @ 0x0
  2212                           
  2213     0070                     ?_SPI1_WriteByte:	
  2214                           ; 1 bytes @ 0x0
  2215                           
  2216     0070                     ??_SPI1_WriteByte:	
  2217                           ; 1 bytes @ 0x0
  2218                           
  2219     0070                     ?_SYSTEM_Initialize:	
  2220                           ; 1 bytes @ 0x0
  2221                           
  2222     0070                     ?_deactivateElevator:	
  2223                           ; 1 bytes @ 0x0
  2224                           
  2225     0070                     ??_deactivateElevator:	
  2226                           ; 1 bytes @ 0x0
  2227                           
  2228     0070                     ?_main:	
  2229                           ; 1 bytes @ 0x0
  2230                           
  2231     0070                     ?___lmul:	
  2232                           ; 1 bytes @ 0x0
  2233                           
  2234     0070                     EUSART_Write@txData:	
  2235                           ; 4 bytes @ 0x0
  2236                           
  2237     0070                     SPI1_WriteByte@byte:	
  2238                           ; 1 bytes @ 0x0
  2239                           
  2240     0070                     ledClear@c:	
  2241                           ; 1 bytes @ 0x0
  2242                           
  2243     0070                     EUSART_SetFramingErrorHandler@interruptHandler:	
  2244                           ; 1 bytes @ 0x0
  2245                           
  2246     0070                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  2247                           ; 2 bytes @ 0x0
  2248                           
  2249     0070                     EUSART_SetErrorHandler@interruptHandler:	
  2250                           ; 2 bytes @ 0x0
  2251                           
  2252     0070                     srand@s:	
  2253                           ; 2 bytes @ 0x0
  2254                           
  2255     0070                     ___lmul@multiplier:	
  2256                           ; 2 bytes @ 0x0
  2257                           
  2258                           
  2259                           ; 4 bytes @ 0x0
  2260     0070                     	ds	1
  2261     0071                     ??_ledClear:
  2262     0071                     ?_txMAX7219:	
  2263                           ; 1 bytes @ 0x1
  2264                           
  2265     0071                     txMAX7219@dat0:	
  2266                           ; 1 bytes @ 0x1
  2267                           
  2268     0071                     sigmoid@z:	
  2269                           ; 1 bytes @ 0x1
  2270                           
  2271     0071                     de_sigmoid@z:	
  2272                           ; 1 bytes @ 0x1
  2273                           
  2274                           
  2275                           ; 1 bytes @ 0x1
  2276     0071                     	ds	1
  2277     0072                     ??_EUSART_SetFramingErrorHandler:
  2278     0072                     ??_EUSART_SetOverrunErrorHandler:	
  2279                           ; 1 bytes @ 0x2
  2280                           
  2281     0072                     ??_EUSART_SetErrorHandler:	
  2282                           ; 1 bytes @ 0x2
  2283                           
  2284     0072                     ??_srand:	
  2285                           ; 1 bytes @ 0x2
  2286                           
  2287     0072                     ??_EUSART_Initialize:	
  2288                           ; 1 bytes @ 0x2
  2289                           
  2290     0072                     ??_SYSTEM_Initialize:	
  2291                           ; 1 bytes @ 0x2
  2292                           
  2293     0072                     ??_txMAX7219:	
  2294                           ; 1 bytes @ 0x2
  2295                           
  2296     0072                     ?___awdiv:	
  2297                           ; 1 bytes @ 0x2
  2298                           
  2299     0072                     txMAX7219@addr0:	
  2300                           ; 2 bytes @ 0x2
  2301                           
  2302     0072                     ___awdiv@divisor:	
  2303                           ; 1 bytes @ 0x2
  2304                           
  2305                           
  2306                           ; 2 bytes @ 0x2
  2307     0072                     	ds	1
  2308     0073                     ??_initMAX7219:
  2309     0073                     ??_sendMatrix:	
  2310                           ; 1 bytes @ 0x3
  2311                           
  2312     0073                     ledClear@l:	
  2313                           ; 1 bytes @ 0x3
  2314                           
  2315                           
  2316                           ; 1 bytes @ 0x3
  2317     0073                     	ds	1
  2318     0074                     sendMatrix@b:
  2319     0074                     ___awdiv@dividend:	
  2320                           ; 1 bytes @ 0x4
  2321                           
  2322     0074                     ___lmul@multiplicand:	
  2323                           ; 2 bytes @ 0x4
  2324                           
  2325                           
  2326                           ; 4 bytes @ 0x4
  2327     0074                     	ds	1
  2328     0075                     sendMatrix@nb:
  2329                           
  2330                           ; 1 bytes @ 0x5
  2331     0075                     	ds	1
  2332     0076                     ??___awdiv:
  2333     0076                     sendMatrix@j:	
  2334                           ; 1 bytes @ 0x6
  2335                           
  2336                           
  2337                           ; 1 bytes @ 0x6
  2338     0076                     	ds	1
  2339     0077                     sendMatrix@i:
  2340     0077                     ___awdiv@counter:	
  2341                           ; 1 bytes @ 0x7
  2342                           
  2343                           
  2344                           ; 1 bytes @ 0x7
  2345     0077                     	ds	1
  2346     0078                     ??___lmul:
  2347     0078                     ___awdiv@sign:	
  2348                           ; 1 bytes @ 0x8
  2349                           
  2350     0078                     ___lmul@product:	
  2351                           ; 1 bytes @ 0x8
  2352                           
  2353                           
  2354                           ; 4 bytes @ 0x8
  2355     0078                     	ds	1
  2356     0079                     ___awdiv@quotient:
  2357                           
  2358                           ; 2 bytes @ 0x9
  2359     0079                     	ds	2
  2360     007B                     ?_ledSet:
  2361     007B                     ??_snake_getSurroundings:	
  2362                           ; 1 bytes @ 0xB
  2363                           
  2364     007B                     ??___wmul:	
  2365                           ; 1 bytes @ 0xB
  2366                           
  2367     007B                     ledSet@c:	
  2368                           ; 1 bytes @ 0xB
  2369                           
  2370     007B                     ___wmul@product:	
  2371                           ; 1 bytes @ 0xB
  2372                           
  2373                           
  2374                           ; 2 bytes @ 0xB
  2375     007B                     	ds	1
  2376     007C                     ??_ledSet:
  2377     007C                     ?_rand:	
  2378                           ; 1 bytes @ 0xC
  2379                           
  2380                           
  2381                           ; 2 bytes @ 0xC
  2382     007C                     	ds	2
  2383                           
  2384                           	psect	cstackBANK0
  2385     0020                     __pcstackBANK0:
  2386     0020                     ??_rand:
  2387     0020                     ?___wmul:	
  2388                           ; 1 bytes @ 0x0
  2389                           
  2390     0020                     ledSet@l:	
  2391                           ; 2 bytes @ 0x0
  2392                           
  2393     0020                     snake_getSurroundings@p:	
  2394                           ; 1 bytes @ 0x0
  2395                           
  2396     0020                     ___wmul@multiplier:	
  2397                           ; 1 bytes @ 0x0
  2398                           
  2399                           
  2400                           ; 2 bytes @ 0x0
  2401     0020                     	ds	1
  2402     0021                     snake_getSurroundings@lf:
  2403                           
  2404                           ; 1 bytes @ 0x1
  2405     0021                     	ds	1
  2406     0022                     snake_getSurroundings@cf:
  2407     0022                     ___wmul@multiplicand:	
  2408                           ; 1 bytes @ 0x2
  2409                           
  2410                           
  2411                           ; 2 bytes @ 0x2
  2412     0022                     	ds	1
  2413     0023                     snake_getSurroundings@i:
  2414                           
  2415                           ; 1 bytes @ 0x3
  2416     0023                     	ds	1
  2417     0024                     ??_snake_initiate:
  2418     0024                     ??_ai_run:	
  2419                           ; 1 bytes @ 0x4
  2420                           
  2421     0024                     ??_ai_propagate:	
  2422                           ; 1 bytes @ 0x4
  2423                           
  2424     0024                     ?___awmod:	
  2425                           ; 1 bytes @ 0x4
  2426                           
  2427     0024                     snake_getSurroundings@lh:	
  2428                           ; 2 bytes @ 0x4
  2429                           
  2430     0024                     ___awmod@divisor:	
  2431                           ; 1 bytes @ 0x4
  2432                           
  2433                           
  2434                           ; 2 bytes @ 0x4
  2435     0024                     	ds	1
  2436     0025                     snake_initiate@i:
  2437     0025                     snake_getSurroundings@ch:	
  2438                           ; 1 bytes @ 0x5
  2439                           
  2440                           
  2441                           ; 1 bytes @ 0x5
  2442     0025                     	ds	1
  2443     0026                     ??_snake_move:
  2444     0026                     snake_getSurroundings@i_804:	
  2445                           ; 1 bytes @ 0x6
  2446                           
  2447     0026                     ___awmod@dividend:	
  2448                           ; 1 bytes @ 0x6
  2449                           
  2450                           
  2451                           ; 2 bytes @ 0x6
  2452     0026                     	ds	1
  2453     0027                     snake_getSurroundings@surroundings:
  2454     0027                     ai_run@i:	
  2455                           ; 1 bytes @ 0x7
  2456                           
  2457                           
  2458                           ; 1 bytes @ 0x7
  2459     0027                     	ds	1
  2460     0028                     ??___awmod:
  2461     0028                     snake_move@direction:	
  2462                           ; 1 bytes @ 0x8
  2463                           
  2464     0028                     ai_run@i_877:	
  2465                           ; 1 bytes @ 0x8
  2466                           
  2467                           
  2468                           ; 1 bytes @ 0x8
  2469     0028                     	ds	1
  2470     0029                     snake_move@incentive:
  2471     0029                     ai_run@i_879:	
  2472                           ; 1 bytes @ 0x9
  2473                           
  2474     0029                     ___awmod@counter:	
  2475                           ; 1 bytes @ 0x9
  2476                           
  2477                           
  2478                           ; 1 bytes @ 0x9
  2479     0029                     	ds	1
  2480     002A                     snake_move@i:
  2481     002A                     ai_run@i_880:	
  2482                           ; 1 bytes @ 0xA
  2483                           
  2484     002A                     ___awmod@sign:	
  2485                           ; 1 bytes @ 0xA
  2486                           
  2487     002A                     ai_propagate@S:	
  2488                           ; 1 bytes @ 0xA
  2489                           
  2490                           
  2491                           ; 4 bytes @ 0xA
  2492     002A                     	ds	1
  2493     002B                     ??_ai_initiate:
  2494     002B                     ai_run@z:	
  2495                           ; 1 bytes @ 0xB
  2496                           
  2497                           
  2498                           ; 2 bytes @ 0xB
  2499     002B                     	ds	2
  2500     002D                     ai_run@j:
  2501                           
  2502                           ; 1 bytes @ 0xD
  2503     002D                     	ds	1
  2504     002E                     ai_initiate@i:
  2505     002E                     ai_run@j_878:	
  2506                           ; 1 bytes @ 0xE
  2507                           
  2508     002E                     ai_propagate@incentive:	
  2509                           ; 1 bytes @ 0xE
  2510                           
  2511                           
  2512                           ; 1 bytes @ 0xE
  2513     002E                     	ds	1
  2514     002F                     ai_initiate@i_871:
  2515     002F                     ai_propagate@i:	
  2516                           ; 1 bytes @ 0xF
  2517                           
  2518                           
  2519                           ; 1 bytes @ 0xF
  2520     002F                     	ds	1
  2521     0030                     ai_initiate@j:
  2522     0030                     ai_propagate@i_885:	
  2523                           ; 1 bytes @ 0x10
  2524                           
  2525                           
  2526                           ; 1 bytes @ 0x10
  2527     0030                     	ds	1
  2528     0031                     ai_initiate@j_870:
  2529     0031                     ai_propagate@j_887:	
  2530                           ; 1 bytes @ 0x11
  2531                           
  2532                           
  2533                           ; 1 bytes @ 0x11
  2534     0031                     	ds	1
  2535     0032                     ai_propagate@i_893:
  2536                           
  2537                           ; 1 bytes @ 0x12
  2538     0032                     	ds	1
  2539     0033                     ai_propagate@i_895:
  2540                           
  2541                           ; 1 bytes @ 0x13
  2542     0033                     	ds	1
  2543     0034                     ai_propagate@i_897:
  2544                           
  2545                           ; 1 bytes @ 0x14
  2546     0034                     	ds	1
  2547     0035                     _ai_propagate$1578:
  2548                           
  2549                           ; 2 bytes @ 0x15
  2550     0035                     	ds	2
  2551     0037                     ai_propagate@j:
  2552                           
  2553                           ; 1 bytes @ 0x17
  2554     0037                     	ds	1
  2555     0038                     ai_propagate@i_891:
  2556                           
  2557                           ; 1 bytes @ 0x18
  2558     0038                     	ds	1
  2559     0039                     ai_propagate@j_894:
  2560                           
  2561                           ; 1 bytes @ 0x19
  2562     0039                     	ds	1
  2563     003A                     ai_propagate@j_896:
  2564                           
  2565                           ; 1 bytes @ 0x1A
  2566     003A                     	ds	1
  2567     003B                     ai_propagate@j_892:
  2568                           
  2569                           ; 1 bytes @ 0x1B
  2570     003B                     	ds	1
  2571     003C                     ai_propagate@j_889:
  2572                           
  2573                           ; 1 bytes @ 0x1C
  2574     003C                     	ds	1
  2575     003D                     ??_main:
  2576                           
  2577                           ; 1 bytes @ 0x1D
  2578     003D                     	ds	3
  2579     0040                     main@field:
  2580                           
  2581                           ; 1 bytes @ 0x20
  2582     0040                     	ds	1
  2583     0041                     main@foodPosition:
  2584                           
  2585                           ; 1 bytes @ 0x21
  2586     0041                     	ds	1
  2587     0042                     main@choice:
  2588                           
  2589                           ; 1 bytes @ 0x22
  2590     0042                     	ds	1
  2591     0043                     main@foodPosition_672:
  2592                           
  2593                           ; 1 bytes @ 0x23
  2594     0043                     	ds	1
  2595     0044                     main@incentive:
  2596                           
  2597                           ; 1 bytes @ 0x24
  2598     0044                     	ds	1
  2599     0045                     main@i:
  2600                           
  2601                           ; 1 bytes @ 0x25
  2602     0045                     	ds	1
  2603     0046                     main@j:
  2604                           
  2605                           ; 1 bytes @ 0x26
  2606     0046                     	ds	1
  2607     0047                     main@i_670:
  2608                           
  2609                           ; 1 bytes @ 0x27
  2610     0047                     	ds	1
  2611     0048                     main@j_671:
  2612                           
  2613                           ; 1 bytes @ 0x28
  2614     0048                     	ds	1
  2615                           
  2616                           	psect	maintext
  2617     034E                     __pmaintext:	
  2618 ;;
  2619 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  2620 ;;
  2621 ;; *************** function _main *****************
  2622 ;; Defined at:
  2623 ;;		line 67 in file "main.c"
  2624 ;; Parameters:    Size  Location     Type
  2625 ;;		None
  2626 ;; Auto vars:     Size  Location     Type
  2627 ;;  j               1   40[BANK0 ] unsigned char 
  2628 ;;  j               1   38[BANK0 ] unsigned char 
  2629 ;;  i               1   39[BANK0 ] unsigned char 
  2630 ;;  incentive       1   36[BANK0 ] char 
  2631 ;;  foodPosition    1   35[BANK0 ] unsigned char 
  2632 ;;  choice          1   34[BANK0 ] unsigned char 
  2633 ;;  i               1   37[BANK0 ] unsigned char 
  2634 ;;  foodPosition    1   33[BANK0 ] unsigned char 
  2635 ;;  field           1   32[BANK0 ] PTR unsigned char 
  2636 ;;		 -> field(16), 
  2637 ;; Return value:  Size  Location     Type
  2638 ;;                  1    wreg      void 
  2639 ;; Registers used:
  2640 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2641 ;; Tracked objects:
  2642 ;;		On entry : B1F/0
  2643 ;;		On exit  : 0/0
  2644 ;;		Unchanged: 0/0
  2645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2646 ;;      Params:         0       0       0       0       0       0
  2647 ;;      Locals:         0       9       0       0       0       0
  2648 ;;      Temps:          0       3       0       0       0       0
  2649 ;;      Totals:         0      12       0       0       0       0
  2650 ;;Total ram usage:       12 bytes
  2651 ;; Hardware stack levels required when called: 4
  2652 ;; This function calls:
  2653 ;;		_SYSTEM_Initialize
  2654 ;;		___awdiv
  2655 ;;		_ai_getInputField
  2656 ;;		_ai_initiate
  2657 ;;		_ai_propagate
  2658 ;;		_ai_run
  2659 ;;		_deactivateElevator
  2660 ;;		_initMAX7219
  2661 ;;		_ledClear
  2662 ;;		_ledSet
  2663 ;;		_sendMatrix
  2664 ;;		_snake_getField
  2665 ;;		_snake_getFoodPosition
  2666 ;;		_snake_getSurroundings
  2667 ;;		_snake_initiate
  2668 ;;		_snake_move
  2669 ;; This function is called by:
  2670 ;;		Startup code after reset
  2671 ;; This function uses a non-reentrant model
  2672 ;;
  2673                           
  2674     034E                     _main:	
  2675                           ;psect for function _main
  2676                           
  2677     034E                     l3217:	
  2678                           ;incstack = 0
  2679                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2680                           
  2681                           
  2682                           ;main.c: 70:     SYSTEM_Initialize();
  2683     034E  318D  255C  3183   	fcall	_SYSTEM_Initialize
  2684     0351                     l3219:
  2685                           
  2686                           ;main.c: 87:     deactivateElevator();
  2687     0351  318D  254F  3183   	fcall	_deactivateElevator
  2688     0354                     l3221:
  2689                           
  2690                           ;main.c: 88:     snake_initiate();
  2691     0354  318E  2638  3183   	fcall	_snake_initiate
  2692     0357                     l3223:
  2693                           
  2694                           ;main.c: 89:     ai_initiate();
  2695     0357  318F  2762  3183   	fcall	_ai_initiate
  2696     035A                     l3225:
  2697                           
  2698                           ;main.c: 90:     initMAX7219();
  2699     035A  318E  26D0  3183   	fcall	_initMAX7219
  2700     035D                     l3227:
  2701                           
  2702                           ;main.c: 103:     uint8_t* field = snake_getField();
  2703     035D  318C  24F4  3183   	fcall	_snake_getField
  2704     0360  0020               	movlb	0	; select bank0
  2705     0361  00C0               	movwf	main@field
  2706     0362                     l3229:
  2707                           
  2708                           ;main.c: 105:     for(uint8_t i = 0; i < 4; i++){
  2709     0362  01C5               	clrf	main@i
  2710     0363                     l3235:
  2711                           
  2712                           ;main.c: 106:         for(uint8_t j = 0; j < 4; j++){
  2713     0363  01C6               	clrf	main@j
  2714     0364                     l3241:
  2715                           
  2716                           ;main.c: 107:             if(field[i+j*4]>0){
  2717     0364  0846               	movf	main@j,w
  2718     0365  00BD               	movwf	??_main
  2719     0366  3001               	movlw	1
  2720     0367                     u2355:
  2721     0367  35BD               	lslf	??_main,f
  2722     0368  3EFF               	addlw	-1
  2723     0369  1D03               	skipz
  2724     036A  2B67               	goto	u2355
  2725     036B  353D               	lslf	??_main,w
  2726     036C  0740               	addwf	main@field,w
  2727     036D  00BE               	movwf	??_main+1
  2728     036E  0845               	movf	main@i,w
  2729     036F  073E               	addwf	??_main+1,w
  2730     0370  00BF               	movwf	??_main+2
  2731     0371  083F               	movf	??_main+2,w
  2732     0372  0086               	movwf	6
  2733     0373  0187               	clrf	7
  2734     0374  0801               	movf	1,w
  2735     0375  1903               	btfsc	3,2
  2736     0376  2B78               	goto	u2361
  2737     0377  2B79               	goto	u2360
  2738     0378                     u2361:
  2739     0378  2B80               	goto	l3245
  2740     0379                     u2360:
  2741     0379                     l3243:
  2742                           
  2743                           ;main.c: 108:                 ledSet(i,j);
  2744     0379  0846               	movf	main@j,w
  2745     037A  00FB               	movwf	ledSet@c
  2746     037B  0845               	movf	main@i,w
  2747     037C  318D  259E  3183   	fcall	_ledSet
  2748                           
  2749                           ;main.c: 109:             } else{
  2750     037F  2B86               	goto	l3247
  2751     0380                     l3245:
  2752                           
  2753                           ;main.c: 110:                 ledClear(i,j);
  2754     0380  0846               	movf	main@j,w
  2755     0381  00F0               	movwf	ledClear@c
  2756     0382  0845               	movf	main@i,w
  2757     0383  318D  258C  3183   	fcall	_ledClear
  2758     0386                     l3247:
  2759                           
  2760                           ;main.c: 112:         }
  2761     0386  3001               	movlw	1
  2762     0387  0020               	movlb	0	; select bank0
  2763     0388  00BD               	movwf	??_main
  2764     0389  083D               	movf	??_main,w
  2765     038A  07C6               	addwf	main@j,f
  2766     038B                     l3249:
  2767     038B  3004               	movlw	4
  2768     038C  0246               	subwf	main@j,w
  2769     038D  1C03               	skipc
  2770     038E  2B90               	goto	u2371
  2771     038F  2B91               	goto	u2370
  2772     0390                     u2371:
  2773     0390  2B64               	goto	l3241
  2774     0391                     u2370:
  2775     0391                     l3251:
  2776                           
  2777                           ;main.c: 113:     }
  2778     0391  3001               	movlw	1
  2779     0392  00BD               	movwf	??_main
  2780     0393  083D               	movf	??_main,w
  2781     0394  07C5               	addwf	main@i,f
  2782     0395                     l3253:
  2783     0395  3004               	movlw	4
  2784     0396  0245               	subwf	main@i,w
  2785     0397  1C03               	skipc
  2786     0398  2B9A               	goto	u2381
  2787     0399  2B9B               	goto	u2380
  2788     039A                     u2381:
  2789     039A  2B63               	goto	l3235
  2790     039B                     u2380:
  2791     039B                     l3255:
  2792                           
  2793                           ;main.c: 115:     uint8_t foodPosition = snake_getFoodPosition();
  2794     039B  318C  24F6  3183   	fcall	_snake_getFoodPosition
  2795     039E  0020               	movlb	0	; select bank0
  2796     039F  00C1               	movwf	main@foodPosition
  2797     03A0                     l3257:
  2798                           
  2799                           ;main.c: 116:     ledSet(foodPosition%4, foodPosition/4);
  2800     03A0  3004               	movlw	4
  2801     03A1  00F2               	movwf	___awdiv@divisor
  2802     03A2  3000               	movlw	0
  2803     03A3  00F3               	movwf	___awdiv@divisor+1
  2804     03A4  0841               	movf	main@foodPosition,w
  2805     03A5  00BD               	movwf	??_main
  2806     03A6  01BE               	clrf	??_main+1
  2807     03A7  083D               	movf	??_main,w
  2808     03A8  00F4               	movwf	___awdiv@dividend
  2809     03A9  083E               	movf	??_main+1,w
  2810     03AA  00F5               	movwf	___awdiv@dividend+1
  2811     03AB  3180  201E  3183   	fcall	___awdiv
  2812     03AE  0872               	movf	?___awdiv,w
  2813     03AF  00FB               	movwf	ledSet@c
  2814     03B0  0020               	movlb	0	; select bank0
  2815     03B1  0841               	movf	main@foodPosition,w
  2816     03B2  3903               	andlw	3
  2817     03B3  318D  259E  3183   	fcall	_ledSet
  2818     03B6                     l3259:
  2819                           
  2820                           ;main.c: 117:     sendMatrix();
  2821     03B6  318E  260A  3183   	fcall	_sendMatrix
  2822     03B9                     l3261:
  2823                           
  2824                           ;main.c: 120:     {;main.c: 122:         _delay((unsigned long)((500)*(8000000/4000.0)))
      +                          ;
  2825     03B9  3006               	movlw	6
  2826     03BA  0020               	movlb	0	; select bank0
  2827     03BB  00BE               	movwf	??_main+1
  2828     03BC  3013               	movlw	19
  2829     03BD  00BD               	movwf	??_main
  2830     03BE  30AD               	movlw	173
  2831     03BF                     u2557:
  2832     03BF  0B89               	decfsz	9,f
  2833     03C0  2BBF               	goto	u2557
  2834     03C1  0BBD               	decfsz	??_main,f
  2835     03C2  2BBF               	goto	u2557
  2836     03C3  0BBE               	decfsz	??_main+1,f
  2837     03C4  2BBF               	goto	u2557
  2838     03C5  3200               	nop2
  2839     03C6                     l3263:
  2840                           
  2841                           ;main.c: 123:         snake_getSurroundings(ai_getInputField());
  2842     03C6  318C  24F2  3183   	fcall	_ai_getInputField
  2843     03C9  3180  207D  3183   	fcall	_snake_getSurroundings
  2844     03CC                     l3265:
  2845                           
  2846                           ;main.c: 124:         uint8_t choice = ai_run();
  2847     03CC  3182  2210  3183   	fcall	_ai_run
  2848     03CF  0020               	movlb	0	; select bank0
  2849     03D0  00C2               	movwf	main@choice
  2850     03D1                     l3267:
  2851                           
  2852                           ;main.c: 125:         int8_t incentive = snake_move(choice);
  2853     03D1  0842               	movf	main@choice,w
  2854     03D2  3181  213E  3183   	fcall	_snake_move
  2855     03D5  0020               	movlb	0	; select bank0
  2856     03D6  00C4               	movwf	main@incentive
  2857     03D7                     l3269:
  2858                           
  2859                           ;main.c: 126:         ai_propagate(incentive);
  2860     03D7  0844               	movf	main@incentive,w
  2861     03D8  3185  253F  3183   	fcall	_ai_propagate
  2862     03DB                     l3271:
  2863                           
  2864                           ;main.c: 127:         for(uint8_t i = 0; i < 4; i++){
  2865     03DB  0020               	movlb	0	; select bank0
  2866     03DC  01C7               	clrf	main@i_670
  2867     03DD                     l3277:
  2868                           
  2869                           ;main.c: 128:             for(uint8_t j = 0; j < 4; j++){
  2870     03DD  01C8               	clrf	main@j_671
  2871     03DE                     l3283:
  2872                           
  2873                           ;main.c: 129:                 if(field[i+j*4]>0){
  2874     03DE  0848               	movf	main@j_671,w
  2875     03DF  00BD               	movwf	??_main
  2876     03E0  3001               	movlw	1
  2877     03E1                     u2395:
  2878     03E1  35BD               	lslf	??_main,f
  2879     03E2  3EFF               	addlw	-1
  2880     03E3  1D03               	skipz
  2881     03E4  2BE1               	goto	u2395
  2882     03E5  353D               	lslf	??_main,w
  2883     03E6  0740               	addwf	main@field,w
  2884     03E7  00BE               	movwf	??_main+1
  2885     03E8  0847               	movf	main@i_670,w
  2886     03E9  073E               	addwf	??_main+1,w
  2887     03EA  00BF               	movwf	??_main+2
  2888     03EB  083F               	movf	??_main+2,w
  2889     03EC  0086               	movwf	6
  2890     03ED  0187               	clrf	7
  2891     03EE  0801               	movf	1,w
  2892     03EF  1903               	btfsc	3,2
  2893     03F0  2BF2               	goto	u2401
  2894     03F1  2BF3               	goto	u2400
  2895     03F2                     u2401:
  2896     03F2  2BFA               	goto	l3287
  2897     03F3                     u2400:
  2898     03F3                     l3285:
  2899                           
  2900                           ;main.c: 130:                     ledSet(i,j);
  2901     03F3  0848               	movf	main@j_671,w
  2902     03F4  00FB               	movwf	ledSet@c
  2903     03F5  0847               	movf	main@i_670,w
  2904     03F6  318D  259E  3183   	fcall	_ledSet
  2905                           
  2906                           ;main.c: 131:                 } else{
  2907     03F9  2C00               	goto	l3289
  2908     03FA                     l3287:
  2909                           
  2910                           ;main.c: 132:                     ledClear(i,j);
  2911     03FA  0848               	movf	main@j_671,w
  2912     03FB  00F0               	movwf	ledClear@c
  2913     03FC  0847               	movf	main@i_670,w
  2914     03FD  318D  258C  3183   	fcall	_ledClear
  2915     0400                     l3289:
  2916                           
  2917                           ;main.c: 134:             }
  2918     0400  3001               	movlw	1
  2919     0401  0020               	movlb	0	; select bank0
  2920     0402  00BD               	movwf	??_main
  2921     0403  083D               	movf	??_main,w
  2922     0404  07C8               	addwf	main@j_671,f
  2923     0405                     l3291:
  2924     0405  3004               	movlw	4
  2925     0406  0248               	subwf	main@j_671,w
  2926     0407  1C03               	skipc
  2927     0408  2C0A               	goto	u2411
  2928     0409  2C0B               	goto	u2410
  2929     040A                     u2411:
  2930     040A  2BDE               	goto	l3283
  2931     040B                     u2410:
  2932     040B                     l3293:
  2933                           
  2934                           ;main.c: 135:         }
  2935     040B  3001               	movlw	1
  2936     040C  00BD               	movwf	??_main
  2937     040D  083D               	movf	??_main,w
  2938     040E  07C7               	addwf	main@i_670,f
  2939     040F                     l3295:
  2940     040F  3004               	movlw	4
  2941     0410  0247               	subwf	main@i_670,w
  2942     0411  1C03               	skipc
  2943     0412  2C14               	goto	u2421
  2944     0413  2C15               	goto	u2420
  2945     0414                     u2421:
  2946     0414  2BDD               	goto	l3277
  2947     0415                     u2420:
  2948     0415                     l3297:
  2949                           
  2950                           ;main.c: 136:         ledClear(0,6);
  2951     0415  3006               	movlw	6
  2952     0416  00F0               	movwf	ledClear@c
  2953     0417  3000               	movlw	0
  2954     0418  318D  258C  3183   	fcall	_ledClear
  2955                           
  2956                           ;main.c: 137:         ledClear(2,6);
  2957     041B  3006               	movlw	6
  2958     041C  00F0               	movwf	ledClear@c
  2959     041D  3002               	movlw	2
  2960     041E  318D  258C  3183   	fcall	_ledClear
  2961                           
  2962                           ;main.c: 138:         ledClear(1,5);
  2963     0421  3005               	movlw	5
  2964     0422  00F0               	movwf	ledClear@c
  2965     0423  3001               	movlw	1
  2966     0424  318D  258C  3183   	fcall	_ledClear
  2967                           
  2968                           ;main.c: 139:         ledClear(1,7);
  2969     0427  3007               	movlw	7
  2970     0428  00F0               	movwf	ledClear@c
  2971     0429  3001               	movlw	1
  2972     042A  318D  258C  3183   	fcall	_ledClear
  2973                           
  2974                           ;main.c: 140:         ledClear(4,6);
  2975     042D  3006               	movlw	6
  2976     042E  00F0               	movwf	ledClear@c
  2977     042F  3004               	movlw	4
  2978     0430  318D  258C  3183   	fcall	_ledClear
  2979                           
  2980                           ;main.c: 141:         ledClear(6,6);
  2981     0433  3006               	movlw	6
  2982     0434  00F0               	movwf	ledClear@c
  2983     0435  3006               	movlw	6
  2984     0436  318D  258C  3183   	fcall	_ledClear
  2985                           
  2986                           ;main.c: 142:         ledClear(5,5);
  2987     0439  3005               	movlw	5
  2988     043A  00F0               	movwf	ledClear@c
  2989     043B  3005               	movlw	5
  2990     043C  318D  258C  3183   	fcall	_ledClear
  2991                           
  2992                           ;main.c: 143:         ledClear(5,7);
  2993     043F  3007               	movlw	7
  2994     0440  00F0               	movwf	ledClear@c
  2995     0441  3005               	movlw	5
  2996     0442  318D  258C  3183   	fcall	_ledClear
  2997                           
  2998                           ;main.c: 144:         ledClear(4,1);
  2999     0445  01F0               	clrf	ledClear@c
  3000     0446  0AF0               	incf	ledClear@c,f
  3001     0447  3004               	movlw	4
  3002     0448  318D  258C  3183   	fcall	_ledClear
  3003                           
  3004                           ;main.c: 145:         ledClear(6,1);
  3005     044B  01F0               	clrf	ledClear@c
  3006     044C  0AF0               	incf	ledClear@c,f
  3007     044D  3006               	movlw	6
  3008     044E  318D  258C  3183   	fcall	_ledClear
  3009                           
  3010                           ;main.c: 146:         ledClear(5,0);
  3011     0451  01F0               	clrf	ledClear@c
  3012     0452  3005               	movlw	5
  3013     0453  318D  258C  3183   	fcall	_ledClear
  3014                           
  3015                           ;main.c: 147:         ledClear(5,2);
  3016     0456  3002               	movlw	2
  3017     0457  00F0               	movwf	ledClear@c
  3018     0458  3005               	movlw	5
  3019     0459  318D  258C  3183   	fcall	_ledClear
  3020     045C                     l3299:
  3021                           
  3022                           ;main.c: 148:         if(Y0[0]>0){
  3023     045C  0020               	movlb	0	; select bank0
  3024     045D  0863               	movf	_Y0,w
  3025     045E  3A80               	xorlw	128
  3026     045F  3E7F               	addlw	-129
  3027     0460  1C03               	skipc
  3028     0461  2C63               	goto	u2431
  3029     0462  2C64               	goto	u2430
  3030     0463                     u2431:
  3031     0463  2C6B               	goto	l3303
  3032     0464                     u2430:
  3033     0464                     l3301:
  3034                           
  3035                           ;main.c: 149:             ledSet(0,6);
  3036     0464  3006               	movlw	6
  3037     0465  00FB               	movwf	ledSet@c
  3038     0466  3000               	movlw	0
  3039     0467  318D  259E  3183   	fcall	_ledSet
  3040                           
  3041                           ;main.c: 150:         } else if(Y0[1]>0){
  3042     046A  2C78               	goto	l3307
  3043     046B                     l3303:
  3044     046B  0864               	movf	_Y0+1,w
  3045     046C  3A80               	xorlw	128
  3046     046D  3E7F               	addlw	-129
  3047     046E  1C03               	skipc
  3048     046F  2C71               	goto	u2441
  3049     0470  2C72               	goto	u2440
  3050     0471                     u2441:
  3051     0471  2C78               	goto	l3307
  3052     0472                     u2440:
  3053     0472                     l3305:
  3054                           
  3055                           ;main.c: 151:             ledSet(2,6);
  3056     0472  3006               	movlw	6
  3057     0473  00FB               	movwf	ledSet@c
  3058     0474  3002               	movlw	2
  3059     0475  318D  259E  3183   	fcall	_ledSet
  3060     0478                     l3307:
  3061                           
  3062                           ;main.c: 153:         if(Y0[2]>0){
  3063     0478  0020               	movlb	0	; select bank0
  3064     0479  0865               	movf	_Y0+2,w
  3065     047A  3A80               	xorlw	128
  3066     047B  3E7F               	addlw	-129
  3067     047C  1C03               	skipc
  3068     047D  2C7F               	goto	u2451
  3069     047E  2C80               	goto	u2450
  3070     047F                     u2451:
  3071     047F  2C87               	goto	l3311
  3072     0480                     u2450:
  3073     0480                     l3309:
  3074                           
  3075                           ;main.c: 154:             ledSet(1,5);
  3076     0480  3005               	movlw	5
  3077     0481  00FB               	movwf	ledSet@c
  3078     0482  3001               	movlw	1
  3079     0483  318D  259E  3183   	fcall	_ledSet
  3080                           
  3081                           ;main.c: 155:         } else if(Y0[3]>0){
  3082     0486  2C94               	goto	l3315
  3083     0487                     l3311:
  3084     0487  0866               	movf	_Y0+3,w
  3085     0488  3A80               	xorlw	128
  3086     0489  3E7F               	addlw	-129
  3087     048A  1C03               	skipc
  3088     048B  2C8D               	goto	u2461
  3089     048C  2C8E               	goto	u2460
  3090     048D                     u2461:
  3091     048D  2C94               	goto	l3315
  3092     048E                     u2460:
  3093     048E                     l3313:
  3094                           
  3095                           ;main.c: 156:             ledSet(1,7);
  3096     048E  3007               	movlw	7
  3097     048F  00FB               	movwf	ledSet@c
  3098     0490  3001               	movlw	1
  3099     0491  318D  259E  3183   	fcall	_ledSet
  3100     0494                     l3315:
  3101                           
  3102                           ;main.c: 158:         if(Y0[4]>0){
  3103     0494  0020               	movlb	0	; select bank0
  3104     0495  0867               	movf	_Y0+4,w
  3105     0496  3A80               	xorlw	128
  3106     0497  3E7F               	addlw	-129
  3107     0498  1C03               	skipc
  3108     0499  2C9B               	goto	u2471
  3109     049A  2C9C               	goto	u2470
  3110     049B                     u2471:
  3111     049B  2CA3               	goto	l3319
  3112     049C                     u2470:
  3113     049C                     l3317:
  3114                           
  3115                           ;main.c: 159:             ledSet(4,6);
  3116     049C  3006               	movlw	6
  3117     049D  00FB               	movwf	ledSet@c
  3118     049E  3004               	movlw	4
  3119     049F  318D  259E  3183   	fcall	_ledSet
  3120                           
  3121                           ;main.c: 160:         } else if(Y0[5]>0){
  3122     04A2  2CB0               	goto	l3323
  3123     04A3                     l3319:
  3124     04A3  0868               	movf	_Y0+5,w
  3125     04A4  3A80               	xorlw	128
  3126     04A5  3E7F               	addlw	-129
  3127     04A6  1C03               	skipc
  3128     04A7  2CA9               	goto	u2481
  3129     04A8  2CAA               	goto	u2480
  3130     04A9                     u2481:
  3131     04A9  2CB0               	goto	l3323
  3132     04AA                     u2480:
  3133     04AA                     l3321:
  3134                           
  3135                           ;main.c: 161:             ledSet(6,6);
  3136     04AA  3006               	movlw	6
  3137     04AB  00FB               	movwf	ledSet@c
  3138     04AC  3006               	movlw	6
  3139     04AD  318D  259E  3183   	fcall	_ledSet
  3140     04B0                     l3323:
  3141                           
  3142                           ;main.c: 163:         if(Y0[6]>0){
  3143     04B0  0020               	movlb	0	; select bank0
  3144     04B1  0869               	movf	_Y0+6,w
  3145     04B2  3A80               	xorlw	128
  3146     04B3  3E7F               	addlw	-129
  3147     04B4  1C03               	skipc
  3148     04B5  2CB7               	goto	u2491
  3149     04B6  2CB8               	goto	u2490
  3150     04B7                     u2491:
  3151     04B7  2CBF               	goto	l3327
  3152     04B8                     u2490:
  3153     04B8                     l3325:
  3154                           
  3155                           ;main.c: 164:             ledSet(5,5);
  3156     04B8  3005               	movlw	5
  3157     04B9  00FB               	movwf	ledSet@c
  3158     04BA  3005               	movlw	5
  3159     04BB  318D  259E  3183   	fcall	_ledSet
  3160                           
  3161                           ;main.c: 165:         } else if(Y0[7]>0){
  3162     04BE  2CE8               	goto	l3341
  3163     04BF                     l3327:
  3164     04BF  086A               	movf	_Y0+7,w
  3165     04C0  3A80               	xorlw	128
  3166     04C1  3E7F               	addlw	-129
  3167     04C2  1C03               	skipc
  3168     04C3  2CC5               	goto	u2501
  3169     04C4  2CC6               	goto	u2500
  3170     04C5                     u2501:
  3171     04C5  2CE8               	goto	l3341
  3172     04C6                     u2500:
  3173     04C6                     l3329:
  3174                           
  3175                           ;main.c: 166:             ledSet(5,7);
  3176     04C6  3007               	movlw	7
  3177     04C7  00FB               	movwf	ledSet@c
  3178     04C8  3005               	movlw	5
  3179     04C9  318D  259E  3183   	fcall	_ledSet
  3180     04CC  2CE8               	goto	l3341
  3181     04CD                     l3331:
  3182                           
  3183                           ;main.c: 170:                 ledSet(4,1);
  3184     04CD  01FB               	clrf	ledSet@c
  3185     04CE  0AFB               	incf	ledSet@c,f
  3186     04CF  3004               	movlw	4
  3187     04D0  318D  259E  3183   	fcall	_ledSet
  3188                           
  3189                           ;main.c: 171:                 break;
  3190     04D3  2CFF               	goto	l3343
  3191     04D4                     l3333:
  3192                           
  3193                           ;main.c: 173:                 ledSet(6,1);
  3194     04D4  01FB               	clrf	ledSet@c
  3195     04D5  0AFB               	incf	ledSet@c,f
  3196     04D6  3006               	movlw	6
  3197     04D7  318D  259E  3183   	fcall	_ledSet
  3198                           
  3199                           ;main.c: 174:                 break;
  3200     04DA  2CFF               	goto	l3343
  3201     04DB                     l3335:
  3202                           
  3203                           ;main.c: 176:                 ledSet(5,0);
  3204     04DB  01FB               	clrf	ledSet@c
  3205     04DC  3005               	movlw	5
  3206     04DD  318D  259E  3183   	fcall	_ledSet
  3207                           
  3208                           ;main.c: 177:                 break;
  3209     04E0  2CFF               	goto	l3343
  3210     04E1                     l3337:
  3211                           
  3212                           ;main.c: 179:                 ledSet(5,2);
  3213     04E1  3002               	movlw	2
  3214     04E2  00FB               	movwf	ledSet@c
  3215     04E3  3005               	movlw	5
  3216     04E4  318D  259E  3183   	fcall	_ledSet
  3217                           
  3218                           ;main.c: 180:                 break;
  3219     04E7  2CFF               	goto	l3343
  3220     04E8                     l3341:
  3221     04E8  0020               	movlb	0	; select bank0
  3222     04E9  0842               	movf	main@choice,w
  3223     04EA  00BD               	movwf	??_main
  3224     04EB  01BE               	clrf	??_main+1
  3225                           
  3226                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3227                           ; Switch size 1, requested type "simple"
  3228                           ; Number of cases is 1, Range of values is 0 to 0
  3229                           ; switch strategies available:
  3230                           ; Name         Instructions Cycles
  3231                           ; simple_byte            4     3 (average)
  3232                           ; direct_byte            8     6 (fixed)
  3233                           ; jumptable            260     6 (fixed)
  3234                           ;	Chosen strategy is simple_byte
  3235     04EC  083E               	movf	??_main+1,w
  3236     04ED  3A00               	xorlw	0	; case 0
  3237     04EE  1903               	skipnz
  3238     04EF  2CF1               	goto	l3429
  3239     04F0  2CFF               	goto	l3343
  3240     04F1                     l3429:
  3241                           
  3242                           ; Switch size 1, requested type "simple"
  3243                           ; Number of cases is 4, Range of values is 0 to 3
  3244                           ; switch strategies available:
  3245                           ; Name         Instructions Cycles
  3246                           ; simple_byte           13     7 (average)
  3247                           ; direct_byte           14     6 (fixed)
  3248                           ; jumptable            260     6 (fixed)
  3249                           ;	Chosen strategy is simple_byte
  3250     04F1  083D               	movf	??_main,w
  3251     04F2  3A00               	xorlw	0	; case 0
  3252     04F3  1903               	skipnz
  3253     04F4  2CCD               	goto	l3331
  3254     04F5  3A01               	xorlw	1	; case 1
  3255     04F6  1903               	skipnz
  3256     04F7  2CD4               	goto	l3333
  3257     04F8  3A03               	xorlw	3	; case 2
  3258     04F9  1903               	skipnz
  3259     04FA  2CDB               	goto	l3335
  3260     04FB  3A01               	xorlw	1	; case 3
  3261     04FC  1903               	skipnz
  3262     04FD  2CE1               	goto	l3337
  3263     04FE  2CFF               	goto	l3343
  3264     04FF                     l3343:
  3265                           
  3266                           ;main.c: 182:         ledClear(7,0);
  3267     04FF  01F0               	clrf	ledClear@c
  3268     0500  3007               	movlw	7
  3269     0501  318D  258C  3183   	fcall	_ledClear
  3270                           
  3271                           ;main.c: 183:         ledClear(7,1);
  3272     0504  01F0               	clrf	ledClear@c
  3273     0505  0AF0               	incf	ledClear@c,f
  3274     0506  3007               	movlw	7
  3275     0507  318D  258C  3183   	fcall	_ledClear
  3276     050A                     l3345:
  3277                           
  3278                           ;main.c: 184:         if(incentive == -1){
  3279     050A  0020               	movlb	0	; select bank0
  3280     050B  0A44               	incf	main@incentive,w
  3281     050C  1D03               	btfss	3,2
  3282     050D  2D0F               	goto	u2511
  3283     050E  2D10               	goto	u2510
  3284     050F                     u2511:
  3285     050F  2D16               	goto	l3349
  3286     0510                     u2510:
  3287     0510                     l3347:
  3288                           
  3289                           ;main.c: 185:             ledSet(7,0);
  3290     0510  01FB               	clrf	ledSet@c
  3291     0511  3007               	movlw	7
  3292     0512  318D  259E  3183   	fcall	_ledSet
  3293                           
  3294                           ;main.c: 186:         } else if(incentive == 1){
  3295     0515  2D21               	goto	l3353
  3296     0516                     l3349:
  3297     0516  0344               	decf	main@incentive,w
  3298     0517  1D03               	btfss	3,2
  3299     0518  2D1A               	goto	u2521
  3300     0519  2D1B               	goto	u2520
  3301     051A                     u2521:
  3302     051A  2D21               	goto	l3353
  3303     051B                     u2520:
  3304     051B                     l3351:
  3305                           
  3306                           ;main.c: 187:             ledSet(7,1);
  3307     051B  01FB               	clrf	ledSet@c
  3308     051C  0AFB               	incf	ledSet@c,f
  3309     051D  3007               	movlw	7
  3310     051E  318D  259E  3183   	fcall	_ledSet
  3311     0521                     l3353:
  3312                           
  3313                           ;main.c: 189:         uint8_t foodPosition = snake_getFoodPosition();
  3314     0521  318C  24F6  3183   	fcall	_snake_getFoodPosition
  3315     0524  0020               	movlb	0	; select bank0
  3316     0525  00C3               	movwf	main@foodPosition_672
  3317     0526                     l3355:
  3318                           
  3319                           ;main.c: 190:         ledSet(foodPosition%4, foodPosition/4);
  3320     0526  3004               	movlw	4
  3321     0527  00F2               	movwf	___awdiv@divisor
  3322     0528  3000               	movlw	0
  3323     0529  00F3               	movwf	___awdiv@divisor+1
  3324     052A  0843               	movf	main@foodPosition_672,w
  3325     052B  00BD               	movwf	??_main
  3326     052C  01BE               	clrf	??_main+1
  3327     052D  083D               	movf	??_main,w
  3328     052E  00F4               	movwf	___awdiv@dividend
  3329     052F  083E               	movf	??_main+1,w
  3330     0530  00F5               	movwf	___awdiv@dividend+1
  3331     0531  3180  201E  3183   	fcall	___awdiv
  3332     0534  0872               	movf	?___awdiv,w
  3333     0535  00FB               	movwf	ledSet@c
  3334     0536  0020               	movlb	0	; select bank0
  3335     0537  0843               	movf	main@foodPosition_672,w
  3336     0538  3903               	andlw	3
  3337     0539  318D  259E  3183   	fcall	_ledSet
  3338     053C  2BB6               	goto	l3259
  3339     053D  3180  2802         	ljmp	start
  3340     053F                     __end_of_main:
  3341                           
  3342                           	psect	text1
  3343     013E                     __ptext1:	
  3344 ;; *************** function _snake_move *****************
  3345 ;; Defined at:
  3346 ;;		line 33 in file "snake.c"
  3347 ;; Parameters:    Size  Location     Type
  3348 ;;  direction       1    wreg     unsigned char 
  3349 ;; Auto vars:     Size  Location     Type
  3350 ;;  direction       1    8[BANK0 ] unsigned char 
  3351 ;;  i               1   10[BANK0 ] unsigned char 
  3352 ;;  incentive       1    9[BANK0 ] char 
  3353 ;; Return value:  Size  Location     Type
  3354 ;;                  1    wreg      char 
  3355 ;; Registers used:
  3356 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3357 ;; Tracked objects:
  3358 ;;		On entry : 0/0
  3359 ;;		On exit  : 0/0
  3360 ;;		Unchanged: 0/0
  3361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3362 ;;      Params:         0       0       0       0       0       0
  3363 ;;      Locals:         0       3       0       0       0       0
  3364 ;;      Temps:          0       2       0       0       0       0
  3365 ;;      Totals:         0       5       0       0       0       0
  3366 ;;Total ram usage:        5 bytes
  3367 ;; Hardware stack levels used: 1
  3368 ;; Hardware stack levels required when called: 3
  3369 ;; This function calls:
  3370 ;;		___awdiv
  3371 ;;		_rand
  3372 ;;		_snake_initiate
  3373 ;; This function is called by:
  3374 ;;		_main
  3375 ;; This function uses a non-reentrant model
  3376 ;;
  3377                           
  3378     013E                     _snake_move:	
  3379                           ;psect for function _snake_move
  3380                           
  3381                           
  3382                           ;incstack = 0
  3383                           ; Regs used in _snake_move: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3384                           ;snake_move@direction stored from wreg
  3385     013E  0020               	movlb	0	; select bank0
  3386     013F  00A8               	movwf	snake_move@direction
  3387     0140                     l2953:
  3388                           
  3389                           ;snake.c: 34:     remainingMoves--;
  3390     0140  3001               	movlw	1
  3391     0141  02DD               	subwf	_remainingMoves,f
  3392     0142                     l2955:
  3393                           
  3394                           ;snake.c: 35:     for(uint8_t i = 0; i < (4*4); i++){
  3395     0142  01AA               	clrf	snake_move@i
  3396     0143                     l2961:
  3397                           
  3398                           ;snake.c: 36:         if(field[i] > 0){
  3399     0143  082A               	movf	snake_move@i,w
  3400     0144  3ED0               	addlw	(low (_field| 0))& (0+255)
  3401     0145  0086               	movwf	6
  3402     0146  0187               	clrf	7
  3403     0147  0801               	movf	1,w
  3404     0148  1903               	btfsc	3,2
  3405     0149  294B               	goto	u2001
  3406     014A  294C               	goto	u2000
  3407     014B                     u2001:
  3408     014B  2952               	goto	l2965
  3409     014C                     u2000:
  3410     014C                     l2963:
  3411                           
  3412                           ;snake.c: 37:             field[i]--;
  3413     014C  082A               	movf	snake_move@i,w
  3414     014D  3ED0               	addlw	(low (_field| 0))& (0+255)
  3415     014E  0086               	movwf	6
  3416     014F  0187               	clrf	7
  3417     0150  3001               	movlw	1
  3418     0151  0281               	subwf	1,f
  3419     0152                     l2965:
  3420                           
  3421                           ;snake.c: 39:     }
  3422     0152  3001               	movlw	1
  3423     0153  00A6               	movwf	??_snake_move
  3424     0154  0826               	movf	??_snake_move,w
  3425     0155  07AA               	addwf	snake_move@i,f
  3426     0156                     l2967:
  3427     0156  3010               	movlw	16
  3428     0157  022A               	subwf	snake_move@i,w
  3429     0158  1C03               	skipc
  3430     0159  295B               	goto	u2011
  3431     015A  295C               	goto	u2010
  3432     015B                     u2011:
  3433     015B  2943               	goto	l2961
  3434     015C                     u2010:
  3435     015C                     l2969:
  3436                           
  3437                           ;snake.c: 40:     int8_t incentive = 0;
  3438     015C  01A9               	clrf	snake_move@incentive
  3439     015D                     l2971:
  3440                           
  3441                           ;snake.c: 41:     direction &= 0x03;
  3442     015D  3003               	movlw	3
  3443     015E  00A6               	movwf	??_snake_move
  3444     015F  0826               	movf	??_snake_move,w
  3445     0160  05A8               	andwf	snake_move@direction,f
  3446                           
  3447                           ;snake.c: 42:     switch(direction){
  3448     0161  29B3               	goto	l2999
  3449     0162                     l2973:
  3450                           
  3451                           ;snake.c: 44:             if((headPosition%4) == 0){
  3452     0162  085F               	movf	_headPosition,w
  3453     0163  3903               	andlw	3
  3454     0164  1D03               	btfss	3,2
  3455     0165  2967               	goto	u2021
  3456     0166  2968               	goto	u2020
  3457     0167                     u2021:
  3458     0167  296C               	goto	l2977
  3459     0168                     u2020:
  3460     0168                     l2975:
  3461                           
  3462                           ;snake.c: 45:                 incentive = -1;
  3463     0168  0020               	movlb	0	; select bank0
  3464     0169  01A9               	clrf	snake_move@incentive
  3465     016A  03A9               	decf	snake_move@incentive,f
  3466                           
  3467                           ;snake.c: 46:             } else{
  3468     016B  29C9               	goto	l3001
  3469     016C                     l2977:
  3470                           
  3471                           ;snake.c: 47:                 headPosition--;
  3472     016C  3001               	movlw	1
  3473     016D  02DF               	subwf	_headPosition,f
  3474     016E  29C9               	goto	l3001
  3475     016F                     l2979:
  3476                           
  3477                           ;snake.c: 51:             if((headPosition%4) == (4 -1)){
  3478     016F  3003               	movlw	3
  3479     0170  055F               	andwf	_headPosition,w
  3480     0171  00A6               	movwf	??_snake_move
  3481     0172  3003               	movlw	3
  3482     0173  0626               	xorwf	??_snake_move,w
  3483     0174  1D03               	btfss	3,2
  3484     0175  2977               	goto	u2031
  3485     0176  2978               	goto	u2030
  3486     0177                     u2031:
  3487     0177  2979               	goto	l2983
  3488     0178                     u2030:
  3489     0178  2968               	goto	l2975
  3490     0179                     l2983:
  3491                           
  3492                           ;snake.c: 54:                 headPosition++;
  3493     0179  3001               	movlw	1
  3494     017A  00A6               	movwf	??_snake_move
  3495     017B  0826               	movf	??_snake_move,w
  3496     017C  07DF               	addwf	_headPosition,f
  3497     017D  29C9               	goto	l3001
  3498     017E                     l2985:
  3499                           
  3500                           ;snake.c: 58:             if((headPosition/4) == 0){
  3501     017E  3004               	movlw	4
  3502     017F  00F2               	movwf	___awdiv@divisor
  3503     0180  3000               	movlw	0
  3504     0181  00F3               	movwf	___awdiv@divisor+1
  3505     0182  085F               	movf	_headPosition,w
  3506     0183  00A6               	movwf	??_snake_move
  3507     0184  01A7               	clrf	??_snake_move+1
  3508     0185  0826               	movf	??_snake_move,w
  3509     0186  00F4               	movwf	___awdiv@dividend
  3510     0187  0827               	movf	??_snake_move+1,w
  3511     0188  00F5               	movwf	___awdiv@dividend+1
  3512     0189  3180  201E  3181   	fcall	___awdiv
  3513     018C  0872               	movf	?___awdiv,w
  3514     018D  0473               	iorwf	?___awdiv+1,w
  3515     018E  1D03               	btfss	3,2
  3516     018F  2991               	goto	u2041
  3517     0190  2992               	goto	u2040
  3518     0191                     u2041:
  3519     0191  2993               	goto	l2989
  3520     0192                     u2040:
  3521     0192  2968               	goto	l2975
  3522     0193                     l2989:
  3523                           
  3524                           ;snake.c: 61:                 headPosition -= 4;
  3525     0193  3004               	movlw	4
  3526     0194  0020               	movlb	0	; select bank0
  3527     0195  02DF               	subwf	_headPosition,f
  3528     0196  29C9               	goto	l3001
  3529     0197                     l2991:
  3530                           
  3531                           ;snake.c: 65:             if((headPosition/4) == (4 -1)){
  3532     0197  3004               	movlw	4
  3533     0198  00F2               	movwf	___awdiv@divisor
  3534     0199  3000               	movlw	0
  3535     019A  00F3               	movwf	___awdiv@divisor+1
  3536     019B  085F               	movf	_headPosition,w
  3537     019C  00A6               	movwf	??_snake_move
  3538     019D  01A7               	clrf	??_snake_move+1
  3539     019E  0826               	movf	??_snake_move,w
  3540     019F  00F4               	movwf	___awdiv@dividend
  3541     01A0  0827               	movf	??_snake_move+1,w
  3542     01A1  00F5               	movwf	___awdiv@dividend+1
  3543     01A2  3180  201E  3181   	fcall	___awdiv
  3544     01A5  3003               	movlw	3
  3545     01A6  0672               	xorwf	?___awdiv,w
  3546     01A7  0473               	iorwf	?___awdiv+1,w
  3547     01A8  1D03               	btfss	3,2
  3548     01A9  29AB               	goto	u2051
  3549     01AA  29AC               	goto	u2050
  3550     01AB                     u2051:
  3551     01AB  29AD               	goto	l2995
  3552     01AC                     u2050:
  3553     01AC  2968               	goto	l2975
  3554     01AD                     l2995:
  3555                           
  3556                           ;snake.c: 68:                 headPosition += 4;
  3557     01AD  3004               	movlw	4
  3558     01AE  0020               	movlb	0	; select bank0
  3559     01AF  00A6               	movwf	??_snake_move
  3560     01B0  0826               	movf	??_snake_move,w
  3561     01B1  07DF               	addwf	_headPosition,f
  3562     01B2  29C9               	goto	l3001
  3563     01B3                     l2999:
  3564     01B3  0828               	movf	snake_move@direction,w
  3565     01B4  00A6               	movwf	??_snake_move
  3566     01B5  01A7               	clrf	??_snake_move+1
  3567                           
  3568                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3569                           ; Switch size 1, requested type "simple"
  3570                           ; Number of cases is 1, Range of values is 0 to 0
  3571                           ; switch strategies available:
  3572                           ; Name         Instructions Cycles
  3573                           ; simple_byte            4     3 (average)
  3574                           ; direct_byte            8     6 (fixed)
  3575                           ; jumptable            260     6 (fixed)
  3576                           ;	Chosen strategy is simple_byte
  3577     01B6  0827               	movf	??_snake_move+1,w
  3578     01B7  3A00               	xorlw	0	; case 0
  3579     01B8  1903               	skipnz
  3580     01B9  29BB               	goto	l3431
  3581     01BA  29C9               	goto	l3001
  3582     01BB                     l3431:
  3583                           
  3584                           ; Switch size 1, requested type "simple"
  3585                           ; Number of cases is 4, Range of values is 0 to 3
  3586                           ; switch strategies available:
  3587                           ; Name         Instructions Cycles
  3588                           ; simple_byte           13     7 (average)
  3589                           ; direct_byte           14     6 (fixed)
  3590                           ; jumptable            260     6 (fixed)
  3591                           ;	Chosen strategy is simple_byte
  3592     01BB  0826               	movf	??_snake_move,w
  3593     01BC  3A00               	xorlw	0	; case 0
  3594     01BD  1903               	skipnz
  3595     01BE  2962               	goto	l2973
  3596     01BF  3A01               	xorlw	1	; case 1
  3597     01C0  1903               	skipnz
  3598     01C1  296F               	goto	l2979
  3599     01C2  3A03               	xorlw	3	; case 2
  3600     01C3  1903               	skipnz
  3601     01C4  297E               	goto	l2985
  3602     01C5  3A01               	xorlw	1	; case 3
  3603     01C6  1903               	skipnz
  3604     01C7  2997               	goto	l2991
  3605     01C8  29C9               	goto	l3001
  3606     01C9                     l3001:
  3607                           
  3608                           ;snake.c: 72:     if(incentive == -1){
  3609     01C9  0A29               	incf	snake_move@incentive,w
  3610     01CA  1D03               	btfss	3,2
  3611     01CB  29CD               	goto	u2061
  3612     01CC  29CE               	goto	u2060
  3613     01CD                     u2061:
  3614     01CD  29D2               	goto	l3005
  3615     01CE                     u2060:
  3616     01CE                     l3003:
  3617                           
  3618                           ;snake.c: 73:         snake_initiate();
  3619     01CE  318E  2638  3181   	fcall	_snake_initiate
  3620                           
  3621                           ;snake.c: 74:     } else if(field[headPosition] > 0){
  3622     01D1  2A02               	goto	l3025
  3623     01D2                     l3005:
  3624     01D2  085F               	movf	_headPosition,w
  3625     01D3  3ED0               	addlw	(low (_field| 0))& (0+255)
  3626     01D4  0086               	movwf	6
  3627     01D5  0187               	clrf	7
  3628     01D6  0801               	movf	1,w
  3629     01D7  1903               	btfsc	3,2
  3630     01D8  29DA               	goto	u2071
  3631     01D9  29DB               	goto	u2070
  3632     01DA                     u2071:
  3633     01DA  29DE               	goto	l3011
  3634     01DB                     u2070:
  3635     01DB                     l3007:
  3636                           
  3637                           ;snake.c: 75:         incentive = -1;
  3638     01DB  01A9               	clrf	snake_move@incentive
  3639     01DC  03A9               	decf	snake_move@incentive,f
  3640     01DD  29CE               	goto	l3003
  3641     01DE                     l3011:
  3642                           
  3643                           ;snake.c: 78:         if(headPosition == foodPosition){
  3644     01DE  085F               	movf	_headPosition,w
  3645     01DF  065E               	xorwf	_foodPosition,w
  3646     01E0  1D03               	skipz
  3647     01E1  29E3               	goto	u2081
  3648     01E2  29E4               	goto	u2080
  3649     01E3                     u2081:
  3650     01E3  29FC               	goto	l3023
  3651     01E4                     u2080:
  3652     01E4                     l3013:
  3653                           
  3654                           ;snake.c: 79:             remainingMoves = 40;
  3655     01E4  3028               	movlw	40
  3656     01E5  00DD               	movwf	_remainingMoves
  3657     01E6                     l3015:
  3658                           
  3659                           ;snake.c: 80:             incentive = 1;
  3660     01E6  01A9               	clrf	snake_move@incentive
  3661     01E7  0AA9               	incf	snake_move@incentive,f
  3662     01E8                     l3017:
  3663                           
  3664                           ;snake.c: 81:             snakeSize++;
  3665     01E8  3001               	movlw	1
  3666     01E9  00A6               	movwf	??_snake_move
  3667     01EA  0826               	movf	??_snake_move,w
  3668     01EB  07E1               	addwf	_snakeSize,f
  3669     01EC                     l3019:
  3670                           
  3671                           ;snake.c: 83:                 foodPosition = rand()%(4*4);
  3672     01EC  318E  269B  3181   	fcall	_rand
  3673     01EF  087C               	movf	?_rand,w
  3674     01F0  390F               	andlw	15
  3675     01F1  0020               	movlb	0	; select bank0
  3676     01F2  00DE               	movwf	_foodPosition
  3677     01F3                     l3021:
  3678                           
  3679                           ;snake.c: 84:             }while(field[foodPosition] > 0);
  3680     01F3  085E               	movf	_foodPosition,w
  3681     01F4  3ED0               	addlw	(low (_field| 0))& (0+255)
  3682     01F5  0086               	movwf	6
  3683     01F6  0187               	clrf	7
  3684     01F7  0801               	movf	1,w
  3685     01F8  1D03               	btfss	3,2
  3686     01F9  29FB               	goto	u2091
  3687     01FA  29FC               	goto	u2090
  3688     01FB                     u2091:
  3689     01FB  29EC               	goto	l3019
  3690     01FC                     u2090:
  3691     01FC                     l3023:
  3692                           
  3693                           ;snake.c: 86:         field[headPosition] = snakeSize;
  3694     01FC  085F               	movf	_headPosition,w
  3695     01FD  3ED0               	addlw	(low (_field| 0))& (0+255)
  3696     01FE  0086               	movwf	6
  3697     01FF  0187               	clrf	7
  3698     0200  0861               	movf	_snakeSize,w
  3699     0201  0081               	movwf	1
  3700     0202                     l3025:
  3701                           
  3702                           ;snake.c: 88:     if(remainingMoves == 0){
  3703     0202  0020               	movlb	0	; select bank0
  3704     0203  085D               	movf	_remainingMoves,w
  3705     0204  1D03               	btfss	3,2
  3706     0205  2A07               	goto	u2101
  3707     0206  2A08               	goto	u2100
  3708     0207                     u2101:
  3709     0207  2A0D               	goto	l3031
  3710     0208                     u2100:
  3711     0208                     l3027:
  3712                           
  3713                           ;snake.c: 89:         incentive = -1;
  3714     0208  01A9               	clrf	snake_move@incentive
  3715     0209  03A9               	decf	snake_move@incentive,f
  3716     020A                     l3029:
  3717                           
  3718                           ;snake.c: 90:         snake_initiate();
  3719     020A  318E  2638  3181   	fcall	_snake_initiate
  3720     020D                     l3031:
  3721                           
  3722                           ;snake.c: 92:     return incentive;
  3723     020D  0020               	movlb	0	; select bank0
  3724     020E  0829               	movf	snake_move@incentive,w
  3725     020F                     l480:
  3726     020F  0008               	return
  3727     0210                     __end_of_snake_move:
  3728                           
  3729                           	psect	text2
  3730     0E38                     __ptext2:	
  3731 ;; *************** function _snake_initiate *****************
  3732 ;; Defined at:
  3733 ;;		line 21 in file "snake.c"
  3734 ;; Parameters:    Size  Location     Type
  3735 ;;		None
  3736 ;; Auto vars:     Size  Location     Type
  3737 ;;  i               1    5[BANK0 ] unsigned char 
  3738 ;; Return value:  Size  Location     Type
  3739 ;;                  1    wreg      void 
  3740 ;; Registers used:
  3741 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3742 ;; Tracked objects:
  3743 ;;		On entry : 0/0
  3744 ;;		On exit  : 0/0
  3745 ;;		Unchanged: 0/0
  3746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3747 ;;      Params:         0       0       0       0       0       0
  3748 ;;      Locals:         0       1       0       0       0       0
  3749 ;;      Temps:          0       1       0       0       0       0
  3750 ;;      Totals:         0       2       0       0       0       0
  3751 ;;Total ram usage:        2 bytes
  3752 ;; Hardware stack levels used: 1
  3753 ;; Hardware stack levels required when called: 2
  3754 ;; This function calls:
  3755 ;;		_rand
  3756 ;;		_srand
  3757 ;; This function is called by:
  3758 ;;		_main
  3759 ;;		_snake_move
  3760 ;; This function uses a non-reentrant model
  3761 ;;
  3762                           
  3763     0E38                     _snake_initiate:	
  3764                           ;psect for function _snake_initiate
  3765                           
  3766     0E38                     l2553:	
  3767                           ;incstack = 0
  3768                           ; Regs used in _snake_initiate: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3769                           
  3770                           
  3771                           ;snake.c: 22:     for(uint8_t i = 0; i < (4*4); i++){
  3772     0E38  0020               	movlb	0	; select bank0
  3773     0E39  01A5               	clrf	snake_initiate@i
  3774     0E3A                     l2559:
  3775                           
  3776                           ;snake.c: 23:         field[i] = 0;
  3777     0E3A  0825               	movf	snake_initiate@i,w
  3778     0E3B  3ED0               	addlw	(low (_field| 0))& (0+255)
  3779     0E3C  0086               	movwf	6
  3780     0E3D  0187               	clrf	7
  3781     0E3E  0181               	clrf	1
  3782     0E3F                     l2561:
  3783                           
  3784                           ;snake.c: 24:     }
  3785     0E3F  3001               	movlw	1
  3786     0E40  00A4               	movwf	??_snake_initiate
  3787     0E41  0824               	movf	??_snake_initiate,w
  3788     0E42  07A5               	addwf	snake_initiate@i,f
  3789     0E43                     l2563:
  3790     0E43  3010               	movlw	16
  3791     0E44  0225               	subwf	snake_initiate@i,w
  3792     0E45  1C03               	skipc
  3793     0E46  2E48               	goto	u1411
  3794     0E47  2E49               	goto	u1410
  3795     0E48                     u1411:
  3796     0E48  2E3A               	goto	l2559
  3797     0E49                     u1410:
  3798     0E49                     l2565:
  3799                           
  3800                           ;snake.c: 25:     srand(0);
  3801     0E49  3000               	movlw	0
  3802     0E4A  00F0               	movwf	srand@s
  3803     0E4B  00F1               	movwf	srand@s+1
  3804     0E4C  318D  2539  318E   	fcall	_srand
  3805                           
  3806                           ;snake.c: 26:     headPosition = rand()%(4*4);
  3807     0E4F  318E  269B  318E   	fcall	_rand
  3808     0E52  087C               	movf	?_rand,w
  3809     0E53  390F               	andlw	15
  3810     0E54  0020               	movlb	0	; select bank0
  3811     0E55  00DF               	movwf	_headPosition
  3812                           
  3813                           ;snake.c: 27:     foodPosition = rand()%(4*4);
  3814     0E56  318E  269B  318E   	fcall	_rand
  3815     0E59  087C               	movf	?_rand,w
  3816     0E5A  390F               	andlw	15
  3817     0E5B  0020               	movlb	0	; select bank0
  3818     0E5C  00DE               	movwf	_foodPosition
  3819     0E5D                     l2567:
  3820                           
  3821                           ;snake.c: 28:     snakeSize = 3;
  3822     0E5D  3003               	movlw	3
  3823     0E5E  00E1               	movwf	_snakeSize
  3824     0E5F                     l2569:
  3825                           
  3826                           ;snake.c: 29:     remainingMoves = 40;
  3827     0E5F  3028               	movlw	40
  3828     0E60  00DD               	movwf	_remainingMoves
  3829     0E61                     l2571:
  3830                           
  3831                           ;snake.c: 30:     field[headPosition] = snakeSize;
  3832     0E61  085F               	movf	_headPosition,w
  3833     0E62  3ED0               	addlw	(low (_field| 0))& (0+255)
  3834     0E63  0086               	movwf	6
  3835     0E64  0187               	clrf	7
  3836     0E65  0861               	movf	_snakeSize,w
  3837     0E66  0081               	movwf	1
  3838     0E67                     l452:
  3839     0E67  0008               	return
  3840     0E68                     __end_of_snake_initiate:
  3841                           
  3842                           	psect	text3
  3843     0D39                     __ptext3:	
  3844 ;; *************** function _srand *****************
  3845 ;; Defined at:
  3846 ;;		line 6 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\common\rand.c"
  3847 ;; Parameters:    Size  Location     Type
  3848 ;;  s               2    0[COMMON] unsigned int 
  3849 ;; Auto vars:     Size  Location     Type
  3850 ;;		None
  3851 ;; Return value:  Size  Location     Type
  3852 ;;                  1    wreg      void 
  3853 ;; Registers used:
  3854 ;;		wreg, status,2, status,0
  3855 ;; Tracked objects:
  3856 ;;		On entry : 0/0
  3857 ;;		On exit  : 0/0
  3858 ;;		Unchanged: 0/0
  3859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3860 ;;      Params:         2       0       0       0       0       0
  3861 ;;      Locals:         0       0       0       0       0       0
  3862 ;;      Temps:          0       0       0       0       0       0
  3863 ;;      Totals:         2       0       0       0       0       0
  3864 ;;Total ram usage:        2 bytes
  3865 ;; Hardware stack levels used: 1
  3866 ;; This function calls:
  3867 ;;		Nothing
  3868 ;; This function is called by:
  3869 ;;		_snake_initiate
  3870 ;; This function uses a non-reentrant model
  3871 ;;
  3872                           
  3873     0D39                     _srand:	
  3874                           ;psect for function _srand
  3875                           
  3876     0D39                     l2499:	
  3877                           ;incstack = 0
  3878                           ; Regs used in _srand: [wreg+status,2+status,0]
  3879                           
  3880     0D39  0870               	movf	srand@s,w
  3881     0D3A  3EFF               	addlw	255
  3882     0D3B  0020               	movlb	0	; select bank0
  3883     0D3C  00EB               	movwf	_seed
  3884     0D3D  30FF               	movlw	255
  3885     0D3E  3D71               	addwfc	srand@s+1,w
  3886     0D3F  00EC               	movwf	_seed+1
  3887     0D40  01ED               	clrf	_seed+2
  3888     0D41  01EE               	clrf	_seed+3
  3889     0D42                     l1278:
  3890     0D42  0008               	return
  3891     0D43                     __end_of_srand:
  3892                           
  3893                           	psect	text4
  3894     007D                     __ptext4:	
  3895 ;; *************** function _snake_getSurroundings *****************
  3896 ;; Defined at:
  3897 ;;		line 99 in file "snake.c"
  3898 ;; Parameters:    Size  Location     Type
  3899 ;;  surroundings    1    wreg     PTR char 
  3900 ;;		 -> Y0(8), 
  3901 ;; Auto vars:     Size  Location     Type
  3902 ;;  surroundings    1    7[BANK0 ] PTR char 
  3903 ;;		 -> Y0(8), 
  3904 ;;  i               1    6[BANK0 ] unsigned char 
  3905 ;;  i               1    3[BANK0 ] unsigned char 
  3906 ;;  ch              1    5[BANK0 ] unsigned char 
  3907 ;;  lh              1    4[BANK0 ] unsigned char 
  3908 ;;  cf              1    2[BANK0 ] unsigned char 
  3909 ;;  lf              1    1[BANK0 ] unsigned char 
  3910 ;;  p               1    0[BANK0 ] unsigned char 
  3911 ;; Return value:  Size  Location     Type
  3912 ;;                  1    wreg      void 
  3913 ;; Registers used:
  3914 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3915 ;; Tracked objects:
  3916 ;;		On entry : 0/0
  3917 ;;		On exit  : 0/0
  3918 ;;		Unchanged: 0/0
  3919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3920 ;;      Params:         0       0       0       0       0       0
  3921 ;;      Locals:         0       8       0       0       0       0
  3922 ;;      Temps:          2       0       0       0       0       0
  3923 ;;      Totals:         2       8       0       0       0       0
  3924 ;;Total ram usage:       10 bytes
  3925 ;; Hardware stack levels used: 1
  3926 ;; Hardware stack levels required when called: 1
  3927 ;; This function calls:
  3928 ;;		___awdiv
  3929 ;; This function is called by:
  3930 ;;		_main
  3931 ;; This function uses a non-reentrant model
  3932 ;;
  3933                           
  3934     007D                     _snake_getSurroundings:	
  3935                           ;psect for function _snake_getSurroundings
  3936                           
  3937                           
  3938                           ;incstack = 0
  3939                           ; Regs used in _snake_getSurroundings: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  3940                           ;snake_getSurroundings@surroundings stored from wreg
  3941     007D  0020               	movlb	0	; select bank0
  3942     007E  00A7               	movwf	snake_getSurroundings@surroundings
  3943     007F                     l2791:
  3944                           
  3945                           ;snake.c: 100:     for(uint8_t i = 0; i < 8; i++){
  3946     007F  01A3               	clrf	snake_getSurroundings@i
  3947     0080                     l2797:
  3948                           
  3949                           ;snake.c: 101:         surroundings[i] = 0;
  3950     0080  0823               	movf	snake_getSurroundings@i,w
  3951     0081  0727               	addwf	snake_getSurroundings@surroundings,w
  3952     0082  00FB               	movwf	??_snake_getSurroundings
  3953     0083  087B               	movf	??_snake_getSurroundings,w
  3954     0084  0086               	movwf	6
  3955     0085  0187               	clrf	7
  3956     0086  0181               	clrf	1
  3957     0087                     l2799:
  3958                           
  3959                           ;snake.c: 102:     }
  3960     0087  3001               	movlw	1
  3961     0088  00FB               	movwf	??_snake_getSurroundings
  3962     0089  087B               	movf	??_snake_getSurroundings,w
  3963     008A  07A3               	addwf	snake_getSurroundings@i,f
  3964     008B                     l2801:
  3965     008B  3008               	movlw	8
  3966     008C  0223               	subwf	snake_getSurroundings@i,w
  3967     008D  1C03               	skipc
  3968     008E  2890               	goto	u1791
  3969     008F  2891               	goto	u1790
  3970     0090                     u1791:
  3971     0090  2880               	goto	l2797
  3972     0091                     u1790:
  3973     0091                     l2803:
  3974                           
  3975                           ;snake.c: 103:     uint8_t lh = headPosition%4;
  3976     0091  085F               	movf	_headPosition,w
  3977     0092  3903               	andlw	3
  3978     0093  00A4               	movwf	snake_getSurroundings@lh
  3979     0094                     l2805:
  3980                           
  3981                           ;snake.c: 104:     uint8_t ch = headPosition/4;
  3982     0094  3004               	movlw	4
  3983     0095  00F2               	movwf	___awdiv@divisor
  3984     0096  3000               	movlw	0
  3985     0097  00F3               	movwf	___awdiv@divisor+1
  3986     0098  085F               	movf	_headPosition,w
  3987     0099  00FB               	movwf	??_snake_getSurroundings
  3988     009A  01FC               	clrf	??_snake_getSurroundings+1
  3989     009B  087B               	movf	??_snake_getSurroundings,w
  3990     009C  00F4               	movwf	___awdiv@dividend
  3991     009D  087C               	movf	??_snake_getSurroundings+1,w
  3992     009E  00F5               	movwf	___awdiv@dividend+1
  3993     009F  3180  201E  3180   	fcall	___awdiv
  3994     00A2  0872               	movf	?___awdiv,w
  3995     00A3  0020               	movlb	0	; select bank0
  3996     00A4  00A5               	movwf	snake_getSurroundings@ch
  3997     00A5                     l2807:
  3998                           
  3999                           ;snake.c: 105:     uint8_t lf = foodPosition%4;
  4000     00A5  085E               	movf	_foodPosition,w
  4001     00A6  3903               	andlw	3
  4002     00A7  00A1               	movwf	snake_getSurroundings@lf
  4003                           
  4004                           ;snake.c: 106:     uint8_t cf = foodPosition/4;
  4005     00A8  3004               	movlw	4
  4006     00A9  00F2               	movwf	___awdiv@divisor
  4007     00AA  3000               	movlw	0
  4008     00AB  00F3               	movwf	___awdiv@divisor+1
  4009     00AC  085E               	movf	_foodPosition,w
  4010     00AD  00FB               	movwf	??_snake_getSurroundings
  4011     00AE  01FC               	clrf	??_snake_getSurroundings+1
  4012     00AF  087B               	movf	??_snake_getSurroundings,w
  4013     00B0  00F4               	movwf	___awdiv@dividend
  4014     00B1  087C               	movf	??_snake_getSurroundings+1,w
  4015     00B2  00F5               	movwf	___awdiv@dividend+1
  4016     00B3  3180  201E  3180   	fcall	___awdiv
  4017     00B6  0872               	movf	?___awdiv,w
  4018     00B7  0020               	movlb	0	; select bank0
  4019     00B8  00A2               	movwf	snake_getSurroundings@cf
  4020     00B9                     l2809:
  4021                           
  4022                           ;snake.c: 107:     if(lh == 0){
  4023     00B9  0824               	movf	snake_getSurroundings@lh,w
  4024     00BA  1D03               	btfss	3,2
  4025     00BB  28BD               	goto	u1801
  4026     00BC  28BE               	goto	u1800
  4027     00BD                     u1801:
  4028     00BD  28C4               	goto	l2813
  4029     00BE                     u1800:
  4030     00BE                     l2811:
  4031                           
  4032                           ;snake.c: 108:         surroundings[0] = 1;
  4033     00BE  0827               	movf	snake_getSurroundings@surroundings,w
  4034     00BF  0086               	movwf	6
  4035     00C0  0187               	clrf	7
  4036     00C1  0181               	clrf	1
  4037     00C2  0A81               	incf	1,f
  4038                           
  4039                           ;snake.c: 109:     } else if(lh == (4 -1)){
  4040     00C3  28CF               	goto	l2817
  4041     00C4                     l2813:
  4042     00C4  3003               	movlw	3
  4043     00C5  0624               	xorwf	snake_getSurroundings@lh,w
  4044     00C6  1D03               	btfss	3,2
  4045     00C7  28C9               	goto	u1811
  4046     00C8  28CA               	goto	u1810
  4047     00C9                     u1811:
  4048     00C9  28CF               	goto	l2817
  4049     00CA                     u1810:
  4050     00CA                     l2815:
  4051                           
  4052                           ;snake.c: 110:         surroundings[1] = 1;
  4053     00CA  0A27               	incf	snake_getSurroundings@surroundings,w
  4054     00CB  0086               	movwf	6
  4055     00CC  0187               	clrf	7
  4056     00CD  0181               	clrf	1
  4057     00CE  0A81               	incf	1,f
  4058     00CF                     l2817:
  4059                           
  4060                           ;snake.c: 112:     if(ch == 0){
  4061     00CF  0825               	movf	snake_getSurroundings@ch,w
  4062     00D0  1D03               	btfss	3,2
  4063     00D1  28D3               	goto	u1821
  4064     00D2  28D4               	goto	u1820
  4065     00D3                     u1821:
  4066     00D3  28DB               	goto	l2821
  4067     00D4                     u1820:
  4068     00D4                     l2819:
  4069                           
  4070                           ;snake.c: 113:         surroundings[2] = 1;
  4071     00D4  0827               	movf	snake_getSurroundings@surroundings,w
  4072     00D5  3E02               	addlw	2
  4073     00D6  0086               	movwf	6
  4074     00D7  0187               	clrf	7
  4075     00D8  0181               	clrf	1
  4076     00D9  0A81               	incf	1,f
  4077                           
  4078                           ;snake.c: 114:     } else if(ch == (4 -1)){
  4079     00DA  28E7               	goto	l2825
  4080     00DB                     l2821:
  4081     00DB  3003               	movlw	3
  4082     00DC  0625               	xorwf	snake_getSurroundings@ch,w
  4083     00DD  1D03               	btfss	3,2
  4084     00DE  28E0               	goto	u1831
  4085     00DF  28E1               	goto	u1830
  4086     00E0                     u1831:
  4087     00E0  28E7               	goto	l2825
  4088     00E1                     u1830:
  4089     00E1                     l2823:
  4090                           
  4091                           ;snake.c: 115:         surroundings[3] = 1;
  4092     00E1  0827               	movf	snake_getSurroundings@surroundings,w
  4093     00E2  3E03               	addlw	3
  4094     00E3  0086               	movwf	6
  4095     00E4  0187               	clrf	7
  4096     00E5  0181               	clrf	1
  4097     00E6  0A81               	incf	1,f
  4098     00E7                     l2825:
  4099                           
  4100                           ;snake.c: 117:     uint8_t p;;snake.c: 118:     for(uint8_t i = 0; i < 4; i++){
  4101     00E7  01A6               	clrf	snake_getSurroundings@i_804
  4102     00E8                     l2831:
  4103                           
  4104                           ;snake.c: 119:         p = (headPosition+mapping[i])%(4*4);
  4105     00E8  0826               	movf	snake_getSurroundings@i_804,w
  4106     00E9  3EE0               	addlw	(low (_mapping| 0))& (0+255)
  4107     00EA  0086               	movwf	6
  4108     00EB  0187               	clrf	7
  4109     00EC  0801               	movf	1,w
  4110     00ED  075F               	addwf	_headPosition,w
  4111     00EE  390F               	andlw	15
  4112     00EF  00A0               	movwf	snake_getSurroundings@p
  4113                           
  4114                           ;snake.c: 120:         if(field[p] > 0){
  4115     00F0  0820               	movf	snake_getSurroundings@p,w
  4116     00F1  3ED0               	addlw	(low (_field| 0))& (0+255)
  4117     00F2  0086               	movwf	6
  4118     00F3  0187               	clrf	7
  4119     00F4  0801               	movf	1,w
  4120     00F5  1903               	btfsc	3,2
  4121     00F6  28F8               	goto	u1841
  4122     00F7  28F9               	goto	u1840
  4123     00F8                     u1841:
  4124     00F8  2901               	goto	l2835
  4125     00F9                     u1840:
  4126     00F9                     l2833:
  4127                           
  4128                           ;snake.c: 121:             surroundings[i] = 1;
  4129     00F9  0826               	movf	snake_getSurroundings@i_804,w
  4130     00FA  0727               	addwf	snake_getSurroundings@surroundings,w
  4131     00FB  00FB               	movwf	??_snake_getSurroundings
  4132     00FC  087B               	movf	??_snake_getSurroundings,w
  4133     00FD  0086               	movwf	6
  4134     00FE  0187               	clrf	7
  4135     00FF  0181               	clrf	1
  4136     0100  0A81               	incf	1,f
  4137     0101                     l2835:
  4138                           
  4139                           ;snake.c: 123:     }
  4140     0101  3001               	movlw	1
  4141     0102  00FB               	movwf	??_snake_getSurroundings
  4142     0103  087B               	movf	??_snake_getSurroundings,w
  4143     0104  07A6               	addwf	snake_getSurroundings@i_804,f
  4144     0105                     l2837:
  4145     0105  3004               	movlw	4
  4146     0106  0226               	subwf	snake_getSurroundings@i_804,w
  4147     0107  1C03               	skipc
  4148     0108  290A               	goto	u1851
  4149     0109  290B               	goto	u1850
  4150     010A                     u1851:
  4151     010A  28E8               	goto	l2831
  4152     010B                     u1850:
  4153     010B                     l2839:
  4154                           
  4155                           ;snake.c: 124:     if(lf<lh){
  4156     010B  0824               	movf	snake_getSurroundings@lh,w
  4157     010C  0221               	subwf	snake_getSurroundings@lf,w
  4158     010D  1803               	skipnc
  4159     010E  2910               	goto	u1861
  4160     010F  2911               	goto	u1860
  4161     0110                     u1861:
  4162     0110  2918               	goto	l2843
  4163     0111                     u1860:
  4164     0111                     l2841:
  4165                           
  4166                           ;snake.c: 125:         surroundings[4] = 1;
  4167     0111  0827               	movf	snake_getSurroundings@surroundings,w
  4168     0112  3E04               	addlw	4
  4169     0113  0086               	movwf	6
  4170     0114  0187               	clrf	7
  4171     0115  0181               	clrf	1
  4172     0116  0A81               	incf	1,f
  4173                           
  4174                           ;snake.c: 126:     } else if(lf>lh){
  4175     0117  2924               	goto	l2847
  4176     0118                     l2843:
  4177     0118  0821               	movf	snake_getSurroundings@lf,w
  4178     0119  0224               	subwf	snake_getSurroundings@lh,w
  4179     011A  1803               	skipnc
  4180     011B  291D               	goto	u1871
  4181     011C  291E               	goto	u1870
  4182     011D                     u1871:
  4183     011D  2924               	goto	l2847
  4184     011E                     u1870:
  4185     011E                     l2845:
  4186                           
  4187                           ;snake.c: 127:         surroundings[5] = 1;
  4188     011E  0827               	movf	snake_getSurroundings@surroundings,w
  4189     011F  3E05               	addlw	5
  4190     0120  0086               	movwf	6
  4191     0121  0187               	clrf	7
  4192     0122  0181               	clrf	1
  4193     0123  0A81               	incf	1,f
  4194     0124                     l2847:
  4195                           
  4196                           ;snake.c: 129:     if(cf<ch){
  4197     0124  0825               	movf	snake_getSurroundings@ch,w
  4198     0125  0222               	subwf	snake_getSurroundings@cf,w
  4199     0126  1803               	skipnc
  4200     0127  2929               	goto	u1881
  4201     0128  292A               	goto	u1880
  4202     0129                     u1881:
  4203     0129  2931               	goto	l2851
  4204     012A                     u1880:
  4205     012A                     l2849:
  4206                           
  4207                           ;snake.c: 130:         surroundings[6] = 1;
  4208     012A  0827               	movf	snake_getSurroundings@surroundings,w
  4209     012B  3E06               	addlw	6
  4210     012C  0086               	movwf	6
  4211     012D  0187               	clrf	7
  4212     012E  0181               	clrf	1
  4213     012F  0A81               	incf	1,f
  4214                           
  4215                           ;snake.c: 131:     } else if(cf>ch){
  4216     0130  293D               	goto	l503
  4217     0131                     l2851:
  4218     0131  0822               	movf	snake_getSurroundings@cf,w
  4219     0132  0225               	subwf	snake_getSurroundings@ch,w
  4220     0133  1803               	skipnc
  4221     0134  2936               	goto	u1891
  4222     0135  2937               	goto	u1890
  4223     0136                     u1891:
  4224     0136  293D               	goto	l503
  4225     0137                     u1890:
  4226     0137                     l2853:
  4227                           
  4228                           ;snake.c: 132:         surroundings[7] = 1;
  4229     0137  0827               	movf	snake_getSurroundings@surroundings,w
  4230     0138  3E07               	addlw	7
  4231     0139  0086               	movwf	6
  4232     013A  0187               	clrf	7
  4233     013B  0181               	clrf	1
  4234     013C  0A81               	incf	1,f
  4235     013D                     l503:
  4236     013D  0008               	return
  4237     013E                     __end_of_snake_getSurroundings:
  4238                           
  4239                           	psect	text5
  4240     0CF6                     __ptext5:	
  4241 ;; *************** function _snake_getFoodPosition *****************
  4242 ;; Defined at:
  4243 ;;		line 143 in file "snake.c"
  4244 ;; Parameters:    Size  Location     Type
  4245 ;;		None
  4246 ;; Auto vars:     Size  Location     Type
  4247 ;;		None
  4248 ;; Return value:  Size  Location     Type
  4249 ;;                  1    wreg      unsigned char 
  4250 ;; Registers used:
  4251 ;;		wreg
  4252 ;; Tracked objects:
  4253 ;;		On entry : 0/0
  4254 ;;		On exit  : 0/0
  4255 ;;		Unchanged: 0/0
  4256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4257 ;;      Params:         0       0       0       0       0       0
  4258 ;;      Locals:         0       0       0       0       0       0
  4259 ;;      Temps:          0       0       0       0       0       0
  4260 ;;      Totals:         0       0       0       0       0       0
  4261 ;;Total ram usage:        0 bytes
  4262 ;; Hardware stack levels used: 1
  4263 ;; This function calls:
  4264 ;;		Nothing
  4265 ;; This function is called by:
  4266 ;;		_main
  4267 ;; This function uses a non-reentrant model
  4268 ;;
  4269                           
  4270     0CF6                     _snake_getFoodPosition:	
  4271                           ;psect for function _snake_getFoodPosition
  4272                           
  4273     0CF6                     l2753:	
  4274                           ;incstack = 0
  4275                           ; Regs used in _snake_getFoodPosition: [wreg]
  4276                           
  4277                           
  4278                           ;snake.c: 144:     return foodPosition;
  4279     0CF6  0020               	movlb	0	; select bank0
  4280     0CF7  085E               	movf	_foodPosition,w
  4281     0CF8                     l512:
  4282     0CF8  0008               	return
  4283     0CF9                     __end_of_snake_getFoodPosition:
  4284                           
  4285                           	psect	text6
  4286     0CF4                     __ptext6:	
  4287 ;; *************** function _snake_getField *****************
  4288 ;; Defined at:
  4289 ;;		line 95 in file "snake.c"
  4290 ;; Parameters:    Size  Location     Type
  4291 ;;		None
  4292 ;; Auto vars:     Size  Location     Type
  4293 ;;		None
  4294 ;; Return value:  Size  Location     Type
  4295 ;;                  1    wreg      PTR unsigned char 
  4296 ;; Registers used:
  4297 ;;		wreg
  4298 ;; Tracked objects:
  4299 ;;		On entry : 0/0
  4300 ;;		On exit  : 0/0
  4301 ;;		Unchanged: 0/0
  4302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4303 ;;      Params:         0       0       0       0       0       0
  4304 ;;      Locals:         0       0       0       0       0       0
  4305 ;;      Temps:          0       0       0       0       0       0
  4306 ;;      Totals:         0       0       0       0       0       0
  4307 ;;Total ram usage:        0 bytes
  4308 ;; Hardware stack levels used: 1
  4309 ;; This function calls:
  4310 ;;		Nothing
  4311 ;; This function is called by:
  4312 ;;		_main
  4313 ;; This function uses a non-reentrant model
  4314 ;;
  4315                           
  4316     0CF4                     _snake_getField:	
  4317                           ;psect for function _snake_getField
  4318                           
  4319     0CF4                     l2745:	
  4320                           ;incstack = 0
  4321                           ; Regs used in _snake_getField: [wreg]
  4322                           
  4323                           
  4324                           ;snake.c: 96:     return field;
  4325     0CF4  30D0               	movlw	(low (_field| 0))& (0+255)
  4326     0CF5                     l483:
  4327     0CF5  0008               	return
  4328     0CF6                     __end_of_snake_getField:
  4329                           
  4330                           	psect	text7
  4331     0E0A                     __ptext7:	
  4332 ;; *************** function _sendMatrix *****************
  4333 ;; Defined at:
  4334 ;;		line 55 in file "ledMatrix.c"
  4335 ;; Parameters:    Size  Location     Type
  4336 ;;		None
  4337 ;; Auto vars:     Size  Location     Type
  4338 ;;  j               1    6[COMMON] unsigned char 
  4339 ;;  i               1    7[COMMON] unsigned char 
  4340 ;;  nb              1    5[COMMON] unsigned char 
  4341 ;;  b               1    4[COMMON] unsigned char 
  4342 ;; Return value:  Size  Location     Type
  4343 ;;                  1    wreg      void 
  4344 ;; Registers used:
  4345 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4346 ;; Tracked objects:
  4347 ;;		On entry : 0/0
  4348 ;;		On exit  : 0/0
  4349 ;;		Unchanged: 0/0
  4350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4351 ;;      Params:         0       0       0       0       0       0
  4352 ;;      Locals:         4       0       0       0       0       0
  4353 ;;      Temps:          1       0       0       0       0       0
  4354 ;;      Totals:         5       0       0       0       0       0
  4355 ;;Total ram usage:        5 bytes
  4356 ;; Hardware stack levels used: 1
  4357 ;; Hardware stack levels required when called: 2
  4358 ;; This function calls:
  4359 ;;		_txMAX7219
  4360 ;; This function is called by:
  4361 ;;		_main
  4362 ;; This function uses a non-reentrant model
  4363 ;;
  4364                           
  4365     0E0A                     _sendMatrix:	
  4366                           ;psect for function _sendMatrix
  4367                           
  4368     0E0A                     l2757:	
  4369                           ;incstack = 0
  4370                           ; Regs used in _sendMatrix: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4371                           
  4372                           
  4373                           ;ledMatrix.c: 56:     uint8_t b;;ledMatrix.c: 57:     uint8_t nb;;ledMatrix.c: 58:     f
      +                          or(uint8_t i=0;i<8;i++){
  4374     0E0A  01F7               	clrf	sendMatrix@i
  4375     0E0B                     l2763:
  4376                           
  4377                           ;ledMatrix.c: 62:         b = matrix[i];
  4378     0E0B  0877               	movf	sendMatrix@i,w
  4379     0E0C  3EA0               	addlw	(low (_matrix| 0))& (0+255)
  4380     0E0D  0086               	movwf	6
  4381     0E0E  0187               	clrf	7
  4382     0E0F  0801               	movf	1,w
  4383     0E10  00F4               	movwf	sendMatrix@b
  4384     0E11                     l2765:
  4385                           
  4386                           ;ledMatrix.c: 65:         nb = 0x00;
  4387     0E11  01F5               	clrf	sendMatrix@nb
  4388     0E12                     l2767:
  4389                           
  4390                           ;ledMatrix.c: 66:         for(uint8_t j = 0; j < 8; j++){
  4391     0E12  01F6               	clrf	sendMatrix@j
  4392     0E13                     l2773:
  4393                           
  4394                           ;ledMatrix.c: 67:             nb <<= 1;
  4395     0E13  1003               	clrc
  4396     0E14  0DF5               	rlf	sendMatrix@nb,f
  4397     0E15                     l2775:
  4398                           
  4399                           ;ledMatrix.c: 68:             nb |= b&0x01;
  4400     0E15  0874               	movf	sendMatrix@b,w
  4401     0E16  3901               	andlw	1
  4402     0E17  00F3               	movwf	??_sendMatrix
  4403     0E18  0873               	movf	??_sendMatrix,w
  4404     0E19  04F5               	iorwf	sendMatrix@nb,f
  4405     0E1A                     l2777:
  4406                           
  4407                           ;ledMatrix.c: 69:             b >>= 1;
  4408     0E1A  1003               	clrc
  4409     0E1B  0CF4               	rrf	sendMatrix@b,f
  4410                           
  4411                           ;ledMatrix.c: 70:         }
  4412     0E1C  3001               	movlw	1
  4413     0E1D  00F3               	movwf	??_sendMatrix
  4414     0E1E  0873               	movf	??_sendMatrix,w
  4415     0E1F  07F6               	addwf	sendMatrix@j,f
  4416     0E20                     l2779:
  4417     0E20  3008               	movlw	8
  4418     0E21  0276               	subwf	sendMatrix@j,w
  4419     0E22  1C03               	skipc
  4420     0E23  2E25               	goto	u1771
  4421     0E24  2E26               	goto	u1770
  4422     0E25                     u1771:
  4423     0E25  2E13               	goto	l2773
  4424     0E26                     u1770:
  4425     0E26                     l2781:
  4426                           
  4427                           ;ledMatrix.c: 71:         txMAX7219(i+1,nb);
  4428     0E26  0875               	movf	sendMatrix@nb,w
  4429     0E27  00F1               	movwf	txMAX7219@dat0
  4430     0E28  0877               	movf	sendMatrix@i,w
  4431     0E29  3E01               	addlw	1
  4432     0E2A  3180  2004  318E   	fcall	_txMAX7219
  4433     0E2D                     l2783:
  4434                           
  4435                           ;ledMatrix.c: 75:     }
  4436     0E2D  3001               	movlw	1
  4437     0E2E  00F3               	movwf	??_sendMatrix
  4438     0E2F  0873               	movf	??_sendMatrix,w
  4439     0E30  07F7               	addwf	sendMatrix@i,f
  4440     0E31                     l2785:
  4441     0E31  3008               	movlw	8
  4442     0E32  0277               	subwf	sendMatrix@i,w
  4443     0E33  1C03               	skipc
  4444     0E34  2E36               	goto	u1781
  4445     0E35  2E37               	goto	u1780
  4446     0E36                     u1781:
  4447     0E36  2E0B               	goto	l2763
  4448     0E37                     u1780:
  4449     0E37                     l423:
  4450     0E37  0008               	return
  4451     0E38                     __end_of_sendMatrix:
  4452                           
  4453                           	psect	text8
  4454     0D9E                     __ptext8:	
  4455 ;; *************** function _ledSet *****************
  4456 ;; Defined at:
  4457 ;;		line 31 in file "ledMatrix.c"
  4458 ;; Parameters:    Size  Location     Type
  4459 ;;  l               1    wreg     unsigned char 
  4460 ;;  c               1   11[COMMON] unsigned char 
  4461 ;; Auto vars:     Size  Location     Type
  4462 ;;  l               1    0[BANK0 ] unsigned char 
  4463 ;; Return value:  Size  Location     Type
  4464 ;;                  1    wreg      void 
  4465 ;; Registers used:
  4466 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4467 ;; Tracked objects:
  4468 ;;		On entry : 0/0
  4469 ;;		On exit  : 0/0
  4470 ;;		Unchanged: 0/0
  4471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4472 ;;      Params:         1       0       0       0       0       0
  4473 ;;      Locals:         0       1       0       0       0       0
  4474 ;;      Temps:          2       0       0       0       0       0
  4475 ;;      Totals:         3       1       0       0       0       0
  4476 ;;Total ram usage:        4 bytes
  4477 ;; Hardware stack levels used: 1
  4478 ;; This function calls:
  4479 ;;		Nothing
  4480 ;; This function is called by:
  4481 ;;		_main
  4482 ;;		_setLine
  4483 ;; This function uses a non-reentrant model
  4484 ;;
  4485                           
  4486     0D9E                     _ledSet:	
  4487                           ;psect for function _ledSet
  4488                           
  4489                           
  4490                           ;incstack = 0
  4491                           ; Regs used in _ledSet: [wreg+fsr1l+fsr1h+status,2+status,0]
  4492                           ;ledSet@l stored from wreg
  4493     0D9E  0020               	movlb	0	; select bank0
  4494     0D9F  00A0               	movwf	ledSet@l
  4495     0DA0                     l2749:
  4496                           
  4497                           ;ledMatrix.c: 32:     (matrix[c]) |= 1UL << (l);
  4498     0DA0  3001               	movlw	1
  4499     0DA1  00FC               	movwf	??_ledSet
  4500     0DA2  0A20               	incf	ledSet@l,w
  4501     0DA3  2DA5               	goto	u1754
  4502     0DA4                     u1755:
  4503     0DA4  35FC               	lslf	??_ledSet,f
  4504     0DA5                     u1754:
  4505     0DA5  0B89               	decfsz	9,f
  4506     0DA6  2DA4               	goto	u1755
  4507     0DA7  087C               	movf	??_ledSet,w
  4508     0DA8  00FD               	movwf	??_ledSet+1
  4509     0DA9  087B               	movf	ledSet@c,w
  4510     0DAA  3EA0               	addlw	(low (_matrix| 0))& (0+255)
  4511     0DAB  0086               	movwf	6
  4512     0DAC  0187               	clrf	7
  4513     0DAD  087D               	movf	??_ledSet+1,w
  4514     0DAE  0481               	iorwf	1,f
  4515     0DAF                     l403:
  4516     0DAF  0008               	return
  4517     0DB0                     __end_of_ledSet:
  4518                           
  4519                           	psect	text9
  4520     0D8C                     __ptext9:	
  4521 ;; *************** function _ledClear *****************
  4522 ;; Defined at:
  4523 ;;		line 35 in file "ledMatrix.c"
  4524 ;; Parameters:    Size  Location     Type
  4525 ;;  l               1    wreg     unsigned char 
  4526 ;;  c               1    0[COMMON] unsigned char 
  4527 ;; Auto vars:     Size  Location     Type
  4528 ;;  l               1    3[COMMON] unsigned char 
  4529 ;; Return value:  Size  Location     Type
  4530 ;;                  1    wreg      void 
  4531 ;; Registers used:
  4532 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4533 ;; Tracked objects:
  4534 ;;		On entry : 0/0
  4535 ;;		On exit  : 0/0
  4536 ;;		Unchanged: 0/0
  4537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4538 ;;      Params:         1       0       0       0       0       0
  4539 ;;      Locals:         1       0       0       0       0       0
  4540 ;;      Temps:          2       0       0       0       0       0
  4541 ;;      Totals:         4       0       0       0       0       0
  4542 ;;Total ram usage:        4 bytes
  4543 ;; Hardware stack levels used: 1
  4544 ;; This function calls:
  4545 ;;		Nothing
  4546 ;; This function is called by:
  4547 ;;		_main
  4548 ;;		_setLine
  4549 ;; This function uses a non-reentrant model
  4550 ;;
  4551                           
  4552     0D8C                     _ledClear:	
  4553                           ;psect for function _ledClear
  4554                           
  4555                           
  4556                           ;incstack = 0
  4557                           ; Regs used in _ledClear: [wreg+fsr1l+fsr1h+status,2+status,0]
  4558                           ;ledClear@l stored from wreg
  4559     0D8C  00F3               	movwf	ledClear@l
  4560     0D8D                     l2751:
  4561                           
  4562                           ;ledMatrix.c: 36:     (matrix[c]) &= ~(1UL << (l));
  4563     0D8D  3001               	movlw	1
  4564     0D8E  00F1               	movwf	??_ledClear
  4565     0D8F  0A73               	incf	ledClear@l,w
  4566     0D90  2D92               	goto	u1764
  4567     0D91                     u1765:
  4568     0D91  35F1               	lslf	??_ledClear,f
  4569     0D92                     u1764:
  4570     0D92  0B89               	decfsz	9,f
  4571     0D93  2D91               	goto	u1765
  4572     0D94  0871               	movf	??_ledClear,w
  4573     0D95  3AFF               	xorlw	255
  4574     0D96  00F2               	movwf	??_ledClear+1
  4575     0D97  0870               	movf	ledClear@c,w
  4576     0D98  3EA0               	addlw	(low (_matrix| 0))& (0+255)
  4577     0D99  0086               	movwf	6
  4578     0D9A  0187               	clrf	7
  4579     0D9B  0872               	movf	??_ledClear+1,w
  4580     0D9C  0581               	andwf	1,f
  4581     0D9D                     l406:
  4582     0D9D  0008               	return
  4583     0D9E                     __end_of_ledClear:
  4584                           
  4585                           	psect	text10
  4586     0ED0                     __ptext10:	
  4587 ;; *************** function _initMAX7219 *****************
  4588 ;; Defined at:
  4589 ;;		line 16 in file "ledMatrix.c"
  4590 ;; Parameters:    Size  Location     Type
  4591 ;;		None
  4592 ;; Auto vars:     Size  Location     Type
  4593 ;;		None
  4594 ;; Return value:  Size  Location     Type
  4595 ;;                  1    wreg      void 
  4596 ;; Registers used:
  4597 ;;		wreg, status,2, status,0, pclath, cstack
  4598 ;; Tracked objects:
  4599 ;;		On entry : 0/0
  4600 ;;		On exit  : 0/0
  4601 ;;		Unchanged: 0/0
  4602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4603 ;;      Params:         0       0       0       0       0       0
  4604 ;;      Locals:         0       0       0       0       0       0
  4605 ;;      Temps:          2       0       0       0       0       0
  4606 ;;      Totals:         2       0       0       0       0       0
  4607 ;;Total ram usage:        2 bytes
  4608 ;; Hardware stack levels used: 1
  4609 ;; Hardware stack levels required when called: 2
  4610 ;; This function calls:
  4611 ;;		_txMAX7219
  4612 ;; This function is called by:
  4613 ;;		_main
  4614 ;; This function uses a non-reentrant model
  4615 ;;
  4616                           
  4617     0ED0                     _initMAX7219:	
  4618                           ;psect for function _initMAX7219
  4619                           
  4620     0ED0                     l2735:	
  4621                           ;incstack = 0
  4622                           ; Regs used in _initMAX7219: [wreg+status,2+status,0+pclath+cstack]
  4623                           
  4624                           
  4625                           ;ledMatrix.c: 17:     LATBbits.LATB1 = 1;
  4626     0ED0  0022               	movlb	2	; select bank2
  4627     0ED1  148D               	bsf	13,1	;volatile
  4628                           
  4629                           ;ledMatrix.c: 18:     TRISBbits.TRISB1 = 0;
  4630     0ED2  0021               	movlb	1	; select bank1
  4631     0ED3  108D               	bcf	13,1	;volatile
  4632                           
  4633                           ;ledMatrix.c: 19:     SSP1CON1bits.SSPEN = 1;
  4634     0ED4  0024               	movlb	4	; select bank4
  4635     0ED5  1695               	bsf	21,5	;volatile
  4636     0ED6                     l2737:
  4637                           
  4638                           ;ledMatrix.c: 20:     txMAX7219(0x09,0x00);
  4639     0ED6  01F1               	clrf	txMAX7219@dat0
  4640     0ED7  3009               	movlw	9
  4641     0ED8  3180  2004  318E   	fcall	_txMAX7219
  4642                           
  4643                           ;ledMatrix.c: 21:     txMAX7219(0x0A,0x00);
  4644     0EDB  01F1               	clrf	txMAX7219@dat0
  4645     0EDC  300A               	movlw	10
  4646     0EDD  3180  2004  318E   	fcall	_txMAX7219
  4647                           
  4648                           ;ledMatrix.c: 22:     txMAX7219(0x0C,0x00);
  4649     0EE0  01F1               	clrf	txMAX7219@dat0
  4650     0EE1  300C               	movlw	12
  4651     0EE2  3180  2004  318E   	fcall	_txMAX7219
  4652                           
  4653                           ;ledMatrix.c: 23:     txMAX7219(0x0B,0x07);
  4654     0EE5  3007               	movlw	7
  4655     0EE6  00F1               	movwf	txMAX7219@dat0
  4656     0EE7  300B               	movlw	11
  4657     0EE8  3180  2004  318E   	fcall	_txMAX7219
  4658                           
  4659                           ;ledMatrix.c: 24:     txMAX7219(0x0C,0x01);
  4660     0EEB  01F1               	clrf	txMAX7219@dat0
  4661     0EEC  0AF1               	incf	txMAX7219@dat0,f
  4662     0EED  300C               	movlw	12
  4663     0EEE  3180  2004  318E   	fcall	_txMAX7219
  4664                           
  4665                           ;ledMatrix.c: 25:     txMAX7219(0x0F,0x01);
  4666     0EF1  01F1               	clrf	txMAX7219@dat0
  4667     0EF2  0AF1               	incf	txMAX7219@dat0,f
  4668     0EF3  300F               	movlw	15
  4669     0EF4  3180  2004  318E   	fcall	_txMAX7219
  4670     0EF7                     l2739:
  4671                           
  4672                           ;ledMatrix.c: 26:     _delay((unsigned long)((1000)*(8000000/4000.0)));
  4673     0EF7  300B               	movlw	11
  4674     0EF8  00F4               	movwf	??_initMAX7219+1
  4675     0EF9  3026               	movlw	38
  4676     0EFA  00F3               	movwf	??_initMAX7219
  4677     0EFB  305E               	movlw	94
  4678     0EFC                     u2567:
  4679     0EFC  0B89               	decfsz	9,f
  4680     0EFD  2EFC               	goto	u2567
  4681     0EFE  0BF3               	decfsz	??_initMAX7219,f
  4682     0EFF  2EFC               	goto	u2567
  4683     0F00  0BF4               	decfsz	??_initMAX7219+1,f
  4684     0F01  2EFC               	goto	u2567
  4685     0F02                     l2741:
  4686                           
  4687                           ;ledMatrix.c: 27:     txMAX7219(0x0F,0x00);
  4688     0F02  01F1               	clrf	txMAX7219@dat0
  4689     0F03  300F               	movlw	15
  4690     0F04  3180  2004  318E   	fcall	_txMAX7219
  4691     0F07                     l2743:
  4692                           
  4693                           ;ledMatrix.c: 28:     txMAX7219(0x0C,0x01);
  4694     0F07  01F1               	clrf	txMAX7219@dat0
  4695     0F08  0AF1               	incf	txMAX7219@dat0,f
  4696     0F09  300C               	movlw	12
  4697     0F0A  3180  2004  318E   	fcall	_txMAX7219
  4698     0F0D                     l400:
  4699     0F0D  0008               	return
  4700     0F0E                     __end_of_initMAX7219:
  4701                           
  4702                           	psect	text11
  4703     0004                     __ptext11:	
  4704 ;; *************** function _txMAX7219 *****************
  4705 ;; Defined at:
  4706 ;;		line 5 in file "ledMatrix.c"
  4707 ;; Parameters:    Size  Location     Type
  4708 ;;  addr0           1    wreg     unsigned char 
  4709 ;;  dat0            1    1[COMMON] unsigned char 
  4710 ;; Auto vars:     Size  Location     Type
  4711 ;;  addr0           1    2[COMMON] unsigned char 
  4712 ;; Return value:  Size  Location     Type
  4713 ;;                  1    wreg      void 
  4714 ;; Registers used:
  4715 ;;		wreg, status,2, status,0, pclath, cstack
  4716 ;; Tracked objects:
  4717 ;;		On entry : 0/0
  4718 ;;		On exit  : 0/0
  4719 ;;		Unchanged: 0/0
  4720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4721 ;;      Params:         1       0       0       0       0       0
  4722 ;;      Locals:         1       0       0       0       0       0
  4723 ;;      Temps:          0       0       0       0       0       0
  4724 ;;      Totals:         2       0       0       0       0       0
  4725 ;;Total ram usage:        2 bytes
  4726 ;; Hardware stack levels used: 1
  4727 ;; Hardware stack levels required when called: 1
  4728 ;; This function calls:
  4729 ;;		_SPI1_WriteByte
  4730 ;; This function is called by:
  4731 ;;		_initMAX7219
  4732 ;;		_sendMatrix
  4733 ;; This function uses a non-reentrant model
  4734 ;;
  4735                           
  4736     0004                     _txMAX7219:	
  4737                           ;psect for function _txMAX7219
  4738                           
  4739                           
  4740                           ;incstack = 0
  4741                           ; Regs used in _txMAX7219: [wreg+status,2+status,0+pclath+cstack]
  4742                           ;txMAX7219@addr0 stored from wreg
  4743     0004  00F2               	movwf	txMAX7219@addr0
  4744     0005                     l2573:
  4745                           
  4746                           ;ledMatrix.c: 6:     LATBbits.LATB1 = 0;
  4747     0005  0022               	movlb	2	; select bank2
  4748     0006  108D               	bcf	13,1	;volatile
  4749     0007                     l2575:
  4750                           
  4751                           ;ledMatrix.c: 7:     SPI1_WriteByte(addr0);
  4752     0007  0872               	movf	txMAX7219@addr0,w
  4753     0008  318C  24FD  3180   	fcall	_SPI1_WriteByte
  4754     000B                     l391:	
  4755                           ;ledMatrix.c: 8:     while(!PIR1bits.SSP1IF);
  4756                           
  4757     000B  0020               	movlb	0	; select bank0
  4758     000C  1D91               	btfss	17,3	;volatile
  4759     000D  280F               	goto	u1421
  4760     000E  2810               	goto	u1420
  4761     000F                     u1421:
  4762     000F  280B               	goto	l391
  4763     0010                     u1420:
  4764     0010                     l393:
  4765                           
  4766                           ;ledMatrix.c: 9:     PIR1bits.SSP1IF = 0;
  4767     0010  1191               	bcf	17,3	;volatile
  4768     0011                     l2577:
  4769                           
  4770                           ;ledMatrix.c: 10:     SPI1_WriteByte(dat0);
  4771     0011  0871               	movf	txMAX7219@dat0,w
  4772     0012  318C  24FD  3180   	fcall	_SPI1_WriteByte
  4773     0015                     l394:	
  4774                           ;ledMatrix.c: 11:     while(!PIR1bits.SSP1IF);
  4775                           
  4776     0015  0020               	movlb	0	; select bank0
  4777     0016  1D91               	btfss	17,3	;volatile
  4778     0017  2819               	goto	u1431
  4779     0018  281A               	goto	u1430
  4780     0019                     u1431:
  4781     0019  2815               	goto	l394
  4782     001A                     u1430:
  4783     001A                     l396:
  4784                           
  4785                           ;ledMatrix.c: 12:     PIR1bits.SSP1IF = 0;
  4786     001A  1191               	bcf	17,3	;volatile
  4787                           
  4788                           ;ledMatrix.c: 13:     LATBbits.LATB1 = 1;
  4789     001B  0022               	movlb	2	; select bank2
  4790     001C  148D               	bsf	13,1	;volatile
  4791     001D                     l397:
  4792     001D  0008               	return
  4793     001E                     __end_of_txMAX7219:
  4794                           
  4795                           	psect	text12
  4796     0CFD                     __ptext12:	
  4797 ;; *************** function _SPI1_WriteByte *****************
  4798 ;; Defined at:
  4799 ;;		line 131 in file "mcc_generated_files/spi1.c"
  4800 ;; Parameters:    Size  Location     Type
  4801 ;;  byte            1    wreg     unsigned char 
  4802 ;; Auto vars:     Size  Location     Type
  4803 ;;  byte            1    0[COMMON] unsigned char 
  4804 ;; Return value:  Size  Location     Type
  4805 ;;                  1    wreg      void 
  4806 ;; Registers used:
  4807 ;;		wreg
  4808 ;; Tracked objects:
  4809 ;;		On entry : 0/0
  4810 ;;		On exit  : 0/0
  4811 ;;		Unchanged: 0/0
  4812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4813 ;;      Params:         0       0       0       0       0       0
  4814 ;;      Locals:         1       0       0       0       0       0
  4815 ;;      Temps:          0       0       0       0       0       0
  4816 ;;      Totals:         1       0       0       0       0       0
  4817 ;;Total ram usage:        1 bytes
  4818 ;; Hardware stack levels used: 1
  4819 ;; This function calls:
  4820 ;;		Nothing
  4821 ;; This function is called by:
  4822 ;;		_txMAX7219
  4823 ;; This function uses a non-reentrant model
  4824 ;;
  4825                           
  4826     0CFD                     _SPI1_WriteByte:	
  4827                           ;psect for function _SPI1_WriteByte
  4828                           
  4829                           
  4830                           ;incstack = 0
  4831                           ; Regs used in _SPI1_WriteByte: [wreg]
  4832                           ;SPI1_WriteByte@byte stored from wreg
  4833     0CFD  00F0               	movwf	SPI1_WriteByte@byte
  4834     0CFE                     l2497:
  4835                           
  4836                           ;mcc_generated_files/spi1.c: 131: void SPI1_WriteByte(uint8_t byte);mcc_generated_files/
      +                          spi1.c: 132: {;mcc_generated_files/spi1.c: 133:     SSP1BUF = byte;
  4837     0CFE  0870               	movf	SPI1_WriteByte@byte,w
  4838     0CFF  0024               	movlb	4	; select bank4
  4839     0D00  0091               	movwf	17	;volatile
  4840     0D01                     l224:
  4841     0D01  0008               	return
  4842     0D02                     __end_of_SPI1_WriteByte:
  4843                           
  4844                           	psect	text13
  4845     0D4F                     __ptext13:	
  4846 ;; *************** function _deactivateElevator *****************
  4847 ;; Defined at:
  4848 ;;		line 50 in file "main.c"
  4849 ;; Parameters:    Size  Location     Type
  4850 ;;		None
  4851 ;; Auto vars:     Size  Location     Type
  4852 ;;		None
  4853 ;; Return value:  Size  Location     Type
  4854 ;;                  1    wreg      void 
  4855 ;; Registers used:
  4856 ;;		None
  4857 ;; Tracked objects:
  4858 ;;		On entry : 0/0
  4859 ;;		On exit  : 0/0
  4860 ;;		Unchanged: 0/0
  4861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4862 ;;      Params:         0       0       0       0       0       0
  4863 ;;      Locals:         0       0       0       0       0       0
  4864 ;;      Temps:          0       0       0       0       0       0
  4865 ;;      Totals:         0       0       0       0       0       0
  4866 ;;Total ram usage:        0 bytes
  4867 ;; Hardware stack levels used: 1
  4868 ;; This function calls:
  4869 ;;		Nothing
  4870 ;; This function is called by:
  4871 ;;		_main
  4872 ;; This function uses a non-reentrant model
  4873 ;;
  4874                           
  4875     0D4F                     _deactivateElevator:	
  4876                           ;psect for function _deactivateElevator
  4877                           
  4878     0D4F                     l2685:	
  4879                           ;incstack = 0
  4880                           ; Regs used in _deactivateElevator: []
  4881                           
  4882                           
  4883                           ;main.c: 51:     LATAbits.LATA3 = 0;
  4884     0D4F  0022               	movlb	2	; select bank2
  4885     0D50  118C               	bcf	12,3	;volatile
  4886                           
  4887                           ;main.c: 52:     LATAbits.LATA7 = 0;
  4888     0D51  138C               	bcf	12,7	;volatile
  4889                           
  4890                           ;main.c: 54:     TRISAbits.TRISA0 = 1;
  4891     0D52  0021               	movlb	1	; select bank1
  4892     0D53  140C               	bsf	12,0	;volatile
  4893                           
  4894                           ;main.c: 55:     TRISAbits.TRISA1 = 1;
  4895     0D54  148C               	bsf	12,1	;volatile
  4896                           
  4897                           ;main.c: 56:     TRISAbits.TRISA2 = 1;
  4898     0D55  150C               	bsf	12,2	;volatile
  4899                           
  4900                           ;main.c: 57:     TRISAbits.TRISA3 = 0;
  4901     0D56  118C               	bcf	12,3	;volatile
  4902                           
  4903                           ;main.c: 58:     TRISAbits.TRISA4 = 1;
  4904     0D57  160C               	bsf	12,4	;volatile
  4905                           
  4906                           ;main.c: 59:     TRISAbits.TRISA7 = 0;
  4907     0D58  138C               	bcf	12,7	;volatile
  4908                           
  4909                           ;main.c: 60:     TRISBbits.TRISB0 = 1;
  4910     0D59  140D               	bsf	13,0	;volatile
  4911                           
  4912                           ;main.c: 61:     TRISBbits.TRISB3 = 1;
  4913     0D5A  158D               	bsf	13,3	;volatile
  4914     0D5B                     l333:
  4915     0D5B  0008               	return
  4916     0D5C                     __end_of_deactivateElevator:
  4917                           
  4918                           	psect	text14
  4919     0210                     __ptext14:	
  4920 ;; *************** function _ai_run *****************
  4921 ;; Defined at:
  4922 ;;		line 117 in file "ai.c"
  4923 ;; Parameters:    Size  Location     Type
  4924 ;;		None
  4925 ;; Auto vars:     Size  Location     Type
  4926 ;;  i               1    9[BANK0 ] unsigned char 
  4927 ;;  i               1    8[BANK0 ] unsigned char 
  4928 ;;  i               1   10[BANK0 ] unsigned char 
  4929 ;;  j               1   14[BANK0 ] unsigned char 
  4930 ;;  j               1   13[BANK0 ] unsigned char 
  4931 ;;  i               1    7[BANK0 ] unsigned char 
  4932 ;;  z               2   11[BANK0 ] int 
  4933 ;; Return value:  Size  Location     Type
  4934 ;;                  1    wreg      unsigned char 
  4935 ;; Registers used:
  4936 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4937 ;; Tracked objects:
  4938 ;;		On entry : 0/0
  4939 ;;		On exit  : 0/0
  4940 ;;		Unchanged: 0/0
  4941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4942 ;;      Params:         0       0       0       0       0       0
  4943 ;;      Locals:         0       8       0       0       0       0
  4944 ;;      Temps:          0       3       0       0       0       0
  4945 ;;      Totals:         0      11       0       0       0       0
  4946 ;;Total ram usage:       11 bytes
  4947 ;; Hardware stack levels used: 1
  4948 ;; Hardware stack levels required when called: 1
  4949 ;; This function calls:
  4950 ;;		___awdiv
  4951 ;;		___wmul
  4952 ;;		_sigmoid
  4953 ;; This function is called by:
  4954 ;;		_main
  4955 ;; This function uses a non-reentrant model
  4956 ;;
  4957                           
  4958     0210                     _ai_run:	
  4959                           ;psect for function _ai_run
  4960                           
  4961     0210                     l2855:	
  4962                           ;incstack = 0
  4963                           ; Regs used in _ai_run: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4964                           
  4965                           
  4966                           ;ai.c: 118:     for(uint8_t i = 0; i < 8; i++){
  4967     0210  0020               	movlb	0	; select bank0
  4968     0211  01A7               	clrf	ai_run@i
  4969     0212                     l2861:
  4970                           
  4971                           ;ai.c: 119:         if(Y0[i] > 0){
  4972     0212  0827               	movf	ai_run@i,w
  4973     0213  3E63               	addlw	(low (_Y0| 0))& (0+255)
  4974     0214  0086               	movwf	6
  4975     0215  0187               	clrf	7
  4976     0216  0801               	movf	1,w
  4977     0217  3A80               	xorlw	128
  4978     0218  3E7F               	addlw	-129
  4979     0219  1C03               	skipc
  4980     021A  2A1C               	goto	u1901
  4981     021B  2A1D               	goto	u1900
  4982     021C                     u1901:
  4983     021C  2A23               	goto	l2865
  4984     021D                     u1900:
  4985     021D                     l2863:
  4986                           
  4987                           ;ai.c: 120:             Y0[i] = 127;
  4988     021D  0827               	movf	ai_run@i,w
  4989     021E  3E63               	addlw	(low (_Y0| 0))& (0+255)
  4990     021F  0086               	movwf	6
  4991     0220  0187               	clrf	7
  4992     0221  307F               	movlw	127
  4993     0222  0081               	movwf	1
  4994     0223                     l2865:
  4995                           
  4996                           ;ai.c: 122:     }
  4997     0223  3001               	movlw	1
  4998     0224  00A4               	movwf	??_ai_run
  4999     0225  0824               	movf	??_ai_run,w
  5000     0226  07A7               	addwf	ai_run@i,f
  5001     0227                     l2867:
  5002     0227  3008               	movlw	8
  5003     0228  0227               	subwf	ai_run@i,w
  5004     0229  1C03               	skipc
  5005     022A  2A2C               	goto	u1911
  5006     022B  2A2D               	goto	u1910
  5007     022C                     u1911:
  5008     022C  2A12               	goto	l2861
  5009     022D                     u1910:
  5010     022D                     l2869:
  5011                           
  5012                           ;ai.c: 124:     int z;;ai.c: 125:     for(uint8_t j = 0; j < 4; j++){
  5013     022D  01AD               	clrf	ai_run@j
  5014     022E                     l2875:
  5015                           
  5016                           ;ai.c: 126:         Z1[j] = B1[j];
  5017     022E  082D               	movf	ai_run@j,w
  5018     022F  3E51               	addlw	(low (_Z1| 0))& (0+255)
  5019     0230  0086               	movwf	6
  5020     0231  0187               	clrf	7
  5021     0232  082D               	movf	ai_run@j,w
  5022     0233  3ECC               	addlw	(low (_B1| 0))& (0+255)
  5023     0234  0084               	movwf	4
  5024     0235  0185               	clrf	5
  5025     0236  0800               	movf	0,w
  5026     0237  0081               	movwf	1
  5027     0238                     l2877:
  5028                           
  5029                           ;ai.c: 127:         for(uint8_t i = 0; i < 8; i++){
  5030     0238  01A8               	clrf	ai_run@i_877
  5031     0239                     l2883:
  5032                           
  5033                           ;ai.c: 128:             z = Y0[i];
  5034     0239  0828               	movf	ai_run@i_877,w
  5035     023A  3E63               	addlw	(low (_Y0| 0))& (0+255)
  5036     023B  0086               	movwf	6
  5037     023C  0187               	clrf	7
  5038     023D  0801               	movf	1,w
  5039     023E  00AB               	movwf	ai_run@z
  5040     023F  01AC               	clrf	ai_run@z+1
  5041     0240  1BAB               	btfsc	ai_run@z,7
  5042     0241  03AC               	decf	ai_run@z+1,f
  5043     0242                     l2885:
  5044                           
  5045                           ;ai.c: 129:             z *= W1[i][j];
  5046     0242  0828               	movf	ai_run@i_877,w
  5047     0243  00A4               	movwf	??_ai_run
  5048     0244  3002               	movlw	2
  5049     0245                     u1925:
  5050     0245  35A4               	lslf	??_ai_run,f
  5051     0246  0B89               	decfsz	9,f
  5052     0247  2A45               	goto	u1925
  5053     0248  3020               	movlw	(low (_W1| (0+256)))& (0+255)
  5054     0249  0724               	addwf	??_ai_run,w
  5055     024A  00A5               	movwf	??_ai_run+1
  5056     024B  082D               	movf	ai_run@j,w
  5057     024C  0725               	addwf	??_ai_run+1,w
  5058     024D  00A6               	movwf	??_ai_run+2
  5059     024E  0826               	movf	??_ai_run+2,w
  5060     024F  0086               	movwf	6
  5061     0250  3001               	movlw	1	; select bank2/3
  5062     0251  0087               	movwf	7
  5063     0252  0801               	movf	1,w
  5064     0253  00A0               	movwf	___wmul@multiplier
  5065     0254  01A1               	clrf	___wmul@multiplier+1
  5066     0255  1BA0               	btfsc	___wmul@multiplier,7
  5067     0256  03A1               	decf	___wmul@multiplier+1,f
  5068     0257  082C               	movf	ai_run@z+1,w
  5069     0258  00A3               	movwf	___wmul@multiplicand+1
  5070     0259  082B               	movf	ai_run@z,w
  5071     025A  00A2               	movwf	___wmul@multiplicand
  5072     025B  318D  25C8  3182   	fcall	___wmul
  5073     025E  0020               	movlb	0	; select bank0
  5074     025F  0821               	movf	?___wmul+1,w
  5075     0260  00AC               	movwf	ai_run@z+1
  5076     0261  0820               	movf	?___wmul,w
  5077     0262  00AB               	movwf	ai_run@z
  5078     0263                     l2887:
  5079                           
  5080                           ;ai.c: 130:             z /= 127;
  5081     0263  307F               	movlw	127
  5082     0264  00F2               	movwf	___awdiv@divisor
  5083     0265  3000               	movlw	0
  5084     0266  00F3               	movwf	___awdiv@divisor+1
  5085     0267  082C               	movf	ai_run@z+1,w
  5086     0268  00F5               	movwf	___awdiv@dividend+1
  5087     0269  082B               	movf	ai_run@z,w
  5088     026A  00F4               	movwf	___awdiv@dividend
  5089     026B  3180  201E  3182   	fcall	___awdiv
  5090     026E  0873               	movf	?___awdiv+1,w
  5091     026F  0020               	movlb	0	; select bank0
  5092     0270  00AC               	movwf	ai_run@z+1
  5093     0271  0872               	movf	?___awdiv,w
  5094     0272  00AB               	movwf	ai_run@z
  5095     0273                     l2889:
  5096                           
  5097                           ;ai.c: 131:             Z1[j] += z;
  5098     0273  082B               	movf	ai_run@z,w
  5099     0274  00A4               	movwf	??_ai_run
  5100     0275  082D               	movf	ai_run@j,w
  5101     0276  3E51               	addlw	(low (_Z1| 0))& (0+255)
  5102     0277  0086               	movwf	6
  5103     0278  0187               	clrf	7
  5104     0279  0824               	movf	??_ai_run,w
  5105     027A  0781               	addwf	1,f
  5106     027B                     l2891:
  5107                           
  5108                           ;ai.c: 132:         }
  5109     027B  3001               	movlw	1
  5110     027C  00A4               	movwf	??_ai_run
  5111     027D  0824               	movf	??_ai_run,w
  5112     027E  07A8               	addwf	ai_run@i_877,f
  5113     027F                     l2893:
  5114     027F  3008               	movlw	8
  5115     0280  0228               	subwf	ai_run@i_877,w
  5116     0281  1C03               	skipc
  5117     0282  2A84               	goto	u1931
  5118     0283  2A85               	goto	u1930
  5119     0284                     u1931:
  5120     0284  2A39               	goto	l2883
  5121     0285                     u1930:
  5122     0285                     l2895:
  5123                           
  5124                           ;ai.c: 133:         Y1[j] = sigmoid(Z1[j])/2;
  5125     0285  082D               	movf	ai_run@j,w
  5126     0286  3E59               	addlw	(low (_Y1| 0))& (0+255)
  5127     0287  0086               	movwf	6
  5128     0288  0187               	clrf	7
  5129     0289  3002               	movlw	2
  5130     028A  00F2               	movwf	___awdiv@divisor
  5131     028B  3000               	movlw	0
  5132     028C  00F3               	movwf	___awdiv@divisor+1
  5133     028D  082D               	movf	ai_run@j,w
  5134     028E  3E51               	addlw	(low (_Z1| 0))& (0+255)
  5135     028F  0084               	movwf	4
  5136     0290  0185               	clrf	5
  5137     0291  0800               	movf	0,w
  5138     0292  318D  257C  3182   	fcall	_sigmoid
  5139     0295  0020               	movlb	0	; select bank0
  5140     0296  00A4               	movwf	??_ai_run
  5141     0297  01A5               	clrf	??_ai_run+1
  5142     0298  0824               	movf	??_ai_run,w
  5143     0299  00F4               	movwf	___awdiv@dividend
  5144     029A  0825               	movf	??_ai_run+1,w
  5145     029B  00F5               	movwf	___awdiv@dividend+1
  5146     029C  3180  201E  3182   	fcall	___awdiv
  5147     029F  0872               	movf	?___awdiv,w
  5148     02A0  0081               	movwf	1
  5149     02A1                     l2897:
  5150                           
  5151                           ;ai.c: 134:     }
  5152     02A1  3001               	movlw	1
  5153     02A2  0020               	movlb	0	; select bank0
  5154     02A3  00A4               	movwf	??_ai_run
  5155     02A4  0824               	movf	??_ai_run,w
  5156     02A5  07AD               	addwf	ai_run@j,f
  5157     02A6                     l2899:
  5158     02A6  3004               	movlw	4
  5159     02A7  022D               	subwf	ai_run@j,w
  5160     02A8  1C03               	skipc
  5161     02A9  2AAB               	goto	u1941
  5162     02AA  2AAC               	goto	u1940
  5163     02AB                     u1941:
  5164     02AB  2A2E               	goto	l2875
  5165     02AC                     u1940:
  5166     02AC                     l2901:
  5167                           
  5168                           ;ai.c: 135:     for(uint8_t j = 0; j < 4; j++){
  5169     02AC  01AE               	clrf	ai_run@j_878
  5170     02AD                     l2907:
  5171                           
  5172                           ;ai.c: 136:         Z2[j] = B2[j];
  5173     02AD  082E               	movf	ai_run@j_878,w
  5174     02AE  3E4D               	addlw	(low (_Z2| 0))& (0+255)
  5175     02AF  0086               	movwf	6
  5176     02B0  0187               	clrf	7
  5177     02B1  082E               	movf	ai_run@j_878,w
  5178     02B2  3EC8               	addlw	(low (_B2| 0))& (0+255)
  5179     02B3  0084               	movwf	4
  5180     02B4  0185               	clrf	5
  5181     02B5  0800               	movf	0,w
  5182     02B6  0081               	movwf	1
  5183     02B7                     l2909:
  5184                           
  5185                           ;ai.c: 137:         for(uint8_t i = 0; i < 4; i++){
  5186     02B7  01A9               	clrf	ai_run@i_879
  5187     02B8                     l2915:
  5188                           
  5189                           ;ai.c: 138:             z = Y1[i];
  5190     02B8  0829               	movf	ai_run@i_879,w
  5191     02B9  3E59               	addlw	(low (_Y1| 0))& (0+255)
  5192     02BA  0086               	movwf	6
  5193     02BB  0187               	clrf	7
  5194     02BC  0801               	movf	1,w
  5195     02BD  00AB               	movwf	ai_run@z
  5196     02BE  01AC               	clrf	ai_run@z+1
  5197     02BF  1BAB               	btfsc	ai_run@z,7
  5198     02C0  03AC               	decf	ai_run@z+1,f
  5199     02C1                     l2917:
  5200                           
  5201                           ;ai.c: 139:             z *= W2[i][j];
  5202     02C1  0829               	movf	ai_run@i_879,w
  5203     02C2  00A4               	movwf	??_ai_run
  5204     02C3  3002               	movlw	2
  5205     02C4                     u1955:
  5206     02C4  35A4               	lslf	??_ai_run,f
  5207     02C5  0B89               	decfsz	9,f
  5208     02C6  2AC4               	goto	u1955
  5209     02C7  3060               	movlw	(low (_W2| (0+256)))& (0+255)
  5210     02C8  0724               	addwf	??_ai_run,w
  5211     02C9  00A5               	movwf	??_ai_run+1
  5212     02CA  082E               	movf	ai_run@j_878,w
  5213     02CB  0725               	addwf	??_ai_run+1,w
  5214     02CC  00A6               	movwf	??_ai_run+2
  5215     02CD  0826               	movf	??_ai_run+2,w
  5216     02CE  0086               	movwf	6
  5217     02CF  3001               	movlw	1	; select bank2/3
  5218     02D0  0087               	movwf	7
  5219     02D1  0801               	movf	1,w
  5220     02D2  00A0               	movwf	___wmul@multiplier
  5221     02D3  01A1               	clrf	___wmul@multiplier+1
  5222     02D4  1BA0               	btfsc	___wmul@multiplier,7
  5223     02D5  03A1               	decf	___wmul@multiplier+1,f
  5224     02D6  082C               	movf	ai_run@z+1,w
  5225     02D7  00A3               	movwf	___wmul@multiplicand+1
  5226     02D8  082B               	movf	ai_run@z,w
  5227     02D9  00A2               	movwf	___wmul@multiplicand
  5228     02DA  318D  25C8  3182   	fcall	___wmul
  5229     02DD  0020               	movlb	0	; select bank0
  5230     02DE  0821               	movf	?___wmul+1,w
  5231     02DF  00AC               	movwf	ai_run@z+1
  5232     02E0  0820               	movf	?___wmul,w
  5233     02E1  00AB               	movwf	ai_run@z
  5234     02E2                     l2919:
  5235                           
  5236                           ;ai.c: 140:             z /= 127;
  5237     02E2  307F               	movlw	127
  5238     02E3  00F2               	movwf	___awdiv@divisor
  5239     02E4  3000               	movlw	0
  5240     02E5  00F3               	movwf	___awdiv@divisor+1
  5241     02E6  082C               	movf	ai_run@z+1,w
  5242     02E7  00F5               	movwf	___awdiv@dividend+1
  5243     02E8  082B               	movf	ai_run@z,w
  5244     02E9  00F4               	movwf	___awdiv@dividend
  5245     02EA  3180  201E  3182   	fcall	___awdiv
  5246     02ED  0873               	movf	?___awdiv+1,w
  5247     02EE  0020               	movlb	0	; select bank0
  5248     02EF  00AC               	movwf	ai_run@z+1
  5249     02F0  0872               	movf	?___awdiv,w
  5250     02F1  00AB               	movwf	ai_run@z
  5251     02F2                     l2921:
  5252                           
  5253                           ;ai.c: 141:             Z2[j] += z;
  5254     02F2  082B               	movf	ai_run@z,w
  5255     02F3  00A4               	movwf	??_ai_run
  5256     02F4  082E               	movf	ai_run@j_878,w
  5257     02F5  3E4D               	addlw	(low (_Z2| 0))& (0+255)
  5258     02F6  0086               	movwf	6
  5259     02F7  0187               	clrf	7
  5260     02F8  0824               	movf	??_ai_run,w
  5261     02F9  0781               	addwf	1,f
  5262     02FA                     l2923:
  5263                           
  5264                           ;ai.c: 142:         }
  5265     02FA  3001               	movlw	1
  5266     02FB  00A4               	movwf	??_ai_run
  5267     02FC  0824               	movf	??_ai_run,w
  5268     02FD  07A9               	addwf	ai_run@i_879,f
  5269     02FE                     l2925:
  5270     02FE  3004               	movlw	4
  5271     02FF  0229               	subwf	ai_run@i_879,w
  5272     0300  1C03               	skipc
  5273     0301  2B03               	goto	u1961
  5274     0302  2B04               	goto	u1960
  5275     0303                     u1961:
  5276     0303  2AB8               	goto	l2915
  5277     0304                     u1960:
  5278     0304                     l2927:
  5279                           
  5280                           ;ai.c: 143:         Y2[j] = sigmoid(Z2[j])/2;
  5281     0304  082E               	movf	ai_run@j_878,w
  5282     0305  3E55               	addlw	(low (_Y2| 0))& (0+255)
  5283     0306  0086               	movwf	6
  5284     0307  0187               	clrf	7
  5285     0308  3002               	movlw	2
  5286     0309  00F2               	movwf	___awdiv@divisor
  5287     030A  3000               	movlw	0
  5288     030B  00F3               	movwf	___awdiv@divisor+1
  5289     030C  082E               	movf	ai_run@j_878,w
  5290     030D  3E4D               	addlw	(low (_Z2| 0))& (0+255)
  5291     030E  0084               	movwf	4
  5292     030F  0185               	clrf	5
  5293     0310  0800               	movf	0,w
  5294     0311  318D  257C  3182   	fcall	_sigmoid
  5295     0314  0020               	movlb	0	; select bank0
  5296     0315  00A4               	movwf	??_ai_run
  5297     0316  01A5               	clrf	??_ai_run+1
  5298     0317  0824               	movf	??_ai_run,w
  5299     0318  00F4               	movwf	___awdiv@dividend
  5300     0319  0825               	movf	??_ai_run+1,w
  5301     031A  00F5               	movwf	___awdiv@dividend+1
  5302     031B  3180  201E  3182   	fcall	___awdiv
  5303     031E  0872               	movf	?___awdiv,w
  5304     031F  0081               	movwf	1
  5305     0320                     l2929:
  5306                           
  5307                           ;ai.c: 144:     }
  5308     0320  3001               	movlw	1
  5309     0321  0020               	movlb	0	; select bank0
  5310     0322  00A4               	movwf	??_ai_run
  5311     0323  0824               	movf	??_ai_run,w
  5312     0324  07AE               	addwf	ai_run@j_878,f
  5313     0325                     l2931:
  5314     0325  3004               	movlw	4
  5315     0326  022E               	subwf	ai_run@j_878,w
  5316     0327  1C03               	skipc
  5317     0328  2B2A               	goto	u1971
  5318     0329  2B2B               	goto	u1970
  5319     032A                     u1971:
  5320     032A  2AAD               	goto	l2907
  5321     032B                     u1970:
  5322     032B                     l2933:
  5323                           
  5324                           ;ai.c: 146:     choice = 0;
  5325     032B  01E0               	clrf	_choice
  5326     032C                     l2935:
  5327                           
  5328                           ;ai.c: 147:     for(uint8_t i = 1; i < 4; i++){
  5329     032C  01AA               	clrf	ai_run@i_880
  5330     032D  0AAA               	incf	ai_run@i_880,f
  5331     032E                     l2941:
  5332                           
  5333                           ;ai.c: 148:         if(Y2[i]>Y2[choice]){
  5334     032E  0860               	movf	_choice,w
  5335     032F  3E55               	addlw	(low (_Y2| 0))& (0+255)
  5336     0330  0086               	movwf	6
  5337     0331  0187               	clrf	7
  5338     0332  0801               	movf	1,w
  5339     0333  3A80               	xorlw	128
  5340     0334  00A4               	movwf	??_ai_run
  5341     0335  082A               	movf	ai_run@i_880,w
  5342     0336  3E55               	addlw	(low (_Y2| 0))& (0+255)
  5343     0337  0086               	movwf	6
  5344     0338  0187               	clrf	7
  5345     0339  0801               	movf	1,w
  5346     033A  3A80               	xorlw	128
  5347     033B  02A4               	subwf	??_ai_run,f
  5348     033C  1803               	skipnc
  5349     033D  2B3F               	goto	u1981
  5350     033E  2B40               	goto	u1980
  5351     033F                     u1981:
  5352     033F  2B42               	goto	l2945
  5353     0340                     u1980:
  5354     0340                     l2943:
  5355                           
  5356                           ;ai.c: 149:             choice = i;
  5357     0340  082A               	movf	ai_run@i_880,w
  5358     0341  00E0               	movwf	_choice
  5359     0342                     l2945:
  5360                           
  5361                           ;ai.c: 151:     }
  5362     0342  3001               	movlw	1
  5363     0343  00A4               	movwf	??_ai_run
  5364     0344  0824               	movf	??_ai_run,w
  5365     0345  07AA               	addwf	ai_run@i_880,f
  5366     0346                     l2947:
  5367     0346  3004               	movlw	4
  5368     0347  022A               	subwf	ai_run@i_880,w
  5369     0348  1C03               	skipc
  5370     0349  2B4B               	goto	u1991
  5371     034A  2B4C               	goto	u1990
  5372     034B                     u1991:
  5373     034B  2B2E               	goto	l2941
  5374     034C                     u1990:
  5375     034C                     l2949:
  5376                           
  5377                           ;ai.c: 152:     return choice;
  5378     034C  0860               	movf	_choice,w
  5379     034D                     l626:
  5380     034D  0008               	return
  5381     034E                     __end_of_ai_run:
  5382                           
  5383                           	psect	text15
  5384     0D7C                     __ptext15:	
  5385 ;; *************** function _sigmoid *****************
  5386 ;; Defined at:
  5387 ;;		line 5 in file "sigmoid.c"
  5388 ;; Parameters:    Size  Location     Type
  5389 ;;  z               1    wreg     char 
  5390 ;; Auto vars:     Size  Location     Type
  5391 ;;  z               1    1[COMMON] char 
  5392 ;; Return value:  Size  Location     Type
  5393 ;;                  1    wreg      unsigned char 
  5394 ;; Registers used:
  5395 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  5396 ;; Tracked objects:
  5397 ;;		On entry : 0/0
  5398 ;;		On exit  : 0/0
  5399 ;;		Unchanged: 0/0
  5400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5401 ;;      Params:         0       0       0       0       0       0
  5402 ;;      Locals:         1       0       0       0       0       0
  5403 ;;      Temps:          1       0       0       0       0       0
  5404 ;;      Totals:         2       0       0       0       0       0
  5405 ;;Total ram usage:        2 bytes
  5406 ;; Hardware stack levels used: 1
  5407 ;; This function calls:
  5408 ;;		Nothing
  5409 ;; This function is called by:
  5410 ;;		_ai_run
  5411 ;; This function uses a non-reentrant model
  5412 ;;
  5413                           
  5414     0D7C                     _sigmoid:	
  5415                           ;psect for function _sigmoid
  5416                           
  5417                           
  5418                           ;incstack = 0
  5419                           ; Regs used in _sigmoid: [wreg-fsr0h+status,2+status,0+pclath]
  5420                           ;sigmoid@z stored from wreg
  5421     0D7C  00F1               	movwf	sigmoid@z
  5422     0D7D                     l2579:
  5423                           
  5424                           ;sigmoid.c: 6:     return sigmoidValues[((uint8_t)z)>>4];
  5425     0D7D  0871               	movf	sigmoid@z,w
  5426     0D7E  00F0               	movwf	??_sigmoid
  5427     0D7F  3004               	movlw	4
  5428     0D80                     u1445:
  5429     0D80  36F0               	lsrf	??_sigmoid,f
  5430     0D81  0B89               	decfsz	9,f
  5431     0D82  2D80               	goto	u1445
  5432     0D83  0870               	movf	??_sigmoid,w
  5433     0D84  3E10               	addlw	low (_sigmoidValues| (0+32768))
  5434     0D85  0084               	movwf	4
  5435     0D86  3088               	movlw	high (_sigmoidValues| (0+32768))
  5436     0D87  1803               	skipnc
  5437     0D88  3E01               	addlw	1
  5438     0D89  0085               	movwf	5
  5439     0D8A  0800               	movf	0,w	;code access
  5440     0D8B                     l664:
  5441     0D8B  0008               	return
  5442     0D8C                     __end_of_sigmoid:
  5443                           
  5444                           	psect	text16
  5445     053F                     __ptext16:	
  5446 ;; *************** function _ai_propagate *****************
  5447 ;; Defined at:
  5448 ;;		line 155 in file "ai.c"
  5449 ;; Parameters:    Size  Location     Type
  5450 ;;  incentive       1    wreg     char 
  5451 ;; Auto vars:     Size  Location     Type
  5452 ;;  incentive       1   14[BANK0 ] char 
  5453 ;;  i               1   20[BANK0 ] unsigned char 
  5454 ;;  i               1   19[BANK0 ] unsigned char 
  5455 ;;  i               1   18[BANK0 ] unsigned char 
  5456 ;;  i               1   24[BANK0 ] unsigned char 
  5457 ;;  i               1   16[BANK0 ] unsigned char 
  5458 ;;  i               1   15[BANK0 ] unsigned char 
  5459 ;;  j               1   26[BANK0 ] unsigned char 
  5460 ;;  j               1   25[BANK0 ] unsigned char 
  5461 ;;  j               1   27[BANK0 ] unsigned char 
  5462 ;;  j               1   28[BANK0 ] unsigned char 
  5463 ;;  j               1   17[BANK0 ] unsigned char 
  5464 ;;  j               1   23[BANK0 ] unsigned char 
  5465 ;;  S               4   10[BANK0 ] char [4]
  5466 ;;  dz              2    0        int 
  5467 ;; Return value:  Size  Location     Type
  5468 ;;                  1    wreg      void 
  5469 ;; Registers used:
  5470 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5471 ;; Tracked objects:
  5472 ;;		On entry : 0/0
  5473 ;;		On exit  : 0/0
  5474 ;;		Unchanged: 0/0
  5475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5476 ;;      Params:         0       0       0       0       0       0
  5477 ;;      Locals:         0      19       0       0       0       0
  5478 ;;      Temps:          0       6       0       0       0       0
  5479 ;;      Totals:         0      25       0       0       0       0
  5480 ;;Total ram usage:       25 bytes
  5481 ;; Hardware stack levels used: 1
  5482 ;; Hardware stack levels required when called: 1
  5483 ;; This function calls:
  5484 ;;		_EUSART_Write
  5485 ;;		___awdiv
  5486 ;;		___wmul
  5487 ;;		_de_sigmoid
  5488 ;; This function is called by:
  5489 ;;		_main
  5490 ;; This function uses a non-reentrant model
  5491 ;;
  5492                           
  5493     053F                     _ai_propagate:	
  5494                           ;psect for function _ai_propagate
  5495                           
  5496                           
  5497                           ;incstack = 0
  5498                           ; Regs used in _ai_propagate: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5499                           ;ai_propagate@incentive stored from wreg
  5500     053F  0020               	movlb	0	; select bank0
  5501     0540  00AE               	movwf	ai_propagate@incentive
  5502     0541                     l3039:
  5503                           
  5504                           ;ai.c: 156:     if(incentive == 0){
  5505     0541  082E               	movf	ai_propagate@incentive,w
  5506     0542  1D03               	btfss	3,2
  5507     0543  2D45               	goto	u2111
  5508     0544  2D46               	goto	u2110
  5509     0545                     u2111:
  5510     0545  2D47               	goto	l3043
  5511     0546                     u2110:
  5512     0546  2FD0               	goto	l630
  5513     0547                     l3043:
  5514                           
  5515                           ;ai.c: 160:     if(incentive == -1){
  5516     0547  0A2E               	incf	ai_propagate@incentive,w
  5517     0548  1D03               	btfss	3,2
  5518     0549  2D4B               	goto	u2121
  5519     054A  2D4C               	goto	u2120
  5520     054B                     u2121:
  5521     054B  2D4D               	goto	l3047
  5522     054C                     u2120:
  5523     054C                     l3045:
  5524                           
  5525                           ;ai.c: 161:         incentive = 0;
  5526     054C  01AE               	clrf	ai_propagate@incentive
  5527     054D                     l3047:
  5528                           
  5529                           ;ai.c: 164:     int8_t S[4];;ai.c: 165:     if(incentive == 0){
  5530     054D  082E               	movf	ai_propagate@incentive,w
  5531     054E  1D03               	btfss	3,2
  5532     054F  2D51               	goto	u2131
  5533     0550  2D52               	goto	u2130
  5534     0551                     u2131:
  5535     0551  2D69               	goto	l3063
  5536     0552                     u2130:
  5537     0552                     l3049:
  5538                           
  5539                           ;ai.c: 166:         for(uint8_t i = 0; i < 4; i++){
  5540     0552  01AF               	clrf	ai_propagate@i
  5541     0553                     l3055:
  5542                           
  5543                           ;ai.c: 167:             S[i] = 127;
  5544     0553  082F               	movf	ai_propagate@i,w
  5545     0554  3E2A               	addlw	(low (ai_propagate@S| 0))& (0+255)
  5546     0555  0086               	movwf	6
  5547     0556  0187               	clrf	7
  5548     0557  307F               	movlw	127
  5549     0558  0081               	movwf	1
  5550     0559                     l3057:
  5551                           
  5552                           ;ai.c: 168:         }
  5553     0559  3001               	movlw	1
  5554     055A  00A4               	movwf	??_ai_propagate
  5555     055B  0824               	movf	??_ai_propagate,w
  5556     055C  07AF               	addwf	ai_propagate@i,f
  5557     055D                     l3059:
  5558     055D  3004               	movlw	4
  5559     055E  022F               	subwf	ai_propagate@i,w
  5560     055F  1C03               	skipc
  5561     0560  2D62               	goto	u2141
  5562     0561  2D63               	goto	u2140
  5563     0562                     u2141:
  5564     0562  2D53               	goto	l3055
  5565     0563                     u2140:
  5566     0563                     l3061:
  5567                           
  5568                           ;ai.c: 169:         S[choice] = 0;
  5569     0563  0860               	movf	_choice,w
  5570     0564  3E2A               	addlw	(low (ai_propagate@S| 0))& (0+255)
  5571     0565  0086               	movwf	6
  5572     0566  0187               	clrf	7
  5573     0567  0181               	clrf	1
  5574                           
  5575                           ;ai.c: 170:     } else{
  5576     0568  2D7F               	goto	l3077
  5577     0569                     l3063:
  5578                           
  5579                           ;ai.c: 171:         for(uint8_t i = 0; i < 4; i++){
  5580     0569  01B0               	clrf	ai_propagate@i_885
  5581     056A                     l3069:
  5582                           
  5583                           ;ai.c: 172:             S[i] = 0;
  5584     056A  0830               	movf	ai_propagate@i_885,w
  5585     056B  3E2A               	addlw	(low (ai_propagate@S| 0))& (0+255)
  5586     056C  0086               	movwf	6
  5587     056D  0187               	clrf	7
  5588     056E  0181               	clrf	1
  5589     056F                     l3071:
  5590                           
  5591                           ;ai.c: 173:         }
  5592     056F  3001               	movlw	1
  5593     0570  00A4               	movwf	??_ai_propagate
  5594     0571  0824               	movf	??_ai_propagate,w
  5595     0572  07B0               	addwf	ai_propagate@i_885,f
  5596     0573                     l3073:
  5597     0573  3004               	movlw	4
  5598     0574  0230               	subwf	ai_propagate@i_885,w
  5599     0575  1C03               	skipc
  5600     0576  2D78               	goto	u2151
  5601     0577  2D79               	goto	u2150
  5602     0578                     u2151:
  5603     0578  2D6A               	goto	l3069
  5604     0579                     u2150:
  5605     0579                     l3075:
  5606                           
  5607                           ;ai.c: 174:         S[choice] = 127;
  5608     0579  0860               	movf	_choice,w
  5609     057A  3E2A               	addlw	(low (ai_propagate@S| 0))& (0+255)
  5610     057B  0086               	movwf	6
  5611     057C  0187               	clrf	7
  5612     057D  307F               	movlw	127
  5613     057E  0081               	movwf	1
  5614     057F                     l3077:
  5615                           
  5616                           ;ai.c: 177:     for(uint8_t j = 0; j < 4; j++){
  5617     057F  01B7               	clrf	ai_propagate@j
  5618     0580                     l3083:
  5619                           
  5620                           ;ai.c: 178:         DC_DY2[j] = Y2[j] - S[j];
  5621     0580  0837               	movf	ai_propagate@j,w
  5622     0581  3EC4               	addlw	(low (_DC_DY2| 0))& (0+255)
  5623     0582  0086               	movwf	6
  5624     0583  0187               	clrf	7
  5625     0584  0837               	movf	ai_propagate@j,w
  5626     0585  3E2A               	addlw	(low (ai_propagate@S| 0))& (0+255)
  5627     0586  0084               	movwf	4
  5628     0587  0185               	clrf	5
  5629     0588  0800               	movf	0,w
  5630     0589  00A4               	movwf	??_ai_propagate
  5631     058A  0837               	movf	ai_propagate@j,w
  5632     058B  3E55               	addlw	(low (_Y2| 0))& (0+255)
  5633     058C  0084               	movwf	4
  5634     058D  0185               	clrf	5
  5635     058E  0800               	movf	0,w
  5636     058F  00A5               	movwf	??_ai_propagate+1
  5637     0590  0824               	movf	??_ai_propagate,w
  5638     0591  0225               	subwf	??_ai_propagate+1,w
  5639     0592  0081               	movwf	1
  5640     0593                     l3085:
  5641                           
  5642                           ;ai.c: 179:     }
  5643     0593  3001               	movlw	1
  5644     0594  00A4               	movwf	??_ai_propagate
  5645     0595  0824               	movf	??_ai_propagate,w
  5646     0596  07B7               	addwf	ai_propagate@j,f
  5647     0597                     l3087:
  5648     0597  3004               	movlw	4
  5649     0598  0237               	subwf	ai_propagate@j,w
  5650     0599  1C03               	skipc
  5651     059A  2D9C               	goto	u2161
  5652     059B  2D9D               	goto	u2160
  5653     059C                     u2161:
  5654     059C  2D80               	goto	l3083
  5655     059D                     u2160:
  5656     059D                     l3089:
  5657                           
  5658                           ;ai.c: 181:     for(uint8_t j = 0; j < 4; j++){
  5659     059D  01B1               	clrf	ai_propagate@j_887
  5660     059E                     l3095:
  5661                           
  5662                           ;ai.c: 182:         DC_DY1[j] = 0;
  5663     059E  0831               	movf	ai_propagate@j_887,w
  5664     059F  3EB0               	addlw	(low (_DC_DY1| 0))& (0+255)
  5665     05A0  0086               	movwf	6
  5666     05A1  0187               	clrf	7
  5667     05A2  0181               	clrf	1
  5668     05A3                     l3097:
  5669                           
  5670                           ;ai.c: 183:     }
  5671     05A3  3001               	movlw	1
  5672     05A4  00A4               	movwf	??_ai_propagate
  5673     05A5  0824               	movf	??_ai_propagate,w
  5674     05A6  07B1               	addwf	ai_propagate@j_887,f
  5675     05A7                     l3099:
  5676     05A7  3004               	movlw	4
  5677     05A8  0231               	subwf	ai_propagate@j_887,w
  5678     05A9  1C03               	skipc
  5679     05AA  2DAC               	goto	u2171
  5680     05AB  2DAD               	goto	u2170
  5681     05AC                     u2171:
  5682     05AC  2D9E               	goto	l3095
  5683     05AD                     u2170:
  5684     05AD                     l3101:
  5685                           
  5686                           ;ai.c: 185:     int dz;;ai.c: 186:     for(uint8_t j = 0; j < 4; j++){
  5687     05AD  01BC               	clrf	ai_propagate@j_889
  5688     05AE                     l3107:
  5689                           
  5690                           ;ai.c: 187:         DC_DZ2[j] = ((int)DC_DY2[j]*(int)(de_sigmoid(Z2[j])/2))/127;
  5691     05AE  083C               	movf	ai_propagate@j_889,w
  5692     05AF  3EC4               	addlw	(low (_DC_DY2| 0))& (0+255)
  5693     05B0  0086               	movwf	6
  5694     05B1  0187               	clrf	7
  5695     05B2  0801               	movf	1,w
  5696     05B3  00A0               	movwf	___wmul@multiplier
  5697     05B4  01A1               	clrf	___wmul@multiplier+1
  5698     05B5  1BA0               	btfsc	___wmul@multiplier,7
  5699     05B6  03A1               	decf	___wmul@multiplier+1,f
  5700     05B7  3002               	movlw	2
  5701     05B8  00F2               	movwf	___awdiv@divisor
  5702     05B9  3000               	movlw	0
  5703     05BA  00F3               	movwf	___awdiv@divisor+1
  5704     05BB  083C               	movf	ai_propagate@j_889,w
  5705     05BC  3E4D               	addlw	(low (_Z2| 0))& (0+255)
  5706     05BD  0086               	movwf	6
  5707     05BE  0187               	clrf	7
  5708     05BF  0801               	movf	1,w
  5709     05C0  318D  256C  3185   	fcall	_de_sigmoid
  5710     05C3  0020               	movlb	0	; select bank0
  5711     05C4  00A4               	movwf	??_ai_propagate
  5712     05C5  01A5               	clrf	??_ai_propagate+1
  5713     05C6  0824               	movf	??_ai_propagate,w
  5714     05C7  00F4               	movwf	___awdiv@dividend
  5715     05C8  0825               	movf	??_ai_propagate+1,w
  5716     05C9  00F5               	movwf	___awdiv@dividend+1
  5717     05CA  3180  201E  3185   	fcall	___awdiv
  5718     05CD  0873               	movf	?___awdiv+1,w
  5719     05CE  0020               	movlb	0	; select bank0
  5720     05CF  00A3               	movwf	___wmul@multiplicand+1
  5721     05D0  0872               	movf	?___awdiv,w
  5722     05D1  00A2               	movwf	___wmul@multiplicand
  5723     05D2  318D  25C8  3185   	fcall	___wmul
  5724     05D5  0020               	movlb	0	; select bank0
  5725     05D6  0821               	movf	?___wmul+1,w
  5726     05D7  00B6               	movwf	_ai_propagate$1578+1
  5727     05D8  0820               	movf	?___wmul,w
  5728     05D9  00B5               	movwf	_ai_propagate$1578
  5729     05DA                     l3109:
  5730                           
  5731                           ;ai.c: 187:         DC_DZ2[j] = ((int)DC_DY2[j]*(int)(de_sigmoid(Z2[j])/2))/127;
  5732     05DA  083C               	movf	ai_propagate@j_889,w
  5733     05DB  3E49               	addlw	(low (_DC_DZ2| 0))& (0+255)
  5734     05DC  0086               	movwf	6
  5735     05DD  0187               	clrf	7
  5736     05DE  307F               	movlw	127
  5737     05DF  00F2               	movwf	___awdiv@divisor
  5738     05E0  3000               	movlw	0
  5739     05E1  00F3               	movwf	___awdiv@divisor+1
  5740     05E2  0836               	movf	_ai_propagate$1578+1,w
  5741     05E3  00F5               	movwf	___awdiv@dividend+1
  5742     05E4  0835               	movf	_ai_propagate$1578,w
  5743     05E5  00F4               	movwf	___awdiv@dividend
  5744     05E6  3180  201E  3185   	fcall	___awdiv
  5745     05E9  0872               	movf	?___awdiv,w
  5746     05EA  0081               	movwf	1
  5747     05EB                     l3111:
  5748                           
  5749                           ;ai.c: 188:         DC_DB2[j] = DC_DZ2[j]/64;
  5750     05EB  0020               	movlb	0	; select bank0
  5751     05EC  083C               	movf	ai_propagate@j_889,w
  5752     05ED  3EB4               	addlw	(low (_DC_DB2| 0))& (0+255)
  5753     05EE  0086               	movwf	6
  5754     05EF  0187               	clrf	7
  5755     05F0  3040               	movlw	64
  5756     05F1  00F2               	movwf	___awdiv@divisor
  5757     05F2  3000               	movlw	0
  5758     05F3  00F3               	movwf	___awdiv@divisor+1
  5759     05F4  083C               	movf	ai_propagate@j_889,w
  5760     05F5  3E49               	addlw	(low (_DC_DZ2| 0))& (0+255)
  5761     05F6  0084               	movwf	4
  5762     05F7  0185               	clrf	5
  5763     05F8  0800               	movf	0,w
  5764     05F9  00F4               	movwf	___awdiv@dividend
  5765     05FA  01F5               	clrf	___awdiv@dividend+1
  5766     05FB  1BF4               	btfsc	___awdiv@dividend,7
  5767     05FC  03F5               	decf	___awdiv@dividend+1,f
  5768     05FD  3180  201E  3185   	fcall	___awdiv
  5769     0600  0872               	movf	?___awdiv,w
  5770     0601  0081               	movwf	1
  5771                           
  5772                           ;ai.c: 189:         EUSART_Write(DC_DZ2[j]);
  5773     0602  0020               	movlb	0	; select bank0
  5774     0603  083C               	movf	ai_propagate@j_889,w
  5775     0604  3E49               	addlw	(low (_DC_DZ2| 0))& (0+255)
  5776     0605  0086               	movwf	6
  5777     0606  0187               	clrf	7
  5778     0607  0801               	movf	1,w
  5779     0608  318D  252F  3185   	fcall	_EUSART_Write
  5780     060B                     l3113:
  5781                           
  5782                           ;ai.c: 190:         for(uint8_t i = 0; i < 4; i++){
  5783     060B  0020               	movlb	0	; select bank0
  5784     060C  01B8               	clrf	ai_propagate@i_891
  5785     060D                     l3119:
  5786                           
  5787                           ;ai.c: 191:             DC_DW2[i][j] = (((int)DC_DZ2[j]*(int)Y1[i])/127)/64;
  5788     060D  307F               	movlw	127
  5789     060E  00F2               	movwf	___awdiv@divisor
  5790     060F  3000               	movlw	0
  5791     0610  00F3               	movwf	___awdiv@divisor+1
  5792     0611  083C               	movf	ai_propagate@j_889,w
  5793     0612  3E49               	addlw	(low (_DC_DZ2| 0))& (0+255)
  5794     0613  0086               	movwf	6
  5795     0614  0187               	clrf	7
  5796     0615  0801               	movf	1,w
  5797     0616  00A0               	movwf	___wmul@multiplier
  5798     0617  01A1               	clrf	___wmul@multiplier+1
  5799     0618  1BA0               	btfsc	___wmul@multiplier,7
  5800     0619  03A1               	decf	___wmul@multiplier+1,f
  5801     061A  0838               	movf	ai_propagate@i_891,w
  5802     061B  3E59               	addlw	(low (_Y1| 0))& (0+255)
  5803     061C  0086               	movwf	6
  5804     061D  0187               	clrf	7
  5805     061E  0801               	movf	1,w
  5806     061F  00A2               	movwf	___wmul@multiplicand
  5807     0620  01A3               	clrf	___wmul@multiplicand+1
  5808     0621  1BA2               	btfsc	___wmul@multiplicand,7
  5809     0622  03A3               	decf	___wmul@multiplicand+1,f
  5810     0623  318D  25C8  3185   	fcall	___wmul
  5811     0626  0020               	movlb	0	; select bank0
  5812     0627  0821               	movf	?___wmul+1,w
  5813     0628  00F5               	movwf	___awdiv@dividend+1
  5814     0629  0820               	movf	?___wmul,w
  5815     062A  00F4               	movwf	___awdiv@dividend
  5816     062B  3180  201E  3185   	fcall	___awdiv
  5817     062E  0873               	movf	?___awdiv+1,w
  5818     062F  0020               	movlb	0	; select bank0
  5819     0630  00B6               	movwf	_ai_propagate$1578+1
  5820     0631  0872               	movf	?___awdiv,w
  5821     0632  00B5               	movwf	_ai_propagate$1578
  5822                           
  5823                           ;ai.c: 191:             DC_DW2[i][j] = (((int)DC_DZ2[j]*(int)Y1[i])/127)/64;
  5824     0633  0838               	movf	ai_propagate@i_891,w
  5825     0634  00A4               	movwf	??_ai_propagate
  5826     0635  3002               	movlw	2
  5827     0636                     u2185:
  5828     0636  35A4               	lslf	??_ai_propagate,f
  5829     0637  0B89               	decfsz	9,f
  5830     0638  2E36               	goto	u2185
  5831     0639  3040               	movlw	(low (_DC_DW2| (0+256)))& (0+255)
  5832     063A  0724               	addwf	??_ai_propagate,w
  5833     063B  00A5               	movwf	??_ai_propagate+1
  5834     063C  083C               	movf	ai_propagate@j_889,w
  5835     063D  0725               	addwf	??_ai_propagate+1,w
  5836     063E  00A6               	movwf	??_ai_propagate+2
  5837     063F  0826               	movf	??_ai_propagate+2,w
  5838     0640  0086               	movwf	6
  5839     0641  3001               	movlw	1	; select bank2/3
  5840     0642  0087               	movwf	7
  5841     0643  3040               	movlw	64
  5842     0644  00F2               	movwf	___awdiv@divisor
  5843     0645  3000               	movlw	0
  5844     0646  00F3               	movwf	___awdiv@divisor+1
  5845     0647  0836               	movf	_ai_propagate$1578+1,w
  5846     0648  00F5               	movwf	___awdiv@dividend+1
  5847     0649  0835               	movf	_ai_propagate$1578,w
  5848     064A  00F4               	movwf	___awdiv@dividend
  5849     064B  3180  201E  3185   	fcall	___awdiv
  5850     064E  0872               	movf	?___awdiv,w
  5851     064F  0081               	movwf	1
  5852                           
  5853                           ;ai.c: 192:             DC_DY1[i] += ((int)DC_DZ2[j]*(int)W2[i][j])/127;
  5854     0650  307F               	movlw	127
  5855     0651  00F2               	movwf	___awdiv@divisor
  5856     0652  3000               	movlw	0
  5857     0653  00F3               	movwf	___awdiv@divisor+1
  5858     0654  0020               	movlb	0	; select bank0
  5859     0655  083C               	movf	ai_propagate@j_889,w
  5860     0656  3E49               	addlw	(low (_DC_DZ2| 0))& (0+255)
  5861     0657  0086               	movwf	6
  5862     0658  0187               	clrf	7
  5863     0659  0801               	movf	1,w
  5864     065A  00A0               	movwf	___wmul@multiplier
  5865     065B  01A1               	clrf	___wmul@multiplier+1
  5866     065C  1BA0               	btfsc	___wmul@multiplier,7
  5867     065D  03A1               	decf	___wmul@multiplier+1,f
  5868     065E  0838               	movf	ai_propagate@i_891,w
  5869     065F  00A4               	movwf	??_ai_propagate
  5870     0660  3002               	movlw	2
  5871     0661                     u2195:
  5872     0661  35A4               	lslf	??_ai_propagate,f
  5873     0662  0B89               	decfsz	9,f
  5874     0663  2E61               	goto	u2195
  5875     0664  3060               	movlw	(low (_W2| (0+256)))& (0+255)
  5876     0665  0724               	addwf	??_ai_propagate,w
  5877     0666  00A5               	movwf	??_ai_propagate+1
  5878     0667  083C               	movf	ai_propagate@j_889,w
  5879     0668  0725               	addwf	??_ai_propagate+1,w
  5880     0669  00A6               	movwf	??_ai_propagate+2
  5881     066A  0826               	movf	??_ai_propagate+2,w
  5882     066B  0086               	movwf	6
  5883     066C  3001               	movlw	1	; select bank2/3
  5884     066D  0087               	movwf	7
  5885     066E  0801               	movf	1,w
  5886     066F  00A2               	movwf	___wmul@multiplicand
  5887     0670  01A3               	clrf	___wmul@multiplicand+1
  5888     0671  1BA2               	btfsc	___wmul@multiplicand,7
  5889     0672  03A3               	decf	___wmul@multiplicand+1,f
  5890     0673  318D  25C8  3185   	fcall	___wmul
  5891     0676  0020               	movlb	0	; select bank0
  5892     0677  0821               	movf	?___wmul+1,w
  5893     0678  00F5               	movwf	___awdiv@dividend+1
  5894     0679  0820               	movf	?___wmul,w
  5895     067A  00F4               	movwf	___awdiv@dividend
  5896     067B  3180  201E  3185   	fcall	___awdiv
  5897     067E  0872               	movf	?___awdiv,w
  5898     067F  0020               	movlb	0	; select bank0
  5899     0680  00A7               	movwf	??_ai_propagate+3
  5900     0681  0838               	movf	ai_propagate@i_891,w
  5901     0682  3EB0               	addlw	(low (_DC_DY1| 0))& (0+255)
  5902     0683  0086               	movwf	6
  5903     0684  0187               	clrf	7
  5904     0685  0827               	movf	??_ai_propagate+3,w
  5905     0686  0781               	addwf	1,f
  5906     0687                     l3121:
  5907                           
  5908                           ;ai.c: 193:         }
  5909     0687  3001               	movlw	1
  5910     0688  00A4               	movwf	??_ai_propagate
  5911     0689  0824               	movf	??_ai_propagate,w
  5912     068A  07B8               	addwf	ai_propagate@i_891,f
  5913     068B                     l3123:
  5914     068B  3004               	movlw	4
  5915     068C  0238               	subwf	ai_propagate@i_891,w
  5916     068D  1C03               	skipc
  5917     068E  2E90               	goto	u2201
  5918     068F  2E91               	goto	u2200
  5919     0690                     u2201:
  5920     0690  2E0D               	goto	l3119
  5921     0691                     u2200:
  5922     0691                     l3125:
  5923                           
  5924                           ;ai.c: 194:     }
  5925     0691  3001               	movlw	1
  5926     0692  00A4               	movwf	??_ai_propagate
  5927     0693  0824               	movf	??_ai_propagate,w
  5928     0694  07BC               	addwf	ai_propagate@j_889,f
  5929     0695                     l3127:
  5930     0695  3004               	movlw	4
  5931     0696  023C               	subwf	ai_propagate@j_889,w
  5932     0697  1C03               	skipc
  5933     0698  2E9A               	goto	u2211
  5934     0699  2E9B               	goto	u2210
  5935     069A                     u2211:
  5936     069A  2DAE               	goto	l3107
  5937     069B                     u2210:
  5938     069B                     l3129:
  5939                           
  5940                           ;ai.c: 195:     for(uint8_t j = 0; j < 4; j++){
  5941     069B  01BB               	clrf	ai_propagate@j_892
  5942     069C                     l3135:
  5943                           
  5944                           ;ai.c: 196:         DC_DZ1[j] = ((int)DC_DY1[j]*(int)(de_sigmoid(Z1[j])/2))/127;
  5945     069C  083B               	movf	ai_propagate@j_892,w
  5946     069D  3EB0               	addlw	(low (_DC_DY1| 0))& (0+255)
  5947     069E  0086               	movwf	6
  5948     069F  0187               	clrf	7
  5949     06A0  0801               	movf	1,w
  5950     06A1  00A0               	movwf	___wmul@multiplier
  5951     06A2  01A1               	clrf	___wmul@multiplier+1
  5952     06A3  1BA0               	btfsc	___wmul@multiplier,7
  5953     06A4  03A1               	decf	___wmul@multiplier+1,f
  5954     06A5  3002               	movlw	2
  5955     06A6  00F2               	movwf	___awdiv@divisor
  5956     06A7  3000               	movlw	0
  5957     06A8  00F3               	movwf	___awdiv@divisor+1
  5958     06A9  083B               	movf	ai_propagate@j_892,w
  5959     06AA  3E51               	addlw	(low (_Z1| 0))& (0+255)
  5960     06AB  0086               	movwf	6
  5961     06AC  0187               	clrf	7
  5962     06AD  0801               	movf	1,w
  5963     06AE  318D  256C  3185   	fcall	_de_sigmoid
  5964     06B1  0020               	movlb	0	; select bank0
  5965     06B2  00A4               	movwf	??_ai_propagate
  5966     06B3  01A5               	clrf	??_ai_propagate+1
  5967     06B4  0824               	movf	??_ai_propagate,w
  5968     06B5  00F4               	movwf	___awdiv@dividend
  5969     06B6  0825               	movf	??_ai_propagate+1,w
  5970     06B7  00F5               	movwf	___awdiv@dividend+1
  5971     06B8  3180  201E  3185   	fcall	___awdiv
  5972     06BB  0873               	movf	?___awdiv+1,w
  5973     06BC  0020               	movlb	0	; select bank0
  5974     06BD  00A3               	movwf	___wmul@multiplicand+1
  5975     06BE  0872               	movf	?___awdiv,w
  5976     06BF  00A2               	movwf	___wmul@multiplicand
  5977     06C0  318D  25C8  3185   	fcall	___wmul
  5978     06C3  0020               	movlb	0	; select bank0
  5979     06C4  0821               	movf	?___wmul+1,w
  5980     06C5  00B6               	movwf	_ai_propagate$1578+1
  5981     06C6  0820               	movf	?___wmul,w
  5982     06C7  00B5               	movwf	_ai_propagate$1578
  5983     06C8                     l3137:
  5984                           
  5985                           ;ai.c: 196:         DC_DZ1[j] = ((int)DC_DY1[j]*(int)(de_sigmoid(Z1[j])/2))/127;
  5986     06C8  083B               	movf	ai_propagate@j_892,w
  5987     06C9  3EAC               	addlw	(low (_DC_DZ1| 0))& (0+255)
  5988     06CA  0086               	movwf	6
  5989     06CB  0187               	clrf	7
  5990     06CC  307F               	movlw	127
  5991     06CD  00F2               	movwf	___awdiv@divisor
  5992     06CE  3000               	movlw	0
  5993     06CF  00F3               	movwf	___awdiv@divisor+1
  5994     06D0  0836               	movf	_ai_propagate$1578+1,w
  5995     06D1  00F5               	movwf	___awdiv@dividend+1
  5996     06D2  0835               	movf	_ai_propagate$1578,w
  5997     06D3  00F4               	movwf	___awdiv@dividend
  5998     06D4  3180  201E  3185   	fcall	___awdiv
  5999     06D7  0872               	movf	?___awdiv,w
  6000     06D8  0081               	movwf	1
  6001     06D9                     l3139:
  6002                           
  6003                           ;ai.c: 197:         DC_DB1[j] = DC_DZ1[j]/64;
  6004     06D9  0020               	movlb	0	; select bank0
  6005     06DA  083B               	movf	ai_propagate@j_892,w
  6006     06DB  3EA8               	addlw	(low (_DC_DB1| 0))& (0+255)
  6007     06DC  0086               	movwf	6
  6008     06DD  0187               	clrf	7
  6009     06DE  3040               	movlw	64
  6010     06DF  00F2               	movwf	___awdiv@divisor
  6011     06E0  3000               	movlw	0
  6012     06E1  00F3               	movwf	___awdiv@divisor+1
  6013     06E2  083B               	movf	ai_propagate@j_892,w
  6014     06E3  3EAC               	addlw	(low (_DC_DZ1| 0))& (0+255)
  6015     06E4  0084               	movwf	4
  6016     06E5  0185               	clrf	5
  6017     06E6  0800               	movf	0,w
  6018     06E7  00F4               	movwf	___awdiv@dividend
  6019     06E8  01F5               	clrf	___awdiv@dividend+1
  6020     06E9  1BF4               	btfsc	___awdiv@dividend,7
  6021     06EA  03F5               	decf	___awdiv@dividend+1,f
  6022     06EB  3180  201E  3185   	fcall	___awdiv
  6023     06EE  0872               	movf	?___awdiv,w
  6024     06EF  0081               	movwf	1
  6025     06F0                     l3141:
  6026                           
  6027                           ;ai.c: 198:         for(uint8_t i = 0; i < 8; i++){
  6028     06F0  0020               	movlb	0	; select bank0
  6029     06F1  01B2               	clrf	ai_propagate@i_893
  6030     06F2                     l3147:
  6031                           
  6032                           ;ai.c: 199:             DC_DW2[i][j] = (((int)DC_DZ2[j]*(int)Y0[i])/127)/64;
  6033     06F2  307F               	movlw	127
  6034     06F3  00F2               	movwf	___awdiv@divisor
  6035     06F4  3000               	movlw	0
  6036     06F5  00F3               	movwf	___awdiv@divisor+1
  6037     06F6  083B               	movf	ai_propagate@j_892,w
  6038     06F7  3E49               	addlw	(low (_DC_DZ2| 0))& (0+255)
  6039     06F8  0086               	movwf	6
  6040     06F9  0187               	clrf	7
  6041     06FA  0801               	movf	1,w
  6042     06FB  00A0               	movwf	___wmul@multiplier
  6043     06FC  01A1               	clrf	___wmul@multiplier+1
  6044     06FD  1BA0               	btfsc	___wmul@multiplier,7
  6045     06FE  03A1               	decf	___wmul@multiplier+1,f
  6046     06FF  0832               	movf	ai_propagate@i_893,w
  6047     0700  3E63               	addlw	(low (_Y0| 0))& (0+255)
  6048     0701  0086               	movwf	6
  6049     0702  0187               	clrf	7
  6050     0703  0801               	movf	1,w
  6051     0704  00A2               	movwf	___wmul@multiplicand
  6052     0705  01A3               	clrf	___wmul@multiplicand+1
  6053     0706  1BA2               	btfsc	___wmul@multiplicand,7
  6054     0707  03A3               	decf	___wmul@multiplicand+1,f
  6055     0708  318D  25C8  3185   	fcall	___wmul
  6056     070B  0020               	movlb	0	; select bank0
  6057     070C  0821               	movf	?___wmul+1,w
  6058     070D  00F5               	movwf	___awdiv@dividend+1
  6059     070E  0820               	movf	?___wmul,w
  6060     070F  00F4               	movwf	___awdiv@dividend
  6061     0710  3180  201E  3185   	fcall	___awdiv
  6062     0713  0873               	movf	?___awdiv+1,w
  6063     0714  0020               	movlb	0	; select bank0
  6064     0715  00B6               	movwf	_ai_propagate$1578+1
  6065     0716  0872               	movf	?___awdiv,w
  6066     0717  00B5               	movwf	_ai_propagate$1578
  6067                           
  6068                           ;ai.c: 199:             DC_DW2[i][j] = (((int)DC_DZ2[j]*(int)Y0[i])/127)/64;
  6069     0718  0832               	movf	ai_propagate@i_893,w
  6070     0719  00A4               	movwf	??_ai_propagate
  6071     071A  3002               	movlw	2
  6072     071B                     u2225:
  6073     071B  35A4               	lslf	??_ai_propagate,f
  6074     071C  0B89               	decfsz	9,f
  6075     071D  2F1B               	goto	u2225
  6076     071E  3040               	movlw	(low (_DC_DW2| (0+256)))& (0+255)
  6077     071F  0724               	addwf	??_ai_propagate,w
  6078     0720  00A5               	movwf	??_ai_propagate+1
  6079     0721  083B               	movf	ai_propagate@j_892,w
  6080     0722  0725               	addwf	??_ai_propagate+1,w
  6081     0723  00A6               	movwf	??_ai_propagate+2
  6082     0724  0826               	movf	??_ai_propagate+2,w
  6083     0725  0086               	movwf	6
  6084     0726  3001               	movlw	1	; select bank2/3
  6085     0727  0087               	movwf	7
  6086     0728  3040               	movlw	64
  6087     0729  00F2               	movwf	___awdiv@divisor
  6088     072A  3000               	movlw	0
  6089     072B  00F3               	movwf	___awdiv@divisor+1
  6090     072C  0836               	movf	_ai_propagate$1578+1,w
  6091     072D  00F5               	movwf	___awdiv@dividend+1
  6092     072E  0835               	movf	_ai_propagate$1578,w
  6093     072F  00F4               	movwf	___awdiv@dividend
  6094     0730  3180  201E  3185   	fcall	___awdiv
  6095     0733  0872               	movf	?___awdiv,w
  6096     0734  0081               	movwf	1
  6097     0735                     l3149:
  6098                           
  6099                           ;ai.c: 200:         }
  6100     0735  3001               	movlw	1
  6101     0736  0020               	movlb	0	; select bank0
  6102     0737  00A4               	movwf	??_ai_propagate
  6103     0738  0824               	movf	??_ai_propagate,w
  6104     0739  07B2               	addwf	ai_propagate@i_893,f
  6105     073A                     l3151:
  6106     073A  3008               	movlw	8
  6107     073B  0232               	subwf	ai_propagate@i_893,w
  6108     073C  1C03               	skipc
  6109     073D  2F3F               	goto	u2231
  6110     073E  2F40               	goto	u2230
  6111     073F                     u2231:
  6112     073F  2EF2               	goto	l3147
  6113     0740                     u2230:
  6114     0740                     l3153:
  6115                           
  6116                           ;ai.c: 201:     }
  6117     0740  3001               	movlw	1
  6118     0741  00A4               	movwf	??_ai_propagate
  6119     0742  0824               	movf	??_ai_propagate,w
  6120     0743  07BB               	addwf	ai_propagate@j_892,f
  6121     0744                     l3155:
  6122     0744  3004               	movlw	4
  6123     0745  023B               	subwf	ai_propagate@j_892,w
  6124     0746  1C03               	skipc
  6125     0747  2F49               	goto	u2241
  6126     0748  2F4A               	goto	u2240
  6127     0749                     u2241:
  6128     0749  2E9C               	goto	l3135
  6129     074A                     u2240:
  6130     074A                     l3157:
  6131                           
  6132                           ;ai.c: 203:     for(uint8_t j = 0; j < 4; j++){
  6133     074A  01B9               	clrf	ai_propagate@j_894
  6134     074B                     l3163:
  6135                           
  6136                           ;ai.c: 204:         B2[j] -= DC_DB2[j];
  6137     074B  0839               	movf	ai_propagate@j_894,w
  6138     074C  3EB4               	addlw	(low (_DC_DB2| 0))& (0+255)
  6139     074D  0086               	movwf	6
  6140     074E  0187               	clrf	7
  6141     074F  0839               	movf	ai_propagate@j_894,w
  6142     0750  3EC8               	addlw	(low (_B2| 0))& (0+255)
  6143     0751  0084               	movwf	4
  6144     0752  0185               	clrf	5
  6145     0753  0801               	movf	1,w
  6146     0754  0280               	subwf	0,f
  6147     0755                     l3165:
  6148                           
  6149                           ;ai.c: 205:         for(uint8_t i = 0; i < 4; i++){
  6150     0755  01B3               	clrf	ai_propagate@i_895
  6151     0756                     l3171:
  6152                           
  6153                           ;ai.c: 206:             W2[i][j] -= DC_DW2[i][j];
  6154     0756  0833               	movf	ai_propagate@i_895,w
  6155     0757  00A4               	movwf	??_ai_propagate
  6156     0758  3002               	movlw	2
  6157     0759                     u2255:
  6158     0759  35A4               	lslf	??_ai_propagate,f
  6159     075A  0B89               	decfsz	9,f
  6160     075B  2F59               	goto	u2255
  6161     075C  3040               	movlw	(low (_DC_DW2| (0+256)))& (0+255)
  6162     075D  0724               	addwf	??_ai_propagate,w
  6163     075E  00A5               	movwf	??_ai_propagate+1
  6164     075F  0839               	movf	ai_propagate@j_894,w
  6165     0760  0725               	addwf	??_ai_propagate+1,w
  6166     0761  00A6               	movwf	??_ai_propagate+2
  6167     0762  0826               	movf	??_ai_propagate+2,w
  6168     0763  0086               	movwf	6
  6169     0764  3001               	movlw	1	; select bank2/3
  6170     0765  0087               	movwf	7
  6171     0766  0833               	movf	ai_propagate@i_895,w
  6172     0767  00A7               	movwf	??_ai_propagate+3
  6173     0768  3002               	movlw	2
  6174     0769                     u2265:
  6175     0769  35A7               	lslf	??_ai_propagate+3,f
  6176     076A  0B89               	decfsz	9,f
  6177     076B  2F69               	goto	u2265
  6178     076C  3060               	movlw	(low (_W2| (0+256)))& (0+255)
  6179     076D  0727               	addwf	??_ai_propagate+3,w
  6180     076E  00A8               	movwf	??_ai_propagate+4
  6181     076F  0839               	movf	ai_propagate@j_894,w
  6182     0770  0728               	addwf	??_ai_propagate+4,w
  6183     0771  00A9               	movwf	??_ai_propagate+5
  6184     0772  0829               	movf	??_ai_propagate+5,w
  6185     0773  0084               	movwf	4
  6186     0774  3001               	movlw	1	; select bank2/3
  6187     0775  0085               	movwf	5
  6188     0776  0801               	movf	1,w
  6189     0777  0280               	subwf	0,f
  6190     0778                     l3173:
  6191                           
  6192                           ;ai.c: 207:         }
  6193     0778  3001               	movlw	1
  6194     0779  00A4               	movwf	??_ai_propagate
  6195     077A  0824               	movf	??_ai_propagate,w
  6196     077B  07B3               	addwf	ai_propagate@i_895,f
  6197     077C                     l3175:
  6198     077C  3004               	movlw	4
  6199     077D  0233               	subwf	ai_propagate@i_895,w
  6200     077E  1C03               	skipc
  6201     077F  2F81               	goto	u2271
  6202     0780  2F82               	goto	u2270
  6203     0781                     u2271:
  6204     0781  2F56               	goto	l3171
  6205     0782                     u2270:
  6206     0782                     l3177:
  6207                           
  6208                           ;ai.c: 208:     }
  6209     0782  3001               	movlw	1
  6210     0783  00A4               	movwf	??_ai_propagate
  6211     0784  0824               	movf	??_ai_propagate,w
  6212     0785  07B9               	addwf	ai_propagate@j_894,f
  6213     0786                     l3179:
  6214     0786  3004               	movlw	4
  6215     0787  0239               	subwf	ai_propagate@j_894,w
  6216     0788  1C03               	skipc
  6217     0789  2F8B               	goto	u2281
  6218     078A  2F8C               	goto	u2280
  6219     078B                     u2281:
  6220     078B  2F4B               	goto	l3163
  6221     078C                     u2280:
  6222     078C                     l3181:
  6223                           
  6224                           ;ai.c: 209:     for(uint8_t j = 0; j < 4; j++){
  6225     078C  01BA               	clrf	ai_propagate@j_896
  6226     078D                     l3187:
  6227                           
  6228                           ;ai.c: 210:         B1[j] -= DC_DB1[j];
  6229     078D  083A               	movf	ai_propagate@j_896,w
  6230     078E  3EA8               	addlw	(low (_DC_DB1| 0))& (0+255)
  6231     078F  0086               	movwf	6
  6232     0790  0187               	clrf	7
  6233     0791  083A               	movf	ai_propagate@j_896,w
  6234     0792  3ECC               	addlw	(low (_B1| 0))& (0+255)
  6235     0793  0084               	movwf	4
  6236     0794  0185               	clrf	5
  6237     0795  0801               	movf	1,w
  6238     0796  0280               	subwf	0,f
  6239     0797                     l3189:
  6240                           
  6241                           ;ai.c: 211:         for(uint8_t i = 0; i < 8; i++){
  6242     0797  01B4               	clrf	ai_propagate@i_897
  6243     0798                     l3191:
  6244     0798  3008               	movlw	8
  6245     0799  0234               	subwf	ai_propagate@i_897,w
  6246     079A  1C03               	skipc
  6247     079B  2F9D               	goto	u2291
  6248     079C  2F9E               	goto	u2290
  6249     079D                     u2291:
  6250     079D  2F9F               	goto	l3195
  6251     079E                     u2290:
  6252     079E  2FC6               	goto	l3201
  6253     079F                     l3195:
  6254                           
  6255                           ;ai.c: 212:             W1[i][j] -= DC_DW1[i][j];
  6256     079F  0834               	movf	ai_propagate@i_897,w
  6257     07A0  00A4               	movwf	??_ai_propagate
  6258     07A1  3002               	movlw	2
  6259     07A2                     u2305:
  6260     07A2  35A4               	lslf	??_ai_propagate,f
  6261     07A3  0B89               	decfsz	9,f
  6262     07A4  2FA2               	goto	u2305
  6263     07A5  30A0               	movlw	(low (_DC_DW1| (0+256)))& (0+255)
  6264     07A6  0724               	addwf	??_ai_propagate,w
  6265     07A7  00A5               	movwf	??_ai_propagate+1
  6266     07A8  083A               	movf	ai_propagate@j_896,w
  6267     07A9  0725               	addwf	??_ai_propagate+1,w
  6268     07AA  00A6               	movwf	??_ai_propagate+2
  6269     07AB  0826               	movf	??_ai_propagate+2,w
  6270     07AC  0086               	movwf	6
  6271     07AD  3001               	movlw	1	; select bank3/4
  6272     07AE  0087               	movwf	7
  6273     07AF  0834               	movf	ai_propagate@i_897,w
  6274     07B0  00A7               	movwf	??_ai_propagate+3
  6275     07B1  3002               	movlw	2
  6276     07B2                     u2315:
  6277     07B2  35A7               	lslf	??_ai_propagate+3,f
  6278     07B3  0B89               	decfsz	9,f
  6279     07B4  2FB2               	goto	u2315
  6280     07B5  3020               	movlw	(low (_W1| (0+256)))& (0+255)
  6281     07B6  0727               	addwf	??_ai_propagate+3,w
  6282     07B7  00A8               	movwf	??_ai_propagate+4
  6283     07B8  083A               	movf	ai_propagate@j_896,w
  6284     07B9  0728               	addwf	??_ai_propagate+4,w
  6285     07BA  00A9               	movwf	??_ai_propagate+5
  6286     07BB  0829               	movf	??_ai_propagate+5,w
  6287     07BC  0084               	movwf	4
  6288     07BD  3001               	movlw	1	; select bank2/3
  6289     07BE  0085               	movwf	5
  6290     07BF  0801               	movf	1,w
  6291     07C0  0280               	subwf	0,f
  6292     07C1                     l3197:
  6293                           
  6294                           ;ai.c: 213:         }
  6295     07C1  3001               	movlw	1
  6296     07C2  00A4               	movwf	??_ai_propagate
  6297     07C3  0824               	movf	??_ai_propagate,w
  6298     07C4  07B4               	addwf	ai_propagate@i_897,f
  6299     07C5  2F98               	goto	l3191
  6300     07C6                     l3201:
  6301                           
  6302                           ;ai.c: 214:     }
  6303     07C6  3001               	movlw	1
  6304     07C7  00A4               	movwf	??_ai_propagate
  6305     07C8  0824               	movf	??_ai_propagate,w
  6306     07C9  07BA               	addwf	ai_propagate@j_896,f
  6307     07CA                     l3203:
  6308     07CA  3004               	movlw	4
  6309     07CB  023A               	subwf	ai_propagate@j_896,w
  6310     07CC  1C03               	skipc
  6311     07CD  2FCF               	goto	u2321
  6312     07CE  2FD0               	goto	u2320
  6313     07CF                     u2321:
  6314     07CF  2F8D               	goto	l3187
  6315     07D0                     u2320:
  6316     07D0                     l630:
  6317     07D0  0008               	return
  6318     07D1                     __end_of_ai_propagate:
  6319                           
  6320                           	psect	text17
  6321     0D6C                     __ptext17:	
  6322 ;; *************** function _de_sigmoid *****************
  6323 ;; Defined at:
  6324 ;;		line 9 in file "sigmoid.c"
  6325 ;; Parameters:    Size  Location     Type
  6326 ;;  z               1    wreg     char 
  6327 ;; Auto vars:     Size  Location     Type
  6328 ;;  z               1    1[COMMON] char 
  6329 ;; Return value:  Size  Location     Type
  6330 ;;                  1    wreg      unsigned char 
  6331 ;; Registers used:
  6332 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  6333 ;; Tracked objects:
  6334 ;;		On entry : 0/0
  6335 ;;		On exit  : 0/0
  6336 ;;		Unchanged: 0/0
  6337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6338 ;;      Params:         0       0       0       0       0       0
  6339 ;;      Locals:         1       0       0       0       0       0
  6340 ;;      Temps:          1       0       0       0       0       0
  6341 ;;      Totals:         2       0       0       0       0       0
  6342 ;;Total ram usage:        2 bytes
  6343 ;; Hardware stack levels used: 1
  6344 ;; This function calls:
  6345 ;;		Nothing
  6346 ;; This function is called by:
  6347 ;;		_ai_propagate
  6348 ;; This function uses a non-reentrant model
  6349 ;;
  6350                           
  6351     0D6C                     _de_sigmoid:	
  6352                           ;psect for function _de_sigmoid
  6353                           
  6354                           
  6355                           ;incstack = 0
  6356                           ; Regs used in _de_sigmoid: [wreg-fsr0h+status,2+status,0+pclath]
  6357                           ;de_sigmoid@z stored from wreg
  6358     0D6C  00F1               	movwf	de_sigmoid@z
  6359     0D6D                     l2583:
  6360                           
  6361                           ;sigmoid.c: 10:     return de_sigmoidValues[((uint8_t)z)>>4];
  6362     0D6D  0871               	movf	de_sigmoid@z,w
  6363     0D6E  00F0               	movwf	??_de_sigmoid
  6364     0D6F  3004               	movlw	4
  6365     0D70                     u1455:
  6366     0D70  36F0               	lsrf	??_de_sigmoid,f
  6367     0D71  0B89               	decfsz	9,f
  6368     0D72  2D70               	goto	u1455
  6369     0D73  0870               	movf	??_de_sigmoid,w
  6370     0D74  3E00               	addlw	low (_de_sigmoidValues| (0+32768))
  6371     0D75  0084               	movwf	4
  6372     0D76  3088               	movlw	high (_de_sigmoidValues| (0+32768))
  6373     0D77  1803               	skipnc
  6374     0D78  3E01               	addlw	1
  6375     0D79  0085               	movwf	5
  6376     0D7A  0800               	movf	0,w	;code access
  6377     0D7B                     l667:
  6378     0D7B  0008               	return
  6379     0D7C                     __end_of_de_sigmoid:
  6380                           
  6381                           	psect	text18
  6382     0DC8                     __ptext18:	
  6383 ;; *************** function ___wmul *****************
  6384 ;; Defined at:
  6385 ;;		line 15 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  6386 ;; Parameters:    Size  Location     Type
  6387 ;;  multiplier      2    0[BANK0 ] unsigned int 
  6388 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  6389 ;; Auto vars:     Size  Location     Type
  6390 ;;  product         2   11[COMMON] unsigned int 
  6391 ;; Return value:  Size  Location     Type
  6392 ;;                  2    0[BANK0 ] unsigned int 
  6393 ;; Registers used:
  6394 ;;		wreg, status,2, status,0
  6395 ;; Tracked objects:
  6396 ;;		On entry : 0/0
  6397 ;;		On exit  : 0/0
  6398 ;;		Unchanged: 0/0
  6399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6400 ;;      Params:         0       4       0       0       0       0
  6401 ;;      Locals:         2       0       0       0       0       0
  6402 ;;      Temps:          0       0       0       0       0       0
  6403 ;;      Totals:         2       4       0       0       0       0
  6404 ;;Total ram usage:        6 bytes
  6405 ;; Hardware stack levels used: 1
  6406 ;; This function calls:
  6407 ;;		Nothing
  6408 ;; This function is called by:
  6409 ;;		_ai_run
  6410 ;;		_ai_propagate
  6411 ;; This function uses a non-reentrant model
  6412 ;;
  6413                           
  6414     0DC8                     ___wmul:	
  6415                           ;psect for function ___wmul
  6416                           
  6417     0DC8                     l2587:	
  6418                           ;incstack = 0
  6419                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6420                           
  6421     0DC8  01FB               	clrf	___wmul@product
  6422     0DC9  01FC               	clrf	___wmul@product+1
  6423     0DCA                     l2589:
  6424     0DCA  0020               	movlb	0	; select bank0
  6425     0DCB  1C20               	btfss	___wmul@multiplier,0
  6426     0DCC  2DCE               	goto	u1461
  6427     0DCD  2DCF               	goto	u1460
  6428     0DCE                     u1461:
  6429     0DCE  2DD3               	goto	l817
  6430     0DCF                     u1460:
  6431     0DCF                     l2591:
  6432     0DCF  0822               	movf	___wmul@multiplicand,w
  6433     0DD0  07FB               	addwf	___wmul@product,f
  6434     0DD1  0823               	movf	___wmul@multiplicand+1,w
  6435     0DD2  3DFC               	addwfc	___wmul@product+1,f
  6436     0DD3                     l817:
  6437     0DD3  3001               	movlw	1
  6438     0DD4                     u1475:
  6439     0DD4  35A2               	lslf	___wmul@multiplicand,f
  6440     0DD5  0DA3               	rlf	___wmul@multiplicand+1,f
  6441     0DD6  0B89               	decfsz	9,f
  6442     0DD7  2DD4               	goto	u1475
  6443     0DD8                     l2593:
  6444     0DD8  3001               	movlw	1
  6445     0DD9                     u1485:
  6446     0DD9  36A1               	lsrf	___wmul@multiplier+1,f
  6447     0DDA  0CA0               	rrf	___wmul@multiplier,f
  6448     0DDB  0B89               	decfsz	9,f
  6449     0DDC  2DD9               	goto	u1485
  6450     0DDD                     l2595:
  6451     0DDD  0820               	movf	___wmul@multiplier,w
  6452     0DDE  0421               	iorwf	___wmul@multiplier+1,w
  6453     0DDF  1D03               	btfss	3,2
  6454     0DE0  2DE2               	goto	u1491
  6455     0DE1  2DE3               	goto	u1490
  6456     0DE2                     u1491:
  6457     0DE2  2DCA               	goto	l2589
  6458     0DE3                     u1490:
  6459     0DE3                     l2597:
  6460     0DE3  087C               	movf	___wmul@product+1,w
  6461     0DE4  00A1               	movwf	?___wmul+1
  6462     0DE5  087B               	movf	___wmul@product,w
  6463     0DE6  00A0               	movwf	?___wmul
  6464     0DE7                     l819:
  6465     0DE7  0008               	return
  6466     0DE8                     __end_of___wmul:
  6467                           
  6468                           	psect	text19
  6469     001E                     __ptext19:	
  6470 ;; *************** function ___awdiv *****************
  6471 ;; Defined at:
  6472 ;;		line 5 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
  6473 ;; Parameters:    Size  Location     Type
  6474 ;;  divisor         2    2[COMMON] int 
  6475 ;;  dividend        2    4[COMMON] int 
  6476 ;; Auto vars:     Size  Location     Type
  6477 ;;  quotient        2    9[COMMON] int 
  6478 ;;  sign            1    8[COMMON] unsigned char 
  6479 ;;  counter         1    7[COMMON] unsigned char 
  6480 ;; Return value:  Size  Location     Type
  6481 ;;                  2    2[COMMON] int 
  6482 ;; Registers used:
  6483 ;;		wreg, status,2, status,0
  6484 ;; Tracked objects:
  6485 ;;		On entry : 0/0
  6486 ;;		On exit  : 0/0
  6487 ;;		Unchanged: 0/0
  6488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6489 ;;      Params:         4       0       0       0       0       0
  6490 ;;      Locals:         4       0       0       0       0       0
  6491 ;;      Temps:          1       0       0       0       0       0
  6492 ;;      Totals:         9       0       0       0       0       0
  6493 ;;Total ram usage:        9 bytes
  6494 ;; Hardware stack levels used: 1
  6495 ;; This function calls:
  6496 ;;		Nothing
  6497 ;; This function is called by:
  6498 ;;		_main
  6499 ;;		_snake_move
  6500 ;;		_snake_getSurroundings
  6501 ;;		_ai_run
  6502 ;;		_ai_propagate
  6503 ;; This function uses a non-reentrant model
  6504 ;;
  6505                           
  6506     001E                     ___awdiv:	
  6507                           ;psect for function ___awdiv
  6508                           
  6509     001E                     l2601:	
  6510                           ;incstack = 0
  6511                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  6512                           
  6513     001E  01F8               	clrf	___awdiv@sign
  6514     001F                     l2603:
  6515     001F  1FF3               	btfss	___awdiv@divisor+1,7
  6516     0020  2822               	goto	u1501
  6517     0021  2823               	goto	u1500
  6518     0022                     u1501:
  6519     0022  282A               	goto	l2609
  6520     0023                     u1500:
  6521     0023                     l2605:
  6522     0023  09F2               	comf	___awdiv@divisor,f
  6523     0024  09F3               	comf	___awdiv@divisor+1,f
  6524     0025  0AF2               	incf	___awdiv@divisor,f
  6525     0026  1903               	skipnz
  6526     0027  0AF3               	incf	___awdiv@divisor+1,f
  6527     0028                     l2607:
  6528     0028  01F8               	clrf	___awdiv@sign
  6529     0029  0AF8               	incf	___awdiv@sign,f
  6530     002A                     l2609:
  6531     002A  1FF5               	btfss	___awdiv@dividend+1,7
  6532     002B  282D               	goto	u1511
  6533     002C  282E               	goto	u1510
  6534     002D                     u1511:
  6535     002D  2837               	goto	l2615
  6536     002E                     u1510:
  6537     002E                     l2611:
  6538     002E  09F4               	comf	___awdiv@dividend,f
  6539     002F  09F5               	comf	___awdiv@dividend+1,f
  6540     0030  0AF4               	incf	___awdiv@dividend,f
  6541     0031  1903               	skipnz
  6542     0032  0AF5               	incf	___awdiv@dividend+1,f
  6543     0033                     l2613:
  6544     0033  3001               	movlw	1
  6545     0034  00F6               	movwf	??___awdiv
  6546     0035  0876               	movf	??___awdiv,w
  6547     0036  06F8               	xorwf	___awdiv@sign,f
  6548     0037                     l2615:
  6549     0037  01F9               	clrf	___awdiv@quotient
  6550     0038  01FA               	clrf	___awdiv@quotient+1
  6551     0039                     l2617:
  6552     0039  0872               	movf	___awdiv@divisor,w
  6553     003A  0473               	iorwf	___awdiv@divisor+1,w
  6554     003B  1903               	btfsc	3,2
  6555     003C  283E               	goto	u1521
  6556     003D  283F               	goto	u1520
  6557     003E                     u1521:
  6558     003E  286E               	goto	l2637
  6559     003F                     u1520:
  6560     003F                     l2619:
  6561     003F  01F7               	clrf	___awdiv@counter
  6562     0040  0AF7               	incf	___awdiv@counter,f
  6563     0041  284B               	goto	l2625
  6564     0042                     l2621:
  6565     0042  3001               	movlw	1
  6566     0043                     u1535:
  6567     0043  35F2               	lslf	___awdiv@divisor,f
  6568     0044  0DF3               	rlf	___awdiv@divisor+1,f
  6569     0045  0B89               	decfsz	9,f
  6570     0046  2843               	goto	u1535
  6571     0047                     l2623:
  6572     0047  3001               	movlw	1
  6573     0048  00F6               	movwf	??___awdiv
  6574     0049  0876               	movf	??___awdiv,w
  6575     004A  07F7               	addwf	___awdiv@counter,f
  6576     004B                     l2625:
  6577     004B  1FF3               	btfss	___awdiv@divisor+1,7
  6578     004C  284E               	goto	u1541
  6579     004D  284F               	goto	u1540
  6580     004E                     u1541:
  6581     004E  2842               	goto	l2621
  6582     004F                     u1540:
  6583     004F                     l2627:
  6584     004F  3001               	movlw	1
  6585     0050                     u1555:
  6586     0050  35F9               	lslf	___awdiv@quotient,f
  6587     0051  0DFA               	rlf	___awdiv@quotient+1,f
  6588     0052  0B89               	decfsz	9,f
  6589     0053  2850               	goto	u1555
  6590     0054  0873               	movf	___awdiv@divisor+1,w
  6591     0055  0275               	subwf	___awdiv@dividend+1,w
  6592     0056  1D03               	skipz
  6593     0057  285A               	goto	u1565
  6594     0058  0872               	movf	___awdiv@divisor,w
  6595     0059  0274               	subwf	___awdiv@dividend,w
  6596     005A                     u1565:
  6597     005A  1C03               	skipc
  6598     005B  285D               	goto	u1561
  6599     005C  285E               	goto	u1560
  6600     005D                     u1561:
  6601     005D  2863               	goto	l2633
  6602     005E                     u1560:
  6603     005E                     l2629:
  6604     005E  0872               	movf	___awdiv@divisor,w
  6605     005F  02F4               	subwf	___awdiv@dividend,f
  6606     0060  0873               	movf	___awdiv@divisor+1,w
  6607     0061  3BF5               	subwfb	___awdiv@dividend+1,f
  6608     0062                     l2631:
  6609     0062  1479               	bsf	___awdiv@quotient,0
  6610     0063                     l2633:
  6611     0063  3001               	movlw	1
  6612     0064                     u1575:
  6613     0064  36F3               	lsrf	___awdiv@divisor+1,f
  6614     0065  0CF2               	rrf	___awdiv@divisor,f
  6615     0066  0B89               	decfsz	9,f
  6616     0067  2864               	goto	u1575
  6617     0068                     l2635:
  6618     0068  3001               	movlw	1
  6619     0069  02F7               	subwf	___awdiv@counter,f
  6620     006A  1D03               	btfss	3,2
  6621     006B  286D               	goto	u1581
  6622     006C  286E               	goto	u1580
  6623     006D                     u1581:
  6624     006D  284F               	goto	l2627
  6625     006E                     u1580:
  6626     006E                     l2637:
  6627     006E  0878               	movf	___awdiv@sign,w
  6628     006F  1903               	btfsc	3,2
  6629     0070  2872               	goto	u1591
  6630     0071  2873               	goto	u1590
  6631     0072                     u1591:
  6632     0072  2878               	goto	l2641
  6633     0073                     u1590:
  6634     0073                     l2639:
  6635     0073  09F9               	comf	___awdiv@quotient,f
  6636     0074  09FA               	comf	___awdiv@quotient+1,f
  6637     0075  0AF9               	incf	___awdiv@quotient,f
  6638     0076  1903               	skipnz
  6639     0077  0AFA               	incf	___awdiv@quotient+1,f
  6640     0078                     l2641:
  6641     0078  087A               	movf	___awdiv@quotient+1,w
  6642     0079  00F3               	movwf	?___awdiv+1
  6643     007A  0879               	movf	___awdiv@quotient,w
  6644     007B  00F2               	movwf	?___awdiv
  6645     007C                     l970:
  6646     007C  0008               	return
  6647     007D                     __end_of___awdiv:
  6648                           
  6649                           	psect	text20
  6650     0D2F                     __ptext20:	
  6651 ;; *************** function _EUSART_Write *****************
  6652 ;; Defined at:
  6653 ;;		line 132 in file "mcc_generated_files/eusart.c"
  6654 ;; Parameters:    Size  Location     Type
  6655 ;;  txData          1    wreg     unsigned char 
  6656 ;; Auto vars:     Size  Location     Type
  6657 ;;  txData          1    0[COMMON] unsigned char 
  6658 ;; Return value:  Size  Location     Type
  6659 ;;                  1    wreg      void 
  6660 ;; Registers used:
  6661 ;;		wreg
  6662 ;; Tracked objects:
  6663 ;;		On entry : 0/0
  6664 ;;		On exit  : 0/0
  6665 ;;		Unchanged: 0/0
  6666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6667 ;;      Params:         0       0       0       0       0       0
  6668 ;;      Locals:         1       0       0       0       0       0
  6669 ;;      Temps:          0       0       0       0       0       0
  6670 ;;      Totals:         1       0       0       0       0       0
  6671 ;;Total ram usage:        1 bytes
  6672 ;; Hardware stack levels used: 1
  6673 ;; This function calls:
  6674 ;;		Nothing
  6675 ;; This function is called by:
  6676 ;;		_ai_propagate
  6677 ;; This function uses a non-reentrant model
  6678 ;;
  6679                           
  6680     0D2F                     _EUSART_Write:	
  6681                           ;psect for function _EUSART_Write
  6682                           
  6683                           
  6684                           ;incstack = 0
  6685                           ; Regs used in _EUSART_Write: [wreg]
  6686                           ;EUSART_Write@txData stored from wreg
  6687     0D2F  00F0               	movwf	EUSART_Write@txData
  6688     0D30                     l2519:
  6689     0D30                     l117:	
  6690                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
  6691                           
  6692                           
  6693                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TXIF)
  6694     0D30  0020               	movlb	0	; select bank0
  6695     0D31  1E11               	btfss	17,4	;volatile
  6696     0D32  2D34               	goto	u1401
  6697     0D33  2D35               	goto	u1400
  6698     0D34                     u1401:
  6699     0D34  2D30               	goto	l117
  6700     0D35                     u1400:
  6701     0D35                     l2521:
  6702                           
  6703                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
  6704     0D35  0870               	movf	EUSART_Write@txData,w
  6705     0D36  0023               	movlb	3	; select bank3
  6706     0D37  009A               	movwf	26	;volatile
  6707     0D38                     l120:
  6708     0D38  0008               	return
  6709     0D39                     __end_of_EUSART_Write:
  6710                           
  6711                           	psect	text21
  6712     0F62                     __ptext21:	
  6713 ;; *************** function _ai_initiate *****************
  6714 ;; Defined at:
  6715 ;;		line 94 in file "ai.c"
  6716 ;; Parameters:    Size  Location     Type
  6717 ;;		None
  6718 ;; Auto vars:     Size  Location     Type
  6719 ;;  i               1   15[BANK0 ] unsigned char 
  6720 ;;  i               1   14[BANK0 ] unsigned char 
  6721 ;;  j               1   17[BANK0 ] unsigned char 
  6722 ;;  j               1   16[BANK0 ] unsigned char 
  6723 ;; Return value:  Size  Location     Type
  6724 ;;                  1    wreg      void 
  6725 ;; Registers used:
  6726 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6727 ;; Tracked objects:
  6728 ;;		On entry : 0/0
  6729 ;;		On exit  : 0/0
  6730 ;;		Unchanged: 0/0
  6731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6732 ;;      Params:         0       0       0       0       0       0
  6733 ;;      Locals:         0       4       0       0       0       0
  6734 ;;      Temps:          0       3       0       0       0       0
  6735 ;;      Totals:         0       7       0       0       0       0
  6736 ;;Total ram usage:        7 bytes
  6737 ;; Hardware stack levels used: 1
  6738 ;; Hardware stack levels required when called: 2
  6739 ;; This function calls:
  6740 ;;		___awmod
  6741 ;;		_rand
  6742 ;; This function is called by:
  6743 ;;		_main
  6744 ;; This function uses a non-reentrant model
  6745 ;;
  6746                           
  6747     0F62                     _ai_initiate:	
  6748                           ;psect for function _ai_initiate
  6749                           
  6750     0F62                     l2687:	
  6751                           ;incstack = 0
  6752                           ; Regs used in _ai_initiate: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6753                           
  6754                           
  6755                           ;ai.c: 98:     for(uint8_t j = 0; j < 4; j++){
  6756     0F62  0020               	movlb	0	; select bank0
  6757     0F63  01B0               	clrf	ai_initiate@j
  6758     0F64                     l2693:
  6759                           
  6760                           ;ai.c: 99:         B1[j] = rand()%0x03;
  6761     0F64  0830               	movf	ai_initiate@j,w
  6762     0F65  3ECC               	addlw	(low (_B1| 0))& (0+255)
  6763     0F66  0086               	movwf	6
  6764     0F67  0187               	clrf	7
  6765     0F68  3003               	movlw	3
  6766     0F69  00A4               	movwf	___awmod@divisor
  6767     0F6A  3000               	movlw	0
  6768     0F6B  00A5               	movwf	___awmod@divisor+1
  6769     0F6C  318E  269B  318F   	fcall	_rand
  6770     0F6F  087D               	movf	?_rand+1,w
  6771     0F70  0020               	movlb	0	; select bank0
  6772     0F71  00A7               	movwf	___awmod@dividend+1
  6773     0F72  087C               	movf	?_rand,w
  6774     0F73  00A6               	movwf	___awmod@dividend
  6775     0F74  318F  270E  318F   	fcall	___awmod
  6776     0F77  0020               	movlb	0	; select bank0
  6777     0F78  0824               	movf	?___awmod,w
  6778     0F79  0081               	movwf	1
  6779     0F7A                     l2695:
  6780                           
  6781                           ;ai.c: 100:         for(uint8_t i = 0; i < 8; i++){
  6782     0F7A  01AE               	clrf	ai_initiate@i
  6783     0F7B                     l2701:
  6784                           
  6785                           ;ai.c: 101:             W1[i][j] = rand()%0x03;
  6786     0F7B  082E               	movf	ai_initiate@i,w
  6787     0F7C  00AB               	movwf	??_ai_initiate
  6788     0F7D  3002               	movlw	2
  6789     0F7E                     u1695:
  6790     0F7E  35AB               	lslf	??_ai_initiate,f
  6791     0F7F  0B89               	decfsz	9,f
  6792     0F80  2F7E               	goto	u1695
  6793     0F81  3020               	movlw	(low (_W1| (0+256)))& (0+255)
  6794     0F82  072B               	addwf	??_ai_initiate,w
  6795     0F83  00AC               	movwf	??_ai_initiate+1
  6796     0F84  0830               	movf	ai_initiate@j,w
  6797     0F85  072C               	addwf	??_ai_initiate+1,w
  6798     0F86  00AD               	movwf	??_ai_initiate+2
  6799     0F87  082D               	movf	??_ai_initiate+2,w
  6800     0F88  0086               	movwf	6
  6801     0F89  3001               	movlw	1	; select bank2/3
  6802     0F8A  0087               	movwf	7
  6803     0F8B  3003               	movlw	3
  6804     0F8C  00A4               	movwf	___awmod@divisor
  6805     0F8D  3000               	movlw	0
  6806     0F8E  00A5               	movwf	___awmod@divisor+1
  6807     0F8F  318E  269B  318F   	fcall	_rand
  6808     0F92  087D               	movf	?_rand+1,w
  6809     0F93  0020               	movlb	0	; select bank0
  6810     0F94  00A7               	movwf	___awmod@dividend+1
  6811     0F95  087C               	movf	?_rand,w
  6812     0F96  00A6               	movwf	___awmod@dividend
  6813     0F97  318F  270E  318F   	fcall	___awmod
  6814     0F9A  0020               	movlb	0	; select bank0
  6815     0F9B  0824               	movf	?___awmod,w
  6816     0F9C  0081               	movwf	1
  6817     0F9D                     l2703:
  6818                           
  6819                           ;ai.c: 102:         }
  6820     0F9D  3001               	movlw	1
  6821     0F9E  00AB               	movwf	??_ai_initiate
  6822     0F9F  082B               	movf	??_ai_initiate,w
  6823     0FA0  07AE               	addwf	ai_initiate@i,f
  6824     0FA1                     l2705:
  6825     0FA1  3008               	movlw	8
  6826     0FA2  022E               	subwf	ai_initiate@i,w
  6827     0FA3  1C03               	skipc
  6828     0FA4  2FA6               	goto	u1701
  6829     0FA5  2FA7               	goto	u1700
  6830     0FA6                     u1701:
  6831     0FA6  2F7B               	goto	l2701
  6832     0FA7                     u1700:
  6833     0FA7                     l2707:
  6834                           
  6835                           ;ai.c: 103:     }
  6836     0FA7  3001               	movlw	1
  6837     0FA8  00AB               	movwf	??_ai_initiate
  6838     0FA9  082B               	movf	??_ai_initiate,w
  6839     0FAA  07B0               	addwf	ai_initiate@j,f
  6840     0FAB                     l2709:
  6841     0FAB  3004               	movlw	4
  6842     0FAC  0230               	subwf	ai_initiate@j,w
  6843     0FAD  1C03               	skipc
  6844     0FAE  2FB0               	goto	u1711
  6845     0FAF  2FB1               	goto	u1710
  6846     0FB0                     u1711:
  6847     0FB0  2F64               	goto	l2693
  6848     0FB1                     u1710:
  6849     0FB1                     l2711:
  6850                           
  6851                           ;ai.c: 104:     for(uint8_t j = 0; j < 4; j++){
  6852     0FB1  01B1               	clrf	ai_initiate@j_870
  6853     0FB2                     l2717:
  6854                           
  6855                           ;ai.c: 105:         B2[j] = rand()%0x03;
  6856     0FB2  0831               	movf	ai_initiate@j_870,w
  6857     0FB3  3EC8               	addlw	(low (_B2| 0))& (0+255)
  6858     0FB4  0086               	movwf	6
  6859     0FB5  0187               	clrf	7
  6860     0FB6  3003               	movlw	3
  6861     0FB7  00A4               	movwf	___awmod@divisor
  6862     0FB8  3000               	movlw	0
  6863     0FB9  00A5               	movwf	___awmod@divisor+1
  6864     0FBA  318E  269B  318F   	fcall	_rand
  6865     0FBD  087D               	movf	?_rand+1,w
  6866     0FBE  0020               	movlb	0	; select bank0
  6867     0FBF  00A7               	movwf	___awmod@dividend+1
  6868     0FC0  087C               	movf	?_rand,w
  6869     0FC1  00A6               	movwf	___awmod@dividend
  6870     0FC2  318F  270E  318F   	fcall	___awmod
  6871     0FC5  0020               	movlb	0	; select bank0
  6872     0FC6  0824               	movf	?___awmod,w
  6873     0FC7  0081               	movwf	1
  6874     0FC8                     l2719:
  6875                           
  6876                           ;ai.c: 106:         for(uint8_t i = 0; i < 4; i++){
  6877     0FC8  01AF               	clrf	ai_initiate@i_871
  6878     0FC9                     l2725:
  6879                           
  6880                           ;ai.c: 107:             W2[i][j] = rand()%0x03;
  6881     0FC9  082F               	movf	ai_initiate@i_871,w
  6882     0FCA  00AB               	movwf	??_ai_initiate
  6883     0FCB  3002               	movlw	2
  6884     0FCC                     u1725:
  6885     0FCC  35AB               	lslf	??_ai_initiate,f
  6886     0FCD  0B89               	decfsz	9,f
  6887     0FCE  2FCC               	goto	u1725
  6888     0FCF  3060               	movlw	(low (_W2| (0+256)))& (0+255)
  6889     0FD0  072B               	addwf	??_ai_initiate,w
  6890     0FD1  00AC               	movwf	??_ai_initiate+1
  6891     0FD2  0831               	movf	ai_initiate@j_870,w
  6892     0FD3  072C               	addwf	??_ai_initiate+1,w
  6893     0FD4  00AD               	movwf	??_ai_initiate+2
  6894     0FD5  082D               	movf	??_ai_initiate+2,w
  6895     0FD6  0086               	movwf	6
  6896     0FD7  3001               	movlw	1	; select bank2/3
  6897     0FD8  0087               	movwf	7
  6898     0FD9  3003               	movlw	3
  6899     0FDA  00A4               	movwf	___awmod@divisor
  6900     0FDB  3000               	movlw	0
  6901     0FDC  00A5               	movwf	___awmod@divisor+1
  6902     0FDD  318E  269B  318F   	fcall	_rand
  6903     0FE0  087D               	movf	?_rand+1,w
  6904     0FE1  0020               	movlb	0	; select bank0
  6905     0FE2  00A7               	movwf	___awmod@dividend+1
  6906     0FE3  087C               	movf	?_rand,w
  6907     0FE4  00A6               	movwf	___awmod@dividend
  6908     0FE5  318F  270E  318F   	fcall	___awmod
  6909     0FE8  0020               	movlb	0	; select bank0
  6910     0FE9  0824               	movf	?___awmod,w
  6911     0FEA  0081               	movwf	1
  6912     0FEB                     l2727:
  6913                           
  6914                           ;ai.c: 108:         }
  6915     0FEB  3001               	movlw	1
  6916     0FEC  00AB               	movwf	??_ai_initiate
  6917     0FED  082B               	movf	??_ai_initiate,w
  6918     0FEE  07AF               	addwf	ai_initiate@i_871,f
  6919     0FEF                     l2729:
  6920     0FEF  3004               	movlw	4
  6921     0FF0  022F               	subwf	ai_initiate@i_871,w
  6922     0FF1  1C03               	skipc
  6923     0FF2  2FF4               	goto	u1731
  6924     0FF3  2FF5               	goto	u1730
  6925     0FF4                     u1731:
  6926     0FF4  2FC9               	goto	l2725
  6927     0FF5                     u1730:
  6928     0FF5                     l2731:
  6929                           
  6930                           ;ai.c: 109:     }
  6931     0FF5  3001               	movlw	1
  6932     0FF6  00AB               	movwf	??_ai_initiate
  6933     0FF7  082B               	movf	??_ai_initiate,w
  6934     0FF8  07B1               	addwf	ai_initiate@j_870,f
  6935     0FF9                     l2733:
  6936     0FF9  3004               	movlw	4
  6937     0FFA  0231               	subwf	ai_initiate@j_870,w
  6938     0FFB  1C03               	skipc
  6939     0FFC  2FFE               	goto	u1741
  6940     0FFD  2FFF               	goto	u1740
  6941     0FFE                     u1741:
  6942     0FFE  2FB2               	goto	l2717
  6943     0FFF                     u1740:
  6944     0FFF                     l606:
  6945     0FFF  0008               	return
  6946     1000                     __end_of_ai_initiate:
  6947                           
  6948                           	psect	text22
  6949     0E9B                     __ptext22:	
  6950 ;; *************** function _rand *****************
  6951 ;; Defined at:
  6952 ;;		line 11 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\common\rand.c"
  6953 ;; Parameters:    Size  Location     Type
  6954 ;;		None
  6955 ;; Auto vars:     Size  Location     Type
  6956 ;;		None
  6957 ;; Return value:  Size  Location     Type
  6958 ;;                  2   12[COMMON] int 
  6959 ;; Registers used:
  6960 ;;		wreg, status,2, status,0, pclath, cstack
  6961 ;; Tracked objects:
  6962 ;;		On entry : 0/0
  6963 ;;		On exit  : 0/0
  6964 ;;		Unchanged: 0/0
  6965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6966 ;;      Params:         2       0       0       0       0       0
  6967 ;;      Locals:         0       0       0       0       0       0
  6968 ;;      Temps:          0       4       0       0       0       0
  6969 ;;      Totals:         2       4       0       0       0       0
  6970 ;;Total ram usage:        6 bytes
  6971 ;; Hardware stack levels used: 1
  6972 ;; Hardware stack levels required when called: 1
  6973 ;; This function calls:
  6974 ;;		___lmul
  6975 ;; This function is called by:
  6976 ;;		_snake_initiate
  6977 ;;		_snake_move
  6978 ;;		_ai_initiate
  6979 ;; This function uses a non-reentrant model
  6980 ;;
  6981                           
  6982     0E9B                     _rand:	
  6983                           ;psect for function _rand
  6984                           
  6985     0E9B                     l2501:	
  6986                           ;incstack = 0
  6987                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
  6988                           
  6989     0E9B  0020               	movlb	0	; select bank0
  6990     0E9C  086E               	movf	_seed+3,w
  6991     0E9D  00F3               	movwf	___lmul@multiplier+3
  6992     0E9E  086D               	movf	_seed+2,w
  6993     0E9F  00F2               	movwf	___lmul@multiplier+2
  6994     0EA0  086C               	movf	_seed+1,w
  6995     0EA1  00F1               	movwf	___lmul@multiplier+1
  6996     0EA2  086B               	movf	_seed,w
  6997     0EA3  00F0               	movwf	___lmul@multiplier
  6998     0EA4  304C               	movlw	76
  6999     0EA5  00F7               	movwf	___lmul@multiplicand+3
  7000     0EA6  3095               	movlw	149
  7001     0EA7  00F6               	movwf	___lmul@multiplicand+2
  7002     0EA8  307F               	movlw	127
  7003     0EA9  00F5               	movwf	___lmul@multiplicand+1
  7004     0EAA  302D               	movlw	45
  7005     0EAB  00F4               	movwf	___lmul@multiplicand
  7006     0EAC  318E  2668  318E   	fcall	___lmul
  7007     0EAF  3001               	movlw	1
  7008     0EB0  0770               	addwf	?___lmul,w
  7009     0EB1  0020               	movlb	0	; select bank0
  7010     0EB2  00EB               	movwf	_seed
  7011     0EB3  3000               	movlw	0
  7012     0EB4  3D71               	addwfc	?___lmul+1,w
  7013     0EB5  00EC               	movwf	_seed+1
  7014     0EB6  3000               	movlw	0
  7015     0EB7  3D72               	addwfc	?___lmul+2,w
  7016     0EB8  00ED               	movwf	_seed+2
  7017     0EB9  3000               	movlw	0
  7018     0EBA  3D73               	addwfc	?___lmul+3,w
  7019     0EBB  00EE               	movwf	_seed+3
  7020     0EBC                     l2503:
  7021     0EBC  086B               	movf	_seed,w
  7022     0EBD  00A0               	movwf	??_rand
  7023     0EBE  086C               	movf	_seed+1,w
  7024     0EBF  00A1               	movwf	??_rand+1
  7025     0EC0  086D               	movf	_seed+2,w
  7026     0EC1  00A2               	movwf	??_rand+2
  7027     0EC2  086E               	movf	_seed+3,w
  7028     0EC3  00A3               	movwf	??_rand+3
  7029     0EC4  3011               	movlw	17
  7030     0EC5                     u1395:
  7031     0EC5  36A3               	lsrf	??_rand+3,f
  7032     0EC6  0CA2               	rrf	??_rand+2,f
  7033     0EC7  0CA1               	rrf	??_rand+1,f
  7034     0EC8  0CA0               	rrf	??_rand,f
  7035     0EC9                     u1390:
  7036     0EC9  0B89               	decfsz	9,f
  7037     0ECA  2EC5               	goto	u1395
  7038     0ECB  0821               	movf	??_rand+1,w
  7039     0ECC  00FD               	movwf	?_rand+1
  7040     0ECD  0820               	movf	??_rand,w
  7041     0ECE  00FC               	movwf	?_rand
  7042     0ECF                     l1281:
  7043     0ECF  0008               	return
  7044     0ED0                     __end_of_rand:
  7045                           
  7046                           	psect	text23
  7047     0E68                     __ptext23:	
  7048 ;; *************** function ___lmul *****************
  7049 ;; Defined at:
  7050 ;;		line 15 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\common\Umul32.c"
  7051 ;; Parameters:    Size  Location     Type
  7052 ;;  multiplier      4    0[COMMON] unsigned long 
  7053 ;;  multiplicand    4    4[COMMON] unsigned long 
  7054 ;; Auto vars:     Size  Location     Type
  7055 ;;  product         4    8[COMMON] unsigned long 
  7056 ;; Return value:  Size  Location     Type
  7057 ;;                  4    0[COMMON] unsigned long 
  7058 ;; Registers used:
  7059 ;;		wreg, status,2, status,0
  7060 ;; Tracked objects:
  7061 ;;		On entry : 0/0
  7062 ;;		On exit  : 0/0
  7063 ;;		Unchanged: 0/0
  7064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7065 ;;      Params:         8       0       0       0       0       0
  7066 ;;      Locals:         4       0       0       0       0       0
  7067 ;;      Temps:          0       0       0       0       0       0
  7068 ;;      Totals:        12       0       0       0       0       0
  7069 ;;Total ram usage:       12 bytes
  7070 ;; Hardware stack levels used: 1
  7071 ;; This function calls:
  7072 ;;		Nothing
  7073 ;; This function is called by:
  7074 ;;		_rand
  7075 ;; This function uses a non-reentrant model
  7076 ;;
  7077                           
  7078     0E68                     ___lmul:	
  7079                           ;psect for function ___lmul
  7080                           
  7081     0E68                     l2477:	
  7082                           ;incstack = 0
  7083                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  7084                           
  7085     0E68  3000               	movlw	0
  7086     0E69  00FB               	movwf	___lmul@product+3
  7087     0E6A  3000               	movlw	0
  7088     0E6B  00FA               	movwf	___lmul@product+2
  7089     0E6C  3000               	movlw	0
  7090     0E6D  00F9               	movwf	___lmul@product+1
  7091     0E6E  3000               	movlw	0
  7092     0E6F  00F8               	movwf	___lmul@product
  7093     0E70                     l2479:
  7094     0E70  1C70               	btfss	___lmul@multiplier,0
  7095     0E71  2E73               	goto	u1351
  7096     0E72  2E74               	goto	u1350
  7097     0E73                     u1351:
  7098     0E73  2E7C               	goto	l2483
  7099     0E74                     u1350:
  7100     0E74                     l2481:
  7101     0E74  0874               	movf	___lmul@multiplicand,w
  7102     0E75  07F8               	addwf	___lmul@product,f
  7103     0E76  0875               	movf	___lmul@multiplicand+1,w
  7104     0E77  3DF9               	addwfc	___lmul@product+1,f
  7105     0E78  0876               	movf	___lmul@multiplicand+2,w
  7106     0E79  3DFA               	addwfc	___lmul@product+2,f
  7107     0E7A  0877               	movf	___lmul@multiplicand+3,w
  7108     0E7B  3DFB               	addwfc	___lmul@product+3,f
  7109     0E7C                     l2483:
  7110     0E7C  3001               	movlw	1
  7111     0E7D                     u1365:
  7112     0E7D  35F4               	lslf	___lmul@multiplicand,f
  7113     0E7E  0DF5               	rlf	___lmul@multiplicand+1,f
  7114     0E7F  0DF6               	rlf	___lmul@multiplicand+2,f
  7115     0E80  0DF7               	rlf	___lmul@multiplicand+3,f
  7116     0E81  0B89               	decfsz	9,f
  7117     0E82  2E7D               	goto	u1365
  7118     0E83                     l2485:
  7119     0E83  3001               	movlw	1
  7120     0E84                     u1375:
  7121     0E84  36F3               	lsrf	___lmul@multiplier+3,f
  7122     0E85  0CF2               	rrf	___lmul@multiplier+2,f
  7123     0E86  0CF1               	rrf	___lmul@multiplier+1,f
  7124     0E87  0CF0               	rrf	___lmul@multiplier,f
  7125     0E88  0B89               	decfsz	9,f
  7126     0E89  2E84               	goto	u1375
  7127     0E8A  0873               	movf	___lmul@multiplier+3,w
  7128     0E8B  0472               	iorwf	___lmul@multiplier+2,w
  7129     0E8C  0471               	iorwf	___lmul@multiplier+1,w
  7130     0E8D  0470               	iorwf	___lmul@multiplier,w
  7131     0E8E  1D03               	skipz
  7132     0E8F  2E91               	goto	u1381
  7133     0E90  2E92               	goto	u1380
  7134     0E91                     u1381:
  7135     0E91  2E70               	goto	l2479
  7136     0E92                     u1380:
  7137     0E92                     l2487:
  7138     0E92  087B               	movf	___lmul@product+3,w
  7139     0E93  00F3               	movwf	?___lmul+3
  7140     0E94  087A               	movf	___lmul@product+2,w
  7141     0E95  00F2               	movwf	?___lmul+2
  7142     0E96  0879               	movf	___lmul@product+1,w
  7143     0E97  00F1               	movwf	?___lmul+1
  7144     0E98  0878               	movf	___lmul@product,w
  7145     0E99  00F0               	movwf	?___lmul
  7146     0E9A                     l831:
  7147     0E9A  0008               	return
  7148     0E9B                     __end_of___lmul:
  7149                           
  7150                           	psect	text24
  7151     0F0E                     __ptext24:	
  7152 ;; *************** function ___awmod *****************
  7153 ;; Defined at:
  7154 ;;		line 5 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\common\awmod.c"
  7155 ;; Parameters:    Size  Location     Type
  7156 ;;  divisor         2    4[BANK0 ] int 
  7157 ;;  dividend        2    6[BANK0 ] int 
  7158 ;; Auto vars:     Size  Location     Type
  7159 ;;  sign            1   10[BANK0 ] unsigned char 
  7160 ;;  counter         1    9[BANK0 ] unsigned char 
  7161 ;; Return value:  Size  Location     Type
  7162 ;;                  2    4[BANK0 ] int 
  7163 ;; Registers used:
  7164 ;;		wreg, status,2, status,0
  7165 ;; Tracked objects:
  7166 ;;		On entry : 0/0
  7167 ;;		On exit  : 0/0
  7168 ;;		Unchanged: 0/0
  7169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7170 ;;      Params:         0       4       0       0       0       0
  7171 ;;      Locals:         0       2       0       0       0       0
  7172 ;;      Temps:          0       1       0       0       0       0
  7173 ;;      Totals:         0       7       0       0       0       0
  7174 ;;Total ram usage:        7 bytes
  7175 ;; Hardware stack levels used: 1
  7176 ;; This function calls:
  7177 ;;		Nothing
  7178 ;; This function is called by:
  7179 ;;		_ai_initiate
  7180 ;; This function uses a non-reentrant model
  7181 ;;
  7182                           
  7183     0F0E                     ___awmod:	
  7184                           ;psect for function ___awmod
  7185                           
  7186     0F0E                     l2645:	
  7187                           ;incstack = 0
  7188                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  7189                           
  7190     0F0E  0020               	movlb	0	; select bank0
  7191     0F0F  01AA               	clrf	___awmod@sign
  7192     0F10                     l2647:
  7193     0F10  1FA7               	btfss	___awmod@dividend+1,7
  7194     0F11  2F13               	goto	u1601
  7195     0F12  2F14               	goto	u1600
  7196     0F13                     u1601:
  7197     0F13  2F1B               	goto	l2653
  7198     0F14                     u1600:
  7199     0F14                     l2649:
  7200     0F14  09A6               	comf	___awmod@dividend,f
  7201     0F15  09A7               	comf	___awmod@dividend+1,f
  7202     0F16  0AA6               	incf	___awmod@dividend,f
  7203     0F17  1903               	skipnz
  7204     0F18  0AA7               	incf	___awmod@dividend+1,f
  7205     0F19                     l2651:
  7206     0F19  01AA               	clrf	___awmod@sign
  7207     0F1A  0AAA               	incf	___awmod@sign,f
  7208     0F1B                     l2653:
  7209     0F1B  1FA5               	btfss	___awmod@divisor+1,7
  7210     0F1C  2F1E               	goto	u1611
  7211     0F1D  2F1F               	goto	u1610
  7212     0F1E                     u1611:
  7213     0F1E  2F24               	goto	l2657
  7214     0F1F                     u1610:
  7215     0F1F                     l2655:
  7216     0F1F  09A4               	comf	___awmod@divisor,f
  7217     0F20  09A5               	comf	___awmod@divisor+1,f
  7218     0F21  0AA4               	incf	___awmod@divisor,f
  7219     0F22  1903               	skipnz
  7220     0F23  0AA5               	incf	___awmod@divisor+1,f
  7221     0F24                     l2657:
  7222     0F24  0824               	movf	___awmod@divisor,w
  7223     0F25  0425               	iorwf	___awmod@divisor+1,w
  7224     0F26  1903               	btfsc	3,2
  7225     0F27  2F29               	goto	u1621
  7226     0F28  2F2A               	goto	u1620
  7227     0F29                     u1621:
  7228     0F29  2F53               	goto	l2675
  7229     0F2A                     u1620:
  7230     0F2A                     l2659:
  7231     0F2A  01A9               	clrf	___awmod@counter
  7232     0F2B  0AA9               	incf	___awmod@counter,f
  7233     0F2C  2F36               	goto	l2665
  7234     0F2D                     l2661:
  7235     0F2D  3001               	movlw	1
  7236     0F2E                     u1635:
  7237     0F2E  35A4               	lslf	___awmod@divisor,f
  7238     0F2F  0DA5               	rlf	___awmod@divisor+1,f
  7239     0F30  0B89               	decfsz	9,f
  7240     0F31  2F2E               	goto	u1635
  7241     0F32                     l2663:
  7242     0F32  3001               	movlw	1
  7243     0F33  00A8               	movwf	??___awmod
  7244     0F34  0828               	movf	??___awmod,w
  7245     0F35  07A9               	addwf	___awmod@counter,f
  7246     0F36                     l2665:
  7247     0F36  1FA5               	btfss	___awmod@divisor+1,7
  7248     0F37  2F39               	goto	u1641
  7249     0F38  2F3A               	goto	u1640
  7250     0F39                     u1641:
  7251     0F39  2F2D               	goto	l2661
  7252     0F3A                     u1640:
  7253     0F3A                     l2667:
  7254     0F3A  0825               	movf	___awmod@divisor+1,w
  7255     0F3B  0227               	subwf	___awmod@dividend+1,w
  7256     0F3C  1D03               	skipz
  7257     0F3D  2F40               	goto	u1655
  7258     0F3E  0824               	movf	___awmod@divisor,w
  7259     0F3F  0226               	subwf	___awmod@dividend,w
  7260     0F40                     u1655:
  7261     0F40  1C03               	skipc
  7262     0F41  2F43               	goto	u1651
  7263     0F42  2F44               	goto	u1650
  7264     0F43                     u1651:
  7265     0F43  2F48               	goto	l2671
  7266     0F44                     u1650:
  7267     0F44                     l2669:
  7268     0F44  0824               	movf	___awmod@divisor,w
  7269     0F45  02A6               	subwf	___awmod@dividend,f
  7270     0F46  0825               	movf	___awmod@divisor+1,w
  7271     0F47  3BA7               	subwfb	___awmod@dividend+1,f
  7272     0F48                     l2671:
  7273     0F48  3001               	movlw	1
  7274     0F49                     u1665:
  7275     0F49  36A5               	lsrf	___awmod@divisor+1,f
  7276     0F4A  0CA4               	rrf	___awmod@divisor,f
  7277     0F4B  0B89               	decfsz	9,f
  7278     0F4C  2F49               	goto	u1665
  7279     0F4D                     l2673:
  7280     0F4D  3001               	movlw	1
  7281     0F4E  02A9               	subwf	___awmod@counter,f
  7282     0F4F  1D03               	btfss	3,2
  7283     0F50  2F52               	goto	u1671
  7284     0F51  2F53               	goto	u1670
  7285     0F52                     u1671:
  7286     0F52  2F3A               	goto	l2667
  7287     0F53                     u1670:
  7288     0F53                     l2675:
  7289     0F53  082A               	movf	___awmod@sign,w
  7290     0F54  1903               	btfsc	3,2
  7291     0F55  2F57               	goto	u1681
  7292     0F56  2F58               	goto	u1680
  7293     0F57                     u1681:
  7294     0F57  2F5D               	goto	l2679
  7295     0F58                     u1680:
  7296     0F58                     l2677:
  7297     0F58  09A6               	comf	___awmod@dividend,f
  7298     0F59  09A7               	comf	___awmod@dividend+1,f
  7299     0F5A  0AA6               	incf	___awmod@dividend,f
  7300     0F5B  1903               	skipnz
  7301     0F5C  0AA7               	incf	___awmod@dividend+1,f
  7302     0F5D                     l2679:
  7303     0F5D  0827               	movf	___awmod@dividend+1,w
  7304     0F5E  00A5               	movwf	?___awmod+1
  7305     0F5F  0826               	movf	___awmod@dividend,w
  7306     0F60  00A4               	movwf	?___awmod
  7307     0F61                     l983:
  7308     0F61  0008               	return
  7309     0F62                     __end_of___awmod:
  7310                           
  7311                           	psect	text25
  7312     0CF2                     __ptext25:	
  7313 ;; *************** function _ai_getInputField *****************
  7314 ;; Defined at:
  7315 ;;		line 113 in file "ai.c"
  7316 ;; Parameters:    Size  Location     Type
  7317 ;;		None
  7318 ;; Auto vars:     Size  Location     Type
  7319 ;;		None
  7320 ;; Return value:  Size  Location     Type
  7321 ;;                  1    wreg      PTR char 
  7322 ;; Registers used:
  7323 ;;		wreg
  7324 ;; Tracked objects:
  7325 ;;		On entry : 0/0
  7326 ;;		On exit  : 0/0
  7327 ;;		Unchanged: 0/0
  7328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7329 ;;      Params:         0       0       0       0       0       0
  7330 ;;      Locals:         0       0       0       0       0       0
  7331 ;;      Temps:          0       0       0       0       0       0
  7332 ;;      Totals:         0       0       0       0       0       0
  7333 ;;Total ram usage:        0 bytes
  7334 ;; Hardware stack levels used: 1
  7335 ;; This function calls:
  7336 ;;		Nothing
  7337 ;; This function is called by:
  7338 ;;		_main
  7339 ;; This function uses a non-reentrant model
  7340 ;;
  7341                           
  7342     0CF2                     _ai_getInputField:	
  7343                           ;psect for function _ai_getInputField
  7344                           
  7345     0CF2                     l2787:	
  7346                           ;incstack = 0
  7347                           ; Regs used in _ai_getInputField: [wreg]
  7348                           
  7349                           
  7350                           ;ai.c: 114:     return Y0;
  7351     0CF2  3063               	movlw	(low (_Y0| 0))& (0+255)
  7352     0CF3                     l609:
  7353     0CF3  0008               	return
  7354     0CF4                     __end_of_ai_getInputField:
  7355                           
  7356                           	psect	text26
  7357     0D5C                     __ptext26:	
  7358 ;; *************** function _SYSTEM_Initialize *****************
  7359 ;; Defined at:
  7360 ;;		line 50 in file "mcc_generated_files/mcc.c"
  7361 ;; Parameters:    Size  Location     Type
  7362 ;;		None
  7363 ;; Auto vars:     Size  Location     Type
  7364 ;;		None
  7365 ;; Return value:  Size  Location     Type
  7366 ;;                  1    wreg      void 
  7367 ;; Registers used:
  7368 ;;		wreg, status,2, status,0, pclath, cstack
  7369 ;; Tracked objects:
  7370 ;;		On entry : 0/0
  7371 ;;		On exit  : 0/0
  7372 ;;		Unchanged: 0/0
  7373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7374 ;;      Params:         0       0       0       0       0       0
  7375 ;;      Locals:         0       0       0       0       0       0
  7376 ;;      Temps:          0       0       0       0       0       0
  7377 ;;      Totals:         0       0       0       0       0       0
  7378 ;;Total ram usage:        0 bytes
  7379 ;; Hardware stack levels used: 1
  7380 ;; Hardware stack levels required when called: 2
  7381 ;; This function calls:
  7382 ;;		_EUSART_Initialize
  7383 ;;		_OSCILLATOR_Initialize
  7384 ;;		_PIN_MANAGER_Initialize
  7385 ;;		_SPI1_Initialize
  7386 ;;		_WDT_Initialize
  7387 ;; This function is called by:
  7388 ;;		_main
  7389 ;; This function uses a non-reentrant model
  7390 ;;
  7391                           
  7392     0D5C                     _SYSTEM_Initialize:	
  7393                           ;psect for function _SYSTEM_Initialize
  7394                           
  7395     0D5C                     l2683:	
  7396                           ;incstack = 0
  7397                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7398                           
  7399                           
  7400                           ;mcc_generated_files/mcc.c: 53:     SPI1_Initialize();
  7401     0D5C  318D  2543  318D   	fcall	_SPI1_Initialize
  7402                           
  7403                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  7404     0D5F  318D  25B0  318D   	fcall	_PIN_MANAGER_Initialize
  7405                           
  7406                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  7407     0D62  318D  2520  318D   	fcall	_OSCILLATOR_Initialize
  7408                           
  7409                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  7410     0D65  318C  24F9  318D   	fcall	_WDT_Initialize
  7411                           
  7412                           ;mcc_generated_files/mcc.c: 57:     EUSART_Initialize();
  7413     0D68  318D  25E8  318D   	fcall	_EUSART_Initialize
  7414     0D6B                     l248:
  7415     0D6B  0008               	return
  7416     0D6C                     __end_of_SYSTEM_Initialize:
  7417                           
  7418                           	psect	text27
  7419     0CF9                     __ptext27:	
  7420 ;; *************** function _WDT_Initialize *****************
  7421 ;; Defined at:
  7422 ;;		line 70 in file "mcc_generated_files/mcc.c"
  7423 ;; Parameters:    Size  Location     Type
  7424 ;;		None
  7425 ;; Auto vars:     Size  Location     Type
  7426 ;;		None
  7427 ;; Return value:  Size  Location     Type
  7428 ;;                  1    wreg      void 
  7429 ;; Registers used:
  7430 ;;		wreg
  7431 ;; Tracked objects:
  7432 ;;		On entry : 0/0
  7433 ;;		On exit  : 0/0
  7434 ;;		Unchanged: 0/0
  7435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7436 ;;      Params:         0       0       0       0       0       0
  7437 ;;      Locals:         0       0       0       0       0       0
  7438 ;;      Temps:          0       0       0       0       0       0
  7439 ;;      Totals:         0       0       0       0       0       0
  7440 ;;Total ram usage:        0 bytes
  7441 ;; Hardware stack levels used: 1
  7442 ;; This function calls:
  7443 ;;		Nothing
  7444 ;; This function is called by:
  7445 ;;		_SYSTEM_Initialize
  7446 ;; This function uses a non-reentrant model
  7447 ;;
  7448                           
  7449     0CF9                     _WDT_Initialize:	
  7450                           ;psect for function _WDT_Initialize
  7451                           
  7452     0CF9                     l2551:	
  7453                           ;incstack = 0
  7454                           ; Regs used in _WDT_Initialize: [wreg]
  7455                           
  7456                           
  7457                           ;mcc_generated_files/mcc.c: 73:     WDTCON = 0x16;
  7458     0CF9  3016               	movlw	22
  7459     0CFA  0021               	movlb	1	; select bank1
  7460     0CFB  0097               	movwf	23	;volatile
  7461     0CFC                     l254:
  7462     0CFC  0008               	return
  7463     0CFD                     __end_of_WDT_Initialize:
  7464                           
  7465                           	psect	text28
  7466     0D43                     __ptext28:	
  7467 ;; *************** function _SPI1_Initialize *****************
  7468 ;; Defined at:
  7469 ;;		line 62 in file "mcc_generated_files/spi1.c"
  7470 ;; Parameters:    Size  Location     Type
  7471 ;;		None
  7472 ;; Auto vars:     Size  Location     Type
  7473 ;;		None
  7474 ;; Return value:  Size  Location     Type
  7475 ;;                  1    wreg      void 
  7476 ;; Registers used:
  7477 ;;		wreg
  7478 ;; Tracked objects:
  7479 ;;		On entry : 0/0
  7480 ;;		On exit  : 0/0
  7481 ;;		Unchanged: 0/0
  7482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7483 ;;      Params:         0       0       0       0       0       0
  7484 ;;      Locals:         0       0       0       0       0       0
  7485 ;;      Temps:          0       0       0       0       0       0
  7486 ;;      Totals:         0       0       0       0       0       0
  7487 ;;Total ram usage:        0 bytes
  7488 ;; Hardware stack levels used: 1
  7489 ;; This function calls:
  7490 ;;		Nothing
  7491 ;; This function is called by:
  7492 ;;		_SYSTEM_Initialize
  7493 ;; This function uses a non-reentrant model
  7494 ;;
  7495                           
  7496     0D43                     _SPI1_Initialize:	
  7497                           ;psect for function _SPI1_Initialize
  7498                           
  7499     0D43                     l2539:	
  7500                           ;incstack = 0
  7501                           ; Regs used in _SPI1_Initialize: [wreg]
  7502                           
  7503                           
  7504                           ;mcc_generated_files/spi1.c: 65:     SSP1STAT = 0x40;
  7505     0D43  3040               	movlw	64
  7506     0D44  0024               	movlb	4	; select bank4
  7507     0D45  0094               	movwf	20	;volatile
  7508                           
  7509                           ;mcc_generated_files/spi1.c: 66:     SSP1CON1 = 0x02;
  7510     0D46  3002               	movlw	2
  7511     0D47  0095               	movwf	21	;volatile
  7512                           
  7513                           ;mcc_generated_files/spi1.c: 67:     SSP1ADD = 0x01;
  7514     0D48  3001               	movlw	1
  7515     0D49  0092               	movwf	18	;volatile
  7516     0D4A                     l2541:
  7517                           
  7518                           ;mcc_generated_files/spi1.c: 68:     TRISBbits.TRISB4 = 0;
  7519     0D4A  0021               	movlb	1	; select bank1
  7520     0D4B  120D               	bcf	13,4	;volatile
  7521     0D4C                     l2543:
  7522                           
  7523                           ;mcc_generated_files/spi1.c: 69:     SSP1CON1bits.SSPEN = 0;
  7524     0D4C  0024               	movlb	4	; select bank4
  7525     0D4D  1295               	bcf	21,5	;volatile
  7526     0D4E                     l187:
  7527     0D4E  0008               	return
  7528     0D4F                     __end_of_SPI1_Initialize:
  7529                           
  7530                           	psect	text29
  7531     0DB0                     __ptext29:	
  7532 ;; *************** function _PIN_MANAGER_Initialize *****************
  7533 ;; Defined at:
  7534 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  7535 ;; Parameters:    Size  Location     Type
  7536 ;;		None
  7537 ;; Auto vars:     Size  Location     Type
  7538 ;;		None
  7539 ;; Return value:  Size  Location     Type
  7540 ;;                  1    wreg      void 
  7541 ;; Registers used:
  7542 ;;		wreg, status,2
  7543 ;; Tracked objects:
  7544 ;;		On entry : 0/0
  7545 ;;		On exit  : 0/0
  7546 ;;		Unchanged: 0/0
  7547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7548 ;;      Params:         0       0       0       0       0       0
  7549 ;;      Locals:         0       0       0       0       0       0
  7550 ;;      Temps:          0       0       0       0       0       0
  7551 ;;      Totals:         0       0       0       0       0       0
  7552 ;;Total ram usage:        0 bytes
  7553 ;; Hardware stack levels used: 1
  7554 ;; This function calls:
  7555 ;;		Nothing
  7556 ;; This function is called by:
  7557 ;;		_SYSTEM_Initialize
  7558 ;; This function uses a non-reentrant model
  7559 ;;
  7560                           
  7561     0DB0                     _PIN_MANAGER_Initialize:	
  7562                           ;psect for function _PIN_MANAGER_Initialize
  7563                           
  7564     0DB0                     l2523:	
  7565                           ;incstack = 0
  7566                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  7567                           
  7568                           
  7569                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  7570     0DB0  0022               	movlb	2	; select bank2
  7571     0DB1  018C               	clrf	12	;volatile
  7572                           
  7573                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  7574     0DB2  018D               	clrf	13	;volatile
  7575     0DB3                     l2525:
  7576                           
  7577                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x37;
  7578     0DB3  3037               	movlw	55
  7579     0DB4  0021               	movlb	1	; select bank1
  7580     0DB5  008C               	movwf	12	;volatile
  7581     0DB6                     l2527:
  7582                           
  7583                           ;mcc_generated_files/pin_manager.c: 67:     TRISB = 0xEF;
  7584     0DB6  30EF               	movlw	239
  7585     0DB7  008D               	movwf	13	;volatile
  7586     0DB8                     l2529:
  7587                           
  7588                           ;mcc_generated_files/pin_manager.c: 72:     ANSELB = 0xC8;
  7589     0DB8  30C8               	movlw	200
  7590     0DB9  0023               	movlb	3	; select bank3
  7591     0DBA  008D               	movwf	13	;volatile
  7592     0DBB                     l2531:
  7593                           
  7594                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x1F;
  7595     0DBB  301F               	movlw	31
  7596     0DBC  008C               	movwf	12	;volatile
  7597                           
  7598                           ;mcc_generated_files/pin_manager.c: 78:     WPUB = 0x00;
  7599     0DBD  0024               	movlb	4	; select bank4
  7600     0DBE  018D               	clrf	13	;volatile
  7601                           
  7602                           ;mcc_generated_files/pin_manager.c: 79:     WPUA = 0x00;
  7603     0DBF  018C               	clrf	12	;volatile
  7604     0DC0                     l2533:
  7605                           
  7606                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  7607     0DC0  0021               	movlb	1	; select bank1
  7608     0DC1  1795               	bsf	21,7	;volatile
  7609     0DC2                     l2535:
  7610                           
  7611                           ;mcc_generated_files/pin_manager.c: 86:     APFCON0 = 0xC0;
  7612     0DC2  30C0               	movlw	192
  7613     0DC3  0022               	movlb	2	; select bank2
  7614     0DC4  009D               	movwf	29	;volatile
  7615     0DC5                     l2537:
  7616                           
  7617                           ;mcc_generated_files/pin_manager.c: 87:     APFCON1 = 0x01;
  7618     0DC5  3001               	movlw	1
  7619     0DC6  009E               	movwf	30	;volatile
  7620     0DC7                     l163:
  7621     0DC7  0008               	return
  7622     0DC8                     __end_of_PIN_MANAGER_Initialize:
  7623                           
  7624                           	psect	text30
  7625     0D20                     __ptext30:	
  7626 ;; *************** function _OSCILLATOR_Initialize *****************
  7627 ;; Defined at:
  7628 ;;		line 60 in file "mcc_generated_files/mcc.c"
  7629 ;; Parameters:    Size  Location     Type
  7630 ;;		None
  7631 ;; Auto vars:     Size  Location     Type
  7632 ;;		None
  7633 ;; Return value:  Size  Location     Type
  7634 ;;                  1    wreg      void 
  7635 ;; Registers used:
  7636 ;;		wreg, status,2
  7637 ;; Tracked objects:
  7638 ;;		On entry : 0/0
  7639 ;;		On exit  : 0/0
  7640 ;;		Unchanged: 0/0
  7641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7642 ;;      Params:         0       0       0       0       0       0
  7643 ;;      Locals:         0       0       0       0       0       0
  7644 ;;      Temps:          0       0       0       0       0       0
  7645 ;;      Totals:         0       0       0       0       0       0
  7646 ;;Total ram usage:        0 bytes
  7647 ;; Hardware stack levels used: 1
  7648 ;; This function calls:
  7649 ;;		Nothing
  7650 ;; This function is called by:
  7651 ;;		_SYSTEM_Initialize
  7652 ;; This function uses a non-reentrant model
  7653 ;;
  7654                           
  7655     0D20                     _OSCILLATOR_Initialize:	
  7656                           ;psect for function _OSCILLATOR_Initialize
  7657                           
  7658     0D20                     l2545:	
  7659                           ;incstack = 0
  7660                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  7661                           
  7662                           
  7663                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x70;
  7664     0D20  3070               	movlw	112
  7665     0D21  0021               	movlb	1	; select bank1
  7666     0D22  0099               	movwf	25	;volatile
  7667     0D23                     l2547:
  7668                           
  7669                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x00;
  7670     0D23  0198               	clrf	24	;volatile
  7671     0D24                     l2549:
  7672                           
  7673                           ;mcc_generated_files/mcc.c: 67:     BORCON = 0x00;
  7674     0D24  0022               	movlb	2	; select bank2
  7675     0D25  0196               	clrf	22	;volatile
  7676     0D26                     l251:
  7677     0D26  0008               	return
  7678     0D27                     __end_of_OSCILLATOR_Initialize:
  7679                           
  7680                           	psect	text31
  7681     0DE8                     __ptext31:	
  7682 ;; *************** function _EUSART_Initialize *****************
  7683 ;; Defined at:
  7684 ;;		line 66 in file "mcc_generated_files/eusart.c"
  7685 ;; Parameters:    Size  Location     Type
  7686 ;;		None
  7687 ;; Auto vars:     Size  Location     Type
  7688 ;;		None
  7689 ;; Return value:  Size  Location     Type
  7690 ;;                  1    wreg      void 
  7691 ;; Registers used:
  7692 ;;		wreg, status,2, status,0, pclath, cstack
  7693 ;; Tracked objects:
  7694 ;;		On entry : 0/0
  7695 ;;		On exit  : 0/0
  7696 ;;		Unchanged: 0/0
  7697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7698 ;;      Params:         0       0       0       0       0       0
  7699 ;;      Locals:         0       0       0       0       0       0
  7700 ;;      Temps:          0       0       0       0       0       0
  7701 ;;      Totals:         0       0       0       0       0       0
  7702 ;;Total ram usage:        0 bytes
  7703 ;; Hardware stack levels used: 1
  7704 ;; Hardware stack levels required when called: 1
  7705 ;; This function calls:
  7706 ;;		_EUSART_SetErrorHandler
  7707 ;;		_EUSART_SetFramingErrorHandler
  7708 ;;		_EUSART_SetOverrunErrorHandler
  7709 ;; This function is called by:
  7710 ;;		_SYSTEM_Initialize
  7711 ;; This function uses a non-reentrant model
  7712 ;;
  7713                           
  7714     0DE8                     _EUSART_Initialize:	
  7715                           ;psect for function _EUSART_Initialize
  7716                           
  7717     0DE8                     l2507:	
  7718                           ;incstack = 0
  7719                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7720                           
  7721                           
  7722                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  7723     0DE8  3008               	movlw	8
  7724     0DE9  0023               	movlb	3	; select bank3
  7725     0DEA  009F               	movwf	31	;volatile
  7726                           
  7727                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
  7728     0DEB  3090               	movlw	144
  7729     0DEC  009D               	movwf	29	;volatile
  7730                           
  7731                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  7732     0DED  3024               	movlw	36
  7733     0DEE  009E               	movwf	30	;volatile
  7734                           
  7735                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0x67;
  7736     0DEF  3067               	movlw	103
  7737     0DF0  009B               	movwf	27	;volatile
  7738     0DF1                     l2509:
  7739                           
  7740                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x00;
  7741     0DF1  019C               	clrf	28	;volatile
  7742     0DF2                     l2511:
  7743                           
  7744                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  7745     0DF2  3000               	movlw	0
  7746     0DF3  00F0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  7747     0DF4  3000               	movlw	0
  7748     0DF5  00F1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  7749     0DF6  318D  2508  318D   	fcall	_EUSART_SetFramingErrorHandler
  7750     0DF9                     l2513:
  7751                           
  7752                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  7753     0DF9  3000               	movlw	0
  7754     0DFA  00F0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  7755     0DFB  3000               	movlw	0
  7756     0DFC  00F1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  7757     0DFD  318D  250E  318D   	fcall	_EUSART_SetOverrunErrorHandler
  7758     0E00                     l2515:
  7759                           
  7760                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  7761     0E00  3000               	movlw	0
  7762     0E01  00F0               	movwf	EUSART_SetErrorHandler@interruptHandler
  7763     0E02  3000               	movlw	0
  7764     0E03  00F1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  7765     0E04  318D  2502  318D   	fcall	_EUSART_SetErrorHandler
  7766     0E07                     l2517:
  7767                           
  7768                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  7769     0E07  0020               	movlb	0	; select bank0
  7770     0E08  01E2               	clrf	_eusartRxLastError	;volatile
  7771     0E09                     l93:
  7772     0E09  0008               	return
  7773     0E0A                     __end_of_EUSART_Initialize:
  7774                           
  7775                           	psect	text32
  7776     0D0E                     __ptext32:	
  7777 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  7778 ;; Defined at:
  7779 ;;		line 161 in file "mcc_generated_files/eusart.c"
  7780 ;; Parameters:    Size  Location     Type
  7781 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  7782 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  7783 ;; Auto vars:     Size  Location     Type
  7784 ;;		None
  7785 ;; Return value:  Size  Location     Type
  7786 ;;                  1    wreg      void 
  7787 ;; Registers used:
  7788 ;;		wreg
  7789 ;; Tracked objects:
  7790 ;;		On entry : 0/0
  7791 ;;		On exit  : 0/0
  7792 ;;		Unchanged: 0/0
  7793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7794 ;;      Params:         2       0       0       0       0       0
  7795 ;;      Locals:         0       0       0       0       0       0
  7796 ;;      Temps:          0       0       0       0       0       0
  7797 ;;      Totals:         2       0       0       0       0       0
  7798 ;;Total ram usage:        2 bytes
  7799 ;; Hardware stack levels used: 1
  7800 ;; This function calls:
  7801 ;;		Nothing
  7802 ;; This function is called by:
  7803 ;;		_EUSART_Initialize
  7804 ;; This function uses a non-reentrant model
  7805 ;;
  7806                           
  7807     0D0E                     _EUSART_SetOverrunErrorHandler:	
  7808                           ;psect for function _EUSART_SetOverrunErrorHandler
  7809                           
  7810     0D0E                     l2493:	
  7811                           ;incstack = 0
  7812                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  7813                           
  7814                           
  7815                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  7816     0D0E  0871               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  7817     0D0F  0021               	movlb	1	; select bank1
  7818     0D10  00EB               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  7819     0D11  0870               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  7820     0D12  00EA               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  7821     0D13                     l135:
  7822     0D13  0008               	return
  7823     0D14                     __end_of_EUSART_SetOverrunErrorHandler:
  7824                           
  7825                           	psect	text33
  7826     0D08                     __ptext33:	
  7827 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  7828 ;; Defined at:
  7829 ;;		line 157 in file "mcc_generated_files/eusart.c"
  7830 ;; Parameters:    Size  Location     Type
  7831 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  7832 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  7833 ;; Auto vars:     Size  Location     Type
  7834 ;;		None
  7835 ;; Return value:  Size  Location     Type
  7836 ;;                  1    wreg      void 
  7837 ;; Registers used:
  7838 ;;		wreg
  7839 ;; Tracked objects:
  7840 ;;		On entry : 0/0
  7841 ;;		On exit  : 0/0
  7842 ;;		Unchanged: 0/0
  7843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7844 ;;      Params:         2       0       0       0       0       0
  7845 ;;      Locals:         0       0       0       0       0       0
  7846 ;;      Temps:          0       0       0       0       0       0
  7847 ;;      Totals:         2       0       0       0       0       0
  7848 ;;Total ram usage:        2 bytes
  7849 ;; Hardware stack levels used: 1
  7850 ;; This function calls:
  7851 ;;		Nothing
  7852 ;; This function is called by:
  7853 ;;		_EUSART_Initialize
  7854 ;; This function uses a non-reentrant model
  7855 ;;
  7856                           
  7857     0D08                     _EUSART_SetFramingErrorHandler:	
  7858                           ;psect for function _EUSART_SetFramingErrorHandler
  7859                           
  7860     0D08                     l2491:	
  7861                           ;incstack = 0
  7862                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  7863                           
  7864                           
  7865                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  7866     0D08  0871               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  7867     0D09  0021               	movlb	1	; select bank1
  7868     0D0A  00ED               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
  7869     0D0B  0870               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  7870     0D0C  00EC               	movwf	_EUSART_FramingErrorHandler^(0+128)
  7871     0D0D                     l132:
  7872     0D0D  0008               	return
  7873     0D0E                     __end_of_EUSART_SetFramingErrorHandler:
  7874                           
  7875                           	psect	text34
  7876     0D02                     __ptext34:	
  7877 ;; *************** function _EUSART_SetErrorHandler *****************
  7878 ;; Defined at:
  7879 ;;		line 165 in file "mcc_generated_files/eusart.c"
  7880 ;; Parameters:    Size  Location     Type
  7881 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  7882 ;;		 -> EUSART_DefaultErrorHandler(1), 
  7883 ;; Auto vars:     Size  Location     Type
  7884 ;;		None
  7885 ;; Return value:  Size  Location     Type
  7886 ;;                  1    wreg      void 
  7887 ;; Registers used:
  7888 ;;		wreg
  7889 ;; Tracked objects:
  7890 ;;		On entry : 0/0
  7891 ;;		On exit  : 0/0
  7892 ;;		Unchanged: 0/0
  7893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7894 ;;      Params:         2       0       0       0       0       0
  7895 ;;      Locals:         0       0       0       0       0       0
  7896 ;;      Temps:          0       0       0       0       0       0
  7897 ;;      Totals:         2       0       0       0       0       0
  7898 ;;Total ram usage:        2 bytes
  7899 ;; Hardware stack levels used: 1
  7900 ;; This function calls:
  7901 ;;		Nothing
  7902 ;; This function is called by:
  7903 ;;		_EUSART_Initialize
  7904 ;; This function uses a non-reentrant model
  7905 ;;
  7906                           
  7907     0D02                     _EUSART_SetErrorHandler:	
  7908                           ;psect for function _EUSART_SetErrorHandler
  7909                           
  7910     0D02                     l2495:	
  7911                           ;incstack = 0
  7912                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  7913                           
  7914                           
  7915                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  7916     0D02  0871               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  7917     0D03  0021               	movlb	1	; select bank1
  7918     0D04  00E9               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
  7919     0D05  0870               	movf	EUSART_SetErrorHandler@interruptHandler,w
  7920     0D06  00E8               	movwf	_EUSART_ErrorHandler^(0+128)
  7921     0D07                     l138:
  7922     0D07  0008               	return
  7923     0D08                     __end_of_EUSART_SetErrorHandler:
  7924     007E                     btemp	set	126	;btemp
  7925     007E                     wtemp0	set	126
  7926                           
  7927                           	psect	idloc
  7928                           
  7929                           ;Config register IDLOC0 @ 0x8000
  7930                           ;	unspecified, using default values
  7931     8000                     	org	32768
  7932     8000  3FFF               	dw	16383
  7933                           
  7934                           ;Config register IDLOC1 @ 0x8001
  7935                           ;	unspecified, using default values
  7936     8001                     	org	32769
  7937     8001  3FFF               	dw	16383
  7938                           
  7939                           ;Config register IDLOC2 @ 0x8002
  7940                           ;	unspecified, using default values
  7941     8002                     	org	32770
  7942     8002  3FFF               	dw	16383
  7943                           
  7944                           ;Config register IDLOC3 @ 0x8003
  7945                           ;	unspecified, using default values
  7946     8003                     	org	32771
  7947     8003  3FFF               	dw	16383
  7948                           
  7949                           	psect	config
  7950                           
  7951                           ;Config register CONFIG1 @ 0x8007
  7952                           ;	Oscillator Selection
  7953                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  7954                           ;	Watchdog Timer Enable
  7955                           ;	WDTE = OFF, WDT disabled
  7956                           ;	Power-up Timer Enable
  7957                           ;	PWRTE = OFF, PWRT disabled
  7958                           ;	MCLR Pin Function Select
  7959                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  7960                           ;	Flash Program Memory Code Protection
  7961                           ;	CP = OFF, Program memory code protection is disabled
  7962                           ;	Data Memory Code Protection
  7963                           ;	CPD = OFF, Data memory code protection is disabled
  7964                           ;	Brown-out Reset Enable
  7965                           ;	BOREN = ON, Brown-out Reset enabled
  7966                           ;	Clock Out Enable
  7967                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  7968                           ;	Internal/External Switchover
  7969                           ;	IESO = ON, Internal/External Switchover mode is enabled
  7970                           ;	Fail-Safe Clock Monitor Enable
  7971                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  7972     8007                     	org	32775
  7973     8007  3FE4               	dw	16356
  7974                           
  7975                           ;Config register CONFIG2 @ 0x8008
  7976                           ;	Flash Memory Self-Write Protection
  7977                           ;	WRT = OFF, Write protection off
  7978                           ;	PLL Enable
  7979                           ;	PLLEN = OFF, 4x PLL disabled
  7980                           ;	Stack Overflow/Underflow Reset Enable
  7981                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  7982                           ;	Brown-out Reset Voltage Selection
  7983                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  7984                           ;	Low-Voltage Programming Enable
  7985                           ;	LVP = ON, Low-voltage programming enabled
  7986     8008                     	org	32776
  7987     8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    36
    Data        8
    BSS         246
    Persistent  38
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     41      79
    BANK1            80      0      78
    BANK2            80      0      80
    BANK3            80      0      64
    BANK4            48      0       0

Pointer List with Targets:

    snake_getSurroundings@surroundings	PTR char  size(1) Largest target is 8
		 -> Y0(BANK0[8]), 

    sp__ai_getInputField	PTR char  size(1) Largest target is 8
		 -> Y0(BANK0[8]), 

    sp__snake_getField	PTR unsigned char  size(1) Largest target is 16
		 -> field(BANK1[16]), 

    main@field	PTR unsigned char  size(1) Largest target is 16
		 -> field(BANK1[16]), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    _main->_ledSet
    _snake_move->_rand
    _snake_initiate->_rand
    _snake_getSurroundings->___awdiv
    _sendMatrix->_txMAX7219
    _ledSet->___awdiv
    _initMAX7219->_txMAX7219
    _txMAX7219->_SPI1_WriteByte
    _ai_run->___wmul
    _ai_propagate->___wmul
    ___wmul->___awdiv
    ___awdiv->_de_sigmoid
    ___awdiv->_sigmoid
    _ai_initiate->_rand
    _rand->___lmul
    ___awmod->_rand
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _main in BANK0

    _main->_ai_propagate
    _snake_move->_snake_initiate
    _snake_initiate->_rand
    _ai_run->___wmul
    _ai_propagate->___wmul
    _ai_initiate->___awmod
    ___awmod->_rand

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0   31317
                                             29 BANK0     12    12      0
                  _SYSTEM_Initialize
                            ___awdiv
                   _ai_getInputField
                        _ai_initiate
                       _ai_propagate
                             _ai_run
                 _deactivateElevator
                        _initMAX7219
                           _ledClear
                             _ledSet
                         _sendMatrix
                     _snake_getField
              _snake_getFoodPosition
              _snake_getSurroundings
                     _snake_initiate
                         _snake_move
 ---------------------------------------------------------------------------------
 (1) _snake_move                                           5     5      0    4311
                                              6 BANK0      5     5      0
                            ___awdiv
                               _rand
                     _snake_initiate
 ---------------------------------------------------------------------------------
 (2) _snake_initiate                                       2     2      0     410
                                              4 BANK0      2     2      0
                               _rand
                              _srand
 ---------------------------------------------------------------------------------
 (3) _srand                                                2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _snake_getSurroundings                               10    10      0    4194
                                             11 COMMON     2     2      0
                                              0 BANK0      8     8      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) _snake_getFoodPosition                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _snake_getField                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sendMatrix                                           5     5      0     935
                                              3 COMMON     5     5      0
                          _txMAX7219
 ---------------------------------------------------------------------------------
 (1) _ledSet                                               4     3      1    1488
                                             11 COMMON     3     2      1
                                              0 BANK0      1     1      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _ledClear                                             4     3      1    1336
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _initMAX7219                                          2     2      0     750
                                              3 COMMON     2     2      0
                          _txMAX7219
 ---------------------------------------------------------------------------------
 (2) _txMAX7219                                            2     1      1     750
                                              1 COMMON     2     1      1
                     _SPI1_WriteByte
 ---------------------------------------------------------------------------------
 (3) _SPI1_WriteByte                                       1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _deactivateElevator                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ai_run                                              11    11      0    5524
                                              4 BANK0     11    11      0
                            ___awdiv
                             ___wmul
                            _sigmoid
 ---------------------------------------------------------------------------------
 (2) _sigmoid                                              2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ai_propagate                                        27    27      0    6424
                                              4 BANK0     25    25      0
                       _EUSART_Write
                            ___awdiv
                             ___wmul
                         _de_sigmoid
 ---------------------------------------------------------------------------------
 (2) _de_sigmoid                                           2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1156
                                             11 COMMON     2     2      0
                                              0 BANK0      4     0      4
                            ___awdiv (ARG)
                         _de_sigmoid (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    3492
                                              2 COMMON     9     5      4
                         _de_sigmoid (ARG)
                            _sigmoid (ARG)
 ---------------------------------------------------------------------------------
 (2) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ai_initiate                                          7     7      0    1464
                                             11 BANK0      7     7      0
                            ___awmod
                               _rand
 ---------------------------------------------------------------------------------
 (3) _rand                                                 6     4      2     244
                                             12 COMMON     2     0      2
                                              0 BANK0      4     4      0
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     244
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     904
                                              4 BANK0      7     3      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (1) _ai_getInputField                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI1_Initialize
     _WDT_Initialize
   ___awdiv
     _de_sigmoid (ARG)
     _sigmoid (ARG)
   _ai_getInputField
   _ai_initiate
     ___awmod
       _rand (ARG)
         ___lmul
     _rand
   _ai_propagate
     _EUSART_Write
     ___awdiv
     ___wmul
       ___awdiv (ARG)
       _de_sigmoid (ARG)
     _de_sigmoid
   _ai_run
     ___awdiv
     ___wmul
     _sigmoid
   _deactivateElevator
   _initMAX7219
     _txMAX7219
       _SPI1_WriteByte
   _ledClear
   _ledSet
     ___awdiv (ARG)
   _sendMatrix
     _txMAX7219
   _snake_getField
   _snake_getFoodPosition
   _snake_getSurroundings
     ___awdiv
   _snake_initiate
     _rand
     _srand
   _snake_move
     ___awdiv
     _rand
     _snake_initiate

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0     13B       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     29      4F       6       98.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      4E       8       97.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      50      10      100.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      40      12       80.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0     13B      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Oct 09 12:20:26 2022

                           SPI1_WriteByte@byte 0070                           __end_of_ai_propagate 07D1  
                                           _B1 00CC                                             _B2 00C8  
                                           l93 0E09                                             _W1 0120  
                                           _W2 0160                                             _Y0 0063  
                                           _Y1 0059                                             _Y2 0055  
                                           _Z1 0051                                             _Z2 004D  
                                 ___awdiv@sign 0078                            ___wmul@multiplicand 0022  
                                          l120 0D38                                            l132 0D0D  
                                          l117 0D30                                            l135 0D13  
                                          l224 0D01                                            l400 0F0D  
                                          l138 0D07                                            l251 0D26  
                                          l163 0DC7                                            l403 0DAF  
                                          l333 0D5B                                            l254 0CFC  
                                          l406 0D9D                                            l423 0E37  
                                          l503 013D                                            l248 0D6B  
                                          l512 0CF8                                            l187 0D4E  
                                          l452 0E67                                            l606 0FFF  
                                          l630 07D0                                            l391 000B  
                                          l480 020F                                            l609 0CF3  
                                          l393 0010                                            l626 034D  
                                          l394 0015                                            l483 0CF5  
                                          l396 001A                                            l397 001D  
                                          l831 0E9A                                            l664 0D8B  
                                          l817 0DD3                                            l819 0DE7  
                                          l667 0D7B                                            l970 007C  
                                          l983 0F61                 ?_EUSART_SetFramingErrorHandler 0070  
                                 ___awmod@sign 002A                                            wreg 0009  
                                 ?_initMAX7219 0070                                           l3001 01C9  
                                         l3011 01DE                                           l3003 01CE  
                                         l3101 05AD                                           l3021 01F3  
                                         l3013 01E4                                           l3005 01D2  
                                         l3111 05EB                                           l3031 020D  
                                         l3015 01E6                                           l3023 01FC  
                                         l3007 01DB                                           l1281 0ECF  
                                         l3201 07C6                                           l3121 0687  
                                         l3113 060B                                           l3017 01E8  
                                         l3025 0202                                           l3203 07CA  
                                         l3123 068B                                           l3107 05AE  
                                         l3043 0547                                           l3027 0208  
                                         l3019 01EC                                           l2501 0E9B  
                                         l3141 06F0                                           l3125 0691  
                                         l3109 05DA                                           l3061 0563  
                                         l3045 054C                                           l3029 020A  
                                         l3301 0464                                           l3221 0354  
                                         l1278 0D42                                           l2511 0DF2  
                                         l2503 0EBC                                           l3151 073A  
                                         l3135 069C                                           l3127 0695  
                                         l3119 060D                                           l3071 056F  
                                         l3055 0553                                           l3063 0569  
                                         l3047 054D                                           l3039 0541  
                                         l3311 0487                                           l3303 046B  
                                         l3223 0357                                           l2513 0DF9  
                                         l2521 0D35                                           l2601 001E  
                                         l3153 0740                                           l3137 06C8  
                                         l3129 069B                                           l3073 0573  
                                         l3057 0559                                           l3049 0552  
                                         l3321 04AA                                           l3313 048E  
                                         l3305 0472                                           l3241 0364  
                                         l3225 035A                                           l3217 034E  
                                         l2515 0E00                                           l2507 0DE8  
                                         l2531 0DBB                                           l2523 0DB0  
                                         l2611 002E                                           l2603 001F  
                                         l3171 0756                                           l3163 074B  
                                         l3155 0744                                           l3147 06F2  
                                         l3139 06D9                                           l3083 0580  
                                         l3075 0579                                           l3059 055D  
                                         l3331 04CD                                           l3323 04B0  
                                         l3315 0494                                           l3307 0478  
                                         l3251 0391                                           l3243 0379  
                                         l3235 0363                                           l3227 035D  
                                         l3219 0351                                           l2517 0E07  
                                         l2509 0DF1                                           l2533 0DC0  
                                         l2525 0DB3                                           l2541 0D4A  
                                         l2701 0F7B                                           l2621 0042  
                                         l2613 0033                                           l2605 0023  
                                         l3181 078C                                           l3173 0778  
                                         l3165 0755                                           l3157 074A  
                                         l3149 0735                                           l3085 0593  
                                         l3069 056A                                           l3077 057F  
                                         l3333 04D4                                           l3341 04E8  
                                         l3325 04B8                                           l3317 049C  
                                         l3309 0480                                           l3261 03B9  
                                         l3253 0395                                           l3245 0380  
                                         l3229 0362                                           l2535 0DC2  
                                         l2527 0DB6                                           l2543 0D4C  
                                         l2551 0CF9                                           l2711 0FB1  
                                         l2703 0F9D                                           l2519 0D30  
                                         l2631 0062                                           l2623 0047  
                                         l2615 0037                                           l2607 0028  
                                         l3191 0798                                           l3175 077C  
                                         l3095 059E                                           l3087 0597  
                                         l3431 01BB                                           l3351 051B  
                                         l3335 04DB                                           l3343 04FF  
                                         l3327 04BF                                           l3319 04A3  
                                         l3271 03DB                                           l3263 03C6  
                                         l3255 039B                                           l3247 0386  
                                         l2545 0D20                                           l2537 0DC5  
                                         l2529 0DB8                                           l2481 0E74  
                                         l2705 0FA1                                           l2641 0078  
                                         l2633 0063                                           l2625 004B  
                                         l2617 0039                                           l2609 002A  
                                         l3177 0782                                           l3097 05A3  
                                         l3089 059D                                           l2801 008B  
                                         l2561 0E3F                                           l2553 0E38  
                                         l3353 0521                                           l3345 050A  
                                         l3337 04E1                                           l3329 04C6  
                                         l3265 03CC                                           l3257 03A0  
                                         l3249 038B                                           l2491 0D08  
                                         l2547 0D23                                           l2539 0D43  
                                         l2651 0F19                                           l2483 0E7C  
                                         l2731 0FF5                                           l2707 0FA7  
                                         l2635 0068                                           l2627 004F  
                                         l2619 003F                                           l3195 079F  
                                         l3187 078D                                           l3179 0786  
                                         l3099 05A7                                           l2811 00BE  
                                         l2803 0091                                           l2571 0E61  
                                         l2563 0E43                                           l3355 0526  
                                         l3347 0510                                           l3291 0405  
                                         l3283 03DE                                           l3267 03D1  
                                         l3259 03B6                                           l2493 0D0E  
                                         l2549 0D24                                           l2661 0F2D  
                                         l2653 0F1B                                           l2645 0F0E  
                                         l2485 0E83                                           l2477 0E68  
                                         l2733 0FF9                                           l2725 0FC9  
                                         l2717 0FB2                                           l2709 0FAB  
                                         l2629 005E                                           l2637 006E  
                                         l3197 07C1                                           l3189 0797  
                                         l2901 02AC                                           l2573 0005  
                                         l2741 0F02                                           l2821 00DB  
                                         l2813 00C4                                           l2805 0094  
                                         l2565 0E49                                           l3349 0516  
                                         l3429 04F1                                           l3293 040B  
                                         l3285 03F3                                           l3277 03DD  
                                         l3269 03D7                                           l2495 0D02  
                                         l2671 0F48                                           l2663 0F32  
                                         l2655 0F1F                                           l2647 0F10  
                                         l2487 0E92                                           l2479 0E70  
                                         l2727 0FEB                                           l2719 0FC8  
                                         l2639 0073                                           l2591 0DCF  
                                         l2583 0D6D                                           l2575 0007  
                                         l2743 0F07                                           l2735 0ED0  
                                         l2751 0D8D                                           l2831 00E8  
                                         l2823 00E1                                           l2815 00CA  
                                         l2807 00A5                                           l2567 0E5D  
                                         l2559 0E3A                                           l3295 040F  
                                         l3287 03FA                                           l2673 0F4D  
                                         l2665 0F36                                           l2657 0F24  
                                         l2649 0F14                                           l2729 0FEF  
                                         l2593 0DD8                                           l2921 02F2  
                                         l2497 0CFE                                           l2577 0011  
                                         l2737 0ED6                                           l2745 0CF4  
                                         l2753 0CF6                                           l2841 0111  
                                         l2833 00F9                                           l2825 00E7  
                                         l2817 00CF                                           l2809 00B9  
                                         l2569 0E5F                                           l3297 0415  
                                         l3289 0400                                           l2683 0D5C  
                                         l2667 0F3A                                           l2659 0F2A  
                                         l2675 0F53                                           l2595 0DDD  
                                         l2587 0DC8                                           l2579 0D7D  
                                         l2931 0325                                           l2923 02FA  
                                         l2915 02B8                                           l2907 02AD  
                                         l2739 0EF7                                           l2763 0E0B  
                                         l2851 0131                                           l2843 0118  
                                         l2835 0101                                           l2819 00D4  
                                         l2499 0D39                                           l3299 045C  
                                         l2677 0F58                                           l2669 0F44  
                                         l2693 0F64                                           l2597 0DE3  
                                         l2589 0DCA                                           l2941 032E  
                                         l2933 032B                                           l2925 02FE  
                                         l2917 02C1                                           l2909 02B7  
                                         l2861 0212                                           l2685 0D4F  
                                         l2749 0DA0                                           l2781 0E26  
                                         l2773 0E13                                           l2765 0E11  
                                         l2757 0E0A                                           l2853 0137  
                                         l2845 011E                                           l2837 0105  
                                         l2679 0F5D                                           l2695 0F7A  
                                         l2687 0F62                                           l2943 0340  
                                         l2935 032C                                           l2927 0304  
                                         l2919 02E2                                           l2863 021D  
                                         l2855 0210                                           l2783 0E2D  
                                         l2775 0E15                                           l2767 0E12  
                                         l2847 0124                                           l2839 010B  
                                         l2791 007F                                           l2945 0342  
                                         l2929 0320                                           l2865 0223  
                                         l2785 0E31                                           l2777 0E1A  
                                         l2849 012A                                           l2961 0143  
                                         l2953 0140                                           l2787 0CF2  
                                         l2947 0346                                           l2891 027B  
                                         l2883 0239                                           l2875 022E  
                                         l2867 0227                                           l2779 0E20  
                                         l2971 015D                                           l2963 014C  
                                         l2955 0142                                           l2949 034C  
                                         l2893 027F                                           l2885 0242  
                                         l2877 0238                                           l2869 022D  
                                         l2797 0080                                           l2973 0162  
                                         l2965 0152                                           l2895 0285  
                                         l2887 0263                                           l2799 0087  
                                         l2991 0197                                           l2983 0179  
                                         l2975 0168                                           l2967 0156  
                                         l2897 02A1                                           l2889 0273  
                                         l2985 017E                                           l2977 016C  
                                         l2969 015C                                           l2899 02A6  
                                         l2995 01AD                                           l2979 016F  
                                         l2989 0193                                           l2999 01B3  
                __end_of_snake_getSurroundings 013E                                           u2000 014C  
                                         u2001 014B                                           u2010 015C  
                                         u2011 015B                                           u2100 0208  
                                         u2020 0168                                           u2101 0207  
                                         u2021 0167                                           u2110 0546  
                                         u2030 0178                                           u2111 0545  
                                         u2031 0177                                           u1400 0D35  
                                         u2200 0691                                           u2120 054C  
                                         u2040 0192                                           u1401 0D34  
                                         u2201 0690                                           u2121 054B  
                                         u2041 0191                                           u2210 069B  
                                         u2130 0552                                           u1410 0E49  
                                         u2050 01AC                                           u2211 069A  
                                         u2131 0551                                           u1411 0E48  
                                         u2051 01AB                                           u1500 0023  
                                         u2140 0563                                           u1420 0010  
                                         u2060 01CE                                           u1501 0022  
                                         u2141 0562                                           u1421 000F  
                                         u2061 01CD                                           _LATA 010C  
                                         u1350 0E74                                           u1510 002E  
                                         u2230 0740                                           u2150 0579  
                                         u1430 001A                                           u2070 01DB  
                                         _LATB 010D                                           u1351 0E73  
                                         u1511 002D                                           u2231 073F  
                                         u2151 0578                                           u1431 0019  
                                         u2071 01DA                                           u1600 0F14  
                                         u1520 003F                                           u2320 07D0  
                                         u2240 074A                                           u2160 059D  
                                         u2080 01E4                                           u2400 03F3  
                                         u1601 0F13                                           u1521 003E  
                                         u2321 07CF                                           u2305 07A2  
                                         u2241 0749                                           u2225 071B  
                                         u2161 059C                                           u2081 01E3  
                                         u2401 03F2                                           u1610 0F1F  
                                         u2170 05AD                                           u2090 01FC  
                                         u2410 040B                                           u1611 0F1E  
                                         u2315 07B2                                           u2171 05AC  
                                         u2091 01FB                                           u2411 040A  
                                         u1620 0F2A                                           u1380 0E92  
                                         u1700 0FA7                                           u1540 004F  
                                         u1460 0DCF                                           u2500 04C6  
                                         u2420 0415                                           u1621 0F29  
                                         u1381 0E91                                           u1365 0E7D  
                                         u1701 0FA6                                           u1541 004E  
                                         u1461 0DCE                                           u1445 0D80  
                                         u2501 04C5                                           u2421 0414  
                                         u1390 0EC9                                           u1710 0FB1  
                                         u2270 0782                                           u2510 0510  
                                         u2430 0464                                           u1375 0E84  
                                         u1711 0FB0                                           u1535 0043  
                                         u1455 0D70                                           u2271 0781  
                                         u2255 0759                                           u2511 050F  
                                         u2431 0463                                           u1640 0F3A  
                                         u1560 005E                                           u2280 078C  
                                         u1800 00BE                                           u2520 051B  
                                         u2440 0472                                           u2360 0379  
                                         u1641 0F39                                           u1561 005D  
                                         u2281 078B                                           u2265 0769  
                                         u2185 0636                                           u1801 00BD  
                                         u2521 051A                                           u2441 0471  
                                         u2361 0378                                           u1650 0F44  
                                         u1730 0FF5                                           u1490 0DE3  
                                         u2290 079E                                           u1810 00CA  
                                         u2450 0480                                           u2370 0391  
                                         u1651 0F43                                           u1635 0F2E  
                                         u1395 0EC5                                           u1731 0FF4  
                                         u1555 0050                                           u1491 0DE2  
                                         u1475 0DD4                                           u2291 079D  
                                         u2195 0661                                           u1811 00C9  
                                         u2451 047F                                           u2371 0390  
                                         u2355 0367                                           u1740 0FFF  
                                         u1580 006E                                           u1900 021D  
                                         u1820 00D4                                           u2460 048E  
                                         u2380 039B                                           u1741 0FFE  
                                         u1725 0FCC                                           u1581 006D  
                                         u1565 005A                                           u1485 0DD9  
                                         u1901 021C                                           u1821 00D3  
                                         u2461 048D                                           u2381 039A  
                                         u1670 0F53                                           u1590 0073  
                                         u1910 022D                                           u1830 00E1  
                                         u2470 049C                                           u1671 0F52  
                                         u1655 0F40                                           u1591 0072  
                                         u1575 0064                                           u1911 022C  
                                         u1831 00E0                                           u2471 049B  
                                         u1680 0F58                                           u1840 00F9  
                                         u2480 04AA                                           u1681 0F57  
                                         u1665 0F49                                           u1841 00F8  
                                         u2481 04A9                                           u1930 0285  
                                         u1754 0DA5                                           u1770 0E26  
                                         u1850 010B                                           u2490 04B8  
                                         u1931 0284                                           u1755 0DA4  
                                         u1771 0E25                                           u1851 010A  
                                         u2491 04B7                                           u2395 03E1  
                                         u1940 02AC                                           u1764 0D92  
                                         u1780 0E37                                           u1860 0111  
                                         u1941 02AB                                           u1925 0245  
                                         u1765 0D91                                           u1781 0E36  
                                         u1861 0110                                           u2557 03BF  
                                         u1870 011E                                           u1790 0091  
                                         u1695 0F7E                                           u2567 0EFC  
                                         u1871 011D                                           u1791 0090  
                                         u1960 0304                                           u1880 012A  
                                         u1961 0303                                           u1881 0129  
                                         u1970 032B                                           u1890 0137  
                                         u1971 032A                                           u1955 02C4  
                                         u1891 0136                                           u1980 0340  
                                         u1981 033F                                           u1990 034C  
                                         u1991 034B                                           _WPUA 020C  
                                         _WPUB 020D                                           _main 034E  
                                         _rand 0E9B                                           _seed 006B  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         btemp 007E                                           start 0002  
                   __end_of_deactivateElevator 0D5C                        ??_snake_getFoodPosition 0070  
                                ?_EUSART_Write 0070                  __end_of_OSCILLATOR_Initialize 0D27  
                                        ?_main 0070                                          ?_rand 007C  
                              __end_of___awdiv 007D                                __end_of___awmod 0F62  
                              ___awdiv@divisor 0072                                ___awdiv@counter 0077  
                                        _RCREG 0199                                          _RCSTA 019D  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TXREG 019A                                          _TXSTA 019E  
                          ___lmul@multiplicand 0074                                          _field 00D0  
                               _WDT_Initialize 0CF9                                          _srand 0D39  
                                        main@i 0045                                          main@j 0046  
                              __end_of_sigmoid 0D8C                                          status 0003  
                                        wtemp0 007E                                __initialization 07D1  
                               _remainingMoves 005D                                   __end_of_main 053F  
                                 __end_of_rand 0ED0                                 ??_EUSART_Write 0070  
                                       ??_main 003D                                         ??_rand 0020  
                       __end_of_WDT_Initialize 0CFD              _EUSART_DefaultFramingErrorHandler 0000  
                   _EUSART_OverrunErrorHandler 00EA                                         _EEADRH 0192  
                                       _EEADRL 0191                                         _EEDATH 0194  
                                       _EEDATL 0193                                         _EECON2 0196  
                             ___awdiv@dividend 0074                                         ?_srand 0070  
                                       _DC_DB1 00A8                                         _DC_DB2 00B4  
                                       _ANSELA 018C                                         _ANSELB 018D  
                                       _DC_DW1 01A0                                         _DC_DW2 0140  
                                       _DC_DY1 00B0                                         _DC_DY2 00C4  
                                       _DC_DZ1 00AC                                         _DC_DZ2 0049  
                                       _BORCON 0116                              ?_ai_getInputField 0070  
                                main@incentive 0044                                         _OSCCON 0099  
                                       _SPBRGH 019C                                         _SPBRGL 019B  
                                       _WDTCON 0097                             ??_ai_getInputField 0070  
                             __end_of_ledClear 0D9E              snake_getSurroundings@surroundings 0027  
                                       ___lmul 0E68                                         ___wmul 0DC8  
                                    ??___awdiv 0076                                         _ai_run 0210  
                                    ??___awmod 0028                                         _choice 0060  
                                       _ledSet 0D9E                               _de_sigmoidValues 0800  
                                       _matrix 00A0                               ___awdiv@quotient 0079  
                              ___awmod@divisor 0024                                ___awmod@counter 0029  
                              ?_WDT_Initialize 0070                                      ??_sigmoid 0070  
                                       srand@s 0070                                  ai_propagate@S 002A  
                                ai_propagate@i 002F                                  ai_propagate@j 0037  
                                 _ai_propagate 053F                              _SYSTEM_Initialize 0D5C  
                      __end_of__initialization 07FD                             ?_SYSTEM_Initialize 0070  
                               __pcstackCOMMON 0070                                   __pidataBANK1 0D27  
                          ??_SYSTEM_Initialize 0072                              ??_SPI1_Initialize 0070  
                                __end_of_srand 0D43                             _spi1_configuration 0820  
                               _OPTION_REGbits 0095                          __end_of_sigmoidValues 0820  
              ??_EUSART_SetOverrunErrorHandler 0072                                snake_initiate@i 0025  
                    __end_of_SYSTEM_Initialize 0D6C                            snake_move@direction 0028  
                                      ??_srand 0072                                   _headPosition 005F  
                                   __pbssBANK0 0049                                     __pbssBANK1 00A0  
                                   __pbssBANK2 0120                                     __pbssBANK3 01A0  
                        ai_propagate@incentive 002E                           __end_of_EUSART_Write 0D39  
                                   _de_sigmoid 0D6C                                 _SPI1_WriteByte 0CFD  
                          snake_move@incentive 0029                                     __pmaintext 034E  
                                      ?___lmul 0070                                        ?___wmul 0020  
                                      ?_ai_run 0070                                    sendMatrix@b 0074  
                                  sendMatrix@i 0077                                    sendMatrix@j 0076  
                                      ?_ledSet 007B                                        _BAUDCON 019F  
                               ___lmul@product 0078                                        _APFCON0 011D  
                                      _APFCON1 011E                  __end_of_snake_getFoodPosition 0CF9  
                                      _DZ1_DB1 00BC                                        _DZ2_DB2 00B8  
                                      _DZ1_DW1 01C0                                        _DZ2_DW2 0150  
                                      _DZ2_DY1 00C0                           main@foodPosition_672 0043  
                           _deactivateElevator 0D4F                                        _OSCTUNE 0098  
                                    ?_ledClear 0070                                        _SSP1ADD 0212  
                                      _SSP1BUF 0211                       ??_EUSART_SetErrorHandler 0072  
                          ?_deactivateElevator 0070                         __end_of_SPI1_WriteByte 0D02  
                        _snake_getSurroundings 007D                               main@foodPosition 0041  
                                ??_ai_initiate 002B                                        ___awdiv 001E  
                                      ___awmod 0F0E                           ??_deactivateElevator 0070  
                                      __ptext1 013E                                        __ptext2 0E38  
                                      __ptext3 0D39                                        __ptext4 007D  
                                      __ptext5 0CF6                                        __ptext6 0CF4  
                                      __ptext7 0E0A                                        __ptext8 0D9E  
                                      __ptext9 0D8C                              __end_of_txMAX7219 001E  
                                      ai_run@i 0027                                        ai_run@j 002D  
                                      ai_run@z 002B                          _OSCILLATOR_Initialize 0D20  
                                      _mapping 00E0                               ___awmod@dividend 0026  
                     ??_PIN_MANAGER_Initialize 0070                                        _sigmoid 0D7C  
                                   ??_ledClear 0071                                        ledSet@c 007B  
                                      ledSet@l 0020                                        clrloop0 0D15  
                         end_of_initialization 07FD                                     _sendMatrix 0E0A  
                     __end_of_de_sigmoidValues 0810                                    ?_de_sigmoid 0070  
        __end_of_EUSART_SetOverrunErrorHandler 0D14                  _EUSART_SetOverrunErrorHandler 0D0E  
                              ?_SPI1_WriteByte 0070                                        init_ram 0D1A  
                                      initloop 0D1B                                    snake_move@i 002A  
                            _EUSART_Initialize 0DE8                             ?_EUSART_Initialize 0070  
                                    _RCSTAbits 019D                                     _snake_move 013E  
                          ??_EUSART_Initialize 0072                            __end_of_ai_initiate 1000  
                             ??_WDT_Initialize 0070                                 txMAX7219@addr0 0072  
                                    _TRISAbits 008C                                      _TRISBbits 008D  
                       ?_snake_getSurroundings 0070                      __end_of_EUSART_Initialize 0E0A  
                                   main@choice 0042                                _SPI1_Initialize 0D43  
                                    _TXSTAbits 019E                                   _foodPosition 005E  
                               _snake_getField 0CF4                                   ai_initiate@i 002E  
                                 ai_initiate@j 0030                                 __end_of___lmul 0E9B  
                   _EUSART_DefaultErrorHandler 0000                                 __end_of___wmul 0DE8  
                               __end_of_ai_run 034E                                   _EUSART_Write 0D2F  
                               __end_of_ledSet 0DB0                         ?_OSCILLATOR_Initialize 0070  
                               _snake_initiate 0E38                            start_initialization 07D1  
                                ??_initMAX7219 0073                                    ?_sendMatrix 0070  
                       __end_of_snake_getField 0CF6                 ?_EUSART_SetOverrunErrorHandler 0070  
                                  _ai_initiate 0F62                     _EUSART_FramingErrorHandler 00EC  
                                     ??___lmul 0078                                    ?_snake_move 0070  
                                     ??___wmul 007B                         _EUSART_SetErrorHandler 0D02  
                                     ??_ai_run 0024                                       ??_ledSet 007C  
                                  __pdataBANK1 00E0                               ai_initiate@i_871 002F  
                             ai_initiate@j_870 0031                         __end_of_snake_initiate 0E68  
                                    ___latbits 0001                                  __pcstackBANK0 0020  
                      __end_of_SPI1_Initialize 0D4F                        snake_getSurroundings@cf 0022  
                      snake_getSurroundings@ch 0025                        snake_getSurroundings@lf 0021  
                      snake_getSurroundings@lh 0024                            __end_of_initMAX7219 0F0E  
                                    __pnvBANK1 00E8                                ?_snake_getField 0070  
                       _PIN_MANAGER_Initialize 0DB0                                       ?___awdiv 0072  
                                     ?___awmod 0024                               _ai_getInputField 0CF2  
                              ?_snake_initiate 0070                                   sendMatrix@nb 0075  
                        _snake_getFoodPosition 0CF6                                       ?_sigmoid 0070  
                             ??_SPI1_WriteByte 0070                                      _txMAX7219 0004  
                                 ??_de_sigmoid 0070                                 ___wmul@product 007B  
                                     _LATAbits 010C         EUSART_SetErrorHandler@interruptHandler 0070  
                                     _LATBbits 010D                                      clear_ram0 0D14  
                            _eusartRxLastError 0062                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 0072                                      ledClear@c 0070  
                                    ledClear@l 0073                              _ai_propagate$1578 0035  
                                    _snakeSize 0061                                       _SSP1CON1 0215  
                                     _SSP1CON2 0216              _EUSART_DefaultOverrunErrorHandler 0000  
                                     _SSP1STAT 0214                                  txMAX7219@dat0 0071  
                                    main@i_670 0047                              ___wmul@multiplier 0020  
                                    main@j_671 0048                             __end_of_de_sigmoid 0D7C  
                                    main@field 0040                                    _initMAX7219 0ED0  
                      ??_snake_getSurroundings 007B                                     ?_txMAX7219 0071  
                                _sigmoidValues 0810                               ?_SPI1_Initialize 0070  
                                ?_ai_propagate 0070                              ___lmul@multiplier 0070  
                                   _EECON1bits 0195                                    ai_run@i_880 002A  
                                  ai_run@i_877 0028                                    ai_run@i_879 0029  
                                  ai_run@j_878 002E                        ??_OSCILLATOR_Initialize 0070  
                          _EUSART_ErrorHandler 00E8                         ?_snake_getFoodPosition 0070  
                       snake_getSurroundings@i 0023                         snake_getSurroundings@p 0020  
                            ai_propagate@i_891 0038                              ai_propagate@i_893 0032  
                            ai_propagate@i_885 0030                              ai_propagate@i_895 0033  
                            ai_propagate@i_897 0034                              ai_propagate@j_892 003B  
                            ai_propagate@j_894 0039                              ai_propagate@j_887 0031  
                            ai_propagate@j_896 003A                              ai_propagate@j_889 003C  
                                  de_sigmoid@z 0071                                       _ledClear 0D8C  
                               ??_ai_propagate 0024                                       __ptext10 0ED0  
                                     __ptext11 0004                                       __ptext20 0D2F  
                                     __ptext12 0CFD                                       __ptext21 0F62  
                                     __ptext13 0D4F                                       __ptext30 0D20  
                                     __ptext22 0E9B                                       __ptext14 0210  
                                     __ptext31 0DE8                                       __ptext23 0E68  
                                     __ptext15 0D7C                                       __ptext32 0D0E  
                                     __ptext24 0F0E                                       __ptext16 053F  
                                     __ptext33 0D08                                       __ptext25 0CF2  
                                     __ptext17 0D6C                                       __ptext34 0D02  
                                     __ptext26 0D5C                                       __ptext18 0DC8  
                                     __ptext27 0CF9                                       __ptext19 001E  
                                     __ptext28 0D43                                       __ptext29 0DB0  
                                 _SSP1CON1bits 0215                                   ??_sendMatrix 0073  
                      ?_EUSART_SetErrorHandler 0070                                   ?_ai_initiate 0070  
EUSART_SetOverrunErrorHandler@interruptHandler 0070                                   ??_snake_move 0026  
        __end_of_EUSART_SetFramingErrorHandler 0D0E                  _EUSART_SetFramingErrorHandler 0D08  
                           __end_of_sendMatrix 0E38                                     _INTCONbits 000B  
                                  ??_txMAX7219 0072                       __end_of_ai_getInputField 0CF4  
                             ??_snake_getField 0070                             __end_of_snake_move 0210  
                      ?_PIN_MANAGER_Initialize 0070                 __end_of_EUSART_SetErrorHandler 0D08  
                                     sigmoid@z 0071                     snake_getSurroundings@i_804 0026  
                             ??_snake_initiate 0024  EUSART_SetFramingErrorHandler@interruptHandler 0070  
                                __pstringtext1 0800                                  __pstringtext2 0810  
                                __pstringtext3 0820                             EUSART_Write@txData 0070  
               __end_of_PIN_MANAGER_Initialize 0DC8                     __end_of_spi1_configuration 0824  
