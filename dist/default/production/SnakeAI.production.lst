

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Oct 07 01:08:33 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2
    58                           	psect	text40,local,class=CODE,merge=1,delta=2
    59                           	psect	text41,local,class=CODE,merge=1,delta=2
    60                           	psect	text42,local,class=CODE,merge=1,delta=2
    61                           	psect	text43,local,class=CODE,merge=1,delta=2
    62                           	psect	text44,local,class=CODE,merge=1,delta=2
    63                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    64                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    65                           	dabs	1,0x7E,2
    66     0000                     
    67                           ; Version 2.40
    68                           ; Generated 17/11/2021 GMT
    69                           ; 
    70                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    71                           ; All rights reserved.
    72                           ; 
    73                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    74                           ; 
    75                           ; Redistribution and use in source and binary forms, with or without modification, are
    76                           ; permitted provided that the following conditions are met:
    77                           ; 
    78                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    79                           ;        conditions and the following disclaimer.
    80                           ; 
    81                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    82                           ;        of conditions and the following disclaimer in the documentation and/or other
    83                           ;        materials provided with the distribution. Publication is not required when
    84                           ;        this file is used in an embedded application.
    85                           ; 
    86                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    87                           ;        software without specific prior written permission.
    88                           ; 
    89                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    90                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    91                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    92                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    93                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    94                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    95                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    96                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    97                           ; 
    98                           ; 
    99                           ; Code-generator required, PIC16F1827 Definitions
   100                           ; 
   101                           ; SFR Addresses
   102     0000                     	;# 
   103     0001                     	;# 
   104     0002                     	;# 
   105     0003                     	;# 
   106     0004                     	;# 
   107     0005                     	;# 
   108     0006                     	;# 
   109     0007                     	;# 
   110     0008                     	;# 
   111     0009                     	;# 
   112     000A                     	;# 
   113     000B                     	;# 
   114     000C                     	;# 
   115     000D                     	;# 
   116     0011                     	;# 
   117     0012                     	;# 
   118     0013                     	;# 
   119     0014                     	;# 
   120     0015                     	;# 
   121     0016                     	;# 
   122     0016                     	;# 
   123     0017                     	;# 
   124     0018                     	;# 
   125     0019                     	;# 
   126     001A                     	;# 
   127     001B                     	;# 
   128     001C                     	;# 
   129     001E                     	;# 
   130     001F                     	;# 
   131     008C                     	;# 
   132     008D                     	;# 
   133     0091                     	;# 
   134     0092                     	;# 
   135     0093                     	;# 
   136     0094                     	;# 
   137     0095                     	;# 
   138     0096                     	;# 
   139     0097                     	;# 
   140     0098                     	;# 
   141     0099                     	;# 
   142     009A                     	;# 
   143     009B                     	;# 
   144     009B                     	;# 
   145     009C                     	;# 
   146     009D                     	;# 
   147     009E                     	;# 
   148     010C                     	;# 
   149     010D                     	;# 
   150     0111                     	;# 
   151     0112                     	;# 
   152     0113                     	;# 
   153     0114                     	;# 
   154     0115                     	;# 
   155     0116                     	;# 
   156     0117                     	;# 
   157     0118                     	;# 
   158     0119                     	;# 
   159     011A                     	;# 
   160     011B                     	;# 
   161     011D                     	;# 
   162     011E                     	;# 
   163     018C                     	;# 
   164     018D                     	;# 
   165     0191                     	;# 
   166     0191                     	;# 
   167     0192                     	;# 
   168     0193                     	;# 
   169     0193                     	;# 
   170     0193                     	;# 
   171     0194                     	;# 
   172     0195                     	;# 
   173     0196                     	;# 
   174     0199                     	;# 
   175     019A                     	;# 
   176     019B                     	;# 
   177     019B                     	;# 
   178     019B                     	;# 
   179     019B                     	;# 
   180     019C                     	;# 
   181     019C                     	;# 
   182     019D                     	;# 
   183     019E                     	;# 
   184     019F                     	;# 
   185     020C                     	;# 
   186     020D                     	;# 
   187     0211                     	;# 
   188     0211                     	;# 
   189     0212                     	;# 
   190     0212                     	;# 
   191     0213                     	;# 
   192     0213                     	;# 
   193     0214                     	;# 
   194     0214                     	;# 
   195     0215                     	;# 
   196     0215                     	;# 
   197     0215                     	;# 
   198     0216                     	;# 
   199     0216                     	;# 
   200     0217                     	;# 
   201     0217                     	;# 
   202     0219                     	;# 
   203     021A                     	;# 
   204     021B                     	;# 
   205     021C                     	;# 
   206     021D                     	;# 
   207     021E                     	;# 
   208     021F                     	;# 
   209     0291                     	;# 
   210     0291                     	;# 
   211     0292                     	;# 
   212     0293                     	;# 
   213     0294                     	;# 
   214     0295                     	;# 
   215     0295                     	;# 
   216     0296                     	;# 
   217     0298                     	;# 
   218     0298                     	;# 
   219     0299                     	;# 
   220     029A                     	;# 
   221     029B                     	;# 
   222     029C                     	;# 
   223     029C                     	;# 
   224     029D                     	;# 
   225     029E                     	;# 
   226     029E                     	;# 
   227     0311                     	;# 
   228     0311                     	;# 
   229     0312                     	;# 
   230     0313                     	;# 
   231     0318                     	;# 
   232     0318                     	;# 
   233     0319                     	;# 
   234     031A                     	;# 
   235     0394                     	;# 
   236     0395                     	;# 
   237     0396                     	;# 
   238     039A                     	;# 
   239     039C                     	;# 
   240     039D                     	;# 
   241     039E                     	;# 
   242     039F                     	;# 
   243     0415                     	;# 
   244     0416                     	;# 
   245     0417                     	;# 
   246     041C                     	;# 
   247     041D                     	;# 
   248     041E                     	;# 
   249     0FE4                     	;# 
   250     0FE5                     	;# 
   251     0FE6                     	;# 
   252     0FE7                     	;# 
   253     0FE8                     	;# 
   254     0FE9                     	;# 
   255     0FEA                     	;# 
   256     0FEB                     	;# 
   257     0FED                     	;# 
   258     0FEE                     	;# 
   259     0FEF                     	;# 
   260     0000                     	;# 
   261     0001                     	;# 
   262     0002                     	;# 
   263     0003                     	;# 
   264     0004                     	;# 
   265     0005                     	;# 
   266     0006                     	;# 
   267     0007                     	;# 
   268     0008                     	;# 
   269     0009                     	;# 
   270     000A                     	;# 
   271     000B                     	;# 
   272     000C                     	;# 
   273     000D                     	;# 
   274     0011                     	;# 
   275     0012                     	;# 
   276     0013                     	;# 
   277     0014                     	;# 
   278     0015                     	;# 
   279     0016                     	;# 
   280     0016                     	;# 
   281     0017                     	;# 
   282     0018                     	;# 
   283     0019                     	;# 
   284     001A                     	;# 
   285     001B                     	;# 
   286     001C                     	;# 
   287     001E                     	;# 
   288     001F                     	;# 
   289     008C                     	;# 
   290     008D                     	;# 
   291     0091                     	;# 
   292     0092                     	;# 
   293     0093                     	;# 
   294     0094                     	;# 
   295     0095                     	;# 
   296     0096                     	;# 
   297     0097                     	;# 
   298     0098                     	;# 
   299     0099                     	;# 
   300     009A                     	;# 
   301     009B                     	;# 
   302     009B                     	;# 
   303     009C                     	;# 
   304     009D                     	;# 
   305     009E                     	;# 
   306     010C                     	;# 
   307     010D                     	;# 
   308     0111                     	;# 
   309     0112                     	;# 
   310     0113                     	;# 
   311     0114                     	;# 
   312     0115                     	;# 
   313     0116                     	;# 
   314     0117                     	;# 
   315     0118                     	;# 
   316     0119                     	;# 
   317     011A                     	;# 
   318     011B                     	;# 
   319     011D                     	;# 
   320     011E                     	;# 
   321     018C                     	;# 
   322     018D                     	;# 
   323     0191                     	;# 
   324     0191                     	;# 
   325     0192                     	;# 
   326     0193                     	;# 
   327     0193                     	;# 
   328     0193                     	;# 
   329     0194                     	;# 
   330     0195                     	;# 
   331     0196                     	;# 
   332     0199                     	;# 
   333     019A                     	;# 
   334     019B                     	;# 
   335     019B                     	;# 
   336     019B                     	;# 
   337     019B                     	;# 
   338     019C                     	;# 
   339     019C                     	;# 
   340     019D                     	;# 
   341     019E                     	;# 
   342     019F                     	;# 
   343     020C                     	;# 
   344     020D                     	;# 
   345     0211                     	;# 
   346     0211                     	;# 
   347     0212                     	;# 
   348     0212                     	;# 
   349     0213                     	;# 
   350     0213                     	;# 
   351     0214                     	;# 
   352     0214                     	;# 
   353     0215                     	;# 
   354     0215                     	;# 
   355     0215                     	;# 
   356     0216                     	;# 
   357     0216                     	;# 
   358     0217                     	;# 
   359     0217                     	;# 
   360     0219                     	;# 
   361     021A                     	;# 
   362     021B                     	;# 
   363     021C                     	;# 
   364     021D                     	;# 
   365     021E                     	;# 
   366     021F                     	;# 
   367     0291                     	;# 
   368     0291                     	;# 
   369     0292                     	;# 
   370     0293                     	;# 
   371     0294                     	;# 
   372     0295                     	;# 
   373     0295                     	;# 
   374     0296                     	;# 
   375     0298                     	;# 
   376     0298                     	;# 
   377     0299                     	;# 
   378     029A                     	;# 
   379     029B                     	;# 
   380     029C                     	;# 
   381     029C                     	;# 
   382     029D                     	;# 
   383     029E                     	;# 
   384     029E                     	;# 
   385     0311                     	;# 
   386     0311                     	;# 
   387     0312                     	;# 
   388     0313                     	;# 
   389     0318                     	;# 
   390     0318                     	;# 
   391     0319                     	;# 
   392     031A                     	;# 
   393     0394                     	;# 
   394     0395                     	;# 
   395     0396                     	;# 
   396     039A                     	;# 
   397     039C                     	;# 
   398     039D                     	;# 
   399     039E                     	;# 
   400     039F                     	;# 
   401     0415                     	;# 
   402     0416                     	;# 
   403     0417                     	;# 
   404     041C                     	;# 
   405     041D                     	;# 
   406     041E                     	;# 
   407     0FE4                     	;# 
   408     0FE5                     	;# 
   409     0FE6                     	;# 
   410     0FE7                     	;# 
   411     0FE8                     	;# 
   412     0FE9                     	;# 
   413     0FEA                     	;# 
   414     0FEB                     	;# 
   415     0FED                     	;# 
   416     0FEE                     	;# 
   417     0FEF                     	;# 
   418     0000                     	;# 
   419     0001                     	;# 
   420     0002                     	;# 
   421     0003                     	;# 
   422     0004                     	;# 
   423     0005                     	;# 
   424     0006                     	;# 
   425     0007                     	;# 
   426     0008                     	;# 
   427     0009                     	;# 
   428     000A                     	;# 
   429     000B                     	;# 
   430     000C                     	;# 
   431     000D                     	;# 
   432     0011                     	;# 
   433     0012                     	;# 
   434     0013                     	;# 
   435     0014                     	;# 
   436     0015                     	;# 
   437     0016                     	;# 
   438     0016                     	;# 
   439     0017                     	;# 
   440     0018                     	;# 
   441     0019                     	;# 
   442     001A                     	;# 
   443     001B                     	;# 
   444     001C                     	;# 
   445     001E                     	;# 
   446     001F                     	;# 
   447     008C                     	;# 
   448     008D                     	;# 
   449     0091                     	;# 
   450     0092                     	;# 
   451     0093                     	;# 
   452     0094                     	;# 
   453     0095                     	;# 
   454     0096                     	;# 
   455     0097                     	;# 
   456     0098                     	;# 
   457     0099                     	;# 
   458     009A                     	;# 
   459     009B                     	;# 
   460     009B                     	;# 
   461     009C                     	;# 
   462     009D                     	;# 
   463     009E                     	;# 
   464     010C                     	;# 
   465     010D                     	;# 
   466     0111                     	;# 
   467     0112                     	;# 
   468     0113                     	;# 
   469     0114                     	;# 
   470     0115                     	;# 
   471     0116                     	;# 
   472     0117                     	;# 
   473     0118                     	;# 
   474     0119                     	;# 
   475     011A                     	;# 
   476     011B                     	;# 
   477     011D                     	;# 
   478     011E                     	;# 
   479     018C                     	;# 
   480     018D                     	;# 
   481     0191                     	;# 
   482     0191                     	;# 
   483     0192                     	;# 
   484     0193                     	;# 
   485     0193                     	;# 
   486     0193                     	;# 
   487     0194                     	;# 
   488     0195                     	;# 
   489     0196                     	;# 
   490     0199                     	;# 
   491     019A                     	;# 
   492     019B                     	;# 
   493     019B                     	;# 
   494     019B                     	;# 
   495     019B                     	;# 
   496     019C                     	;# 
   497     019C                     	;# 
   498     019D                     	;# 
   499     019E                     	;# 
   500     019F                     	;# 
   501     020C                     	;# 
   502     020D                     	;# 
   503     0211                     	;# 
   504     0211                     	;# 
   505     0212                     	;# 
   506     0212                     	;# 
   507     0213                     	;# 
   508     0213                     	;# 
   509     0214                     	;# 
   510     0214                     	;# 
   511     0215                     	;# 
   512     0215                     	;# 
   513     0215                     	;# 
   514     0216                     	;# 
   515     0216                     	;# 
   516     0217                     	;# 
   517     0217                     	;# 
   518     0219                     	;# 
   519     021A                     	;# 
   520     021B                     	;# 
   521     021C                     	;# 
   522     021D                     	;# 
   523     021E                     	;# 
   524     021F                     	;# 
   525     0291                     	;# 
   526     0291                     	;# 
   527     0292                     	;# 
   528     0293                     	;# 
   529     0294                     	;# 
   530     0295                     	;# 
   531     0295                     	;# 
   532     0296                     	;# 
   533     0298                     	;# 
   534     0298                     	;# 
   535     0299                     	;# 
   536     029A                     	;# 
   537     029B                     	;# 
   538     029C                     	;# 
   539     029C                     	;# 
   540     029D                     	;# 
   541     029E                     	;# 
   542     029E                     	;# 
   543     0311                     	;# 
   544     0311                     	;# 
   545     0312                     	;# 
   546     0313                     	;# 
   547     0318                     	;# 
   548     0318                     	;# 
   549     0319                     	;# 
   550     031A                     	;# 
   551     0394                     	;# 
   552     0395                     	;# 
   553     0396                     	;# 
   554     039A                     	;# 
   555     039C                     	;# 
   556     039D                     	;# 
   557     039E                     	;# 
   558     039F                     	;# 
   559     0415                     	;# 
   560     0416                     	;# 
   561     0417                     	;# 
   562     041C                     	;# 
   563     041D                     	;# 
   564     041E                     	;# 
   565     0FE4                     	;# 
   566     0FE5                     	;# 
   567     0FE6                     	;# 
   568     0FE7                     	;# 
   569     0FE8                     	;# 
   570     0FE9                     	;# 
   571     0FEA                     	;# 
   572     0FEB                     	;# 
   573     0FED                     	;# 
   574     0FEE                     	;# 
   575     0FEF                     	;# 
   576     0000                     	;# 
   577     0001                     	;# 
   578     0002                     	;# 
   579     0003                     	;# 
   580     0004                     	;# 
   581     0005                     	;# 
   582     0006                     	;# 
   583     0007                     	;# 
   584     0008                     	;# 
   585     0009                     	;# 
   586     000A                     	;# 
   587     000B                     	;# 
   588     000C                     	;# 
   589     000D                     	;# 
   590     0011                     	;# 
   591     0012                     	;# 
   592     0013                     	;# 
   593     0014                     	;# 
   594     0015                     	;# 
   595     0016                     	;# 
   596     0016                     	;# 
   597     0017                     	;# 
   598     0018                     	;# 
   599     0019                     	;# 
   600     001A                     	;# 
   601     001B                     	;# 
   602     001C                     	;# 
   603     001E                     	;# 
   604     001F                     	;# 
   605     008C                     	;# 
   606     008D                     	;# 
   607     0091                     	;# 
   608     0092                     	;# 
   609     0093                     	;# 
   610     0094                     	;# 
   611     0095                     	;# 
   612     0096                     	;# 
   613     0097                     	;# 
   614     0098                     	;# 
   615     0099                     	;# 
   616     009A                     	;# 
   617     009B                     	;# 
   618     009B                     	;# 
   619     009C                     	;# 
   620     009D                     	;# 
   621     009E                     	;# 
   622     010C                     	;# 
   623     010D                     	;# 
   624     0111                     	;# 
   625     0112                     	;# 
   626     0113                     	;# 
   627     0114                     	;# 
   628     0115                     	;# 
   629     0116                     	;# 
   630     0117                     	;# 
   631     0118                     	;# 
   632     0119                     	;# 
   633     011A                     	;# 
   634     011B                     	;# 
   635     011D                     	;# 
   636     011E                     	;# 
   637     018C                     	;# 
   638     018D                     	;# 
   639     0191                     	;# 
   640     0191                     	;# 
   641     0192                     	;# 
   642     0193                     	;# 
   643     0193                     	;# 
   644     0193                     	;# 
   645     0194                     	;# 
   646     0195                     	;# 
   647     0196                     	;# 
   648     0199                     	;# 
   649     019A                     	;# 
   650     019B                     	;# 
   651     019B                     	;# 
   652     019B                     	;# 
   653     019B                     	;# 
   654     019C                     	;# 
   655     019C                     	;# 
   656     019D                     	;# 
   657     019E                     	;# 
   658     019F                     	;# 
   659     020C                     	;# 
   660     020D                     	;# 
   661     0211                     	;# 
   662     0211                     	;# 
   663     0212                     	;# 
   664     0212                     	;# 
   665     0213                     	;# 
   666     0213                     	;# 
   667     0214                     	;# 
   668     0214                     	;# 
   669     0215                     	;# 
   670     0215                     	;# 
   671     0215                     	;# 
   672     0216                     	;# 
   673     0216                     	;# 
   674     0217                     	;# 
   675     0217                     	;# 
   676     0219                     	;# 
   677     021A                     	;# 
   678     021B                     	;# 
   679     021C                     	;# 
   680     021D                     	;# 
   681     021E                     	;# 
   682     021F                     	;# 
   683     0291                     	;# 
   684     0291                     	;# 
   685     0292                     	;# 
   686     0293                     	;# 
   687     0294                     	;# 
   688     0295                     	;# 
   689     0295                     	;# 
   690     0296                     	;# 
   691     0298                     	;# 
   692     0298                     	;# 
   693     0299                     	;# 
   694     029A                     	;# 
   695     029B                     	;# 
   696     029C                     	;# 
   697     029C                     	;# 
   698     029D                     	;# 
   699     029E                     	;# 
   700     029E                     	;# 
   701     0311                     	;# 
   702     0311                     	;# 
   703     0312                     	;# 
   704     0313                     	;# 
   705     0318                     	;# 
   706     0318                     	;# 
   707     0319                     	;# 
   708     031A                     	;# 
   709     0394                     	;# 
   710     0395                     	;# 
   711     0396                     	;# 
   712     039A                     	;# 
   713     039C                     	;# 
   714     039D                     	;# 
   715     039E                     	;# 
   716     039F                     	;# 
   717     0415                     	;# 
   718     0416                     	;# 
   719     0417                     	;# 
   720     041C                     	;# 
   721     041D                     	;# 
   722     041E                     	;# 
   723     0FE4                     	;# 
   724     0FE5                     	;# 
   725     0FE6                     	;# 
   726     0FE7                     	;# 
   727     0FE8                     	;# 
   728     0FE9                     	;# 
   729     0FEA                     	;# 
   730     0FEB                     	;# 
   731     0FED                     	;# 
   732     0FEE                     	;# 
   733     0FEF                     	;# 
   734     0000                     	;# 
   735     0001                     	;# 
   736     0002                     	;# 
   737     0003                     	;# 
   738     0004                     	;# 
   739     0005                     	;# 
   740     0006                     	;# 
   741     0007                     	;# 
   742     0008                     	;# 
   743     0009                     	;# 
   744     000A                     	;# 
   745     000B                     	;# 
   746     000C                     	;# 
   747     000D                     	;# 
   748     0011                     	;# 
   749     0012                     	;# 
   750     0013                     	;# 
   751     0014                     	;# 
   752     0015                     	;# 
   753     0016                     	;# 
   754     0016                     	;# 
   755     0017                     	;# 
   756     0018                     	;# 
   757     0019                     	;# 
   758     001A                     	;# 
   759     001B                     	;# 
   760     001C                     	;# 
   761     001E                     	;# 
   762     001F                     	;# 
   763     008C                     	;# 
   764     008D                     	;# 
   765     0091                     	;# 
   766     0092                     	;# 
   767     0093                     	;# 
   768     0094                     	;# 
   769     0095                     	;# 
   770     0096                     	;# 
   771     0097                     	;# 
   772     0098                     	;# 
   773     0099                     	;# 
   774     009A                     	;# 
   775     009B                     	;# 
   776     009B                     	;# 
   777     009C                     	;# 
   778     009D                     	;# 
   779     009E                     	;# 
   780     010C                     	;# 
   781     010D                     	;# 
   782     0111                     	;# 
   783     0112                     	;# 
   784     0113                     	;# 
   785     0114                     	;# 
   786     0115                     	;# 
   787     0116                     	;# 
   788     0117                     	;# 
   789     0118                     	;# 
   790     0119                     	;# 
   791     011A                     	;# 
   792     011B                     	;# 
   793     011D                     	;# 
   794     011E                     	;# 
   795     018C                     	;# 
   796     018D                     	;# 
   797     0191                     	;# 
   798     0191                     	;# 
   799     0192                     	;# 
   800     0193                     	;# 
   801     0193                     	;# 
   802     0193                     	;# 
   803     0194                     	;# 
   804     0195                     	;# 
   805     0196                     	;# 
   806     0199                     	;# 
   807     019A                     	;# 
   808     019B                     	;# 
   809     019B                     	;# 
   810     019B                     	;# 
   811     019B                     	;# 
   812     019C                     	;# 
   813     019C                     	;# 
   814     019D                     	;# 
   815     019E                     	;# 
   816     019F                     	;# 
   817     020C                     	;# 
   818     020D                     	;# 
   819     0211                     	;# 
   820     0211                     	;# 
   821     0212                     	;# 
   822     0212                     	;# 
   823     0213                     	;# 
   824     0213                     	;# 
   825     0214                     	;# 
   826     0214                     	;# 
   827     0215                     	;# 
   828     0215                     	;# 
   829     0215                     	;# 
   830     0216                     	;# 
   831     0216                     	;# 
   832     0217                     	;# 
   833     0217                     	;# 
   834     0219                     	;# 
   835     021A                     	;# 
   836     021B                     	;# 
   837     021C                     	;# 
   838     021D                     	;# 
   839     021E                     	;# 
   840     021F                     	;# 
   841     0291                     	;# 
   842     0291                     	;# 
   843     0292                     	;# 
   844     0293                     	;# 
   845     0294                     	;# 
   846     0295                     	;# 
   847     0295                     	;# 
   848     0296                     	;# 
   849     0298                     	;# 
   850     0298                     	;# 
   851     0299                     	;# 
   852     029A                     	;# 
   853     029B                     	;# 
   854     029C                     	;# 
   855     029C                     	;# 
   856     029D                     	;# 
   857     029E                     	;# 
   858     029E                     	;# 
   859     0311                     	;# 
   860     0311                     	;# 
   861     0312                     	;# 
   862     0313                     	;# 
   863     0318                     	;# 
   864     0318                     	;# 
   865     0319                     	;# 
   866     031A                     	;# 
   867     0394                     	;# 
   868     0395                     	;# 
   869     0396                     	;# 
   870     039A                     	;# 
   871     039C                     	;# 
   872     039D                     	;# 
   873     039E                     	;# 
   874     039F                     	;# 
   875     0415                     	;# 
   876     0416                     	;# 
   877     0417                     	;# 
   878     041C                     	;# 
   879     041D                     	;# 
   880     041E                     	;# 
   881     0FE4                     	;# 
   882     0FE5                     	;# 
   883     0FE6                     	;# 
   884     0FE7                     	;# 
   885     0FE8                     	;# 
   886     0FE9                     	;# 
   887     0FEA                     	;# 
   888     0FEB                     	;# 
   889     0FED                     	;# 
   890     0FEE                     	;# 
   891     0FEF                     	;# 
   892     0000                     	;# 
   893     0001                     	;# 
   894     0002                     	;# 
   895     0003                     	;# 
   896     0004                     	;# 
   897     0005                     	;# 
   898     0006                     	;# 
   899     0007                     	;# 
   900     0008                     	;# 
   901     0009                     	;# 
   902     000A                     	;# 
   903     000B                     	;# 
   904     000C                     	;# 
   905     000D                     	;# 
   906     0011                     	;# 
   907     0012                     	;# 
   908     0013                     	;# 
   909     0014                     	;# 
   910     0015                     	;# 
   911     0016                     	;# 
   912     0016                     	;# 
   913     0017                     	;# 
   914     0018                     	;# 
   915     0019                     	;# 
   916     001A                     	;# 
   917     001B                     	;# 
   918     001C                     	;# 
   919     001E                     	;# 
   920     001F                     	;# 
   921     008C                     	;# 
   922     008D                     	;# 
   923     0091                     	;# 
   924     0092                     	;# 
   925     0093                     	;# 
   926     0094                     	;# 
   927     0095                     	;# 
   928     0096                     	;# 
   929     0097                     	;# 
   930     0098                     	;# 
   931     0099                     	;# 
   932     009A                     	;# 
   933     009B                     	;# 
   934     009B                     	;# 
   935     009C                     	;# 
   936     009D                     	;# 
   937     009E                     	;# 
   938     010C                     	;# 
   939     010D                     	;# 
   940     0111                     	;# 
   941     0112                     	;# 
   942     0113                     	;# 
   943     0114                     	;# 
   944     0115                     	;# 
   945     0116                     	;# 
   946     0117                     	;# 
   947     0118                     	;# 
   948     0119                     	;# 
   949     011A                     	;# 
   950     011B                     	;# 
   951     011D                     	;# 
   952     011E                     	;# 
   953     018C                     	;# 
   954     018D                     	;# 
   955     0191                     	;# 
   956     0191                     	;# 
   957     0192                     	;# 
   958     0193                     	;# 
   959     0193                     	;# 
   960     0193                     	;# 
   961     0194                     	;# 
   962     0195                     	;# 
   963     0196                     	;# 
   964     0199                     	;# 
   965     019A                     	;# 
   966     019B                     	;# 
   967     019B                     	;# 
   968     019B                     	;# 
   969     019B                     	;# 
   970     019C                     	;# 
   971     019C                     	;# 
   972     019D                     	;# 
   973     019E                     	;# 
   974     019F                     	;# 
   975     020C                     	;# 
   976     020D                     	;# 
   977     0211                     	;# 
   978     0211                     	;# 
   979     0212                     	;# 
   980     0212                     	;# 
   981     0213                     	;# 
   982     0213                     	;# 
   983     0214                     	;# 
   984     0214                     	;# 
   985     0215                     	;# 
   986     0215                     	;# 
   987     0215                     	;# 
   988     0216                     	;# 
   989     0216                     	;# 
   990     0217                     	;# 
   991     0217                     	;# 
   992     0219                     	;# 
   993     021A                     	;# 
   994     021B                     	;# 
   995     021C                     	;# 
   996     021D                     	;# 
   997     021E                     	;# 
   998     021F                     	;# 
   999     0291                     	;# 
  1000     0291                     	;# 
  1001     0292                     	;# 
  1002     0293                     	;# 
  1003     0294                     	;# 
  1004     0295                     	;# 
  1005     0295                     	;# 
  1006     0296                     	;# 
  1007     0298                     	;# 
  1008     0298                     	;# 
  1009     0299                     	;# 
  1010     029A                     	;# 
  1011     029B                     	;# 
  1012     029C                     	;# 
  1013     029C                     	;# 
  1014     029D                     	;# 
  1015     029E                     	;# 
  1016     029E                     	;# 
  1017     0311                     	;# 
  1018     0311                     	;# 
  1019     0312                     	;# 
  1020     0313                     	;# 
  1021     0318                     	;# 
  1022     0318                     	;# 
  1023     0319                     	;# 
  1024     031A                     	;# 
  1025     0394                     	;# 
  1026     0395                     	;# 
  1027     0396                     	;# 
  1028     039A                     	;# 
  1029     039C                     	;# 
  1030     039D                     	;# 
  1031     039E                     	;# 
  1032     039F                     	;# 
  1033     0415                     	;# 
  1034     0416                     	;# 
  1035     0417                     	;# 
  1036     041C                     	;# 
  1037     041D                     	;# 
  1038     041E                     	;# 
  1039     0FE4                     	;# 
  1040     0FE5                     	;# 
  1041     0FE6                     	;# 
  1042     0FE7                     	;# 
  1043     0FE8                     	;# 
  1044     0FE9                     	;# 
  1045     0FEA                     	;# 
  1046     0FEB                     	;# 
  1047     0FED                     	;# 
  1048     0FEE                     	;# 
  1049     0FEF                     	;# 
  1050     0000                     	;# 
  1051     0001                     	;# 
  1052     0002                     	;# 
  1053     0003                     	;# 
  1054     0004                     	;# 
  1055     0005                     	;# 
  1056     0006                     	;# 
  1057     0007                     	;# 
  1058     0008                     	;# 
  1059     0009                     	;# 
  1060     000A                     	;# 
  1061     000B                     	;# 
  1062     000C                     	;# 
  1063     000D                     	;# 
  1064     0011                     	;# 
  1065     0012                     	;# 
  1066     0013                     	;# 
  1067     0014                     	;# 
  1068     0015                     	;# 
  1069     0016                     	;# 
  1070     0016                     	;# 
  1071     0017                     	;# 
  1072     0018                     	;# 
  1073     0019                     	;# 
  1074     001A                     	;# 
  1075     001B                     	;# 
  1076     001C                     	;# 
  1077     001E                     	;# 
  1078     001F                     	;# 
  1079     008C                     	;# 
  1080     008D                     	;# 
  1081     0091                     	;# 
  1082     0092                     	;# 
  1083     0093                     	;# 
  1084     0094                     	;# 
  1085     0095                     	;# 
  1086     0096                     	;# 
  1087     0097                     	;# 
  1088     0098                     	;# 
  1089     0099                     	;# 
  1090     009A                     	;# 
  1091     009B                     	;# 
  1092     009B                     	;# 
  1093     009C                     	;# 
  1094     009D                     	;# 
  1095     009E                     	;# 
  1096     010C                     	;# 
  1097     010D                     	;# 
  1098     0111                     	;# 
  1099     0112                     	;# 
  1100     0113                     	;# 
  1101     0114                     	;# 
  1102     0115                     	;# 
  1103     0116                     	;# 
  1104     0117                     	;# 
  1105     0118                     	;# 
  1106     0119                     	;# 
  1107     011A                     	;# 
  1108     011B                     	;# 
  1109     011D                     	;# 
  1110     011E                     	;# 
  1111     018C                     	;# 
  1112     018D                     	;# 
  1113     0191                     	;# 
  1114     0191                     	;# 
  1115     0192                     	;# 
  1116     0193                     	;# 
  1117     0193                     	;# 
  1118     0193                     	;# 
  1119     0194                     	;# 
  1120     0195                     	;# 
  1121     0196                     	;# 
  1122     0199                     	;# 
  1123     019A                     	;# 
  1124     019B                     	;# 
  1125     019B                     	;# 
  1126     019B                     	;# 
  1127     019B                     	;# 
  1128     019C                     	;# 
  1129     019C                     	;# 
  1130     019D                     	;# 
  1131     019E                     	;# 
  1132     019F                     	;# 
  1133     020C                     	;# 
  1134     020D                     	;# 
  1135     0211                     	;# 
  1136     0211                     	;# 
  1137     0212                     	;# 
  1138     0212                     	;# 
  1139     0213                     	;# 
  1140     0213                     	;# 
  1141     0214                     	;# 
  1142     0214                     	;# 
  1143     0215                     	;# 
  1144     0215                     	;# 
  1145     0215                     	;# 
  1146     0216                     	;# 
  1147     0216                     	;# 
  1148     0217                     	;# 
  1149     0217                     	;# 
  1150     0219                     	;# 
  1151     021A                     	;# 
  1152     021B                     	;# 
  1153     021C                     	;# 
  1154     021D                     	;# 
  1155     021E                     	;# 
  1156     021F                     	;# 
  1157     0291                     	;# 
  1158     0291                     	;# 
  1159     0292                     	;# 
  1160     0293                     	;# 
  1161     0294                     	;# 
  1162     0295                     	;# 
  1163     0295                     	;# 
  1164     0296                     	;# 
  1165     0298                     	;# 
  1166     0298                     	;# 
  1167     0299                     	;# 
  1168     029A                     	;# 
  1169     029B                     	;# 
  1170     029C                     	;# 
  1171     029C                     	;# 
  1172     029D                     	;# 
  1173     029E                     	;# 
  1174     029E                     	;# 
  1175     0311                     	;# 
  1176     0311                     	;# 
  1177     0312                     	;# 
  1178     0313                     	;# 
  1179     0318                     	;# 
  1180     0318                     	;# 
  1181     0319                     	;# 
  1182     031A                     	;# 
  1183     0394                     	;# 
  1184     0395                     	;# 
  1185     0396                     	;# 
  1186     039A                     	;# 
  1187     039C                     	;# 
  1188     039D                     	;# 
  1189     039E                     	;# 
  1190     039F                     	;# 
  1191     0415                     	;# 
  1192     0416                     	;# 
  1193     0417                     	;# 
  1194     041C                     	;# 
  1195     041D                     	;# 
  1196     041E                     	;# 
  1197     0FE4                     	;# 
  1198     0FE5                     	;# 
  1199     0FE6                     	;# 
  1200     0FE7                     	;# 
  1201     0FE8                     	;# 
  1202     0FE9                     	;# 
  1203     0FEA                     	;# 
  1204     0FEB                     	;# 
  1205     0FED                     	;# 
  1206     0FEE                     	;# 
  1207     0FEF                     	;# 
  1208     0000                     	;# 
  1209     0001                     	;# 
  1210     0002                     	;# 
  1211     0003                     	;# 
  1212     0004                     	;# 
  1213     0005                     	;# 
  1214     0006                     	;# 
  1215     0007                     	;# 
  1216     0008                     	;# 
  1217     0009                     	;# 
  1218     000A                     	;# 
  1219     000B                     	;# 
  1220     000C                     	;# 
  1221     000D                     	;# 
  1222     0011                     	;# 
  1223     0012                     	;# 
  1224     0013                     	;# 
  1225     0014                     	;# 
  1226     0015                     	;# 
  1227     0016                     	;# 
  1228     0016                     	;# 
  1229     0017                     	;# 
  1230     0018                     	;# 
  1231     0019                     	;# 
  1232     001A                     	;# 
  1233     001B                     	;# 
  1234     001C                     	;# 
  1235     001E                     	;# 
  1236     001F                     	;# 
  1237     008C                     	;# 
  1238     008D                     	;# 
  1239     0091                     	;# 
  1240     0092                     	;# 
  1241     0093                     	;# 
  1242     0094                     	;# 
  1243     0095                     	;# 
  1244     0096                     	;# 
  1245     0097                     	;# 
  1246     0098                     	;# 
  1247     0099                     	;# 
  1248     009A                     	;# 
  1249     009B                     	;# 
  1250     009B                     	;# 
  1251     009C                     	;# 
  1252     009D                     	;# 
  1253     009E                     	;# 
  1254     010C                     	;# 
  1255     010D                     	;# 
  1256     0111                     	;# 
  1257     0112                     	;# 
  1258     0113                     	;# 
  1259     0114                     	;# 
  1260     0115                     	;# 
  1261     0116                     	;# 
  1262     0117                     	;# 
  1263     0118                     	;# 
  1264     0119                     	;# 
  1265     011A                     	;# 
  1266     011B                     	;# 
  1267     011D                     	;# 
  1268     011E                     	;# 
  1269     018C                     	;# 
  1270     018D                     	;# 
  1271     0191                     	;# 
  1272     0191                     	;# 
  1273     0192                     	;# 
  1274     0193                     	;# 
  1275     0193                     	;# 
  1276     0193                     	;# 
  1277     0194                     	;# 
  1278     0195                     	;# 
  1279     0196                     	;# 
  1280     0199                     	;# 
  1281     019A                     	;# 
  1282     019B                     	;# 
  1283     019B                     	;# 
  1284     019B                     	;# 
  1285     019B                     	;# 
  1286     019C                     	;# 
  1287     019C                     	;# 
  1288     019D                     	;# 
  1289     019E                     	;# 
  1290     019F                     	;# 
  1291     020C                     	;# 
  1292     020D                     	;# 
  1293     0211                     	;# 
  1294     0211                     	;# 
  1295     0212                     	;# 
  1296     0212                     	;# 
  1297     0213                     	;# 
  1298     0213                     	;# 
  1299     0214                     	;# 
  1300     0214                     	;# 
  1301     0215                     	;# 
  1302     0215                     	;# 
  1303     0215                     	;# 
  1304     0216                     	;# 
  1305     0216                     	;# 
  1306     0217                     	;# 
  1307     0217                     	;# 
  1308     0219                     	;# 
  1309     021A                     	;# 
  1310     021B                     	;# 
  1311     021C                     	;# 
  1312     021D                     	;# 
  1313     021E                     	;# 
  1314     021F                     	;# 
  1315     0291                     	;# 
  1316     0291                     	;# 
  1317     0292                     	;# 
  1318     0293                     	;# 
  1319     0294                     	;# 
  1320     0295                     	;# 
  1321     0295                     	;# 
  1322     0296                     	;# 
  1323     0298                     	;# 
  1324     0298                     	;# 
  1325     0299                     	;# 
  1326     029A                     	;# 
  1327     029B                     	;# 
  1328     029C                     	;# 
  1329     029C                     	;# 
  1330     029D                     	;# 
  1331     029E                     	;# 
  1332     029E                     	;# 
  1333     0311                     	;# 
  1334     0311                     	;# 
  1335     0312                     	;# 
  1336     0313                     	;# 
  1337     0318                     	;# 
  1338     0318                     	;# 
  1339     0319                     	;# 
  1340     031A                     	;# 
  1341     0394                     	;# 
  1342     0395                     	;# 
  1343     0396                     	;# 
  1344     039A                     	;# 
  1345     039C                     	;# 
  1346     039D                     	;# 
  1347     039E                     	;# 
  1348     039F                     	;# 
  1349     0415                     	;# 
  1350     0416                     	;# 
  1351     0417                     	;# 
  1352     041C                     	;# 
  1353     041D                     	;# 
  1354     041E                     	;# 
  1355     0FE4                     	;# 
  1356     0FE5                     	;# 
  1357     0FE6                     	;# 
  1358     0FE7                     	;# 
  1359     0FE8                     	;# 
  1360     0FE9                     	;# 
  1361     0FEA                     	;# 
  1362     0FEB                     	;# 
  1363     0FED                     	;# 
  1364     0FEE                     	;# 
  1365     0FEF                     	;# 
  1366     0000                     	;# 
  1367     0001                     	;# 
  1368     0002                     	;# 
  1369     0003                     	;# 
  1370     0004                     	;# 
  1371     0005                     	;# 
  1372     0006                     	;# 
  1373     0007                     	;# 
  1374     0008                     	;# 
  1375     0009                     	;# 
  1376     000A                     	;# 
  1377     000B                     	;# 
  1378     000C                     	;# 
  1379     000D                     	;# 
  1380     0011                     	;# 
  1381     0012                     	;# 
  1382     0013                     	;# 
  1383     0014                     	;# 
  1384     0015                     	;# 
  1385     0016                     	;# 
  1386     0016                     	;# 
  1387     0017                     	;# 
  1388     0018                     	;# 
  1389     0019                     	;# 
  1390     001A                     	;# 
  1391     001B                     	;# 
  1392     001C                     	;# 
  1393     001E                     	;# 
  1394     001F                     	;# 
  1395     008C                     	;# 
  1396     008D                     	;# 
  1397     0091                     	;# 
  1398     0092                     	;# 
  1399     0093                     	;# 
  1400     0094                     	;# 
  1401     0095                     	;# 
  1402     0096                     	;# 
  1403     0097                     	;# 
  1404     0098                     	;# 
  1405     0099                     	;# 
  1406     009A                     	;# 
  1407     009B                     	;# 
  1408     009B                     	;# 
  1409     009C                     	;# 
  1410     009D                     	;# 
  1411     009E                     	;# 
  1412     010C                     	;# 
  1413     010D                     	;# 
  1414     0111                     	;# 
  1415     0112                     	;# 
  1416     0113                     	;# 
  1417     0114                     	;# 
  1418     0115                     	;# 
  1419     0116                     	;# 
  1420     0117                     	;# 
  1421     0118                     	;# 
  1422     0119                     	;# 
  1423     011A                     	;# 
  1424     011B                     	;# 
  1425     011D                     	;# 
  1426     011E                     	;# 
  1427     018C                     	;# 
  1428     018D                     	;# 
  1429     0191                     	;# 
  1430     0191                     	;# 
  1431     0192                     	;# 
  1432     0193                     	;# 
  1433     0193                     	;# 
  1434     0193                     	;# 
  1435     0194                     	;# 
  1436     0195                     	;# 
  1437     0196                     	;# 
  1438     0199                     	;# 
  1439     019A                     	;# 
  1440     019B                     	;# 
  1441     019B                     	;# 
  1442     019B                     	;# 
  1443     019B                     	;# 
  1444     019C                     	;# 
  1445     019C                     	;# 
  1446     019D                     	;# 
  1447     019E                     	;# 
  1448     019F                     	;# 
  1449     020C                     	;# 
  1450     020D                     	;# 
  1451     0211                     	;# 
  1452     0211                     	;# 
  1453     0212                     	;# 
  1454     0212                     	;# 
  1455     0213                     	;# 
  1456     0213                     	;# 
  1457     0214                     	;# 
  1458     0214                     	;# 
  1459     0215                     	;# 
  1460     0215                     	;# 
  1461     0215                     	;# 
  1462     0216                     	;# 
  1463     0216                     	;# 
  1464     0217                     	;# 
  1465     0217                     	;# 
  1466     0219                     	;# 
  1467     021A                     	;# 
  1468     021B                     	;# 
  1469     021C                     	;# 
  1470     021D                     	;# 
  1471     021E                     	;# 
  1472     021F                     	;# 
  1473     0291                     	;# 
  1474     0291                     	;# 
  1475     0292                     	;# 
  1476     0293                     	;# 
  1477     0294                     	;# 
  1478     0295                     	;# 
  1479     0295                     	;# 
  1480     0296                     	;# 
  1481     0298                     	;# 
  1482     0298                     	;# 
  1483     0299                     	;# 
  1484     029A                     	;# 
  1485     029B                     	;# 
  1486     029C                     	;# 
  1487     029C                     	;# 
  1488     029D                     	;# 
  1489     029E                     	;# 
  1490     029E                     	;# 
  1491     0311                     	;# 
  1492     0311                     	;# 
  1493     0312                     	;# 
  1494     0313                     	;# 
  1495     0318                     	;# 
  1496     0318                     	;# 
  1497     0319                     	;# 
  1498     031A                     	;# 
  1499     0394                     	;# 
  1500     0395                     	;# 
  1501     0396                     	;# 
  1502     039A                     	;# 
  1503     039C                     	;# 
  1504     039D                     	;# 
  1505     039E                     	;# 
  1506     039F                     	;# 
  1507     0415                     	;# 
  1508     0416                     	;# 
  1509     0417                     	;# 
  1510     041C                     	;# 
  1511     041D                     	;# 
  1512     041E                     	;# 
  1513     0FE4                     	;# 
  1514     0FE5                     	;# 
  1515     0FE6                     	;# 
  1516     0FE7                     	;# 
  1517     0FE8                     	;# 
  1518     0FE9                     	;# 
  1519     0FEA                     	;# 
  1520     0FEB                     	;# 
  1521     0FED                     	;# 
  1522     0FEE                     	;# 
  1523     0FEF                     	;# 
  1524     0000                     	;# 
  1525     0001                     	;# 
  1526     0002                     	;# 
  1527     0003                     	;# 
  1528     0004                     	;# 
  1529     0005                     	;# 
  1530     0006                     	;# 
  1531     0007                     	;# 
  1532     0008                     	;# 
  1533     0009                     	;# 
  1534     000A                     	;# 
  1535     000B                     	;# 
  1536     000C                     	;# 
  1537     000D                     	;# 
  1538     0011                     	;# 
  1539     0012                     	;# 
  1540     0013                     	;# 
  1541     0014                     	;# 
  1542     0015                     	;# 
  1543     0016                     	;# 
  1544     0016                     	;# 
  1545     0017                     	;# 
  1546     0018                     	;# 
  1547     0019                     	;# 
  1548     001A                     	;# 
  1549     001B                     	;# 
  1550     001C                     	;# 
  1551     001E                     	;# 
  1552     001F                     	;# 
  1553     008C                     	;# 
  1554     008D                     	;# 
  1555     0091                     	;# 
  1556     0092                     	;# 
  1557     0093                     	;# 
  1558     0094                     	;# 
  1559     0095                     	;# 
  1560     0096                     	;# 
  1561     0097                     	;# 
  1562     0098                     	;# 
  1563     0099                     	;# 
  1564     009A                     	;# 
  1565     009B                     	;# 
  1566     009B                     	;# 
  1567     009C                     	;# 
  1568     009D                     	;# 
  1569     009E                     	;# 
  1570     010C                     	;# 
  1571     010D                     	;# 
  1572     0111                     	;# 
  1573     0112                     	;# 
  1574     0113                     	;# 
  1575     0114                     	;# 
  1576     0115                     	;# 
  1577     0116                     	;# 
  1578     0117                     	;# 
  1579     0118                     	;# 
  1580     0119                     	;# 
  1581     011A                     	;# 
  1582     011B                     	;# 
  1583     011D                     	;# 
  1584     011E                     	;# 
  1585     018C                     	;# 
  1586     018D                     	;# 
  1587     0191                     	;# 
  1588     0191                     	;# 
  1589     0192                     	;# 
  1590     0193                     	;# 
  1591     0193                     	;# 
  1592     0193                     	;# 
  1593     0194                     	;# 
  1594     0195                     	;# 
  1595     0196                     	;# 
  1596     0199                     	;# 
  1597     019A                     	;# 
  1598     019B                     	;# 
  1599     019B                     	;# 
  1600     019B                     	;# 
  1601     019B                     	;# 
  1602     019C                     	;# 
  1603     019C                     	;# 
  1604     019D                     	;# 
  1605     019E                     	;# 
  1606     019F                     	;# 
  1607     020C                     	;# 
  1608     020D                     	;# 
  1609     0211                     	;# 
  1610     0211                     	;# 
  1611     0212                     	;# 
  1612     0212                     	;# 
  1613     0213                     	;# 
  1614     0213                     	;# 
  1615     0214                     	;# 
  1616     0214                     	;# 
  1617     0215                     	;# 
  1618     0215                     	;# 
  1619     0215                     	;# 
  1620     0216                     	;# 
  1621     0216                     	;# 
  1622     0217                     	;# 
  1623     0217                     	;# 
  1624     0219                     	;# 
  1625     021A                     	;# 
  1626     021B                     	;# 
  1627     021C                     	;# 
  1628     021D                     	;# 
  1629     021E                     	;# 
  1630     021F                     	;# 
  1631     0291                     	;# 
  1632     0291                     	;# 
  1633     0292                     	;# 
  1634     0293                     	;# 
  1635     0294                     	;# 
  1636     0295                     	;# 
  1637     0295                     	;# 
  1638     0296                     	;# 
  1639     0298                     	;# 
  1640     0298                     	;# 
  1641     0299                     	;# 
  1642     029A                     	;# 
  1643     029B                     	;# 
  1644     029C                     	;# 
  1645     029C                     	;# 
  1646     029D                     	;# 
  1647     029E                     	;# 
  1648     029E                     	;# 
  1649     0311                     	;# 
  1650     0311                     	;# 
  1651     0312                     	;# 
  1652     0313                     	;# 
  1653     0318                     	;# 
  1654     0318                     	;# 
  1655     0319                     	;# 
  1656     031A                     	;# 
  1657     0394                     	;# 
  1658     0395                     	;# 
  1659     0396                     	;# 
  1660     039A                     	;# 
  1661     039C                     	;# 
  1662     039D                     	;# 
  1663     039E                     	;# 
  1664     039F                     	;# 
  1665     0415                     	;# 
  1666     0416                     	;# 
  1667     0417                     	;# 
  1668     041C                     	;# 
  1669     041D                     	;# 
  1670     041E                     	;# 
  1671     0FE4                     	;# 
  1672     0FE5                     	;# 
  1673     0FE6                     	;# 
  1674     0FE7                     	;# 
  1675     0FE8                     	;# 
  1676     0FE9                     	;# 
  1677     0FEA                     	;# 
  1678     0FEB                     	;# 
  1679     0FED                     	;# 
  1680     0FEE                     	;# 
  1681     0FEF                     	;# 
  1682     0000                     	;# 
  1683     0001                     	;# 
  1684     0002                     	;# 
  1685     0003                     	;# 
  1686     0004                     	;# 
  1687     0005                     	;# 
  1688     0006                     	;# 
  1689     0007                     	;# 
  1690     0008                     	;# 
  1691     0009                     	;# 
  1692     000A                     	;# 
  1693     000B                     	;# 
  1694     000C                     	;# 
  1695     000D                     	;# 
  1696     0011                     	;# 
  1697     0012                     	;# 
  1698     0013                     	;# 
  1699     0014                     	;# 
  1700     0015                     	;# 
  1701     0016                     	;# 
  1702     0016                     	;# 
  1703     0017                     	;# 
  1704     0018                     	;# 
  1705     0019                     	;# 
  1706     001A                     	;# 
  1707     001B                     	;# 
  1708     001C                     	;# 
  1709     001E                     	;# 
  1710     001F                     	;# 
  1711     008C                     	;# 
  1712     008D                     	;# 
  1713     0091                     	;# 
  1714     0092                     	;# 
  1715     0093                     	;# 
  1716     0094                     	;# 
  1717     0095                     	;# 
  1718     0096                     	;# 
  1719     0097                     	;# 
  1720     0098                     	;# 
  1721     0099                     	;# 
  1722     009A                     	;# 
  1723     009B                     	;# 
  1724     009B                     	;# 
  1725     009C                     	;# 
  1726     009D                     	;# 
  1727     009E                     	;# 
  1728     010C                     	;# 
  1729     010D                     	;# 
  1730     0111                     	;# 
  1731     0112                     	;# 
  1732     0113                     	;# 
  1733     0114                     	;# 
  1734     0115                     	;# 
  1735     0116                     	;# 
  1736     0117                     	;# 
  1737     0118                     	;# 
  1738     0119                     	;# 
  1739     011A                     	;# 
  1740     011B                     	;# 
  1741     011D                     	;# 
  1742     011E                     	;# 
  1743     018C                     	;# 
  1744     018D                     	;# 
  1745     0191                     	;# 
  1746     0191                     	;# 
  1747     0192                     	;# 
  1748     0193                     	;# 
  1749     0193                     	;# 
  1750     0193                     	;# 
  1751     0194                     	;# 
  1752     0195                     	;# 
  1753     0196                     	;# 
  1754     0199                     	;# 
  1755     019A                     	;# 
  1756     019B                     	;# 
  1757     019B                     	;# 
  1758     019B                     	;# 
  1759     019B                     	;# 
  1760     019C                     	;# 
  1761     019C                     	;# 
  1762     019D                     	;# 
  1763     019E                     	;# 
  1764     019F                     	;# 
  1765     020C                     	;# 
  1766     020D                     	;# 
  1767     0211                     	;# 
  1768     0211                     	;# 
  1769     0212                     	;# 
  1770     0212                     	;# 
  1771     0213                     	;# 
  1772     0213                     	;# 
  1773     0214                     	;# 
  1774     0214                     	;# 
  1775     0215                     	;# 
  1776     0215                     	;# 
  1777     0215                     	;# 
  1778     0216                     	;# 
  1779     0216                     	;# 
  1780     0217                     	;# 
  1781     0217                     	;# 
  1782     0219                     	;# 
  1783     021A                     	;# 
  1784     021B                     	;# 
  1785     021C                     	;# 
  1786     021D                     	;# 
  1787     021E                     	;# 
  1788     021F                     	;# 
  1789     0291                     	;# 
  1790     0291                     	;# 
  1791     0292                     	;# 
  1792     0293                     	;# 
  1793     0294                     	;# 
  1794     0295                     	;# 
  1795     0295                     	;# 
  1796     0296                     	;# 
  1797     0298                     	;# 
  1798     0298                     	;# 
  1799     0299                     	;# 
  1800     029A                     	;# 
  1801     029B                     	;# 
  1802     029C                     	;# 
  1803     029C                     	;# 
  1804     029D                     	;# 
  1805     029E                     	;# 
  1806     029E                     	;# 
  1807     0311                     	;# 
  1808     0311                     	;# 
  1809     0312                     	;# 
  1810     0313                     	;# 
  1811     0318                     	;# 
  1812     0318                     	;# 
  1813     0319                     	;# 
  1814     031A                     	;# 
  1815     0394                     	;# 
  1816     0395                     	;# 
  1817     0396                     	;# 
  1818     039A                     	;# 
  1819     039C                     	;# 
  1820     039D                     	;# 
  1821     039E                     	;# 
  1822     039F                     	;# 
  1823     0415                     	;# 
  1824     0416                     	;# 
  1825     0417                     	;# 
  1826     041C                     	;# 
  1827     041D                     	;# 
  1828     041E                     	;# 
  1829     0FE4                     	;# 
  1830     0FE5                     	;# 
  1831     0FE6                     	;# 
  1832     0FE7                     	;# 
  1833     0FE8                     	;# 
  1834     0FE9                     	;# 
  1835     0FEA                     	;# 
  1836     0FEB                     	;# 
  1837     0FED                     	;# 
  1838     0FEE                     	;# 
  1839     0FEF                     	;# 
  1840     0000                     	;# 
  1841     0001                     	;# 
  1842     0002                     	;# 
  1843     0003                     	;# 
  1844     0004                     	;# 
  1845     0005                     	;# 
  1846     0006                     	;# 
  1847     0007                     	;# 
  1848     0008                     	;# 
  1849     0009                     	;# 
  1850     000A                     	;# 
  1851     000B                     	;# 
  1852     000C                     	;# 
  1853     000D                     	;# 
  1854     0011                     	;# 
  1855     0012                     	;# 
  1856     0013                     	;# 
  1857     0014                     	;# 
  1858     0015                     	;# 
  1859     0016                     	;# 
  1860     0016                     	;# 
  1861     0017                     	;# 
  1862     0018                     	;# 
  1863     0019                     	;# 
  1864     001A                     	;# 
  1865     001B                     	;# 
  1866     001C                     	;# 
  1867     001E                     	;# 
  1868     001F                     	;# 
  1869     008C                     	;# 
  1870     008D                     	;# 
  1871     0091                     	;# 
  1872     0092                     	;# 
  1873     0093                     	;# 
  1874     0094                     	;# 
  1875     0095                     	;# 
  1876     0096                     	;# 
  1877     0097                     	;# 
  1878     0098                     	;# 
  1879     0099                     	;# 
  1880     009A                     	;# 
  1881     009B                     	;# 
  1882     009B                     	;# 
  1883     009C                     	;# 
  1884     009D                     	;# 
  1885     009E                     	;# 
  1886     010C                     	;# 
  1887     010D                     	;# 
  1888     0111                     	;# 
  1889     0112                     	;# 
  1890     0113                     	;# 
  1891     0114                     	;# 
  1892     0115                     	;# 
  1893     0116                     	;# 
  1894     0117                     	;# 
  1895     0118                     	;# 
  1896     0119                     	;# 
  1897     011A                     	;# 
  1898     011B                     	;# 
  1899     011D                     	;# 
  1900     011E                     	;# 
  1901     018C                     	;# 
  1902     018D                     	;# 
  1903     0191                     	;# 
  1904     0191                     	;# 
  1905     0192                     	;# 
  1906     0193                     	;# 
  1907     0193                     	;# 
  1908     0193                     	;# 
  1909     0194                     	;# 
  1910     0195                     	;# 
  1911     0196                     	;# 
  1912     0199                     	;# 
  1913     019A                     	;# 
  1914     019B                     	;# 
  1915     019B                     	;# 
  1916     019B                     	;# 
  1917     019B                     	;# 
  1918     019C                     	;# 
  1919     019C                     	;# 
  1920     019D                     	;# 
  1921     019E                     	;# 
  1922     019F                     	;# 
  1923     020C                     	;# 
  1924     020D                     	;# 
  1925     0211                     	;# 
  1926     0211                     	;# 
  1927     0212                     	;# 
  1928     0212                     	;# 
  1929     0213                     	;# 
  1930     0213                     	;# 
  1931     0214                     	;# 
  1932     0214                     	;# 
  1933     0215                     	;# 
  1934     0215                     	;# 
  1935     0215                     	;# 
  1936     0216                     	;# 
  1937     0216                     	;# 
  1938     0217                     	;# 
  1939     0217                     	;# 
  1940     0219                     	;# 
  1941     021A                     	;# 
  1942     021B                     	;# 
  1943     021C                     	;# 
  1944     021D                     	;# 
  1945     021E                     	;# 
  1946     021F                     	;# 
  1947     0291                     	;# 
  1948     0291                     	;# 
  1949     0292                     	;# 
  1950     0293                     	;# 
  1951     0294                     	;# 
  1952     0295                     	;# 
  1953     0295                     	;# 
  1954     0296                     	;# 
  1955     0298                     	;# 
  1956     0298                     	;# 
  1957     0299                     	;# 
  1958     029A                     	;# 
  1959     029B                     	;# 
  1960     029C                     	;# 
  1961     029C                     	;# 
  1962     029D                     	;# 
  1963     029E                     	;# 
  1964     029E                     	;# 
  1965     0311                     	;# 
  1966     0311                     	;# 
  1967     0312                     	;# 
  1968     0313                     	;# 
  1969     0318                     	;# 
  1970     0318                     	;# 
  1971     0319                     	;# 
  1972     031A                     	;# 
  1973     0394                     	;# 
  1974     0395                     	;# 
  1975     0396                     	;# 
  1976     039A                     	;# 
  1977     039C                     	;# 
  1978     039D                     	;# 
  1979     039E                     	;# 
  1980     039F                     	;# 
  1981     0415                     	;# 
  1982     0416                     	;# 
  1983     0417                     	;# 
  1984     041C                     	;# 
  1985     041D                     	;# 
  1986     041E                     	;# 
  1987     0FE4                     	;# 
  1988     0FE5                     	;# 
  1989     0FE6                     	;# 
  1990     0FE7                     	;# 
  1991     0FE8                     	;# 
  1992     0FE9                     	;# 
  1993     0FEA                     	;# 
  1994     0FEB                     	;# 
  1995     0FED                     	;# 
  1996     0FEE                     	;# 
  1997     0FEF                     	;# 
  1998     0000                     	;# 
  1999     0001                     	;# 
  2000     0002                     	;# 
  2001     0003                     	;# 
  2002     0004                     	;# 
  2003     0005                     	;# 
  2004     0006                     	;# 
  2005     0007                     	;# 
  2006     0008                     	;# 
  2007     0009                     	;# 
  2008     000A                     	;# 
  2009     000B                     	;# 
  2010     000C                     	;# 
  2011     000D                     	;# 
  2012     0011                     	;# 
  2013     0012                     	;# 
  2014     0013                     	;# 
  2015     0014                     	;# 
  2016     0015                     	;# 
  2017     0016                     	;# 
  2018     0016                     	;# 
  2019     0017                     	;# 
  2020     0018                     	;# 
  2021     0019                     	;# 
  2022     001A                     	;# 
  2023     001B                     	;# 
  2024     001C                     	;# 
  2025     001E                     	;# 
  2026     001F                     	;# 
  2027     008C                     	;# 
  2028     008D                     	;# 
  2029     0091                     	;# 
  2030     0092                     	;# 
  2031     0093                     	;# 
  2032     0094                     	;# 
  2033     0095                     	;# 
  2034     0096                     	;# 
  2035     0097                     	;# 
  2036     0098                     	;# 
  2037     0099                     	;# 
  2038     009A                     	;# 
  2039     009B                     	;# 
  2040     009B                     	;# 
  2041     009C                     	;# 
  2042     009D                     	;# 
  2043     009E                     	;# 
  2044     010C                     	;# 
  2045     010D                     	;# 
  2046     0111                     	;# 
  2047     0112                     	;# 
  2048     0113                     	;# 
  2049     0114                     	;# 
  2050     0115                     	;# 
  2051     0116                     	;# 
  2052     0117                     	;# 
  2053     0118                     	;# 
  2054     0119                     	;# 
  2055     011A                     	;# 
  2056     011B                     	;# 
  2057     011D                     	;# 
  2058     011E                     	;# 
  2059     018C                     	;# 
  2060     018D                     	;# 
  2061     0191                     	;# 
  2062     0191                     	;# 
  2063     0192                     	;# 
  2064     0193                     	;# 
  2065     0193                     	;# 
  2066     0193                     	;# 
  2067     0194                     	;# 
  2068     0195                     	;# 
  2069     0196                     	;# 
  2070     0199                     	;# 
  2071     019A                     	;# 
  2072     019B                     	;# 
  2073     019B                     	;# 
  2074     019B                     	;# 
  2075     019B                     	;# 
  2076     019C                     	;# 
  2077     019C                     	;# 
  2078     019D                     	;# 
  2079     019E                     	;# 
  2080     019F                     	;# 
  2081     020C                     	;# 
  2082     020D                     	;# 
  2083     0211                     	;# 
  2084     0211                     	;# 
  2085     0212                     	;# 
  2086     0212                     	;# 
  2087     0213                     	;# 
  2088     0213                     	;# 
  2089     0214                     	;# 
  2090     0214                     	;# 
  2091     0215                     	;# 
  2092     0215                     	;# 
  2093     0215                     	;# 
  2094     0216                     	;# 
  2095     0216                     	;# 
  2096     0217                     	;# 
  2097     0217                     	;# 
  2098     0219                     	;# 
  2099     021A                     	;# 
  2100     021B                     	;# 
  2101     021C                     	;# 
  2102     021D                     	;# 
  2103     021E                     	;# 
  2104     021F                     	;# 
  2105     0291                     	;# 
  2106     0291                     	;# 
  2107     0292                     	;# 
  2108     0293                     	;# 
  2109     0294                     	;# 
  2110     0295                     	;# 
  2111     0295                     	;# 
  2112     0296                     	;# 
  2113     0298                     	;# 
  2114     0298                     	;# 
  2115     0299                     	;# 
  2116     029A                     	;# 
  2117     029B                     	;# 
  2118     029C                     	;# 
  2119     029C                     	;# 
  2120     029D                     	;# 
  2121     029E                     	;# 
  2122     029E                     	;# 
  2123     0311                     	;# 
  2124     0311                     	;# 
  2125     0312                     	;# 
  2126     0313                     	;# 
  2127     0318                     	;# 
  2128     0318                     	;# 
  2129     0319                     	;# 
  2130     031A                     	;# 
  2131     0394                     	;# 
  2132     0395                     	;# 
  2133     0396                     	;# 
  2134     039A                     	;# 
  2135     039C                     	;# 
  2136     039D                     	;# 
  2137     039E                     	;# 
  2138     039F                     	;# 
  2139     0415                     	;# 
  2140     0416                     	;# 
  2141     0417                     	;# 
  2142     041C                     	;# 
  2143     041D                     	;# 
  2144     041E                     	;# 
  2145     0FE4                     	;# 
  2146     0FE5                     	;# 
  2147     0FE6                     	;# 
  2148     0FE7                     	;# 
  2149     0FE8                     	;# 
  2150     0FE9                     	;# 
  2151     0FEA                     	;# 
  2152     0FEB                     	;# 
  2153     0FED                     	;# 
  2154     0FEE                     	;# 
  2155     0FEF                     	;# 
  2156                           
  2157 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  2158     0000                     
  2159 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  2160     0000                     
  2161 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  2162     0000                     
  2163                           	psect	idataBANK0
  2164     015C                     __pidataBANK0:
  2165                           
  2166                           ;initializer for _mapping
  2167     015C  3437               	retlw	55
  2168     015D  3438               	retlw	56
  2169     015E  3439               	retlw	57
  2170     015F  3401               	retlw	1
  2171     0160  3409               	retlw	9
  2172     0161  3408               	retlw	8
  2173     0162  3407               	retlw	7
  2174     0163  343F               	retlw	63
  2175                           
  2176                           ;initializer for _snakeSize
  2177     0164  3401               	retlw	1
  2178                           
  2179                           	psect	stringtext1
  2180     0800                     __pstringtext1:
  2181     0800                     _de_sigmoidValues:
  2182     0800  3400               	retlw	0
  2183     0801  3400               	retlw	0
  2184     0802  3401               	retlw	1
  2185     0803  3402               	retlw	2
  2186     0804  3405               	retlw	5
  2187     0805  340C               	retlw	12
  2188     0806  341B               	retlw	27
  2189     0807  3432               	retlw	50
  2190     0808  3440               	retlw	64
  2191     0809  3432               	retlw	50
  2192     080A  341B               	retlw	27
  2193     080B  340C               	retlw	12
  2194     080C  3405               	retlw	5
  2195     080D  3402               	retlw	2
  2196     080E  3401               	retlw	1
  2197     080F  3400               	retlw	0
  2198     0810                     __end_of_de_sigmoidValues:
  2199                           
  2200                           	psect	stringtext2
  2201     0810                     __pstringtext2:
  2202     0810                     _sigmoidValues:
  2203     0810  3400               	retlw	0
  2204     0811  3400               	retlw	0
  2205     0812  3401               	retlw	1
  2206     0813  3402               	retlw	2
  2207     0814  3405               	retlw	5
  2208     0815  340C               	retlw	12
  2209     0816  341E               	retlw	30
  2210     0817  3445               	retlw	69
  2211     0818  3480               	retlw	128
  2212     0819  34BA               	retlw	186
  2213     081A  34E1               	retlw	225
  2214     081B  34F3               	retlw	243
  2215     081C  34FA               	retlw	250
  2216     081D  34FD               	retlw	253
  2217     081E  34FE               	retlw	254
  2218     081F  34FF               	retlw	255
  2219     0820                     __end_of_sigmoidValues:
  2220                           
  2221                           	psect	stringtext3
  2222     0820                     __pstringtext3:
  2223     0820                     _spi1_configuration:
  2224     0820  3402               	retlw	2
  2225     0821  3440               	retlw	64
  2226     0822  3401               	retlw	1
  2227     0823  3400               	retlw	0
  2228     0824                     __end_of_spi1_configuration:
  2229                           
  2230                           	psect	nvBANK0
  2231     0067                     __pnvBANK0:
  2232     0067                     _EUSART_ErrorHandler:
  2233     0067                     	ds	2
  2234     0069                     _EUSART_OverrunErrorHandler:
  2235     0069                     	ds	2
  2236     006B                     _EUSART_FramingErrorHandler:
  2237     006B                     	ds	2
  2238     0003                     _STATUSbits	set	3
  2239     0011                     _PIR1bits	set	17
  2240     000B                     _INTCONbits	set	11
  2241     0097                     _WDTCON	set	151
  2242     0098                     _OSCTUNE	set	152
  2243     0099                     _OSCCON	set	153
  2244     008D                     _TRISBbits	set	141
  2245     0095                     _OPTION_REGbits	set	149
  2246     008D                     _TRISB	set	141
  2247     008C                     _TRISA	set	140
  2248     010D                     _LATBbits	set	269
  2249     0116                     _BORCON	set	278
  2250     011E                     _APFCON1	set	286
  2251     011D                     _APFCON0	set	285
  2252     010D                     _LATB	set	269
  2253     010C                     _LATA	set	268
  2254     0191                     _EEADR	set	401
  2255     0193                     _EEDATA	set	403
  2256     0195                     _EECON1	set	405
  2257     018C                     _ANSELA	set	396
  2258     018D                     _ANSELB	set	397
  2259     019A                     _TXREG	set	410
  2260     0199                     _RCREG	set	409
  2261     019D                     _RCSTAbits	set	413
  2262     019E                     _TXSTAbits	set	414
  2263     019C                     _SPBRGH	set	412
  2264     019B                     _SPBRGL	set	411
  2265     019E                     _TXSTA	set	414
  2266     019D                     _RCSTA	set	413
  2267     019F                     _BAUDCON	set	415
  2268     0196                     _EECON2	set	406
  2269     0193                     _EEDATL	set	403
  2270     0194                     _EEDATH	set	404
  2271     0195                     _EECON1bits	set	405
  2272     0192                     _EEADRH	set	402
  2273     0191                     _EEADRL	set	401
  2274     0211                     _SSP1BUF	set	529
  2275     0216                     _SSP1CON2	set	534
  2276     0215                     _SSP1CON1bits	set	533
  2277     0212                     _SSP1ADD	set	530
  2278     0215                     _SSP1CON1	set	533
  2279     0214                     _SSP1STAT	set	532
  2280     020C                     _WPUA	set	524
  2281     020D                     _WPUB	set	525
  2282                           
  2283                           	psect	cinit
  2284     07D9                     start_initialization:	
  2285                           ; #config settings
  2286                           
  2287     07D9                     __initialization:
  2288                           
  2289                           ; Initialize objects allocated to BANK0
  2290     07D9  305C               	movlw	low __pidataBANK0
  2291     07DA  0084               	movwf	4
  2292     07DB  3081               	movlw	(high __pidataBANK0)| (0+128)
  2293     07DC  0085               	movwf	5
  2294     07DD  305E               	movlw	low __pdataBANK0
  2295     07DE  0086               	movwf	6
  2296     07DF  3000               	movlw	high __pdataBANK0
  2297     07E0  0087               	movwf	7
  2298     07E1  3009               	movlw	9
  2299     07E2  3181  2141  3187   	fcall	init_ram
  2300                           
  2301                           ; Clear objects allocated to BANK0
  2302     07E5  3020               	movlw	low __pbssBANK0
  2303     07E6  0084               	movwf	4
  2304     07E7  3000               	movlw	high __pbssBANK0
  2305     07E8  0085               	movwf	5
  2306     07E9  3028               	movlw	40
  2307     07EA  3181  213B  3187   	fcall	clear_ram0
  2308                           
  2309                           ; Clear objects allocated to BANK1
  2310     07ED  30A0               	movlw	low __pbssBANK1
  2311     07EE  0084               	movwf	4
  2312     07EF  3000               	movlw	high __pbssBANK1
  2313     07F0  0085               	movwf	5
  2314     07F1  3024               	movlw	36
  2315     07F2  3181  213B  3187   	fcall	clear_ram0
  2316                           
  2317                           ; Clear objects allocated to BANK2
  2318     07F5  3020               	movlw	low __pbssBANK2
  2319     07F6  0084               	movwf	4
  2320     07F7  3001               	movlw	high __pbssBANK2
  2321     07F8  0085               	movwf	5
  2322     07F9  3040               	movlw	64
  2323     07FA  3181  213B  3187   	fcall	clear_ram0
  2324     07FD                     end_of_initialization:	
  2325                           ;End of C runtime variable initialization code
  2326                           
  2327     07FD                     __end_of__initialization:
  2328     07FD  0020               	movlb	0
  2329     07FE  3184  2CBE         	ljmp	_main	;jump to C main() function
  2330                           
  2331                           	psect	bssBANK0
  2332     0020                     __pbssBANK0:
  2333     0020                     _Z2:
  2334     0020                     	ds	10
  2335     002A                     _Y1:
  2336     002A                     	ds	10
  2337     0034                     _matrix:
  2338     0034                     	ds	8
  2339     003C                     _Y2:
  2340     003C                     	ds	5
  2341     0041                     _foodPosition:
  2342     0041                     	ds	1
  2343     0042                     _headPosition:
  2344     0042                     	ds	1
  2345     0043                     _eusartRxLastError:
  2346     0043                     	ds	1
  2347     0044                     _seed:
  2348     0044                     	ds	4
  2349                           
  2350                           	psect	dataBANK0
  2351     005E                     __pdataBANK0:
  2352     005E                     _mapping:
  2353     005E                     	ds	8
  2354     0066                     _snakeSize:
  2355     0066                     	ds	1
  2356                           
  2357                           	psect	bssBANK1
  2358     00A0                     __pbssBANK1:
  2359     00A0                     _Z1:
  2360     00A0                     	ds	20
  2361     00B4                     _Y0:
  2362     00B4                     	ds	16
  2363                           
  2364                           	psect	bssBANK2
  2365     0120                     __pbssBANK2:
  2366     0120                     _field:
  2367     0120                     	ds	64
  2368                           
  2369                           	psect	inittext
  2370     0141                     init_ram:
  2371     0141  00FE               	movwf	btemp
  2372     0142                     initloop:
  2373     0142  0012               	moviw fsr0++
  2374     0143  001E               	movwi fsr1++
  2375     0144  0BFE               	decfsz	btemp,f
  2376     0145  2942               	goto	initloop
  2377     0146  3400               	retlw	0
  2378                           
  2379                           	psect	clrtext
  2380     013B                     clear_ram0:	
  2381                           ;	Called with FSR0 containing the base address, and
  2382                           ;	WREG with the size to clear
  2383                           
  2384     013B  0064               	clrwdt	;clear the watchdog before getting into this loop
  2385     013C                     clrloop0:
  2386     013C  0180               	clrf	0	;clear RAM location pointed to by FSR
  2387     013D  3101               	addfsr 0,1
  2388     013E  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2389     013F  293C               	goto	clrloop0	;have we reached the end yet?
  2390     0140  3400               	retlw	0	;all done for this memory range, return
  2391                           
  2392                           	psect	cstackCOMMON
  2393     0070                     __pcstackCOMMON:
  2394     0070                     ?_EUSART_SetFramingErrorHandler:
  2395     0070                     ?_EUSART_SetOverrunErrorHandler:	
  2396                           ; 1 bytes @ 0x0
  2397                           
  2398     0070                     ?_EUSART_SetErrorHandler:	
  2399                           ; 1 bytes @ 0x0
  2400                           
  2401     0070                     ?_OSCILLATOR_Initialize:	
  2402                           ; 1 bytes @ 0x0
  2403                           
  2404     0070                     ??_OSCILLATOR_Initialize:	
  2405                           ; 1 bytes @ 0x0
  2406                           
  2407     0070                     ?_WDT_Initialize:	
  2408                           ; 1 bytes @ 0x0
  2409                           
  2410     0070                     ??_WDT_Initialize:	
  2411                           ; 1 bytes @ 0x0
  2412                           
  2413     0070                     ?_snake_initiate:	
  2414                           ; 1 bytes @ 0x0
  2415                           
  2416     0070                     ?_ai_initiate:	
  2417                           ; 1 bytes @ 0x0
  2418                           
  2419     0070                     ?_initMAX7219:	
  2420                           ; 1 bytes @ 0x0
  2421                           
  2422     0070                     ?_snake_getField:	
  2423                           ; 1 bytes @ 0x0
  2424                           
  2425     0070                     ??_snake_getField:	
  2426                           ; 1 bytes @ 0x0
  2427                           
  2428     0070                     ?_ai_is_ai_trained_read:	
  2429                           ; 1 bytes @ 0x0
  2430                           
  2431     0070                     ?_snake_getSurroundings:	
  2432                           ; 1 bytes @ 0x0
  2433                           
  2434     0070                     ??_snake_getSurroundings:	
  2435                           ; 1 bytes @ 0x0
  2436                           
  2437     0070                     ?_ai_getInputField:	
  2438                           ; 1 bytes @ 0x0
  2439                           
  2440     0070                     ??_ai_getInputField:	
  2441                           ; 1 bytes @ 0x0
  2442                           
  2443     0070                     ?_ai_propagate:	
  2444                           ; 1 bytes @ 0x0
  2445                           
  2446     0070                     ??_ai_propagate:	
  2447                           ; 1 bytes @ 0x0
  2448                           
  2449     0070                     ?_snake_move:	
  2450                           ; 1 bytes @ 0x0
  2451                           
  2452     0070                     ?_ai_run:	
  2453                           ; 1 bytes @ 0x0
  2454                           
  2455     0070                     ?_ai_is_ai_trained_write:	
  2456                           ; 1 bytes @ 0x0
  2457                           
  2458     0070                     ?_ledSet:	
  2459                           ; 1 bytes @ 0x0
  2460                           
  2461     0070                     ?_ledClear:	
  2462                           ; 1 bytes @ 0x0
  2463                           
  2464     0070                     ?_snake_getFoodPosition:	
  2465                           ; 1 bytes @ 0x0
  2466                           
  2467     0070                     ??_snake_getFoodPosition:	
  2468                           ; 1 bytes @ 0x0
  2469                           
  2470     0070                     ?_sendMatrix:	
  2471                           ; 1 bytes @ 0x0
  2472                           
  2473     0070                     ?_eeprom_read:	
  2474                           ; 1 bytes @ 0x0
  2475                           
  2476     0070                     ??_eeprom_read:	
  2477                           ; 1 bytes @ 0x0
  2478                           
  2479     0070                     ?_sigmoid:	
  2480                           ; 1 bytes @ 0x0
  2481                           
  2482     0070                     ??_sigmoid:	
  2483                           ; 1 bytes @ 0x0
  2484                           
  2485     0070                     ?_EUSART_Initialize:	
  2486                           ; 1 bytes @ 0x0
  2487                           
  2488     0070                     ?_PIN_MANAGER_Initialize:	
  2489                           ; 1 bytes @ 0x0
  2490                           
  2491     0070                     ??_PIN_MANAGER_Initialize:	
  2492                           ; 1 bytes @ 0x0
  2493                           
  2494     0070                     ?_SPI1_Initialize:	
  2495                           ; 1 bytes @ 0x0
  2496                           
  2497     0070                     ??_SPI1_Initialize:	
  2498                           ; 1 bytes @ 0x0
  2499                           
  2500     0070                     ?_SPI1_WriteByte:	
  2501                           ; 1 bytes @ 0x0
  2502                           
  2503     0070                     ??_SPI1_WriteByte:	
  2504                           ; 1 bytes @ 0x0
  2505                           
  2506     0070                     ?_SYSTEM_Initialize:	
  2507                           ; 1 bytes @ 0x0
  2508                           
  2509     0070                     ?_main:	
  2510                           ; 1 bytes @ 0x0
  2511                           
  2512     0070                     ?_biases1_read:	
  2513                           ; 1 bytes @ 0x0
  2514                           
  2515     0070                     ?_biases2_read:	
  2516                           ; 1 bytes @ 0x0
  2517                           
  2518     0070                     ?_ai_is_ai_initiated_write:	
  2519                           ; 1 bytes @ 0x0
  2520                           
  2521     0070                     ?_ai_is_ai_initiated_read:	
  2522                           ; 1 bytes @ 0x0
  2523                           
  2524     0070                     ?___bmul:	
  2525                           ; 1 bytes @ 0x0
  2526                           
  2527     0070                     ?___awdiv:	
  2528                           ; 1 bytes @ 0x0
  2529                           
  2530     0070                     ?___lmul:	
  2531                           ; 2 bytes @ 0x0
  2532                           
  2533     0070                     SPI1_WriteByte@byte:	
  2534                           ; 4 bytes @ 0x0
  2535                           
  2536     0070                     ledSet@c:	
  2537                           ; 1 bytes @ 0x0
  2538                           
  2539     0070                     ledClear@c:	
  2540                           ; 1 bytes @ 0x0
  2541                           
  2542     0070                     ai_propagate@incentive:	
  2543                           ; 1 bytes @ 0x0
  2544                           
  2545     0070                     ___bmul@multiplicand:	
  2546                           ; 1 bytes @ 0x0
  2547                           
  2548     0070                     EUSART_SetFramingErrorHandler@interruptHandler:	
  2549                           ; 1 bytes @ 0x0
  2550                           
  2551     0070                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  2552                           ; 2 bytes @ 0x0
  2553                           
  2554     0070                     EUSART_SetErrorHandler@interruptHandler:	
  2555                           ; 2 bytes @ 0x0
  2556                           
  2557     0070                     ___awdiv@divisor:	
  2558                           ; 2 bytes @ 0x0
  2559                           
  2560     0070                     ___lmul@multiplier:	
  2561                           ; 2 bytes @ 0x0
  2562                           
  2563                           
  2564                           ; 4 bytes @ 0x0
  2565     0070                     	ds	1
  2566     0071                     ??_ledSet:
  2567     0071                     ??_ledClear:	
  2568                           ; 1 bytes @ 0x1
  2569                           
  2570     0071                     ?_txMAX7219:	
  2571                           ; 1 bytes @ 0x1
  2572                           
  2573     0071                     ??___bmul:	
  2574                           ; 1 bytes @ 0x1
  2575                           
  2576     0071                     txMAX7219@dat0:	
  2577                           ; 1 bytes @ 0x1
  2578                           
  2579     0071                     snake_getSurroundings@p:	
  2580                           ; 1 bytes @ 0x1
  2581                           
  2582     0071                     sigmoid@z:	
  2583                           ; 1 bytes @ 0x1
  2584                           
  2585                           
  2586                           ; 1 bytes @ 0x1
  2587     0071                     	ds	1
  2588     0072                     ??_EUSART_SetFramingErrorHandler:
  2589     0072                     ??_EUSART_SetOverrunErrorHandler:	
  2590                           ; 1 bytes @ 0x2
  2591                           
  2592     0072                     ??_EUSART_SetErrorHandler:	
  2593                           ; 1 bytes @ 0x2
  2594                           
  2595     0072                     ??_EUSART_Initialize:	
  2596                           ; 1 bytes @ 0x2
  2597                           
  2598     0072                     ??_SYSTEM_Initialize:	
  2599                           ; 1 bytes @ 0x2
  2600                           
  2601     0072                     ??_txMAX7219:	
  2602                           ; 1 bytes @ 0x2
  2603                           
  2604     0072                     txMAX7219@addr0:	
  2605                           ; 1 bytes @ 0x2
  2606                           
  2607     0072                     snake_getSurroundings@i:	
  2608                           ; 1 bytes @ 0x2
  2609                           
  2610     0072                     ___bmul@product:	
  2611                           ; 1 bytes @ 0x2
  2612                           
  2613     0072                     ___awdiv@dividend:	
  2614                           ; 1 bytes @ 0x2
  2615                           
  2616                           
  2617                           ; 2 bytes @ 0x2
  2618     0072                     	ds	1
  2619     0073                     ??_initMAX7219:
  2620     0073                     ??_sendMatrix:	
  2621                           ; 1 bytes @ 0x3
  2622                           
  2623     0073                     ledSet@l:	
  2624                           ; 1 bytes @ 0x3
  2625                           
  2626     0073                     ledClear@l:	
  2627                           ; 1 bytes @ 0x3
  2628                           
  2629     0073                     snake_getSurroundings@i_692:	
  2630                           ; 1 bytes @ 0x3
  2631                           
  2632     0073                     eeprom_read@addr:	
  2633                           ; 1 bytes @ 0x3
  2634                           
  2635     0073                     ___bmul@multiplier:	
  2636                           ; 1 bytes @ 0x3
  2637                           
  2638                           
  2639                           ; 1 bytes @ 0x3
  2640     0073                     	ds	1
  2641     0074                     ??_ai_is_ai_trained_read:
  2642     0074                     ?_eeprom_write:	
  2643                           ; 1 bytes @ 0x4
  2644                           
  2645     0074                     ?_weights1_read:	
  2646                           ; 1 bytes @ 0x4
  2647                           
  2648     0074                     ??_biases1_read:	
  2649                           ; 1 bytes @ 0x4
  2650                           
  2651     0074                     ?_weights2_read:	
  2652                           ; 1 bytes @ 0x4
  2653                           
  2654     0074                     ??_biases2_read:	
  2655                           ; 1 bytes @ 0x4
  2656                           
  2657     0074                     ??_ai_is_ai_initiated_read:	
  2658                           ; 1 bytes @ 0x4
  2659                           
  2660     0074                     ??___awdiv:	
  2661                           ; 1 bytes @ 0x4
  2662                           
  2663     0074                     sendMatrix@b:	
  2664                           ; 1 bytes @ 0x4
  2665                           
  2666     0074                     snake_getSurroundings@surroundings:	
  2667                           ; 1 bytes @ 0x4
  2668                           
  2669     0074                     weights1_read@add2:	
  2670                           ; 1 bytes @ 0x4
  2671                           
  2672     0074                     biases1_read@add:	
  2673                           ; 1 bytes @ 0x4
  2674                           
  2675     0074                     weights2_read@add2:	
  2676                           ; 1 bytes @ 0x4
  2677                           
  2678     0074                     biases2_read@add:	
  2679                           ; 1 bytes @ 0x4
  2680                           
  2681     0074                     eeprom_write@value:	
  2682                           ; 1 bytes @ 0x4
  2683                           
  2684     0074                     ___lmul@multiplicand:	
  2685                           ; 1 bytes @ 0x4
  2686                           
  2687                           
  2688                           ; 4 bytes @ 0x4
  2689     0074                     	ds	1
  2690     0075                     ??_eeprom_write:
  2691     0075                     ??_weights1_read:	
  2692                           ; 1 bytes @ 0x5
  2693                           
  2694     0075                     ??_weights2_read:	
  2695                           ; 1 bytes @ 0x5
  2696                           
  2697     0075                     sendMatrix@nb:	
  2698                           ; 1 bytes @ 0x5
  2699                           
  2700     0075                     weights2_read@add1:	
  2701                           ; 1 bytes @ 0x5
  2702                           
  2703     0075                     ___awdiv@counter:	
  2704                           ; 1 bytes @ 0x5
  2705                           
  2706                           
  2707                           ; 1 bytes @ 0x5
  2708     0075                     	ds	1
  2709     0076                     sendMatrix@j:
  2710     0076                     weights1_read@add1:	
  2711                           ; 1 bytes @ 0x6
  2712                           
  2713     0076                     ___awdiv@sign:	
  2714                           ; 1 bytes @ 0x6
  2715                           
  2716                           
  2717                           ; 1 bytes @ 0x6
  2718     0076                     	ds	1
  2719     0077                     ?___wmul:
  2720     0077                     sendMatrix@i:	
  2721                           ; 2 bytes @ 0x7
  2722                           
  2723     0077                     eeprom_write@addr:	
  2724                           ; 1 bytes @ 0x7
  2725                           
  2726     0077                     ___wmul@multiplier:	
  2727                           ; 1 bytes @ 0x7
  2728                           
  2729     0077                     ___awdiv@quotient:	
  2730                           ; 2 bytes @ 0x7
  2731                           
  2732                           
  2733                           ; 2 bytes @ 0x7
  2734     0077                     	ds	1
  2735     0078                     ??_ai_is_ai_trained_write:
  2736     0078                     ??_ai_is_ai_initiated_write:	
  2737                           ; 1 bytes @ 0x8
  2738                           
  2739     0078                     ??___lmul:	
  2740                           ; 1 bytes @ 0x8
  2741                           
  2742     0078                     ___lmul@product:	
  2743                           ; 1 bytes @ 0x8
  2744                           
  2745                           
  2746                           ; 4 bytes @ 0x8
  2747     0078                     	ds	1
  2748     0079                     ai_is_ai_initiated_write@val:
  2749     0079                     ai_is_ai_trained_write@val:	
  2750                           ; 1 bytes @ 0x9
  2751                           
  2752     0079                     ___wmul@multiplicand:	
  2753                           ; 1 bytes @ 0x9
  2754                           
  2755                           
  2756                           ; 2 bytes @ 0x9
  2757     0079                     	ds	1
  2758     007A                     ai_is_ai_initiated_write@c:
  2759     007A                     ai_is_ai_trained_write@c:	
  2760                           ; 1 bytes @ 0xA
  2761                           
  2762                           
  2763                           ; 1 bytes @ 0xA
  2764     007A                     	ds	1
  2765     007B                     ??___wmul:
  2766     007B                     ___wmul@product:	
  2767                           ; 1 bytes @ 0xB
  2768                           
  2769                           
  2770                           ; 2 bytes @ 0xB
  2771     007B                     	ds	1
  2772     007C                     ?_rand:
  2773                           
  2774                           ; 2 bytes @ 0xC
  2775     007C                     	ds	2
  2776     007E                     ??_biases1_write:
  2777     007E                     ??_weights2_write:	
  2778                           ; 1 bytes @ 0xE
  2779                           
  2780     007E                     ??_biases2_write:	
  2781                           ; 1 bytes @ 0xE
  2782                           
  2783                           
  2784                           	psect	cstackBANK0
  2785     0048                     __pcstackBANK0:	
  2786                           ; 1 bytes @ 0xE
  2787                           
  2788     0048                     ??_ai_run:
  2789     0048                     ??_rand:	
  2790                           ; 1 bytes @ 0x0
  2791                           
  2792                           
  2793                           ; 1 bytes @ 0x0
  2794     0048                     	ds	2
  2795     004A                     ai_run@choice:
  2796                           
  2797                           ; 1 bytes @ 0x2
  2798     004A                     	ds	1
  2799     004B                     ai_run@i:
  2800                           
  2801                           ; 1 bytes @ 0x3
  2802     004B                     	ds	1
  2803     004C                     ??_snake_initiate:
  2804     004C                     ?_weights1_write:	
  2805                           ; 1 bytes @ 0x4
  2806                           
  2807     004C                     ?_biases1_write:	
  2808                           ; 1 bytes @ 0x4
  2809                           
  2810     004C                     ?_weights2_write:	
  2811                           ; 1 bytes @ 0x4
  2812                           
  2813     004C                     ?_biases2_write:	
  2814                           ; 1 bytes @ 0x4
  2815                           
  2816     004C                     weights1_write@add2:	
  2817                           ; 1 bytes @ 0x4
  2818                           
  2819     004C                     biases1_write@val:	
  2820                           ; 1 bytes @ 0x4
  2821                           
  2822     004C                     weights2_write@add2:	
  2823                           ; 1 bytes @ 0x4
  2824                           
  2825     004C                     biases2_write@val:	
  2826                           ; 1 bytes @ 0x4
  2827                           
  2828     004C                     ai_run@i_784:	
  2829                           ; 1 bytes @ 0x4
  2830                           
  2831                           
  2832                           ; 1 bytes @ 0x4
  2833     004C                     	ds	1
  2834     004D                     snake_initiate@i:
  2835     004D                     weights1_write@val:	
  2836                           ; 1 bytes @ 0x5
  2837                           
  2838     004D                     biases1_write@add:	
  2839                           ; 1 bytes @ 0x5
  2840                           
  2841     004D                     weights2_write@val:	
  2842                           ; 1 bytes @ 0x5
  2843                           
  2844     004D                     biases2_write@add:	
  2845                           ; 1 bytes @ 0x5
  2846                           
  2847     004D                     ai_run@i_787:	
  2848                           ; 1 bytes @ 0x5
  2849                           
  2850                           
  2851                           ; 1 bytes @ 0x5
  2852     004D                     	ds	1
  2853     004E                     ??_snake_move:
  2854     004E                     ??_weights1_write:	
  2855                           ; 1 bytes @ 0x6
  2856                           
  2857     004E                     weights2_write@add1:	
  2858                           ; 1 bytes @ 0x6
  2859                           
  2860     004E                     ai_run@z:	
  2861                           ; 1 bytes @ 0x6
  2862                           
  2863                           
  2864                           ; 2 bytes @ 0x6
  2865     004E                     	ds	1
  2866     004F                     weights1_write@add1:
  2867                           
  2868                           ; 1 bytes @ 0x7
  2869     004F                     	ds	1
  2870     0050                     ??_ai_initiate:
  2871     0050                     snake_move@direction:	
  2872                           ; 1 bytes @ 0x8
  2873                           
  2874     0050                     ai_run@j:	
  2875                           ; 1 bytes @ 0x8
  2876                           
  2877                           
  2878                           ; 1 bytes @ 0x8
  2879     0050                     	ds	1
  2880     0051                     snake_move@incentive:
  2881     0051                     ai_initiate@i:	
  2882                           ; 1 bytes @ 0x9
  2883                           
  2884     0051                     ai_run@j_782:	
  2885                           ; 1 bytes @ 0x9
  2886                           
  2887                           
  2888                           ; 1 bytes @ 0x9
  2889     0051                     	ds	1
  2890     0052                     snake_move@i:
  2891     0052                     ai_initiate@i_772:	
  2892                           ; 1 bytes @ 0xA
  2893                           
  2894                           
  2895                           ; 1 bytes @ 0xA
  2896     0052                     	ds	1
  2897     0053                     ai_initiate@j:
  2898                           
  2899                           ; 1 bytes @ 0xB
  2900     0053                     	ds	1
  2901     0054                     ai_initiate@j_770:
  2902                           
  2903                           ; 1 bytes @ 0xC
  2904     0054                     	ds	1
  2905     0055                     ??_main:
  2906                           
  2907                           ; 1 bytes @ 0xD
  2908     0055                     	ds	3
  2909     0058                     main@field:
  2910                           
  2911                           ; 1 bytes @ 0x10
  2912     0058                     	ds	1
  2913     0059                     main@i:
  2914                           
  2915                           ; 2 bytes @ 0x11
  2916     0059                     	ds	2
  2917     005B                     main@foodPosition:
  2918                           
  2919                           ; 1 bytes @ 0x13
  2920     005B                     	ds	1
  2921     005C                     main@i_588:
  2922                           
  2923                           ; 1 bytes @ 0x14
  2924     005C                     	ds	1
  2925     005D                     main@j:
  2926                           
  2927                           ; 1 bytes @ 0x15
  2928     005D                     	ds	1
  2929                           
  2930                           	psect	maintext
  2931     04BE                     __pmaintext:	
  2932 ;;
  2933 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  2934 ;;
  2935 ;; *************** function _main *****************
  2936 ;; Defined at:
  2937 ;;		line 53 in file "main.c"
  2938 ;; Parameters:    Size  Location     Type
  2939 ;;		None
  2940 ;; Auto vars:     Size  Location     Type
  2941 ;;  j               1   21[BANK0 ] unsigned char 
  2942 ;;  i               1   20[BANK0 ] unsigned char 
  2943 ;;  i               2   17[BANK0 ] int 
  2944 ;;  foodPosition    1   19[BANK0 ] unsigned char 
  2945 ;;  field           1   16[BANK0 ] PTR unsigned char 
  2946 ;;		 -> field(64), 
  2947 ;; Return value:  Size  Location     Type
  2948 ;;                  1    wreg      void 
  2949 ;; Registers used:
  2950 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2951 ;; Tracked objects:
  2952 ;;		On entry : B1F/0
  2953 ;;		On exit  : 0/0
  2954 ;;		Unchanged: 0/0
  2955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2956 ;;      Params:         0       0       0       0       0       0
  2957 ;;      Locals:         0       6       0       0       0       0
  2958 ;;      Temps:          0       3       0       0       0       0
  2959 ;;      Totals:         0       9       0       0       0       0
  2960 ;;Total ram usage:        9 bytes
  2961 ;; Hardware stack levels required when called: 4
  2962 ;; This function calls:
  2963 ;;		_SYSTEM_Initialize
  2964 ;;		_ai_getInputField
  2965 ;;		_ai_initiate
  2966 ;;		_ai_is_ai_trained_read
  2967 ;;		_ai_is_ai_trained_write
  2968 ;;		_ai_propagate
  2969 ;;		_ai_run
  2970 ;;		_initMAX7219
  2971 ;;		_ledClear
  2972 ;;		_ledSet
  2973 ;;		_sendMatrix
  2974 ;;		_snake_getField
  2975 ;;		_snake_getFoodPosition
  2976 ;;		_snake_getSurroundings
  2977 ;;		_snake_initiate
  2978 ;;		_snake_move
  2979 ;; This function is called by:
  2980 ;;		Startup code after reset
  2981 ;; This function uses a non-reentrant model
  2982 ;;
  2983                           
  2984     04BE                     _main:	
  2985                           ;psect for function _main
  2986                           
  2987     04BE                     l2710:	
  2988                           ;incstack = 0
  2989                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2990                           
  2991                           
  2992                           ;main.c: 56:     SYSTEM_Initialize();
  2993     04BE  3181  21A0  3184   	fcall	_SYSTEM_Initialize
  2994     04C1                     l2712:
  2995                           
  2996                           ;main.c: 73:     snake_initiate();
  2997     04C1  3182  22D2  3184   	fcall	_snake_initiate
  2998     04C4                     l2714:
  2999                           
  3000                           ;main.c: 74:     ai_initiate();
  3001     04C4  3184  2453  3184   	fcall	_ai_initiate
  3002     04C7                     l2716:
  3003                           
  3004                           ;main.c: 75:     initMAX7219();
  3005     04C7  3183  23BA  3184   	fcall	_initMAX7219
  3006     04CA                     l2718:
  3007                           
  3008                           ;main.c: 77:     uint8_t* field = snake_getField();
  3009     04CA  3181  210F  3184   	fcall	_snake_getField
  3010     04CD  0020               	movlb	0	; select bank0
  3011     04CE  00D8               	movwf	main@field
  3012     04CF                     l2720:
  3013                           
  3014                           ;main.c: 79:     if(ai_is_ai_trained_read()==0){
  3015     04CF  3181  2135  3184   	fcall	_ai_is_ai_trained_read
  3016     04D2  3A00               	xorlw	0
  3017     04D3  1D03               	skipz
  3018     04D4  2CD6               	goto	u1671
  3019     04D5  2CD7               	goto	u1670
  3020     04D6                     u1671:
  3021     04D6  2CFF               	goto	l2738
  3022     04D7                     u1670:
  3023     04D7                     l2722:
  3024                           
  3025                           ;main.c: 80:         for(int i = 0; i < 1000; i++){
  3026     04D7  0020               	movlb	0	; select bank0
  3027     04D8  01D9               	clrf	main@i
  3028     04D9  01DA               	clrf	main@i+1
  3029     04DA                     l2728:
  3030                           
  3031                           ;main.c: 81:             snake_getSurroundings(ai_getInputField());
  3032     04DA  3181  210D  3184   	fcall	_ai_getInputField
  3033     04DD  3186  2621  3184   	fcall	_snake_getSurroundings
  3034     04E0                     l2730:
  3035                           
  3036                           ;main.c: 82:             ai_propagate(snake_move(ai_run()));
  3037     04E0  3186  26D7  3184   	fcall	_ai_run
  3038     04E3  3185  256E  3184   	fcall	_snake_move
  3039     04E6  3181  210C  3184   	fcall	_ai_propagate
  3040     04E9                     l2732:
  3041                           
  3042                           ;main.c: 83:         }
  3043     04E9  3001               	movlw	1
  3044     04EA  0020               	movlb	0	; select bank0
  3045     04EB  07D9               	addwf	main@i,f
  3046     04EC  3000               	movlw	0
  3047     04ED  3DDA               	addwfc	main@i+1,f
  3048     04EE                     l2734:
  3049     04EE  085A               	movf	main@i+1,w
  3050     04EF  3A80               	xorlw	128
  3051     04F0  00D5               	movwf	??_main
  3052     04F1  3083               	movlw	131
  3053     04F2  0255               	subwf	??_main,w
  3054     04F3  1D03               	skipz
  3055     04F4  2CF7               	goto	u1685
  3056     04F5  30E8               	movlw	232
  3057     04F6  0259               	subwf	main@i,w
  3058     04F7                     u1685:
  3059     04F7  1C03               	skipc
  3060     04F8  2CFA               	goto	u1681
  3061     04F9  2CFB               	goto	u1680
  3062     04FA                     u1681:
  3063     04FA  2CDA               	goto	l2728
  3064     04FB                     u1680:
  3065     04FB                     l2736:
  3066                           
  3067                           ;main.c: 84:         ai_is_ai_trained_write(1);
  3068     04FB  3001               	movlw	1
  3069     04FC  3182  225F  3184   	fcall	_ai_is_ai_trained_write
  3070     04FF                     l2738:
  3071                           
  3072                           ;main.c: 88:     {;main.c: 90:         _delay((unsigned long)((500)*(8000000/4000.0)));
  3073     04FF  3006               	movlw	6
  3074     0500  0020               	movlb	0	; select bank0
  3075     0501  00D6               	movwf	??_main+1
  3076     0502  3013               	movlw	19
  3077     0503  00D5               	movwf	??_main
  3078     0504  30AD               	movlw	173
  3079     0505                     u1747:
  3080     0505  0B89               	decfsz	9,f
  3081     0506  2D05               	goto	u1747
  3082     0507  0BD5               	decfsz	??_main,f
  3083     0508  2D05               	goto	u1747
  3084     0509  0BD6               	decfsz	??_main+1,f
  3085     050A  2D05               	goto	u1747
  3086     050B  3200               	nop2
  3087     050C                     l2740:
  3088                           
  3089                           ;main.c: 91:         snake_getSurroundings(ai_getInputField());
  3090     050C  3181  210D  3184   	fcall	_ai_getInputField
  3091     050F  3186  2621  3184   	fcall	_snake_getSurroundings
  3092     0512                     l2742:
  3093                           
  3094                           ;main.c: 92:         ai_propagate(snake_move(ai_run()));
  3095     0512  3186  26D7  3184   	fcall	_ai_run
  3096     0515  3185  256E  3184   	fcall	_snake_move
  3097     0518  3181  210C  3184   	fcall	_ai_propagate
  3098     051B                     l2744:
  3099                           
  3100                           ;main.c: 93:         for(uint8_t i = 0; i < 8; i++){
  3101     051B  0020               	movlb	0	; select bank0
  3102     051C  01DC               	clrf	main@i_588
  3103     051D                     l2750:
  3104                           
  3105                           ;main.c: 94:             for(uint8_t j = 0; j < 8; j++){
  3106     051D  01DD               	clrf	main@j
  3107     051E                     l2756:
  3108                           
  3109                           ;main.c: 95:                 if(field[i+j*8]>0){
  3110     051E  085D               	movf	main@j,w
  3111     051F  00D5               	movwf	??_main
  3112     0520  3002               	movlw	2
  3113     0521                     u1695:
  3114     0521  35D5               	lslf	??_main,f
  3115     0522  3EFF               	addlw	-1
  3116     0523  1D03               	skipz
  3117     0524  2D21               	goto	u1695
  3118     0525  3555               	lslf	??_main,w
  3119     0526  0758               	addwf	main@field,w
  3120     0527  00D6               	movwf	??_main+1
  3121     0528  085C               	movf	main@i_588,w
  3122     0529  0756               	addwf	??_main+1,w
  3123     052A  00D7               	movwf	??_main+2
  3124     052B  0857               	movf	??_main+2,w
  3125     052C  0086               	movwf	6
  3126     052D  3001               	movlw	1	; select bank2/3
  3127     052E  0087               	movwf	7
  3128     052F  0801               	movf	1,w
  3129     0530  1903               	btfsc	3,2
  3130     0531  2D33               	goto	u1701
  3131     0532  2D34               	goto	u1700
  3132     0533                     u1701:
  3133     0533  2D3B               	goto	l2760
  3134     0534                     u1700:
  3135     0534                     l2758:
  3136                           
  3137                           ;main.c: 96:                     ledSet(i,j);
  3138     0534  085D               	movf	main@j,w
  3139     0535  00F0               	movwf	ledSet@c
  3140     0536  085C               	movf	main@i_588,w
  3141     0537  3181  21E2  3184   	fcall	_ledSet
  3142                           
  3143                           ;main.c: 97:                 } else{
  3144     053A  2D41               	goto	l2762
  3145     053B                     l2760:
  3146                           
  3147                           ;main.c: 98:                     ledClear(i,j);
  3148     053B  085D               	movf	main@j,w
  3149     053C  00F0               	movwf	ledClear@c
  3150     053D  085C               	movf	main@i_588,w
  3151     053E  3181  21F3  3184   	fcall	_ledClear
  3152     0541                     l2762:
  3153                           
  3154                           ;main.c: 100:             }
  3155     0541  3001               	movlw	1
  3156     0542  0020               	movlb	0	; select bank0
  3157     0543  00D5               	movwf	??_main
  3158     0544  0855               	movf	??_main,w
  3159     0545  07DD               	addwf	main@j,f
  3160     0546                     l2764:
  3161     0546  3008               	movlw	8
  3162     0547  025D               	subwf	main@j,w
  3163     0548  1C03               	skipc
  3164     0549  2D4B               	goto	u1711
  3165     054A  2D4C               	goto	u1710
  3166     054B                     u1711:
  3167     054B  2D1E               	goto	l2756
  3168     054C                     u1710:
  3169     054C                     l2766:
  3170                           
  3171                           ;main.c: 101:         }
  3172     054C  3001               	movlw	1
  3173     054D  00D5               	movwf	??_main
  3174     054E  0855               	movf	??_main,w
  3175     054F  07DC               	addwf	main@i_588,f
  3176     0550                     l2768:
  3177     0550  3008               	movlw	8
  3178     0551  025C               	subwf	main@i_588,w
  3179     0552  1C03               	skipc
  3180     0553  2D55               	goto	u1721
  3181     0554  2D56               	goto	u1720
  3182     0555                     u1721:
  3183     0555  2D1D               	goto	l2750
  3184     0556                     u1720:
  3185     0556                     l2770:
  3186                           
  3187                           ;main.c: 102:         uint8_t foodPosition = snake_getFoodPosition();
  3188     0556  3181  2111  3184   	fcall	_snake_getFoodPosition
  3189     0559  0020               	movlb	0	; select bank0
  3190     055A  00DB               	movwf	main@foodPosition
  3191     055B                     l2772:
  3192                           
  3193                           ;main.c: 103:         ledSet(foodPosition&0x03, foodPosition>>3);
  3194     055B  085B               	movf	main@foodPosition,w
  3195     055C  00D5               	movwf	??_main
  3196     055D  3003               	movlw	3
  3197     055E                     u1735:
  3198     055E  36D5               	lsrf	??_main,f
  3199     055F  0B89               	decfsz	9,f
  3200     0560  2D5E               	goto	u1735
  3201     0561  0855               	movf	??_main,w
  3202     0562  00F0               	movwf	ledSet@c
  3203     0563  085B               	movf	main@foodPosition,w
  3204     0564  3903               	andlw	3
  3205     0565  3181  21E2  3184   	fcall	_ledSet
  3206     0568                     l2774:
  3207                           
  3208                           ;main.c: 104:         sendMatrix();
  3209     0568  3183  2324  3184   	fcall	_sendMatrix
  3210     056B  2CFF               	goto	l2738
  3211     056C  3180  2802         	ljmp	start
  3212     056E                     __end_of_main:
  3213                           
  3214                           	psect	text1
  3215     056E                     __ptext1:	
  3216 ;; *************** function _snake_move *****************
  3217 ;; Defined at:
  3218 ;;		line 26 in file "snake.c"
  3219 ;; Parameters:    Size  Location     Type
  3220 ;;  direction       1    wreg     unsigned char 
  3221 ;; Auto vars:     Size  Location     Type
  3222 ;;  direction       1    8[BANK0 ] unsigned char 
  3223 ;;  i               1   10[BANK0 ] unsigned char 
  3224 ;;  incentive       1    9[BANK0 ] char 
  3225 ;; Return value:  Size  Location     Type
  3226 ;;                  1    wreg      char 
  3227 ;; Registers used:
  3228 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3229 ;; Tracked objects:
  3230 ;;		On entry : 0/0
  3231 ;;		On exit  : 0/0
  3232 ;;		Unchanged: 0/0
  3233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3234 ;;      Params:         0       0       0       0       0       0
  3235 ;;      Locals:         0       3       0       0       0       0
  3236 ;;      Temps:          0       2       0       0       0       0
  3237 ;;      Totals:         0       5       0       0       0       0
  3238 ;;Total ram usage:        5 bytes
  3239 ;; Hardware stack levels used: 1
  3240 ;; Hardware stack levels required when called: 3
  3241 ;; This function calls:
  3242 ;;		_rand
  3243 ;;		_snake_initiate
  3244 ;; This function is called by:
  3245 ;;		_main
  3246 ;; This function uses a non-reentrant model
  3247 ;;
  3248                           
  3249     056E                     _snake_move:	
  3250                           ;psect for function _snake_move
  3251                           
  3252                           
  3253                           ;incstack = 0
  3254                           ; Regs used in _snake_move: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3255                           ;snake_move@direction stored from wreg
  3256     056E  0020               	movlb	0	; select bank0
  3257     056F  00D0               	movwf	snake_move@direction
  3258     0570                     l2570:
  3259                           
  3260                           ;snake.c: 27:     for(uint8_t i = 0; i < 64; i++){
  3261     0570  01D2               	clrf	snake_move@i
  3262     0571                     l2576:
  3263                           
  3264                           ;snake.c: 28:         if(field[i] > 0){
  3265     0571  0852               	movf	snake_move@i,w
  3266     0572  3E20               	addlw	(low (_field| (0+256)))& (0+255)
  3267     0573  0086               	movwf	6
  3268     0574  3001               	movlw	1	; select bank2/3
  3269     0575  0087               	movwf	7
  3270     0576  0801               	movf	1,w
  3271     0577  1903               	btfsc	3,2
  3272     0578  2D7A               	goto	u1481
  3273     0579  2D7B               	goto	u1480
  3274     057A                     u1481:
  3275     057A  2D82               	goto	l2580
  3276     057B                     u1480:
  3277     057B                     l2578:
  3278                           
  3279                           ;snake.c: 29:             field[i]--;
  3280     057B  0852               	movf	snake_move@i,w
  3281     057C  3E20               	addlw	(low (_field| (0+256)))& (0+255)
  3282     057D  0086               	movwf	6
  3283     057E  3001               	movlw	1	; select bank2/3
  3284     057F  0087               	movwf	7
  3285     0580  3001               	movlw	1
  3286     0581  0281               	subwf	1,f
  3287     0582                     l2580:
  3288                           
  3289                           ;snake.c: 31:     }
  3290     0582  3001               	movlw	1
  3291     0583  00CE               	movwf	??_snake_move
  3292     0584  084E               	movf	??_snake_move,w
  3293     0585  07D2               	addwf	snake_move@i,f
  3294     0586                     l2582:
  3295     0586  3040               	movlw	64
  3296     0587  0252               	subwf	snake_move@i,w
  3297     0588  1C03               	skipc
  3298     0589  2D8B               	goto	u1491
  3299     058A  2D8C               	goto	u1490
  3300     058B                     u1491:
  3301     058B  2D71               	goto	l2576
  3302     058C                     u1490:
  3303     058C                     l2584:
  3304                           
  3305                           ;snake.c: 32:     int8_t incentive = 0;
  3306     058C  01D1               	clrf	snake_move@incentive
  3307     058D                     l2586:
  3308                           
  3309                           ;snake.c: 33:     direction &= 0x03;
  3310     058D  3003               	movlw	3
  3311     058E  00CE               	movwf	??_snake_move
  3312     058F  084E               	movf	??_snake_move,w
  3313     0590  05D0               	andwf	snake_move@direction,f
  3314                           
  3315                           ;snake.c: 34:     switch(direction){
  3316     0591  2DCE               	goto	l2614
  3317     0592                     l2588:
  3318                           
  3319                           ;snake.c: 36:             if((headPosition&0x03) == 0){
  3320     0592  0842               	movf	_headPosition,w
  3321     0593  3903               	andlw	3
  3322     0594  1D03               	btfss	3,2
  3323     0595  2D97               	goto	u1501
  3324     0596  2D98               	goto	u1500
  3325     0597                     u1501:
  3326     0597  2D9B               	goto	l2592
  3327     0598                     u1500:
  3328     0598                     l2590:
  3329                           
  3330                           ;snake.c: 37:                 incentive = -1;
  3331     0598  01D1               	clrf	snake_move@incentive
  3332     0599  03D1               	decf	snake_move@incentive,f
  3333                           
  3334                           ;snake.c: 38:             } else{
  3335     059A  2DE4               	goto	l2616
  3336     059B                     l2592:
  3337                           
  3338                           ;snake.c: 39:                 headPosition--;
  3339     059B  3001               	movlw	1
  3340     059C  02C2               	subwf	_headPosition,f
  3341     059D  2DE4               	goto	l2616
  3342     059E                     l2594:
  3343                           
  3344                           ;snake.c: 43:             if((headPosition&0x03) == 7){
  3345     059E  3003               	movlw	3
  3346     059F  0542               	andwf	_headPosition,w
  3347     05A0  00CE               	movwf	??_snake_move
  3348     05A1  3007               	movlw	7
  3349     05A2  064E               	xorwf	??_snake_move,w
  3350     05A3  1D03               	btfss	3,2
  3351     05A4  2DA6               	goto	u1511
  3352     05A5  2DA7               	goto	u1510
  3353     05A6                     u1511:
  3354     05A6  2DA8               	goto	l2598
  3355     05A7                     u1510:
  3356     05A7  2D98               	goto	l2590
  3357     05A8                     l2598:
  3358                           
  3359                           ;snake.c: 46:                 headPosition++;
  3360     05A8  3001               	movlw	1
  3361     05A9  00CE               	movwf	??_snake_move
  3362     05AA  084E               	movf	??_snake_move,w
  3363     05AB  07C2               	addwf	_headPosition,f
  3364     05AC  2DE4               	goto	l2616
  3365     05AD                     l2600:
  3366                           
  3367                           ;snake.c: 50:             if((headPosition>>3) == 7){
  3368     05AD  0842               	movf	_headPosition,w
  3369     05AE  00CE               	movwf	??_snake_move
  3370     05AF  3003               	movlw	3
  3371     05B0                     u1525:
  3372     05B0  36CE               	lsrf	??_snake_move,f
  3373     05B1  0B89               	decfsz	9,f
  3374     05B2  2DB0               	goto	u1525
  3375     05B3  3007               	movlw	7
  3376     05B4  064E               	xorwf	??_snake_move,w
  3377     05B5  1D03               	btfss	3,2
  3378     05B6  2DB8               	goto	u1531
  3379     05B7  2DB9               	goto	u1530
  3380     05B8                     u1531:
  3381     05B8  2DBA               	goto	l2604
  3382     05B9                     u1530:
  3383     05B9  2D98               	goto	l2590
  3384     05BA                     l2604:
  3385                           
  3386                           ;snake.c: 53:                 headPosition -= 8;
  3387     05BA  3008               	movlw	8
  3388     05BB  02C2               	subwf	_headPosition,f
  3389     05BC  2DE4               	goto	l2616
  3390     05BD                     l2606:
  3391                           
  3392                           ;snake.c: 57:             if((headPosition>>3) == 0){
  3393     05BD  0842               	movf	_headPosition,w
  3394     05BE  00CE               	movwf	??_snake_move
  3395     05BF  3003               	movlw	3
  3396     05C0                     u1545:
  3397     05C0  36CE               	lsrf	??_snake_move,f
  3398     05C1  0B89               	decfsz	9,f
  3399     05C2  2DC0               	goto	u1545
  3400     05C3  084E               	movf	??_snake_move,w
  3401     05C4  1D03               	btfss	3,2
  3402     05C5  2DC7               	goto	u1551
  3403     05C6  2DC8               	goto	u1550
  3404     05C7                     u1551:
  3405     05C7  2DC9               	goto	l2610
  3406     05C8                     u1550:
  3407     05C8  2D98               	goto	l2590
  3408     05C9                     l2610:
  3409                           
  3410                           ;snake.c: 60:                 headPosition += 8;
  3411     05C9  3008               	movlw	8
  3412     05CA  00CE               	movwf	??_snake_move
  3413     05CB  084E               	movf	??_snake_move,w
  3414     05CC  07C2               	addwf	_headPosition,f
  3415     05CD  2DE4               	goto	l2616
  3416     05CE                     l2614:
  3417     05CE  0850               	movf	snake_move@direction,w
  3418     05CF  00CE               	movwf	??_snake_move
  3419     05D0  01CF               	clrf	??_snake_move+1
  3420                           
  3421                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3422                           ; Switch size 1, requested type "simple"
  3423                           ; Number of cases is 1, Range of values is 0 to 0
  3424                           ; switch strategies available:
  3425                           ; Name         Instructions Cycles
  3426                           ; simple_byte            4     3 (average)
  3427                           ; direct_byte            8     6 (fixed)
  3428                           ; jumptable            260     6 (fixed)
  3429                           ;	Chosen strategy is simple_byte
  3430     05D1  084F               	movf	??_snake_move+1,w
  3431     05D2  3A00               	xorlw	0	; case 0
  3432     05D3  1903               	skipnz
  3433     05D4  2DD6               	goto	l2808
  3434     05D5  2DE4               	goto	l2616
  3435     05D6                     l2808:
  3436                           
  3437                           ; Switch size 1, requested type "simple"
  3438                           ; Number of cases is 4, Range of values is 0 to 3
  3439                           ; switch strategies available:
  3440                           ; Name         Instructions Cycles
  3441                           ; simple_byte           13     7 (average)
  3442                           ; direct_byte           14     6 (fixed)
  3443                           ; jumptable            260     6 (fixed)
  3444                           ;	Chosen strategy is simple_byte
  3445     05D6  084E               	movf	??_snake_move,w
  3446     05D7  3A00               	xorlw	0	; case 0
  3447     05D8  1903               	skipnz
  3448     05D9  2D92               	goto	l2588
  3449     05DA  3A01               	xorlw	1	; case 1
  3450     05DB  1903               	skipnz
  3451     05DC  2D9E               	goto	l2594
  3452     05DD  3A03               	xorlw	3	; case 2
  3453     05DE  1903               	skipnz
  3454     05DF  2DAD               	goto	l2600
  3455     05E0  3A01               	xorlw	1	; case 3
  3456     05E1  1903               	skipnz
  3457     05E2  2DBD               	goto	l2606
  3458     05E3  2DE4               	goto	l2616
  3459     05E4                     l2616:
  3460                           
  3461                           ;snake.c: 64:     if(incentive == -1){
  3462     05E4  0A51               	incf	snake_move@incentive,w
  3463     05E5  1D03               	btfss	3,2
  3464     05E6  2DE8               	goto	u1561
  3465     05E7  2DE9               	goto	u1560
  3466     05E8                     u1561:
  3467     05E8  2DED               	goto	l2620
  3468     05E9                     u1560:
  3469     05E9                     l2618:
  3470                           
  3471                           ;snake.c: 65:         snake_initiate();
  3472     05E9  3182  22D2  3185   	fcall	_snake_initiate
  3473                           
  3474                           ;snake.c: 66:     } else if(field[headPosition] > 0){
  3475     05EC  2E1E               	goto	l2638
  3476     05ED                     l2620:
  3477     05ED  0842               	movf	_headPosition,w
  3478     05EE  3E20               	addlw	(low (_field| (0+256)))& (0+255)
  3479     05EF  0086               	movwf	6
  3480     05F0  3001               	movlw	1	; select bank2/3
  3481     05F1  0087               	movwf	7
  3482     05F2  0801               	movf	1,w
  3483     05F3  1903               	btfsc	3,2
  3484     05F4  2DF6               	goto	u1571
  3485     05F5  2DF7               	goto	u1570
  3486     05F6                     u1571:
  3487     05F6  2DFA               	goto	l2626
  3488     05F7                     u1570:
  3489     05F7                     l2622:
  3490                           
  3491                           ;snake.c: 67:         incentive = -1;
  3492     05F7  01D1               	clrf	snake_move@incentive
  3493     05F8  03D1               	decf	snake_move@incentive,f
  3494     05F9  2DE9               	goto	l2618
  3495     05FA                     l2626:
  3496                           
  3497                           ;snake.c: 70:         if(headPosition == foodPosition){
  3498     05FA  0842               	movf	_headPosition,w
  3499     05FB  0641               	xorwf	_foodPosition,w
  3500     05FC  1D03               	skipz
  3501     05FD  2DFF               	goto	u1581
  3502     05FE  2E00               	goto	u1580
  3503     05FF                     u1581:
  3504     05FF  2E17               	goto	l2636
  3505     0600                     u1580:
  3506     0600                     l2628:
  3507                           
  3508                           ;snake.c: 71:             incentive = 1;
  3509     0600  01D1               	clrf	snake_move@incentive
  3510     0601  0AD1               	incf	snake_move@incentive,f
  3511     0602                     l2630:
  3512                           
  3513                           ;snake.c: 72:             snakeSize++;
  3514     0602  3001               	movlw	1
  3515     0603  00CE               	movwf	??_snake_move
  3516     0604  084E               	movf	??_snake_move,w
  3517     0605  07E6               	addwf	_snakeSize,f
  3518     0606                     l2632:
  3519                           
  3520                           ;snake.c: 74:                 foodPosition = ((uint8_t)rand())&0x1f;
  3521     0606  3183  2385  3185   	fcall	_rand
  3522     0609  087C               	movf	?_rand,w
  3523     060A  391F               	andlw	31
  3524     060B  0020               	movlb	0	; select bank0
  3525     060C  00C1               	movwf	_foodPosition
  3526     060D                     l2634:
  3527                           
  3528                           ;snake.c: 75:             }while(field[foodPosition] > 0);
  3529     060D  0841               	movf	_foodPosition,w
  3530     060E  3E20               	addlw	(low (_field| (0+256)))& (0+255)
  3531     060F  0086               	movwf	6
  3532     0610  3001               	movlw	1	; select bank2/3
  3533     0611  0087               	movwf	7
  3534     0612  0801               	movf	1,w
  3535     0613  1D03               	btfss	3,2
  3536     0614  2E16               	goto	u1591
  3537     0615  2E17               	goto	u1590
  3538     0616                     u1591:
  3539     0616  2E06               	goto	l2632
  3540     0617                     u1590:
  3541     0617                     l2636:
  3542                           
  3543                           ;snake.c: 77:         field[headPosition] = snakeSize;
  3544     0617  0842               	movf	_headPosition,w
  3545     0618  3E20               	addlw	(low (_field| (0+256)))& (0+255)
  3546     0619  0086               	movwf	6
  3547     061A  3001               	movlw	1	; select bank2/3
  3548     061B  0087               	movwf	7
  3549     061C  0866               	movf	_snakeSize,w
  3550     061D  0081               	movwf	1
  3551     061E                     l2638:
  3552                           
  3553                           ;snake.c: 79:     return incentive;
  3554     061E  0020               	movlb	0	; select bank0
  3555     061F  0851               	movf	snake_move@incentive,w
  3556     0620                     l412:
  3557     0620  0008               	return
  3558     0621                     __end_of_snake_move:
  3559                           
  3560                           	psect	text2
  3561     02D2                     __ptext2:	
  3562 ;; *************** function _snake_initiate *****************
  3563 ;; Defined at:
  3564 ;;		line 17 in file "snake.c"
  3565 ;; Parameters:    Size  Location     Type
  3566 ;;		None
  3567 ;; Auto vars:     Size  Location     Type
  3568 ;;  i               1    5[BANK0 ] unsigned char 
  3569 ;; Return value:  Size  Location     Type
  3570 ;;                  1    wreg      void 
  3571 ;; Registers used:
  3572 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3573 ;; Tracked objects:
  3574 ;;		On entry : 0/0
  3575 ;;		On exit  : 0/0
  3576 ;;		Unchanged: 0/0
  3577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3578 ;;      Params:         0       0       0       0       0       0
  3579 ;;      Locals:         0       1       0       0       0       0
  3580 ;;      Temps:          0       1       0       0       0       0
  3581 ;;      Totals:         0       2       0       0       0       0
  3582 ;;Total ram usage:        2 bytes
  3583 ;; Hardware stack levels used: 1
  3584 ;; Hardware stack levels required when called: 2
  3585 ;; This function calls:
  3586 ;;		_rand
  3587 ;; This function is called by:
  3588 ;;		_main
  3589 ;;		_snake_move
  3590 ;; This function uses a non-reentrant model
  3591 ;;
  3592                           
  3593     02D2                     _snake_initiate:	
  3594                           ;psect for function _snake_initiate
  3595                           
  3596     02D2                     l2240:	
  3597                           ;incstack = 0
  3598                           ; Regs used in _snake_initiate: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3599                           
  3600                           
  3601                           ;snake.c: 18:     for(uint8_t i = 0; i < 64; i++){
  3602     02D2  0020               	movlb	0	; select bank0
  3603     02D3  01CD               	clrf	snake_initiate@i
  3604     02D4                     l2246:
  3605                           
  3606                           ;snake.c: 19:         field[i] = 0;
  3607     02D4  084D               	movf	snake_initiate@i,w
  3608     02D5  3E20               	addlw	(low (_field| (0+256)))& (0+255)
  3609     02D6  0086               	movwf	6
  3610     02D7  3001               	movlw	1	; select bank2/3
  3611     02D8  0087               	movwf	7
  3612     02D9  0181               	clrf	1
  3613     02DA                     l2248:
  3614                           
  3615                           ;snake.c: 20:     }
  3616     02DA  3001               	movlw	1
  3617     02DB  00CC               	movwf	??_snake_initiate
  3618     02DC  084C               	movf	??_snake_initiate,w
  3619     02DD  07CD               	addwf	snake_initiate@i,f
  3620     02DE                     l2250:
  3621     02DE  3040               	movlw	64
  3622     02DF  024D               	subwf	snake_initiate@i,w
  3623     02E0  1C03               	skipc
  3624     02E1  2AE3               	goto	u1061
  3625     02E2  2AE4               	goto	u1060
  3626     02E3                     u1061:
  3627     02E3  2AD4               	goto	l2246
  3628     02E4                     u1060:
  3629     02E4                     l2252:
  3630                           
  3631                           ;snake.c: 21:     headPosition = ((uint8_t)rand())&0x3f;
  3632     02E4  3183  2385  3182   	fcall	_rand
  3633     02E7  087C               	movf	?_rand,w
  3634     02E8  393F               	andlw	63
  3635     02E9  0020               	movlb	0	; select bank0
  3636     02EA  00C2               	movwf	_headPosition
  3637                           
  3638                           ;snake.c: 22:     foodPosition = ((uint8_t)rand())&0x3f;
  3639     02EB  3183  2385  3182   	fcall	_rand
  3640     02EE  087C               	movf	?_rand,w
  3641     02EF  393F               	andlw	63
  3642     02F0  0020               	movlb	0	; select bank0
  3643     02F1  00C1               	movwf	_foodPosition
  3644     02F2                     l2254:
  3645                           
  3646                           ;snake.c: 23:     field[headPosition] = snakeSize;
  3647     02F2  0842               	movf	_headPosition,w
  3648     02F3  3E20               	addlw	(low (_field| (0+256)))& (0+255)
  3649     02F4  0086               	movwf	6
  3650     02F5  3001               	movlw	1	; select bank2/3
  3651     02F6  0087               	movwf	7
  3652     02F7  0866               	movf	_snakeSize,w
  3653     02F8  0081               	movwf	1
  3654     02F9                     l385:
  3655     02F9  0008               	return
  3656     02FA                     __end_of_snake_initiate:
  3657                           
  3658                           	psect	text3
  3659     0621                     __ptext3:	
  3660 ;; *************** function _snake_getSurroundings *****************
  3661 ;; Defined at:
  3662 ;;		line 86 in file "snake.c"
  3663 ;; Parameters:    Size  Location     Type
  3664 ;;  surroundings    1    wreg     PTR unsigned char 
  3665 ;;		 -> Y0(16), 
  3666 ;; Auto vars:     Size  Location     Type
  3667 ;;  surroundings    1    4[COMMON] PTR unsigned char 
  3668 ;;		 -> Y0(16), 
  3669 ;;  i               1    3[COMMON] unsigned char 
  3670 ;;  i               1    2[COMMON] unsigned char 
  3671 ;;  p               1    1[COMMON] unsigned char 
  3672 ;; Return value:  Size  Location     Type
  3673 ;;                  1    wreg      void 
  3674 ;; Registers used:
  3675 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3676 ;; Tracked objects:
  3677 ;;		On entry : 0/0
  3678 ;;		On exit  : 0/0
  3679 ;;		Unchanged: 0/0
  3680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3681 ;;      Params:         0       0       0       0       0       0
  3682 ;;      Locals:         4       0       0       0       0       0
  3683 ;;      Temps:          1       0       0       0       0       0
  3684 ;;      Totals:         5       0       0       0       0       0
  3685 ;;Total ram usage:        5 bytes
  3686 ;; Hardware stack levels used: 1
  3687 ;; This function calls:
  3688 ;;		Nothing
  3689 ;; This function is called by:
  3690 ;;		_main
  3691 ;; This function uses a non-reentrant model
  3692 ;;
  3693                           
  3694     0621                     _snake_getSurroundings:	
  3695                           ;psect for function _snake_getSurroundings
  3696                           
  3697                           
  3698                           ;incstack = 0
  3699                           ; Regs used in _snake_getSurroundings: [wreg+fsr1l+fsr1h+status,2+status,0]
  3700                           ;snake_getSurroundings@surroundings stored from wreg
  3701     0621  00F4               	movwf	snake_getSurroundings@surroundings
  3702     0622                     l2440:
  3703                           
  3704                           ;snake.c: 87:     for(uint8_t i = 0; i < 16; i++){
  3705     0622  01F2               	clrf	snake_getSurroundings@i
  3706     0623                     l2446:
  3707                           
  3708                           ;snake.c: 88:         surroundings[i] = 0;
  3709     0623  0872               	movf	snake_getSurroundings@i,w
  3710     0624  0774               	addwf	snake_getSurroundings@surroundings,w
  3711     0625  00F0               	movwf	??_snake_getSurroundings
  3712     0626  0870               	movf	??_snake_getSurroundings,w
  3713     0627  0086               	movwf	6
  3714     0628  0187               	clrf	7
  3715     0629  0181               	clrf	1
  3716     062A                     l2448:
  3717                           
  3718                           ;snake.c: 89:     }
  3719     062A  3001               	movlw	1
  3720     062B  00F0               	movwf	??_snake_getSurroundings
  3721     062C  0870               	movf	??_snake_getSurroundings,w
  3722     062D  07F2               	addwf	snake_getSurroundings@i,f
  3723     062E                     l2450:
  3724     062E  3010               	movlw	16
  3725     062F  0272               	subwf	snake_getSurroundings@i,w
  3726     0630  1C03               	skipc
  3727     0631  2E33               	goto	u1321
  3728     0632  2E34               	goto	u1320
  3729     0633                     u1321:
  3730     0633  2E23               	goto	l2446
  3731     0634                     u1320:
  3732     0634                     l2452:
  3733                           
  3734                           ;snake.c: 90:     if((headPosition&0x03) == 0){
  3735     0634  0020               	movlb	0	; select bank0
  3736     0635  0842               	movf	_headPosition,w
  3737     0636  3903               	andlw	3
  3738     0637  1D03               	btfss	3,2
  3739     0638  2E3A               	goto	u1331
  3740     0639  2E3B               	goto	u1330
  3741     063A                     u1331:
  3742     063A  2E4C               	goto	l2458
  3743     063B                     u1330:
  3744     063B                     l2454:
  3745                           
  3746                           ;snake.c: 91:         surroundings[0] = 1;
  3747     063B  0874               	movf	snake_getSurroundings@surroundings,w
  3748     063C  0086               	movwf	6
  3749     063D  0187               	clrf	7
  3750     063E  0181               	clrf	1
  3751     063F  0A81               	incf	1,f
  3752                           
  3753                           ;snake.c: 92:         surroundings[1] = 1;
  3754     0640  0A74               	incf	snake_getSurroundings@surroundings,w
  3755     0641  0086               	movwf	6
  3756     0642  0187               	clrf	7
  3757     0643  0181               	clrf	1
  3758     0644  0A81               	incf	1,f
  3759     0645                     l2456:
  3760                           
  3761                           ;snake.c: 93:         surroundings[2] = 1;
  3762     0645  0874               	movf	snake_getSurroundings@surroundings,w
  3763     0646  3E02               	addlw	2
  3764     0647  0086               	movwf	6
  3765     0648  0187               	clrf	7
  3766     0649  0181               	clrf	1
  3767     064A  0A81               	incf	1,f
  3768                           
  3769                           ;snake.c: 94:     } else if((headPosition&0x03) == 7){
  3770     064B  2E67               	goto	l2462
  3771     064C                     l2458:
  3772     064C  3003               	movlw	3
  3773     064D  0542               	andwf	_headPosition,w
  3774     064E  00F0               	movwf	??_snake_getSurroundings
  3775     064F  3007               	movlw	7
  3776     0650  0670               	xorwf	??_snake_getSurroundings,w
  3777     0651  1D03               	btfss	3,2
  3778     0652  2E54               	goto	u1341
  3779     0653  2E55               	goto	u1340
  3780     0654                     u1341:
  3781     0654  2E67               	goto	l2462
  3782     0655                     u1340:
  3783     0655                     l2460:
  3784                           
  3785                           ;snake.c: 95:         surroundings[4] = 1;
  3786     0655  0874               	movf	snake_getSurroundings@surroundings,w
  3787     0656  3E04               	addlw	4
  3788     0657  0086               	movwf	6
  3789     0658  0187               	clrf	7
  3790     0659  0181               	clrf	1
  3791     065A  0A81               	incf	1,f
  3792                           
  3793                           ;snake.c: 96:         surroundings[5] = 1;
  3794     065B  0874               	movf	snake_getSurroundings@surroundings,w
  3795     065C  3E05               	addlw	5
  3796     065D  0086               	movwf	6
  3797     065E  0187               	clrf	7
  3798     065F  0181               	clrf	1
  3799     0660  0A81               	incf	1,f
  3800                           
  3801                           ;snake.c: 97:         surroundings[6] = 1;
  3802     0661  0874               	movf	snake_getSurroundings@surroundings,w
  3803     0662  3E06               	addlw	6
  3804     0663  0086               	movwf	6
  3805     0664  0187               	clrf	7
  3806     0665  0181               	clrf	1
  3807     0666  0A81               	incf	1,f
  3808     0667                     l2462:
  3809                           
  3810                           ;snake.c: 99:     if((headPosition>>3) == 0){
  3811     0667  0842               	movf	_headPosition,w
  3812     0668  00F0               	movwf	??_snake_getSurroundings
  3813     0669  3003               	movlw	3
  3814     066A                     u1355:
  3815     066A  36F0               	lsrf	??_snake_getSurroundings,f
  3816     066B  0B89               	decfsz	9,f
  3817     066C  2E6A               	goto	u1355
  3818     066D  0870               	movf	??_snake_getSurroundings,w
  3819     066E  1D03               	btfss	3,2
  3820     066F  2E71               	goto	u1361
  3821     0670  2E72               	goto	u1360
  3822     0671                     u1361:
  3823     0671  2E85               	goto	l2466
  3824     0672                     u1360:
  3825     0672                     l2464:
  3826                           
  3827                           ;snake.c: 100:         surroundings[2] = 1;
  3828     0672  0874               	movf	snake_getSurroundings@surroundings,w
  3829     0673  3E02               	addlw	2
  3830     0674  0086               	movwf	6
  3831     0675  0187               	clrf	7
  3832     0676  0181               	clrf	1
  3833     0677  0A81               	incf	1,f
  3834                           
  3835                           ;snake.c: 101:         surroundings[3] = 1;
  3836     0678  0874               	movf	snake_getSurroundings@surroundings,w
  3837     0679  3E03               	addlw	3
  3838     067A  0086               	movwf	6
  3839     067B  0187               	clrf	7
  3840     067C  0181               	clrf	1
  3841     067D  0A81               	incf	1,f
  3842                           
  3843                           ;snake.c: 102:         surroundings[4] = 1;
  3844     067E  0874               	movf	snake_getSurroundings@surroundings,w
  3845     067F  3E04               	addlw	4
  3846     0680  0086               	movwf	6
  3847     0681  0187               	clrf	7
  3848     0682  0181               	clrf	1
  3849     0683  0A81               	incf	1,f
  3850                           
  3851                           ;snake.c: 103:     } else if((headPosition>>3) == 7){
  3852     0684  2EA2               	goto	l2472
  3853     0685                     l2466:
  3854     0685  0842               	movf	_headPosition,w
  3855     0686  00F0               	movwf	??_snake_getSurroundings
  3856     0687  3003               	movlw	3
  3857     0688                     u1375:
  3858     0688  36F0               	lsrf	??_snake_getSurroundings,f
  3859     0689  0B89               	decfsz	9,f
  3860     068A  2E88               	goto	u1375
  3861     068B  3007               	movlw	7
  3862     068C  0670               	xorwf	??_snake_getSurroundings,w
  3863     068D  1D03               	btfss	3,2
  3864     068E  2E90               	goto	u1381
  3865     068F  2E91               	goto	u1380
  3866     0690                     u1381:
  3867     0690  2EA2               	goto	l2472
  3868     0691                     u1380:
  3869     0691                     l2468:
  3870                           
  3871                           ;snake.c: 104:         surroundings[6] = 1;
  3872     0691  0874               	movf	snake_getSurroundings@surroundings,w
  3873     0692  3E06               	addlw	6
  3874     0693  0086               	movwf	6
  3875     0694  0187               	clrf	7
  3876     0695  0181               	clrf	1
  3877     0696  0A81               	incf	1,f
  3878                           
  3879                           ;snake.c: 105:         surroundings[7] = 1;
  3880     0697  0874               	movf	snake_getSurroundings@surroundings,w
  3881     0698  3E07               	addlw	7
  3882     0699  0086               	movwf	6
  3883     069A  0187               	clrf	7
  3884     069B  0181               	clrf	1
  3885     069C  0A81               	incf	1,f
  3886     069D                     l2470:
  3887                           
  3888                           ;snake.c: 106:         surroundings[0] = 1;
  3889     069D  0874               	movf	snake_getSurroundings@surroundings,w
  3890     069E  0086               	movwf	6
  3891     069F  0187               	clrf	7
  3892     06A0  0181               	clrf	1
  3893     06A1  0A81               	incf	1,f
  3894     06A2                     l2472:
  3895                           
  3896                           ;snake.c: 108:     uint8_t p;;snake.c: 109:     for(uint8_t i = 0; i < 8; i++){
  3897     06A2  01F3               	clrf	snake_getSurroundings@i_692
  3898     06A3                     l2478:
  3899                           
  3900                           ;snake.c: 110:         p = (headPosition+mapping[i])&0x3f;
  3901     06A3  0873               	movf	snake_getSurroundings@i_692,w
  3902     06A4  3E5E               	addlw	(low (_mapping| 0))& (0+255)
  3903     06A5  0086               	movwf	6
  3904     06A6  0187               	clrf	7
  3905     06A7  0801               	movf	1,w
  3906     06A8  0742               	addwf	_headPosition,w
  3907     06A9  393F               	andlw	63
  3908     06AA  00F1               	movwf	snake_getSurroundings@p
  3909     06AB                     l2480:
  3910                           
  3911                           ;snake.c: 111:         if(p==foodPosition){
  3912     06AB  0871               	movf	snake_getSurroundings@p,w
  3913     06AC  0641               	xorwf	_foodPosition,w
  3914     06AD  1D03               	skipz
  3915     06AE  2EB0               	goto	u1391
  3916     06AF  2EB1               	goto	u1390
  3917     06B0                     u1391:
  3918     06B0  2EBA               	goto	l428
  3919     06B1                     u1390:
  3920     06B1                     l2482:
  3921                           
  3922                           ;snake.c: 112:             surroundings[i+8] = 1;
  3923     06B1  0873               	movf	snake_getSurroundings@i_692,w
  3924     06B2  0774               	addwf	snake_getSurroundings@surroundings,w
  3925     06B3  00F0               	movwf	??_snake_getSurroundings
  3926     06B4  0870               	movf	??_snake_getSurroundings,w
  3927     06B5  3E08               	addlw	8
  3928     06B6  0086               	movwf	6
  3929     06B7  0187               	clrf	7
  3930     06B8  0181               	clrf	1
  3931     06B9  0A81               	incf	1,f
  3932     06BA                     l428:	
  3933                           ;snake.c: 113:         }
  3934                           
  3935                           
  3936                           ;snake.c: 114:         if(field[p] > 0){
  3937     06BA  0871               	movf	snake_getSurroundings@p,w
  3938     06BB  3E20               	addlw	(low (_field| (0+256)))& (0+255)
  3939     06BC  0086               	movwf	6
  3940     06BD  3001               	movlw	1	; select bank2/3
  3941     06BE  0087               	movwf	7
  3942     06BF  0801               	movf	1,w
  3943     06C0  1903               	btfsc	3,2
  3944     06C1  2EC3               	goto	u1401
  3945     06C2  2EC4               	goto	u1400
  3946     06C3                     u1401:
  3947     06C3  2ECC               	goto	l2486
  3948     06C4                     u1400:
  3949     06C4                     l2484:
  3950                           
  3951                           ;snake.c: 115:             surroundings[i] = 1;
  3952     06C4  0873               	movf	snake_getSurroundings@i_692,w
  3953     06C5  0774               	addwf	snake_getSurroundings@surroundings,w
  3954     06C6  00F0               	movwf	??_snake_getSurroundings
  3955     06C7  0870               	movf	??_snake_getSurroundings,w
  3956     06C8  0086               	movwf	6
  3957     06C9  0187               	clrf	7
  3958     06CA  0181               	clrf	1
  3959     06CB  0A81               	incf	1,f
  3960     06CC                     l2486:
  3961                           
  3962                           ;snake.c: 117:     }
  3963     06CC  3001               	movlw	1
  3964     06CD  00F0               	movwf	??_snake_getSurroundings
  3965     06CE  0870               	movf	??_snake_getSurroundings,w
  3966     06CF  07F3               	addwf	snake_getSurroundings@i_692,f
  3967     06D0                     l2488:
  3968     06D0  3008               	movlw	8
  3969     06D1  0273               	subwf	snake_getSurroundings@i_692,w
  3970     06D2  1C03               	skipc
  3971     06D3  2ED5               	goto	u1411
  3972     06D4  2ED6               	goto	u1410
  3973     06D5                     u1411:
  3974     06D5  2EA3               	goto	l2478
  3975     06D6                     u1410:
  3976     06D6                     l430:
  3977     06D6  0008               	return
  3978     06D7                     __end_of_snake_getSurroundings:
  3979                           
  3980                           	psect	text4
  3981     0111                     __ptext4:	
  3982 ;; *************** function _snake_getFoodPosition *****************
  3983 ;; Defined at:
  3984 ;;		line 124 in file "snake.c"
  3985 ;; Parameters:    Size  Location     Type
  3986 ;;		None
  3987 ;; Auto vars:     Size  Location     Type
  3988 ;;		None
  3989 ;; Return value:  Size  Location     Type
  3990 ;;                  1    wreg      unsigned char 
  3991 ;; Registers used:
  3992 ;;		wreg
  3993 ;; Tracked objects:
  3994 ;;		On entry : 0/0
  3995 ;;		On exit  : 0/0
  3996 ;;		Unchanged: 0/0
  3997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3998 ;;      Params:         0       0       0       0       0       0
  3999 ;;      Locals:         0       0       0       0       0       0
  4000 ;;      Temps:          0       0       0       0       0       0
  4001 ;;      Totals:         0       0       0       0       0       0
  4002 ;;Total ram usage:        0 bytes
  4003 ;; Hardware stack levels used: 1
  4004 ;; This function calls:
  4005 ;;		Nothing
  4006 ;; This function is called by:
  4007 ;;		_main
  4008 ;; This function uses a non-reentrant model
  4009 ;;
  4010                           
  4011     0111                     _snake_getFoodPosition:	
  4012                           ;psect for function _snake_getFoodPosition
  4013                           
  4014     0111                     l2664:	
  4015                           ;incstack = 0
  4016                           ; Regs used in _snake_getFoodPosition: [wreg]
  4017                           
  4018                           
  4019                           ;snake.c: 125:     return foodPosition;
  4020     0111  0020               	movlb	0	; select bank0
  4021     0112  0841               	movf	_foodPosition,w
  4022     0113                     l436:
  4023     0113  0008               	return
  4024     0114                     __end_of_snake_getFoodPosition:
  4025                           
  4026                           	psect	text5
  4027     010F                     __ptext5:	
  4028 ;; *************** function _snake_getField *****************
  4029 ;; Defined at:
  4030 ;;		line 82 in file "snake.c"
  4031 ;; Parameters:    Size  Location     Type
  4032 ;;		None
  4033 ;; Auto vars:     Size  Location     Type
  4034 ;;		None
  4035 ;; Return value:  Size  Location     Type
  4036 ;;                  1    wreg      PTR unsigned char 
  4037 ;; Registers used:
  4038 ;;		wreg
  4039 ;; Tracked objects:
  4040 ;;		On entry : 0/0
  4041 ;;		On exit  : 0/0
  4042 ;;		Unchanged: 0/0
  4043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4044 ;;      Params:         0       0       0       0       0       0
  4045 ;;      Locals:         0       0       0       0       0       0
  4046 ;;      Temps:          0       0       0       0       0       0
  4047 ;;      Totals:         0       0       0       0       0       0
  4048 ;;Total ram usage:        0 bytes
  4049 ;; Hardware stack levels used: 1
  4050 ;; This function calls:
  4051 ;;		Nothing
  4052 ;; This function is called by:
  4053 ;;		_main
  4054 ;; This function uses a non-reentrant model
  4055 ;;
  4056                           
  4057     010F                     _snake_getField:	
  4058                           ;psect for function _snake_getField
  4059                           
  4060     010F                     l2428:	
  4061                           ;incstack = 0
  4062                           ; Regs used in _snake_getField: [wreg]
  4063                           
  4064                           
  4065                           ;snake.c: 83:     return field;
  4066     010F  3020               	movlw	(low (_field| (0+256)))& (0+255)
  4067     0110                     l415:
  4068     0110  0008               	return
  4069     0111                     __end_of_snake_getField:
  4070                           
  4071                           	psect	text6
  4072     0324                     __ptext6:	
  4073 ;; *************** function _sendMatrix *****************
  4074 ;; Defined at:
  4075 ;;		line 37 in file "ledMatrix.c"
  4076 ;; Parameters:    Size  Location     Type
  4077 ;;		None
  4078 ;; Auto vars:     Size  Location     Type
  4079 ;;  j               1    6[COMMON] unsigned char 
  4080 ;;  i               1    7[COMMON] unsigned char 
  4081 ;;  nb              1    5[COMMON] unsigned char 
  4082 ;;  b               1    4[COMMON] unsigned char 
  4083 ;; Return value:  Size  Location     Type
  4084 ;;                  1    wreg      void 
  4085 ;; Registers used:
  4086 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4087 ;; Tracked objects:
  4088 ;;		On entry : 0/0
  4089 ;;		On exit  : 0/0
  4090 ;;		Unchanged: 0/0
  4091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4092 ;;      Params:         0       0       0       0       0       0
  4093 ;;      Locals:         4       0       0       0       0       0
  4094 ;;      Temps:          1       0       0       0       0       0
  4095 ;;      Totals:         5       0       0       0       0       0
  4096 ;;Total ram usage:        5 bytes
  4097 ;; Hardware stack levels used: 1
  4098 ;; Hardware stack levels required when called: 2
  4099 ;; This function calls:
  4100 ;;		_txMAX7219
  4101 ;; This function is called by:
  4102 ;;		_main
  4103 ;; This function uses a non-reentrant model
  4104 ;;
  4105                           
  4106     0324                     _sendMatrix:	
  4107                           ;psect for function _sendMatrix
  4108                           
  4109     0324                     l2668:	
  4110                           ;incstack = 0
  4111                           ; Regs used in _sendMatrix: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4112                           
  4113                           
  4114                           ;ledMatrix.c: 38:     uint8_t b;;ledMatrix.c: 39:     uint8_t nb;;ledMatrix.c: 40:     f
      +                          or(uint8_t i=0;i<8;i++){
  4115     0324  01F7               	clrf	sendMatrix@i
  4116     0325                     l2674:
  4117                           
  4118                           ;ledMatrix.c: 44:         b = matrix[i];
  4119     0325  0877               	movf	sendMatrix@i,w
  4120     0326  3E34               	addlw	(low (_matrix| 0))& (0+255)
  4121     0327  0086               	movwf	6
  4122     0328  0187               	clrf	7
  4123     0329  0801               	movf	1,w
  4124     032A  00F4               	movwf	sendMatrix@b
  4125     032B                     l2676:
  4126                           
  4127                           ;ledMatrix.c: 47:         nb = 0x00;
  4128     032B  01F5               	clrf	sendMatrix@nb
  4129     032C                     l2678:
  4130                           
  4131                           ;ledMatrix.c: 48:         for(uint8_t j = 0; j < 8; j++){
  4132     032C  01F6               	clrf	sendMatrix@j
  4133     032D                     l2684:
  4134                           
  4135                           ;ledMatrix.c: 49:             nb |= b&0x01;
  4136     032D  0874               	movf	sendMatrix@b,w
  4137     032E  3901               	andlw	1
  4138     032F  00F3               	movwf	??_sendMatrix
  4139     0330  0873               	movf	??_sendMatrix,w
  4140     0331  04F5               	iorwf	sendMatrix@nb,f
  4141     0332                     l2686:
  4142                           
  4143                           ;ledMatrix.c: 50:             nb <<= 1;
  4144     0332  1003               	clrc
  4145     0333  0DF5               	rlf	sendMatrix@nb,f
  4146     0334                     l2688:
  4147                           
  4148                           ;ledMatrix.c: 51:             b >>= 1;
  4149     0334  1003               	clrc
  4150     0335  0CF4               	rrf	sendMatrix@b,f
  4151                           
  4152                           ;ledMatrix.c: 52:         }
  4153     0336  3001               	movlw	1
  4154     0337  00F3               	movwf	??_sendMatrix
  4155     0338  0873               	movf	??_sendMatrix,w
  4156     0339  07F6               	addwf	sendMatrix@j,f
  4157     033A                     l2690:
  4158     033A  3008               	movlw	8
  4159     033B  0276               	subwf	sendMatrix@j,w
  4160     033C  1C03               	skipc
  4161     033D  2B3F               	goto	u1631
  4162     033E  2B40               	goto	u1630
  4163     033F                     u1631:
  4164     033F  2B2D               	goto	l2684
  4165     0340                     u1630:
  4166     0340                     l2692:
  4167                           
  4168                           ;ledMatrix.c: 53:         txMAX7219(i+1,nb);
  4169     0340  0875               	movf	sendMatrix@nb,w
  4170     0341  00F1               	movwf	txMAX7219@dat0
  4171     0342  0877               	movf	sendMatrix@i,w
  4172     0343  3E01               	addlw	1
  4173     0344  3182  2277  3183   	fcall	_txMAX7219
  4174     0347                     l2694:
  4175                           
  4176                           ;ledMatrix.c: 57:     }
  4177     0347  3001               	movlw	1
  4178     0348  00F3               	movwf	??_sendMatrix
  4179     0349  0873               	movf	??_sendMatrix,w
  4180     034A  07F7               	addwf	sendMatrix@i,f
  4181     034B                     l2696:
  4182     034B  3008               	movlw	8
  4183     034C  0277               	subwf	sendMatrix@i,w
  4184     034D  1C03               	skipc
  4185     034E  2B50               	goto	u1641
  4186     034F  2B51               	goto	u1640
  4187     0350                     u1641:
  4188     0350  2B25               	goto	l2674
  4189     0351                     u1640:
  4190     0351                     l360:
  4191     0351  0008               	return
  4192     0352                     __end_of_sendMatrix:
  4193                           
  4194                           	psect	text7
  4195     01E2                     __ptext7:	
  4196 ;; *************** function _ledSet *****************
  4197 ;; Defined at:
  4198 ;;		line 29 in file "ledMatrix.c"
  4199 ;; Parameters:    Size  Location     Type
  4200 ;;  l               1    wreg     unsigned char 
  4201 ;;  c               1    0[COMMON] unsigned char 
  4202 ;; Auto vars:     Size  Location     Type
  4203 ;;  l               1    3[COMMON] unsigned char 
  4204 ;; Return value:  Size  Location     Type
  4205 ;;                  1    wreg      void 
  4206 ;; Registers used:
  4207 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4208 ;; Tracked objects:
  4209 ;;		On entry : 0/0
  4210 ;;		On exit  : 0/0
  4211 ;;		Unchanged: 0/0
  4212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4213 ;;      Params:         1       0       0       0       0       0
  4214 ;;      Locals:         1       0       0       0       0       0
  4215 ;;      Temps:          2       0       0       0       0       0
  4216 ;;      Totals:         4       0       0       0       0       0
  4217 ;;Total ram usage:        4 bytes
  4218 ;; Hardware stack levels used: 1
  4219 ;; This function calls:
  4220 ;;		Nothing
  4221 ;; This function is called by:
  4222 ;;		_main
  4223 ;; This function uses a non-reentrant model
  4224 ;;
  4225                           
  4226     01E2                     _ledSet:	
  4227                           ;psect for function _ledSet
  4228                           
  4229                           
  4230                           ;incstack = 0
  4231                           ; Regs used in _ledSet: [wreg+fsr1l+fsr1h+status,2+status,0]
  4232                           ;ledSet@l stored from wreg
  4233     01E2  00F3               	movwf	ledSet@l
  4234     01E3                     l2660:
  4235                           
  4236                           ;ledMatrix.c: 30:     (matrix[l]) |= 1UL << (c);
  4237     01E3  3001               	movlw	1
  4238     01E4  00F1               	movwf	??_ledSet
  4239     01E5  0A70               	incf	ledSet@c,w
  4240     01E6  29E8               	goto	u1614
  4241     01E7                     u1615:
  4242     01E7  35F1               	lslf	??_ledSet,f
  4243     01E8                     u1614:
  4244     01E8  0B89               	decfsz	9,f
  4245     01E9  29E7               	goto	u1615
  4246     01EA  0871               	movf	??_ledSet,w
  4247     01EB  00F2               	movwf	??_ledSet+1
  4248     01EC  0873               	movf	ledSet@l,w
  4249     01ED  3E34               	addlw	(low (_matrix| 0))& (0+255)
  4250     01EE  0086               	movwf	6
  4251     01EF  0187               	clrf	7
  4252     01F0  0872               	movf	??_ledSet+1,w
  4253     01F1  0481               	iorwf	1,f
  4254     01F2                     l350:
  4255     01F2  0008               	return
  4256     01F3                     __end_of_ledSet:
  4257                           
  4258                           	psect	text8
  4259     01F3                     __ptext8:	
  4260 ;; *************** function _ledClear *****************
  4261 ;; Defined at:
  4262 ;;		line 33 in file "ledMatrix.c"
  4263 ;; Parameters:    Size  Location     Type
  4264 ;;  l               1    wreg     unsigned char 
  4265 ;;  c               1    0[COMMON] unsigned char 
  4266 ;; Auto vars:     Size  Location     Type
  4267 ;;  l               1    3[COMMON] unsigned char 
  4268 ;; Return value:  Size  Location     Type
  4269 ;;                  1    wreg      void 
  4270 ;; Registers used:
  4271 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4272 ;; Tracked objects:
  4273 ;;		On entry : 0/0
  4274 ;;		On exit  : 0/0
  4275 ;;		Unchanged: 0/0
  4276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4277 ;;      Params:         1       0       0       0       0       0
  4278 ;;      Locals:         1       0       0       0       0       0
  4279 ;;      Temps:          2       0       0       0       0       0
  4280 ;;      Totals:         4       0       0       0       0       0
  4281 ;;Total ram usage:        4 bytes
  4282 ;; Hardware stack levels used: 1
  4283 ;; This function calls:
  4284 ;;		Nothing
  4285 ;; This function is called by:
  4286 ;;		_main
  4287 ;; This function uses a non-reentrant model
  4288 ;;
  4289                           
  4290     01F3                     _ledClear:	
  4291                           ;psect for function _ledClear
  4292                           
  4293                           
  4294                           ;incstack = 0
  4295                           ; Regs used in _ledClear: [wreg+fsr1l+fsr1h+status,2+status,0]
  4296                           ;ledClear@l stored from wreg
  4297     01F3  00F3               	movwf	ledClear@l
  4298     01F4                     l2662:
  4299                           
  4300                           ;ledMatrix.c: 34:     (matrix[l]) &= ~(1UL << (c));
  4301     01F4  3001               	movlw	1
  4302     01F5  00F1               	movwf	??_ledClear
  4303     01F6  0A70               	incf	ledClear@c,w
  4304     01F7  29F9               	goto	u1624
  4305     01F8                     u1625:
  4306     01F8  35F1               	lslf	??_ledClear,f
  4307     01F9                     u1624:
  4308     01F9  0B89               	decfsz	9,f
  4309     01FA  29F8               	goto	u1625
  4310     01FB  0871               	movf	??_ledClear,w
  4311     01FC  3AFF               	xorlw	255
  4312     01FD  00F2               	movwf	??_ledClear+1
  4313     01FE  0873               	movf	ledClear@l,w
  4314     01FF  3E34               	addlw	(low (_matrix| 0))& (0+255)
  4315     0200  0086               	movwf	6
  4316     0201  0187               	clrf	7
  4317     0202  0872               	movf	??_ledClear+1,w
  4318     0203  0581               	andwf	1,f
  4319     0204                     l353:
  4320     0204  0008               	return
  4321     0205                     __end_of_ledClear:
  4322                           
  4323                           	psect	text9
  4324     03BA                     __ptext9:	
  4325 ;; *************** function _initMAX7219 *****************
  4326 ;; Defined at:
  4327 ;;		line 16 in file "ledMatrix.c"
  4328 ;; Parameters:    Size  Location     Type
  4329 ;;		None
  4330 ;; Auto vars:     Size  Location     Type
  4331 ;;		None
  4332 ;; Return value:  Size  Location     Type
  4333 ;;                  1    wreg      void 
  4334 ;; Registers used:
  4335 ;;		wreg, status,2, status,0, pclath, cstack
  4336 ;; Tracked objects:
  4337 ;;		On entry : 0/0
  4338 ;;		On exit  : 0/0
  4339 ;;		Unchanged: 0/0
  4340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4341 ;;      Params:         0       0       0       0       0       0
  4342 ;;      Locals:         0       0       0       0       0       0
  4343 ;;      Temps:          2       0       0       0       0       0
  4344 ;;      Totals:         2       0       0       0       0       0
  4345 ;;Total ram usage:        2 bytes
  4346 ;; Hardware stack levels used: 1
  4347 ;; Hardware stack levels required when called: 2
  4348 ;; This function calls:
  4349 ;;		_txMAX7219
  4350 ;; This function is called by:
  4351 ;;		_main
  4352 ;; This function uses a non-reentrant model
  4353 ;;
  4354                           
  4355     03BA                     _initMAX7219:	
  4356                           ;psect for function _initMAX7219
  4357                           
  4358     03BA                     l2418:	
  4359                           ;incstack = 0
  4360                           ; Regs used in _initMAX7219: [wreg+status,2+status,0+pclath+cstack]
  4361                           
  4362                           
  4363                           ;ledMatrix.c: 17:     SSP1CON1bits.SSPEN = 1;
  4364     03BA  0024               	movlb	4	; select bank4
  4365     03BB  1695               	bsf	21,5	;volatile
  4366     03BC                     l2420:
  4367                           
  4368                           ;ledMatrix.c: 18:     txMAX7219(0x09,0x00);
  4369     03BC  01F1               	clrf	txMAX7219@dat0
  4370     03BD  3009               	movlw	9
  4371     03BE  3182  2277  3183   	fcall	_txMAX7219
  4372                           
  4373                           ;ledMatrix.c: 19:     txMAX7219(0x0A,0x00);
  4374     03C1  01F1               	clrf	txMAX7219@dat0
  4375     03C2  300A               	movlw	10
  4376     03C3  3182  2277  3183   	fcall	_txMAX7219
  4377                           
  4378                           ;ledMatrix.c: 20:     txMAX7219(0x0C,0x00);
  4379     03C6  01F1               	clrf	txMAX7219@dat0
  4380     03C7  300C               	movlw	12
  4381     03C8  3182  2277  3183   	fcall	_txMAX7219
  4382                           
  4383                           ;ledMatrix.c: 21:     txMAX7219(0x0B,0x07);
  4384     03CB  3007               	movlw	7
  4385     03CC  00F1               	movwf	txMAX7219@dat0
  4386     03CD  300B               	movlw	11
  4387     03CE  3182  2277  3183   	fcall	_txMAX7219
  4388                           
  4389                           ;ledMatrix.c: 22:     txMAX7219(0x0C,0x01);
  4390     03D1  01F1               	clrf	txMAX7219@dat0
  4391     03D2  0AF1               	incf	txMAX7219@dat0,f
  4392     03D3  300C               	movlw	12
  4393     03D4  3182  2277  3183   	fcall	_txMAX7219
  4394                           
  4395                           ;ledMatrix.c: 23:     txMAX7219(0x0F,0x01);
  4396     03D7  01F1               	clrf	txMAX7219@dat0
  4397     03D8  0AF1               	incf	txMAX7219@dat0,f
  4398     03D9  300F               	movlw	15
  4399     03DA  3182  2277  3183   	fcall	_txMAX7219
  4400     03DD                     l2422:
  4401                           
  4402                           ;ledMatrix.c: 24:     _delay((unsigned long)((1000)*(8000000/4000.0)));
  4403     03DD  300B               	movlw	11
  4404     03DE  00F4               	movwf	??_initMAX7219+1
  4405     03DF  3026               	movlw	38
  4406     03E0  00F3               	movwf	??_initMAX7219
  4407     03E1  305E               	movlw	94
  4408     03E2                     u1757:
  4409     03E2  0B89               	decfsz	9,f
  4410     03E3  2BE2               	goto	u1757
  4411     03E4  0BF3               	decfsz	??_initMAX7219,f
  4412     03E5  2BE2               	goto	u1757
  4413     03E6  0BF4               	decfsz	??_initMAX7219+1,f
  4414     03E7  2BE2               	goto	u1757
  4415     03E8                     l2424:
  4416                           
  4417                           ;ledMatrix.c: 25:     txMAX7219(0x0F,0x00);
  4418     03E8  01F1               	clrf	txMAX7219@dat0
  4419     03E9  300F               	movlw	15
  4420     03EA  3182  2277  3183   	fcall	_txMAX7219
  4421     03ED                     l2426:
  4422                           
  4423                           ;ledMatrix.c: 26:     txMAX7219(0x0C,0x01);
  4424     03ED  01F1               	clrf	txMAX7219@dat0
  4425     03EE  0AF1               	incf	txMAX7219@dat0,f
  4426     03EF  300C               	movlw	12
  4427     03F0  3182  2277  3183   	fcall	_txMAX7219
  4428     03F3                     l347:
  4429     03F3  0008               	return
  4430     03F4                     __end_of_initMAX7219:
  4431                           
  4432                           	psect	text10
  4433     0277                     __ptext10:	
  4434 ;; *************** function _txMAX7219 *****************
  4435 ;; Defined at:
  4436 ;;		line 5 in file "ledMatrix.c"
  4437 ;; Parameters:    Size  Location     Type
  4438 ;;  addr0           1    wreg     unsigned char 
  4439 ;;  dat0            1    1[COMMON] unsigned char 
  4440 ;; Auto vars:     Size  Location     Type
  4441 ;;  addr0           1    2[COMMON] unsigned char 
  4442 ;; Return value:  Size  Location     Type
  4443 ;;                  1    wreg      void 
  4444 ;; Registers used:
  4445 ;;		wreg, status,2, status,0, pclath, cstack
  4446 ;; Tracked objects:
  4447 ;;		On entry : 0/0
  4448 ;;		On exit  : 0/0
  4449 ;;		Unchanged: 0/0
  4450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4451 ;;      Params:         1       0       0       0       0       0
  4452 ;;      Locals:         1       0       0       0       0       0
  4453 ;;      Temps:          0       0       0       0       0       0
  4454 ;;      Totals:         2       0       0       0       0       0
  4455 ;;Total ram usage:        2 bytes
  4456 ;; Hardware stack levels used: 1
  4457 ;; Hardware stack levels required when called: 1
  4458 ;; This function calls:
  4459 ;;		_SPI1_WriteByte
  4460 ;; This function is called by:
  4461 ;;		_initMAX7219
  4462 ;;		_sendMatrix
  4463 ;; This function uses a non-reentrant model
  4464 ;;
  4465                           
  4466     0277                     _txMAX7219:	
  4467                           ;psect for function _txMAX7219
  4468                           
  4469                           
  4470                           ;incstack = 0
  4471                           ; Regs used in _txMAX7219: [wreg+status,2+status,0+pclath+cstack]
  4472                           ;txMAX7219@addr0 stored from wreg
  4473     0277  00F2               	movwf	txMAX7219@addr0
  4474     0278                     l2256:
  4475                           
  4476                           ;ledMatrix.c: 6:     LATBbits.LATB1 = 0;
  4477     0278  0022               	movlb	2	; select bank2
  4478     0279  108D               	bcf	13,1	;volatile
  4479     027A                     l2258:
  4480                           
  4481                           ;ledMatrix.c: 7:     SPI1_WriteByte(addr0);
  4482     027A  0872               	movf	txMAX7219@addr0,w
  4483     027B  3181  2118  3182   	fcall	_SPI1_WriteByte
  4484     027E                     l338:	
  4485                           ;ledMatrix.c: 8:     while(!PIR1bits.SSP1IF);
  4486                           
  4487     027E  0020               	movlb	0	; select bank0
  4488     027F  1D91               	btfss	17,3	;volatile
  4489     0280  2A82               	goto	u1071
  4490     0281  2A83               	goto	u1070
  4491     0282                     u1071:
  4492     0282  2A7E               	goto	l338
  4493     0283                     u1070:
  4494     0283                     l340:
  4495                           
  4496                           ;ledMatrix.c: 9:     PIR1bits.SSP1IF = 0;
  4497     0283  1191               	bcf	17,3	;volatile
  4498     0284                     l2260:
  4499                           
  4500                           ;ledMatrix.c: 10:     SPI1_WriteByte(dat0);
  4501     0284  0871               	movf	txMAX7219@dat0,w
  4502     0285  3181  2118  3182   	fcall	_SPI1_WriteByte
  4503     0288                     l341:	
  4504                           ;ledMatrix.c: 11:     while(!PIR1bits.SSP1IF);
  4505                           
  4506     0288  0020               	movlb	0	; select bank0
  4507     0289  1D91               	btfss	17,3	;volatile
  4508     028A  2A8C               	goto	u1081
  4509     028B  2A8D               	goto	u1080
  4510     028C                     u1081:
  4511     028C  2A88               	goto	l341
  4512     028D                     u1080:
  4513     028D                     l343:
  4514                           
  4515                           ;ledMatrix.c: 12:     PIR1bits.SSP1IF = 0;
  4516     028D  1191               	bcf	17,3	;volatile
  4517                           
  4518                           ;ledMatrix.c: 13:     LATBbits.LATB1 = 1;
  4519     028E  0022               	movlb	2	; select bank2
  4520     028F  148D               	bsf	13,1	;volatile
  4521     0290                     l344:
  4522     0290  0008               	return
  4523     0291                     __end_of_txMAX7219:
  4524                           
  4525                           	psect	text11
  4526     0118                     __ptext11:	
  4527 ;; *************** function _SPI1_WriteByte *****************
  4528 ;; Defined at:
  4529 ;;		line 131 in file "mcc_generated_files/spi1.c"
  4530 ;; Parameters:    Size  Location     Type
  4531 ;;  byte            1    wreg     unsigned char 
  4532 ;; Auto vars:     Size  Location     Type
  4533 ;;  byte            1    0[COMMON] unsigned char 
  4534 ;; Return value:  Size  Location     Type
  4535 ;;                  1    wreg      void 
  4536 ;; Registers used:
  4537 ;;		wreg
  4538 ;; Tracked objects:
  4539 ;;		On entry : 0/0
  4540 ;;		On exit  : 0/0
  4541 ;;		Unchanged: 0/0
  4542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4543 ;;      Params:         0       0       0       0       0       0
  4544 ;;      Locals:         1       0       0       0       0       0
  4545 ;;      Temps:          0       0       0       0       0       0
  4546 ;;      Totals:         1       0       0       0       0       0
  4547 ;;Total ram usage:        1 bytes
  4548 ;; Hardware stack levels used: 1
  4549 ;; This function calls:
  4550 ;;		Nothing
  4551 ;; This function is called by:
  4552 ;;		_txMAX7219
  4553 ;; This function uses a non-reentrant model
  4554 ;;
  4555                           
  4556     0118                     _SPI1_WriteByte:	
  4557                           ;psect for function _SPI1_WriteByte
  4558                           
  4559                           
  4560                           ;incstack = 0
  4561                           ; Regs used in _SPI1_WriteByte: [wreg]
  4562                           ;SPI1_WriteByte@byte stored from wreg
  4563     0118  00F0               	movwf	SPI1_WriteByte@byte
  4564     0119                     l2152:
  4565                           
  4566                           ;mcc_generated_files/spi1.c: 131: void SPI1_WriteByte(uint8_t byte);mcc_generated_files/
      +                          spi1.c: 132: {;mcc_generated_files/spi1.c: 133:     SSP1BUF = byte;
  4567     0119  0870               	movf	SPI1_WriteByte@byte,w
  4568     011A  0024               	movlb	4	; select bank4
  4569     011B  0091               	movwf	17	;volatile
  4570     011C                     l224:
  4571     011C  0008               	return
  4572     011D                     __end_of_SPI1_WriteByte:
  4573                           
  4574                           	psect	text12
  4575     06D7                     __ptext12:	
  4576 ;; *************** function _ai_run *****************
  4577 ;; Defined at:
  4578 ;;		line 98 in file "ai.c"
  4579 ;; Parameters:    Size  Location     Type
  4580 ;;		None
  4581 ;; Auto vars:     Size  Location     Type
  4582 ;;  i               1    4[BANK0 ] unsigned char 
  4583 ;;  i               1    3[BANK0 ] unsigned char 
  4584 ;;  i               1    5[BANK0 ] unsigned char 
  4585 ;;  j               1    9[BANK0 ] unsigned char 
  4586 ;;  j               1    8[BANK0 ] unsigned char 
  4587 ;;  z               2    6[BANK0 ] short 
  4588 ;;  choice          1    2[BANK0 ] unsigned char 
  4589 ;; Return value:  Size  Location     Type
  4590 ;;                  1    wreg      unsigned char 
  4591 ;; Registers used:
  4592 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4593 ;; Tracked objects:
  4594 ;;		On entry : 0/0
  4595 ;;		On exit  : 0/0
  4596 ;;		Unchanged: 0/0
  4597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4598 ;;      Params:         0       0       0       0       0       0
  4599 ;;      Locals:         0       8       0       0       0       0
  4600 ;;      Temps:          0       2       0       0       0       0
  4601 ;;      Totals:         0      10       0       0       0       0
  4602 ;;Total ram usage:       10 bytes
  4603 ;; Hardware stack levels used: 1
  4604 ;; Hardware stack levels required when called: 2
  4605 ;; This function calls:
  4606 ;;		___awdiv
  4607 ;;		___wmul
  4608 ;;		_biases1_read
  4609 ;;		_biases2_read
  4610 ;;		_sigmoid
  4611 ;;		_weights1_read
  4612 ;;		_weights2_read
  4613 ;; This function is called by:
  4614 ;;		_main
  4615 ;; This function uses a non-reentrant model
  4616 ;;
  4617                           
  4618     06D7                     _ai_run:	
  4619                           ;psect for function _ai_run
  4620                           
  4621     06D7                     l2490:	
  4622                           ;incstack = 0
  4623                           ; Regs used in _ai_run: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4624                           
  4625                           
  4626                           ;ai.c: 99:     int16_t z;;ai.c: 100:     for(uint8_t j = 0; j < 10; j++){
  4627     06D7  0020               	movlb	0	; select bank0
  4628     06D8  01D0               	clrf	ai_run@j
  4629     06D9                     l2496:
  4630                           
  4631                           ;ai.c: 101:         Z1[j] = biases1_read(j);
  4632     06D9  0850               	movf	ai_run@j,w
  4633     06DA  3181  214E  3186   	fcall	_biases1_read
  4634     06DD  0020               	movlb	0	; select bank0
  4635     06DE  00C8               	movwf	??_ai_run
  4636     06DF  01C9               	clrf	??_ai_run+1
  4637     06E0  1BC8               	btfsc	??_ai_run,7
  4638     06E1  03C9               	decf	??_ai_run+1,f
  4639     06E2  3550               	lslf	ai_run@j,w
  4640     06E3  3EA0               	addlw	(low (_Z1| 0))& (0+255)
  4641     06E4  0086               	movwf	6
  4642     06E5  0187               	clrf	7
  4643     06E6  0848               	movf	??_ai_run,w
  4644     06E7  3FC0               	movwi [0]fsr1
  4645     06E8  0849               	movf	??_ai_run+1,w
  4646     06E9  3FC1               	movwi [1]fsr1
  4647     06EA                     l2498:
  4648                           
  4649                           ;ai.c: 102:         for(uint8_t i = 0; i < 16; i++){
  4650     06EA  01CB               	clrf	ai_run@i
  4651     06EB                     l2504:
  4652                           
  4653                           ;ai.c: 103:             z = (int16_t)Y0[i];
  4654     06EB  084B               	movf	ai_run@i,w
  4655     06EC  3EB4               	addlw	(low (_Y0| 0))& (0+255)
  4656     06ED  0086               	movwf	6
  4657     06EE  0187               	clrf	7
  4658     06EF  0801               	movf	1,w
  4659     06F0  00C8               	movwf	??_ai_run
  4660     06F1  01C9               	clrf	??_ai_run+1
  4661     06F2  0848               	movf	??_ai_run,w
  4662     06F3  00CE               	movwf	ai_run@z
  4663     06F4  0849               	movf	??_ai_run+1,w
  4664     06F5  00CF               	movwf	ai_run@z+1
  4665     06F6                     l2506:
  4666                           
  4667                           ;ai.c: 104:             z *= weights1_read(i,j);
  4668     06F6  0850               	movf	ai_run@j,w
  4669     06F7  00F4               	movwf	weights1_read@add2
  4670     06F8  084B               	movf	ai_run@i,w
  4671     06F9  3181  2192  3186   	fcall	_weights1_read
  4672     06FC  00F7               	movwf	___wmul@multiplier
  4673     06FD  01F8               	clrf	___wmul@multiplier+1
  4674     06FE  1BF7               	btfsc	___wmul@multiplier,7
  4675     06FF  03F8               	decf	___wmul@multiplier+1,f
  4676     0700  0020               	movlb	0	; select bank0
  4677     0701  084F               	movf	ai_run@z+1,w
  4678     0702  00FA               	movwf	___wmul@multiplicand+1
  4679     0703  084E               	movf	ai_run@z,w
  4680     0704  00F9               	movwf	___wmul@multiplicand
  4681     0705  3182  2291  3186   	fcall	___wmul
  4682     0708  0878               	movf	?___wmul+1,w
  4683     0709  0020               	movlb	0	; select bank0
  4684     070A  00CF               	movwf	ai_run@z+1
  4685     070B  0877               	movf	?___wmul,w
  4686     070C  00CE               	movwf	ai_run@z
  4687     070D                     l2508:
  4688                           
  4689                           ;ai.c: 105:             z /= 255;
  4690     070D  30FF               	movlw	255
  4691     070E  00F0               	movwf	___awdiv@divisor
  4692     070F  3000               	movlw	0
  4693     0710  00F1               	movwf	___awdiv@divisor+1
  4694     0711  084F               	movf	ai_run@z+1,w
  4695     0712  00F3               	movwf	___awdiv@dividend+1
  4696     0713  084E               	movf	ai_run@z,w
  4697     0714  00F2               	movwf	___awdiv@dividend
  4698     0715  3183  23F4  3186   	fcall	___awdiv
  4699     0718  0871               	movf	?___awdiv+1,w
  4700     0719  0020               	movlb	0	; select bank0
  4701     071A  00CF               	movwf	ai_run@z+1
  4702     071B  0870               	movf	?___awdiv,w
  4703     071C  00CE               	movwf	ai_run@z
  4704                           
  4705                           ;ai.c: 106:             Z1[j] += z;
  4706     071D  3550               	lslf	ai_run@j,w
  4707     071E  3EA0               	addlw	(low (_Z1| 0))& (0+255)
  4708     071F  0086               	movwf	6
  4709     0720  0187               	clrf	7
  4710     0721  084E               	movf	ai_run@z,w
  4711     0722  0781               	addwf	1,f
  4712     0723  3141               	addfsr 1,1
  4713     0724  084F               	movf	ai_run@z+1,w
  4714     0725  3D81               	addwfc	1,f
  4715     0726  317F               	addfsr 1,-1
  4716     0727                     l2510:
  4717                           
  4718                           ;ai.c: 107:         }
  4719     0727  3001               	movlw	1
  4720     0728  00C8               	movwf	??_ai_run
  4721     0729  0848               	movf	??_ai_run,w
  4722     072A  07CB               	addwf	ai_run@i,f
  4723     072B                     l2512:
  4724     072B  3010               	movlw	16
  4725     072C  024B               	subwf	ai_run@i,w
  4726     072D  1C03               	skipc
  4727     072E  2F30               	goto	u1421
  4728     072F  2F31               	goto	u1420
  4729     0730                     u1421:
  4730     0730  2EEB               	goto	l2504
  4731     0731                     u1420:
  4732     0731                     l2514:
  4733                           
  4734                           ;ai.c: 108:         Y1[j] = sigmoid((uint8_t)Z1[j]);
  4735     0731  0850               	movf	ai_run@j,w
  4736     0732  3E2A               	addlw	(low (_Y1| 0))& (0+255)
  4737     0733  0086               	movwf	6
  4738     0734  0187               	clrf	7
  4739     0735  3550               	lslf	ai_run@j,w
  4740     0736  3EA0               	addlw	(low (_Z1| 0))& (0+255)
  4741     0737  0084               	movwf	4
  4742     0738  0185               	clrf	5
  4743     0739  0800               	movf	0,w
  4744     073A  3181  21B0  3186   	fcall	_sigmoid
  4745     073D  0081               	movwf	1
  4746     073E                     l2516:
  4747                           
  4748                           ;ai.c: 109:     }
  4749     073E  3001               	movlw	1
  4750     073F  0020               	movlb	0	; select bank0
  4751     0740  00C8               	movwf	??_ai_run
  4752     0741  0848               	movf	??_ai_run,w
  4753     0742  07D0               	addwf	ai_run@j,f
  4754     0743                     l2518:
  4755     0743  300A               	movlw	10
  4756     0744  0250               	subwf	ai_run@j,w
  4757     0745  1C03               	skipc
  4758     0746  2F48               	goto	u1431
  4759     0747  2F49               	goto	u1430
  4760     0748                     u1431:
  4761     0748  2ED9               	goto	l2496
  4762     0749                     u1430:
  4763     0749                     l2520:
  4764                           
  4765                           ;ai.c: 110:     for(uint8_t j = 0; j < 5; j++){
  4766     0749  01D1               	clrf	ai_run@j_782
  4767     074A                     l2526:
  4768                           
  4769                           ;ai.c: 111:         Z2[j] = biases2_read(j);
  4770     074A  0851               	movf	ai_run@j_782,w
  4771     074B  3181  2155  3186   	fcall	_biases2_read
  4772     074E  0020               	movlb	0	; select bank0
  4773     074F  00C8               	movwf	??_ai_run
  4774     0750  01C9               	clrf	??_ai_run+1
  4775     0751  1BC8               	btfsc	??_ai_run,7
  4776     0752  03C9               	decf	??_ai_run+1,f
  4777     0753  3551               	lslf	ai_run@j_782,w
  4778     0754  3E20               	addlw	(low (_Z2| 0))& (0+255)
  4779     0755  0086               	movwf	6
  4780     0756  0187               	clrf	7
  4781     0757  0848               	movf	??_ai_run,w
  4782     0758  3FC0               	movwi [0]fsr1
  4783     0759  0849               	movf	??_ai_run+1,w
  4784     075A  3FC1               	movwi [1]fsr1
  4785     075B                     l2528:
  4786                           
  4787                           ;ai.c: 112:         for(uint8_t i = 0; i < 10; i++){
  4788     075B  01CC               	clrf	ai_run@i_784
  4789     075C                     l2534:
  4790                           
  4791                           ;ai.c: 113:             z = (int16_t)Y1[i];
  4792     075C  084C               	movf	ai_run@i_784,w
  4793     075D  3E2A               	addlw	(low (_Y1| 0))& (0+255)
  4794     075E  0086               	movwf	6
  4795     075F  0187               	clrf	7
  4796     0760  0801               	movf	1,w
  4797     0761  00C8               	movwf	??_ai_run
  4798     0762  01C9               	clrf	??_ai_run+1
  4799     0763  0848               	movf	??_ai_run,w
  4800     0764  00CE               	movwf	ai_run@z
  4801     0765  0849               	movf	??_ai_run+1,w
  4802     0766  00CF               	movwf	ai_run@z+1
  4803     0767                     l2536:
  4804                           
  4805                           ;ai.c: 114:             z *= weights2_read(i,j);
  4806     0767  0851               	movf	ai_run@j_782,w
  4807     0768  00F4               	movwf	weights2_read@add2
  4808     0769  084C               	movf	ai_run@i_784,w
  4809     076A  3181  2185  3186   	fcall	_weights2_read
  4810     076D  00F7               	movwf	___wmul@multiplier
  4811     076E  01F8               	clrf	___wmul@multiplier+1
  4812     076F  1BF7               	btfsc	___wmul@multiplier,7
  4813     0770  03F8               	decf	___wmul@multiplier+1,f
  4814     0771  0020               	movlb	0	; select bank0
  4815     0772  084F               	movf	ai_run@z+1,w
  4816     0773  00FA               	movwf	___wmul@multiplicand+1
  4817     0774  084E               	movf	ai_run@z,w
  4818     0775  00F9               	movwf	___wmul@multiplicand
  4819     0776  3182  2291  3186   	fcall	___wmul
  4820     0779  0878               	movf	?___wmul+1,w
  4821     077A  0020               	movlb	0	; select bank0
  4822     077B  00CF               	movwf	ai_run@z+1
  4823     077C  0877               	movf	?___wmul,w
  4824     077D  00CE               	movwf	ai_run@z
  4825     077E                     l2538:
  4826                           
  4827                           ;ai.c: 115:             z /= 255;
  4828     077E  30FF               	movlw	255
  4829     077F  00F0               	movwf	___awdiv@divisor
  4830     0780  3000               	movlw	0
  4831     0781  00F1               	movwf	___awdiv@divisor+1
  4832     0782  084F               	movf	ai_run@z+1,w
  4833     0783  00F3               	movwf	___awdiv@dividend+1
  4834     0784  084E               	movf	ai_run@z,w
  4835     0785  00F2               	movwf	___awdiv@dividend
  4836     0786  3183  23F4  3186   	fcall	___awdiv
  4837     0789  0871               	movf	?___awdiv+1,w
  4838     078A  0020               	movlb	0	; select bank0
  4839     078B  00CF               	movwf	ai_run@z+1
  4840     078C  0870               	movf	?___awdiv,w
  4841     078D  00CE               	movwf	ai_run@z
  4842                           
  4843                           ;ai.c: 116:             Z2[j] += z;
  4844     078E  3551               	lslf	ai_run@j_782,w
  4845     078F  3E20               	addlw	(low (_Z2| 0))& (0+255)
  4846     0790  0086               	movwf	6
  4847     0791  0187               	clrf	7
  4848     0792  084E               	movf	ai_run@z,w
  4849     0793  0781               	addwf	1,f
  4850     0794  3141               	addfsr 1,1
  4851     0795  084F               	movf	ai_run@z+1,w
  4852     0796  3D81               	addwfc	1,f
  4853     0797  317F               	addfsr 1,-1
  4854     0798                     l2540:
  4855                           
  4856                           ;ai.c: 117:         }
  4857     0798  3001               	movlw	1
  4858     0799  00C8               	movwf	??_ai_run
  4859     079A  0848               	movf	??_ai_run,w
  4860     079B  07CC               	addwf	ai_run@i_784,f
  4861     079C                     l2542:
  4862     079C  300A               	movlw	10
  4863     079D  024C               	subwf	ai_run@i_784,w
  4864     079E  1C03               	skipc
  4865     079F  2FA1               	goto	u1441
  4866     07A0  2FA2               	goto	u1440
  4867     07A1                     u1441:
  4868     07A1  2F5C               	goto	l2534
  4869     07A2                     u1440:
  4870     07A2                     l2544:
  4871                           
  4872                           ;ai.c: 118:         Y2[j] = sigmoid((uint8_t)Z2[j]);
  4873     07A2  0851               	movf	ai_run@j_782,w
  4874     07A3  3E3C               	addlw	(low (_Y2| 0))& (0+255)
  4875     07A4  0086               	movwf	6
  4876     07A5  0187               	clrf	7
  4877     07A6  3551               	lslf	ai_run@j_782,w
  4878     07A7  3E20               	addlw	(low (_Z2| 0))& (0+255)
  4879     07A8  0084               	movwf	4
  4880     07A9  0185               	clrf	5
  4881     07AA  0800               	movf	0,w
  4882     07AB  3181  21B0  3186   	fcall	_sigmoid
  4883     07AE  0081               	movwf	1
  4884     07AF                     l2546:
  4885                           
  4886                           ;ai.c: 119:     }
  4887     07AF  3001               	movlw	1
  4888     07B0  0020               	movlb	0	; select bank0
  4889     07B1  00C8               	movwf	??_ai_run
  4890     07B2  0848               	movf	??_ai_run,w
  4891     07B3  07D1               	addwf	ai_run@j_782,f
  4892     07B4                     l2548:
  4893     07B4  3005               	movlw	5
  4894     07B5  0251               	subwf	ai_run@j_782,w
  4895     07B6  1C03               	skipc
  4896     07B7  2FB9               	goto	u1451
  4897     07B8  2FBA               	goto	u1450
  4898     07B9                     u1451:
  4899     07B9  2F4A               	goto	l2526
  4900     07BA                     u1450:
  4901     07BA                     l2550:
  4902                           
  4903                           ;ai.c: 121:     uint8_t choice = 0;
  4904     07BA  01CA               	clrf	ai_run@choice
  4905     07BB                     l2552:
  4906                           
  4907                           ;ai.c: 122:     for(uint8_t i = 1; i < 5; i++){
  4908     07BB  01CD               	clrf	ai_run@i_787
  4909     07BC  0ACD               	incf	ai_run@i_787,f
  4910     07BD                     l2558:
  4911                           
  4912                           ;ai.c: 123:         if(Y2[i]>Y2[choice]){
  4913     07BD  084A               	movf	ai_run@choice,w
  4914     07BE  3E3C               	addlw	(low (_Y2| 0))& (0+255)
  4915     07BF  0086               	movwf	6
  4916     07C0  0187               	clrf	7
  4917     07C1  084D               	movf	ai_run@i_787,w
  4918     07C2  3E3C               	addlw	(low (_Y2| 0))& (0+255)
  4919     07C3  0084               	movwf	4
  4920     07C4  0185               	clrf	5
  4921     07C5  0800               	movf	0,w
  4922     07C6  0201               	subwf	1,w
  4923     07C7  1803               	skipnc
  4924     07C8  2FCA               	goto	u1461
  4925     07C9  2FCB               	goto	u1460
  4926     07CA                     u1461:
  4927     07CA  2FCD               	goto	l2562
  4928     07CB                     u1460:
  4929     07CB                     l2560:
  4930                           
  4931                           ;ai.c: 124:             choice = i;
  4932     07CB  084D               	movf	ai_run@i_787,w
  4933     07CC  00CA               	movwf	ai_run@choice
  4934     07CD                     l2562:
  4935                           
  4936                           ;ai.c: 126:     }
  4937     07CD  3001               	movlw	1
  4938     07CE  00C8               	movwf	??_ai_run
  4939     07CF  0848               	movf	??_ai_run,w
  4940     07D0  07CD               	addwf	ai_run@i_787,f
  4941     07D1                     l2564:
  4942     07D1  3005               	movlw	5
  4943     07D2  024D               	subwf	ai_run@i_787,w
  4944     07D3  1C03               	skipc
  4945     07D4  2FD6               	goto	u1471
  4946     07D5  2FD7               	goto	u1470
  4947     07D6                     u1471:
  4948     07D6  2FBD               	goto	l2558
  4949     07D7                     u1470:
  4950     07D7                     l2566:
  4951                           
  4952                           ;ai.c: 127:     return choice;
  4953     07D7  084A               	movf	ai_run@choice,w
  4954     07D8                     l549:
  4955     07D8  0008               	return
  4956     07D9                     __end_of_ai_run:
  4957                           
  4958                           	psect	text13
  4959     0185                     __ptext13:	
  4960 ;; *************** function _weights2_read *****************
  4961 ;; Defined at:
  4962 ;;		line 30 in file "ai.c"
  4963 ;; Parameters:    Size  Location     Type
  4964 ;;  add1            1    wreg     unsigned char 
  4965 ;;  add2            1    4[COMMON] unsigned char 
  4966 ;; Auto vars:     Size  Location     Type
  4967 ;;  add1            1    5[COMMON] unsigned char 
  4968 ;; Return value:  Size  Location     Type
  4969 ;;                  1    wreg      char 
  4970 ;; Registers used:
  4971 ;;		wreg, status,2, status,0, pclath, cstack
  4972 ;; Tracked objects:
  4973 ;;		On entry : 0/0
  4974 ;;		On exit  : 0/0
  4975 ;;		Unchanged: 0/0
  4976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4977 ;;      Params:         1       0       0       0       0       0
  4978 ;;      Locals:         1       0       0       0       0       0
  4979 ;;      Temps:          0       0       0       0       0       0
  4980 ;;      Totals:         2       0       0       0       0       0
  4981 ;;Total ram usage:        2 bytes
  4982 ;; Hardware stack levels used: 1
  4983 ;; Hardware stack levels required when called: 1
  4984 ;; This function calls:
  4985 ;;		___bmul
  4986 ;;		_eeprom_read
  4987 ;; This function is called by:
  4988 ;;		_ai_run
  4989 ;; This function uses a non-reentrant model
  4990 ;;
  4991                           
  4992     0185                     _weights2_read:	
  4993                           ;psect for function _weights2_read
  4994                           
  4995                           
  4996                           ;incstack = 0
  4997                           ; Regs used in _weights2_read: [wreg+status,2+status,0+pclath+cstack]
  4998                           ;weights2_read@add1 stored from wreg
  4999     0185  00F5               	movwf	weights2_read@add1
  5000     0186                     l2278:
  5001                           
  5002                           ;ai.c: 31:     return (int8_t)eeprom_read(0 +16*10 +10 + add1*10 + add2);
  5003     0186  300A               	movlw	10
  5004     0187  00F0               	movwf	___bmul@multiplicand
  5005     0188  0875               	movf	weights2_read@add1,w
  5006     0189  3182  221A  3181   	fcall	___bmul
  5007     018C  0774               	addwf	weights2_read@add2,w
  5008     018D  3EAA               	addlw	170
  5009     018E  3182  2205  3181   	fcall	_eeprom_read
  5010     0191                     l489:
  5011     0191  0008               	return
  5012     0192                     __end_of_weights2_read:
  5013                           
  5014                           	psect	text14
  5015     0192                     __ptext14:	
  5016 ;; *************** function _weights1_read *****************
  5017 ;; Defined at:
  5018 ;;		line 24 in file "ai.c"
  5019 ;; Parameters:    Size  Location     Type
  5020 ;;  add1            1    wreg     unsigned char 
  5021 ;;  add2            1    4[COMMON] unsigned char 
  5022 ;; Auto vars:     Size  Location     Type
  5023 ;;  add1            1    6[COMMON] unsigned char 
  5024 ;; Return value:  Size  Location     Type
  5025 ;;                  1    wreg      char 
  5026 ;; Registers used:
  5027 ;;		wreg, status,2, status,0, pclath, cstack
  5028 ;; Tracked objects:
  5029 ;;		On entry : 0/0
  5030 ;;		On exit  : 0/0
  5031 ;;		Unchanged: 0/0
  5032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5033 ;;      Params:         1       0       0       0       0       0
  5034 ;;      Locals:         1       0       0       0       0       0
  5035 ;;      Temps:          1       0       0       0       0       0
  5036 ;;      Totals:         3       0       0       0       0       0
  5037 ;;Total ram usage:        3 bytes
  5038 ;; Hardware stack levels used: 1
  5039 ;; Hardware stack levels required when called: 1
  5040 ;; This function calls:
  5041 ;;		_eeprom_read
  5042 ;; This function is called by:
  5043 ;;		_ai_run
  5044 ;; This function uses a non-reentrant model
  5045 ;;
  5046                           
  5047     0192                     _weights1_read:	
  5048                           ;psect for function _weights1_read
  5049                           
  5050                           
  5051                           ;incstack = 0
  5052                           ; Regs used in _weights1_read: [wreg+status,2+status,0+pclath+cstack]
  5053                           ;weights1_read@add1 stored from wreg
  5054     0192  00F6               	movwf	weights1_read@add1
  5055     0193                     l2270:
  5056                           
  5057                           ;ai.c: 25:     return (int8_t)eeprom_read(0 + add1*16 + add2);
  5058     0193  0876               	movf	weights1_read@add1,w
  5059     0194  00F5               	movwf	??_weights1_read
  5060     0195  3003               	movlw	3
  5061     0196                     u1105:
  5062     0196  35F5               	lslf	??_weights1_read,f
  5063     0197  3EFF               	addlw	-1
  5064     0198  1D03               	skipz
  5065     0199  2996               	goto	u1105
  5066     019A  3575               	lslf	??_weights1_read,w
  5067     019B  0774               	addwf	weights1_read@add2,w
  5068     019C  3182  2205  3181   	fcall	_eeprom_read
  5069     019F                     l483:
  5070     019F  0008               	return
  5071     01A0                     __end_of_weights1_read:
  5072                           
  5073                           	psect	text15
  5074     01B0                     __ptext15:	
  5075 ;; *************** function _sigmoid *****************
  5076 ;; Defined at:
  5077 ;;		line 8 in file "sigmoid.c"
  5078 ;; Parameters:    Size  Location     Type
  5079 ;;  z               1    wreg     unsigned char 
  5080 ;; Auto vars:     Size  Location     Type
  5081 ;;  z               1    1[COMMON] unsigned char 
  5082 ;; Return value:  Size  Location     Type
  5083 ;;                  1    wreg      unsigned char 
  5084 ;; Registers used:
  5085 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  5086 ;; Tracked objects:
  5087 ;;		On entry : 0/0
  5088 ;;		On exit  : 0/0
  5089 ;;		Unchanged: 0/0
  5090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5091 ;;      Params:         0       0       0       0       0       0
  5092 ;;      Locals:         1       0       0       0       0       0
  5093 ;;      Temps:          1       0       0       0       0       0
  5094 ;;      Totals:         2       0       0       0       0       0
  5095 ;;Total ram usage:        2 bytes
  5096 ;; Hardware stack levels used: 1
  5097 ;; This function calls:
  5098 ;;		Nothing
  5099 ;; This function is called by:
  5100 ;;		_ai_run
  5101 ;; This function uses a non-reentrant model
  5102 ;;
  5103                           
  5104     01B0                     _sigmoid:	
  5105                           ;psect for function _sigmoid
  5106                           
  5107                           
  5108                           ;incstack = 0
  5109                           ; Regs used in _sigmoid: [wreg-fsr0h+status,2+status,0+pclath]
  5110                           ;sigmoid@z stored from wreg
  5111     01B0  00F1               	movwf	sigmoid@z
  5112     01B1                     l2300:
  5113                           
  5114                           ;sigmoid.c: 9:     return sigmoidValues[z>>4];
  5115     01B1  0871               	movf	sigmoid@z,w
  5116     01B2  00F0               	movwf	??_sigmoid
  5117     01B3  3004               	movlw	4
  5118     01B4                     u1125:
  5119     01B4  36F0               	lsrf	??_sigmoid,f
  5120     01B5  0B89               	decfsz	9,f
  5121     01B6  29B4               	goto	u1125
  5122     01B7  0870               	movf	??_sigmoid,w
  5123     01B8  3E10               	addlw	low (_sigmoidValues| (0+32768))
  5124     01B9  0084               	movwf	4
  5125     01BA  3088               	movlw	high (_sigmoidValues| (0+32768))
  5126     01BB  1803               	skipnc
  5127     01BC  3E01               	addlw	1
  5128     01BD  0085               	movwf	5
  5129     01BE  0800               	movf	0,w	;code access
  5130     01BF                     l564:
  5131     01BF  0008               	return
  5132     01C0                     __end_of_sigmoid:
  5133                           
  5134                           	psect	text16
  5135     0155                     __ptext16:	
  5136 ;; *************** function _biases2_read *****************
  5137 ;; Defined at:
  5138 ;;		line 33 in file "ai.c"
  5139 ;; Parameters:    Size  Location     Type
  5140 ;;  add             1    wreg     unsigned char 
  5141 ;; Auto vars:     Size  Location     Type
  5142 ;;  add             1    4[COMMON] unsigned char 
  5143 ;; Return value:  Size  Location     Type
  5144 ;;                  1    wreg      char 
  5145 ;; Registers used:
  5146 ;;		wreg, status,2, status,0, pclath, cstack
  5147 ;; Tracked objects:
  5148 ;;		On entry : 0/0
  5149 ;;		On exit  : 0/0
  5150 ;;		Unchanged: 0/0
  5151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5152 ;;      Params:         0       0       0       0       0       0
  5153 ;;      Locals:         1       0       0       0       0       0
  5154 ;;      Temps:          0       0       0       0       0       0
  5155 ;;      Totals:         1       0       0       0       0       0
  5156 ;;Total ram usage:        1 bytes
  5157 ;; Hardware stack levels used: 1
  5158 ;; Hardware stack levels required when called: 1
  5159 ;; This function calls:
  5160 ;;		_eeprom_read
  5161 ;; This function is called by:
  5162 ;;		_ai_run
  5163 ;; This function uses a non-reentrant model
  5164 ;;
  5165                           
  5166     0155                     _biases2_read:	
  5167                           ;psect for function _biases2_read
  5168                           
  5169                           
  5170                           ;incstack = 0
  5171                           ; Regs used in _biases2_read: [wreg+status,2+status,0+pclath+cstack]
  5172                           ;biases2_read@add stored from wreg
  5173     0155  00F4               	movwf	biases2_read@add
  5174     0156                     l2282:
  5175                           
  5176                           ;ai.c: 34:     return (int8_t)eeprom_read(0 +16*10 +10 +5*10 + add);
  5177     0156  0874               	movf	biases2_read@add,w
  5178     0157  3EDC               	addlw	220
  5179     0158  3182  2205  3181   	fcall	_eeprom_read
  5180     015B                     l492:
  5181     015B  0008               	return
  5182     015C                     __end_of_biases2_read:
  5183                           
  5184                           	psect	text17
  5185     014E                     __ptext17:	
  5186 ;; *************** function _biases1_read *****************
  5187 ;; Defined at:
  5188 ;;		line 27 in file "ai.c"
  5189 ;; Parameters:    Size  Location     Type
  5190 ;;  add             1    wreg     unsigned char 
  5191 ;; Auto vars:     Size  Location     Type
  5192 ;;  add             1    4[COMMON] unsigned char 
  5193 ;; Return value:  Size  Location     Type
  5194 ;;                  1    wreg      char 
  5195 ;; Registers used:
  5196 ;;		wreg, status,2, status,0, pclath, cstack
  5197 ;; Tracked objects:
  5198 ;;		On entry : 0/0
  5199 ;;		On exit  : 0/0
  5200 ;;		Unchanged: 0/0
  5201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5202 ;;      Params:         0       0       0       0       0       0
  5203 ;;      Locals:         1       0       0       0       0       0
  5204 ;;      Temps:          0       0       0       0       0       0
  5205 ;;      Totals:         1       0       0       0       0       0
  5206 ;;Total ram usage:        1 bytes
  5207 ;; Hardware stack levels used: 1
  5208 ;; Hardware stack levels required when called: 1
  5209 ;; This function calls:
  5210 ;;		_eeprom_read
  5211 ;; This function is called by:
  5212 ;;		_ai_run
  5213 ;; This function uses a non-reentrant model
  5214 ;;
  5215                           
  5216     014E                     _biases1_read:	
  5217                           ;psect for function _biases1_read
  5218                           
  5219                           
  5220                           ;incstack = 0
  5221                           ; Regs used in _biases1_read: [wreg+status,2+status,0+pclath+cstack]
  5222                           ;biases1_read@add stored from wreg
  5223     014E  00F4               	movwf	biases1_read@add
  5224     014F                     l2274:
  5225                           
  5226                           ;ai.c: 28:     return (int8_t)eeprom_read(0 +16*10 + add);
  5227     014F  0874               	movf	biases1_read@add,w
  5228     0150  3EA0               	addlw	160
  5229     0151  3182  2205  3181   	fcall	_eeprom_read
  5230     0154                     l486:
  5231     0154  0008               	return
  5232     0155                     __end_of_biases1_read:
  5233                           
  5234                           	psect	text18
  5235     0291                     __ptext18:	
  5236 ;; *************** function ___wmul *****************
  5237 ;; Defined at:
  5238 ;;		line 15 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  5239 ;; Parameters:    Size  Location     Type
  5240 ;;  multiplier      2    7[COMMON] unsigned int 
  5241 ;;  multiplicand    2    9[COMMON] unsigned int 
  5242 ;; Auto vars:     Size  Location     Type
  5243 ;;  product         2   11[COMMON] unsigned int 
  5244 ;; Return value:  Size  Location     Type
  5245 ;;                  2    7[COMMON] unsigned int 
  5246 ;; Registers used:
  5247 ;;		wreg, status,2, status,0
  5248 ;; Tracked objects:
  5249 ;;		On entry : 0/0
  5250 ;;		On exit  : 0/0
  5251 ;;		Unchanged: 0/0
  5252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5253 ;;      Params:         4       0       0       0       0       0
  5254 ;;      Locals:         2       0       0       0       0       0
  5255 ;;      Temps:          0       0       0       0       0       0
  5256 ;;      Totals:         6       0       0       0       0       0
  5257 ;;Total ram usage:        6 bytes
  5258 ;; Hardware stack levels used: 1
  5259 ;; This function calls:
  5260 ;;		Nothing
  5261 ;; This function is called by:
  5262 ;;		_ai_run
  5263 ;; This function uses a non-reentrant model
  5264 ;;
  5265                           
  5266     0291                     ___wmul:	
  5267                           ;psect for function ___wmul
  5268                           
  5269     0291                     l2304:	
  5270                           ;incstack = 0
  5271                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5272                           
  5273     0291  01FB               	clrf	___wmul@product
  5274     0292  01FC               	clrf	___wmul@product+1
  5275     0293                     l2306:
  5276     0293  1C77               	btfss	___wmul@multiplier,0
  5277     0294  2A96               	goto	u1131
  5278     0295  2A97               	goto	u1130
  5279     0296                     u1131:
  5280     0296  2A9B               	goto	l754
  5281     0297                     u1130:
  5282     0297                     l2308:
  5283     0297  0879               	movf	___wmul@multiplicand,w
  5284     0298  07FB               	addwf	___wmul@product,f
  5285     0299  087A               	movf	___wmul@multiplicand+1,w
  5286     029A  3DFC               	addwfc	___wmul@product+1,f
  5287     029B                     l754:
  5288     029B  3001               	movlw	1
  5289     029C                     u1145:
  5290     029C  35F9               	lslf	___wmul@multiplicand,f
  5291     029D  0DFA               	rlf	___wmul@multiplicand+1,f
  5292     029E  0B89               	decfsz	9,f
  5293     029F  2A9C               	goto	u1145
  5294     02A0                     l2310:
  5295     02A0  3001               	movlw	1
  5296     02A1                     u1155:
  5297     02A1  36F8               	lsrf	___wmul@multiplier+1,f
  5298     02A2  0CF7               	rrf	___wmul@multiplier,f
  5299     02A3  0B89               	decfsz	9,f
  5300     02A4  2AA1               	goto	u1155
  5301     02A5                     l2312:
  5302     02A5  0877               	movf	___wmul@multiplier,w
  5303     02A6  0478               	iorwf	___wmul@multiplier+1,w
  5304     02A7  1D03               	btfss	3,2
  5305     02A8  2AAA               	goto	u1161
  5306     02A9  2AAB               	goto	u1160
  5307     02AA                     u1161:
  5308     02AA  2A93               	goto	l2306
  5309     02AB                     u1160:
  5310     02AB                     l2314:
  5311     02AB  087C               	movf	___wmul@product+1,w
  5312     02AC  00F8               	movwf	?___wmul+1
  5313     02AD  087B               	movf	___wmul@product,w
  5314     02AE  00F7               	movwf	?___wmul
  5315     02AF                     l756:
  5316     02AF  0008               	return
  5317     02B0                     __end_of___wmul:
  5318                           
  5319                           	psect	text19
  5320     03F4                     __ptext19:	
  5321 ;; *************** function ___awdiv *****************
  5322 ;; Defined at:
  5323 ;;		line 5 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
  5324 ;; Parameters:    Size  Location     Type
  5325 ;;  divisor         2    0[COMMON] int 
  5326 ;;  dividend        2    2[COMMON] int 
  5327 ;; Auto vars:     Size  Location     Type
  5328 ;;  quotient        2    7[COMMON] int 
  5329 ;;  sign            1    6[COMMON] unsigned char 
  5330 ;;  counter         1    5[COMMON] unsigned char 
  5331 ;; Return value:  Size  Location     Type
  5332 ;;                  2    0[COMMON] int 
  5333 ;; Registers used:
  5334 ;;		wreg, status,2, status,0
  5335 ;; Tracked objects:
  5336 ;;		On entry : 0/0
  5337 ;;		On exit  : 0/0
  5338 ;;		Unchanged: 0/0
  5339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5340 ;;      Params:         4       0       0       0       0       0
  5341 ;;      Locals:         4       0       0       0       0       0
  5342 ;;      Temps:          1       0       0       0       0       0
  5343 ;;      Totals:         9       0       0       0       0       0
  5344 ;;Total ram usage:        9 bytes
  5345 ;; Hardware stack levels used: 1
  5346 ;; This function calls:
  5347 ;;		Nothing
  5348 ;; This function is called by:
  5349 ;;		_ai_run
  5350 ;; This function uses a non-reentrant model
  5351 ;;
  5352                           
  5353     03F4                     ___awdiv:	
  5354                           ;psect for function ___awdiv
  5355                           
  5356     03F4                     l2318:	
  5357                           ;incstack = 0
  5358                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5359                           
  5360     03F4  01F6               	clrf	___awdiv@sign
  5361     03F5                     l2320:
  5362     03F5  1FF1               	btfss	___awdiv@divisor+1,7
  5363     03F6  2BF8               	goto	u1171
  5364     03F7  2BF9               	goto	u1170
  5365     03F8                     u1171:
  5366     03F8  2C00               	goto	l2326
  5367     03F9                     u1170:
  5368     03F9                     l2322:
  5369     03F9  09F0               	comf	___awdiv@divisor,f
  5370     03FA  09F1               	comf	___awdiv@divisor+1,f
  5371     03FB  0AF0               	incf	___awdiv@divisor,f
  5372     03FC  1903               	skipnz
  5373     03FD  0AF1               	incf	___awdiv@divisor+1,f
  5374     03FE                     l2324:
  5375     03FE  01F6               	clrf	___awdiv@sign
  5376     03FF  0AF6               	incf	___awdiv@sign,f
  5377     0400                     l2326:
  5378     0400  1FF3               	btfss	___awdiv@dividend+1,7
  5379     0401  2C03               	goto	u1181
  5380     0402  2C04               	goto	u1180
  5381     0403                     u1181:
  5382     0403  2C0D               	goto	l2332
  5383     0404                     u1180:
  5384     0404                     l2328:
  5385     0404  09F2               	comf	___awdiv@dividend,f
  5386     0405  09F3               	comf	___awdiv@dividend+1,f
  5387     0406  0AF2               	incf	___awdiv@dividend,f
  5388     0407  1903               	skipnz
  5389     0408  0AF3               	incf	___awdiv@dividend+1,f
  5390     0409                     l2330:
  5391     0409  3001               	movlw	1
  5392     040A  00F4               	movwf	??___awdiv
  5393     040B  0874               	movf	??___awdiv,w
  5394     040C  06F6               	xorwf	___awdiv@sign,f
  5395     040D                     l2332:
  5396     040D  01F7               	clrf	___awdiv@quotient
  5397     040E  01F8               	clrf	___awdiv@quotient+1
  5398     040F                     l2334:
  5399     040F  0870               	movf	___awdiv@divisor,w
  5400     0410  0471               	iorwf	___awdiv@divisor+1,w
  5401     0411  1903               	btfsc	3,2
  5402     0412  2C14               	goto	u1191
  5403     0413  2C15               	goto	u1190
  5404     0414                     u1191:
  5405     0414  2C44               	goto	l2354
  5406     0415                     u1190:
  5407     0415                     l2336:
  5408     0415  01F5               	clrf	___awdiv@counter
  5409     0416  0AF5               	incf	___awdiv@counter,f
  5410     0417  2C21               	goto	l2342
  5411     0418                     l2338:
  5412     0418  3001               	movlw	1
  5413     0419                     u1205:
  5414     0419  35F0               	lslf	___awdiv@divisor,f
  5415     041A  0DF1               	rlf	___awdiv@divisor+1,f
  5416     041B  0B89               	decfsz	9,f
  5417     041C  2C19               	goto	u1205
  5418     041D                     l2340:
  5419     041D  3001               	movlw	1
  5420     041E  00F4               	movwf	??___awdiv
  5421     041F  0874               	movf	??___awdiv,w
  5422     0420  07F5               	addwf	___awdiv@counter,f
  5423     0421                     l2342:
  5424     0421  1FF1               	btfss	___awdiv@divisor+1,7
  5425     0422  2C24               	goto	u1211
  5426     0423  2C25               	goto	u1210
  5427     0424                     u1211:
  5428     0424  2C18               	goto	l2338
  5429     0425                     u1210:
  5430     0425                     l2344:
  5431     0425  3001               	movlw	1
  5432     0426                     u1225:
  5433     0426  35F7               	lslf	___awdiv@quotient,f
  5434     0427  0DF8               	rlf	___awdiv@quotient+1,f
  5435     0428  0B89               	decfsz	9,f
  5436     0429  2C26               	goto	u1225
  5437     042A  0871               	movf	___awdiv@divisor+1,w
  5438     042B  0273               	subwf	___awdiv@dividend+1,w
  5439     042C  1D03               	skipz
  5440     042D  2C30               	goto	u1235
  5441     042E  0870               	movf	___awdiv@divisor,w
  5442     042F  0272               	subwf	___awdiv@dividend,w
  5443     0430                     u1235:
  5444     0430  1C03               	skipc
  5445     0431  2C33               	goto	u1231
  5446     0432  2C34               	goto	u1230
  5447     0433                     u1231:
  5448     0433  2C39               	goto	l2350
  5449     0434                     u1230:
  5450     0434                     l2346:
  5451     0434  0870               	movf	___awdiv@divisor,w
  5452     0435  02F2               	subwf	___awdiv@dividend,f
  5453     0436  0871               	movf	___awdiv@divisor+1,w
  5454     0437  3BF3               	subwfb	___awdiv@dividend+1,f
  5455     0438                     l2348:
  5456     0438  1477               	bsf	___awdiv@quotient,0
  5457     0439                     l2350:
  5458     0439  3001               	movlw	1
  5459     043A                     u1245:
  5460     043A  36F1               	lsrf	___awdiv@divisor+1,f
  5461     043B  0CF0               	rrf	___awdiv@divisor,f
  5462     043C  0B89               	decfsz	9,f
  5463     043D  2C3A               	goto	u1245
  5464     043E                     l2352:
  5465     043E  3001               	movlw	1
  5466     043F  02F5               	subwf	___awdiv@counter,f
  5467     0440  1D03               	btfss	3,2
  5468     0441  2C43               	goto	u1251
  5469     0442  2C44               	goto	u1250
  5470     0443                     u1251:
  5471     0443  2C25               	goto	l2344
  5472     0444                     u1250:
  5473     0444                     l2354:
  5474     0444  0876               	movf	___awdiv@sign,w
  5475     0445  1903               	btfsc	3,2
  5476     0446  2C48               	goto	u1261
  5477     0447  2C49               	goto	u1260
  5478     0448                     u1261:
  5479     0448  2C4E               	goto	l2358
  5480     0449                     u1260:
  5481     0449                     l2356:
  5482     0449  09F7               	comf	___awdiv@quotient,f
  5483     044A  09F8               	comf	___awdiv@quotient+1,f
  5484     044B  0AF7               	incf	___awdiv@quotient,f
  5485     044C  1903               	skipnz
  5486     044D  0AF8               	incf	___awdiv@quotient+1,f
  5487     044E                     l2358:
  5488     044E  0878               	movf	___awdiv@quotient+1,w
  5489     044F  00F1               	movwf	?___awdiv+1
  5490     0450  0877               	movf	___awdiv@quotient,w
  5491     0451  00F0               	movwf	?___awdiv
  5492     0452                     l907:
  5493     0452  0008               	return
  5494     0453                     __end_of___awdiv:
  5495                           
  5496                           	psect	text20
  5497     010C                     __ptext20:	
  5498 ;; *************** function _ai_propagate *****************
  5499 ;; Defined at:
  5500 ;;		line 130 in file "ai.c"
  5501 ;; Parameters:    Size  Location     Type
  5502 ;;  incentive       1    wreg     char 
  5503 ;; Auto vars:     Size  Location     Type
  5504 ;;  incentive       1    0[COMMON] char 
  5505 ;; Return value:  Size  Location     Type
  5506 ;;                  1    wreg      void 
  5507 ;; Registers used:
  5508 ;;		wreg, status,2, status,0
  5509 ;; Tracked objects:
  5510 ;;		On entry : 0/0
  5511 ;;		On exit  : 0/0
  5512 ;;		Unchanged: 0/0
  5513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5514 ;;      Params:         0       0       0       0       0       0
  5515 ;;      Locals:         1       0       0       0       0       0
  5516 ;;      Temps:          0       0       0       0       0       0
  5517 ;;      Totals:         1       0       0       0       0       0
  5518 ;;Total ram usage:        1 bytes
  5519 ;; Hardware stack levels used: 1
  5520 ;; This function calls:
  5521 ;;		Nothing
  5522 ;; This function is called by:
  5523 ;;		_main
  5524 ;; This function uses a non-reentrant model
  5525 ;;
  5526                           
  5527     010C                     _ai_propagate:	
  5528                           ;psect for function _ai_propagate
  5529                           
  5530     010C                     l2646:	
  5531                           ;incstack = 0
  5532                           ; Regs used in _ai_propagate: [wreg+status,2+status,0]
  5533                           
  5534     010C                     l553:
  5535     010C  0008               	return
  5536     010D                     __end_of_ai_propagate:
  5537                           
  5538                           	psect	text21
  5539     025F                     __ptext21:	
  5540 ;; *************** function _ai_is_ai_trained_write *****************
  5541 ;; Defined at:
  5542 ;;		line 49 in file "ai.c"
  5543 ;; Parameters:    Size  Location     Type
  5544 ;;  val             1    wreg     unsigned char 
  5545 ;; Auto vars:     Size  Location     Type
  5546 ;;  val             1    9[COMMON] unsigned char 
  5547 ;;  c               1   10[COMMON] unsigned char 
  5548 ;; Return value:  Size  Location     Type
  5549 ;;                  1    wreg      void 
  5550 ;; Registers used:
  5551 ;;		wreg, status,2, status,0, pclath, cstack
  5552 ;; Tracked objects:
  5553 ;;		On entry : 0/0
  5554 ;;		On exit  : 0/0
  5555 ;;		Unchanged: 0/0
  5556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5557 ;;      Params:         0       0       0       0       0       0
  5558 ;;      Locals:         2       0       0       0       0       0
  5559 ;;      Temps:          1       0       0       0       0       0
  5560 ;;      Totals:         3       0       0       0       0       0
  5561 ;;Total ram usage:        3 bytes
  5562 ;; Hardware stack levels used: 1
  5563 ;; Hardware stack levels required when called: 1
  5564 ;; This function calls:
  5565 ;;		_eeprom_read
  5566 ;;		_eeprom_write
  5567 ;; This function is called by:
  5568 ;;		_main
  5569 ;; This function uses a non-reentrant model
  5570 ;;
  5571                           
  5572     025F                     _ai_is_ai_trained_write:	
  5573                           ;psect for function _ai_is_ai_trained_write
  5574                           
  5575                           
  5576                           ;incstack = 0
  5577                           ; Regs used in _ai_is_ai_trained_write: [wreg+status,2+status,0+pclath+cstack]
  5578                           ;ai_is_ai_trained_write@val stored from wreg
  5579     025F  00F9               	movwf	ai_is_ai_trained_write@val
  5580     0260                     l2650:
  5581                           
  5582                           ;ai.c: 50:     unsigned char c = eeprom_read(0 +16*10 +10 +5*10 +5);
  5583     0260  30E1               	movlw	225
  5584     0261  3182  2205  3182   	fcall	_eeprom_read
  5585     0264  00FA               	movwf	ai_is_ai_trained_write@c
  5586     0265                     l2652:
  5587                           
  5588                           ;ai.c: 51:     if(val){
  5589     0265  0879               	movf	ai_is_ai_trained_write@val,w
  5590     0266  1903               	btfsc	3,2
  5591     0267  2A69               	goto	u1601
  5592     0268  2A6A               	goto	u1600
  5593     0269                     u1601:
  5594     0269  2A6C               	goto	l2656
  5595     026A                     u1600:
  5596     026A                     l2654:
  5597                           
  5598                           ;ai.c: 52:         (c) |= 1UL << (1);
  5599     026A  14FA               	bsf	ai_is_ai_trained_write@c,1
  5600                           
  5601                           ;ai.c: 53:     } else{
  5602     026B  2A70               	goto	l2658
  5603     026C                     l2656:
  5604                           
  5605                           ;ai.c: 54:         (c) &= ~(1UL << (1));
  5606     026C  30FD               	movlw	253
  5607     026D  00F8               	movwf	??_ai_is_ai_trained_write
  5608     026E  0878               	movf	??_ai_is_ai_trained_write,w
  5609     026F  05FA               	andwf	ai_is_ai_trained_write@c,f
  5610     0270                     l2658:
  5611                           
  5612                           ;ai.c: 56:     eeprom_write(0 +16*10 +10 +5*10 +5, c);
  5613     0270  087A               	movf	ai_is_ai_trained_write@c,w
  5614     0271  00F4               	movwf	eeprom_write@value
  5615     0272  30E1               	movlw	225
  5616     0273  3182  22FA  3182   	fcall	_eeprom_write
  5617     0276                     l505:
  5618     0276  0008               	return
  5619     0277                     __end_of_ai_is_ai_trained_write:
  5620                           
  5621                           	psect	text22
  5622     0135                     __ptext22:	
  5623 ;; *************** function _ai_is_ai_trained_read *****************
  5624 ;; Defined at:
  5625 ;;		line 58 in file "ai.c"
  5626 ;; Parameters:    Size  Location     Type
  5627 ;;		None
  5628 ;; Auto vars:     Size  Location     Type
  5629 ;;		None
  5630 ;; Return value:  Size  Location     Type
  5631 ;;                  1    wreg      unsigned char 
  5632 ;; Registers used:
  5633 ;;		wreg, status,2, status,0, pclath, cstack
  5634 ;; Tracked objects:
  5635 ;;		On entry : 0/0
  5636 ;;		On exit  : 0/0
  5637 ;;		Unchanged: 0/0
  5638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5639 ;;      Params:         0       0       0       0       0       0
  5640 ;;      Locals:         0       0       0       0       0       0
  5641 ;;      Temps:          0       0       0       0       0       0
  5642 ;;      Totals:         0       0       0       0       0       0
  5643 ;;Total ram usage:        0 bytes
  5644 ;; Hardware stack levels used: 1
  5645 ;; Hardware stack levels required when called: 1
  5646 ;; This function calls:
  5647 ;;		_eeprom_read
  5648 ;; This function is called by:
  5649 ;;		_main
  5650 ;; This function uses a non-reentrant model
  5651 ;;
  5652                           
  5653     0135                     _ai_is_ai_trained_read:	
  5654                           ;psect for function _ai_is_ai_trained_read
  5655                           
  5656     0135                     l2432:	
  5657                           ;incstack = 0
  5658                           ; Regs used in _ai_is_ai_trained_read: [wreg+status,2+status,0+pclath+cstack]
  5659                           
  5660                           
  5661                           ;ai.c: 59:     return (uint8_t)(eeprom_read(0 +16*10 +10 +5*10 +5)&0x02);
  5662     0135  30E1               	movlw	225
  5663     0136  3182  2205  3181   	fcall	_eeprom_read
  5664     0139  3902               	andlw	2
  5665     013A                     l508:
  5666     013A  0008               	return
  5667     013B                     __end_of_ai_is_ai_trained_read:
  5668                           
  5669                           	psect	text23
  5670     0453                     __ptext23:	
  5671 ;; *************** function _ai_initiate *****************
  5672 ;; Defined at:
  5673 ;;		line 75 in file "ai.c"
  5674 ;; Parameters:    Size  Location     Type
  5675 ;;		None
  5676 ;; Auto vars:     Size  Location     Type
  5677 ;;  i               1   10[BANK0 ] unsigned char 
  5678 ;;  i               1    9[BANK0 ] unsigned char 
  5679 ;;  j               1   12[BANK0 ] unsigned char 
  5680 ;;  j               1   11[BANK0 ] unsigned char 
  5681 ;; Return value:  Size  Location     Type
  5682 ;;                  1    wreg      void 
  5683 ;; Registers used:
  5684 ;;		wreg, status,2, status,0, pclath, cstack
  5685 ;; Tracked objects:
  5686 ;;		On entry : 0/0
  5687 ;;		On exit  : 0/0
  5688 ;;		Unchanged: 0/0
  5689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5690 ;;      Params:         0       0       0       0       0       0
  5691 ;;      Locals:         0       4       0       0       0       0
  5692 ;;      Temps:          0       1       0       0       0       0
  5693 ;;      Totals:         0       5       0       0       0       0
  5694 ;;Total ram usage:        5 bytes
  5695 ;; Hardware stack levels used: 1
  5696 ;; Hardware stack levels required when called: 2
  5697 ;; This function calls:
  5698 ;;		_ai_is_ai_initiated_read
  5699 ;;		_ai_is_ai_initiated_write
  5700 ;;		_biases1_write
  5701 ;;		_biases2_write
  5702 ;;		_rand
  5703 ;;		_weights1_write
  5704 ;;		_weights2_write
  5705 ;; This function is called by:
  5706 ;;		_main
  5707 ;; This function uses a non-reentrant model
  5708 ;;
  5709                           
  5710     0453                     _ai_initiate:	
  5711                           ;psect for function _ai_initiate
  5712                           
  5713     0453                     l2364:	
  5714                           ;incstack = 0
  5715                           ; Regs used in _ai_initiate: [wreg+status,2+status,0+pclath+cstack]
  5716                           
  5717                           
  5718                           ;ai.c: 76:     if(ai_is_ai_initiated_read()){
  5719     0453  3181  212F  3184   	fcall	_ai_is_ai_initiated_read
  5720     0456  3A00               	xorlw	0
  5721     0457  1903               	skipnz
  5722     0458  2C5A               	goto	u1271
  5723     0459  2C5B               	goto	u1270
  5724     045A                     u1271:
  5725     045A  2C5C               	goto	l2368
  5726     045B                     u1270:
  5727     045B  2CBD               	goto	l524
  5728     045C                     l2368:
  5729                           
  5730                           ;ai.c: 79:     for(uint8_t j = 0; j < 10; j++){
  5731     045C  0020               	movlb	0	; select bank0
  5732     045D  01D3               	clrf	ai_initiate@j
  5733     045E                     l2374:
  5734                           
  5735                           ;ai.c: 80:         biases1_write(j, (int8_t)rand());
  5736     045E  3183  2385  3184   	fcall	_rand
  5737     0461  087C               	movf	?_rand,w
  5738     0462  0020               	movlb	0	; select bank0
  5739     0463  00CC               	movwf	biases1_write@val
  5740     0464  0853               	movf	ai_initiate@j,w
  5741     0465  3181  2165  3184   	fcall	_biases1_write
  5742     0468                     l2376:
  5743                           
  5744                           ;ai.c: 81:         for(uint8_t i = 0; i < 16; i++){
  5745     0468  0020               	movlb	0	; select bank0
  5746     0469  01D1               	clrf	ai_initiate@i
  5747     046A                     l2382:
  5748                           
  5749                           ;ai.c: 82:             weights1_write(i,j, (int8_t)rand());
  5750     046A  0853               	movf	ai_initiate@j,w
  5751     046B  00CC               	movwf	weights1_write@add2
  5752     046C  3183  2385  3184   	fcall	_rand
  5753     046F  087C               	movf	?_rand,w
  5754     0470  0020               	movlb	0	; select bank0
  5755     0471  00CD               	movwf	weights1_write@val
  5756     0472  0851               	movf	ai_initiate@i,w
  5757     0473  3181  21C0  3184   	fcall	_weights1_write
  5758     0476                     l2384:
  5759                           
  5760                           ;ai.c: 83:         }
  5761     0476  3001               	movlw	1
  5762     0477  0020               	movlb	0	; select bank0
  5763     0478  00D0               	movwf	??_ai_initiate
  5764     0479  0850               	movf	??_ai_initiate,w
  5765     047A  07D1               	addwf	ai_initiate@i,f
  5766     047B                     l2386:
  5767     047B  3010               	movlw	16
  5768     047C  0251               	subwf	ai_initiate@i,w
  5769     047D  1C03               	skipc
  5770     047E  2C80               	goto	u1281
  5771     047F  2C81               	goto	u1280
  5772     0480                     u1281:
  5773     0480  2C6A               	goto	l2382
  5774     0481                     u1280:
  5775     0481                     l2388:
  5776                           
  5777                           ;ai.c: 84:     }
  5778     0481  3001               	movlw	1
  5779     0482  00D0               	movwf	??_ai_initiate
  5780     0483  0850               	movf	??_ai_initiate,w
  5781     0484  07D3               	addwf	ai_initiate@j,f
  5782     0485                     l2390:
  5783     0485  300A               	movlw	10
  5784     0486  0253               	subwf	ai_initiate@j,w
  5785     0487  1C03               	skipc
  5786     0488  2C8A               	goto	u1291
  5787     0489  2C8B               	goto	u1290
  5788     048A                     u1291:
  5789     048A  2C5E               	goto	l2374
  5790     048B                     u1290:
  5791     048B                     l2392:
  5792                           
  5793                           ;ai.c: 85:     for(uint8_t j = 0; j < 5; j++){
  5794     048B  01D4               	clrf	ai_initiate@j_770
  5795     048C                     l2398:
  5796                           
  5797                           ;ai.c: 86:         biases2_write(j, (int8_t)rand());
  5798     048C  3183  2385  3184   	fcall	_rand
  5799     048F  087C               	movf	?_rand,w
  5800     0490  0020               	movlb	0	; select bank0
  5801     0491  00CC               	movwf	biases2_write@val
  5802     0492  0854               	movf	ai_initiate@j_770,w
  5803     0493  3181  216F  3184   	fcall	_biases2_write
  5804     0496                     l2400:
  5805                           
  5806                           ;ai.c: 87:         for(uint8_t i = 0; i < 10; i++){
  5807     0496  0020               	movlb	0	; select bank0
  5808     0497  01D2               	clrf	ai_initiate@i_772
  5809     0498                     l2406:
  5810                           
  5811                           ;ai.c: 88:             weights2_write(i,j, (int8_t)rand());
  5812     0498  0854               	movf	ai_initiate@j_770,w
  5813     0499  00CC               	movwf	weights2_write@add2
  5814     049A  3183  2385  3184   	fcall	_rand
  5815     049D  087C               	movf	?_rand,w
  5816     049E  0020               	movlb	0	; select bank0
  5817     049F  00CD               	movwf	weights2_write@val
  5818     04A0  0852               	movf	ai_initiate@i_772,w
  5819     04A1  3181  21D1  3184   	fcall	_weights2_write
  5820     04A4                     l2408:
  5821                           
  5822                           ;ai.c: 89:         }
  5823     04A4  3001               	movlw	1
  5824     04A5  0020               	movlb	0	; select bank0
  5825     04A6  00D0               	movwf	??_ai_initiate
  5826     04A7  0850               	movf	??_ai_initiate,w
  5827     04A8  07D2               	addwf	ai_initiate@i_772,f
  5828     04A9                     l2410:
  5829     04A9  300A               	movlw	10
  5830     04AA  0252               	subwf	ai_initiate@i_772,w
  5831     04AB  1C03               	skipc
  5832     04AC  2CAE               	goto	u1301
  5833     04AD  2CAF               	goto	u1300
  5834     04AE                     u1301:
  5835     04AE  2C98               	goto	l2406
  5836     04AF                     u1300:
  5837     04AF                     l2412:
  5838                           
  5839                           ;ai.c: 90:     }
  5840     04AF  3001               	movlw	1
  5841     04B0  00D0               	movwf	??_ai_initiate
  5842     04B1  0850               	movf	??_ai_initiate,w
  5843     04B2  07D4               	addwf	ai_initiate@j_770,f
  5844     04B3                     l2414:
  5845     04B3  3005               	movlw	5
  5846     04B4  0254               	subwf	ai_initiate@j_770,w
  5847     04B5  1C03               	skipc
  5848     04B6  2CB8               	goto	u1311
  5849     04B7  2CB9               	goto	u1310
  5850     04B8                     u1311:
  5851     04B8  2C8C               	goto	l2398
  5852     04B9                     u1310:
  5853     04B9                     l2416:
  5854                           
  5855                           ;ai.c: 91:     ai_is_ai_initiated_write(1);
  5856     04B9  3001               	movlw	1
  5857     04BA  3182  2247  3184   	fcall	_ai_is_ai_initiated_write
  5858     04BD                     l524:
  5859     04BD  0008               	return
  5860     04BE                     __end_of_ai_initiate:
  5861                           
  5862                           	psect	text24
  5863     01D1                     __ptext24:	
  5864 ;; *************** function _weights2_write *****************
  5865 ;; Defined at:
  5866 ;;		line 18 in file "ai.c"
  5867 ;; Parameters:    Size  Location     Type
  5868 ;;  add1            1    wreg     unsigned char 
  5869 ;;  add2            1    4[BANK0 ] unsigned char 
  5870 ;;  val             1    5[BANK0 ] char 
  5871 ;; Auto vars:     Size  Location     Type
  5872 ;;  add1            1    6[BANK0 ] unsigned char 
  5873 ;; Return value:  Size  Location     Type
  5874 ;;                  1    wreg      void 
  5875 ;; Registers used:
  5876 ;;		wreg, status,2, status,0, pclath, cstack
  5877 ;; Tracked objects:
  5878 ;;		On entry : 0/0
  5879 ;;		On exit  : 0/0
  5880 ;;		Unchanged: 0/0
  5881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5882 ;;      Params:         0       2       0       0       0       0
  5883 ;;      Locals:         0       1       0       0       0       0
  5884 ;;      Temps:          0       0       0       0       0       0
  5885 ;;      Totals:         0       3       0       0       0       0
  5886 ;;Total ram usage:        3 bytes
  5887 ;; Hardware stack levels used: 1
  5888 ;; Hardware stack levels required when called: 1
  5889 ;; This function calls:
  5890 ;;		___bmul
  5891 ;;		_eeprom_write
  5892 ;; This function is called by:
  5893 ;;		_ai_initiate
  5894 ;; This function uses a non-reentrant model
  5895 ;;
  5896                           
  5897     01D1                     _weights2_write:	
  5898                           ;psect for function _weights2_write
  5899                           
  5900                           
  5901                           ;incstack = 0
  5902                           ; Regs used in _weights2_write: [wreg+status,2+status,0+pclath+cstack]
  5903                           ;weights2_write@add1 stored from wreg
  5904     01D1  0020               	movlb	0	; select bank0
  5905     01D2  00CE               	movwf	weights2_write@add1
  5906     01D3                     l2266:
  5907                           
  5908                           ;ai.c: 19:     eeprom_write(0 +16*10 +10 + 10*add1 + add2, (unsigned char)val);
  5909     01D3  084D               	movf	weights2_write@val,w
  5910     01D4  00F4               	movwf	eeprom_write@value
  5911     01D5  300A               	movlw	10
  5912     01D6  00F0               	movwf	___bmul@multiplicand
  5913     01D7  084E               	movf	weights2_write@add1,w
  5914     01D8  3182  221A  3181   	fcall	___bmul
  5915     01DB  0020               	movlb	0	; select bank0
  5916     01DC  074C               	addwf	weights2_write@add2,w
  5917     01DD  3EAA               	addlw	170
  5918     01DE  3182  22FA  3181   	fcall	_eeprom_write
  5919     01E1                     l477:
  5920     01E1  0008               	return
  5921     01E2                     __end_of_weights2_write:
  5922                           
  5923                           	psect	text25
  5924     021A                     __ptext25:	
  5925 ;; *************** function ___bmul *****************
  5926 ;; Defined at:
  5927 ;;		line 4 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\common\Umul8.c"
  5928 ;; Parameters:    Size  Location     Type
  5929 ;;  multiplier      1    wreg     unsigned char 
  5930 ;;  multiplicand    1    0[COMMON] unsigned char 
  5931 ;; Auto vars:     Size  Location     Type
  5932 ;;  multiplier      1    3[COMMON] unsigned char 
  5933 ;;  product         1    2[COMMON] unsigned char 
  5934 ;; Return value:  Size  Location     Type
  5935 ;;                  1    wreg      unsigned char 
  5936 ;; Registers used:
  5937 ;;		wreg, status,2, status,0
  5938 ;; Tracked objects:
  5939 ;;		On entry : 0/0
  5940 ;;		On exit  : 0/0
  5941 ;;		Unchanged: 0/0
  5942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5943 ;;      Params:         1       0       0       0       0       0
  5944 ;;      Locals:         2       0       0       0       0       0
  5945 ;;      Temps:          1       0       0       0       0       0
  5946 ;;      Totals:         4       0       0       0       0       0
  5947 ;;Total ram usage:        4 bytes
  5948 ;; Hardware stack levels used: 1
  5949 ;; This function calls:
  5950 ;;		Nothing
  5951 ;; This function is called by:
  5952 ;;		_weights2_write
  5953 ;;		_weights2_read
  5954 ;; This function uses a non-reentrant model
  5955 ;;
  5956                           
  5957     021A                     ___bmul:	
  5958                           ;psect for function ___bmul
  5959                           
  5960                           
  5961                           ;incstack = 0
  5962                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  5963                           ;___bmul@multiplier stored from wreg
  5964     021A  00F3               	movwf	___bmul@multiplier
  5965     021B                     l2184:
  5966     021B  01F2               	clrf	___bmul@product
  5967     021C                     l2186:
  5968     021C  1C73               	btfss	___bmul@multiplier,0
  5969     021D  2A1F               	goto	u1041
  5970     021E  2A20               	goto	u1040
  5971     021F                     u1041:
  5972     021F  2A24               	goto	l2190
  5973     0220                     u1040:
  5974     0220                     l2188:
  5975     0220  0870               	movf	___bmul@multiplicand,w
  5976     0221  00F1               	movwf	??___bmul
  5977     0222  0871               	movf	??___bmul,w
  5978     0223  07F2               	addwf	___bmul@product,f
  5979     0224                     l2190:
  5980     0224  1003               	clrc
  5981     0225  0DF0               	rlf	___bmul@multiplicand,f
  5982     0226                     l2192:
  5983     0226  1003               	clrc
  5984     0227  0CF3               	rrf	___bmul@multiplier,f
  5985     0228  0873               	movf	___bmul@multiplier,w
  5986     0229  1D03               	btfss	3,2
  5987     022A  2A2C               	goto	u1051
  5988     022B  2A2D               	goto	u1050
  5989     022C                     u1051:
  5990     022C  2A1C               	goto	l2186
  5991     022D                     u1050:
  5992     022D                     l2194:
  5993     022D  0872               	movf	___bmul@product,w
  5994     022E                     l780:
  5995     022E  0008               	return
  5996     022F                     __end_of___bmul:
  5997                           
  5998                           	psect	text26
  5999     01C0                     __ptext26:	
  6000 ;; *************** function _weights1_write *****************
  6001 ;; Defined at:
  6002 ;;		line 12 in file "ai.c"
  6003 ;; Parameters:    Size  Location     Type
  6004 ;;  add1            1    wreg     unsigned char 
  6005 ;;  add2            1    4[BANK0 ] unsigned char 
  6006 ;;  val             1    5[BANK0 ] char 
  6007 ;; Auto vars:     Size  Location     Type
  6008 ;;  add1            1    7[BANK0 ] unsigned char 
  6009 ;; Return value:  Size  Location     Type
  6010 ;;                  1    wreg      void 
  6011 ;; Registers used:
  6012 ;;		wreg, status,2, status,0, pclath, cstack
  6013 ;; Tracked objects:
  6014 ;;		On entry : 0/0
  6015 ;;		On exit  : 0/0
  6016 ;;		Unchanged: 0/0
  6017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6018 ;;      Params:         0       2       0       0       0       0
  6019 ;;      Locals:         0       1       0       0       0       0
  6020 ;;      Temps:          0       1       0       0       0       0
  6021 ;;      Totals:         0       4       0       0       0       0
  6022 ;;Total ram usage:        4 bytes
  6023 ;; Hardware stack levels used: 1
  6024 ;; Hardware stack levels required when called: 1
  6025 ;; This function calls:
  6026 ;;		_eeprom_write
  6027 ;; This function is called by:
  6028 ;;		_ai_initiate
  6029 ;; This function uses a non-reentrant model
  6030 ;;
  6031                           
  6032     01C0                     _weights1_write:	
  6033                           ;psect for function _weights1_write
  6034                           
  6035                           
  6036                           ;incstack = 0
  6037                           ; Regs used in _weights1_write: [wreg+status,2+status,0+pclath+cstack]
  6038                           ;weights1_write@add1 stored from wreg
  6039     01C0  0020               	movlb	0	; select bank0
  6040     01C1  00CF               	movwf	weights1_write@add1
  6041     01C2                     l2262:
  6042                           
  6043                           ;ai.c: 13:     eeprom_write(0 + 16*add1 + add2, (unsigned char)val);
  6044     01C2  084D               	movf	weights1_write@val,w
  6045     01C3  00F4               	movwf	eeprom_write@value
  6046     01C4  084F               	movf	weights1_write@add1,w
  6047     01C5  00CE               	movwf	??_weights1_write
  6048     01C6  3003               	movlw	3
  6049     01C7                     u1095:
  6050     01C7  35CE               	lslf	??_weights1_write,f
  6051     01C8  3EFF               	addlw	-1
  6052     01C9  1D03               	skipz
  6053     01CA  29C7               	goto	u1095
  6054     01CB  354E               	lslf	??_weights1_write,w
  6055     01CC  074C               	addwf	weights1_write@add2,w
  6056     01CD  3182  22FA  3181   	fcall	_eeprom_write
  6057     01D0                     l471:
  6058     01D0  0008               	return
  6059     01D1                     __end_of_weights1_write:
  6060                           
  6061                           	psect	text27
  6062     0385                     __ptext27:	
  6063 ;; *************** function _rand *****************
  6064 ;; Defined at:
  6065 ;;		line 11 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\common\rand.c"
  6066 ;; Parameters:    Size  Location     Type
  6067 ;;		None
  6068 ;; Auto vars:     Size  Location     Type
  6069 ;;		None
  6070 ;; Return value:  Size  Location     Type
  6071 ;;                  2   12[COMMON] int 
  6072 ;; Registers used:
  6073 ;;		wreg, status,2, status,0, pclath, cstack
  6074 ;; Tracked objects:
  6075 ;;		On entry : 0/0
  6076 ;;		On exit  : 0/0
  6077 ;;		Unchanged: 0/0
  6078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6079 ;;      Params:         2       0       0       0       0       0
  6080 ;;      Locals:         0       0       0       0       0       0
  6081 ;;      Temps:          0       4       0       0       0       0
  6082 ;;      Totals:         2       4       0       0       0       0
  6083 ;;Total ram usage:        6 bytes
  6084 ;; Hardware stack levels used: 1
  6085 ;; Hardware stack levels required when called: 1
  6086 ;; This function calls:
  6087 ;;		___lmul
  6088 ;; This function is called by:
  6089 ;;		_snake_initiate
  6090 ;;		_snake_move
  6091 ;;		_ai_initiate
  6092 ;; This function uses a non-reentrant model
  6093 ;;
  6094                           
  6095     0385                     _rand:	
  6096                           ;psect for function _rand
  6097                           
  6098     0385                     l2154:	
  6099                           ;incstack = 0
  6100                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
  6101                           
  6102     0385  0020               	movlb	0	; select bank0
  6103     0386  0847               	movf	_seed+3,w
  6104     0387  00F3               	movwf	___lmul@multiplier+3
  6105     0388  0846               	movf	_seed+2,w
  6106     0389  00F2               	movwf	___lmul@multiplier+2
  6107     038A  0845               	movf	_seed+1,w
  6108     038B  00F1               	movwf	___lmul@multiplier+1
  6109     038C  0844               	movf	_seed,w
  6110     038D  00F0               	movwf	___lmul@multiplier
  6111     038E  304C               	movlw	76
  6112     038F  00F7               	movwf	___lmul@multiplicand+3
  6113     0390  3095               	movlw	149
  6114     0391  00F6               	movwf	___lmul@multiplicand+2
  6115     0392  307F               	movlw	127
  6116     0393  00F5               	movwf	___lmul@multiplicand+1
  6117     0394  302D               	movlw	45
  6118     0395  00F4               	movwf	___lmul@multiplicand
  6119     0396  3183  2352  3183   	fcall	___lmul
  6120     0399  3001               	movlw	1
  6121     039A  0770               	addwf	?___lmul,w
  6122     039B  0020               	movlb	0	; select bank0
  6123     039C  00C4               	movwf	_seed
  6124     039D  3000               	movlw	0
  6125     039E  3D71               	addwfc	?___lmul+1,w
  6126     039F  00C5               	movwf	_seed+1
  6127     03A0  3000               	movlw	0
  6128     03A1  3D72               	addwfc	?___lmul+2,w
  6129     03A2  00C6               	movwf	_seed+2
  6130     03A3  3000               	movlw	0
  6131     03A4  3D73               	addwfc	?___lmul+3,w
  6132     03A5  00C7               	movwf	_seed+3
  6133     03A6                     l2156:
  6134     03A6  0844               	movf	_seed,w
  6135     03A7  00C8               	movwf	??_rand
  6136     03A8  0845               	movf	_seed+1,w
  6137     03A9  00C9               	movwf	??_rand+1
  6138     03AA  0846               	movf	_seed+2,w
  6139     03AB  00CA               	movwf	??_rand+2
  6140     03AC  0847               	movf	_seed+3,w
  6141     03AD  00CB               	movwf	??_rand+3
  6142     03AE  3011               	movlw	17
  6143     03AF                     u995:
  6144     03AF  36CB               	lsrf	??_rand+3,f
  6145     03B0  0CCA               	rrf	??_rand+2,f
  6146     03B1  0CC9               	rrf	??_rand+1,f
  6147     03B2  0CC8               	rrf	??_rand,f
  6148     03B3                     u990:
  6149     03B3  0B89               	decfsz	9,f
  6150     03B4  2BAF               	goto	u995
  6151     03B5  0849               	movf	??_rand+1,w
  6152     03B6  00FD               	movwf	?_rand+1
  6153     03B7  0848               	movf	??_rand,w
  6154     03B8  00FC               	movwf	?_rand
  6155     03B9                     l1218:
  6156     03B9  0008               	return
  6157     03BA                     __end_of_rand:
  6158                           
  6159                           	psect	text28
  6160     0352                     __ptext28:	
  6161 ;; *************** function ___lmul *****************
  6162 ;; Defined at:
  6163 ;;		line 15 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\common\Umul32.c"
  6164 ;; Parameters:    Size  Location     Type
  6165 ;;  multiplier      4    0[COMMON] unsigned long 
  6166 ;;  multiplicand    4    4[COMMON] unsigned long 
  6167 ;; Auto vars:     Size  Location     Type
  6168 ;;  product         4    8[COMMON] unsigned long 
  6169 ;; Return value:  Size  Location     Type
  6170 ;;                  4    0[COMMON] unsigned long 
  6171 ;; Registers used:
  6172 ;;		wreg, status,2, status,0
  6173 ;; Tracked objects:
  6174 ;;		On entry : 0/0
  6175 ;;		On exit  : 0/0
  6176 ;;		Unchanged: 0/0
  6177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6178 ;;      Params:         8       0       0       0       0       0
  6179 ;;      Locals:         4       0       0       0       0       0
  6180 ;;      Temps:          0       0       0       0       0       0
  6181 ;;      Totals:        12       0       0       0       0       0
  6182 ;;Total ram usage:       12 bytes
  6183 ;; Hardware stack levels used: 1
  6184 ;; This function calls:
  6185 ;;		Nothing
  6186 ;; This function is called by:
  6187 ;;		_rand
  6188 ;; This function uses a non-reentrant model
  6189 ;;
  6190                           
  6191     0352                     ___lmul:	
  6192                           ;psect for function ___lmul
  6193                           
  6194     0352                     l2132:	
  6195                           ;incstack = 0
  6196                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  6197                           
  6198     0352  3000               	movlw	0
  6199     0353  00FB               	movwf	___lmul@product+3
  6200     0354  3000               	movlw	0
  6201     0355  00FA               	movwf	___lmul@product+2
  6202     0356  3000               	movlw	0
  6203     0357  00F9               	movwf	___lmul@product+1
  6204     0358  3000               	movlw	0
  6205     0359  00F8               	movwf	___lmul@product
  6206     035A                     l2134:
  6207     035A  1C70               	btfss	___lmul@multiplier,0
  6208     035B  2B5D               	goto	u951
  6209     035C  2B5E               	goto	u950
  6210     035D                     u951:
  6211     035D  2B66               	goto	l2138
  6212     035E                     u950:
  6213     035E                     l2136:
  6214     035E  0874               	movf	___lmul@multiplicand,w
  6215     035F  07F8               	addwf	___lmul@product,f
  6216     0360  0875               	movf	___lmul@multiplicand+1,w
  6217     0361  3DF9               	addwfc	___lmul@product+1,f
  6218     0362  0876               	movf	___lmul@multiplicand+2,w
  6219     0363  3DFA               	addwfc	___lmul@product+2,f
  6220     0364  0877               	movf	___lmul@multiplicand+3,w
  6221     0365  3DFB               	addwfc	___lmul@product+3,f
  6222     0366                     l2138:
  6223     0366  3001               	movlw	1
  6224     0367                     u965:
  6225     0367  35F4               	lslf	___lmul@multiplicand,f
  6226     0368  0DF5               	rlf	___lmul@multiplicand+1,f
  6227     0369  0DF6               	rlf	___lmul@multiplicand+2,f
  6228     036A  0DF7               	rlf	___lmul@multiplicand+3,f
  6229     036B  0B89               	decfsz	9,f
  6230     036C  2B67               	goto	u965
  6231     036D                     l2140:
  6232     036D  3001               	movlw	1
  6233     036E                     u975:
  6234     036E  36F3               	lsrf	___lmul@multiplier+3,f
  6235     036F  0CF2               	rrf	___lmul@multiplier+2,f
  6236     0370  0CF1               	rrf	___lmul@multiplier+1,f
  6237     0371  0CF0               	rrf	___lmul@multiplier,f
  6238     0372  0B89               	decfsz	9,f
  6239     0373  2B6E               	goto	u975
  6240     0374  0873               	movf	___lmul@multiplier+3,w
  6241     0375  0472               	iorwf	___lmul@multiplier+2,w
  6242     0376  0471               	iorwf	___lmul@multiplier+1,w
  6243     0377  0470               	iorwf	___lmul@multiplier,w
  6244     0378  1D03               	skipz
  6245     0379  2B7B               	goto	u981
  6246     037A  2B7C               	goto	u980
  6247     037B                     u981:
  6248     037B  2B5A               	goto	l2134
  6249     037C                     u980:
  6250     037C                     l2142:
  6251     037C  087B               	movf	___lmul@product+3,w
  6252     037D  00F3               	movwf	?___lmul+3
  6253     037E  087A               	movf	___lmul@product+2,w
  6254     037F  00F2               	movwf	?___lmul+2
  6255     0380  0879               	movf	___lmul@product+1,w
  6256     0381  00F1               	movwf	?___lmul+1
  6257     0382  0878               	movf	___lmul@product,w
  6258     0383  00F0               	movwf	?___lmul
  6259     0384                     l768:
  6260     0384  0008               	return
  6261     0385                     __end_of___lmul:
  6262                           
  6263                           	psect	text29
  6264     016F                     __ptext29:	
  6265 ;; *************** function _biases2_write *****************
  6266 ;; Defined at:
  6267 ;;		line 21 in file "ai.c"
  6268 ;; Parameters:    Size  Location     Type
  6269 ;;  add             1    wreg     unsigned char 
  6270 ;;  val             1    4[BANK0 ] char 
  6271 ;; Auto vars:     Size  Location     Type
  6272 ;;  add             1    5[BANK0 ] unsigned char 
  6273 ;; Return value:  Size  Location     Type
  6274 ;;                  1    wreg      void 
  6275 ;; Registers used:
  6276 ;;		wreg, status,2, status,0, pclath, cstack
  6277 ;; Tracked objects:
  6278 ;;		On entry : 0/0
  6279 ;;		On exit  : 0/0
  6280 ;;		Unchanged: 0/0
  6281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6282 ;;      Params:         0       1       0       0       0       0
  6283 ;;      Locals:         0       1       0       0       0       0
  6284 ;;      Temps:          0       0       0       0       0       0
  6285 ;;      Totals:         0       2       0       0       0       0
  6286 ;;Total ram usage:        2 bytes
  6287 ;; Hardware stack levels used: 1
  6288 ;; Hardware stack levels required when called: 1
  6289 ;; This function calls:
  6290 ;;		_eeprom_write
  6291 ;; This function is called by:
  6292 ;;		_ai_initiate
  6293 ;; This function uses a non-reentrant model
  6294 ;;
  6295                           
  6296     016F                     _biases2_write:	
  6297                           ;psect for function _biases2_write
  6298                           
  6299                           
  6300                           ;incstack = 0
  6301                           ; Regs used in _biases2_write: [wreg+status,2+status,0+pclath+cstack]
  6302                           ;biases2_write@add stored from wreg
  6303     016F  0020               	movlb	0	; select bank0
  6304     0170  00CD               	movwf	biases2_write@add
  6305     0171                     l2268:
  6306                           
  6307                           ;ai.c: 22:     eeprom_write(0 +16*10 +10 +5*10 + add, (unsigned char)val);
  6308     0171  084C               	movf	biases2_write@val,w
  6309     0172  00F4               	movwf	eeprom_write@value
  6310     0173  084D               	movf	biases2_write@add,w
  6311     0174  3EDC               	addlw	220
  6312     0175  3182  22FA  3181   	fcall	_eeprom_write
  6313     0178                     l480:
  6314     0178  0008               	return
  6315     0179                     __end_of_biases2_write:
  6316                           
  6317                           	psect	text30
  6318     0165                     __ptext30:	
  6319 ;; *************** function _biases1_write *****************
  6320 ;; Defined at:
  6321 ;;		line 15 in file "ai.c"
  6322 ;; Parameters:    Size  Location     Type
  6323 ;;  add             1    wreg     unsigned char 
  6324 ;;  val             1    4[BANK0 ] char 
  6325 ;; Auto vars:     Size  Location     Type
  6326 ;;  add             1    5[BANK0 ] unsigned char 
  6327 ;; Return value:  Size  Location     Type
  6328 ;;                  1    wreg      void 
  6329 ;; Registers used:
  6330 ;;		wreg, status,2, status,0, pclath, cstack
  6331 ;; Tracked objects:
  6332 ;;		On entry : 0/0
  6333 ;;		On exit  : 0/0
  6334 ;;		Unchanged: 0/0
  6335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6336 ;;      Params:         0       1       0       0       0       0
  6337 ;;      Locals:         0       1       0       0       0       0
  6338 ;;      Temps:          0       0       0       0       0       0
  6339 ;;      Totals:         0       2       0       0       0       0
  6340 ;;Total ram usage:        2 bytes
  6341 ;; Hardware stack levels used: 1
  6342 ;; Hardware stack levels required when called: 1
  6343 ;; This function calls:
  6344 ;;		_eeprom_write
  6345 ;; This function is called by:
  6346 ;;		_ai_initiate
  6347 ;; This function uses a non-reentrant model
  6348 ;;
  6349                           
  6350     0165                     _biases1_write:	
  6351                           ;psect for function _biases1_write
  6352                           
  6353                           
  6354                           ;incstack = 0
  6355                           ; Regs used in _biases1_write: [wreg+status,2+status,0+pclath+cstack]
  6356                           ;biases1_write@add stored from wreg
  6357     0165  0020               	movlb	0	; select bank0
  6358     0166  00CD               	movwf	biases1_write@add
  6359     0167                     l2264:
  6360                           
  6361                           ;ai.c: 16:     eeprom_write(0 +16*10 + add, (unsigned char)val);
  6362     0167  084C               	movf	biases1_write@val,w
  6363     0168  00F4               	movwf	eeprom_write@value
  6364     0169  084D               	movf	biases1_write@add,w
  6365     016A  3EA0               	addlw	160
  6366     016B  3182  22FA  3181   	fcall	_eeprom_write
  6367     016E                     l474:
  6368     016E  0008               	return
  6369     016F                     __end_of_biases1_write:
  6370                           
  6371                           	psect	text31
  6372     0247                     __ptext31:	
  6373 ;; *************** function _ai_is_ai_initiated_write *****************
  6374 ;; Defined at:
  6375 ;;		line 37 in file "ai.c"
  6376 ;; Parameters:    Size  Location     Type
  6377 ;;  val             1    wreg     unsigned char 
  6378 ;; Auto vars:     Size  Location     Type
  6379 ;;  val             1    9[COMMON] unsigned char 
  6380 ;;  c               1   10[COMMON] unsigned char 
  6381 ;; Return value:  Size  Location     Type
  6382 ;;                  1    wreg      void 
  6383 ;; Registers used:
  6384 ;;		wreg, status,2, status,0, pclath, cstack
  6385 ;; Tracked objects:
  6386 ;;		On entry : 0/0
  6387 ;;		On exit  : 0/0
  6388 ;;		Unchanged: 0/0
  6389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6390 ;;      Params:         0       0       0       0       0       0
  6391 ;;      Locals:         2       0       0       0       0       0
  6392 ;;      Temps:          1       0       0       0       0       0
  6393 ;;      Totals:         3       0       0       0       0       0
  6394 ;;Total ram usage:        3 bytes
  6395 ;; Hardware stack levels used: 1
  6396 ;; Hardware stack levels required when called: 1
  6397 ;; This function calls:
  6398 ;;		_eeprom_read
  6399 ;;		_eeprom_write
  6400 ;; This function is called by:
  6401 ;;		_ai_initiate
  6402 ;; This function uses a non-reentrant model
  6403 ;;
  6404                           
  6405     0247                     _ai_is_ai_initiated_write:	
  6406                           ;psect for function _ai_is_ai_initiated_write
  6407                           
  6408                           
  6409                           ;incstack = 0
  6410                           ; Regs used in _ai_is_ai_initiated_write: [wreg+status,2+status,0+pclath+cstack]
  6411                           ;ai_is_ai_initiated_write@val stored from wreg
  6412     0247  00F9               	movwf	ai_is_ai_initiated_write@val
  6413     0248                     l2286:
  6414                           
  6415                           ;ai.c: 38:     unsigned char c = eeprom_read(0 +16*10 +10 +5*10 +5);
  6416     0248  30E1               	movlw	225
  6417     0249  3182  2205  3182   	fcall	_eeprom_read
  6418     024C  00FA               	movwf	ai_is_ai_initiated_write@c
  6419     024D                     l2288:
  6420                           
  6421                           ;ai.c: 39:     if(val){
  6422     024D  0879               	movf	ai_is_ai_initiated_write@val,w
  6423     024E  1903               	btfsc	3,2
  6424     024F  2A51               	goto	u1111
  6425     0250  2A52               	goto	u1110
  6426     0251                     u1111:
  6427     0251  2A54               	goto	l2292
  6428     0252                     u1110:
  6429     0252                     l2290:
  6430                           
  6431                           ;ai.c: 40:         (c) |= 1UL << (0);
  6432     0252  147A               	bsf	ai_is_ai_initiated_write@c,0
  6433                           
  6434                           ;ai.c: 41:     } else{
  6435     0253  2A58               	goto	l2294
  6436     0254                     l2292:
  6437                           
  6438                           ;ai.c: 42:         (c) &= ~(1UL << (0));
  6439     0254  30FE               	movlw	254
  6440     0255  00F8               	movwf	??_ai_is_ai_initiated_write
  6441     0256  0878               	movf	??_ai_is_ai_initiated_write,w
  6442     0257  05FA               	andwf	ai_is_ai_initiated_write@c,f
  6443     0258                     l2294:
  6444                           
  6445                           ;ai.c: 44:     eeprom_write(0 +16*10 +10 +5*10 +5, c);
  6446     0258  087A               	movf	ai_is_ai_initiated_write@c,w
  6447     0259  00F4               	movwf	eeprom_write@value
  6448     025A  30E1               	movlw	225
  6449     025B  3182  22FA  3182   	fcall	_eeprom_write
  6450     025E                     l497:
  6451     025E  0008               	return
  6452     025F                     __end_of_ai_is_ai_initiated_write:
  6453                           
  6454                           	psect	text32
  6455     02FA                     __ptext32:	
  6456 ;; *************** function _eeprom_write *****************
  6457 ;; Defined at:
  6458 ;;		line 6 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\pic\__eewrite.c"
  6459 ;; Parameters:    Size  Location     Type
  6460 ;;  addr            1    wreg     unsigned char 
  6461 ;;  value           1    4[COMMON] unsigned char 
  6462 ;; Auto vars:     Size  Location     Type
  6463 ;;  addr            1    7[COMMON] unsigned char 
  6464 ;; Return value:  Size  Location     Type
  6465 ;;                  1    wreg      void 
  6466 ;; Registers used:
  6467 ;;		wreg, status,2, status,0
  6468 ;; Tracked objects:
  6469 ;;		On entry : 0/0
  6470 ;;		On exit  : 0/0
  6471 ;;		Unchanged: 0/0
  6472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6473 ;;      Params:         1       0       0       0       0       0
  6474 ;;      Locals:         1       0       0       0       0       0
  6475 ;;      Temps:          2       0       0       0       0       0
  6476 ;;      Totals:         4       0       0       0       0       0
  6477 ;;Total ram usage:        4 bytes
  6478 ;; Hardware stack levels used: 1
  6479 ;; This function calls:
  6480 ;;		Nothing
  6481 ;; This function is called by:
  6482 ;;		_weights1_write
  6483 ;;		_biases1_write
  6484 ;;		_weights2_write
  6485 ;;		_biases2_write
  6486 ;;		_ai_is_ai_initiated_write
  6487 ;;		_ai_is_ai_trained_write
  6488 ;;		_ai_maxScore_write
  6489 ;;		_ai_scores_write
  6490 ;; This function uses a non-reentrant model
  6491 ;;
  6492                           
  6493     02FA                     _eeprom_write:	
  6494                           ;psect for function _eeprom_write
  6495                           
  6496                           
  6497                           ;incstack = 0
  6498                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  6499                           ;eeprom_write@addr stored from wreg
  6500     02FA  00F7               	movwf	eeprom_write@addr
  6501     02FB                     l743:	
  6502                           ;D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\pic\__eewrite.c: 6: eeprom_write(uns
      +                          igned char addr, unsigned char value);D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99
      +                          \pic\__eewrite.c: 7: {;D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\pic\__eewrite.
      +                          c: 8:  do{ while (EECON1bits.WR) { continue; } EEADR = (addr); EEDATA = (value); EECON1 
      +                          &= 0x3F; STATUSbits.CARRY = 0; if (INTCONbits.GIE) { STATUSbits.CARRY = 1; } INTCONbits.
      +                          GIE = 0; EECON1bits.WREN = 1; EECON2 = 0x55; EECON2 = 0xAA; EECON1bits.WR = 1; EECON1bit
      +                          s.WREN = 0; if (STATUSbits.CARRY) { INTCONbits.GIE = 1; } } while (0);
  6503                           
  6504     02FB                     l744:
  6505     02FB  0023               	movlb	3	; select bank3
  6506     02FC  1895               	btfsc	21,1	;volsfr
  6507     02FD  2AFF               	goto	u1001
  6508     02FE  2B00               	goto	u1000
  6509     02FF                     u1001:
  6510     02FF  2AFB               	goto	l744
  6511     0300                     u1000:
  6512     0300                     l2160:
  6513     0300  0877               	movf	eeprom_write@addr,w
  6514     0301  00F5               	movwf	??_eeprom_write
  6515     0302  01F6               	clrf	??_eeprom_write+1
  6516     0303  0875               	movf	??_eeprom_write,w
  6517     0304  0091               	movwf	17	;volatile
  6518     0305  0876               	movf	??_eeprom_write+1,w
  6519     0306  0092               	movwf	18	;volatile
  6520     0307  0874               	movf	eeprom_write@value,w
  6521     0308  0093               	movwf	19	;volatile
  6522     0309                     l2162:
  6523     0309  303F               	movlw	63
  6524     030A  00F5               	movwf	??_eeprom_write
  6525     030B  0875               	movf	??_eeprom_write,w
  6526     030C  0595               	andwf	21,f	;volsfr
  6527     030D                     l2164:
  6528     030D  0020               	movlb	0	; select bank0
  6529     030E  1003               	bcf	3,0	;volatile
  6530     030F                     l2166:
  6531     030F  1F8B               	btfss	11,7	;volatile
  6532     0310  2B12               	goto	u1011
  6533     0311  2B13               	goto	u1010
  6534     0312                     u1011:
  6535     0312  2B14               	goto	l747
  6536     0313                     u1010:
  6537     0313                     l2168:
  6538     0313  1403               	bsf	3,0	;volatile
  6539     0314                     l747:
  6540     0314  138B               	bcf	11,7	;volatile
  6541     0315  0023               	movlb	3	; select bank3
  6542     0316  1515               	bsf	21,2	;volsfr
  6543     0317                     l2170:
  6544     0317  3055               	movlw	85
  6545     0318  0096               	movwf	22	;volsfr
  6546     0319  30AA               	movlw	170
  6547     031A  0096               	movwf	22	;volsfr
  6548     031B                     l2172:
  6549     031B  1495               	bsf	21,1	;volsfr
  6550     031C                     l2174:
  6551     031C  1115               	bcf	21,2	;volsfr
  6552     031D                     l2176:
  6553     031D  0020               	movlb	0	; select bank0
  6554     031E  1C03               	btfss	3,0	;volatile
  6555     031F  2B21               	goto	u1021
  6556     0320  2B22               	goto	u1020
  6557     0321                     u1021:
  6558     0321  2B23               	goto	l750
  6559     0322                     u1020:
  6560     0322                     l2178:
  6561     0322  178B               	bsf	11,7	;volatile
  6562     0323                     l750:
  6563     0323  0008               	return
  6564     0324                     __end_of_eeprom_write:
  6565                           
  6566                           	psect	text33
  6567     012F                     __ptext33:	
  6568 ;; *************** function _ai_is_ai_initiated_read *****************
  6569 ;; Defined at:
  6570 ;;		line 46 in file "ai.c"
  6571 ;; Parameters:    Size  Location     Type
  6572 ;;		None
  6573 ;; Auto vars:     Size  Location     Type
  6574 ;;		None
  6575 ;; Return value:  Size  Location     Type
  6576 ;;                  1    wreg      unsigned char 
  6577 ;; Registers used:
  6578 ;;		wreg, status,2, status,0, pclath, cstack
  6579 ;; Tracked objects:
  6580 ;;		On entry : 0/0
  6581 ;;		On exit  : 0/0
  6582 ;;		Unchanged: 0/0
  6583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6584 ;;      Params:         0       0       0       0       0       0
  6585 ;;      Locals:         0       0       0       0       0       0
  6586 ;;      Temps:          0       0       0       0       0       0
  6587 ;;      Totals:         0       0       0       0       0       0
  6588 ;;Total ram usage:        0 bytes
  6589 ;; Hardware stack levels used: 1
  6590 ;; Hardware stack levels required when called: 1
  6591 ;; This function calls:
  6592 ;;		_eeprom_read
  6593 ;; This function is called by:
  6594 ;;		_ai_initiate
  6595 ;; This function uses a non-reentrant model
  6596 ;;
  6597                           
  6598     012F                     _ai_is_ai_initiated_read:	
  6599                           ;psect for function _ai_is_ai_initiated_read
  6600                           
  6601     012F                     l2296:	
  6602                           ;incstack = 0
  6603                           ; Regs used in _ai_is_ai_initiated_read: [wreg+status,2+status,0+pclath+cstack]
  6604                           
  6605                           
  6606                           ;ai.c: 47:     return (uint8_t)(eeprom_read(0 +16*10 +10 +5*10 +5)&0x01);
  6607     012F  30E1               	movlw	225
  6608     0130  3182  2205  3181   	fcall	_eeprom_read
  6609     0133  3901               	andlw	1
  6610     0134                     l500:
  6611     0134  0008               	return
  6612     0135                     __end_of_ai_is_ai_initiated_read:
  6613                           
  6614                           	psect	text34
  6615     0205                     __ptext34:	
  6616 ;; *************** function _eeprom_read *****************
  6617 ;; Defined at:
  6618 ;;		line 6 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\pic\__eeread.c"
  6619 ;; Parameters:    Size  Location     Type
  6620 ;;  addr            1    wreg     unsigned char 
  6621 ;; Auto vars:     Size  Location     Type
  6622 ;;  addr            1    3[COMMON] unsigned char 
  6623 ;; Return value:  Size  Location     Type
  6624 ;;                  1    wreg      unsigned char 
  6625 ;; Registers used:
  6626 ;;		wreg, status,2, status,0
  6627 ;; Tracked objects:
  6628 ;;		On entry : 0/0
  6629 ;;		On exit  : 0/0
  6630 ;;		Unchanged: 0/0
  6631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6632 ;;      Params:         0       0       0       0       0       0
  6633 ;;      Locals:         1       0       0       0       0       0
  6634 ;;      Temps:          3       0       0       0       0       0
  6635 ;;      Totals:         4       0       0       0       0       0
  6636 ;;Total ram usage:        4 bytes
  6637 ;; Hardware stack levels used: 1
  6638 ;; This function calls:
  6639 ;;		Nothing
  6640 ;; This function is called by:
  6641 ;;		_weights1_read
  6642 ;;		_biases1_read
  6643 ;;		_weights2_read
  6644 ;;		_biases2_read
  6645 ;;		_ai_is_ai_initiated_write
  6646 ;;		_ai_is_ai_initiated_read
  6647 ;;		_ai_is_ai_trained_write
  6648 ;;		_ai_is_ai_trained_read
  6649 ;;		_ai_maxScore_read
  6650 ;;		_ai_scores_read
  6651 ;; This function uses a non-reentrant model
  6652 ;;
  6653                           
  6654     0205                     _eeprom_read:	
  6655                           ;psect for function _eeprom_read
  6656                           
  6657                           
  6658                           ;incstack = 0
  6659                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  6660                           ;eeprom_read@addr stored from wreg
  6661     0205  00F3               	movwf	eeprom_read@addr
  6662     0206                     l724:	
  6663                           ;D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\pic\__eeread.c: 6: eeprom_read(unsig
      +                          ned char addr);D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\pic\__eeread.c: 7: {;D
      +                          :\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\pic\__eeread.c: 8:  do
  6664                           
  6665     0206  0064               	clrwdt	;# 
  6666     0207  0023               	movlb	3	; select bank3
  6667     0208  1895               	btfsc	21,1	;volsfr
  6668     0209  2A0B               	goto	u1031
  6669     020A  2A0C               	goto	u1030
  6670     020B                     u1031:
  6671     020B  2A06               	goto	l724
  6672     020C                     u1030:
  6673     020C                     l2180:
  6674                           
  6675                           ;D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\pic\__eeread.c: 18:  return ( EEADR 
      +                          = addr, EECON1 &= 0x3F, EECON1bits.RD = 1, EEDATA);
  6676     020C  0873               	movf	eeprom_read@addr,w
  6677     020D  00F0               	movwf	??_eeprom_read
  6678     020E  01F1               	clrf	??_eeprom_read+1
  6679     020F  0870               	movf	??_eeprom_read,w
  6680     0210  0091               	movwf	17	;volatile
  6681     0211  0871               	movf	??_eeprom_read+1,w
  6682     0212  0092               	movwf	18	;volatile
  6683     0213  303F               	movlw	63
  6684     0214  00F2               	movwf	??_eeprom_read+2
  6685     0215  0872               	movf	??_eeprom_read+2,w
  6686     0216  0595               	andwf	21,f	;volsfr
  6687     0217  1415               	bsf	21,0	;volsfr
  6688     0218  0813               	movf	19,w	;volatile
  6689     0219                     l726:
  6690     0219  0008               	return
  6691     021A                     __end_of_eeprom_read:
  6692                           
  6693                           	psect	text35
  6694     010D                     __ptext35:	
  6695 ;; *************** function _ai_getInputField *****************
  6696 ;; Defined at:
  6697 ;;		line 94 in file "ai.c"
  6698 ;; Parameters:    Size  Location     Type
  6699 ;;		None
  6700 ;; Auto vars:     Size  Location     Type
  6701 ;;		None
  6702 ;; Return value:  Size  Location     Type
  6703 ;;                  1    wreg      PTR unsigned char 
  6704 ;; Registers used:
  6705 ;;		wreg
  6706 ;; Tracked objects:
  6707 ;;		On entry : 0/0
  6708 ;;		On exit  : 0/0
  6709 ;;		Unchanged: 0/0
  6710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6711 ;;      Params:         0       0       0       0       0       0
  6712 ;;      Locals:         0       0       0       0       0       0
  6713 ;;      Temps:          0       0       0       0       0       0
  6714 ;;      Totals:         0       0       0       0       0       0
  6715 ;;Total ram usage:        0 bytes
  6716 ;; Hardware stack levels used: 1
  6717 ;; This function calls:
  6718 ;;		Nothing
  6719 ;; This function is called by:
  6720 ;;		_main
  6721 ;; This function uses a non-reentrant model
  6722 ;;
  6723                           
  6724     010D                     _ai_getInputField:	
  6725                           ;psect for function _ai_getInputField
  6726                           
  6727     010D                     l2436:	
  6728                           ;incstack = 0
  6729                           ; Regs used in _ai_getInputField: [wreg]
  6730                           
  6731                           
  6732                           ;ai.c: 95:     return Y0;
  6733     010D  30B4               	movlw	(low (_Y0| 0))& (0+255)
  6734     010E                     l535:
  6735     010E  0008               	return
  6736     010F                     __end_of_ai_getInputField:
  6737                           
  6738                           	psect	text36
  6739     01A0                     __ptext36:	
  6740 ;; *************** function _SYSTEM_Initialize *****************
  6741 ;; Defined at:
  6742 ;;		line 50 in file "mcc_generated_files/mcc.c"
  6743 ;; Parameters:    Size  Location     Type
  6744 ;;		None
  6745 ;; Auto vars:     Size  Location     Type
  6746 ;;		None
  6747 ;; Return value:  Size  Location     Type
  6748 ;;                  1    wreg      void 
  6749 ;; Registers used:
  6750 ;;		wreg, status,2, status,0, pclath, cstack
  6751 ;; Tracked objects:
  6752 ;;		On entry : 0/0
  6753 ;;		On exit  : 0/0
  6754 ;;		Unchanged: 0/0
  6755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6756 ;;      Params:         0       0       0       0       0       0
  6757 ;;      Locals:         0       0       0       0       0       0
  6758 ;;      Temps:          0       0       0       0       0       0
  6759 ;;      Totals:         0       0       0       0       0       0
  6760 ;;Total ram usage:        0 bytes
  6761 ;; Hardware stack levels used: 1
  6762 ;; Hardware stack levels required when called: 2
  6763 ;; This function calls:
  6764 ;;		_EUSART_Initialize
  6765 ;;		_OSCILLATOR_Initialize
  6766 ;;		_PIN_MANAGER_Initialize
  6767 ;;		_SPI1_Initialize
  6768 ;;		_WDT_Initialize
  6769 ;; This function is called by:
  6770 ;;		_main
  6771 ;; This function uses a non-reentrant model
  6772 ;;
  6773                           
  6774     01A0                     _SYSTEM_Initialize:	
  6775                           ;psect for function _SYSTEM_Initialize
  6776                           
  6777     01A0                     l2362:	
  6778                           ;incstack = 0
  6779                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6780                           
  6781                           
  6782                           ;mcc_generated_files/mcc.c: 53:     SPI1_Initialize();
  6783     01A0  3181  2179  3181   	fcall	_SPI1_Initialize
  6784                           
  6785                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  6786     01A3  3182  222F  3181   	fcall	_PIN_MANAGER_Initialize
  6787                           
  6788                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  6789     01A6  3181  2147  3181   	fcall	_OSCILLATOR_Initialize
  6790                           
  6791                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  6792     01A9  3181  2114  3181   	fcall	_WDT_Initialize
  6793                           
  6794                           ;mcc_generated_files/mcc.c: 57:     EUSART_Initialize();
  6795     01AC  3182  22B0  3181   	fcall	_EUSART_Initialize
  6796     01AF                     l248:
  6797     01AF  0008               	return
  6798     01B0                     __end_of_SYSTEM_Initialize:
  6799                           
  6800                           	psect	text37
  6801     0114                     __ptext37:	
  6802 ;; *************** function _WDT_Initialize *****************
  6803 ;; Defined at:
  6804 ;;		line 70 in file "mcc_generated_files/mcc.c"
  6805 ;; Parameters:    Size  Location     Type
  6806 ;;		None
  6807 ;; Auto vars:     Size  Location     Type
  6808 ;;		None
  6809 ;; Return value:  Size  Location     Type
  6810 ;;                  1    wreg      void 
  6811 ;; Registers used:
  6812 ;;		wreg
  6813 ;; Tracked objects:
  6814 ;;		On entry : 0/0
  6815 ;;		On exit  : 0/0
  6816 ;;		Unchanged: 0/0
  6817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6818 ;;      Params:         0       0       0       0       0       0
  6819 ;;      Locals:         0       0       0       0       0       0
  6820 ;;      Temps:          0       0       0       0       0       0
  6821 ;;      Totals:         0       0       0       0       0       0
  6822 ;;Total ram usage:        0 bytes
  6823 ;; Hardware stack levels used: 1
  6824 ;; This function calls:
  6825 ;;		Nothing
  6826 ;; This function is called by:
  6827 ;;		_SYSTEM_Initialize
  6828 ;; This function uses a non-reentrant model
  6829 ;;
  6830                           
  6831     0114                     _WDT_Initialize:	
  6832                           ;psect for function _WDT_Initialize
  6833                           
  6834     0114                     l2238:	
  6835                           ;incstack = 0
  6836                           ; Regs used in _WDT_Initialize: [wreg]
  6837                           
  6838                           
  6839                           ;mcc_generated_files/mcc.c: 73:     WDTCON = 0x16;
  6840     0114  3016               	movlw	22
  6841     0115  0021               	movlb	1	; select bank1
  6842     0116  0097               	movwf	23	;volatile
  6843     0117                     l254:
  6844     0117  0008               	return
  6845     0118                     __end_of_WDT_Initialize:
  6846                           
  6847                           	psect	text38
  6848     0179                     __ptext38:	
  6849 ;; *************** function _SPI1_Initialize *****************
  6850 ;; Defined at:
  6851 ;;		line 62 in file "mcc_generated_files/spi1.c"
  6852 ;; Parameters:    Size  Location     Type
  6853 ;;		None
  6854 ;; Auto vars:     Size  Location     Type
  6855 ;;		None
  6856 ;; Return value:  Size  Location     Type
  6857 ;;                  1    wreg      void 
  6858 ;; Registers used:
  6859 ;;		wreg
  6860 ;; Tracked objects:
  6861 ;;		On entry : 0/0
  6862 ;;		On exit  : 0/0
  6863 ;;		Unchanged: 0/0
  6864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6865 ;;      Params:         0       0       0       0       0       0
  6866 ;;      Locals:         0       0       0       0       0       0
  6867 ;;      Temps:          0       0       0       0       0       0
  6868 ;;      Totals:         0       0       0       0       0       0
  6869 ;;Total ram usage:        0 bytes
  6870 ;; Hardware stack levels used: 1
  6871 ;; This function calls:
  6872 ;;		Nothing
  6873 ;; This function is called by:
  6874 ;;		_SYSTEM_Initialize
  6875 ;; This function uses a non-reentrant model
  6876 ;;
  6877                           
  6878     0179                     _SPI1_Initialize:	
  6879                           ;psect for function _SPI1_Initialize
  6880                           
  6881     0179                     l2226:	
  6882                           ;incstack = 0
  6883                           ; Regs used in _SPI1_Initialize: [wreg]
  6884                           
  6885                           
  6886                           ;mcc_generated_files/spi1.c: 65:     SSP1STAT = 0x40;
  6887     0179  3040               	movlw	64
  6888     017A  0024               	movlb	4	; select bank4
  6889     017B  0094               	movwf	20	;volatile
  6890                           
  6891                           ;mcc_generated_files/spi1.c: 66:     SSP1CON1 = 0x02;
  6892     017C  3002               	movlw	2
  6893     017D  0095               	movwf	21	;volatile
  6894                           
  6895                           ;mcc_generated_files/spi1.c: 67:     SSP1ADD = 0x01;
  6896     017E  3001               	movlw	1
  6897     017F  0092               	movwf	18	;volatile
  6898     0180                     l2228:
  6899                           
  6900                           ;mcc_generated_files/spi1.c: 68:     TRISBbits.TRISB4 = 0;
  6901     0180  0021               	movlb	1	; select bank1
  6902     0181  120D               	bcf	13,4	;volatile
  6903     0182                     l2230:
  6904                           
  6905                           ;mcc_generated_files/spi1.c: 69:     SSP1CON1bits.SSPEN = 0;
  6906     0182  0024               	movlb	4	; select bank4
  6907     0183  1295               	bcf	21,5	;volatile
  6908     0184                     l187:
  6909     0184  0008               	return
  6910     0185                     __end_of_SPI1_Initialize:
  6911                           
  6912                           	psect	text39
  6913     022F                     __ptext39:	
  6914 ;; *************** function _PIN_MANAGER_Initialize *****************
  6915 ;; Defined at:
  6916 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  6917 ;; Parameters:    Size  Location     Type
  6918 ;;		None
  6919 ;; Auto vars:     Size  Location     Type
  6920 ;;		None
  6921 ;; Return value:  Size  Location     Type
  6922 ;;                  1    wreg      void 
  6923 ;; Registers used:
  6924 ;;		wreg, status,2
  6925 ;; Tracked objects:
  6926 ;;		On entry : 0/0
  6927 ;;		On exit  : 0/0
  6928 ;;		Unchanged: 0/0
  6929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6930 ;;      Params:         0       0       0       0       0       0
  6931 ;;      Locals:         0       0       0       0       0       0
  6932 ;;      Temps:          0       0       0       0       0       0
  6933 ;;      Totals:         0       0       0       0       0       0
  6934 ;;Total ram usage:        0 bytes
  6935 ;; Hardware stack levels used: 1
  6936 ;; This function calls:
  6937 ;;		Nothing
  6938 ;; This function is called by:
  6939 ;;		_SYSTEM_Initialize
  6940 ;; This function uses a non-reentrant model
  6941 ;;
  6942                           
  6943     022F                     _PIN_MANAGER_Initialize:	
  6944                           ;psect for function _PIN_MANAGER_Initialize
  6945                           
  6946     022F                     l2210:	
  6947                           ;incstack = 0
  6948                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  6949                           
  6950                           
  6951                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  6952     022F  0022               	movlb	2	; select bank2
  6953     0230  018C               	clrf	12	;volatile
  6954                           
  6955                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  6956     0231  018D               	clrf	13	;volatile
  6957     0232                     l2212:
  6958                           
  6959                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x37;
  6960     0232  3037               	movlw	55
  6961     0233  0021               	movlb	1	; select bank1
  6962     0234  008C               	movwf	12	;volatile
  6963     0235                     l2214:
  6964                           
  6965                           ;mcc_generated_files/pin_manager.c: 67:     TRISB = 0xEF;
  6966     0235  30EF               	movlw	239
  6967     0236  008D               	movwf	13	;volatile
  6968     0237                     l2216:
  6969                           
  6970                           ;mcc_generated_files/pin_manager.c: 72:     ANSELB = 0xC8;
  6971     0237  30C8               	movlw	200
  6972     0238  0023               	movlb	3	; select bank3
  6973     0239  008D               	movwf	13	;volatile
  6974     023A                     l2218:
  6975                           
  6976                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x1F;
  6977     023A  301F               	movlw	31
  6978     023B  008C               	movwf	12	;volatile
  6979                           
  6980                           ;mcc_generated_files/pin_manager.c: 78:     WPUB = 0x00;
  6981     023C  0024               	movlb	4	; select bank4
  6982     023D  018D               	clrf	13	;volatile
  6983                           
  6984                           ;mcc_generated_files/pin_manager.c: 79:     WPUA = 0x00;
  6985     023E  018C               	clrf	12	;volatile
  6986     023F                     l2220:
  6987                           
  6988                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  6989     023F  0021               	movlb	1	; select bank1
  6990     0240  1795               	bsf	21,7	;volatile
  6991     0241                     l2222:
  6992                           
  6993                           ;mcc_generated_files/pin_manager.c: 86:     APFCON0 = 0xC0;
  6994     0241  30C0               	movlw	192
  6995     0242  0022               	movlb	2	; select bank2
  6996     0243  009D               	movwf	29	;volatile
  6997     0244                     l2224:
  6998                           
  6999                           ;mcc_generated_files/pin_manager.c: 87:     APFCON1 = 0x01;
  7000     0244  3001               	movlw	1
  7001     0245  009E               	movwf	30	;volatile
  7002     0246                     l163:
  7003     0246  0008               	return
  7004     0247                     __end_of_PIN_MANAGER_Initialize:
  7005                           
  7006                           	psect	text40
  7007     0147                     __ptext40:	
  7008 ;; *************** function _OSCILLATOR_Initialize *****************
  7009 ;; Defined at:
  7010 ;;		line 60 in file "mcc_generated_files/mcc.c"
  7011 ;; Parameters:    Size  Location     Type
  7012 ;;		None
  7013 ;; Auto vars:     Size  Location     Type
  7014 ;;		None
  7015 ;; Return value:  Size  Location     Type
  7016 ;;                  1    wreg      void 
  7017 ;; Registers used:
  7018 ;;		wreg, status,2
  7019 ;; Tracked objects:
  7020 ;;		On entry : 0/0
  7021 ;;		On exit  : 0/0
  7022 ;;		Unchanged: 0/0
  7023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7024 ;;      Params:         0       0       0       0       0       0
  7025 ;;      Locals:         0       0       0       0       0       0
  7026 ;;      Temps:          0       0       0       0       0       0
  7027 ;;      Totals:         0       0       0       0       0       0
  7028 ;;Total ram usage:        0 bytes
  7029 ;; Hardware stack levels used: 1
  7030 ;; This function calls:
  7031 ;;		Nothing
  7032 ;; This function is called by:
  7033 ;;		_SYSTEM_Initialize
  7034 ;; This function uses a non-reentrant model
  7035 ;;
  7036                           
  7037     0147                     _OSCILLATOR_Initialize:	
  7038                           ;psect for function _OSCILLATOR_Initialize
  7039                           
  7040     0147                     l2232:	
  7041                           ;incstack = 0
  7042                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  7043                           
  7044                           
  7045                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x70;
  7046     0147  3070               	movlw	112
  7047     0148  0021               	movlb	1	; select bank1
  7048     0149  0099               	movwf	25	;volatile
  7049     014A                     l2234:
  7050                           
  7051                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x00;
  7052     014A  0198               	clrf	24	;volatile
  7053     014B                     l2236:
  7054                           
  7055                           ;mcc_generated_files/mcc.c: 67:     BORCON = 0x00;
  7056     014B  0022               	movlb	2	; select bank2
  7057     014C  0196               	clrf	22	;volatile
  7058     014D                     l251:
  7059     014D  0008               	return
  7060     014E                     __end_of_OSCILLATOR_Initialize:
  7061                           
  7062                           	psect	text41
  7063     02B0                     __ptext41:	
  7064 ;; *************** function _EUSART_Initialize *****************
  7065 ;; Defined at:
  7066 ;;		line 66 in file "mcc_generated_files/eusart.c"
  7067 ;; Parameters:    Size  Location     Type
  7068 ;;		None
  7069 ;; Auto vars:     Size  Location     Type
  7070 ;;		None
  7071 ;; Return value:  Size  Location     Type
  7072 ;;                  1    wreg      void 
  7073 ;; Registers used:
  7074 ;;		wreg, status,2, status,0, pclath, cstack
  7075 ;; Tracked objects:
  7076 ;;		On entry : 0/0
  7077 ;;		On exit  : 0/0
  7078 ;;		Unchanged: 0/0
  7079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7080 ;;      Params:         0       0       0       0       0       0
  7081 ;;      Locals:         0       0       0       0       0       0
  7082 ;;      Temps:          0       0       0       0       0       0
  7083 ;;      Totals:         0       0       0       0       0       0
  7084 ;;Total ram usage:        0 bytes
  7085 ;; Hardware stack levels used: 1
  7086 ;; Hardware stack levels required when called: 1
  7087 ;; This function calls:
  7088 ;;		_EUSART_SetErrorHandler
  7089 ;;		_EUSART_SetFramingErrorHandler
  7090 ;;		_EUSART_SetOverrunErrorHandler
  7091 ;; This function is called by:
  7092 ;;		_SYSTEM_Initialize
  7093 ;; This function uses a non-reentrant model
  7094 ;;
  7095                           
  7096     02B0                     _EUSART_Initialize:	
  7097                           ;psect for function _EUSART_Initialize
  7098                           
  7099     02B0                     l2198:	
  7100                           ;incstack = 0
  7101                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7102                           
  7103                           
  7104                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  7105     02B0  3008               	movlw	8
  7106     02B1  0023               	movlb	3	; select bank3
  7107     02B2  009F               	movwf	31	;volatile
  7108                           
  7109                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
  7110     02B3  3090               	movlw	144
  7111     02B4  009D               	movwf	29	;volatile
  7112                           
  7113                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  7114     02B5  3024               	movlw	36
  7115     02B6  009E               	movwf	30	;volatile
  7116                           
  7117                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0xCF;
  7118     02B7  30CF               	movlw	207
  7119     02B8  009B               	movwf	27	;volatile
  7120     02B9                     l2200:
  7121                           
  7122                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x00;
  7123     02B9  019C               	clrf	28	;volatile
  7124     02BA                     l2202:
  7125                           
  7126                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  7127     02BA  3000               	movlw	0
  7128     02BB  00F0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  7129     02BC  3000               	movlw	0
  7130     02BD  00F1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  7131     02BE  3181  2123  3182   	fcall	_EUSART_SetFramingErrorHandler
  7132     02C1                     l2204:
  7133                           
  7134                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  7135     02C1  3000               	movlw	0
  7136     02C2  00F0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  7137     02C3  3000               	movlw	0
  7138     02C4  00F1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  7139     02C5  3181  2129  3182   	fcall	_EUSART_SetOverrunErrorHandler
  7140     02C8                     l2206:
  7141                           
  7142                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  7143     02C8  3000               	movlw	0
  7144     02C9  00F0               	movwf	EUSART_SetErrorHandler@interruptHandler
  7145     02CA  3000               	movlw	0
  7146     02CB  00F1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  7147     02CC  3181  211D  3182   	fcall	_EUSART_SetErrorHandler
  7148     02CF                     l2208:
  7149                           
  7150                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  7151     02CF  0020               	movlb	0	; select bank0
  7152     02D0  01C3               	clrf	_eusartRxLastError	;volatile
  7153     02D1                     l93:
  7154     02D1  0008               	return
  7155     02D2                     __end_of_EUSART_Initialize:
  7156                           
  7157                           	psect	text42
  7158     0129                     __ptext42:	
  7159 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  7160 ;; Defined at:
  7161 ;;		line 161 in file "mcc_generated_files/eusart.c"
  7162 ;; Parameters:    Size  Location     Type
  7163 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  7164 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  7165 ;; Auto vars:     Size  Location     Type
  7166 ;;		None
  7167 ;; Return value:  Size  Location     Type
  7168 ;;                  1    wreg      void 
  7169 ;; Registers used:
  7170 ;;		wreg
  7171 ;; Tracked objects:
  7172 ;;		On entry : 0/0
  7173 ;;		On exit  : 0/0
  7174 ;;		Unchanged: 0/0
  7175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7176 ;;      Params:         2       0       0       0       0       0
  7177 ;;      Locals:         0       0       0       0       0       0
  7178 ;;      Temps:          0       0       0       0       0       0
  7179 ;;      Totals:         2       0       0       0       0       0
  7180 ;;Total ram usage:        2 bytes
  7181 ;; Hardware stack levels used: 1
  7182 ;; This function calls:
  7183 ;;		Nothing
  7184 ;; This function is called by:
  7185 ;;		_EUSART_Initialize
  7186 ;; This function uses a non-reentrant model
  7187 ;;
  7188                           
  7189     0129                     _EUSART_SetOverrunErrorHandler:	
  7190                           ;psect for function _EUSART_SetOverrunErrorHandler
  7191                           
  7192     0129                     l2148:	
  7193                           ;incstack = 0
  7194                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  7195                           
  7196                           
  7197                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  7198     0129  0871               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  7199     012A  0020               	movlb	0	; select bank0
  7200     012B  00EA               	movwf	_EUSART_OverrunErrorHandler+1
  7201     012C  0870               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  7202     012D  00E9               	movwf	_EUSART_OverrunErrorHandler
  7203     012E                     l135:
  7204     012E  0008               	return
  7205     012F                     __end_of_EUSART_SetOverrunErrorHandler:
  7206                           
  7207                           	psect	text43
  7208     0123                     __ptext43:	
  7209 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  7210 ;; Defined at:
  7211 ;;		line 157 in file "mcc_generated_files/eusart.c"
  7212 ;; Parameters:    Size  Location     Type
  7213 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  7214 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  7215 ;; Auto vars:     Size  Location     Type
  7216 ;;		None
  7217 ;; Return value:  Size  Location     Type
  7218 ;;                  1    wreg      void 
  7219 ;; Registers used:
  7220 ;;		wreg
  7221 ;; Tracked objects:
  7222 ;;		On entry : 0/0
  7223 ;;		On exit  : 0/0
  7224 ;;		Unchanged: 0/0
  7225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7226 ;;      Params:         2       0       0       0       0       0
  7227 ;;      Locals:         0       0       0       0       0       0
  7228 ;;      Temps:          0       0       0       0       0       0
  7229 ;;      Totals:         2       0       0       0       0       0
  7230 ;;Total ram usage:        2 bytes
  7231 ;; Hardware stack levels used: 1
  7232 ;; This function calls:
  7233 ;;		Nothing
  7234 ;; This function is called by:
  7235 ;;		_EUSART_Initialize
  7236 ;; This function uses a non-reentrant model
  7237 ;;
  7238                           
  7239     0123                     _EUSART_SetFramingErrorHandler:	
  7240                           ;psect for function _EUSART_SetFramingErrorHandler
  7241                           
  7242     0123                     l2146:	
  7243                           ;incstack = 0
  7244                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  7245                           
  7246                           
  7247                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  7248     0123  0871               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  7249     0124  0020               	movlb	0	; select bank0
  7250     0125  00EC               	movwf	_EUSART_FramingErrorHandler+1
  7251     0126  0870               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  7252     0127  00EB               	movwf	_EUSART_FramingErrorHandler
  7253     0128                     l132:
  7254     0128  0008               	return
  7255     0129                     __end_of_EUSART_SetFramingErrorHandler:
  7256                           
  7257                           	psect	text44
  7258     011D                     __ptext44:	
  7259 ;; *************** function _EUSART_SetErrorHandler *****************
  7260 ;; Defined at:
  7261 ;;		line 165 in file "mcc_generated_files/eusart.c"
  7262 ;; Parameters:    Size  Location     Type
  7263 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  7264 ;;		 -> EUSART_DefaultErrorHandler(1), 
  7265 ;; Auto vars:     Size  Location     Type
  7266 ;;		None
  7267 ;; Return value:  Size  Location     Type
  7268 ;;                  1    wreg      void 
  7269 ;; Registers used:
  7270 ;;		wreg
  7271 ;; Tracked objects:
  7272 ;;		On entry : 0/0
  7273 ;;		On exit  : 0/0
  7274 ;;		Unchanged: 0/0
  7275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7276 ;;      Params:         2       0       0       0       0       0
  7277 ;;      Locals:         0       0       0       0       0       0
  7278 ;;      Temps:          0       0       0       0       0       0
  7279 ;;      Totals:         2       0       0       0       0       0
  7280 ;;Total ram usage:        2 bytes
  7281 ;; Hardware stack levels used: 1
  7282 ;; This function calls:
  7283 ;;		Nothing
  7284 ;; This function is called by:
  7285 ;;		_EUSART_Initialize
  7286 ;; This function uses a non-reentrant model
  7287 ;;
  7288                           
  7289     011D                     _EUSART_SetErrorHandler:	
  7290                           ;psect for function _EUSART_SetErrorHandler
  7291                           
  7292     011D                     l2150:	
  7293                           ;incstack = 0
  7294                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  7295                           
  7296                           
  7297                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  7298     011D  0871               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  7299     011E  0020               	movlb	0	; select bank0
  7300     011F  00E8               	movwf	_EUSART_ErrorHandler+1
  7301     0120  0870               	movf	EUSART_SetErrorHandler@interruptHandler,w
  7302     0121  00E7               	movwf	_EUSART_ErrorHandler
  7303     0122                     l138:
  7304     0122  0008               	return
  7305     0123                     __end_of_EUSART_SetErrorHandler:
  7306     007E                     btemp	set	126	;btemp
  7307     007E                     wtemp0	set	126
  7308                           
  7309                           	psect	idloc
  7310                           
  7311                           ;Config register IDLOC0 @ 0x8000
  7312                           ;	unspecified, using default values
  7313     8000                     	org	32768
  7314     8000  3FFF               	dw	16383
  7315                           
  7316                           ;Config register IDLOC1 @ 0x8001
  7317                           ;	unspecified, using default values
  7318     8001                     	org	32769
  7319     8001  3FFF               	dw	16383
  7320                           
  7321                           ;Config register IDLOC2 @ 0x8002
  7322                           ;	unspecified, using default values
  7323     8002                     	org	32770
  7324     8002  3FFF               	dw	16383
  7325                           
  7326                           ;Config register IDLOC3 @ 0x8003
  7327                           ;	unspecified, using default values
  7328     8003                     	org	32771
  7329     8003  3FFF               	dw	16383
  7330                           
  7331                           	psect	config
  7332                           
  7333                           ;Config register CONFIG1 @ 0x8007
  7334                           ;	Oscillator Selection
  7335                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  7336                           ;	Watchdog Timer Enable
  7337                           ;	WDTE = OFF, WDT disabled
  7338                           ;	Power-up Timer Enable
  7339                           ;	PWRTE = OFF, PWRT disabled
  7340                           ;	MCLR Pin Function Select
  7341                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  7342                           ;	Flash Program Memory Code Protection
  7343                           ;	CP = OFF, Program memory code protection is disabled
  7344                           ;	Data Memory Code Protection
  7345                           ;	CPD = OFF, Data memory code protection is disabled
  7346                           ;	Brown-out Reset Enable
  7347                           ;	BOREN = ON, Brown-out Reset enabled
  7348                           ;	Clock Out Enable
  7349                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  7350                           ;	Internal/External Switchover
  7351                           ;	IESO = ON, Internal/External Switchover mode is enabled
  7352                           ;	Fail-Safe Clock Monitor Enable
  7353                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  7354     8007                     	org	32775
  7355     8007  3FE4               	dw	16356
  7356                           
  7357                           ;Config register CONFIG2 @ 0x8008
  7358                           ;	Flash Memory Self-Write Protection
  7359                           ;	WRT = OFF, Write protection off
  7360                           ;	PLL Enable
  7361                           ;	PLLEN = OFF, 4x PLL disabled
  7362                           ;	Stack Overflow/Underflow Reset Enable
  7363                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  7364                           ;	Brown-out Reset Voltage Selection
  7365                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  7366                           ;	Low-Voltage Programming Enable
  7367                           ;	LVP = ON, Low-voltage programming enabled
  7368     8008                     	org	32776
  7369     8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    36
    Data        9
    BSS         140
    Persistent  38
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     22      77
    BANK1            80      0      36
    BANK2            80      0      64
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    snake_getSurroundings@surroundings	PTR unsigned char  size(1) Largest target is 16
		 -> Y0(BANK1[16]), 

    sp__ai_getInputField	PTR unsigned char  size(1) Largest target is 16
		 -> Y0(BANK1[16]), 

    sp__snake_getField	PTR unsigned char  size(1) Largest target is 64
		 -> field(BANK2[64]), 

    main@field	PTR unsigned char  size(1) Largest target is 64
		 -> field(BANK2[64]), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    _snake_move->_rand
    _snake_initiate->_rand
    _sendMatrix->_txMAX7219
    _initMAX7219->_txMAX7219
    _txMAX7219->_SPI1_WriteByte
    _ai_run->___wmul
    _weights2_read->___bmul
    _weights2_read->_eeprom_read
    _weights1_read->_eeprom_read
    _biases2_read->_eeprom_read
    _biases1_read->_eeprom_read
    ___wmul->_weights1_read
    _ai_is_ai_trained_write->_eeprom_write
    _ai_is_ai_trained_read->_eeprom_read
    _ai_initiate->_rand
    _weights2_write->_rand
    _weights1_write->_rand
    _rand->___lmul
    _biases2_write->_rand
    _biases1_write->_rand
    _ai_is_ai_initiated_write->_eeprom_write
    _eeprom_write->___bmul
    _ai_is_ai_initiated_read->_eeprom_read
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _main in BANK0

    _main->_ai_initiate
    _snake_move->_snake_initiate
    _snake_initiate->_rand
    _ai_initiate->_weights1_write
    _weights2_write->_rand
    _weights1_write->_rand
    _biases2_write->_rand
    _biases1_write->_rand

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0   12330
                                             13 BANK0      9     9      0
                  _SYSTEM_Initialize
                   _ai_getInputField
                        _ai_initiate
              _ai_is_ai_trained_read
             _ai_is_ai_trained_write
                       _ai_propagate
                             _ai_run
                        _initMAX7219
                           _ledClear
                             _ledSet
                         _sendMatrix
                     _snake_getField
              _snake_getFoodPosition
              _snake_getSurroundings
                     _snake_initiate
                         _snake_move
 ---------------------------------------------------------------------------------
 (1) _snake_move                                           5     5      0     720
                                              6 BANK0      5     5      0
                               _rand
                     _snake_initiate
 ---------------------------------------------------------------------------------
 (2) _snake_initiate                                       2     2      0     312
                                              4 BANK0      2     2      0
                               _rand
 ---------------------------------------------------------------------------------
 (1) _snake_getSurroundings                                5     5      0     621
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (1) _snake_getFoodPosition                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _snake_getField                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sendMatrix                                           5     5      0     935
                                              3 COMMON     5     5      0
                          _txMAX7219
 ---------------------------------------------------------------------------------
 (1) _ledSet                                               4     3      1     196
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _ledClear                                             4     3      1     120
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _initMAX7219                                          2     2      0     750
                                              3 COMMON     2     2      0
                          _txMAX7219
 ---------------------------------------------------------------------------------
 (2) _txMAX7219                                            2     1      1     750
                                              1 COMMON     2     1      1
                     _SPI1_WriteByte
 ---------------------------------------------------------------------------------
 (3) _SPI1_WriteByte                                       1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ai_run                                              10    10      0    2448
                                              0 BANK0     10    10      0
                            ___awdiv
                             ___wmul
                       _biases1_read
                       _biases2_read
                            _sigmoid
                      _weights1_read
                      _weights2_read
 ---------------------------------------------------------------------------------
 (2) _weights2_read                                        2     1      1     386
                                              4 COMMON     2     1      1
                             ___bmul
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (2) _weights1_read                                        3     2      1     142
                                              4 COMMON     3     2      1
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (2) _sigmoid                                              2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _biases2_read                                         1     1      0      44
                                              4 COMMON     1     1      0
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (2) _biases1_read                                         1     1      0      44
                                              4 COMMON     1     1      0
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              7 COMMON     6     2      4
                      _weights1_read (ARG)
                      _weights2_read (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     604
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _ai_propagate                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ai_is_ai_trained_write                               3     3      0     721
                                              8 COMMON     3     3      0
                        _eeprom_read
                       _eeprom_write
 ---------------------------------------------------------------------------------
 (1) _ai_is_ai_trained_read                                0     0      0      22
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (1) _ai_initiate                                          5     5      0    4831
                                              8 BANK0      5     5      0
            _ai_is_ai_initiated_read
           _ai_is_ai_initiated_write
                      _biases1_write
                      _biases2_write
                               _rand
                     _weights1_write
                     _weights2_write
 ---------------------------------------------------------------------------------
 (2) _weights2_write                                       3     1      2    1114
                                              4 BANK0      3     1      2
                             ___bmul
                       _eeprom_write
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     244
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _weights1_write                                       4     2      2     870
                                              4 BANK0      4     2      2
                       _eeprom_write
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (3) _rand                                                 6     4      2     244
                                             12 COMMON     2     0      2
                                              0 BANK0      4     4      0
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     244
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) _biases2_write                                        2     1      1     772
                                              4 BANK0      2     1      1
                       _eeprom_write
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (2) _biases1_write                                        2     1      1     772
                                              4 BANK0      2     1      1
                       _eeprom_write
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (2) _ai_is_ai_initiated_write                             3     3      0     721
                                              8 COMMON     3     3      0
                        _eeprom_read
                       _eeprom_write
 ---------------------------------------------------------------------------------
 (2) _eeprom_write                                         4     3      1     652
                                              4 COMMON     4     3      1
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _ai_is_ai_initiated_read                              0     0      0      22
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (3) _eeprom_read                                          4     4      0      22
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _ai_getInputField                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI1_Initialize
     _WDT_Initialize
   _ai_getInputField
   _ai_initiate
     _ai_is_ai_initiated_read
       _eeprom_read
     _ai_is_ai_initiated_write
       _eeprom_read
       _eeprom_write
         ___bmul (ARG)
     _biases1_write
       _eeprom_write
       _rand (ARG)
         ___lmul
     _biases2_write
       _eeprom_write
       _rand (ARG)
     _rand
     _weights1_write
       _eeprom_write
       _rand (ARG)
     _weights2_write
       ___bmul
       _eeprom_write
       _rand (ARG)
   _ai_is_ai_trained_read
     _eeprom_read
   _ai_is_ai_trained_write
     _eeprom_read
     _eeprom_write
   _ai_propagate
   _ai_run
     ___awdiv
     ___wmul
       _weights1_read (ARG)
         _eeprom_read
       _weights2_read (ARG)
         ___bmul
         _eeprom_read
     _biases1_read
       _eeprom_read
     _biases2_read
       _eeprom_read
     _sigmoid
     _weights1_read
     _weights2_read
   _initMAX7219
     _txMAX7219
       _SPI1_WriteByte
   _ledClear
   _ledSet
   _sendMatrix
     _txMAX7219
   _snake_getField
   _snake_getFoodPosition
   _snake_getSurroundings
   _snake_initiate
     _rand
   _snake_move
     _rand
     _snake_initiate

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      BF       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     16      4D       6       96.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      24       8       45.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      40      10       80.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      BF      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Oct 07 01:08:33 2022

                           SPI1_WriteByte@byte 0070                           __end_of_ai_propagate 010D  
                               ___bmul@product 0072                                             l93 02D1  
                                           _Y0 00B4                                             _Y1 002A  
                                           _Y2 003C                                             _Z1 00A0  
                                           _Z2 0020                                   ___awdiv@sign 0076  
                          ___wmul@multiplicand 0079                           __end_of_biases1_read 0155  
                         __end_of_biases2_read 015C                                            l132 0128  
                                          l135 012E                                            l224 011C  
                                          l138 0122                                            l251 014D  
                                          l163 0246                                            l500 0134  
                                          l340 0283                                            l412 0620  
                                          l341 0288                                            l254 0117  
                                          l350 01F2                                            l430 06D6  
                                          l343 028D                                            l415 0110  
                                          l248 01AF                                            l344 0290  
                                          l360 0351                                            l505 0276  
                                          l353 0204                                            l338 027E  
                                          l187 0184                                            l347 03F3  
                                          l524 04BD                                            l508 013A  
                                          l436 0113                                            l428 06BA  
                                          l535 010E                                            l471 01D0  
                                          l480 0178                                            l553 010C  
                                          l385 02F9                                            l474 016E  
                                          l483 019F                                            l724 0206  
                                          l492 015B                                            l564 01BF  
                                          l477 01E1                                            l549 07D8  
                                          l726 0219                                            l750 0323  
                                          l486 0154                                            l743 02FB  
                                          l744 02FB                                            l497 025E  
                                          l489 0191                                            l754 029B  
                                          l747 0314                                            l907 0452  
                                          l780 022E                                            l756 02AF  
                                          l768 0384                                            u950 035E  
                                          u951 035D                                            u980 037C  
                                          u981 037B                                            u965 0367  
                                          u990 03B3                                            u975 036E  
                                          u995 03AF                 ?_EUSART_SetFramingErrorHandler 0070  
                                          wreg 0009                          __end_of_biases1_write 016F  
                                 ?_initMAX7219 0070                          __end_of_biases2_write 0179  
                                         l2200 02B9                                           l2202 02BA  
                                         l2210 022F                                           l1218 03B9  
                                         l2204 02C1                                           l2220 023F  
                                         l2212 0232                                           l2140 036D  
                                         l2132 0352                                           l2300 01B1  
                                         l2150 011D                                           l2206 02C8  
                                         l2222 0241                                           l2214 0235  
                                         l2230 0182                                           l2142 037C  
                                         l2134 035A                                           l2310 02A0  
                                         l2208 02CF                                           l2232 0147  
                                         l2224 0244                                           l2216 0237  
                                         l2160 0300                                           l2136 035E  
                                         l2400 0496                                           l2320 03F5  
                                         l2312 02A5                                           l2304 0291  
                                         l2152 0119                                           l2240 02D2  
                                         l2146 0123                                           l2234 014A  
                                         l2218 023A                                           l2226 0179  
                                         l2170 0317                                           l2162 0309  
                                         l2138 0366                                           l2154 0385  
                                         l2410 04A9                                           l2330 0409  
                                         l2322 03F9                                           l2314 02AB  
                                         l2306 0293                                           l2250 02DE  
                                         l2148 0129                                           l2236 014B  
                                         l2228 0180                                           l2180 020C  
                                         l2172 031B                                           l2164 030D  
                                         l2156 03A6                                           l2412 04AF  
                                         l2340 041D                                           l2332 040D  
                                         l2324 03FE                                           l2308 0297  
                                         l2260 0284                                           l2420 03BC  
                                         l2252 02E4                                           l2238 0114  
                                         l2174 031C                                           l2166 030F  
                                         l2262 01C2                                           l2190 0224  
                                         l2414 04B3                                           l2406 0498  
                                         l2350 0439                                           l2342 0421  
                                         l2334 040F                                           l2326 0400  
                                         l2318 03F4                                           l2270 0193  
                                         l2510 0727                                           l2422 03DD  
                                         l2254 02F2                                           l2246 02D4  
                                         l2176 031D                                           l2168 0313  
                                         l2264 0167                                           l2192 0226  
                                         l2184 021B                                           l2416 04B9  
                                         l2408 04A4                                           l2432 0135  
                                         l2352 043E                                           l2344 0425  
                                         l2336 0415                                           l2328 0404  
                                         l2520 0749                                           l2512 072B  
                                         l2504 06EB                                           l2256 0278  
                                         l2424 03E8                                           l2440 0622  
                                         l2248 02DA                                           l2600 05AD  
                                         l2362 01A0                                           l2178 0322  
                                         l2290 0252                                           l2194 022D  
                                         l2186 021C                                           l2266 01D3  
                                         l2346 0434                                           l2338 0418  
                                         l2354 0444                                           l2274 014F  
                                         l2282 0156                                           l2514 0731  
                                         l2506 06F6                                           l2258 027A  
                                         l2426 03ED                                           l2418 03BA  
                                         l2450 062E                                           l2610 05C9  
                                         l2436 010D                                           l2292 0254  
                                         l2268 0171                                           l2188 0220  
                                         l2364 0453                                           l2356 0449  
                                         l2348 0438                                           l2540 0798  
                                         l2516 073E                                           l2508 070D  
                                         l2428 010F                                           l2460 0655  
                                         l2452 0634                                           l2620 05ED  
                                         l2604 05BA                                           l2198 02B0  
                                         l2294 0258                                           l2286 0248  
                                         l2390 0485                                           l2382 046A  
                                         l2374 045E                                           l2358 044E  
                                         l2278 0186                                           l2550 07BA  
                                         l2542 079C                                           l2534 075C  
                                         l2526 074A                                           l2518 0743  
                                         l2470 069D                                           l2462 0667  
                                         l2454 063B                                           l2446 0623  
                                         l2630 0602                                           l2622 05F7  
                                         l2606 05BD                                           l2614 05CE  
                                         l2710 04BE                                           l2296 012F  
                                         l2288 024D                                           l2392 048B  
                                         l2384 0476                                           l2376 0468  
                                         l2368 045C                                           l2560 07CB  
                                         l2552 07BB                                           l2544 07A2  
                                         l2536 0767                                           l2528 075B  
                                         l2480 06AB                                           l2472 06A2  
                                         l2464 0672                                           l2456 0645  
                                         l2448 062A                                           l2632 0606  
                                         l2616 05E4                                           l2720 04CF  
                                         l2712 04C1                                           l2386 047B  
                                         l2650 0260                                           l2562 07CD  
                                         l2546 07AF                                           l2538 077E  
                                         l2490 06D7                                           l2482 06B1  
                                         l2466 0685                                           l2458 064C  
                                         l2634 060D                                           l2626 05FA  
                                         l2618 05E9                                           l2570 0570  
                                         l2730 04E0                                           l2722 04D7  
                                         l2714 04C4                                           l2388 0481  
                                         l2652 0265                                           l2564 07D1  
                                         l2548 07B4                                           l2660 01E3  
                                         l2484 06C4                                           l2468 0691  
                                         l2628 0600                                           l2636 0617  
                                         l2580 0582                                           l2740 050C  
                                         l2732 04E9                                           l2716 04C7  
                                         l2398 048C                                           l2654 026A  
                                         l2646 010C                                           l2566 07D7  
                                         l2558 07BD                                           l2662 01F4  
                                         l2486 06CC                                           l2478 06A3  
                                         l2638 061E                                           l2590 0598  
                                         l2582 0586                                           l2750 051D  
                                         l2742 0512                                           l2734 04EE  
                                         l2718 04CA                                           l2656 026C  
                                         l2496 06D9                                           l2664 0111  
                                         l2488 06D0                                           l2808 05D6  
                                         l2592 059B                                           l2584 058C  
                                         l2576 0571                                           l2760 053B  
                                         l2744 051B                                           l2736 04FB  
                                         l2728 04DA                                           l2658 0270  
                                         l2498 06EA                                           l2690 033A  
                                         l2674 0325                                           l2594 059E  
                                         l2586 058D                                           l2578 057B  
                                         l2770 0556                                           l2762 0541  
                                         l2738 04FF                                           l2692 0340  
                                         l2684 032D                                           l2676 032B  
                                         l2668 0324                                           l2588 0592  
                                         l2772 055B                                           l2764 0546  
                                         l2756 051E                                           l2694 0347  
                                         l2686 0332                                           l2678 032C  
                                         l2598 05A8                                           l2774 0568  
                                         l2766 054C                                           l2758 0534  
                                         l2696 034B                                           l2688 0334  
                                         l2768 0550                  __end_of_snake_getSurroundings 06D7  
                    ??_ai_is_ai_initiated_read 0074                                           u1000 0300  
                                         u1001 02FF                                           u1010 0313  
                                         u1011 0312                                           u1020 0322  
                                         u1021 0321                                           u1030 020C  
                                         u1110 0252                                           u1031 020B  
                                         u1111 0251                                           u1040 0220  
                                         u1041 021F                                           u1105 0196  
                                         u1050 022D                                           u1210 0425  
                                         u1130 0297                                           u1051 022C  
                                         u1211 0424                                           u1131 0296  
                                         u1300 04AF                                           u1060 02E4  
                                         u1301 04AE                                           u1205 0419  
                                         u1125 01B4                                           u1061 02E3  
                                         u1310 04B9                                           u1230 0434  
                                         u1070 0283                                           u1311 04B8  
                                         u1231 0433                                           u1071 0282  
                                         u1160 02AB                                           u1080 028D  
                                         u1400 06C4                                           u1320 0634  
                                         u1225 0426                                           u1161 02AA  
                                         u1145 029C                                           u1081 028C  
                                         u1401 06C3                                           u1321 0633  
                                         u1250 0444                                           u1170 03F9  
                                         u1410 06D6                                           u1330 063B  
                                         u1251 0443                                           u1235 0430  
                                         u1171 03F8                                           u1155 02A1  
                                         u1411 06D5                                           u1331 063A  
                                         u1260 0449                                           u1180 0404  
                                         u1420 0731                                           u1340 0655  
                                         u1500 0598                                           u1261 0448  
                                         u1245 043A                                           u1181 0403  
                                         u1421 0730                                           u1341 0654  
                                         u1501 0597                                           _LATA 010C  
                                         u1270 045B                                           u1190 0415  
                                         u1430 0749                                           u1510 05A7  
                                         _LATB 010D                                           u1095 01C7  
                                         u1271 045A                                           u1191 0414  
                                         u1431 0748                                           u1511 05A6  
                                         u1280 0481                                           u1600 026A  
                                         u1440 07A2                                           u1360 0672  
                                         u1281 0480                                           u1601 0269  
                                         u1441 07A1                                           u1361 0671  
                                         u1290 048B                                           u1450 07BA  
                                         u1530 05B9                                           u1291 048A  
                                         u1451 07B9                                           u1355 066A  
                                         u1531 05B8                                           u1460 07CB  
                                         u1380 0691                                           u1700 0534  
                                         u1461 07CA                                           u1381 0690  
                                         u1525 05B0                                           u1701 0533  
                                         u1470 07D7                                           u1614 01E8  
                                         u1630 0340                                           u1390 06B1  
                                         u1550 05C8                                           u1710 054C  
                                         u1471 07D6                                           u1615 01E7  
                                         u1631 033F                                           u1391 06B0  
                                         u1375 0688                                           u1551 05C7  
                                         u1711 054B                                           u1624 01F9  
                                         u1640 0351                                           u1560 05E9  
                                         u1480 057B                                           u1720 0556  
                                         u1625 01F8                                           u1641 0350  
                                         u1561 05E8                                           u1545 05C0  
                                         u1481 057A                                           u1721 0555  
                                         u1570 05F7                                           u1490 058C  
                                         u1571 05F6                                           u1491 058B  
                                         u1580 0600                                           u1581 05FF  
                                         u1590 0617                                           u1670 04D7  
                                         u1591 0616                                           u1735 055E  
                                         u1671 04D6                                           u1680 04FB  
                                         u1681 04FA                                           u1747 0505  
                                         u1757 03E2                                           u1685 04F7  
                                         u1695 0521                                           _WPUA 020C  
                                         _WPUB 020D                                 ??_eeprom_write 0075  
                                         _main 04BE                                           _rand 0385  
                                         _seed 0044                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           btemp 007E  
                  ai_is_ai_initiated_write@val 0079                                           start 0002  
                            ___bmul@multiplier 0073                                ??_weights1_read 0075  
                              ??_weights2_read 0075                                biases1_read@add 0074  
                      ??_snake_getFoodPosition 0070                        ai_is_ai_trained_write@c 007A  
                __end_of_OSCILLATOR_Initialize 014E                                biases2_read@add 0074  
                                        ?_main 0070                                          ?_rand 007C  
                              __end_of___awdiv 0453                                          _EEADR 0191  
                              ___awdiv@divisor 0070                     ??_ai_is_ai_initiated_write 0078  
                              ___awdiv@counter 0075                                          _RCREG 0199  
                                        _RCSTA 019D                                          _TRISA 008C  
                                        _TRISB 008D                                          _TXREG 019A  
                                        _TXSTA 019E                            ___lmul@multiplicand 0074  
                                        _field 0120                                 _WDT_Initialize 0114  
                                        main@i 0059                                          main@j 005D  
                              __end_of_sigmoid 01C0                                          status 0003  
                                        wtemp0 007E                         _ai_is_ai_trained_write 025F  
                              __initialization 07D9                               ??_weights1_write 004E  
                                 __end_of_main 056E                               ??_weights2_write 007E  
                                 __end_of_rand 03BA                __end_of_ai_is_ai_initiated_read 0135  
                                       ??_main 0055                                         ??_rand 0048  
                       __end_of_WDT_Initialize 0118              _EUSART_DefaultFramingErrorHandler 0000  
                   _EUSART_OverrunErrorHandler 0069                                         _EEADRH 0192  
                                       _EEADRL 0191                                         _EEDATA 0193  
                                       _EEDATH 0194                                         _EEDATL 0193  
                                       _EECON1 0195                                         _EECON2 0196  
                             ___awdiv@dividend 0072                                         _ANSELA 018C  
                                       _ANSELB 018D                                         _BORCON 0116  
                            ?_ai_getInputField 0070                                         _OSCCON 0099  
                                       _SPBRGH 019C                                         _SPBRGL 019B  
                                       _WDTCON 0097                             ??_ai_getInputField 0070  
                             __end_of_ledClear 0205              snake_getSurroundings@surroundings 0074  
                                       ___bmul 021A                                         ___lmul 0352  
                                       ___wmul 0291                                      ??___awdiv 0074  
                                       _ai_run 06D7                                         _ledSet 01E2  
                             _de_sigmoidValues 0800                                         _matrix 0034  
                             ___awdiv@quotient 0077                           __end_of_eeprom_write 0324  
                    ai_is_ai_initiated_write@c 007A                  __end_of_ai_is_ai_trained_read 013B  
                             biases1_write@add 004D                               biases1_write@val 004C  
                              ?_WDT_Initialize 0070                                      ??_sigmoid 0070  
                             biases2_write@add 004D                               biases2_write@val 004C  
                                 _ai_propagate 010C                              _SYSTEM_Initialize 01A0  
                                 _biases1_read 014E                                   _biases2_read 0155  
                      __end_of__initialization 07FD                                eeprom_read@addr 0073  
                           ?_SYSTEM_Initialize 0070                            ___bmul@multiplicand 0070  
                               __pcstackCOMMON 0070                                   __pidataBANK0 015C  
                          ??_SYSTEM_Initialize 0072                              ??_SPI1_Initialize 0070  
             __end_of_ai_is_ai_initiated_write 025F                             _spi1_configuration 0820  
                               _OPTION_REGbits 0095                          __end_of_sigmoidValues 0820  
                            eeprom_write@value 0074                ??_EUSART_SetOverrunErrorHandler 0072  
                              snake_initiate@i 004D                      __end_of_SYSTEM_Initialize 01B0  
                          snake_move@direction 0050                                   _headPosition 0042  
                                   __pbssBANK0 0020                                     __pbssBANK1 00A0  
                                   __pbssBANK2 0120                          ai_propagate@incentive 0070  
                               _SPI1_WriteByte 0118                            snake_move@incentive 0051  
                                   __pmaintext 04BE                                        ?___bmul 0070  
                                      ?___lmul 0070                                        ?___wmul 0077  
                                      ?_ai_run 0070                                    sendMatrix@b 0074  
                                  sendMatrix@i 0077                                    sendMatrix@j 0076  
                                      ?_ledSet 0070                                        _BAUDCON 019F  
                               ___lmul@product 0078                                        _APFCON0 011D  
                                      _APFCON1 011E                  __end_of_snake_getFoodPosition 0114  
                                      _OSCTUNE 0098                                      ?_ledClear 0070  
                                      _SSP1ADD 0212                                        _SSP1BUF 0211  
                     ??_EUSART_SetErrorHandler 0072                         __end_of_SPI1_WriteByte 011D  
                      ?_ai_is_ai_trained_write 0070                          _snake_getSurroundings 0621  
                            weights1_read@add1 0076                              weights1_read@add2 0074  
                             main@foodPosition 005B                                  ??_ai_initiate 0050  
                        __end_of_weights1_read 01A0                                        ___awdiv 03F4  
                        __end_of_weights2_read 0192                              weights2_read@add1 0075  
                            weights2_read@add2 0074                                        __ptext1 056E  
                                      __ptext2 02D2                                        __ptext3 0621  
                                      __ptext4 0111                                        __ptext5 010F  
                                      __ptext6 0324                                        __ptext7 01E2  
                                      __ptext8 01F3                                        __ptext9 03BA  
                            __end_of_txMAX7219 0291                                        ai_run@i 004B  
                                      ai_run@j 0050                                        ai_run@z 004E  
                        _OSCILLATOR_Initialize 0147                                        _mapping 005E  
                     ??_PIN_MANAGER_Initialize 0070                       ?_ai_is_ai_initiated_read 0070  
                                      _sigmoid 01B0                                     ??_ledClear 0071  
                                      ledSet@c 0070                                        ledSet@l 0073  
                                      clrloop0 013C                           end_of_initialization 07FD  
                                   _sendMatrix 0324                 __end_of_ai_is_ai_trained_write 0277  
                     __end_of_de_sigmoidValues 0810          __end_of_EUSART_SetOverrunErrorHandler 012F  
                _EUSART_SetOverrunErrorHandler 0129                                ?_SPI1_WriteByte 0070  
                                      init_ram 0141                                   _eeprom_write 02FA  
                                      initloop 0142                      ?_ai_is_ai_initiated_write 0070  
                                  snake_move@i 0052                              _EUSART_Initialize 02B0  
                            weights1_write@val 004D                             ?_EUSART_Initialize 0070  
                                    _RCSTAbits 019D                                     _snake_move 056E  
                            weights2_write@val 004D                            ??_EUSART_Initialize 0072  
                          __end_of_ai_initiate 04BE                               ??_WDT_Initialize 0070  
                               txMAX7219@addr0 0072                                      _TRISBbits 008D  
                                _biases1_write 0165                                  _biases2_write 016F  
                       ?_snake_getSurroundings 0070                      __end_of_EUSART_Initialize 02D2  
                              _SPI1_Initialize 0179                                  ??_eeprom_read 0070  
                                    _TXSTAbits 019E                                   _foodPosition 0041  
                               _snake_getField 010F                                   ai_initiate@i 0051  
                                 ai_initiate@j 0053                                 __end_of___bmul 022F  
                               __end_of___lmul 0385                     _EUSART_DefaultErrorHandler 0000  
                               __end_of___wmul 02B0                                 __end_of_ai_run 07D9  
                               __end_of_ledSet 01F3                         ?_OSCILLATOR_Initialize 0070  
                               _snake_initiate 02D2                          _ai_is_ai_trained_read 0135  
                          start_initialization 07D9                                  ??_initMAX7219 0073  
                               ?_biases1_write 004C                                 ?_biases2_write 004C  
                                  ?_sendMatrix 0070                         __end_of_snake_getField 0111  
               ?_EUSART_SetOverrunErrorHandler 0070                                   ai_run@choice 004A  
                                  _ai_initiate 0453                     _EUSART_FramingErrorHandler 006B  
                                     ??___bmul 0071                                       ??___lmul 0078  
                                  ?_snake_move 0070                                       ??___wmul 007B  
                       _EUSART_SetErrorHandler 011D                            __end_of_eeprom_read 021A  
                                     ??_ai_run 0048                                       ??_ledSet 0071  
                                  __pdataBANK0 005E                               ai_initiate@i_772 0052  
                             ai_initiate@j_770 0054                         __end_of_snake_initiate 02FA  
                                    ___latbits 0001                                  __pcstackBANK0 0048  
                      __end_of_SPI1_Initialize 0185                               eeprom_write@addr 0077  
                          __end_of_initMAX7219 03F4                                      __pnvBANK0 0067  
                              ?_snake_getField 0070                         _PIN_MANAGER_Initialize 022F  
                                     ?___awdiv 0070                               _ai_getInputField 010D  
                              ?_snake_initiate 0070                                   sendMatrix@nb 0075  
                       ?_ai_is_ai_trained_read 0070                          _snake_getFoodPosition 0111  
                              ??_biases1_write 007E                                ??_biases2_write 007E  
                                     ?_sigmoid 0070                               ??_SPI1_WriteByte 0070  
                                    _txMAX7219 0277                                 ___wmul@product 007B  
       EUSART_SetErrorHandler@interruptHandler 0070                                       _LATBbits 010D  
                                    clear_ram0 013B                                    _eeprom_read 0205  
                            _eusartRxLastError 0043                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 0072                                      ledClear@c 0070  
                                    ledClear@l 0073                                      _snakeSize 0066  
                                     _SSP1CON1 0215                                       _SSP1CON2 0216  
            _EUSART_DefaultOverrunErrorHandler 0000                                       _SSP1STAT 0214  
                                txMAX7219@dat0 0071                                      main@i_588 005C  
                            ___wmul@multiplier 0077                                 _weights1_write 01C0  
                                    main@field 0058                                 _weights2_write 01D1  
                                  _initMAX7219 03BA                        ??_snake_getSurroundings 0070  
                                   ?_txMAX7219 0071                                  _sigmoidValues 0810  
                             ?_SPI1_Initialize 0070                                  ?_ai_propagate 0070  
                            ___lmul@multiplier 0070                                  ?_biases1_read 0070  
                                ?_biases2_read 0070                                     _EECON1bits 0195  
                                  ai_run@i_784 004C                                    ai_run@i_787 004D  
                                  ai_run@j_782 0051                        ??_OSCILLATOR_Initialize 0070  
                          _EUSART_ErrorHandler 0067                         __end_of_weights1_write 01D1  
                       __end_of_weights2_write 01E2                         ?_snake_getFoodPosition 0070  
                       snake_getSurroundings@i 0072                         snake_getSurroundings@p 0071  
                                     _ledClear 01F3                                 ??_ai_propagate 0070  
                                     __ptext10 0277                                       __ptext11 0118  
                                     __ptext20 010C                                       __ptext12 06D7  
                                     __ptext21 025F                                       __ptext13 0185  
                                     __ptext30 0165                                       __ptext22 0135  
                                     __ptext14 0192                                       __ptext31 0247  
                                     __ptext23 0453                                       __ptext15 01B0  
                                     __ptext40 0147                                       __ptext32 02FA  
                                     __ptext24 01D1                                       __ptext16 0155  
                                     __ptext41 02B0                                       __ptext33 012F  
                                     __ptext25 021A                                       __ptext17 014E  
                                     __ptext42 0129                                       __ptext34 0205  
                                     __ptext26 01C0                                       __ptext18 0291  
                                     __ptext43 0123                                       __ptext35 010D  
                                     __ptext27 0385                                       __ptext19 03F4  
                                     __ptext44 011D                                       __ptext36 01A0  
                                     __ptext28 0352                                       __ptext37 0114  
                                     __ptext29 016F                                       __ptext38 0179  
                                     __ptext39 022F                                   _SSP1CON1bits 0215  
                                 ??_sendMatrix 0073                                 ??_biases1_read 0074  
                     _ai_is_ai_initiated_write 0247                                 ??_biases2_read 0074  
                      ?_EUSART_SetErrorHandler 0070                                   ?_ai_initiate 0070  
EUSART_SetOverrunErrorHandler@interruptHandler 0070                                   ??_snake_move 004E  
                                _weights1_read 0192                                  _weights2_read 0185  
        __end_of_EUSART_SetFramingErrorHandler 0129                  _EUSART_SetFramingErrorHandler 0123  
                           __end_of_sendMatrix 0352                                ?_weights1_write 004C  
                              ?_weights2_write 004C                                     _INTCONbits 000B  
                     ??_ai_is_ai_trained_write 0078                      ai_is_ai_trained_write@val 0079  
                                  ??_txMAX7219 0072                       __end_of_ai_getInputField 010F  
                             ??_snake_getField 0070                             __end_of_snake_move 0621  
                      ?_PIN_MANAGER_Initialize 0070                        _ai_is_ai_initiated_read 012F  
               __end_of_EUSART_SetErrorHandler 0123                             weights1_write@add1 004F  
                           weights1_write@add2 004C                                       sigmoid@z 0071  
                             ??_snake_initiate 004C                     snake_getSurroundings@i_692 0073  
                               ?_weights1_read 0074                                 ?_weights2_read 0074  
EUSART_SetFramingErrorHandler@interruptHandler 0070                        ??_ai_is_ai_trained_read 0074  
                                __pstringtext1 0800                                  __pstringtext2 0810  
                                __pstringtext3 0820                             weights2_write@add1 004E  
                           weights2_write@add2 004C                 __end_of_PIN_MANAGER_Initialize 0247  
                                ?_eeprom_write 0074                                     _STATUSbits 0003  
                                 ?_eeprom_read 0070                     __end_of_spi1_configuration 0824  
