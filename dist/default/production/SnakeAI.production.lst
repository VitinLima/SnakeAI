

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Oct 08 23:03:18 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2,group=1
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2
    58                           	psect	text40,local,class=CODE,merge=1,delta=2
    59                           	psect	text41,local,class=CODE,merge=1,delta=2
    60                           	psect	text42,local,class=CODE,merge=1,delta=2
    61                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    62                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    63                           	dabs	1,0x7E,2
    64     0000                     
    65                           ; Version 2.40
    66                           ; Generated 17/11/2021 GMT
    67                           ; 
    68                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    69                           ; All rights reserved.
    70                           ; 
    71                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    72                           ; 
    73                           ; Redistribution and use in source and binary forms, with or without modification, are
    74                           ; permitted provided that the following conditions are met:
    75                           ; 
    76                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    77                           ;        conditions and the following disclaimer.
    78                           ; 
    79                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    80                           ;        of conditions and the following disclaimer in the documentation and/or other
    81                           ;        materials provided with the distribution. Publication is not required when
    82                           ;        this file is used in an embedded application.
    83                           ; 
    84                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    85                           ;        software without specific prior written permission.
    86                           ; 
    87                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    88                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    89                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    90                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    91                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    92                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    93                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    94                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    95                           ; 
    96                           ; 
    97                           ; Code-generator required, PIC16F1827 Definitions
    98                           ; 
    99                           ; SFR Addresses
   100     0000                     	;# 
   101     0001                     	;# 
   102     0002                     	;# 
   103     0003                     	;# 
   104     0004                     	;# 
   105     0005                     	;# 
   106     0006                     	;# 
   107     0007                     	;# 
   108     0008                     	;# 
   109     0009                     	;# 
   110     000A                     	;# 
   111     000B                     	;# 
   112     000C                     	;# 
   113     000D                     	;# 
   114     0011                     	;# 
   115     0012                     	;# 
   116     0013                     	;# 
   117     0014                     	;# 
   118     0015                     	;# 
   119     0016                     	;# 
   120     0016                     	;# 
   121     0017                     	;# 
   122     0018                     	;# 
   123     0019                     	;# 
   124     001A                     	;# 
   125     001B                     	;# 
   126     001C                     	;# 
   127     001E                     	;# 
   128     001F                     	;# 
   129     008C                     	;# 
   130     008D                     	;# 
   131     0091                     	;# 
   132     0092                     	;# 
   133     0093                     	;# 
   134     0094                     	;# 
   135     0095                     	;# 
   136     0096                     	;# 
   137     0097                     	;# 
   138     0098                     	;# 
   139     0099                     	;# 
   140     009A                     	;# 
   141     009B                     	;# 
   142     009B                     	;# 
   143     009C                     	;# 
   144     009D                     	;# 
   145     009E                     	;# 
   146     010C                     	;# 
   147     010D                     	;# 
   148     0111                     	;# 
   149     0112                     	;# 
   150     0113                     	;# 
   151     0114                     	;# 
   152     0115                     	;# 
   153     0116                     	;# 
   154     0117                     	;# 
   155     0118                     	;# 
   156     0119                     	;# 
   157     011A                     	;# 
   158     011B                     	;# 
   159     011D                     	;# 
   160     011E                     	;# 
   161     018C                     	;# 
   162     018D                     	;# 
   163     0191                     	;# 
   164     0191                     	;# 
   165     0192                     	;# 
   166     0193                     	;# 
   167     0193                     	;# 
   168     0193                     	;# 
   169     0194                     	;# 
   170     0195                     	;# 
   171     0196                     	;# 
   172     0199                     	;# 
   173     019A                     	;# 
   174     019B                     	;# 
   175     019B                     	;# 
   176     019B                     	;# 
   177     019B                     	;# 
   178     019C                     	;# 
   179     019C                     	;# 
   180     019D                     	;# 
   181     019E                     	;# 
   182     019F                     	;# 
   183     020C                     	;# 
   184     020D                     	;# 
   185     0211                     	;# 
   186     0211                     	;# 
   187     0212                     	;# 
   188     0212                     	;# 
   189     0213                     	;# 
   190     0213                     	;# 
   191     0214                     	;# 
   192     0214                     	;# 
   193     0215                     	;# 
   194     0215                     	;# 
   195     0215                     	;# 
   196     0216                     	;# 
   197     0216                     	;# 
   198     0217                     	;# 
   199     0217                     	;# 
   200     0219                     	;# 
   201     021A                     	;# 
   202     021B                     	;# 
   203     021C                     	;# 
   204     021D                     	;# 
   205     021E                     	;# 
   206     021F                     	;# 
   207     0291                     	;# 
   208     0291                     	;# 
   209     0292                     	;# 
   210     0293                     	;# 
   211     0294                     	;# 
   212     0295                     	;# 
   213     0295                     	;# 
   214     0296                     	;# 
   215     0298                     	;# 
   216     0298                     	;# 
   217     0299                     	;# 
   218     029A                     	;# 
   219     029B                     	;# 
   220     029C                     	;# 
   221     029C                     	;# 
   222     029D                     	;# 
   223     029E                     	;# 
   224     029E                     	;# 
   225     0311                     	;# 
   226     0311                     	;# 
   227     0312                     	;# 
   228     0313                     	;# 
   229     0318                     	;# 
   230     0318                     	;# 
   231     0319                     	;# 
   232     031A                     	;# 
   233     0394                     	;# 
   234     0395                     	;# 
   235     0396                     	;# 
   236     039A                     	;# 
   237     039C                     	;# 
   238     039D                     	;# 
   239     039E                     	;# 
   240     039F                     	;# 
   241     0415                     	;# 
   242     0416                     	;# 
   243     0417                     	;# 
   244     041C                     	;# 
   245     041D                     	;# 
   246     041E                     	;# 
   247     0FE4                     	;# 
   248     0FE5                     	;# 
   249     0FE6                     	;# 
   250     0FE7                     	;# 
   251     0FE8                     	;# 
   252     0FE9                     	;# 
   253     0FEA                     	;# 
   254     0FEB                     	;# 
   255     0FED                     	;# 
   256     0FEE                     	;# 
   257     0FEF                     	;# 
   258     0000                     	;# 
   259     0001                     	;# 
   260     0002                     	;# 
   261     0003                     	;# 
   262     0004                     	;# 
   263     0005                     	;# 
   264     0006                     	;# 
   265     0007                     	;# 
   266     0008                     	;# 
   267     0009                     	;# 
   268     000A                     	;# 
   269     000B                     	;# 
   270     000C                     	;# 
   271     000D                     	;# 
   272     0011                     	;# 
   273     0012                     	;# 
   274     0013                     	;# 
   275     0014                     	;# 
   276     0015                     	;# 
   277     0016                     	;# 
   278     0016                     	;# 
   279     0017                     	;# 
   280     0018                     	;# 
   281     0019                     	;# 
   282     001A                     	;# 
   283     001B                     	;# 
   284     001C                     	;# 
   285     001E                     	;# 
   286     001F                     	;# 
   287     008C                     	;# 
   288     008D                     	;# 
   289     0091                     	;# 
   290     0092                     	;# 
   291     0093                     	;# 
   292     0094                     	;# 
   293     0095                     	;# 
   294     0096                     	;# 
   295     0097                     	;# 
   296     0098                     	;# 
   297     0099                     	;# 
   298     009A                     	;# 
   299     009B                     	;# 
   300     009B                     	;# 
   301     009C                     	;# 
   302     009D                     	;# 
   303     009E                     	;# 
   304     010C                     	;# 
   305     010D                     	;# 
   306     0111                     	;# 
   307     0112                     	;# 
   308     0113                     	;# 
   309     0114                     	;# 
   310     0115                     	;# 
   311     0116                     	;# 
   312     0117                     	;# 
   313     0118                     	;# 
   314     0119                     	;# 
   315     011A                     	;# 
   316     011B                     	;# 
   317     011D                     	;# 
   318     011E                     	;# 
   319     018C                     	;# 
   320     018D                     	;# 
   321     0191                     	;# 
   322     0191                     	;# 
   323     0192                     	;# 
   324     0193                     	;# 
   325     0193                     	;# 
   326     0193                     	;# 
   327     0194                     	;# 
   328     0195                     	;# 
   329     0196                     	;# 
   330     0199                     	;# 
   331     019A                     	;# 
   332     019B                     	;# 
   333     019B                     	;# 
   334     019B                     	;# 
   335     019B                     	;# 
   336     019C                     	;# 
   337     019C                     	;# 
   338     019D                     	;# 
   339     019E                     	;# 
   340     019F                     	;# 
   341     020C                     	;# 
   342     020D                     	;# 
   343     0211                     	;# 
   344     0211                     	;# 
   345     0212                     	;# 
   346     0212                     	;# 
   347     0213                     	;# 
   348     0213                     	;# 
   349     0214                     	;# 
   350     0214                     	;# 
   351     0215                     	;# 
   352     0215                     	;# 
   353     0215                     	;# 
   354     0216                     	;# 
   355     0216                     	;# 
   356     0217                     	;# 
   357     0217                     	;# 
   358     0219                     	;# 
   359     021A                     	;# 
   360     021B                     	;# 
   361     021C                     	;# 
   362     021D                     	;# 
   363     021E                     	;# 
   364     021F                     	;# 
   365     0291                     	;# 
   366     0291                     	;# 
   367     0292                     	;# 
   368     0293                     	;# 
   369     0294                     	;# 
   370     0295                     	;# 
   371     0295                     	;# 
   372     0296                     	;# 
   373     0298                     	;# 
   374     0298                     	;# 
   375     0299                     	;# 
   376     029A                     	;# 
   377     029B                     	;# 
   378     029C                     	;# 
   379     029C                     	;# 
   380     029D                     	;# 
   381     029E                     	;# 
   382     029E                     	;# 
   383     0311                     	;# 
   384     0311                     	;# 
   385     0312                     	;# 
   386     0313                     	;# 
   387     0318                     	;# 
   388     0318                     	;# 
   389     0319                     	;# 
   390     031A                     	;# 
   391     0394                     	;# 
   392     0395                     	;# 
   393     0396                     	;# 
   394     039A                     	;# 
   395     039C                     	;# 
   396     039D                     	;# 
   397     039E                     	;# 
   398     039F                     	;# 
   399     0415                     	;# 
   400     0416                     	;# 
   401     0417                     	;# 
   402     041C                     	;# 
   403     041D                     	;# 
   404     041E                     	;# 
   405     0FE4                     	;# 
   406     0FE5                     	;# 
   407     0FE6                     	;# 
   408     0FE7                     	;# 
   409     0FE8                     	;# 
   410     0FE9                     	;# 
   411     0FEA                     	;# 
   412     0FEB                     	;# 
   413     0FED                     	;# 
   414     0FEE                     	;# 
   415     0FEF                     	;# 
   416     0000                     	;# 
   417     0001                     	;# 
   418     0002                     	;# 
   419     0003                     	;# 
   420     0004                     	;# 
   421     0005                     	;# 
   422     0006                     	;# 
   423     0007                     	;# 
   424     0008                     	;# 
   425     0009                     	;# 
   426     000A                     	;# 
   427     000B                     	;# 
   428     000C                     	;# 
   429     000D                     	;# 
   430     0011                     	;# 
   431     0012                     	;# 
   432     0013                     	;# 
   433     0014                     	;# 
   434     0015                     	;# 
   435     0016                     	;# 
   436     0016                     	;# 
   437     0017                     	;# 
   438     0018                     	;# 
   439     0019                     	;# 
   440     001A                     	;# 
   441     001B                     	;# 
   442     001C                     	;# 
   443     001E                     	;# 
   444     001F                     	;# 
   445     008C                     	;# 
   446     008D                     	;# 
   447     0091                     	;# 
   448     0092                     	;# 
   449     0093                     	;# 
   450     0094                     	;# 
   451     0095                     	;# 
   452     0096                     	;# 
   453     0097                     	;# 
   454     0098                     	;# 
   455     0099                     	;# 
   456     009A                     	;# 
   457     009B                     	;# 
   458     009B                     	;# 
   459     009C                     	;# 
   460     009D                     	;# 
   461     009E                     	;# 
   462     010C                     	;# 
   463     010D                     	;# 
   464     0111                     	;# 
   465     0112                     	;# 
   466     0113                     	;# 
   467     0114                     	;# 
   468     0115                     	;# 
   469     0116                     	;# 
   470     0117                     	;# 
   471     0118                     	;# 
   472     0119                     	;# 
   473     011A                     	;# 
   474     011B                     	;# 
   475     011D                     	;# 
   476     011E                     	;# 
   477     018C                     	;# 
   478     018D                     	;# 
   479     0191                     	;# 
   480     0191                     	;# 
   481     0192                     	;# 
   482     0193                     	;# 
   483     0193                     	;# 
   484     0193                     	;# 
   485     0194                     	;# 
   486     0195                     	;# 
   487     0196                     	;# 
   488     0199                     	;# 
   489     019A                     	;# 
   490     019B                     	;# 
   491     019B                     	;# 
   492     019B                     	;# 
   493     019B                     	;# 
   494     019C                     	;# 
   495     019C                     	;# 
   496     019D                     	;# 
   497     019E                     	;# 
   498     019F                     	;# 
   499     020C                     	;# 
   500     020D                     	;# 
   501     0211                     	;# 
   502     0211                     	;# 
   503     0212                     	;# 
   504     0212                     	;# 
   505     0213                     	;# 
   506     0213                     	;# 
   507     0214                     	;# 
   508     0214                     	;# 
   509     0215                     	;# 
   510     0215                     	;# 
   511     0215                     	;# 
   512     0216                     	;# 
   513     0216                     	;# 
   514     0217                     	;# 
   515     0217                     	;# 
   516     0219                     	;# 
   517     021A                     	;# 
   518     021B                     	;# 
   519     021C                     	;# 
   520     021D                     	;# 
   521     021E                     	;# 
   522     021F                     	;# 
   523     0291                     	;# 
   524     0291                     	;# 
   525     0292                     	;# 
   526     0293                     	;# 
   527     0294                     	;# 
   528     0295                     	;# 
   529     0295                     	;# 
   530     0296                     	;# 
   531     0298                     	;# 
   532     0298                     	;# 
   533     0299                     	;# 
   534     029A                     	;# 
   535     029B                     	;# 
   536     029C                     	;# 
   537     029C                     	;# 
   538     029D                     	;# 
   539     029E                     	;# 
   540     029E                     	;# 
   541     0311                     	;# 
   542     0311                     	;# 
   543     0312                     	;# 
   544     0313                     	;# 
   545     0318                     	;# 
   546     0318                     	;# 
   547     0319                     	;# 
   548     031A                     	;# 
   549     0394                     	;# 
   550     0395                     	;# 
   551     0396                     	;# 
   552     039A                     	;# 
   553     039C                     	;# 
   554     039D                     	;# 
   555     039E                     	;# 
   556     039F                     	;# 
   557     0415                     	;# 
   558     0416                     	;# 
   559     0417                     	;# 
   560     041C                     	;# 
   561     041D                     	;# 
   562     041E                     	;# 
   563     0FE4                     	;# 
   564     0FE5                     	;# 
   565     0FE6                     	;# 
   566     0FE7                     	;# 
   567     0FE8                     	;# 
   568     0FE9                     	;# 
   569     0FEA                     	;# 
   570     0FEB                     	;# 
   571     0FED                     	;# 
   572     0FEE                     	;# 
   573     0FEF                     	;# 
   574     0000                     	;# 
   575     0001                     	;# 
   576     0002                     	;# 
   577     0003                     	;# 
   578     0004                     	;# 
   579     0005                     	;# 
   580     0006                     	;# 
   581     0007                     	;# 
   582     0008                     	;# 
   583     0009                     	;# 
   584     000A                     	;# 
   585     000B                     	;# 
   586     000C                     	;# 
   587     000D                     	;# 
   588     0011                     	;# 
   589     0012                     	;# 
   590     0013                     	;# 
   591     0014                     	;# 
   592     0015                     	;# 
   593     0016                     	;# 
   594     0016                     	;# 
   595     0017                     	;# 
   596     0018                     	;# 
   597     0019                     	;# 
   598     001A                     	;# 
   599     001B                     	;# 
   600     001C                     	;# 
   601     001E                     	;# 
   602     001F                     	;# 
   603     008C                     	;# 
   604     008D                     	;# 
   605     0091                     	;# 
   606     0092                     	;# 
   607     0093                     	;# 
   608     0094                     	;# 
   609     0095                     	;# 
   610     0096                     	;# 
   611     0097                     	;# 
   612     0098                     	;# 
   613     0099                     	;# 
   614     009A                     	;# 
   615     009B                     	;# 
   616     009B                     	;# 
   617     009C                     	;# 
   618     009D                     	;# 
   619     009E                     	;# 
   620     010C                     	;# 
   621     010D                     	;# 
   622     0111                     	;# 
   623     0112                     	;# 
   624     0113                     	;# 
   625     0114                     	;# 
   626     0115                     	;# 
   627     0116                     	;# 
   628     0117                     	;# 
   629     0118                     	;# 
   630     0119                     	;# 
   631     011A                     	;# 
   632     011B                     	;# 
   633     011D                     	;# 
   634     011E                     	;# 
   635     018C                     	;# 
   636     018D                     	;# 
   637     0191                     	;# 
   638     0191                     	;# 
   639     0192                     	;# 
   640     0193                     	;# 
   641     0193                     	;# 
   642     0193                     	;# 
   643     0194                     	;# 
   644     0195                     	;# 
   645     0196                     	;# 
   646     0199                     	;# 
   647     019A                     	;# 
   648     019B                     	;# 
   649     019B                     	;# 
   650     019B                     	;# 
   651     019B                     	;# 
   652     019C                     	;# 
   653     019C                     	;# 
   654     019D                     	;# 
   655     019E                     	;# 
   656     019F                     	;# 
   657     020C                     	;# 
   658     020D                     	;# 
   659     0211                     	;# 
   660     0211                     	;# 
   661     0212                     	;# 
   662     0212                     	;# 
   663     0213                     	;# 
   664     0213                     	;# 
   665     0214                     	;# 
   666     0214                     	;# 
   667     0215                     	;# 
   668     0215                     	;# 
   669     0215                     	;# 
   670     0216                     	;# 
   671     0216                     	;# 
   672     0217                     	;# 
   673     0217                     	;# 
   674     0219                     	;# 
   675     021A                     	;# 
   676     021B                     	;# 
   677     021C                     	;# 
   678     021D                     	;# 
   679     021E                     	;# 
   680     021F                     	;# 
   681     0291                     	;# 
   682     0291                     	;# 
   683     0292                     	;# 
   684     0293                     	;# 
   685     0294                     	;# 
   686     0295                     	;# 
   687     0295                     	;# 
   688     0296                     	;# 
   689     0298                     	;# 
   690     0298                     	;# 
   691     0299                     	;# 
   692     029A                     	;# 
   693     029B                     	;# 
   694     029C                     	;# 
   695     029C                     	;# 
   696     029D                     	;# 
   697     029E                     	;# 
   698     029E                     	;# 
   699     0311                     	;# 
   700     0311                     	;# 
   701     0312                     	;# 
   702     0313                     	;# 
   703     0318                     	;# 
   704     0318                     	;# 
   705     0319                     	;# 
   706     031A                     	;# 
   707     0394                     	;# 
   708     0395                     	;# 
   709     0396                     	;# 
   710     039A                     	;# 
   711     039C                     	;# 
   712     039D                     	;# 
   713     039E                     	;# 
   714     039F                     	;# 
   715     0415                     	;# 
   716     0416                     	;# 
   717     0417                     	;# 
   718     041C                     	;# 
   719     041D                     	;# 
   720     041E                     	;# 
   721     0FE4                     	;# 
   722     0FE5                     	;# 
   723     0FE6                     	;# 
   724     0FE7                     	;# 
   725     0FE8                     	;# 
   726     0FE9                     	;# 
   727     0FEA                     	;# 
   728     0FEB                     	;# 
   729     0FED                     	;# 
   730     0FEE                     	;# 
   731     0FEF                     	;# 
   732     0000                     	;# 
   733     0001                     	;# 
   734     0002                     	;# 
   735     0003                     	;# 
   736     0004                     	;# 
   737     0005                     	;# 
   738     0006                     	;# 
   739     0007                     	;# 
   740     0008                     	;# 
   741     0009                     	;# 
   742     000A                     	;# 
   743     000B                     	;# 
   744     000C                     	;# 
   745     000D                     	;# 
   746     0011                     	;# 
   747     0012                     	;# 
   748     0013                     	;# 
   749     0014                     	;# 
   750     0015                     	;# 
   751     0016                     	;# 
   752     0016                     	;# 
   753     0017                     	;# 
   754     0018                     	;# 
   755     0019                     	;# 
   756     001A                     	;# 
   757     001B                     	;# 
   758     001C                     	;# 
   759     001E                     	;# 
   760     001F                     	;# 
   761     008C                     	;# 
   762     008D                     	;# 
   763     0091                     	;# 
   764     0092                     	;# 
   765     0093                     	;# 
   766     0094                     	;# 
   767     0095                     	;# 
   768     0096                     	;# 
   769     0097                     	;# 
   770     0098                     	;# 
   771     0099                     	;# 
   772     009A                     	;# 
   773     009B                     	;# 
   774     009B                     	;# 
   775     009C                     	;# 
   776     009D                     	;# 
   777     009E                     	;# 
   778     010C                     	;# 
   779     010D                     	;# 
   780     0111                     	;# 
   781     0112                     	;# 
   782     0113                     	;# 
   783     0114                     	;# 
   784     0115                     	;# 
   785     0116                     	;# 
   786     0117                     	;# 
   787     0118                     	;# 
   788     0119                     	;# 
   789     011A                     	;# 
   790     011B                     	;# 
   791     011D                     	;# 
   792     011E                     	;# 
   793     018C                     	;# 
   794     018D                     	;# 
   795     0191                     	;# 
   796     0191                     	;# 
   797     0192                     	;# 
   798     0193                     	;# 
   799     0193                     	;# 
   800     0193                     	;# 
   801     0194                     	;# 
   802     0195                     	;# 
   803     0196                     	;# 
   804     0199                     	;# 
   805     019A                     	;# 
   806     019B                     	;# 
   807     019B                     	;# 
   808     019B                     	;# 
   809     019B                     	;# 
   810     019C                     	;# 
   811     019C                     	;# 
   812     019D                     	;# 
   813     019E                     	;# 
   814     019F                     	;# 
   815     020C                     	;# 
   816     020D                     	;# 
   817     0211                     	;# 
   818     0211                     	;# 
   819     0212                     	;# 
   820     0212                     	;# 
   821     0213                     	;# 
   822     0213                     	;# 
   823     0214                     	;# 
   824     0214                     	;# 
   825     0215                     	;# 
   826     0215                     	;# 
   827     0215                     	;# 
   828     0216                     	;# 
   829     0216                     	;# 
   830     0217                     	;# 
   831     0217                     	;# 
   832     0219                     	;# 
   833     021A                     	;# 
   834     021B                     	;# 
   835     021C                     	;# 
   836     021D                     	;# 
   837     021E                     	;# 
   838     021F                     	;# 
   839     0291                     	;# 
   840     0291                     	;# 
   841     0292                     	;# 
   842     0293                     	;# 
   843     0294                     	;# 
   844     0295                     	;# 
   845     0295                     	;# 
   846     0296                     	;# 
   847     0298                     	;# 
   848     0298                     	;# 
   849     0299                     	;# 
   850     029A                     	;# 
   851     029B                     	;# 
   852     029C                     	;# 
   853     029C                     	;# 
   854     029D                     	;# 
   855     029E                     	;# 
   856     029E                     	;# 
   857     0311                     	;# 
   858     0311                     	;# 
   859     0312                     	;# 
   860     0313                     	;# 
   861     0318                     	;# 
   862     0318                     	;# 
   863     0319                     	;# 
   864     031A                     	;# 
   865     0394                     	;# 
   866     0395                     	;# 
   867     0396                     	;# 
   868     039A                     	;# 
   869     039C                     	;# 
   870     039D                     	;# 
   871     039E                     	;# 
   872     039F                     	;# 
   873     0415                     	;# 
   874     0416                     	;# 
   875     0417                     	;# 
   876     041C                     	;# 
   877     041D                     	;# 
   878     041E                     	;# 
   879     0FE4                     	;# 
   880     0FE5                     	;# 
   881     0FE6                     	;# 
   882     0FE7                     	;# 
   883     0FE8                     	;# 
   884     0FE9                     	;# 
   885     0FEA                     	;# 
   886     0FEB                     	;# 
   887     0FED                     	;# 
   888     0FEE                     	;# 
   889     0FEF                     	;# 
   890     0000                     	;# 
   891     0001                     	;# 
   892     0002                     	;# 
   893     0003                     	;# 
   894     0004                     	;# 
   895     0005                     	;# 
   896     0006                     	;# 
   897     0007                     	;# 
   898     0008                     	;# 
   899     0009                     	;# 
   900     000A                     	;# 
   901     000B                     	;# 
   902     000C                     	;# 
   903     000D                     	;# 
   904     0011                     	;# 
   905     0012                     	;# 
   906     0013                     	;# 
   907     0014                     	;# 
   908     0015                     	;# 
   909     0016                     	;# 
   910     0016                     	;# 
   911     0017                     	;# 
   912     0018                     	;# 
   913     0019                     	;# 
   914     001A                     	;# 
   915     001B                     	;# 
   916     001C                     	;# 
   917     001E                     	;# 
   918     001F                     	;# 
   919     008C                     	;# 
   920     008D                     	;# 
   921     0091                     	;# 
   922     0092                     	;# 
   923     0093                     	;# 
   924     0094                     	;# 
   925     0095                     	;# 
   926     0096                     	;# 
   927     0097                     	;# 
   928     0098                     	;# 
   929     0099                     	;# 
   930     009A                     	;# 
   931     009B                     	;# 
   932     009B                     	;# 
   933     009C                     	;# 
   934     009D                     	;# 
   935     009E                     	;# 
   936     010C                     	;# 
   937     010D                     	;# 
   938     0111                     	;# 
   939     0112                     	;# 
   940     0113                     	;# 
   941     0114                     	;# 
   942     0115                     	;# 
   943     0116                     	;# 
   944     0117                     	;# 
   945     0118                     	;# 
   946     0119                     	;# 
   947     011A                     	;# 
   948     011B                     	;# 
   949     011D                     	;# 
   950     011E                     	;# 
   951     018C                     	;# 
   952     018D                     	;# 
   953     0191                     	;# 
   954     0191                     	;# 
   955     0192                     	;# 
   956     0193                     	;# 
   957     0193                     	;# 
   958     0193                     	;# 
   959     0194                     	;# 
   960     0195                     	;# 
   961     0196                     	;# 
   962     0199                     	;# 
   963     019A                     	;# 
   964     019B                     	;# 
   965     019B                     	;# 
   966     019B                     	;# 
   967     019B                     	;# 
   968     019C                     	;# 
   969     019C                     	;# 
   970     019D                     	;# 
   971     019E                     	;# 
   972     019F                     	;# 
   973     020C                     	;# 
   974     020D                     	;# 
   975     0211                     	;# 
   976     0211                     	;# 
   977     0212                     	;# 
   978     0212                     	;# 
   979     0213                     	;# 
   980     0213                     	;# 
   981     0214                     	;# 
   982     0214                     	;# 
   983     0215                     	;# 
   984     0215                     	;# 
   985     0215                     	;# 
   986     0216                     	;# 
   987     0216                     	;# 
   988     0217                     	;# 
   989     0217                     	;# 
   990     0219                     	;# 
   991     021A                     	;# 
   992     021B                     	;# 
   993     021C                     	;# 
   994     021D                     	;# 
   995     021E                     	;# 
   996     021F                     	;# 
   997     0291                     	;# 
   998     0291                     	;# 
   999     0292                     	;# 
  1000     0293                     	;# 
  1001     0294                     	;# 
  1002     0295                     	;# 
  1003     0295                     	;# 
  1004     0296                     	;# 
  1005     0298                     	;# 
  1006     0298                     	;# 
  1007     0299                     	;# 
  1008     029A                     	;# 
  1009     029B                     	;# 
  1010     029C                     	;# 
  1011     029C                     	;# 
  1012     029D                     	;# 
  1013     029E                     	;# 
  1014     029E                     	;# 
  1015     0311                     	;# 
  1016     0311                     	;# 
  1017     0312                     	;# 
  1018     0313                     	;# 
  1019     0318                     	;# 
  1020     0318                     	;# 
  1021     0319                     	;# 
  1022     031A                     	;# 
  1023     0394                     	;# 
  1024     0395                     	;# 
  1025     0396                     	;# 
  1026     039A                     	;# 
  1027     039C                     	;# 
  1028     039D                     	;# 
  1029     039E                     	;# 
  1030     039F                     	;# 
  1031     0415                     	;# 
  1032     0416                     	;# 
  1033     0417                     	;# 
  1034     041C                     	;# 
  1035     041D                     	;# 
  1036     041E                     	;# 
  1037     0FE4                     	;# 
  1038     0FE5                     	;# 
  1039     0FE6                     	;# 
  1040     0FE7                     	;# 
  1041     0FE8                     	;# 
  1042     0FE9                     	;# 
  1043     0FEA                     	;# 
  1044     0FEB                     	;# 
  1045     0FED                     	;# 
  1046     0FEE                     	;# 
  1047     0FEF                     	;# 
  1048     0000                     	;# 
  1049     0001                     	;# 
  1050     0002                     	;# 
  1051     0003                     	;# 
  1052     0004                     	;# 
  1053     0005                     	;# 
  1054     0006                     	;# 
  1055     0007                     	;# 
  1056     0008                     	;# 
  1057     0009                     	;# 
  1058     000A                     	;# 
  1059     000B                     	;# 
  1060     000C                     	;# 
  1061     000D                     	;# 
  1062     0011                     	;# 
  1063     0012                     	;# 
  1064     0013                     	;# 
  1065     0014                     	;# 
  1066     0015                     	;# 
  1067     0016                     	;# 
  1068     0016                     	;# 
  1069     0017                     	;# 
  1070     0018                     	;# 
  1071     0019                     	;# 
  1072     001A                     	;# 
  1073     001B                     	;# 
  1074     001C                     	;# 
  1075     001E                     	;# 
  1076     001F                     	;# 
  1077     008C                     	;# 
  1078     008D                     	;# 
  1079     0091                     	;# 
  1080     0092                     	;# 
  1081     0093                     	;# 
  1082     0094                     	;# 
  1083     0095                     	;# 
  1084     0096                     	;# 
  1085     0097                     	;# 
  1086     0098                     	;# 
  1087     0099                     	;# 
  1088     009A                     	;# 
  1089     009B                     	;# 
  1090     009B                     	;# 
  1091     009C                     	;# 
  1092     009D                     	;# 
  1093     009E                     	;# 
  1094     010C                     	;# 
  1095     010D                     	;# 
  1096     0111                     	;# 
  1097     0112                     	;# 
  1098     0113                     	;# 
  1099     0114                     	;# 
  1100     0115                     	;# 
  1101     0116                     	;# 
  1102     0117                     	;# 
  1103     0118                     	;# 
  1104     0119                     	;# 
  1105     011A                     	;# 
  1106     011B                     	;# 
  1107     011D                     	;# 
  1108     011E                     	;# 
  1109     018C                     	;# 
  1110     018D                     	;# 
  1111     0191                     	;# 
  1112     0191                     	;# 
  1113     0192                     	;# 
  1114     0193                     	;# 
  1115     0193                     	;# 
  1116     0193                     	;# 
  1117     0194                     	;# 
  1118     0195                     	;# 
  1119     0196                     	;# 
  1120     0199                     	;# 
  1121     019A                     	;# 
  1122     019B                     	;# 
  1123     019B                     	;# 
  1124     019B                     	;# 
  1125     019B                     	;# 
  1126     019C                     	;# 
  1127     019C                     	;# 
  1128     019D                     	;# 
  1129     019E                     	;# 
  1130     019F                     	;# 
  1131     020C                     	;# 
  1132     020D                     	;# 
  1133     0211                     	;# 
  1134     0211                     	;# 
  1135     0212                     	;# 
  1136     0212                     	;# 
  1137     0213                     	;# 
  1138     0213                     	;# 
  1139     0214                     	;# 
  1140     0214                     	;# 
  1141     0215                     	;# 
  1142     0215                     	;# 
  1143     0215                     	;# 
  1144     0216                     	;# 
  1145     0216                     	;# 
  1146     0217                     	;# 
  1147     0217                     	;# 
  1148     0219                     	;# 
  1149     021A                     	;# 
  1150     021B                     	;# 
  1151     021C                     	;# 
  1152     021D                     	;# 
  1153     021E                     	;# 
  1154     021F                     	;# 
  1155     0291                     	;# 
  1156     0291                     	;# 
  1157     0292                     	;# 
  1158     0293                     	;# 
  1159     0294                     	;# 
  1160     0295                     	;# 
  1161     0295                     	;# 
  1162     0296                     	;# 
  1163     0298                     	;# 
  1164     0298                     	;# 
  1165     0299                     	;# 
  1166     029A                     	;# 
  1167     029B                     	;# 
  1168     029C                     	;# 
  1169     029C                     	;# 
  1170     029D                     	;# 
  1171     029E                     	;# 
  1172     029E                     	;# 
  1173     0311                     	;# 
  1174     0311                     	;# 
  1175     0312                     	;# 
  1176     0313                     	;# 
  1177     0318                     	;# 
  1178     0318                     	;# 
  1179     0319                     	;# 
  1180     031A                     	;# 
  1181     0394                     	;# 
  1182     0395                     	;# 
  1183     0396                     	;# 
  1184     039A                     	;# 
  1185     039C                     	;# 
  1186     039D                     	;# 
  1187     039E                     	;# 
  1188     039F                     	;# 
  1189     0415                     	;# 
  1190     0416                     	;# 
  1191     0417                     	;# 
  1192     041C                     	;# 
  1193     041D                     	;# 
  1194     041E                     	;# 
  1195     0FE4                     	;# 
  1196     0FE5                     	;# 
  1197     0FE6                     	;# 
  1198     0FE7                     	;# 
  1199     0FE8                     	;# 
  1200     0FE9                     	;# 
  1201     0FEA                     	;# 
  1202     0FEB                     	;# 
  1203     0FED                     	;# 
  1204     0FEE                     	;# 
  1205     0FEF                     	;# 
  1206     0000                     	;# 
  1207     0001                     	;# 
  1208     0002                     	;# 
  1209     0003                     	;# 
  1210     0004                     	;# 
  1211     0005                     	;# 
  1212     0006                     	;# 
  1213     0007                     	;# 
  1214     0008                     	;# 
  1215     0009                     	;# 
  1216     000A                     	;# 
  1217     000B                     	;# 
  1218     000C                     	;# 
  1219     000D                     	;# 
  1220     0011                     	;# 
  1221     0012                     	;# 
  1222     0013                     	;# 
  1223     0014                     	;# 
  1224     0015                     	;# 
  1225     0016                     	;# 
  1226     0016                     	;# 
  1227     0017                     	;# 
  1228     0018                     	;# 
  1229     0019                     	;# 
  1230     001A                     	;# 
  1231     001B                     	;# 
  1232     001C                     	;# 
  1233     001E                     	;# 
  1234     001F                     	;# 
  1235     008C                     	;# 
  1236     008D                     	;# 
  1237     0091                     	;# 
  1238     0092                     	;# 
  1239     0093                     	;# 
  1240     0094                     	;# 
  1241     0095                     	;# 
  1242     0096                     	;# 
  1243     0097                     	;# 
  1244     0098                     	;# 
  1245     0099                     	;# 
  1246     009A                     	;# 
  1247     009B                     	;# 
  1248     009B                     	;# 
  1249     009C                     	;# 
  1250     009D                     	;# 
  1251     009E                     	;# 
  1252     010C                     	;# 
  1253     010D                     	;# 
  1254     0111                     	;# 
  1255     0112                     	;# 
  1256     0113                     	;# 
  1257     0114                     	;# 
  1258     0115                     	;# 
  1259     0116                     	;# 
  1260     0117                     	;# 
  1261     0118                     	;# 
  1262     0119                     	;# 
  1263     011A                     	;# 
  1264     011B                     	;# 
  1265     011D                     	;# 
  1266     011E                     	;# 
  1267     018C                     	;# 
  1268     018D                     	;# 
  1269     0191                     	;# 
  1270     0191                     	;# 
  1271     0192                     	;# 
  1272     0193                     	;# 
  1273     0193                     	;# 
  1274     0193                     	;# 
  1275     0194                     	;# 
  1276     0195                     	;# 
  1277     0196                     	;# 
  1278     0199                     	;# 
  1279     019A                     	;# 
  1280     019B                     	;# 
  1281     019B                     	;# 
  1282     019B                     	;# 
  1283     019B                     	;# 
  1284     019C                     	;# 
  1285     019C                     	;# 
  1286     019D                     	;# 
  1287     019E                     	;# 
  1288     019F                     	;# 
  1289     020C                     	;# 
  1290     020D                     	;# 
  1291     0211                     	;# 
  1292     0211                     	;# 
  1293     0212                     	;# 
  1294     0212                     	;# 
  1295     0213                     	;# 
  1296     0213                     	;# 
  1297     0214                     	;# 
  1298     0214                     	;# 
  1299     0215                     	;# 
  1300     0215                     	;# 
  1301     0215                     	;# 
  1302     0216                     	;# 
  1303     0216                     	;# 
  1304     0217                     	;# 
  1305     0217                     	;# 
  1306     0219                     	;# 
  1307     021A                     	;# 
  1308     021B                     	;# 
  1309     021C                     	;# 
  1310     021D                     	;# 
  1311     021E                     	;# 
  1312     021F                     	;# 
  1313     0291                     	;# 
  1314     0291                     	;# 
  1315     0292                     	;# 
  1316     0293                     	;# 
  1317     0294                     	;# 
  1318     0295                     	;# 
  1319     0295                     	;# 
  1320     0296                     	;# 
  1321     0298                     	;# 
  1322     0298                     	;# 
  1323     0299                     	;# 
  1324     029A                     	;# 
  1325     029B                     	;# 
  1326     029C                     	;# 
  1327     029C                     	;# 
  1328     029D                     	;# 
  1329     029E                     	;# 
  1330     029E                     	;# 
  1331     0311                     	;# 
  1332     0311                     	;# 
  1333     0312                     	;# 
  1334     0313                     	;# 
  1335     0318                     	;# 
  1336     0318                     	;# 
  1337     0319                     	;# 
  1338     031A                     	;# 
  1339     0394                     	;# 
  1340     0395                     	;# 
  1341     0396                     	;# 
  1342     039A                     	;# 
  1343     039C                     	;# 
  1344     039D                     	;# 
  1345     039E                     	;# 
  1346     039F                     	;# 
  1347     0415                     	;# 
  1348     0416                     	;# 
  1349     0417                     	;# 
  1350     041C                     	;# 
  1351     041D                     	;# 
  1352     041E                     	;# 
  1353     0FE4                     	;# 
  1354     0FE5                     	;# 
  1355     0FE6                     	;# 
  1356     0FE7                     	;# 
  1357     0FE8                     	;# 
  1358     0FE9                     	;# 
  1359     0FEA                     	;# 
  1360     0FEB                     	;# 
  1361     0FED                     	;# 
  1362     0FEE                     	;# 
  1363     0FEF                     	;# 
  1364     0000                     	;# 
  1365     0001                     	;# 
  1366     0002                     	;# 
  1367     0003                     	;# 
  1368     0004                     	;# 
  1369     0005                     	;# 
  1370     0006                     	;# 
  1371     0007                     	;# 
  1372     0008                     	;# 
  1373     0009                     	;# 
  1374     000A                     	;# 
  1375     000B                     	;# 
  1376     000C                     	;# 
  1377     000D                     	;# 
  1378     0011                     	;# 
  1379     0012                     	;# 
  1380     0013                     	;# 
  1381     0014                     	;# 
  1382     0015                     	;# 
  1383     0016                     	;# 
  1384     0016                     	;# 
  1385     0017                     	;# 
  1386     0018                     	;# 
  1387     0019                     	;# 
  1388     001A                     	;# 
  1389     001B                     	;# 
  1390     001C                     	;# 
  1391     001E                     	;# 
  1392     001F                     	;# 
  1393     008C                     	;# 
  1394     008D                     	;# 
  1395     0091                     	;# 
  1396     0092                     	;# 
  1397     0093                     	;# 
  1398     0094                     	;# 
  1399     0095                     	;# 
  1400     0096                     	;# 
  1401     0097                     	;# 
  1402     0098                     	;# 
  1403     0099                     	;# 
  1404     009A                     	;# 
  1405     009B                     	;# 
  1406     009B                     	;# 
  1407     009C                     	;# 
  1408     009D                     	;# 
  1409     009E                     	;# 
  1410     010C                     	;# 
  1411     010D                     	;# 
  1412     0111                     	;# 
  1413     0112                     	;# 
  1414     0113                     	;# 
  1415     0114                     	;# 
  1416     0115                     	;# 
  1417     0116                     	;# 
  1418     0117                     	;# 
  1419     0118                     	;# 
  1420     0119                     	;# 
  1421     011A                     	;# 
  1422     011B                     	;# 
  1423     011D                     	;# 
  1424     011E                     	;# 
  1425     018C                     	;# 
  1426     018D                     	;# 
  1427     0191                     	;# 
  1428     0191                     	;# 
  1429     0192                     	;# 
  1430     0193                     	;# 
  1431     0193                     	;# 
  1432     0193                     	;# 
  1433     0194                     	;# 
  1434     0195                     	;# 
  1435     0196                     	;# 
  1436     0199                     	;# 
  1437     019A                     	;# 
  1438     019B                     	;# 
  1439     019B                     	;# 
  1440     019B                     	;# 
  1441     019B                     	;# 
  1442     019C                     	;# 
  1443     019C                     	;# 
  1444     019D                     	;# 
  1445     019E                     	;# 
  1446     019F                     	;# 
  1447     020C                     	;# 
  1448     020D                     	;# 
  1449     0211                     	;# 
  1450     0211                     	;# 
  1451     0212                     	;# 
  1452     0212                     	;# 
  1453     0213                     	;# 
  1454     0213                     	;# 
  1455     0214                     	;# 
  1456     0214                     	;# 
  1457     0215                     	;# 
  1458     0215                     	;# 
  1459     0215                     	;# 
  1460     0216                     	;# 
  1461     0216                     	;# 
  1462     0217                     	;# 
  1463     0217                     	;# 
  1464     0219                     	;# 
  1465     021A                     	;# 
  1466     021B                     	;# 
  1467     021C                     	;# 
  1468     021D                     	;# 
  1469     021E                     	;# 
  1470     021F                     	;# 
  1471     0291                     	;# 
  1472     0291                     	;# 
  1473     0292                     	;# 
  1474     0293                     	;# 
  1475     0294                     	;# 
  1476     0295                     	;# 
  1477     0295                     	;# 
  1478     0296                     	;# 
  1479     0298                     	;# 
  1480     0298                     	;# 
  1481     0299                     	;# 
  1482     029A                     	;# 
  1483     029B                     	;# 
  1484     029C                     	;# 
  1485     029C                     	;# 
  1486     029D                     	;# 
  1487     029E                     	;# 
  1488     029E                     	;# 
  1489     0311                     	;# 
  1490     0311                     	;# 
  1491     0312                     	;# 
  1492     0313                     	;# 
  1493     0318                     	;# 
  1494     0318                     	;# 
  1495     0319                     	;# 
  1496     031A                     	;# 
  1497     0394                     	;# 
  1498     0395                     	;# 
  1499     0396                     	;# 
  1500     039A                     	;# 
  1501     039C                     	;# 
  1502     039D                     	;# 
  1503     039E                     	;# 
  1504     039F                     	;# 
  1505     0415                     	;# 
  1506     0416                     	;# 
  1507     0417                     	;# 
  1508     041C                     	;# 
  1509     041D                     	;# 
  1510     041E                     	;# 
  1511     0FE4                     	;# 
  1512     0FE5                     	;# 
  1513     0FE6                     	;# 
  1514     0FE7                     	;# 
  1515     0FE8                     	;# 
  1516     0FE9                     	;# 
  1517     0FEA                     	;# 
  1518     0FEB                     	;# 
  1519     0FED                     	;# 
  1520     0FEE                     	;# 
  1521     0FEF                     	;# 
  1522     0000                     	;# 
  1523     0001                     	;# 
  1524     0002                     	;# 
  1525     0003                     	;# 
  1526     0004                     	;# 
  1527     0005                     	;# 
  1528     0006                     	;# 
  1529     0007                     	;# 
  1530     0008                     	;# 
  1531     0009                     	;# 
  1532     000A                     	;# 
  1533     000B                     	;# 
  1534     000C                     	;# 
  1535     000D                     	;# 
  1536     0011                     	;# 
  1537     0012                     	;# 
  1538     0013                     	;# 
  1539     0014                     	;# 
  1540     0015                     	;# 
  1541     0016                     	;# 
  1542     0016                     	;# 
  1543     0017                     	;# 
  1544     0018                     	;# 
  1545     0019                     	;# 
  1546     001A                     	;# 
  1547     001B                     	;# 
  1548     001C                     	;# 
  1549     001E                     	;# 
  1550     001F                     	;# 
  1551     008C                     	;# 
  1552     008D                     	;# 
  1553     0091                     	;# 
  1554     0092                     	;# 
  1555     0093                     	;# 
  1556     0094                     	;# 
  1557     0095                     	;# 
  1558     0096                     	;# 
  1559     0097                     	;# 
  1560     0098                     	;# 
  1561     0099                     	;# 
  1562     009A                     	;# 
  1563     009B                     	;# 
  1564     009B                     	;# 
  1565     009C                     	;# 
  1566     009D                     	;# 
  1567     009E                     	;# 
  1568     010C                     	;# 
  1569     010D                     	;# 
  1570     0111                     	;# 
  1571     0112                     	;# 
  1572     0113                     	;# 
  1573     0114                     	;# 
  1574     0115                     	;# 
  1575     0116                     	;# 
  1576     0117                     	;# 
  1577     0118                     	;# 
  1578     0119                     	;# 
  1579     011A                     	;# 
  1580     011B                     	;# 
  1581     011D                     	;# 
  1582     011E                     	;# 
  1583     018C                     	;# 
  1584     018D                     	;# 
  1585     0191                     	;# 
  1586     0191                     	;# 
  1587     0192                     	;# 
  1588     0193                     	;# 
  1589     0193                     	;# 
  1590     0193                     	;# 
  1591     0194                     	;# 
  1592     0195                     	;# 
  1593     0196                     	;# 
  1594     0199                     	;# 
  1595     019A                     	;# 
  1596     019B                     	;# 
  1597     019B                     	;# 
  1598     019B                     	;# 
  1599     019B                     	;# 
  1600     019C                     	;# 
  1601     019C                     	;# 
  1602     019D                     	;# 
  1603     019E                     	;# 
  1604     019F                     	;# 
  1605     020C                     	;# 
  1606     020D                     	;# 
  1607     0211                     	;# 
  1608     0211                     	;# 
  1609     0212                     	;# 
  1610     0212                     	;# 
  1611     0213                     	;# 
  1612     0213                     	;# 
  1613     0214                     	;# 
  1614     0214                     	;# 
  1615     0215                     	;# 
  1616     0215                     	;# 
  1617     0215                     	;# 
  1618     0216                     	;# 
  1619     0216                     	;# 
  1620     0217                     	;# 
  1621     0217                     	;# 
  1622     0219                     	;# 
  1623     021A                     	;# 
  1624     021B                     	;# 
  1625     021C                     	;# 
  1626     021D                     	;# 
  1627     021E                     	;# 
  1628     021F                     	;# 
  1629     0291                     	;# 
  1630     0291                     	;# 
  1631     0292                     	;# 
  1632     0293                     	;# 
  1633     0294                     	;# 
  1634     0295                     	;# 
  1635     0295                     	;# 
  1636     0296                     	;# 
  1637     0298                     	;# 
  1638     0298                     	;# 
  1639     0299                     	;# 
  1640     029A                     	;# 
  1641     029B                     	;# 
  1642     029C                     	;# 
  1643     029C                     	;# 
  1644     029D                     	;# 
  1645     029E                     	;# 
  1646     029E                     	;# 
  1647     0311                     	;# 
  1648     0311                     	;# 
  1649     0312                     	;# 
  1650     0313                     	;# 
  1651     0318                     	;# 
  1652     0318                     	;# 
  1653     0319                     	;# 
  1654     031A                     	;# 
  1655     0394                     	;# 
  1656     0395                     	;# 
  1657     0396                     	;# 
  1658     039A                     	;# 
  1659     039C                     	;# 
  1660     039D                     	;# 
  1661     039E                     	;# 
  1662     039F                     	;# 
  1663     0415                     	;# 
  1664     0416                     	;# 
  1665     0417                     	;# 
  1666     041C                     	;# 
  1667     041D                     	;# 
  1668     041E                     	;# 
  1669     0FE4                     	;# 
  1670     0FE5                     	;# 
  1671     0FE6                     	;# 
  1672     0FE7                     	;# 
  1673     0FE8                     	;# 
  1674     0FE9                     	;# 
  1675     0FEA                     	;# 
  1676     0FEB                     	;# 
  1677     0FED                     	;# 
  1678     0FEE                     	;# 
  1679     0FEF                     	;# 
  1680     0000                     	;# 
  1681     0001                     	;# 
  1682     0002                     	;# 
  1683     0003                     	;# 
  1684     0004                     	;# 
  1685     0005                     	;# 
  1686     0006                     	;# 
  1687     0007                     	;# 
  1688     0008                     	;# 
  1689     0009                     	;# 
  1690     000A                     	;# 
  1691     000B                     	;# 
  1692     000C                     	;# 
  1693     000D                     	;# 
  1694     0011                     	;# 
  1695     0012                     	;# 
  1696     0013                     	;# 
  1697     0014                     	;# 
  1698     0015                     	;# 
  1699     0016                     	;# 
  1700     0016                     	;# 
  1701     0017                     	;# 
  1702     0018                     	;# 
  1703     0019                     	;# 
  1704     001A                     	;# 
  1705     001B                     	;# 
  1706     001C                     	;# 
  1707     001E                     	;# 
  1708     001F                     	;# 
  1709     008C                     	;# 
  1710     008D                     	;# 
  1711     0091                     	;# 
  1712     0092                     	;# 
  1713     0093                     	;# 
  1714     0094                     	;# 
  1715     0095                     	;# 
  1716     0096                     	;# 
  1717     0097                     	;# 
  1718     0098                     	;# 
  1719     0099                     	;# 
  1720     009A                     	;# 
  1721     009B                     	;# 
  1722     009B                     	;# 
  1723     009C                     	;# 
  1724     009D                     	;# 
  1725     009E                     	;# 
  1726     010C                     	;# 
  1727     010D                     	;# 
  1728     0111                     	;# 
  1729     0112                     	;# 
  1730     0113                     	;# 
  1731     0114                     	;# 
  1732     0115                     	;# 
  1733     0116                     	;# 
  1734     0117                     	;# 
  1735     0118                     	;# 
  1736     0119                     	;# 
  1737     011A                     	;# 
  1738     011B                     	;# 
  1739     011D                     	;# 
  1740     011E                     	;# 
  1741     018C                     	;# 
  1742     018D                     	;# 
  1743     0191                     	;# 
  1744     0191                     	;# 
  1745     0192                     	;# 
  1746     0193                     	;# 
  1747     0193                     	;# 
  1748     0193                     	;# 
  1749     0194                     	;# 
  1750     0195                     	;# 
  1751     0196                     	;# 
  1752     0199                     	;# 
  1753     019A                     	;# 
  1754     019B                     	;# 
  1755     019B                     	;# 
  1756     019B                     	;# 
  1757     019B                     	;# 
  1758     019C                     	;# 
  1759     019C                     	;# 
  1760     019D                     	;# 
  1761     019E                     	;# 
  1762     019F                     	;# 
  1763     020C                     	;# 
  1764     020D                     	;# 
  1765     0211                     	;# 
  1766     0211                     	;# 
  1767     0212                     	;# 
  1768     0212                     	;# 
  1769     0213                     	;# 
  1770     0213                     	;# 
  1771     0214                     	;# 
  1772     0214                     	;# 
  1773     0215                     	;# 
  1774     0215                     	;# 
  1775     0215                     	;# 
  1776     0216                     	;# 
  1777     0216                     	;# 
  1778     0217                     	;# 
  1779     0217                     	;# 
  1780     0219                     	;# 
  1781     021A                     	;# 
  1782     021B                     	;# 
  1783     021C                     	;# 
  1784     021D                     	;# 
  1785     021E                     	;# 
  1786     021F                     	;# 
  1787     0291                     	;# 
  1788     0291                     	;# 
  1789     0292                     	;# 
  1790     0293                     	;# 
  1791     0294                     	;# 
  1792     0295                     	;# 
  1793     0295                     	;# 
  1794     0296                     	;# 
  1795     0298                     	;# 
  1796     0298                     	;# 
  1797     0299                     	;# 
  1798     029A                     	;# 
  1799     029B                     	;# 
  1800     029C                     	;# 
  1801     029C                     	;# 
  1802     029D                     	;# 
  1803     029E                     	;# 
  1804     029E                     	;# 
  1805     0311                     	;# 
  1806     0311                     	;# 
  1807     0312                     	;# 
  1808     0313                     	;# 
  1809     0318                     	;# 
  1810     0318                     	;# 
  1811     0319                     	;# 
  1812     031A                     	;# 
  1813     0394                     	;# 
  1814     0395                     	;# 
  1815     0396                     	;# 
  1816     039A                     	;# 
  1817     039C                     	;# 
  1818     039D                     	;# 
  1819     039E                     	;# 
  1820     039F                     	;# 
  1821     0415                     	;# 
  1822     0416                     	;# 
  1823     0417                     	;# 
  1824     041C                     	;# 
  1825     041D                     	;# 
  1826     041E                     	;# 
  1827     0FE4                     	;# 
  1828     0FE5                     	;# 
  1829     0FE6                     	;# 
  1830     0FE7                     	;# 
  1831     0FE8                     	;# 
  1832     0FE9                     	;# 
  1833     0FEA                     	;# 
  1834     0FEB                     	;# 
  1835     0FED                     	;# 
  1836     0FEE                     	;# 
  1837     0FEF                     	;# 
  1838     0000                     	;# 
  1839     0001                     	;# 
  1840     0002                     	;# 
  1841     0003                     	;# 
  1842     0004                     	;# 
  1843     0005                     	;# 
  1844     0006                     	;# 
  1845     0007                     	;# 
  1846     0008                     	;# 
  1847     0009                     	;# 
  1848     000A                     	;# 
  1849     000B                     	;# 
  1850     000C                     	;# 
  1851     000D                     	;# 
  1852     0011                     	;# 
  1853     0012                     	;# 
  1854     0013                     	;# 
  1855     0014                     	;# 
  1856     0015                     	;# 
  1857     0016                     	;# 
  1858     0016                     	;# 
  1859     0017                     	;# 
  1860     0018                     	;# 
  1861     0019                     	;# 
  1862     001A                     	;# 
  1863     001B                     	;# 
  1864     001C                     	;# 
  1865     001E                     	;# 
  1866     001F                     	;# 
  1867     008C                     	;# 
  1868     008D                     	;# 
  1869     0091                     	;# 
  1870     0092                     	;# 
  1871     0093                     	;# 
  1872     0094                     	;# 
  1873     0095                     	;# 
  1874     0096                     	;# 
  1875     0097                     	;# 
  1876     0098                     	;# 
  1877     0099                     	;# 
  1878     009A                     	;# 
  1879     009B                     	;# 
  1880     009B                     	;# 
  1881     009C                     	;# 
  1882     009D                     	;# 
  1883     009E                     	;# 
  1884     010C                     	;# 
  1885     010D                     	;# 
  1886     0111                     	;# 
  1887     0112                     	;# 
  1888     0113                     	;# 
  1889     0114                     	;# 
  1890     0115                     	;# 
  1891     0116                     	;# 
  1892     0117                     	;# 
  1893     0118                     	;# 
  1894     0119                     	;# 
  1895     011A                     	;# 
  1896     011B                     	;# 
  1897     011D                     	;# 
  1898     011E                     	;# 
  1899     018C                     	;# 
  1900     018D                     	;# 
  1901     0191                     	;# 
  1902     0191                     	;# 
  1903     0192                     	;# 
  1904     0193                     	;# 
  1905     0193                     	;# 
  1906     0193                     	;# 
  1907     0194                     	;# 
  1908     0195                     	;# 
  1909     0196                     	;# 
  1910     0199                     	;# 
  1911     019A                     	;# 
  1912     019B                     	;# 
  1913     019B                     	;# 
  1914     019B                     	;# 
  1915     019B                     	;# 
  1916     019C                     	;# 
  1917     019C                     	;# 
  1918     019D                     	;# 
  1919     019E                     	;# 
  1920     019F                     	;# 
  1921     020C                     	;# 
  1922     020D                     	;# 
  1923     0211                     	;# 
  1924     0211                     	;# 
  1925     0212                     	;# 
  1926     0212                     	;# 
  1927     0213                     	;# 
  1928     0213                     	;# 
  1929     0214                     	;# 
  1930     0214                     	;# 
  1931     0215                     	;# 
  1932     0215                     	;# 
  1933     0215                     	;# 
  1934     0216                     	;# 
  1935     0216                     	;# 
  1936     0217                     	;# 
  1937     0217                     	;# 
  1938     0219                     	;# 
  1939     021A                     	;# 
  1940     021B                     	;# 
  1941     021C                     	;# 
  1942     021D                     	;# 
  1943     021E                     	;# 
  1944     021F                     	;# 
  1945     0291                     	;# 
  1946     0291                     	;# 
  1947     0292                     	;# 
  1948     0293                     	;# 
  1949     0294                     	;# 
  1950     0295                     	;# 
  1951     0295                     	;# 
  1952     0296                     	;# 
  1953     0298                     	;# 
  1954     0298                     	;# 
  1955     0299                     	;# 
  1956     029A                     	;# 
  1957     029B                     	;# 
  1958     029C                     	;# 
  1959     029C                     	;# 
  1960     029D                     	;# 
  1961     029E                     	;# 
  1962     029E                     	;# 
  1963     0311                     	;# 
  1964     0311                     	;# 
  1965     0312                     	;# 
  1966     0313                     	;# 
  1967     0318                     	;# 
  1968     0318                     	;# 
  1969     0319                     	;# 
  1970     031A                     	;# 
  1971     0394                     	;# 
  1972     0395                     	;# 
  1973     0396                     	;# 
  1974     039A                     	;# 
  1975     039C                     	;# 
  1976     039D                     	;# 
  1977     039E                     	;# 
  1978     039F                     	;# 
  1979     0415                     	;# 
  1980     0416                     	;# 
  1981     0417                     	;# 
  1982     041C                     	;# 
  1983     041D                     	;# 
  1984     041E                     	;# 
  1985     0FE4                     	;# 
  1986     0FE5                     	;# 
  1987     0FE6                     	;# 
  1988     0FE7                     	;# 
  1989     0FE8                     	;# 
  1990     0FE9                     	;# 
  1991     0FEA                     	;# 
  1992     0FEB                     	;# 
  1993     0FED                     	;# 
  1994     0FEE                     	;# 
  1995     0FEF                     	;# 
  1996     0000                     	;# 
  1997     0001                     	;# 
  1998     0002                     	;# 
  1999     0003                     	;# 
  2000     0004                     	;# 
  2001     0005                     	;# 
  2002     0006                     	;# 
  2003     0007                     	;# 
  2004     0008                     	;# 
  2005     0009                     	;# 
  2006     000A                     	;# 
  2007     000B                     	;# 
  2008     000C                     	;# 
  2009     000D                     	;# 
  2010     0011                     	;# 
  2011     0012                     	;# 
  2012     0013                     	;# 
  2013     0014                     	;# 
  2014     0015                     	;# 
  2015     0016                     	;# 
  2016     0016                     	;# 
  2017     0017                     	;# 
  2018     0018                     	;# 
  2019     0019                     	;# 
  2020     001A                     	;# 
  2021     001B                     	;# 
  2022     001C                     	;# 
  2023     001E                     	;# 
  2024     001F                     	;# 
  2025     008C                     	;# 
  2026     008D                     	;# 
  2027     0091                     	;# 
  2028     0092                     	;# 
  2029     0093                     	;# 
  2030     0094                     	;# 
  2031     0095                     	;# 
  2032     0096                     	;# 
  2033     0097                     	;# 
  2034     0098                     	;# 
  2035     0099                     	;# 
  2036     009A                     	;# 
  2037     009B                     	;# 
  2038     009B                     	;# 
  2039     009C                     	;# 
  2040     009D                     	;# 
  2041     009E                     	;# 
  2042     010C                     	;# 
  2043     010D                     	;# 
  2044     0111                     	;# 
  2045     0112                     	;# 
  2046     0113                     	;# 
  2047     0114                     	;# 
  2048     0115                     	;# 
  2049     0116                     	;# 
  2050     0117                     	;# 
  2051     0118                     	;# 
  2052     0119                     	;# 
  2053     011A                     	;# 
  2054     011B                     	;# 
  2055     011D                     	;# 
  2056     011E                     	;# 
  2057     018C                     	;# 
  2058     018D                     	;# 
  2059     0191                     	;# 
  2060     0191                     	;# 
  2061     0192                     	;# 
  2062     0193                     	;# 
  2063     0193                     	;# 
  2064     0193                     	;# 
  2065     0194                     	;# 
  2066     0195                     	;# 
  2067     0196                     	;# 
  2068     0199                     	;# 
  2069     019A                     	;# 
  2070     019B                     	;# 
  2071     019B                     	;# 
  2072     019B                     	;# 
  2073     019B                     	;# 
  2074     019C                     	;# 
  2075     019C                     	;# 
  2076     019D                     	;# 
  2077     019E                     	;# 
  2078     019F                     	;# 
  2079     020C                     	;# 
  2080     020D                     	;# 
  2081     0211                     	;# 
  2082     0211                     	;# 
  2083     0212                     	;# 
  2084     0212                     	;# 
  2085     0213                     	;# 
  2086     0213                     	;# 
  2087     0214                     	;# 
  2088     0214                     	;# 
  2089     0215                     	;# 
  2090     0215                     	;# 
  2091     0215                     	;# 
  2092     0216                     	;# 
  2093     0216                     	;# 
  2094     0217                     	;# 
  2095     0217                     	;# 
  2096     0219                     	;# 
  2097     021A                     	;# 
  2098     021B                     	;# 
  2099     021C                     	;# 
  2100     021D                     	;# 
  2101     021E                     	;# 
  2102     021F                     	;# 
  2103     0291                     	;# 
  2104     0291                     	;# 
  2105     0292                     	;# 
  2106     0293                     	;# 
  2107     0294                     	;# 
  2108     0295                     	;# 
  2109     0295                     	;# 
  2110     0296                     	;# 
  2111     0298                     	;# 
  2112     0298                     	;# 
  2113     0299                     	;# 
  2114     029A                     	;# 
  2115     029B                     	;# 
  2116     029C                     	;# 
  2117     029C                     	;# 
  2118     029D                     	;# 
  2119     029E                     	;# 
  2120     029E                     	;# 
  2121     0311                     	;# 
  2122     0311                     	;# 
  2123     0312                     	;# 
  2124     0313                     	;# 
  2125     0318                     	;# 
  2126     0318                     	;# 
  2127     0319                     	;# 
  2128     031A                     	;# 
  2129     0394                     	;# 
  2130     0395                     	;# 
  2131     0396                     	;# 
  2132     039A                     	;# 
  2133     039C                     	;# 
  2134     039D                     	;# 
  2135     039E                     	;# 
  2136     039F                     	;# 
  2137     0415                     	;# 
  2138     0416                     	;# 
  2139     0417                     	;# 
  2140     041C                     	;# 
  2141     041D                     	;# 
  2142     041E                     	;# 
  2143     0FE4                     	;# 
  2144     0FE5                     	;# 
  2145     0FE6                     	;# 
  2146     0FE7                     	;# 
  2147     0FE8                     	;# 
  2148     0FE9                     	;# 
  2149     0FEA                     	;# 
  2150     0FEB                     	;# 
  2151     0FED                     	;# 
  2152     0FEE                     	;# 
  2153     0FEF                     	;# 
  2154                           
  2155 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  2156     0000                     
  2157 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  2158     0000                     
  2159 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  2160     0000                     
  2161                           	psect	idataBANK1
  2162     0E1D                     __pidataBANK1:
  2163                           
  2164                           ;initializer for _mapping
  2165     0E1D  340B               	retlw	11
  2166     0E1E  340F               	retlw	15
  2167     0E1F  3403               	retlw	3
  2168     0E20  3404               	retlw	4
  2169     0E21  3405               	retlw	5
  2170     0E22  3401               	retlw	1
  2171     0E23  340D               	retlw	13
  2172     0E24  340C               	retlw	12
  2173                           
  2174                           	psect	stringtext1
  2175     0800                     __pstringtext1:
  2176     0800                     _de_sigmoidValues:
  2177     0800  3440               	retlw	64
  2178     0801  3432               	retlw	50
  2179     0802  341B               	retlw	27
  2180     0803  340C               	retlw	12
  2181     0804  3405               	retlw	5
  2182     0805  3402               	retlw	2
  2183     0806  3401               	retlw	1
  2184     0807  3400               	retlw	0
  2185     0808  3400               	retlw	0
  2186     0809  3400               	retlw	0
  2187     080A  3401               	retlw	1
  2188     080B  3402               	retlw	2
  2189     080C  3405               	retlw	5
  2190     080D  340C               	retlw	12
  2191     080E  341B               	retlw	27
  2192     080F  3432               	retlw	50
  2193     0810                     __end_of_de_sigmoidValues:
  2194                           
  2195                           	psect	stringtext2
  2196     0810                     __pstringtext2:
  2197     0810                     _sigmoidValues:
  2198     0810  3480               	retlw	128
  2199     0811  34BA               	retlw	186
  2200     0812  34E1               	retlw	225
  2201     0813  34F3               	retlw	243
  2202     0814  34FA               	retlw	250
  2203     0815  34FD               	retlw	253
  2204     0816  34FE               	retlw	254
  2205     0817  34FF               	retlw	255
  2206     0818  3400               	retlw	0
  2207     0819  3400               	retlw	0
  2208     081A  3401               	retlw	1
  2209     081B  3402               	retlw	2
  2210     081C  3405               	retlw	5
  2211     081D  340C               	retlw	12
  2212     081E  341E               	retlw	30
  2213     081F  3445               	retlw	69
  2214     0820                     __end_of_sigmoidValues:
  2215                           
  2216                           	psect	stringtext3
  2217     0820                     __pstringtext3:
  2218     0820                     _spi1_configuration:
  2219     0820  3402               	retlw	2
  2220     0821  3440               	retlw	64
  2221     0822  3401               	retlw	1
  2222     0823  3400               	retlw	0
  2223     0824                     __end_of_spi1_configuration:
  2224                           
  2225                           	psect	nvBANK1
  2226     00E4                     __pnvBANK1:
  2227     00E4                     _EUSART_ErrorHandler:
  2228     00E4                     	ds	2
  2229     00E6                     _EUSART_OverrunErrorHandler:
  2230     00E6                     	ds	2
  2231     00E8                     _EUSART_FramingErrorHandler:
  2232     00E8                     	ds	2
  2233     0003                     _STATUSbits	set	3
  2234     0011                     _PIR1bits	set	17
  2235     000B                     _INTCONbits	set	11
  2236     008C                     _TRISAbits	set	140
  2237     0097                     _WDTCON	set	151
  2238     0098                     _OSCTUNE	set	152
  2239     0099                     _OSCCON	set	153
  2240     008D                     _TRISBbits	set	141
  2241     0095                     _OPTION_REGbits	set	149
  2242     008D                     _TRISB	set	141
  2243     008C                     _TRISA	set	140
  2244     010D                     _LATBbits	set	269
  2245     010C                     _LATAbits	set	268
  2246     0116                     _BORCON	set	278
  2247     011E                     _APFCON1	set	286
  2248     011D                     _APFCON0	set	285
  2249     010D                     _LATB	set	269
  2250     010C                     _LATA	set	268
  2251     0191                     _EEADR	set	401
  2252     0193                     _EEDATA	set	403
  2253     0195                     _EECON1	set	405
  2254     018C                     _ANSELA	set	396
  2255     018D                     _ANSELB	set	397
  2256     019A                     _TXREG	set	410
  2257     0199                     _RCREG	set	409
  2258     019D                     _RCSTAbits	set	413
  2259     019E                     _TXSTAbits	set	414
  2260     019C                     _SPBRGH	set	412
  2261     019B                     _SPBRGL	set	411
  2262     019E                     _TXSTA	set	414
  2263     019D                     _RCSTA	set	413
  2264     019F                     _BAUDCON	set	415
  2265     0196                     _EECON2	set	406
  2266     0193                     _EEDATL	set	403
  2267     0194                     _EEDATH	set	404
  2268     0195                     _EECON1bits	set	405
  2269     0192                     _EEADRH	set	402
  2270     0191                     _EEADRL	set	401
  2271     0211                     _SSP1BUF	set	529
  2272     0216                     _SSP1CON2	set	534
  2273     0215                     _SSP1CON1bits	set	533
  2274     0212                     _SSP1ADD	set	530
  2275     0215                     _SSP1CON1	set	533
  2276     0214                     _SSP1STAT	set	532
  2277     020C                     _WPUA	set	524
  2278     020D                     _WPUB	set	525
  2279                           
  2280                           	psect	cinit
  2281     07D9                     start_initialization:	
  2282                           ; #config settings
  2283                           
  2284     07D9                     __initialization:
  2285                           
  2286                           ; Initialize objects allocated to BANK1
  2287     07D9  301D               	movlw	low __pidataBANK1
  2288     07DA  0084               	movwf	4
  2289     07DB  308E               	movlw	(high __pidataBANK1)| (0+128)
  2290     07DC  0085               	movwf	5
  2291     07DD  30DC               	movlw	low __pdataBANK1
  2292     07DE  0086               	movwf	6
  2293     07DF  3000               	movlw	high __pdataBANK1
  2294     07E0  0087               	movwf	7
  2295     07E1  3008               	movlw	8
  2296     07E2  318E  2602  3187   	fcall	init_ram
  2297                           
  2298                           ; Clear objects allocated to BANK0
  2299     07E5  3051               	movlw	low __pbssBANK0
  2300     07E6  0084               	movwf	4
  2301     07E7  3000               	movlw	high __pbssBANK0
  2302     07E8  0085               	movwf	5
  2303     07E9  301E               	movlw	30
  2304     07EA  318D  25FC  3187   	fcall	clear_ram0
  2305                           
  2306                           ; Clear objects allocated to BANK1
  2307     07ED  30A0               	movlw	low __pbssBANK1
  2308     07EE  0084               	movwf	4
  2309     07EF  3000               	movlw	high __pbssBANK1
  2310     07F0  0085               	movwf	5
  2311     07F1  303C               	movlw	60
  2312     07F2  318D  25FC  3187   	fcall	clear_ram0
  2313                           
  2314                           ; Clear objects allocated to BANK2
  2315     07F5  3020               	movlw	low __pbssBANK2
  2316     07F6  0084               	movwf	4
  2317     07F7  3001               	movlw	high __pbssBANK2
  2318     07F8  0085               	movwf	5
  2319     07F9  3020               	movlw	32
  2320     07FA  318D  25FC  3187   	fcall	clear_ram0
  2321     07FD                     end_of_initialization:	
  2322                           ;End of C runtime variable initialization code
  2323                           
  2324     07FD                     __end_of__initialization:
  2325     07FD  0020               	movlb	0
  2326     07FE  3184  2C38         	ljmp	_main	;jump to C main() function
  2327                           
  2328                           	psect	bssBANK0
  2329     0051                     __pbssBANK0:
  2330     0051                     _DY1:
  2331     0051                     	ds	4
  2332     0055                     _Z2:
  2333     0055                     	ds	4
  2334     0059                     _Z1:
  2335     0059                     	ds	4
  2336     005D                     _Y2:
  2337     005D                     	ds	4
  2338     0061                     _Y1:
  2339     0061                     	ds	4
  2340     0065                     _remainingMoves:
  2341     0065                     	ds	1
  2342     0066                     _foodPosition:
  2343     0066                     	ds	1
  2344     0067                     _headPosition:
  2345     0067                     	ds	1
  2346     0068                     _choice:
  2347     0068                     	ds	1
  2348     0069                     _snakeSize:
  2349     0069                     	ds	1
  2350     006A                     _eusartRxLastError:
  2351     006A                     	ds	1
  2352     006B                     _seed:
  2353     006B                     	ds	4
  2354                           
  2355                           	psect	bssBANK1
  2356     00A0                     __pbssBANK1:
  2357     00A0                     _DW2:
  2358     00A0                     	ds	16
  2359     00B0                     _matrix:
  2360     00B0                     	ds	8
  2361     00B8                     _DB2:
  2362     00B8                     	ds	4
  2363     00BC                     _DB1:
  2364     00BC                     	ds	4
  2365     00C0                     _DY2:
  2366     00C0                     	ds	4
  2367     00C4                     _field:
  2368     00C4                     	ds	16
  2369     00D4                     _Y0:
  2370     00D4                     	ds	8
  2371                           
  2372                           	psect	dataBANK1
  2373     00DC                     __pdataBANK1:
  2374     00DC                     _mapping:
  2375     00DC                     	ds	8
  2376                           
  2377                           	psect	bssBANK2
  2378     0120                     __pbssBANK2:
  2379     0120                     _DW1:
  2380     0120                     	ds	32
  2381                           
  2382                           	psect	inittext
  2383     0E02                     init_ram:
  2384     0E02  00FE               	movwf	btemp
  2385     0E03                     initloop:
  2386     0E03  0012               	moviw fsr0++
  2387     0E04  001E               	movwi fsr1++
  2388     0E05  0BFE               	decfsz	btemp,f
  2389     0E06  2E03               	goto	initloop
  2390     0E07  3400               	retlw	0
  2391                           
  2392                           	psect	clrtext
  2393     0DFC                     clear_ram0:	
  2394                           ;	Called with FSR0 containing the base address, and
  2395                           ;	WREG with the size to clear
  2396                           
  2397     0DFC  0064               	clrwdt	;clear the watchdog before getting into this loop
  2398     0DFD                     clrloop0:
  2399     0DFD  0180               	clrf	0	;clear RAM location pointed to by FSR
  2400     0DFE  3101               	addfsr 0,1
  2401     0DFF  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2402     0E00  2DFD               	goto	clrloop0	;have we reached the end yet?
  2403     0E01  3400               	retlw	0	;all done for this memory range, return
  2404                           
  2405                           	psect	cstackCOMMON
  2406     0070                     __pcstackCOMMON:
  2407     0070                     ?_EUSART_SetFramingErrorHandler:
  2408     0070                     ?_EUSART_SetOverrunErrorHandler:	
  2409                           ; 1 bytes @ 0x0
  2410                           
  2411     0070                     ?_EUSART_SetErrorHandler:	
  2412                           ; 1 bytes @ 0x0
  2413                           
  2414     0070                     ?_OSCILLATOR_Initialize:	
  2415                           ; 1 bytes @ 0x0
  2416                           
  2417     0070                     ??_OSCILLATOR_Initialize:	
  2418                           ; 1 bytes @ 0x0
  2419                           
  2420     0070                     ?_WDT_Initialize:	
  2421                           ; 1 bytes @ 0x0
  2422                           
  2423     0070                     ??_WDT_Initialize:	
  2424                           ; 1 bytes @ 0x0
  2425                           
  2426     0070                     ?_snake_initiate:	
  2427                           ; 1 bytes @ 0x0
  2428                           
  2429     0070                     ?_ai_initiate:	
  2430                           ; 1 bytes @ 0x0
  2431                           
  2432     0070                     ?_initMAX7219:	
  2433                           ; 1 bytes @ 0x0
  2434                           
  2435     0070                     ?_snake_getSurroundings:	
  2436                           ; 1 bytes @ 0x0
  2437                           
  2438     0070                     ?_ai_getInputField:	
  2439                           ; 1 bytes @ 0x0
  2440                           
  2441     0070                     ??_ai_getInputField:	
  2442                           ; 1 bytes @ 0x0
  2443                           
  2444     0070                     ?_ai_propagate:	
  2445                           ; 1 bytes @ 0x0
  2446                           
  2447     0070                     ?_snake_move:	
  2448                           ; 1 bytes @ 0x0
  2449                           
  2450     0070                     ?_ai_run:	
  2451                           ; 1 bytes @ 0x0
  2452                           
  2453     0070                     ?_sendMatrix:	
  2454                           ; 1 bytes @ 0x0
  2455                           
  2456     0070                     ?_snake_getField:	
  2457                           ; 1 bytes @ 0x0
  2458                           
  2459     0070                     ??_snake_getField:	
  2460                           ; 1 bytes @ 0x0
  2461                           
  2462     0070                     ?_ledClear:	
  2463                           ; 1 bytes @ 0x0
  2464                           
  2465     0070                     ?_snake_getFoodPosition:	
  2466                           ; 1 bytes @ 0x0
  2467                           
  2468     0070                     ??_snake_getFoodPosition:	
  2469                           ; 1 bytes @ 0x0
  2470                           
  2471     0070                     ?_eeprom_write:	
  2472                           ; 1 bytes @ 0x0
  2473                           
  2474     0070                     ?_eeprom_read:	
  2475                           ; 1 bytes @ 0x0
  2476                           
  2477     0070                     ??_eeprom_read:	
  2478                           ; 1 bytes @ 0x0
  2479                           
  2480     0070                     ?_sigmoid:	
  2481                           ; 1 bytes @ 0x0
  2482                           
  2483     0070                     ??_sigmoid:	
  2484                           ; 1 bytes @ 0x0
  2485                           
  2486     0070                     ?_de_sigmoid:	
  2487                           ; 1 bytes @ 0x0
  2488                           
  2489     0070                     ??_de_sigmoid:	
  2490                           ; 1 bytes @ 0x0
  2491                           
  2492     0070                     ?_EUSART_Initialize:	
  2493                           ; 1 bytes @ 0x0
  2494                           
  2495     0070                     ?_PIN_MANAGER_Initialize:	
  2496                           ; 1 bytes @ 0x0
  2497                           
  2498     0070                     ??_PIN_MANAGER_Initialize:	
  2499                           ; 1 bytes @ 0x0
  2500                           
  2501     0070                     ?_SPI1_Initialize:	
  2502                           ; 1 bytes @ 0x0
  2503                           
  2504     0070                     ??_SPI1_Initialize:	
  2505                           ; 1 bytes @ 0x0
  2506                           
  2507     0070                     ?_SPI1_WriteByte:	
  2508                           ; 1 bytes @ 0x0
  2509                           
  2510     0070                     ??_SPI1_WriteByte:	
  2511                           ; 1 bytes @ 0x0
  2512                           
  2513     0070                     ?_SYSTEM_Initialize:	
  2514                           ; 1 bytes @ 0x0
  2515                           
  2516     0070                     ?_deactivateElevator:	
  2517                           ; 1 bytes @ 0x0
  2518                           
  2519     0070                     ??_deactivateElevator:	
  2520                           ; 1 bytes @ 0x0
  2521                           
  2522     0070                     ?_main:	
  2523                           ; 1 bytes @ 0x0
  2524                           
  2525     0070                     ?_biases1_read:	
  2526                           ; 1 bytes @ 0x0
  2527                           
  2528     0070                     ?_biases2_read:	
  2529                           ; 1 bytes @ 0x0
  2530                           
  2531     0070                     ?___lmul:	
  2532                           ; 1 bytes @ 0x0
  2533                           
  2534     0070                     SPI1_WriteByte@byte:	
  2535                           ; 4 bytes @ 0x0
  2536                           
  2537     0070                     ledClear@c:	
  2538                           ; 1 bytes @ 0x0
  2539                           
  2540     0070                     eeprom_write@value:	
  2541                           ; 1 bytes @ 0x0
  2542                           
  2543     0070                     EUSART_SetFramingErrorHandler@interruptHandler:	
  2544                           ; 1 bytes @ 0x0
  2545                           
  2546     0070                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  2547                           ; 2 bytes @ 0x0
  2548                           
  2549     0070                     EUSART_SetErrorHandler@interruptHandler:	
  2550                           ; 2 bytes @ 0x0
  2551                           
  2552     0070                     ___lmul@multiplier:	
  2553                           ; 2 bytes @ 0x0
  2554                           
  2555                           
  2556                           ; 4 bytes @ 0x0
  2557     0070                     	ds	1
  2558     0071                     ??_ledClear:
  2559     0071                     ??_eeprom_write:	
  2560                           ; 1 bytes @ 0x1
  2561                           
  2562     0071                     ?_txMAX7219:	
  2563                           ; 1 bytes @ 0x1
  2564                           
  2565     0071                     txMAX7219@dat0:	
  2566                           ; 1 bytes @ 0x1
  2567                           
  2568     0071                     sigmoid@z:	
  2569                           ; 1 bytes @ 0x1
  2570                           
  2571     0071                     de_sigmoid@z:	
  2572                           ; 1 bytes @ 0x1
  2573                           
  2574                           
  2575                           ; 1 bytes @ 0x1
  2576     0071                     	ds	1
  2577     0072                     ??_EUSART_SetFramingErrorHandler:
  2578     0072                     ??_EUSART_SetOverrunErrorHandler:	
  2579                           ; 1 bytes @ 0x2
  2580                           
  2581     0072                     ??_EUSART_SetErrorHandler:	
  2582                           ; 1 bytes @ 0x2
  2583                           
  2584     0072                     ??_EUSART_Initialize:	
  2585                           ; 1 bytes @ 0x2
  2586                           
  2587     0072                     ??_SYSTEM_Initialize:	
  2588                           ; 1 bytes @ 0x2
  2589                           
  2590     0072                     ??_txMAX7219:	
  2591                           ; 1 bytes @ 0x2
  2592                           
  2593     0072                     txMAX7219@addr0:	
  2594                           ; 1 bytes @ 0x2
  2595                           
  2596                           
  2597                           ; 1 bytes @ 0x2
  2598     0072                     	ds	1
  2599     0073                     ??_initMAX7219:
  2600     0073                     ??_sendMatrix:	
  2601                           ; 1 bytes @ 0x3
  2602                           
  2603     0073                     ledClear@l:	
  2604                           ; 1 bytes @ 0x3
  2605                           
  2606     0073                     eeprom_read@addr:	
  2607                           ; 1 bytes @ 0x3
  2608                           
  2609     0073                     eeprom_write@addr:	
  2610                           ; 1 bytes @ 0x3
  2611                           
  2612                           
  2613                           ; 1 bytes @ 0x3
  2614     0073                     	ds	1
  2615     0074                     ?_weights1_read:
  2616     0074                     ??_biases1_read:	
  2617                           ; 1 bytes @ 0x4
  2618                           
  2619     0074                     ?_weights2_read:	
  2620                           ; 1 bytes @ 0x4
  2621                           
  2622     0074                     ??_biases2_read:	
  2623                           ; 1 bytes @ 0x4
  2624                           
  2625     0074                     sendMatrix@b:	
  2626                           ; 1 bytes @ 0x4
  2627                           
  2628     0074                     weights1_read@add2:	
  2629                           ; 1 bytes @ 0x4
  2630                           
  2631     0074                     biases1_read@add:	
  2632                           ; 1 bytes @ 0x4
  2633                           
  2634     0074                     weights2_read@add2:	
  2635                           ; 1 bytes @ 0x4
  2636                           
  2637     0074                     biases2_read@add:	
  2638                           ; 1 bytes @ 0x4
  2639                           
  2640     0074                     ___lmul@multiplicand:	
  2641                           ; 1 bytes @ 0x4
  2642                           
  2643                           
  2644                           ; 4 bytes @ 0x4
  2645     0074                     	ds	1
  2646     0075                     ??_weights1_read:
  2647     0075                     ??_weights2_read:	
  2648                           ; 1 bytes @ 0x5
  2649                           
  2650     0075                     sendMatrix@nb:	
  2651                           ; 1 bytes @ 0x5
  2652                           
  2653                           
  2654                           ; 1 bytes @ 0x5
  2655     0075                     	ds	1
  2656     0076                     sendMatrix@j:
  2657     0076                     weights1_read@add1:	
  2658                           ; 1 bytes @ 0x6
  2659                           
  2660     0076                     weights2_read@add1:	
  2661                           ; 1 bytes @ 0x6
  2662                           
  2663                           
  2664                           ; 1 bytes @ 0x6
  2665     0076                     	ds	1
  2666     0077                     ?___wmul:
  2667     0077                     sendMatrix@i:	
  2668                           ; 2 bytes @ 0x7
  2669                           
  2670     0077                     ___wmul@multiplier:	
  2671                           ; 1 bytes @ 0x7
  2672                           
  2673                           
  2674                           ; 2 bytes @ 0x7
  2675     0077                     	ds	1
  2676     0078                     ??___lmul:
  2677     0078                     ___lmul@product:	
  2678                           ; 1 bytes @ 0x8
  2679                           
  2680                           
  2681                           ; 4 bytes @ 0x8
  2682     0078                     	ds	1
  2683     0079                     ___wmul@multiplicand:
  2684                           
  2685                           ; 2 bytes @ 0x9
  2686     0079                     	ds	2
  2687     007B                     ??___wmul:
  2688     007B                     ___wmul@product:	
  2689                           ; 1 bytes @ 0xB
  2690                           
  2691                           
  2692                           ; 2 bytes @ 0xB
  2693     007B                     	ds	1
  2694     007C                     ?_rand:
  2695                           
  2696                           ; 2 bytes @ 0xC
  2697     007C                     	ds	1
  2698     007D                     ??___awdiv:
  2699                           
  2700                           ; 1 bytes @ 0xD
  2701     007D                     	ds	1
  2702     007E                     ??_biases1_write:
  2703     007E                     ??_biases2_write:	
  2704                           ; 1 bytes @ 0xE
  2705                           
  2706                           
  2707                           	psect	cstackBANK0
  2708     0020                     __pcstackBANK0:	
  2709                           ; 1 bytes @ 0xE
  2710                           
  2711     0020                     ??_rand:
  2712     0020                     ?___awdiv:	
  2713                           ; 1 bytes @ 0x0
  2714                           
  2715     0020                     ___awdiv@divisor:	
  2716                           ; 2 bytes @ 0x0
  2717                           
  2718                           
  2719                           ; 2 bytes @ 0x0
  2720     0020                     	ds	2
  2721     0022                     ___awdiv@dividend:
  2722                           
  2723                           ; 2 bytes @ 0x2
  2724     0022                     	ds	2
  2725     0024                     ??_snake_initiate:
  2726     0024                     ?_weights1_write:	
  2727                           ; 1 bytes @ 0x4
  2728                           
  2729     0024                     ?_biases1_write:	
  2730                           ; 1 bytes @ 0x4
  2731                           
  2732     0024                     ?_weights2_write:	
  2733                           ; 1 bytes @ 0x4
  2734                           
  2735     0024                     ?_biases2_write:	
  2736                           ; 1 bytes @ 0x4
  2737                           
  2738     0024                     weights1_write@add2:	
  2739                           ; 1 bytes @ 0x4
  2740                           
  2741     0024                     biases1_write@val:	
  2742                           ; 1 bytes @ 0x4
  2743                           
  2744     0024                     weights2_write@add2:	
  2745                           ; 1 bytes @ 0x4
  2746                           
  2747     0024                     biases2_write@val:	
  2748                           ; 1 bytes @ 0x4
  2749                           
  2750     0024                     ___awdiv@counter:	
  2751                           ; 1 bytes @ 0x4
  2752                           
  2753                           
  2754                           ; 1 bytes @ 0x4
  2755     0024                     	ds	1
  2756     0025                     snake_initiate@i:
  2757     0025                     weights1_write@val:	
  2758                           ; 1 bytes @ 0x5
  2759                           
  2760     0025                     biases1_write@add:	
  2761                           ; 1 bytes @ 0x5
  2762                           
  2763     0025                     weights2_write@val:	
  2764                           ; 1 bytes @ 0x5
  2765                           
  2766     0025                     biases2_write@add:	
  2767                           ; 1 bytes @ 0x5
  2768                           
  2769     0025                     ___awdiv@sign:	
  2770                           ; 1 bytes @ 0x5
  2771                           
  2772                           
  2773                           ; 1 bytes @ 0x5
  2774     0025                     	ds	1
  2775     0026                     ??_weights1_write:
  2776     0026                     ??_weights2_write:	
  2777                           ; 1 bytes @ 0x6
  2778                           
  2779     0026                     ___awdiv@quotient:	
  2780                           ; 1 bytes @ 0x6
  2781                           
  2782                           
  2783                           ; 2 bytes @ 0x6
  2784     0026                     	ds	1
  2785     0027                     weights1_write@add1:
  2786     0027                     weights2_write@add1:	
  2787                           ; 1 bytes @ 0x7
  2788                           
  2789                           
  2790                           ; 1 bytes @ 0x7
  2791     0027                     	ds	1
  2792     0028                     ??_ai_initiate:
  2793     0028                     ??_snake_getSurroundings:	
  2794                           ; 1 bytes @ 0x8
  2795                           
  2796     0028                     ??_ai_propagate:	
  2797                           ; 1 bytes @ 0x8
  2798                           
  2799     0028                     ??_snake_move:	
  2800                           ; 1 bytes @ 0x8
  2801                           
  2802     0028                     ??_ai_run:	
  2803                           ; 1 bytes @ 0x8
  2804                           
  2805     0028                     ?_ledSet:	
  2806                           ; 1 bytes @ 0x8
  2807                           
  2808     0028                     ledSet@c:	
  2809                           ; 1 bytes @ 0x8
  2810                           
  2811                           
  2812                           ; 1 bytes @ 0x8
  2813     0028                     	ds	1
  2814     0029                     ??_ledSet:
  2815     0029                     ai_initiate@i:	
  2816                           ; 1 bytes @ 0x9
  2817                           
  2818                           
  2819                           ; 1 bytes @ 0x9
  2820     0029                     	ds	1
  2821     002A                     snake_move@direction:
  2822     002A                     snake_getSurroundings@p:	
  2823                           ; 1 bytes @ 0xA
  2824                           
  2825     002A                     ai_initiate@i_903:	
  2826                           ; 1 bytes @ 0xA
  2827                           
  2828     002A                     ai_run@i:	
  2829                           ; 1 bytes @ 0xA
  2830                           
  2831                           
  2832                           ; 1 bytes @ 0xA
  2833     002A                     	ds	1
  2834     002B                     ledSet@l:
  2835     002B                     snake_move@incentive:	
  2836                           ; 1 bytes @ 0xB
  2837                           
  2838     002B                     snake_getSurroundings@lf:	
  2839                           ; 1 bytes @ 0xB
  2840                           
  2841     002B                     ai_initiate@j:	
  2842                           ; 1 bytes @ 0xB
  2843                           
  2844     002B                     ai_run@i_911:	
  2845                           ; 1 bytes @ 0xB
  2846                           
  2847                           
  2848                           ; 1 bytes @ 0xB
  2849     002B                     	ds	1
  2850     002C                     ?_setLine:
  2851     002C                     setLine@val:	
  2852                           ; 1 bytes @ 0xC
  2853                           
  2854     002C                     snake_move@i:	
  2855                           ; 1 bytes @ 0xC
  2856                           
  2857     002C                     snake_getSurroundings@cf:	
  2858                           ; 1 bytes @ 0xC
  2859                           
  2860     002C                     ai_initiate@j_901:	
  2861                           ; 1 bytes @ 0xC
  2862                           
  2863     002C                     ai_run@i_915:	
  2864                           ; 1 bytes @ 0xC
  2865                           
  2866                           
  2867                           ; 1 bytes @ 0xC
  2868     002C                     	ds	1
  2869     002D                     ??_setLine:
  2870     002D                     snake_getSurroundings@i:	
  2871                           ; 1 bytes @ 0xD
  2872                           
  2873     002D                     ai_run@i_917:	
  2874                           ; 1 bytes @ 0xD
  2875                           
  2876                           
  2877                           ; 1 bytes @ 0xD
  2878     002D                     	ds	1
  2879     002E                     setLine@mask:
  2880     002E                     snake_getSurroundings@lh:	
  2881                           ; 1 bytes @ 0xE
  2882                           
  2883     002E                     ai_run@z:	
  2884                           ; 1 bytes @ 0xE
  2885                           
  2886                           
  2887                           ; 2 bytes @ 0xE
  2888     002E                     	ds	1
  2889     002F                     setLine@l:
  2890     002F                     snake_getSurroundings@ch:	
  2891                           ; 1 bytes @ 0xF
  2892                           
  2893                           
  2894                           ; 1 bytes @ 0xF
  2895     002F                     	ds	1
  2896     0030                     setLine@j:
  2897     0030                     snake_getSurroundings@i_796:	
  2898                           ; 1 bytes @ 0x10
  2899                           
  2900     0030                     ai_run@j:	
  2901                           ; 1 bytes @ 0x10
  2902                           
  2903     0030                     ai_propagate@S:	
  2904                           ; 1 bytes @ 0x10
  2905                           
  2906                           
  2907                           ; 4 bytes @ 0x10
  2908     0030                     	ds	1
  2909     0031                     snake_getSurroundings@surroundings:
  2910     0031                     ai_run@j_913:	
  2911                           ; 1 bytes @ 0x11
  2912                           
  2913                           
  2914                           ; 1 bytes @ 0x11
  2915     0031                     	ds	3
  2916     0034                     ai_propagate@incentive:
  2917                           
  2918                           ; 1 bytes @ 0x14
  2919     0034                     	ds	1
  2920     0035                     ai_propagate@i:
  2921                           
  2922                           ; 1 bytes @ 0x15
  2923     0035                     	ds	1
  2924     0036                     ai_propagate@i_922:
  2925                           
  2926                           ; 1 bytes @ 0x16
  2927     0036                     	ds	1
  2928     0037                     ai_propagate@i_924:
  2929                           
  2930                           ; 1 bytes @ 0x17
  2931     0037                     	ds	1
  2932     0038                     ai_propagate@i_926:
  2933                           
  2934                           ; 1 bytes @ 0x18
  2935     0038                     	ds	1
  2936     0039                     ai_propagate@i_931:
  2937                           
  2938                           ; 1 bytes @ 0x19
  2939     0039                     	ds	1
  2940     003A                     ai_propagate@j:
  2941                           
  2942                           ; 1 bytes @ 0x1A
  2943     003A                     	ds	1
  2944     003B                     ai_propagate@i_933:
  2945                           
  2946                           ; 1 bytes @ 0x1B
  2947     003B                     	ds	1
  2948     003C                     ai_propagate@i_935:
  2949                           
  2950                           ; 1 bytes @ 0x1C
  2951     003C                     	ds	1
  2952     003D                     ai_propagate@i_929:
  2953                           
  2954                           ; 1 bytes @ 0x1D
  2955     003D                     	ds	1
  2956     003E                     ai_propagate@j_930:
  2957                           
  2958                           ; 1 bytes @ 0x1E
  2959     003E                     	ds	1
  2960     003F                     ai_propagate@j_925:
  2961                           
  2962                           ; 1 bytes @ 0x1F
  2963     003F                     	ds	1
  2964     0040                     ai_propagate@j_928:
  2965                           
  2966                           ; 1 bytes @ 0x20
  2967     0040                     	ds	1
  2968     0041                     ai_propagate@j_932:
  2969                           
  2970                           ; 1 bytes @ 0x21
  2971     0041                     	ds	1
  2972     0042                     ai_propagate@j_934:
  2973                           
  2974                           ; 1 bytes @ 0x22
  2975     0042                     	ds	1
  2976     0043                     ai_propagate@dz:
  2977                           
  2978                           ; 2 bytes @ 0x23
  2979     0043                     	ds	2
  2980     0045                     ??_main:
  2981                           
  2982                           ; 1 bytes @ 0x25
  2983     0045                     	ds	3
  2984     0048                     main@field:
  2985                           
  2986                           ; 1 bytes @ 0x28
  2987     0048                     	ds	1
  2988     0049                     main@foodPosition:
  2989                           
  2990                           ; 1 bytes @ 0x29
  2991     0049                     	ds	1
  2992     004A                     main@foodPosition_665:
  2993                           
  2994                           ; 1 bytes @ 0x2A
  2995     004A                     	ds	1
  2996     004B                     main@i:
  2997                           
  2998                           ; 2 bytes @ 0x2B
  2999     004B                     	ds	2
  3000     004D                     main@i_660:
  3001                           
  3002                           ; 1 bytes @ 0x2D
  3003     004D                     	ds	1
  3004     004E                     main@j:
  3005                           
  3006                           ; 1 bytes @ 0x2E
  3007     004E                     	ds	1
  3008     004F                     main@i_663:
  3009                           
  3010                           ; 1 bytes @ 0x2F
  3011     004F                     	ds	1
  3012     0050                     main@j_664:
  3013                           
  3014                           ; 1 bytes @ 0x30
  3015     0050                     	ds	1
  3016                           
  3017                           	psect	maintext
  3018     0438                     __pmaintext:	
  3019 ;;
  3020 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  3021 ;;
  3022 ;; *************** function _main *****************
  3023 ;; Defined at:
  3024 ;;		line 67 in file "main.c"
  3025 ;; Parameters:    Size  Location     Type
  3026 ;;		None
  3027 ;; Auto vars:     Size  Location     Type
  3028 ;;  j               1   48[BANK0 ] unsigned char 
  3029 ;;  j               1   46[BANK0 ] unsigned char 
  3030 ;;  i               1   47[BANK0 ] unsigned char 
  3031 ;;  foodPosition    1   42[BANK0 ] unsigned char 
  3032 ;;  i               1   45[BANK0 ] unsigned char 
  3033 ;;  i               2   43[BANK0 ] unsigned short 
  3034 ;;  foodPosition    1   41[BANK0 ] unsigned char 
  3035 ;;  field           1   40[BANK0 ] PTR unsigned char 
  3036 ;;		 -> field(16), 
  3037 ;; Return value:  Size  Location     Type
  3038 ;;                  1    wreg      void 
  3039 ;; Registers used:
  3040 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3041 ;; Tracked objects:
  3042 ;;		On entry : B1F/0
  3043 ;;		On exit  : 0/0
  3044 ;;		Unchanged: 0/0
  3045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3046 ;;      Params:         0       0       0       0       0       0
  3047 ;;      Locals:         0       9       0       0       0       0
  3048 ;;      Temps:          0       3       0       0       0       0
  3049 ;;      Totals:         0      12       0       0       0       0
  3050 ;;Total ram usage:       12 bytes
  3051 ;; Hardware stack levels required when called: 4
  3052 ;; This function calls:
  3053 ;;		_SYSTEM_Initialize
  3054 ;;		___awdiv
  3055 ;;		_ai_getInputField
  3056 ;;		_ai_initiate
  3057 ;;		_ai_propagate
  3058 ;;		_ai_run
  3059 ;;		_deactivateElevator
  3060 ;;		_initMAX7219
  3061 ;;		_ledClear
  3062 ;;		_ledSet
  3063 ;;		_sendMatrix
  3064 ;;		_setLine
  3065 ;;		_snake_getField
  3066 ;;		_snake_getFoodPosition
  3067 ;;		_snake_getSurroundings
  3068 ;;		_snake_initiate
  3069 ;;		_snake_move
  3070 ;; This function is called by:
  3071 ;;		Startup code after reset
  3072 ;; This function uses a non-reentrant model
  3073 ;;
  3074                           
  3075     0438                     _main:	
  3076                           ;psect for function _main
  3077                           
  3078     0438                     l3364:	
  3079                           ;incstack = 0
  3080                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3081                           
  3082                           
  3083                           ;main.c: 70:     SYSTEM_Initialize();
  3084     0438  318E  266F  3184   	fcall	_SYSTEM_Initialize
  3085     043B                     l3366:
  3086                           
  3087                           ;main.c: 87:     deactivateElevator();
  3088     043B  318E  2645  3184   	fcall	_deactivateElevator
  3089     043E                     l3368:
  3090                           
  3091                           ;main.c: 88:     snake_initiate();
  3092     043E  3180  205A  3184   	fcall	_snake_initiate
  3093     0441                     l3370:
  3094                           
  3095                           ;main.c: 89:     ai_initiate();
  3096     0441  3180  20D0  3184   	fcall	_ai_initiate
  3097     0444                     l3372:
  3098                           
  3099                           ;main.c: 90:     initMAX7219();
  3100     0444  3180  2092  3184   	fcall	_initMAX7219
  3101     0447                     l3374:
  3102                           
  3103                           ;main.c: 93:         for(uint16_t i = 0; i < 1000; i++){
  3104     0447  0020               	movlb	0	; select bank0
  3105     0448  01CB               	clrf	main@i
  3106     0449  01CC               	clrf	main@i+1
  3107     044A                     l3380:
  3108                           
  3109                           ;main.c: 94:             snake_getSurroundings(ai_getInputField());
  3110     044A  318D  25DC  3184   	fcall	_ai_getInputField
  3111     044D  3181  218E  3184   	fcall	_snake_getSurroundings
  3112     0450                     l3382:
  3113                           
  3114                           ;main.c: 95:             ai_propagate(snake_move(ai_run()));
  3115     0450  3183  232E  3184   	fcall	_ai_run
  3116     0453  3182  2256  3184   	fcall	_snake_move
  3117     0456  3185  2544  3184   	fcall	_ai_propagate
  3118     0459                     l3384:
  3119                           
  3120                           ;main.c: 96:             setLine(0,(uint8_t)(i>>2));
  3121     0459  0020               	movlb	0	; select bank0
  3122     045A  084C               	movf	main@i+1,w
  3123     045B  00C6               	movwf	??_main+1
  3124     045C  084B               	movf	main@i,w
  3125     045D  00C5               	movwf	??_main
  3126     045E  36C6               	lsrf	??_main+1,f
  3127     045F  0CC5               	rrf	??_main,f
  3128     0460  36C6               	lsrf	??_main+1,f
  3129     0461  0CC5               	rrf	??_main,f
  3130     0462  0845               	movf	??_main,w
  3131     0463  00AC               	movwf	setLine@val
  3132     0464  3000               	movlw	0
  3133     0465  318F  274F  3184   	fcall	_setLine
  3134     0468                     l3386:
  3135                           
  3136                           ;main.c: 97:             setLine(1,(uint8_t)(i&0x03));
  3137     0468  0020               	movlb	0	; select bank0
  3138     0469  084B               	movf	main@i,w
  3139     046A  3903               	andlw	3
  3140     046B  00AC               	movwf	setLine@val
  3141     046C  3001               	movlw	1
  3142     046D  318F  274F  3184   	fcall	_setLine
  3143     0470                     l3388:
  3144                           
  3145                           ;main.c: 98:             sendMatrix();
  3146     0470  318F  279F  3184   	fcall	_sendMatrix
  3147     0473                     l3390:
  3148                           
  3149                           ;main.c: 99:         }
  3150     0473  3001               	movlw	1
  3151     0474  0020               	movlb	0	; select bank0
  3152     0475  07CB               	addwf	main@i,f
  3153     0476  3000               	movlw	0
  3154     0477  3DCC               	addwfc	main@i+1,f
  3155     0478                     l3392:
  3156     0478  3003               	movlw	3
  3157     0479  024C               	subwf	main@i+1,w
  3158     047A  30E8               	movlw	232
  3159     047B  1903               	skipnz
  3160     047C  024B               	subwf	main@i,w
  3161     047D  1C03               	skipc
  3162     047E  2C80               	goto	u2321
  3163     047F  2C81               	goto	u2320
  3164     0480                     u2321:
  3165     0480  2C4A               	goto	l3380
  3166     0481                     u2320:
  3167     0481                     l3394:
  3168                           
  3169                           ;main.c: 103:     uint8_t* field = snake_getField();
  3170     0481  3180  2004  3184   	fcall	_snake_getField
  3171     0484  0020               	movlb	0	; select bank0
  3172     0485  00C8               	movwf	main@field
  3173     0486                     l3396:
  3174                           
  3175                           ;main.c: 105:     for(uint8_t i = 0; i < 4; i++){
  3176     0486  01CD               	clrf	main@i_660
  3177     0487                     l3402:
  3178                           
  3179                           ;main.c: 106:         for(uint8_t j = 0; j < 4; j++){
  3180     0487  01CE               	clrf	main@j
  3181     0488                     l3408:
  3182                           
  3183                           ;main.c: 107:             if(field[i+j*4]>0){
  3184     0488  084E               	movf	main@j,w
  3185     0489  00C5               	movwf	??_main
  3186     048A  3001               	movlw	1
  3187     048B                     u2335:
  3188     048B  35C5               	lslf	??_main,f
  3189     048C  3EFF               	addlw	-1
  3190     048D  1D03               	skipz
  3191     048E  2C8B               	goto	u2335
  3192     048F  3545               	lslf	??_main,w
  3193     0490  0748               	addwf	main@field,w
  3194     0491  00C6               	movwf	??_main+1
  3195     0492  084D               	movf	main@i_660,w
  3196     0493  0746               	addwf	??_main+1,w
  3197     0494  00C7               	movwf	??_main+2
  3198     0495  0847               	movf	??_main+2,w
  3199     0496  0086               	movwf	6
  3200     0497  0187               	clrf	7
  3201     0498  0801               	movf	1,w
  3202     0499  1903               	btfsc	3,2
  3203     049A  2C9C               	goto	u2341
  3204     049B  2C9D               	goto	u2340
  3205     049C                     u2341:
  3206     049C  2CA4               	goto	l3412
  3207     049D                     u2340:
  3208     049D                     l3410:
  3209                           
  3210                           ;main.c: 108:                 ledSet(i,j);
  3211     049D  084E               	movf	main@j,w
  3212     049E  00A8               	movwf	ledSet@c
  3213     049F  084D               	movf	main@i_660,w
  3214     04A0  318E  26D4  3184   	fcall	_ledSet
  3215                           
  3216                           ;main.c: 109:             } else{
  3217     04A3  2CAA               	goto	l3414
  3218     04A4                     l3412:
  3219                           
  3220                           ;main.c: 110:                 ledClear(i,j);
  3221     04A4  084E               	movf	main@j,w
  3222     04A5  00F0               	movwf	ledClear@c
  3223     04A6  084D               	movf	main@i_660,w
  3224     04A7  318E  26C2  3184   	fcall	_ledClear
  3225     04AA                     l3414:
  3226                           
  3227                           ;main.c: 112:         }
  3228     04AA  3001               	movlw	1
  3229     04AB  0020               	movlb	0	; select bank0
  3230     04AC  00C5               	movwf	??_main
  3231     04AD  0845               	movf	??_main,w
  3232     04AE  07CE               	addwf	main@j,f
  3233     04AF                     l3416:
  3234     04AF  3004               	movlw	4
  3235     04B0  024E               	subwf	main@j,w
  3236     04B1  1C03               	skipc
  3237     04B2  2CB4               	goto	u2351
  3238     04B3  2CB5               	goto	u2350
  3239     04B4                     u2351:
  3240     04B4  2C88               	goto	l3408
  3241     04B5                     u2350:
  3242     04B5                     l3418:
  3243                           
  3244                           ;main.c: 113:     }
  3245     04B5  3001               	movlw	1
  3246     04B6  00C5               	movwf	??_main
  3247     04B7  0845               	movf	??_main,w
  3248     04B8  07CD               	addwf	main@i_660,f
  3249     04B9                     l3420:
  3250     04B9  3004               	movlw	4
  3251     04BA  024D               	subwf	main@i_660,w
  3252     04BB  1C03               	skipc
  3253     04BC  2CBE               	goto	u2361
  3254     04BD  2CBF               	goto	u2360
  3255     04BE                     u2361:
  3256     04BE  2C87               	goto	l3402
  3257     04BF                     u2360:
  3258     04BF                     l3422:
  3259                           
  3260                           ;main.c: 115:     uint8_t foodPosition = snake_getFoodPosition();
  3261     04BF  318D  25DE  3184   	fcall	_snake_getFoodPosition
  3262     04C2  0020               	movlb	0	; select bank0
  3263     04C3  00C9               	movwf	main@foodPosition
  3264     04C4                     l3424:
  3265                           
  3266                           ;main.c: 116:     ledSet(foodPosition%4, foodPosition/4);
  3267     04C4  3004               	movlw	4
  3268     04C5  00A0               	movwf	___awdiv@divisor
  3269     04C6  3000               	movlw	0
  3270     04C7  00A1               	movwf	___awdiv@divisor+1
  3271     04C8  0849               	movf	main@foodPosition,w
  3272     04C9  00C5               	movwf	??_main
  3273     04CA  01C6               	clrf	??_main+1
  3274     04CB  0845               	movf	??_main,w
  3275     04CC  00A2               	movwf	___awdiv@dividend
  3276     04CD  0846               	movf	??_main+1,w
  3277     04CE  00A3               	movwf	___awdiv@dividend+1
  3278     04CF  3181  212E  3184   	fcall	___awdiv
  3279     04D2  0020               	movlb	0	; select bank0
  3280     04D3  0820               	movf	?___awdiv,w
  3281     04D4  00A8               	movwf	ledSet@c
  3282     04D5  0849               	movf	main@foodPosition,w
  3283     04D6  3903               	andlw	3
  3284     04D7  318E  26D4  3184   	fcall	_ledSet
  3285     04DA                     l3426:
  3286                           
  3287                           ;main.c: 117:     sendMatrix();
  3288     04DA  318F  279F  3184   	fcall	_sendMatrix
  3289     04DD                     l3428:
  3290                           
  3291                           ;main.c: 120:     {;main.c: 123:         snake_getSurroundings(ai_getInputField());
  3292     04DD  318D  25DC  3184   	fcall	_ai_getInputField
  3293     04E0  3181  218E  3184   	fcall	_snake_getSurroundings
  3294     04E3                     l3430:
  3295                           
  3296                           ;main.c: 124:         ai_propagate(snake_move(ai_run()));
  3297     04E3  3183  232E  3184   	fcall	_ai_run
  3298     04E6  3182  2256  3184   	fcall	_snake_move
  3299     04E9  3185  2544  3184   	fcall	_ai_propagate
  3300     04EC                     l3432:
  3301                           
  3302                           ;main.c: 125:         for(uint8_t i = 0; i < 4; i++){
  3303     04EC  0020               	movlb	0	; select bank0
  3304     04ED  01CF               	clrf	main@i_663
  3305     04EE                     l3438:
  3306                           
  3307                           ;main.c: 126:             for(uint8_t j = 0; j < 4; j++){
  3308     04EE  01D0               	clrf	main@j_664
  3309     04EF                     l3444:
  3310                           
  3311                           ;main.c: 127:                 if(field[i+j*4]>0){
  3312     04EF  0850               	movf	main@j_664,w
  3313     04F0  00C5               	movwf	??_main
  3314     04F1  3001               	movlw	1
  3315     04F2                     u2375:
  3316     04F2  35C5               	lslf	??_main,f
  3317     04F3  3EFF               	addlw	-1
  3318     04F4  1D03               	skipz
  3319     04F5  2CF2               	goto	u2375
  3320     04F6  3545               	lslf	??_main,w
  3321     04F7  0748               	addwf	main@field,w
  3322     04F8  00C6               	movwf	??_main+1
  3323     04F9  084F               	movf	main@i_663,w
  3324     04FA  0746               	addwf	??_main+1,w
  3325     04FB  00C7               	movwf	??_main+2
  3326     04FC  0847               	movf	??_main+2,w
  3327     04FD  0086               	movwf	6
  3328     04FE  0187               	clrf	7
  3329     04FF  0801               	movf	1,w
  3330     0500  1903               	btfsc	3,2
  3331     0501  2D03               	goto	u2381
  3332     0502  2D04               	goto	u2380
  3333     0503                     u2381:
  3334     0503  2D0B               	goto	l3448
  3335     0504                     u2380:
  3336     0504                     l3446:
  3337                           
  3338                           ;main.c: 128:                     ledSet(i,j);
  3339     0504  0850               	movf	main@j_664,w
  3340     0505  00A8               	movwf	ledSet@c
  3341     0506  084F               	movf	main@i_663,w
  3342     0507  318E  26D4  3184   	fcall	_ledSet
  3343                           
  3344                           ;main.c: 129:                 } else{
  3345     050A  2D11               	goto	l3450
  3346     050B                     l3448:
  3347                           
  3348                           ;main.c: 130:                     ledClear(i,j);
  3349     050B  0850               	movf	main@j_664,w
  3350     050C  00F0               	movwf	ledClear@c
  3351     050D  084F               	movf	main@i_663,w
  3352     050E  318E  26C2  3184   	fcall	_ledClear
  3353     0511                     l3450:
  3354                           
  3355                           ;main.c: 132:             }
  3356     0511  3001               	movlw	1
  3357     0512  0020               	movlb	0	; select bank0
  3358     0513  00C5               	movwf	??_main
  3359     0514  0845               	movf	??_main,w
  3360     0515  07D0               	addwf	main@j_664,f
  3361     0516                     l3452:
  3362     0516  3004               	movlw	4
  3363     0517  0250               	subwf	main@j_664,w
  3364     0518  1C03               	skipc
  3365     0519  2D1B               	goto	u2391
  3366     051A  2D1C               	goto	u2390
  3367     051B                     u2391:
  3368     051B  2CEF               	goto	l3444
  3369     051C                     u2390:
  3370     051C                     l3454:
  3371                           
  3372                           ;main.c: 133:         }
  3373     051C  3001               	movlw	1
  3374     051D  00C5               	movwf	??_main
  3375     051E  0845               	movf	??_main,w
  3376     051F  07CF               	addwf	main@i_663,f
  3377     0520                     l3456:
  3378     0520  3004               	movlw	4
  3379     0521  024F               	subwf	main@i_663,w
  3380     0522  1C03               	skipc
  3381     0523  2D25               	goto	u2401
  3382     0524  2D26               	goto	u2400
  3383     0525                     u2401:
  3384     0525  2CEE               	goto	l3438
  3385     0526                     u2400:
  3386     0526                     l3458:
  3387                           
  3388                           ;main.c: 134:         uint8_t foodPosition = snake_getFoodPosition();
  3389     0526  318D  25DE  3184   	fcall	_snake_getFoodPosition
  3390     0529  0020               	movlb	0	; select bank0
  3391     052A  00CA               	movwf	main@foodPosition_665
  3392     052B                     l3460:
  3393                           
  3394                           ;main.c: 135:         ledSet(foodPosition%4, foodPosition/4);
  3395     052B  3004               	movlw	4
  3396     052C  00A0               	movwf	___awdiv@divisor
  3397     052D  3000               	movlw	0
  3398     052E  00A1               	movwf	___awdiv@divisor+1
  3399     052F  084A               	movf	main@foodPosition_665,w
  3400     0530  00C5               	movwf	??_main
  3401     0531  01C6               	clrf	??_main+1
  3402     0532  0845               	movf	??_main,w
  3403     0533  00A2               	movwf	___awdiv@dividend
  3404     0534  0846               	movf	??_main+1,w
  3405     0535  00A3               	movwf	___awdiv@dividend+1
  3406     0536  3181  212E  3184   	fcall	___awdiv
  3407     0539  0020               	movlb	0	; select bank0
  3408     053A  0820               	movf	?___awdiv,w
  3409     053B  00A8               	movwf	ledSet@c
  3410     053C  084A               	movf	main@foodPosition_665,w
  3411     053D  3903               	andlw	3
  3412     053E  318E  26D4  3184   	fcall	_ledSet
  3413     0541  2CDA               	goto	l3426
  3414     0542  3180  2802         	ljmp	start
  3415     0544                     __end_of_main:
  3416                           
  3417                           	psect	text1
  3418     0256                     __ptext1:	
  3419 ;; *************** function _snake_move *****************
  3420 ;; Defined at:
  3421 ;;		line 32 in file "snake.c"
  3422 ;; Parameters:    Size  Location     Type
  3423 ;;  direction       1    wreg     unsigned char 
  3424 ;; Auto vars:     Size  Location     Type
  3425 ;;  direction       1   10[BANK0 ] unsigned char 
  3426 ;;  i               1   12[BANK0 ] unsigned char 
  3427 ;;  incentive       1   11[BANK0 ] char 
  3428 ;; Return value:  Size  Location     Type
  3429 ;;                  1    wreg      char 
  3430 ;; Registers used:
  3431 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3432 ;; Tracked objects:
  3433 ;;		On entry : 0/0
  3434 ;;		On exit  : 0/0
  3435 ;;		Unchanged: 0/0
  3436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3437 ;;      Params:         0       0       0       0       0       0
  3438 ;;      Locals:         0       3       0       0       0       0
  3439 ;;      Temps:          0       2       0       0       0       0
  3440 ;;      Totals:         0       5       0       0       0       0
  3441 ;;Total ram usage:        5 bytes
  3442 ;; Hardware stack levels used: 1
  3443 ;; Hardware stack levels required when called: 3
  3444 ;; This function calls:
  3445 ;;		___awdiv
  3446 ;;		_rand
  3447 ;;		_snake_initiate
  3448 ;; This function is called by:
  3449 ;;		_main
  3450 ;; This function uses a non-reentrant model
  3451 ;;
  3452                           
  3453     0256                     _snake_move:	
  3454                           ;psect for function _snake_move
  3455                           
  3456                           
  3457                           ;incstack = 0
  3458                           ; Regs used in _snake_move: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3459                           ;snake_move@direction stored from wreg
  3460     0256  0020               	movlb	0	; select bank0
  3461     0257  00AA               	movwf	snake_move@direction
  3462     0258                     l3012:
  3463                           
  3464                           ;snake.c: 33:     remainingMoves--;
  3465     0258  3001               	movlw	1
  3466     0259  02E5               	subwf	_remainingMoves,f
  3467     025A                     l3014:
  3468                           
  3469                           ;snake.c: 34:     for(uint8_t i = 0; i < 4*4; i++){
  3470     025A  01AC               	clrf	snake_move@i
  3471     025B                     l3020:
  3472                           
  3473                           ;snake.c: 35:         if(field[i] > 0){
  3474     025B  082C               	movf	snake_move@i,w
  3475     025C  3EC4               	addlw	(low (_field| 0))& (0+255)
  3476     025D  0086               	movwf	6
  3477     025E  0187               	clrf	7
  3478     025F  0801               	movf	1,w
  3479     0260  1903               	btfsc	3,2
  3480     0261  2A63               	goto	u1911
  3481     0262  2A64               	goto	u1910
  3482     0263                     u1911:
  3483     0263  2A6A               	goto	l3024
  3484     0264                     u1910:
  3485     0264                     l3022:
  3486                           
  3487                           ;snake.c: 36:             field[i]--;
  3488     0264  082C               	movf	snake_move@i,w
  3489     0265  3EC4               	addlw	(low (_field| 0))& (0+255)
  3490     0266  0086               	movwf	6
  3491     0267  0187               	clrf	7
  3492     0268  3001               	movlw	1
  3493     0269  0281               	subwf	1,f
  3494     026A                     l3024:
  3495                           
  3496                           ;snake.c: 38:     }
  3497     026A  3001               	movlw	1
  3498     026B  00A8               	movwf	??_snake_move
  3499     026C  0828               	movf	??_snake_move,w
  3500     026D  07AC               	addwf	snake_move@i,f
  3501     026E                     l3026:
  3502     026E  3010               	movlw	16
  3503     026F  022C               	subwf	snake_move@i,w
  3504     0270  1C03               	skipc
  3505     0271  2A73               	goto	u1921
  3506     0272  2A74               	goto	u1920
  3507     0273                     u1921:
  3508     0273  2A5B               	goto	l3020
  3509     0274                     u1920:
  3510     0274                     l3028:
  3511                           
  3512                           ;snake.c: 39:     int8_t incentive = 0;
  3513     0274  01AB               	clrf	snake_move@incentive
  3514     0275                     l3030:
  3515                           
  3516                           ;snake.c: 40:     direction &= 0x03;
  3517     0275  3003               	movlw	3
  3518     0276  00A8               	movwf	??_snake_move
  3519     0277  0828               	movf	??_snake_move,w
  3520     0278  05AA               	andwf	snake_move@direction,f
  3521                           
  3522                           ;snake.c: 41:     switch(direction){
  3523     0279  2ACA               	goto	l3058
  3524     027A                     l3032:
  3525                           
  3526                           ;snake.c: 43:             if((headPosition%4) == 0){
  3527     027A  0867               	movf	_headPosition,w
  3528     027B  3903               	andlw	3
  3529     027C  1D03               	btfss	3,2
  3530     027D  2A7F               	goto	u1931
  3531     027E  2A80               	goto	u1930
  3532     027F                     u1931:
  3533     027F  2A83               	goto	l3036
  3534     0280                     u1930:
  3535     0280                     l3034:
  3536                           
  3537                           ;snake.c: 44:                 incentive = -1;
  3538     0280  01AB               	clrf	snake_move@incentive
  3539     0281  03AB               	decf	snake_move@incentive,f
  3540                           
  3541                           ;snake.c: 45:             } else{
  3542     0282  2AE0               	goto	l3060
  3543     0283                     l3036:
  3544                           
  3545                           ;snake.c: 46:                 headPosition--;
  3546     0283  3001               	movlw	1
  3547     0284  02E7               	subwf	_headPosition,f
  3548     0285  2AE0               	goto	l3060
  3549     0286                     l3038:
  3550                           
  3551                           ;snake.c: 50:             if((headPosition%4) == 7){
  3552     0286  3003               	movlw	3
  3553     0287  0567               	andwf	_headPosition,w
  3554     0288  00A8               	movwf	??_snake_move
  3555     0289  3007               	movlw	7
  3556     028A  0628               	xorwf	??_snake_move,w
  3557     028B  1D03               	btfss	3,2
  3558     028C  2A8E               	goto	u1941
  3559     028D  2A8F               	goto	u1940
  3560     028E                     u1941:
  3561     028E  2A90               	goto	l3042
  3562     028F                     u1940:
  3563     028F  2A80               	goto	l3034
  3564     0290                     l3042:
  3565                           
  3566                           ;snake.c: 53:                 headPosition++;
  3567     0290  3001               	movlw	1
  3568     0291  00A8               	movwf	??_snake_move
  3569     0292  0828               	movf	??_snake_move,w
  3570     0293  07E7               	addwf	_headPosition,f
  3571     0294  2AE0               	goto	l3060
  3572     0295                     l3044:
  3573                           
  3574                           ;snake.c: 57:             if((headPosition/4) == 0){
  3575     0295  3004               	movlw	4
  3576     0296  00A0               	movwf	___awdiv@divisor
  3577     0297  3000               	movlw	0
  3578     0298  00A1               	movwf	___awdiv@divisor+1
  3579     0299  0867               	movf	_headPosition,w
  3580     029A  00A8               	movwf	??_snake_move
  3581     029B  01A9               	clrf	??_snake_move+1
  3582     029C  0828               	movf	??_snake_move,w
  3583     029D  00A2               	movwf	___awdiv@dividend
  3584     029E  0829               	movf	??_snake_move+1,w
  3585     029F  00A3               	movwf	___awdiv@dividend+1
  3586     02A0  3181  212E  3182   	fcall	___awdiv
  3587     02A3  0020               	movlb	0	; select bank0
  3588     02A4  0820               	movf	?___awdiv,w
  3589     02A5  0421               	iorwf	?___awdiv+1,w
  3590     02A6  1D03               	btfss	3,2
  3591     02A7  2AA9               	goto	u1951
  3592     02A8  2AAA               	goto	u1950
  3593     02A9                     u1951:
  3594     02A9  2AAB               	goto	l3048
  3595     02AA                     u1950:
  3596     02AA  2A80               	goto	l3034
  3597     02AB                     l3048:
  3598                           
  3599                           ;snake.c: 60:                 headPosition -= 8;
  3600     02AB  3008               	movlw	8
  3601     02AC  02E7               	subwf	_headPosition,f
  3602     02AD  2AE0               	goto	l3060
  3603     02AE                     l3050:
  3604                           
  3605                           ;snake.c: 64:             if((headPosition/4) == 7){
  3606     02AE  3004               	movlw	4
  3607     02AF  00A0               	movwf	___awdiv@divisor
  3608     02B0  3000               	movlw	0
  3609     02B1  00A1               	movwf	___awdiv@divisor+1
  3610     02B2  0867               	movf	_headPosition,w
  3611     02B3  00A8               	movwf	??_snake_move
  3612     02B4  01A9               	clrf	??_snake_move+1
  3613     02B5  0828               	movf	??_snake_move,w
  3614     02B6  00A2               	movwf	___awdiv@dividend
  3615     02B7  0829               	movf	??_snake_move+1,w
  3616     02B8  00A3               	movwf	___awdiv@dividend+1
  3617     02B9  3181  212E  3182   	fcall	___awdiv
  3618     02BC  3007               	movlw	7
  3619     02BD  0020               	movlb	0	; select bank0
  3620     02BE  0620               	xorwf	?___awdiv,w
  3621     02BF  0421               	iorwf	?___awdiv+1,w
  3622     02C0  1D03               	btfss	3,2
  3623     02C1  2AC3               	goto	u1961
  3624     02C2  2AC4               	goto	u1960
  3625     02C3                     u1961:
  3626     02C3  2AC5               	goto	l3054
  3627     02C4                     u1960:
  3628     02C4  2A80               	goto	l3034
  3629     02C5                     l3054:
  3630                           
  3631                           ;snake.c: 67:                 headPosition += 8;
  3632     02C5  3008               	movlw	8
  3633     02C6  00A8               	movwf	??_snake_move
  3634     02C7  0828               	movf	??_snake_move,w
  3635     02C8  07E7               	addwf	_headPosition,f
  3636     02C9  2AE0               	goto	l3060
  3637     02CA                     l3058:
  3638     02CA  082A               	movf	snake_move@direction,w
  3639     02CB  00A8               	movwf	??_snake_move
  3640     02CC  01A9               	clrf	??_snake_move+1
  3641                           
  3642                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3643                           ; Switch size 1, requested type "simple"
  3644                           ; Number of cases is 1, Range of values is 0 to 0
  3645                           ; switch strategies available:
  3646                           ; Name         Instructions Cycles
  3647                           ; simple_byte            4     3 (average)
  3648                           ; direct_byte            8     6 (fixed)
  3649                           ; jumptable            260     6 (fixed)
  3650                           ;	Chosen strategy is simple_byte
  3651     02CD  0829               	movf	??_snake_move+1,w
  3652     02CE  3A00               	xorlw	0	; case 0
  3653     02CF  1903               	skipnz
  3654     02D0  2AD2               	goto	l3556
  3655     02D1  2AE0               	goto	l3060
  3656     02D2                     l3556:
  3657                           
  3658                           ; Switch size 1, requested type "simple"
  3659                           ; Number of cases is 4, Range of values is 0 to 3
  3660                           ; switch strategies available:
  3661                           ; Name         Instructions Cycles
  3662                           ; simple_byte           13     7 (average)
  3663                           ; direct_byte           14     6 (fixed)
  3664                           ; jumptable            260     6 (fixed)
  3665                           ;	Chosen strategy is simple_byte
  3666     02D2  0828               	movf	??_snake_move,w
  3667     02D3  3A00               	xorlw	0	; case 0
  3668     02D4  1903               	skipnz
  3669     02D5  2A7A               	goto	l3032
  3670     02D6  3A01               	xorlw	1	; case 1
  3671     02D7  1903               	skipnz
  3672     02D8  2A86               	goto	l3038
  3673     02D9  3A03               	xorlw	3	; case 2
  3674     02DA  1903               	skipnz
  3675     02DB  2A95               	goto	l3044
  3676     02DC  3A01               	xorlw	1	; case 3
  3677     02DD  1903               	skipnz
  3678     02DE  2AAE               	goto	l3050
  3679     02DF  2AE0               	goto	l3060
  3680     02E0                     l3060:
  3681                           
  3682                           ;snake.c: 71:     if(incentive == -1){
  3683     02E0  0A2B               	incf	snake_move@incentive,w
  3684     02E1  1D03               	btfss	3,2
  3685     02E2  2AE4               	goto	u1971
  3686     02E3  2AE5               	goto	u1970
  3687     02E4                     u1971:
  3688     02E4  2AE9               	goto	l3064
  3689     02E5                     u1970:
  3690     02E5                     l3062:
  3691                           
  3692                           ;snake.c: 72:         snake_initiate();
  3693     02E5  3180  205A  3182   	fcall	_snake_initiate
  3694                           
  3695                           ;snake.c: 73:     } else if(field[headPosition] > 0){
  3696     02E8  2B20               	goto	l3084
  3697     02E9                     l3064:
  3698     02E9  0867               	movf	_headPosition,w
  3699     02EA  3EC4               	addlw	(low (_field| 0))& (0+255)
  3700     02EB  0086               	movwf	6
  3701     02EC  0187               	clrf	7
  3702     02ED  0801               	movf	1,w
  3703     02EE  1903               	btfsc	3,2
  3704     02EF  2AF1               	goto	u1981
  3705     02F0  2AF2               	goto	u1980
  3706     02F1                     u1981:
  3707     02F1  2AF5               	goto	l3070
  3708     02F2                     u1980:
  3709     02F2                     l3066:
  3710                           
  3711                           ;snake.c: 74:         incentive = -1;
  3712     02F2  01AB               	clrf	snake_move@incentive
  3713     02F3  03AB               	decf	snake_move@incentive,f
  3714     02F4  2AE5               	goto	l3062
  3715     02F5                     l3070:
  3716                           
  3717                           ;snake.c: 77:         if(headPosition == foodPosition){
  3718     02F5  0867               	movf	_headPosition,w
  3719     02F6  0666               	xorwf	_foodPosition,w
  3720     02F7  1D03               	skipz
  3721     02F8  2AFA               	goto	u1991
  3722     02F9  2AFB               	goto	u1990
  3723     02FA                     u1991:
  3724     02FA  2B1A               	goto	l3082
  3725     02FB                     u1990:
  3726     02FB                     l3072:
  3727                           
  3728                           ;snake.c: 78:             remainingMoves = 40;
  3729     02FB  3028               	movlw	40
  3730     02FC  00E5               	movwf	_remainingMoves
  3731     02FD                     l3074:
  3732                           
  3733                           ;snake.c: 79:             incentive = 1;
  3734     02FD  01AB               	clrf	snake_move@incentive
  3735     02FE  0AAB               	incf	snake_move@incentive,f
  3736     02FF                     l3076:
  3737                           
  3738                           ;snake.c: 80:             snakeSize++;
  3739     02FF  3001               	movlw	1
  3740     0300  00A8               	movwf	??_snake_move
  3741     0301  0828               	movf	??_snake_move,w
  3742     0302  07E9               	addwf	_snakeSize,f
  3743     0303                     l3078:
  3744                           
  3745                           ;snake.c: 82:                 foodPosition = ((uint8_t)rand())%4*4;
  3746     0303  3180  2025  3182   	fcall	_rand
  3747     0306  087C               	movf	?_rand,w
  3748     0307  3903               	andlw	3
  3749     0308  0020               	movlb	0	; select bank0
  3750     0309  00A8               	movwf	??_snake_move
  3751     030A  3001               	movlw	1
  3752     030B                     u2005:
  3753     030B  35A8               	lslf	??_snake_move,f
  3754     030C  3EFF               	addlw	-1
  3755     030D  1D03               	skipz
  3756     030E  2B0B               	goto	u2005
  3757     030F  3528               	lslf	??_snake_move,w
  3758     0310  00E6               	movwf	_foodPosition
  3759     0311                     l3080:
  3760                           
  3761                           ;snake.c: 83:             }while(field[foodPosition] > 0);
  3762     0311  0866               	movf	_foodPosition,w
  3763     0312  3EC4               	addlw	(low (_field| 0))& (0+255)
  3764     0313  0086               	movwf	6
  3765     0314  0187               	clrf	7
  3766     0315  0801               	movf	1,w
  3767     0316  1D03               	btfss	3,2
  3768     0317  2B19               	goto	u2011
  3769     0318  2B1A               	goto	u2010
  3770     0319                     u2011:
  3771     0319  2B03               	goto	l3078
  3772     031A                     u2010:
  3773     031A                     l3082:
  3774                           
  3775                           ;snake.c: 85:         field[headPosition] = snakeSize;
  3776     031A  0867               	movf	_headPosition,w
  3777     031B  3EC4               	addlw	(low (_field| 0))& (0+255)
  3778     031C  0086               	movwf	6
  3779     031D  0187               	clrf	7
  3780     031E  0869               	movf	_snakeSize,w
  3781     031F  0081               	movwf	1
  3782     0320                     l3084:
  3783                           
  3784                           ;snake.c: 87:     if(remainingMoves == 0){
  3785     0320  0020               	movlb	0	; select bank0
  3786     0321  0865               	movf	_remainingMoves,w
  3787     0322  1D03               	btfss	3,2
  3788     0323  2B25               	goto	u2021
  3789     0324  2B26               	goto	u2020
  3790     0325                     u2021:
  3791     0325  2B2B               	goto	l3090
  3792     0326                     u2020:
  3793     0326                     l3086:
  3794                           
  3795                           ;snake.c: 88:         incentive = -1;
  3796     0326  01AB               	clrf	snake_move@incentive
  3797     0327  03AB               	decf	snake_move@incentive,f
  3798     0328                     l3088:
  3799                           
  3800                           ;snake.c: 89:         snake_initiate();
  3801     0328  3180  205A  3182   	fcall	_snake_initiate
  3802     032B                     l3090:
  3803                           
  3804                           ;snake.c: 91:     return incentive;
  3805     032B  0020               	movlb	0	; select bank0
  3806     032C  082B               	movf	snake_move@incentive,w
  3807     032D                     l451:
  3808     032D  0008               	return
  3809     032E                     __end_of_snake_move:
  3810                           
  3811                           	psect	text2
  3812     005A                     __ptext2:	
  3813 ;; *************** function _snake_initiate *****************
  3814 ;; Defined at:
  3815 ;;		line 21 in file "snake.c"
  3816 ;; Parameters:    Size  Location     Type
  3817 ;;		None
  3818 ;; Auto vars:     Size  Location     Type
  3819 ;;  i               1    5[BANK0 ] unsigned char 
  3820 ;; Return value:  Size  Location     Type
  3821 ;;                  1    wreg      void 
  3822 ;; Registers used:
  3823 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3824 ;; Tracked objects:
  3825 ;;		On entry : 0/0
  3826 ;;		On exit  : 0/0
  3827 ;;		Unchanged: 0/0
  3828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3829 ;;      Params:         0       0       0       0       0       0
  3830 ;;      Locals:         0       1       0       0       0       0
  3831 ;;      Temps:          0       1       0       0       0       0
  3832 ;;      Totals:         0       2       0       0       0       0
  3833 ;;Total ram usage:        2 bytes
  3834 ;; Hardware stack levels used: 1
  3835 ;; Hardware stack levels required when called: 2
  3836 ;; This function calls:
  3837 ;;		_rand
  3838 ;; This function is called by:
  3839 ;;		_main
  3840 ;;		_snake_move
  3841 ;; This function uses a non-reentrant model
  3842 ;;
  3843                           
  3844     005A                     _snake_initiate:	
  3845                           ;psect for function _snake_initiate
  3846                           
  3847     005A                     l2664:	
  3848                           ;incstack = 0
  3849                           ; Regs used in _snake_initiate: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3850                           
  3851                           
  3852                           ;snake.c: 22:     for(uint8_t i = 0; i < 4*4; i++){
  3853     005A  0020               	movlb	0	; select bank0
  3854     005B  01A5               	clrf	snake_initiate@i
  3855     005C                     l2670:
  3856                           
  3857                           ;snake.c: 23:         field[i] = 0;
  3858     005C  0825               	movf	snake_initiate@i,w
  3859     005D  3EC4               	addlw	(low (_field| 0))& (0+255)
  3860     005E  0086               	movwf	6
  3861     005F  0187               	clrf	7
  3862     0060  0181               	clrf	1
  3863     0061                     l2672:
  3864                           
  3865                           ;snake.c: 24:     }
  3866     0061  3001               	movlw	1
  3867     0062  00A4               	movwf	??_snake_initiate
  3868     0063  0824               	movf	??_snake_initiate,w
  3869     0064  07A5               	addwf	snake_initiate@i,f
  3870     0065                     l2674:
  3871     0065  3010               	movlw	16
  3872     0066  0225               	subwf	snake_initiate@i,w
  3873     0067  1C03               	skipc
  3874     0068  286A               	goto	u1391
  3875     0069  286B               	goto	u1390
  3876     006A                     u1391:
  3877     006A  285C               	goto	l2670
  3878     006B                     u1390:
  3879     006B                     l2676:
  3880                           
  3881                           ;snake.c: 25:     headPosition = ((uint8_t)rand())%4*4;
  3882     006B  3180  2025  3180   	fcall	_rand
  3883     006E  087C               	movf	?_rand,w
  3884     006F  3903               	andlw	3
  3885     0070  0020               	movlb	0	; select bank0
  3886     0071  00A4               	movwf	??_snake_initiate
  3887     0072  3001               	movlw	1
  3888     0073                     u1405:
  3889     0073  35A4               	lslf	??_snake_initiate,f
  3890     0074  3EFF               	addlw	-1
  3891     0075  1D03               	skipz
  3892     0076  2873               	goto	u1405
  3893     0077  3524               	lslf	??_snake_initiate,w
  3894     0078  00E7               	movwf	_headPosition
  3895                           
  3896                           ;snake.c: 26:     foodPosition = ((uint8_t)rand())%4*4;
  3897     0079  3180  2025  3180   	fcall	_rand
  3898     007C  087C               	movf	?_rand,w
  3899     007D  3903               	andlw	3
  3900     007E  0020               	movlb	0	; select bank0
  3901     007F  00A4               	movwf	??_snake_initiate
  3902     0080  3001               	movlw	1
  3903     0081                     u1415:
  3904     0081  35A4               	lslf	??_snake_initiate,f
  3905     0082  3EFF               	addlw	-1
  3906     0083  1D03               	skipz
  3907     0084  2881               	goto	u1415
  3908     0085  3524               	lslf	??_snake_initiate,w
  3909     0086  00E6               	movwf	_foodPosition
  3910     0087                     l2678:
  3911                           
  3912                           ;snake.c: 27:     snakeSize = 1;
  3913     0087  01E9               	clrf	_snakeSize
  3914     0088  0AE9               	incf	_snakeSize,f
  3915     0089                     l2680:
  3916                           
  3917                           ;snake.c: 28:     remainingMoves = 40;
  3918     0089  3028               	movlw	40
  3919     008A  00E5               	movwf	_remainingMoves
  3920     008B                     l2682:
  3921                           
  3922                           ;snake.c: 29:     field[headPosition] = snakeSize;
  3923     008B  0867               	movf	_headPosition,w
  3924     008C  3EC4               	addlw	(low (_field| 0))& (0+255)
  3925     008D  0086               	movwf	6
  3926     008E  0187               	clrf	7
  3927     008F  0869               	movf	_snakeSize,w
  3928     0090  0081               	movwf	1
  3929     0091                     l423:
  3930     0091  0008               	return
  3931     0092                     __end_of_snake_initiate:
  3932                           
  3933                           	psect	text3
  3934     018E                     __ptext3:	
  3935 ;; *************** function _snake_getSurroundings *****************
  3936 ;; Defined at:
  3937 ;;		line 98 in file "snake.c"
  3938 ;; Parameters:    Size  Location     Type
  3939 ;;  surroundings    1    wreg     PTR unsigned char 
  3940 ;;		 -> Y0(8), 
  3941 ;; Auto vars:     Size  Location     Type
  3942 ;;  surroundings    1   17[BANK0 ] PTR unsigned char 
  3943 ;;		 -> Y0(8), 
  3944 ;;  i               1   16[BANK0 ] unsigned char 
  3945 ;;  i               1   13[BANK0 ] unsigned char 
  3946 ;;  ch              1   15[BANK0 ] unsigned char 
  3947 ;;  lh              1   14[BANK0 ] unsigned char 
  3948 ;;  cf              1   12[BANK0 ] unsigned char 
  3949 ;;  lf              1   11[BANK0 ] unsigned char 
  3950 ;;  p               1   10[BANK0 ] unsigned char 
  3951 ;; Return value:  Size  Location     Type
  3952 ;;                  1    wreg      void 
  3953 ;; Registers used:
  3954 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3955 ;; Tracked objects:
  3956 ;;		On entry : 0/0
  3957 ;;		On exit  : 0/0
  3958 ;;		Unchanged: 0/0
  3959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3960 ;;      Params:         0       0       0       0       0       0
  3961 ;;      Locals:         0       8       0       0       0       0
  3962 ;;      Temps:          0       2       0       0       0       0
  3963 ;;      Totals:         0      10       0       0       0       0
  3964 ;;Total ram usage:       10 bytes
  3965 ;; Hardware stack levels used: 1
  3966 ;; Hardware stack levels required when called: 1
  3967 ;; This function calls:
  3968 ;;		___awdiv
  3969 ;; This function is called by:
  3970 ;;		_main
  3971 ;; This function uses a non-reentrant model
  3972 ;;
  3973                           
  3974     018E                     _snake_getSurroundings:	
  3975                           ;psect for function _snake_getSurroundings
  3976                           
  3977                           
  3978                           ;incstack = 0
  3979                           ; Regs used in _snake_getSurroundings: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  3980                           ;snake_getSurroundings@surroundings stored from wreg
  3981     018E  0020               	movlb	0	; select bank0
  3982     018F  00B1               	movwf	snake_getSurroundings@surroundings
  3983     0190                     l2854:
  3984                           
  3985                           ;snake.c: 99:     for(uint8_t i = 0; i < 8; i++){
  3986     0190  01AD               	clrf	snake_getSurroundings@i
  3987     0191                     l2860:
  3988                           
  3989                           ;snake.c: 100:         surroundings[i] = 0;
  3990     0191  082D               	movf	snake_getSurroundings@i,w
  3991     0192  0731               	addwf	snake_getSurroundings@surroundings,w
  3992     0193  00A8               	movwf	??_snake_getSurroundings
  3993     0194  0828               	movf	??_snake_getSurroundings,w
  3994     0195  0086               	movwf	6
  3995     0196  0187               	clrf	7
  3996     0197  0181               	clrf	1
  3997     0198                     l2862:
  3998                           
  3999                           ;snake.c: 101:     }
  4000     0198  3001               	movlw	1
  4001     0199  00A8               	movwf	??_snake_getSurroundings
  4002     019A  0828               	movf	??_snake_getSurroundings,w
  4003     019B  07AD               	addwf	snake_getSurroundings@i,f
  4004     019C                     l2864:
  4005     019C  3008               	movlw	8
  4006     019D  022D               	subwf	snake_getSurroundings@i,w
  4007     019E  1C03               	skipc
  4008     019F  29A1               	goto	u1711
  4009     01A0  29A2               	goto	u1710
  4010     01A1                     u1711:
  4011     01A1  2991               	goto	l2860
  4012     01A2                     u1710:
  4013     01A2                     l2866:
  4014                           
  4015                           ;snake.c: 102:     uint8_t lh = headPosition%4;
  4016     01A2  0867               	movf	_headPosition,w
  4017     01A3  3903               	andlw	3
  4018     01A4  00AE               	movwf	snake_getSurroundings@lh
  4019     01A5                     l2868:
  4020                           
  4021                           ;snake.c: 103:     uint8_t ch = headPosition/4;
  4022     01A5  3004               	movlw	4
  4023     01A6  00A0               	movwf	___awdiv@divisor
  4024     01A7  3000               	movlw	0
  4025     01A8  00A1               	movwf	___awdiv@divisor+1
  4026     01A9  0867               	movf	_headPosition,w
  4027     01AA  00A8               	movwf	??_snake_getSurroundings
  4028     01AB  01A9               	clrf	??_snake_getSurroundings+1
  4029     01AC  0828               	movf	??_snake_getSurroundings,w
  4030     01AD  00A2               	movwf	___awdiv@dividend
  4031     01AE  0829               	movf	??_snake_getSurroundings+1,w
  4032     01AF  00A3               	movwf	___awdiv@dividend+1
  4033     01B0  3181  212E  3181   	fcall	___awdiv
  4034     01B3  0020               	movlb	0	; select bank0
  4035     01B4  0820               	movf	?___awdiv,w
  4036     01B5  00AF               	movwf	snake_getSurroundings@ch
  4037     01B6                     l2870:
  4038                           
  4039                           ;snake.c: 104:     uint8_t lf = foodPosition%4;
  4040     01B6  0866               	movf	_foodPosition,w
  4041     01B7  3903               	andlw	3
  4042     01B8  00AB               	movwf	snake_getSurroundings@lf
  4043                           
  4044                           ;snake.c: 105:     uint8_t cf = foodPosition/4;
  4045     01B9  3004               	movlw	4
  4046     01BA  00A0               	movwf	___awdiv@divisor
  4047     01BB  3000               	movlw	0
  4048     01BC  00A1               	movwf	___awdiv@divisor+1
  4049     01BD  0866               	movf	_foodPosition,w
  4050     01BE  00A8               	movwf	??_snake_getSurroundings
  4051     01BF  01A9               	clrf	??_snake_getSurroundings+1
  4052     01C0  0828               	movf	??_snake_getSurroundings,w
  4053     01C1  00A2               	movwf	___awdiv@dividend
  4054     01C2  0829               	movf	??_snake_getSurroundings+1,w
  4055     01C3  00A3               	movwf	___awdiv@dividend+1
  4056     01C4  3181  212E  3181   	fcall	___awdiv
  4057     01C7  0020               	movlb	0	; select bank0
  4058     01C8  0820               	movf	?___awdiv,w
  4059     01C9  00AC               	movwf	snake_getSurroundings@cf
  4060     01CA                     l2872:
  4061                           
  4062                           ;snake.c: 106:     if(lh == 0){
  4063     01CA  082E               	movf	snake_getSurroundings@lh,w
  4064     01CB  1D03               	btfss	3,2
  4065     01CC  29CE               	goto	u1721
  4066     01CD  29CF               	goto	u1720
  4067     01CE                     u1721:
  4068     01CE  29D5               	goto	l2876
  4069     01CF                     u1720:
  4070     01CF                     l2874:
  4071                           
  4072                           ;snake.c: 107:         surroundings[0] = 1;
  4073     01CF  0831               	movf	snake_getSurroundings@surroundings,w
  4074     01D0  0086               	movwf	6
  4075     01D1  0187               	clrf	7
  4076     01D2  0181               	clrf	1
  4077     01D3  0A81               	incf	1,f
  4078                           
  4079                           ;snake.c: 108:     } else if(lh == 7){
  4080     01D4  29E0               	goto	l2880
  4081     01D5                     l2876:
  4082     01D5  3007               	movlw	7
  4083     01D6  062E               	xorwf	snake_getSurroundings@lh,w
  4084     01D7  1D03               	btfss	3,2
  4085     01D8  29DA               	goto	u1731
  4086     01D9  29DB               	goto	u1730
  4087     01DA                     u1731:
  4088     01DA  29E0               	goto	l2880
  4089     01DB                     u1730:
  4090     01DB                     l2878:
  4091                           
  4092                           ;snake.c: 109:         surroundings[1] = 1;
  4093     01DB  0A31               	incf	snake_getSurroundings@surroundings,w
  4094     01DC  0086               	movwf	6
  4095     01DD  0187               	clrf	7
  4096     01DE  0181               	clrf	1
  4097     01DF  0A81               	incf	1,f
  4098     01E0                     l2880:
  4099                           
  4100                           ;snake.c: 111:     if(ch == 0){
  4101     01E0  082F               	movf	snake_getSurroundings@ch,w
  4102     01E1  1D03               	btfss	3,2
  4103     01E2  29E4               	goto	u1741
  4104     01E3  29E5               	goto	u1740
  4105     01E4                     u1741:
  4106     01E4  29EC               	goto	l2884
  4107     01E5                     u1740:
  4108     01E5                     l2882:
  4109                           
  4110                           ;snake.c: 112:         surroundings[2] = 1;
  4111     01E5  0831               	movf	snake_getSurroundings@surroundings,w
  4112     01E6  3E02               	addlw	2
  4113     01E7  0086               	movwf	6
  4114     01E8  0187               	clrf	7
  4115     01E9  0181               	clrf	1
  4116     01EA  0A81               	incf	1,f
  4117                           
  4118                           ;snake.c: 113:     } else if(ch == 7){
  4119     01EB  29F8               	goto	l2888
  4120     01EC                     l2884:
  4121     01EC  3007               	movlw	7
  4122     01ED  062F               	xorwf	snake_getSurroundings@ch,w
  4123     01EE  1D03               	btfss	3,2
  4124     01EF  29F1               	goto	u1751
  4125     01F0  29F2               	goto	u1750
  4126     01F1                     u1751:
  4127     01F1  29F8               	goto	l2888
  4128     01F2                     u1750:
  4129     01F2                     l2886:
  4130                           
  4131                           ;snake.c: 114:         surroundings[3] = 1;
  4132     01F2  0831               	movf	snake_getSurroundings@surroundings,w
  4133     01F3  3E03               	addlw	3
  4134     01F4  0086               	movwf	6
  4135     01F5  0187               	clrf	7
  4136     01F6  0181               	clrf	1
  4137     01F7  0A81               	incf	1,f
  4138     01F8                     l2888:
  4139                           
  4140                           ;snake.c: 116:     uint8_t p;;snake.c: 117:     for(uint8_t i = 0; i < 4; i++){
  4141     01F8  01B0               	clrf	snake_getSurroundings@i_796
  4142     01F9                     l2894:
  4143                           
  4144                           ;snake.c: 118:         p = (headPosition+mapping[i])%4*4;
  4145     01F9  0830               	movf	snake_getSurroundings@i_796,w
  4146     01FA  3EDC               	addlw	(low (_mapping| 0))& (0+255)
  4147     01FB  0086               	movwf	6
  4148     01FC  0187               	clrf	7
  4149     01FD  0801               	movf	1,w
  4150     01FE  0767               	addwf	_headPosition,w
  4151     01FF  3903               	andlw	3
  4152     0200  00A8               	movwf	??_snake_getSurroundings
  4153     0201  3001               	movlw	1
  4154     0202                     u1765:
  4155     0202  35A8               	lslf	??_snake_getSurroundings,f
  4156     0203  3EFF               	addlw	-1
  4157     0204  1D03               	skipz
  4158     0205  2A02               	goto	u1765
  4159     0206  3528               	lslf	??_snake_getSurroundings,w
  4160     0207  00AA               	movwf	snake_getSurroundings@p
  4161                           
  4162                           ;snake.c: 119:         if(field[p] > 0){
  4163     0208  082A               	movf	snake_getSurroundings@p,w
  4164     0209  3EC4               	addlw	(low (_field| 0))& (0+255)
  4165     020A  0086               	movwf	6
  4166     020B  0187               	clrf	7
  4167     020C  0801               	movf	1,w
  4168     020D  1903               	btfsc	3,2
  4169     020E  2A10               	goto	u1771
  4170     020F  2A11               	goto	u1770
  4171     0210                     u1771:
  4172     0210  2A19               	goto	l2898
  4173     0211                     u1770:
  4174     0211                     l2896:
  4175                           
  4176                           ;snake.c: 120:             surroundings[i] = 1;
  4177     0211  0830               	movf	snake_getSurroundings@i_796,w
  4178     0212  0731               	addwf	snake_getSurroundings@surroundings,w
  4179     0213  00A8               	movwf	??_snake_getSurroundings
  4180     0214  0828               	movf	??_snake_getSurroundings,w
  4181     0215  0086               	movwf	6
  4182     0216  0187               	clrf	7
  4183     0217  0181               	clrf	1
  4184     0218  0A81               	incf	1,f
  4185     0219                     l2898:
  4186                           
  4187                           ;snake.c: 122:     }
  4188     0219  3001               	movlw	1
  4189     021A  00A8               	movwf	??_snake_getSurroundings
  4190     021B  0828               	movf	??_snake_getSurroundings,w
  4191     021C  07B0               	addwf	snake_getSurroundings@i_796,f
  4192     021D                     l2900:
  4193     021D  3004               	movlw	4
  4194     021E  0230               	subwf	snake_getSurroundings@i_796,w
  4195     021F  1C03               	skipc
  4196     0220  2A22               	goto	u1781
  4197     0221  2A23               	goto	u1780
  4198     0222                     u1781:
  4199     0222  29F9               	goto	l2894
  4200     0223                     u1780:
  4201     0223                     l2902:
  4202                           
  4203                           ;snake.c: 123:     if(lf<lh){
  4204     0223  082E               	movf	snake_getSurroundings@lh,w
  4205     0224  022B               	subwf	snake_getSurroundings@lf,w
  4206     0225  1803               	skipnc
  4207     0226  2A28               	goto	u1791
  4208     0227  2A29               	goto	u1790
  4209     0228                     u1791:
  4210     0228  2A30               	goto	l2906
  4211     0229                     u1790:
  4212     0229                     l2904:
  4213                           
  4214                           ;snake.c: 124:         surroundings[4] = 1;
  4215     0229  0831               	movf	snake_getSurroundings@surroundings,w
  4216     022A  3E04               	addlw	4
  4217     022B  0086               	movwf	6
  4218     022C  0187               	clrf	7
  4219     022D  0181               	clrf	1
  4220     022E  0A81               	incf	1,f
  4221                           
  4222                           ;snake.c: 125:     } else if(lf>lh){
  4223     022F  2A3C               	goto	l2910
  4224     0230                     l2906:
  4225     0230  082B               	movf	snake_getSurroundings@lf,w
  4226     0231  022E               	subwf	snake_getSurroundings@lh,w
  4227     0232  1803               	skipnc
  4228     0233  2A35               	goto	u1801
  4229     0234  2A36               	goto	u1800
  4230     0235                     u1801:
  4231     0235  2A3C               	goto	l2910
  4232     0236                     u1800:
  4233     0236                     l2908:
  4234                           
  4235                           ;snake.c: 126:         surroundings[5] = 1;
  4236     0236  0831               	movf	snake_getSurroundings@surroundings,w
  4237     0237  3E05               	addlw	5
  4238     0238  0086               	movwf	6
  4239     0239  0187               	clrf	7
  4240     023A  0181               	clrf	1
  4241     023B  0A81               	incf	1,f
  4242     023C                     l2910:
  4243                           
  4244                           ;snake.c: 128:     if(cf<ch){
  4245     023C  082F               	movf	snake_getSurroundings@ch,w
  4246     023D  022C               	subwf	snake_getSurroundings@cf,w
  4247     023E  1803               	skipnc
  4248     023F  2A41               	goto	u1811
  4249     0240  2A42               	goto	u1810
  4250     0241                     u1811:
  4251     0241  2A49               	goto	l2914
  4252     0242                     u1810:
  4253     0242                     l2912:
  4254                           
  4255                           ;snake.c: 129:         surroundings[6] = 1;
  4256     0242  0831               	movf	snake_getSurroundings@surroundings,w
  4257     0243  3E06               	addlw	6
  4258     0244  0086               	movwf	6
  4259     0245  0187               	clrf	7
  4260     0246  0181               	clrf	1
  4261     0247  0A81               	incf	1,f
  4262                           
  4263                           ;snake.c: 130:     } else if(cf>ch){
  4264     0248  2A55               	goto	l474
  4265     0249                     l2914:
  4266     0249  082C               	movf	snake_getSurroundings@cf,w
  4267     024A  022F               	subwf	snake_getSurroundings@ch,w
  4268     024B  1803               	skipnc
  4269     024C  2A4E               	goto	u1821
  4270     024D  2A4F               	goto	u1820
  4271     024E                     u1821:
  4272     024E  2A55               	goto	l474
  4273     024F                     u1820:
  4274     024F                     l2916:
  4275                           
  4276                           ;snake.c: 131:         surroundings[7] = 1;
  4277     024F  0831               	movf	snake_getSurroundings@surroundings,w
  4278     0250  3E07               	addlw	7
  4279     0251  0086               	movwf	6
  4280     0252  0187               	clrf	7
  4281     0253  0181               	clrf	1
  4282     0254  0A81               	incf	1,f
  4283     0255                     l474:
  4284     0255  0008               	return
  4285     0256                     __end_of_snake_getSurroundings:
  4286                           
  4287                           	psect	text4
  4288     0DDE                     __ptext4:	
  4289 ;; *************** function _snake_getFoodPosition *****************
  4290 ;; Defined at:
  4291 ;;		line 142 in file "snake.c"
  4292 ;; Parameters:    Size  Location     Type
  4293 ;;		None
  4294 ;; Auto vars:     Size  Location     Type
  4295 ;;		None
  4296 ;; Return value:  Size  Location     Type
  4297 ;;                  1    wreg      unsigned char 
  4298 ;; Registers used:
  4299 ;;		wreg
  4300 ;; Tracked objects:
  4301 ;;		On entry : 0/0
  4302 ;;		On exit  : 0/0
  4303 ;;		Unchanged: 0/0
  4304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4305 ;;      Params:         0       0       0       0       0       0
  4306 ;;      Locals:         0       0       0       0       0       0
  4307 ;;      Temps:          0       0       0       0       0       0
  4308 ;;      Totals:         0       0       0       0       0       0
  4309 ;;Total ram usage:        0 bytes
  4310 ;; Hardware stack levels used: 1
  4311 ;; This function calls:
  4312 ;;		Nothing
  4313 ;; This function is called by:
  4314 ;;		_main
  4315 ;; This function uses a non-reentrant model
  4316 ;;
  4317                           
  4318     0DDE                     _snake_getFoodPosition:	
  4319                           ;psect for function _snake_getFoodPosition
  4320                           
  4321     0DDE                     l3348:	
  4322                           ;incstack = 0
  4323                           ; Regs used in _snake_getFoodPosition: [wreg]
  4324                           
  4325                           
  4326                           ;snake.c: 143:     return foodPosition;
  4327     0DDE  0020               	movlb	0	; select bank0
  4328     0DDF  0866               	movf	_foodPosition,w
  4329     0DE0                     l483:
  4330     0DE0  0008               	return
  4331     0DE1                     __end_of_snake_getFoodPosition:
  4332                           
  4333                           	psect	text5
  4334     0004                     __ptext5:	
  4335 ;; *************** function _snake_getField *****************
  4336 ;; Defined at:
  4337 ;;		line 94 in file "snake.c"
  4338 ;; Parameters:    Size  Location     Type
  4339 ;;		None
  4340 ;; Auto vars:     Size  Location     Type
  4341 ;;		None
  4342 ;; Return value:  Size  Location     Type
  4343 ;;                  1    wreg      PTR unsigned char 
  4344 ;; Registers used:
  4345 ;;		wreg
  4346 ;; Tracked objects:
  4347 ;;		On entry : 0/0
  4348 ;;		On exit  : 0/0
  4349 ;;		Unchanged: 0/0
  4350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4351 ;;      Params:         0       0       0       0       0       0
  4352 ;;      Locals:         0       0       0       0       0       0
  4353 ;;      Temps:          0       0       0       0       0       0
  4354 ;;      Totals:         0       0       0       0       0       0
  4355 ;;Total ram usage:        0 bytes
  4356 ;; Hardware stack levels used: 1
  4357 ;; This function calls:
  4358 ;;		Nothing
  4359 ;; This function is called by:
  4360 ;;		_main
  4361 ;; This function uses a non-reentrant model
  4362 ;;
  4363                           
  4364     0004                     _snake_getField:	
  4365                           ;psect for function _snake_getField
  4366                           
  4367     0004                     l3344:	
  4368                           ;incstack = 0
  4369                           ; Regs used in _snake_getField: [wreg]
  4370                           
  4371                           
  4372                           ;snake.c: 95:     return field;
  4373     0004  30C4               	movlw	(low (_field| 0))& (0+255)
  4374     0005                     l454:
  4375     0005  0008               	return
  4376     0006                     __end_of_snake_getField:
  4377                           
  4378                           	psect	text6
  4379     0F4F                     __ptext6:	
  4380 ;; *************** function _setLine *****************
  4381 ;; Defined at:
  4382 ;;		line 43 in file "ledMatrix.c"
  4383 ;; Parameters:    Size  Location     Type
  4384 ;;  l               1    wreg     unsigned char 
  4385 ;;  val             1   12[BANK0 ] unsigned char 
  4386 ;; Auto vars:     Size  Location     Type
  4387 ;;  l               1   15[BANK0 ] unsigned char 
  4388 ;;  j               1   16[BANK0 ] unsigned char 
  4389 ;;  mask            1   14[BANK0 ] unsigned char 
  4390 ;; Return value:  Size  Location     Type
  4391 ;;                  1    wreg      void 
  4392 ;; Registers used:
  4393 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4394 ;; Tracked objects:
  4395 ;;		On entry : 0/0
  4396 ;;		On exit  : 0/0
  4397 ;;		Unchanged: 0/0
  4398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4399 ;;      Params:         0       1       0       0       0       0
  4400 ;;      Locals:         0       3       0       0       0       0
  4401 ;;      Temps:          0       1       0       0       0       0
  4402 ;;      Totals:         0       5       0       0       0       0
  4403 ;;Total ram usage:        5 bytes
  4404 ;; Hardware stack levels used: 1
  4405 ;; Hardware stack levels required when called: 1
  4406 ;; This function calls:
  4407 ;;		_ledClear
  4408 ;;		_ledSet
  4409 ;; This function is called by:
  4410 ;;		_main
  4411 ;; This function uses a non-reentrant model
  4412 ;;
  4413                           
  4414     0F4F                     _setLine:	
  4415                           ;psect for function _setLine
  4416                           
  4417                           
  4418                           ;incstack = 0
  4419                           ; Regs used in _setLine: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4420                           ;setLine@l stored from wreg
  4421     0F4F  0020               	movlb	0	; select bank0
  4422     0F50  00AF               	movwf	setLine@l
  4423     0F51                     l3294:
  4424                           
  4425                           ;ledMatrix.c: 44:     uint8_t mask = 1;
  4426     0F51  01AE               	clrf	setLine@mask
  4427     0F52  0AAE               	incf	setLine@mask,f
  4428     0F53                     l3296:
  4429                           
  4430                           ;ledMatrix.c: 45:     for(uint8_t j = 0; j < 8; j++){
  4431     0F53  01B0               	clrf	setLine@j
  4432     0F54                     l3302:
  4433                           
  4434                           ;ledMatrix.c: 46:         if(val&mask){
  4435     0F54  082C               	movf	setLine@val,w
  4436     0F55  052E               	andwf	setLine@mask,w
  4437     0F56  1903               	btfsc	3,2
  4438     0F57  2F59               	goto	u2261
  4439     0F58  2F5A               	goto	u2260
  4440     0F59                     u2261:
  4441     0F59  2F61               	goto	l3306
  4442     0F5A                     u2260:
  4443     0F5A                     l3304:
  4444                           
  4445                           ;ledMatrix.c: 47:             ledSet(l,j);
  4446     0F5A  0830               	movf	setLine@j,w
  4447     0F5B  00A8               	movwf	ledSet@c
  4448     0F5C  082F               	movf	setLine@l,w
  4449     0F5D  318E  26D4  318F   	fcall	_ledSet
  4450                           
  4451                           ;ledMatrix.c: 48:         } else{
  4452     0F60  2F67               	goto	l3308
  4453     0F61                     l3306:
  4454                           
  4455                           ;ledMatrix.c: 49:             ledClear(l,j);
  4456     0F61  0830               	movf	setLine@j,w
  4457     0F62  00F0               	movwf	ledClear@c
  4458     0F63  082F               	movf	setLine@l,w
  4459     0F64  318E  26C2  318F   	fcall	_ledClear
  4460     0F67                     l3308:
  4461                           
  4462                           ;ledMatrix.c: 51:         mask <<= 1;
  4463     0F67  1003               	clrc
  4464     0F68  0020               	movlb	0	; select bank0
  4465     0F69  0DAE               	rlf	setLine@mask,f
  4466     0F6A                     l3310:
  4467                           
  4468                           ;ledMatrix.c: 52:     }
  4469     0F6A  3001               	movlw	1
  4470     0F6B  00AD               	movwf	??_setLine
  4471     0F6C  082D               	movf	??_setLine,w
  4472     0F6D  07B0               	addwf	setLine@j,f
  4473     0F6E                     l3312:
  4474     0F6E  3008               	movlw	8
  4475     0F6F  0230               	subwf	setLine@j,w
  4476     0F70  1C03               	skipc
  4477     0F71  2F73               	goto	u2271
  4478     0F72  2F74               	goto	u2270
  4479     0F73                     u2271:
  4480     0F73  2F54               	goto	l3302
  4481     0F74                     u2270:
  4482     0F74                     l389:
  4483     0F74  0008               	return
  4484     0F75                     __end_of_setLine:
  4485                           
  4486                           	psect	text7
  4487     0ED4                     __ptext7:	
  4488 ;; *************** function _ledSet *****************
  4489 ;; Defined at:
  4490 ;;		line 31 in file "ledMatrix.c"
  4491 ;; Parameters:    Size  Location     Type
  4492 ;;  l               1    wreg     unsigned char 
  4493 ;;  c               1    8[BANK0 ] unsigned char 
  4494 ;; Auto vars:     Size  Location     Type
  4495 ;;  l               1   11[BANK0 ] unsigned char 
  4496 ;; Return value:  Size  Location     Type
  4497 ;;                  1    wreg      void 
  4498 ;; Registers used:
  4499 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4500 ;; Tracked objects:
  4501 ;;		On entry : 0/0
  4502 ;;		On exit  : 0/0
  4503 ;;		Unchanged: 0/0
  4504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4505 ;;      Params:         0       1       0       0       0       0
  4506 ;;      Locals:         0       1       0       0       0       0
  4507 ;;      Temps:          0       2       0       0       0       0
  4508 ;;      Totals:         0       4       0       0       0       0
  4509 ;;Total ram usage:        4 bytes
  4510 ;; Hardware stack levels used: 1
  4511 ;; This function calls:
  4512 ;;		Nothing
  4513 ;; This function is called by:
  4514 ;;		_main
  4515 ;;		_setLine
  4516 ;; This function uses a non-reentrant model
  4517 ;;
  4518                           
  4519     0ED4                     _ledSet:	
  4520                           ;psect for function _ledSet
  4521                           
  4522                           
  4523                           ;incstack = 0
  4524                           ; Regs used in _ledSet: [wreg+fsr1l+fsr1h+status,2+status,0]
  4525                           ;ledSet@l stored from wreg
  4526     0ED4  0020               	movlb	0	; select bank0
  4527     0ED5  00AB               	movwf	ledSet@l
  4528     0ED6                     l2684:
  4529                           
  4530                           ;ledMatrix.c: 32:     (matrix[c]) |= 1UL << (l);
  4531     0ED6  3001               	movlw	1
  4532     0ED7  00A9               	movwf	??_ledSet
  4533     0ED8  0A2B               	incf	ledSet@l,w
  4534     0ED9  2EDB               	goto	u1424
  4535     0EDA                     u1425:
  4536     0EDA  35A9               	lslf	??_ledSet,f
  4537     0EDB                     u1424:
  4538     0EDB  0B89               	decfsz	9,f
  4539     0EDC  2EDA               	goto	u1425
  4540     0EDD  0829               	movf	??_ledSet,w
  4541     0EDE  00AA               	movwf	??_ledSet+1
  4542     0EDF  0828               	movf	ledSet@c,w
  4543     0EE0  3EB0               	addlw	(low (_matrix| 0))& (0+255)
  4544     0EE1  0086               	movwf	6
  4545     0EE2  0187               	clrf	7
  4546     0EE3  082A               	movf	??_ledSet+1,w
  4547     0EE4  0481               	iorwf	1,f
  4548     0EE5                     l376:
  4549     0EE5  0008               	return
  4550     0EE6                     __end_of_ledSet:
  4551                           
  4552                           	psect	text8
  4553     0EC2                     __ptext8:	
  4554 ;; *************** function _ledClear *****************
  4555 ;; Defined at:
  4556 ;;		line 35 in file "ledMatrix.c"
  4557 ;; Parameters:    Size  Location     Type
  4558 ;;  l               1    wreg     unsigned char 
  4559 ;;  c               1    0[COMMON] unsigned char 
  4560 ;; Auto vars:     Size  Location     Type
  4561 ;;  l               1    3[COMMON] unsigned char 
  4562 ;; Return value:  Size  Location     Type
  4563 ;;                  1    wreg      void 
  4564 ;; Registers used:
  4565 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4566 ;; Tracked objects:
  4567 ;;		On entry : 0/0
  4568 ;;		On exit  : 0/0
  4569 ;;		Unchanged: 0/0
  4570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4571 ;;      Params:         1       0       0       0       0       0
  4572 ;;      Locals:         1       0       0       0       0       0
  4573 ;;      Temps:          2       0       0       0       0       0
  4574 ;;      Totals:         4       0       0       0       0       0
  4575 ;;Total ram usage:        4 bytes
  4576 ;; Hardware stack levels used: 1
  4577 ;; This function calls:
  4578 ;;		Nothing
  4579 ;; This function is called by:
  4580 ;;		_main
  4581 ;;		_setLine
  4582 ;; This function uses a non-reentrant model
  4583 ;;
  4584                           
  4585     0EC2                     _ledClear:	
  4586                           ;psect for function _ledClear
  4587                           
  4588                           
  4589                           ;incstack = 0
  4590                           ; Regs used in _ledClear: [wreg+fsr1l+fsr1h+status,2+status,0]
  4591                           ;ledClear@l stored from wreg
  4592     0EC2  00F3               	movwf	ledClear@l
  4593     0EC3                     l2686:
  4594                           
  4595                           ;ledMatrix.c: 36:     (matrix[c]) &= ~(1UL << (l));
  4596     0EC3  3001               	movlw	1
  4597     0EC4  00F1               	movwf	??_ledClear
  4598     0EC5  0A73               	incf	ledClear@l,w
  4599     0EC6  2EC8               	goto	u1434
  4600     0EC7                     u1435:
  4601     0EC7  35F1               	lslf	??_ledClear,f
  4602     0EC8                     u1434:
  4603     0EC8  0B89               	decfsz	9,f
  4604     0EC9  2EC7               	goto	u1435
  4605     0ECA  0871               	movf	??_ledClear,w
  4606     0ECB  3AFF               	xorlw	255
  4607     0ECC  00F2               	movwf	??_ledClear+1
  4608     0ECD  0870               	movf	ledClear@c,w
  4609     0ECE  3EB0               	addlw	(low (_matrix| 0))& (0+255)
  4610     0ECF  0086               	movwf	6
  4611     0ED0  0187               	clrf	7
  4612     0ED1  0872               	movf	??_ledClear+1,w
  4613     0ED2  0581               	andwf	1,f
  4614     0ED3                     l379:
  4615     0ED3  0008               	return
  4616     0ED4                     __end_of_ledClear:
  4617                           
  4618                           	psect	text9
  4619     0F9F                     __ptext9:	
  4620 ;; *************** function _sendMatrix *****************
  4621 ;; Defined at:
  4622 ;;		line 55 in file "ledMatrix.c"
  4623 ;; Parameters:    Size  Location     Type
  4624 ;;		None
  4625 ;; Auto vars:     Size  Location     Type
  4626 ;;  j               1    6[COMMON] unsigned char 
  4627 ;;  i               1    7[COMMON] unsigned char 
  4628 ;;  nb              1    5[COMMON] unsigned char 
  4629 ;;  b               1    4[COMMON] unsigned char 
  4630 ;; Return value:  Size  Location     Type
  4631 ;;                  1    wreg      void 
  4632 ;; Registers used:
  4633 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4634 ;; Tracked objects:
  4635 ;;		On entry : 0/0
  4636 ;;		On exit  : 0/0
  4637 ;;		Unchanged: 0/0
  4638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4639 ;;      Params:         0       0       0       0       0       0
  4640 ;;      Locals:         4       0       0       0       0       0
  4641 ;;      Temps:          1       0       0       0       0       0
  4642 ;;      Totals:         5       0       0       0       0       0
  4643 ;;Total ram usage:        5 bytes
  4644 ;; Hardware stack levels used: 1
  4645 ;; Hardware stack levels required when called: 2
  4646 ;; This function calls:
  4647 ;;		_txMAX7219
  4648 ;; This function is called by:
  4649 ;;		_main
  4650 ;; This function uses a non-reentrant model
  4651 ;;
  4652                           
  4653     0F9F                     _sendMatrix:	
  4654                           ;psect for function _sendMatrix
  4655                           
  4656     0F9F                     l3314:	
  4657                           ;incstack = 0
  4658                           ; Regs used in _sendMatrix: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4659                           
  4660                           
  4661                           ;ledMatrix.c: 56:     uint8_t b;;ledMatrix.c: 57:     uint8_t nb;;ledMatrix.c: 58:     f
      +                          or(uint8_t i=0;i<8;i++){
  4662     0F9F  01F7               	clrf	sendMatrix@i
  4663     0FA0                     l3320:
  4664                           
  4665                           ;ledMatrix.c: 62:         b = matrix[i];
  4666     0FA0  0877               	movf	sendMatrix@i,w
  4667     0FA1  3EB0               	addlw	(low (_matrix| 0))& (0+255)
  4668     0FA2  0086               	movwf	6
  4669     0FA3  0187               	clrf	7
  4670     0FA4  0801               	movf	1,w
  4671     0FA5  00F4               	movwf	sendMatrix@b
  4672     0FA6                     l3322:
  4673                           
  4674                           ;ledMatrix.c: 65:         nb = 0x00;
  4675     0FA6  01F5               	clrf	sendMatrix@nb
  4676     0FA7                     l3324:
  4677                           
  4678                           ;ledMatrix.c: 66:         for(uint8_t j = 0; j < 8; j++){
  4679     0FA7  01F6               	clrf	sendMatrix@j
  4680     0FA8                     l3330:
  4681                           
  4682                           ;ledMatrix.c: 67:             nb <<= 1;
  4683     0FA8  1003               	clrc
  4684     0FA9  0DF5               	rlf	sendMatrix@nb,f
  4685     0FAA                     l3332:
  4686                           
  4687                           ;ledMatrix.c: 68:             nb |= b&0x01;
  4688     0FAA  0874               	movf	sendMatrix@b,w
  4689     0FAB  3901               	andlw	1
  4690     0FAC  00F3               	movwf	??_sendMatrix
  4691     0FAD  0873               	movf	??_sendMatrix,w
  4692     0FAE  04F5               	iorwf	sendMatrix@nb,f
  4693     0FAF                     l3334:
  4694                           
  4695                           ;ledMatrix.c: 69:             b >>= 1;
  4696     0FAF  1003               	clrc
  4697     0FB0  0CF4               	rrf	sendMatrix@b,f
  4698                           
  4699                           ;ledMatrix.c: 70:         }
  4700     0FB1  3001               	movlw	1
  4701     0FB2  00F3               	movwf	??_sendMatrix
  4702     0FB3  0873               	movf	??_sendMatrix,w
  4703     0FB4  07F6               	addwf	sendMatrix@j,f
  4704     0FB5                     l3336:
  4705     0FB5  3008               	movlw	8
  4706     0FB6  0276               	subwf	sendMatrix@j,w
  4707     0FB7  1C03               	skipc
  4708     0FB8  2FBA               	goto	u2281
  4709     0FB9  2FBB               	goto	u2280
  4710     0FBA                     u2281:
  4711     0FBA  2FA8               	goto	l3330
  4712     0FBB                     u2280:
  4713     0FBB                     l3338:
  4714                           
  4715                           ;ledMatrix.c: 71:         txMAX7219(i+1,nb);
  4716     0FBB  0875               	movf	sendMatrix@nb,w
  4717     0FBC  00F1               	movwf	txMAX7219@dat0
  4718     0FBD  0877               	movf	sendMatrix@i,w
  4719     0FBE  3E01               	addlw	1
  4720     0FBF  318F  2713  318F   	fcall	_txMAX7219
  4721     0FC2                     l3340:
  4722                           
  4723                           ;ledMatrix.c: 75:     }
  4724     0FC2  3001               	movlw	1
  4725     0FC3  00F3               	movwf	??_sendMatrix
  4726     0FC4  0873               	movf	??_sendMatrix,w
  4727     0FC5  07F7               	addwf	sendMatrix@i,f
  4728     0FC6                     l3342:
  4729     0FC6  3008               	movlw	8
  4730     0FC7  0277               	subwf	sendMatrix@i,w
  4731     0FC8  1C03               	skipc
  4732     0FC9  2FCB               	goto	u2291
  4733     0FCA  2FCC               	goto	u2290
  4734     0FCB                     u2291:
  4735     0FCB  2FA0               	goto	l3320
  4736     0FCC                     u2290:
  4737     0FCC                     l396:
  4738     0FCC  0008               	return
  4739     0FCD                     __end_of_sendMatrix:
  4740                           
  4741                           	psect	text10
  4742     0092                     __ptext10:	
  4743 ;; *************** function _initMAX7219 *****************
  4744 ;; Defined at:
  4745 ;;		line 16 in file "ledMatrix.c"
  4746 ;; Parameters:    Size  Location     Type
  4747 ;;		None
  4748 ;; Auto vars:     Size  Location     Type
  4749 ;;		None
  4750 ;; Return value:  Size  Location     Type
  4751 ;;                  1    wreg      void 
  4752 ;; Registers used:
  4753 ;;		wreg, status,2, status,0, pclath, cstack
  4754 ;; Tracked objects:
  4755 ;;		On entry : 0/0
  4756 ;;		On exit  : 0/0
  4757 ;;		Unchanged: 0/0
  4758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4759 ;;      Params:         0       0       0       0       0       0
  4760 ;;      Locals:         0       0       0       0       0       0
  4761 ;;      Temps:          2       0       0       0       0       0
  4762 ;;      Totals:         2       0       0       0       0       0
  4763 ;;Total ram usage:        2 bytes
  4764 ;; Hardware stack levels used: 1
  4765 ;; Hardware stack levels required when called: 2
  4766 ;; This function calls:
  4767 ;;		_txMAX7219
  4768 ;; This function is called by:
  4769 ;;		_main
  4770 ;; This function uses a non-reentrant model
  4771 ;;
  4772                           
  4773     0092                     _initMAX7219:	
  4774                           ;psect for function _initMAX7219
  4775                           
  4776     0092                     l2840:	
  4777                           ;incstack = 0
  4778                           ; Regs used in _initMAX7219: [wreg+status,2+status,0+pclath+cstack]
  4779                           
  4780                           
  4781                           ;ledMatrix.c: 17:     LATBbits.LATB1 = 1;
  4782     0092  0022               	movlb	2	; select bank2
  4783     0093  148D               	bsf	13,1	;volatile
  4784                           
  4785                           ;ledMatrix.c: 18:     TRISBbits.TRISB1 = 0;
  4786     0094  0021               	movlb	1	; select bank1
  4787     0095  108D               	bcf	13,1	;volatile
  4788                           
  4789                           ;ledMatrix.c: 19:     SSP1CON1bits.SSPEN = 1;
  4790     0096  0024               	movlb	4	; select bank4
  4791     0097  1695               	bsf	21,5	;volatile
  4792     0098                     l2842:
  4793                           
  4794                           ;ledMatrix.c: 20:     txMAX7219(0x09,0x00);
  4795     0098  01F1               	clrf	txMAX7219@dat0
  4796     0099  3009               	movlw	9
  4797     009A  318F  2713  3180   	fcall	_txMAX7219
  4798                           
  4799                           ;ledMatrix.c: 21:     txMAX7219(0x0A,0x00);
  4800     009D  01F1               	clrf	txMAX7219@dat0
  4801     009E  300A               	movlw	10
  4802     009F  318F  2713  3180   	fcall	_txMAX7219
  4803                           
  4804                           ;ledMatrix.c: 22:     txMAX7219(0x0C,0x00);
  4805     00A2  01F1               	clrf	txMAX7219@dat0
  4806     00A3  300C               	movlw	12
  4807     00A4  318F  2713  3180   	fcall	_txMAX7219
  4808                           
  4809                           ;ledMatrix.c: 23:     txMAX7219(0x0B,0x07);
  4810     00A7  3007               	movlw	7
  4811     00A8  00F1               	movwf	txMAX7219@dat0
  4812     00A9  300B               	movlw	11
  4813     00AA  318F  2713  3180   	fcall	_txMAX7219
  4814                           
  4815                           ;ledMatrix.c: 24:     txMAX7219(0x0C,0x01);
  4816     00AD  01F1               	clrf	txMAX7219@dat0
  4817     00AE  0AF1               	incf	txMAX7219@dat0,f
  4818     00AF  300C               	movlw	12
  4819     00B0  318F  2713  3180   	fcall	_txMAX7219
  4820                           
  4821                           ;ledMatrix.c: 25:     txMAX7219(0x0F,0x01);
  4822     00B3  01F1               	clrf	txMAX7219@dat0
  4823     00B4  0AF1               	incf	txMAX7219@dat0,f
  4824     00B5  300F               	movlw	15
  4825     00B6  318F  2713  3180   	fcall	_txMAX7219
  4826     00B9                     l2844:
  4827                           
  4828                           ;ledMatrix.c: 26:     _delay((unsigned long)((1000)*(8000000/4000.0)));
  4829     00B9  300B               	movlw	11
  4830     00BA  00F4               	movwf	??_initMAX7219+1
  4831     00BB  3026               	movlw	38
  4832     00BC  00F3               	movwf	??_initMAX7219
  4833     00BD  305E               	movlw	94
  4834     00BE                     u2457:
  4835     00BE  0B89               	decfsz	9,f
  4836     00BF  28BE               	goto	u2457
  4837     00C0  0BF3               	decfsz	??_initMAX7219,f
  4838     00C1  28BE               	goto	u2457
  4839     00C2  0BF4               	decfsz	??_initMAX7219+1,f
  4840     00C3  28BE               	goto	u2457
  4841     00C4                     l2846:
  4842                           
  4843                           ;ledMatrix.c: 27:     txMAX7219(0x0F,0x00);
  4844     00C4  01F1               	clrf	txMAX7219@dat0
  4845     00C5  300F               	movlw	15
  4846     00C6  318F  2713  3180   	fcall	_txMAX7219
  4847     00C9                     l2848:
  4848                           
  4849                           ;ledMatrix.c: 28:     txMAX7219(0x0C,0x01);
  4850     00C9  01F1               	clrf	txMAX7219@dat0
  4851     00CA  0AF1               	incf	txMAX7219@dat0,f
  4852     00CB  300C               	movlw	12
  4853     00CC  318F  2713  3180   	fcall	_txMAX7219
  4854     00CF                     l373:
  4855     00CF  0008               	return
  4856     00D0                     __end_of_initMAX7219:
  4857                           
  4858                           	psect	text11
  4859     0F13                     __ptext11:	
  4860 ;; *************** function _txMAX7219 *****************
  4861 ;; Defined at:
  4862 ;;		line 5 in file "ledMatrix.c"
  4863 ;; Parameters:    Size  Location     Type
  4864 ;;  addr0           1    wreg     unsigned char 
  4865 ;;  dat0            1    1[COMMON] unsigned char 
  4866 ;; Auto vars:     Size  Location     Type
  4867 ;;  addr0           1    2[COMMON] unsigned char 
  4868 ;; Return value:  Size  Location     Type
  4869 ;;                  1    wreg      void 
  4870 ;; Registers used:
  4871 ;;		wreg, status,2, status,0, pclath, cstack
  4872 ;; Tracked objects:
  4873 ;;		On entry : 0/0
  4874 ;;		On exit  : 0/0
  4875 ;;		Unchanged: 0/0
  4876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4877 ;;      Params:         1       0       0       0       0       0
  4878 ;;      Locals:         1       0       0       0       0       0
  4879 ;;      Temps:          0       0       0       0       0       0
  4880 ;;      Totals:         2       0       0       0       0       0
  4881 ;;Total ram usage:        2 bytes
  4882 ;; Hardware stack levels used: 1
  4883 ;; Hardware stack levels required when called: 1
  4884 ;; This function calls:
  4885 ;;		_SPI1_WriteByte
  4886 ;; This function is called by:
  4887 ;;		_initMAX7219
  4888 ;;		_sendMatrix
  4889 ;; This function uses a non-reentrant model
  4890 ;;
  4891                           
  4892     0F13                     _txMAX7219:	
  4893                           ;psect for function _txMAX7219
  4894                           
  4895                           
  4896                           ;incstack = 0
  4897                           ; Regs used in _txMAX7219: [wreg+status,2+status,0+pclath+cstack]
  4898                           ;txMAX7219@addr0 stored from wreg
  4899     0F13  00F2               	movwf	txMAX7219@addr0
  4900     0F14                     l2688:
  4901                           
  4902                           ;ledMatrix.c: 6:     LATBbits.LATB1 = 0;
  4903     0F14  0022               	movlb	2	; select bank2
  4904     0F15  108D               	bcf	13,1	;volatile
  4905     0F16                     l2690:
  4906                           
  4907                           ;ledMatrix.c: 7:     SPI1_WriteByte(addr0);
  4908     0F16  0872               	movf	txMAX7219@addr0,w
  4909     0F17  318D  25E5  318F   	fcall	_SPI1_WriteByte
  4910     0F1A                     l364:	
  4911                           ;ledMatrix.c: 8:     while(!PIR1bits.SSP1IF);
  4912                           
  4913     0F1A  0020               	movlb	0	; select bank0
  4914     0F1B  1D91               	btfss	17,3	;volatile
  4915     0F1C  2F1E               	goto	u1441
  4916     0F1D  2F1F               	goto	u1440
  4917     0F1E                     u1441:
  4918     0F1E  2F1A               	goto	l364
  4919     0F1F                     u1440:
  4920     0F1F                     l366:
  4921                           
  4922                           ;ledMatrix.c: 9:     PIR1bits.SSP1IF = 0;
  4923     0F1F  1191               	bcf	17,3	;volatile
  4924     0F20                     l2692:
  4925                           
  4926                           ;ledMatrix.c: 10:     SPI1_WriteByte(dat0);
  4927     0F20  0871               	movf	txMAX7219@dat0,w
  4928     0F21  318D  25E5  318F   	fcall	_SPI1_WriteByte
  4929     0F24                     l367:	
  4930                           ;ledMatrix.c: 11:     while(!PIR1bits.SSP1IF);
  4931                           
  4932     0F24  0020               	movlb	0	; select bank0
  4933     0F25  1D91               	btfss	17,3	;volatile
  4934     0F26  2F28               	goto	u1451
  4935     0F27  2F29               	goto	u1450
  4936     0F28                     u1451:
  4937     0F28  2F24               	goto	l367
  4938     0F29                     u1450:
  4939     0F29                     l369:
  4940                           
  4941                           ;ledMatrix.c: 12:     PIR1bits.SSP1IF = 0;
  4942     0F29  1191               	bcf	17,3	;volatile
  4943                           
  4944                           ;ledMatrix.c: 13:     LATBbits.LATB1 = 1;
  4945     0F2A  0022               	movlb	2	; select bank2
  4946     0F2B  148D               	bsf	13,1	;volatile
  4947     0F2C                     l370:
  4948     0F2C  0008               	return
  4949     0F2D                     __end_of_txMAX7219:
  4950                           
  4951                           	psect	text12
  4952     0DE5                     __ptext12:	
  4953 ;; *************** function _SPI1_WriteByte *****************
  4954 ;; Defined at:
  4955 ;;		line 131 in file "mcc_generated_files/spi1.c"
  4956 ;; Parameters:    Size  Location     Type
  4957 ;;  byte            1    wreg     unsigned char 
  4958 ;; Auto vars:     Size  Location     Type
  4959 ;;  byte            1    0[COMMON] unsigned char 
  4960 ;; Return value:  Size  Location     Type
  4961 ;;                  1    wreg      void 
  4962 ;; Registers used:
  4963 ;;		wreg
  4964 ;; Tracked objects:
  4965 ;;		On entry : 0/0
  4966 ;;		On exit  : 0/0
  4967 ;;		Unchanged: 0/0
  4968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4969 ;;      Params:         0       0       0       0       0       0
  4970 ;;      Locals:         1       0       0       0       0       0
  4971 ;;      Temps:          0       0       0       0       0       0
  4972 ;;      Totals:         1       0       0       0       0       0
  4973 ;;Total ram usage:        1 bytes
  4974 ;; Hardware stack levels used: 1
  4975 ;; This function calls:
  4976 ;;		Nothing
  4977 ;; This function is called by:
  4978 ;;		_txMAX7219
  4979 ;; This function uses a non-reentrant model
  4980 ;;
  4981                           
  4982     0DE5                     _SPI1_WriteByte:	
  4983                           ;psect for function _SPI1_WriteByte
  4984                           
  4985                           
  4986                           ;incstack = 0
  4987                           ; Regs used in _SPI1_WriteByte: [wreg]
  4988                           ;SPI1_WriteByte@byte stored from wreg
  4989     0DE5  00F0               	movwf	SPI1_WriteByte@byte
  4990     0DE6                     l2590:
  4991                           
  4992                           ;mcc_generated_files/spi1.c: 131: void SPI1_WriteByte(uint8_t byte);mcc_generated_files/
      +                          spi1.c: 132: {;mcc_generated_files/spi1.c: 133:     SSP1BUF = byte;
  4993     0DE6  0870               	movf	SPI1_WriteByte@byte,w
  4994     0DE7  0024               	movlb	4	; select bank4
  4995     0DE8  0091               	movwf	17	;volatile
  4996     0DE9                     l224:
  4997     0DE9  0008               	return
  4998     0DEA                     __end_of_SPI1_WriteByte:
  4999                           
  5000                           	psect	text13
  5001     0E45                     __ptext13:	
  5002 ;; *************** function _deactivateElevator *****************
  5003 ;; Defined at:
  5004 ;;		line 50 in file "main.c"
  5005 ;; Parameters:    Size  Location     Type
  5006 ;;		None
  5007 ;; Auto vars:     Size  Location     Type
  5008 ;;		None
  5009 ;; Return value:  Size  Location     Type
  5010 ;;                  1    wreg      void 
  5011 ;; Registers used:
  5012 ;;		None
  5013 ;; Tracked objects:
  5014 ;;		On entry : 0/0
  5015 ;;		On exit  : 0/0
  5016 ;;		Unchanged: 0/0
  5017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5018 ;;      Params:         0       0       0       0       0       0
  5019 ;;      Locals:         0       0       0       0       0       0
  5020 ;;      Temps:          0       0       0       0       0       0
  5021 ;;      Totals:         0       0       0       0       0       0
  5022 ;;Total ram usage:        0 bytes
  5023 ;; Hardware stack levels used: 1
  5024 ;; This function calls:
  5025 ;;		Nothing
  5026 ;; This function is called by:
  5027 ;;		_main
  5028 ;; This function uses a non-reentrant model
  5029 ;;
  5030                           
  5031     0E45                     _deactivateElevator:	
  5032                           ;psect for function _deactivateElevator
  5033                           
  5034     0E45                     l2790:	
  5035                           ;incstack = 0
  5036                           ; Regs used in _deactivateElevator: []
  5037                           
  5038                           
  5039                           ;main.c: 51:     LATAbits.LATA3 = 0;
  5040     0E45  0022               	movlb	2	; select bank2
  5041     0E46  118C               	bcf	12,3	;volatile
  5042                           
  5043                           ;main.c: 52:     LATAbits.LATA7 = 0;
  5044     0E47  138C               	bcf	12,7	;volatile
  5045                           
  5046                           ;main.c: 54:     TRISAbits.TRISA0 = 1;
  5047     0E48  0021               	movlb	1	; select bank1
  5048     0E49  140C               	bsf	12,0	;volatile
  5049                           
  5050                           ;main.c: 55:     TRISAbits.TRISA1 = 1;
  5051     0E4A  148C               	bsf	12,1	;volatile
  5052                           
  5053                           ;main.c: 56:     TRISAbits.TRISA2 = 1;
  5054     0E4B  150C               	bsf	12,2	;volatile
  5055                           
  5056                           ;main.c: 57:     TRISAbits.TRISA3 = 0;
  5057     0E4C  118C               	bcf	12,3	;volatile
  5058                           
  5059                           ;main.c: 58:     TRISAbits.TRISA4 = 1;
  5060     0E4D  160C               	bsf	12,4	;volatile
  5061                           
  5062                           ;main.c: 59:     TRISAbits.TRISA7 = 0;
  5063     0E4E  138C               	bcf	12,7	;volatile
  5064                           
  5065                           ;main.c: 60:     TRISBbits.TRISB0 = 1;
  5066     0E4F  140D               	bsf	13,0	;volatile
  5067                           
  5068                           ;main.c: 61:     TRISBbits.TRISB3 = 1;
  5069     0E50  158D               	bsf	13,3	;volatile
  5070     0E51                     l325:
  5071     0E51  0008               	return
  5072     0E52                     __end_of_deactivateElevator:
  5073                           
  5074                           	psect	text14
  5075     032E                     __ptext14:	
  5076 ;; *************** function _ai_run *****************
  5077 ;; Defined at:
  5078 ;;		line 106 in file "ai.c"
  5079 ;; Parameters:    Size  Location     Type
  5080 ;;		None
  5081 ;; Auto vars:     Size  Location     Type
  5082 ;;  i               1   12[BANK0 ] unsigned char 
  5083 ;;  i               1   11[BANK0 ] unsigned char 
  5084 ;;  i               1   13[BANK0 ] unsigned char 
  5085 ;;  j               1   17[BANK0 ] unsigned char 
  5086 ;;  j               1   16[BANK0 ] unsigned char 
  5087 ;;  i               1   10[BANK0 ] unsigned char 
  5088 ;;  z               2   14[BANK0 ] short 
  5089 ;; Return value:  Size  Location     Type
  5090 ;;                  1    wreg      unsigned char 
  5091 ;; Registers used:
  5092 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5093 ;; Tracked objects:
  5094 ;;		On entry : 0/0
  5095 ;;		On exit  : 0/0
  5096 ;;		Unchanged: 0/0
  5097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5098 ;;      Params:         0       0       0       0       0       0
  5099 ;;      Locals:         0       8       0       0       0       0
  5100 ;;      Temps:          0       2       0       0       0       0
  5101 ;;      Totals:         0      10       0       0       0       0
  5102 ;;Total ram usage:       10 bytes
  5103 ;; Hardware stack levels used: 1
  5104 ;; Hardware stack levels required when called: 2
  5105 ;; This function calls:
  5106 ;;		___awdiv
  5107 ;;		___wmul
  5108 ;;		_biases1_read
  5109 ;;		_biases2_read
  5110 ;;		_sigmoid
  5111 ;;		_weights1_read
  5112 ;;		_weights2_read
  5113 ;; This function is called by:
  5114 ;;		_main
  5115 ;; This function uses a non-reentrant model
  5116 ;;
  5117                           
  5118     032E                     _ai_run:	
  5119                           ;psect for function _ai_run
  5120                           
  5121     032E                     l2918:	
  5122                           ;incstack = 0
  5123                           ; Regs used in _ai_run: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5124                           
  5125                           
  5126                           ;ai.c: 107:     for(uint8_t i = 0; i < 8; i++){
  5127     032E  0020               	movlb	0	; select bank0
  5128     032F  01AA               	clrf	ai_run@i
  5129     0330                     l2924:
  5130                           
  5131                           ;ai.c: 108:         if(Y0[i]> 0){
  5132     0330  082A               	movf	ai_run@i,w
  5133     0331  3ED4               	addlw	(low (_Y0| 0))& (0+255)
  5134     0332  0086               	movwf	6
  5135     0333  0187               	clrf	7
  5136     0334  0801               	movf	1,w
  5137     0335  1903               	btfsc	3,2
  5138     0336  2B38               	goto	u1831
  5139     0337  2B39               	goto	u1830
  5140     0338                     u1831:
  5141     0338  2B3F               	goto	l2928
  5142     0339                     u1830:
  5143     0339                     l2926:
  5144                           
  5145                           ;ai.c: 109:             Y0[i] = 255u;
  5146     0339  082A               	movf	ai_run@i,w
  5147     033A  3ED4               	addlw	(low (_Y0| 0))& (0+255)
  5148     033B  0086               	movwf	6
  5149     033C  0187               	clrf	7
  5150     033D  30FF               	movlw	255
  5151     033E  0081               	movwf	1
  5152     033F                     l2928:
  5153                           
  5154                           ;ai.c: 111:     }
  5155     033F  3001               	movlw	1
  5156     0340  00A8               	movwf	??_ai_run
  5157     0341  0828               	movf	??_ai_run,w
  5158     0342  07AA               	addwf	ai_run@i,f
  5159     0343                     l2930:
  5160     0343  3008               	movlw	8
  5161     0344  022A               	subwf	ai_run@i,w
  5162     0345  1C03               	skipc
  5163     0346  2B48               	goto	u1841
  5164     0347  2B49               	goto	u1840
  5165     0348                     u1841:
  5166     0348  2B30               	goto	l2924
  5167     0349                     u1840:
  5168     0349                     l2932:
  5169                           
  5170                           ;ai.c: 113:     int16_t z;;ai.c: 114:     for(uint8_t j = 0; j < 4; j++){
  5171     0349  01B0               	clrf	ai_run@j
  5172     034A                     l2938:
  5173                           
  5174                           ;ai.c: 115:         Z1[j] = biases1_read(j);
  5175     034A  0830               	movf	ai_run@j,w
  5176     034B  3E59               	addlw	(low (_Z1| 0))& (0+255)
  5177     034C  0086               	movwf	6
  5178     034D  0187               	clrf	7
  5179     034E  0830               	movf	ai_run@j,w
  5180     034F  318E  260F  3183   	fcall	_biases1_read
  5181     0352  0081               	movwf	1
  5182     0353                     l2940:
  5183                           
  5184                           ;ai.c: 116:         for(uint8_t i = 0; i < 8; i++){
  5185     0353  0020               	movlb	0	; select bank0
  5186     0354  01AB               	clrf	ai_run@i_911
  5187     0355                     l2946:
  5188                           
  5189                           ;ai.c: 117:             z = (int16_t)Y0[i];
  5190     0355  082B               	movf	ai_run@i_911,w
  5191     0356  3ED4               	addlw	(low (_Y0| 0))& (0+255)
  5192     0357  0086               	movwf	6
  5193     0358  0187               	clrf	7
  5194     0359  0801               	movf	1,w
  5195     035A  00A8               	movwf	??_ai_run
  5196     035B  01A9               	clrf	??_ai_run+1
  5197     035C  0828               	movf	??_ai_run,w
  5198     035D  00AE               	movwf	ai_run@z
  5199     035E  0829               	movf	??_ai_run+1,w
  5200     035F  00AF               	movwf	ai_run@z+1
  5201     0360                     l2948:
  5202                           
  5203                           ;ai.c: 118:             z *= weights1_read(i,j);
  5204     0360  0830               	movf	ai_run@j,w
  5205     0361  00F4               	movwf	weights1_read@add2
  5206     0362  082B               	movf	ai_run@i_911,w
  5207     0363  318E  2652  3183   	fcall	_weights1_read
  5208     0366  00F7               	movwf	___wmul@multiplier
  5209     0367  01F8               	clrf	___wmul@multiplier+1
  5210     0368  1BF7               	btfsc	___wmul@multiplier,7
  5211     0369  03F8               	decf	___wmul@multiplier+1,f
  5212     036A  0020               	movlb	0	; select bank0
  5213     036B  082F               	movf	ai_run@z+1,w
  5214     036C  00FA               	movwf	___wmul@multiplicand+1
  5215     036D  082E               	movf	ai_run@z,w
  5216     036E  00F9               	movwf	___wmul@multiplicand
  5217     036F  3180  2006  3183   	fcall	___wmul
  5218     0372  0878               	movf	?___wmul+1,w
  5219     0373  0020               	movlb	0	; select bank0
  5220     0374  00AF               	movwf	ai_run@z+1
  5221     0375  0877               	movf	?___wmul,w
  5222     0376  00AE               	movwf	ai_run@z
  5223     0377                     l2950:
  5224                           
  5225                           ;ai.c: 119:             z /= 255;
  5226     0377  30FF               	movlw	255
  5227     0378  00A0               	movwf	___awdiv@divisor
  5228     0379  3000               	movlw	0
  5229     037A  00A1               	movwf	___awdiv@divisor+1
  5230     037B  082F               	movf	ai_run@z+1,w
  5231     037C  00A3               	movwf	___awdiv@dividend+1
  5232     037D  082E               	movf	ai_run@z,w
  5233     037E  00A2               	movwf	___awdiv@dividend
  5234     037F  3181  212E  3183   	fcall	___awdiv
  5235     0382  0020               	movlb	0	; select bank0
  5236     0383  0821               	movf	?___awdiv+1,w
  5237     0384  00AF               	movwf	ai_run@z+1
  5238     0385  0820               	movf	?___awdiv,w
  5239     0386  00AE               	movwf	ai_run@z
  5240                           
  5241                           ;ai.c: 120:             Z1[j] += z;
  5242     0387  082E               	movf	ai_run@z,w
  5243     0388  00A8               	movwf	??_ai_run
  5244     0389  0830               	movf	ai_run@j,w
  5245     038A  3E59               	addlw	(low (_Z1| 0))& (0+255)
  5246     038B  0086               	movwf	6
  5247     038C  0187               	clrf	7
  5248     038D  0828               	movf	??_ai_run,w
  5249     038E  0781               	addwf	1,f
  5250     038F                     l2952:
  5251                           
  5252                           ;ai.c: 121:         }
  5253     038F  3001               	movlw	1
  5254     0390  00A8               	movwf	??_ai_run
  5255     0391  0828               	movf	??_ai_run,w
  5256     0392  07AB               	addwf	ai_run@i_911,f
  5257     0393                     l2954:
  5258     0393  3008               	movlw	8
  5259     0394  022B               	subwf	ai_run@i_911,w
  5260     0395  1C03               	skipc
  5261     0396  2B98               	goto	u1851
  5262     0397  2B99               	goto	u1850
  5263     0398                     u1851:
  5264     0398  2B55               	goto	l2946
  5265     0399                     u1850:
  5266     0399                     l2956:
  5267                           
  5268                           ;ai.c: 122:         Y1[j] = sigmoid(Z1[j]);
  5269     0399  0830               	movf	ai_run@j,w
  5270     039A  3E61               	addlw	(low (_Y1| 0))& (0+255)
  5271     039B  0086               	movwf	6
  5272     039C  0187               	clrf	7
  5273     039D  0830               	movf	ai_run@j,w
  5274     039E  3E59               	addlw	(low (_Z1| 0))& (0+255)
  5275     039F  0084               	movwf	4
  5276     03A0  0185               	clrf	5
  5277     03A1  0800               	movf	0,w
  5278     03A2  318E  268F  3183   	fcall	_sigmoid
  5279     03A5  0081               	movwf	1
  5280     03A6                     l2958:
  5281                           
  5282                           ;ai.c: 123:     }
  5283     03A6  3001               	movlw	1
  5284     03A7  0020               	movlb	0	; select bank0
  5285     03A8  00A8               	movwf	??_ai_run
  5286     03A9  0828               	movf	??_ai_run,w
  5287     03AA  07B0               	addwf	ai_run@j,f
  5288     03AB                     l2960:
  5289     03AB  3004               	movlw	4
  5290     03AC  0230               	subwf	ai_run@j,w
  5291     03AD  1C03               	skipc
  5292     03AE  2BB0               	goto	u1861
  5293     03AF  2BB1               	goto	u1860
  5294     03B0                     u1861:
  5295     03B0  2B4A               	goto	l2938
  5296     03B1                     u1860:
  5297     03B1                     l2962:
  5298                           
  5299                           ;ai.c: 124:     for(uint8_t j = 0; j < 4; j++){
  5300     03B1  01B1               	clrf	ai_run@j_913
  5301     03B2                     l2968:
  5302                           
  5303                           ;ai.c: 125:         Z2[j] = biases2_read(j);
  5304     03B2  0831               	movf	ai_run@j_913,w
  5305     03B3  3E55               	addlw	(low (_Z2| 0))& (0+255)
  5306     03B4  0086               	movwf	6
  5307     03B5  0187               	clrf	7
  5308     03B6  0831               	movf	ai_run@j_913,w
  5309     03B7  318E  2616  3183   	fcall	_biases2_read
  5310     03BA  0081               	movwf	1
  5311     03BB                     l2970:
  5312                           
  5313                           ;ai.c: 126:         for(uint8_t i = 0; i < 4; i++){
  5314     03BB  0020               	movlb	0	; select bank0
  5315     03BC  01AC               	clrf	ai_run@i_915
  5316     03BD                     l2976:
  5317                           
  5318                           ;ai.c: 127:             z = (int16_t)Y1[i];
  5319     03BD  082C               	movf	ai_run@i_915,w
  5320     03BE  3E61               	addlw	(low (_Y1| 0))& (0+255)
  5321     03BF  0086               	movwf	6
  5322     03C0  0187               	clrf	7
  5323     03C1  0801               	movf	1,w
  5324     03C2  00A8               	movwf	??_ai_run
  5325     03C3  01A9               	clrf	??_ai_run+1
  5326     03C4  0828               	movf	??_ai_run,w
  5327     03C5  00AE               	movwf	ai_run@z
  5328     03C6  0829               	movf	??_ai_run+1,w
  5329     03C7  00AF               	movwf	ai_run@z+1
  5330     03C8                     l2978:
  5331                           
  5332                           ;ai.c: 128:             z *= weights2_read(i,j);
  5333     03C8  0831               	movf	ai_run@j_913,w
  5334     03C9  00F4               	movwf	weights2_read@add2
  5335     03CA  082C               	movf	ai_run@i_915,w
  5336     03CB  318E  2660  3183   	fcall	_weights2_read
  5337     03CE  00F7               	movwf	___wmul@multiplier
  5338     03CF  01F8               	clrf	___wmul@multiplier+1
  5339     03D0  1BF7               	btfsc	___wmul@multiplier,7
  5340     03D1  03F8               	decf	___wmul@multiplier+1,f
  5341     03D2  0020               	movlb	0	; select bank0
  5342     03D3  082F               	movf	ai_run@z+1,w
  5343     03D4  00FA               	movwf	___wmul@multiplicand+1
  5344     03D5  082E               	movf	ai_run@z,w
  5345     03D6  00F9               	movwf	___wmul@multiplicand
  5346     03D7  3180  2006  3183   	fcall	___wmul
  5347     03DA  0878               	movf	?___wmul+1,w
  5348     03DB  0020               	movlb	0	; select bank0
  5349     03DC  00AF               	movwf	ai_run@z+1
  5350     03DD  0877               	movf	?___wmul,w
  5351     03DE  00AE               	movwf	ai_run@z
  5352     03DF                     l2980:
  5353                           
  5354                           ;ai.c: 129:             z /= 255;
  5355     03DF  30FF               	movlw	255
  5356     03E0  00A0               	movwf	___awdiv@divisor
  5357     03E1  3000               	movlw	0
  5358     03E2  00A1               	movwf	___awdiv@divisor+1
  5359     03E3  082F               	movf	ai_run@z+1,w
  5360     03E4  00A3               	movwf	___awdiv@dividend+1
  5361     03E5  082E               	movf	ai_run@z,w
  5362     03E6  00A2               	movwf	___awdiv@dividend
  5363     03E7  3181  212E  3183   	fcall	___awdiv
  5364     03EA  0020               	movlb	0	; select bank0
  5365     03EB  0821               	movf	?___awdiv+1,w
  5366     03EC  00AF               	movwf	ai_run@z+1
  5367     03ED  0820               	movf	?___awdiv,w
  5368     03EE  00AE               	movwf	ai_run@z
  5369                           
  5370                           ;ai.c: 130:             Z2[j] += z;
  5371     03EF  082E               	movf	ai_run@z,w
  5372     03F0  00A8               	movwf	??_ai_run
  5373     03F1  0831               	movf	ai_run@j_913,w
  5374     03F2  3E55               	addlw	(low (_Z2| 0))& (0+255)
  5375     03F3  0086               	movwf	6
  5376     03F4  0187               	clrf	7
  5377     03F5  0828               	movf	??_ai_run,w
  5378     03F6  0781               	addwf	1,f
  5379     03F7                     l2982:
  5380                           
  5381                           ;ai.c: 131:         }
  5382     03F7  3001               	movlw	1
  5383     03F8  00A8               	movwf	??_ai_run
  5384     03F9  0828               	movf	??_ai_run,w
  5385     03FA  07AC               	addwf	ai_run@i_915,f
  5386     03FB                     l2984:
  5387     03FB  3004               	movlw	4
  5388     03FC  022C               	subwf	ai_run@i_915,w
  5389     03FD  1C03               	skipc
  5390     03FE  2C00               	goto	u1871
  5391     03FF  2C01               	goto	u1870
  5392     0400                     u1871:
  5393     0400  2BBD               	goto	l2976
  5394     0401                     u1870:
  5395     0401                     l2986:
  5396                           
  5397                           ;ai.c: 132:         Y2[j] = sigmoid(Z2[j]);
  5398     0401  0831               	movf	ai_run@j_913,w
  5399     0402  3E5D               	addlw	(low (_Y2| 0))& (0+255)
  5400     0403  0086               	movwf	6
  5401     0404  0187               	clrf	7
  5402     0405  0831               	movf	ai_run@j_913,w
  5403     0406  3E55               	addlw	(low (_Z2| 0))& (0+255)
  5404     0407  0084               	movwf	4
  5405     0408  0185               	clrf	5
  5406     0409  0800               	movf	0,w
  5407     040A  318E  268F  3183   	fcall	_sigmoid
  5408     040D  0081               	movwf	1
  5409     040E                     l2988:
  5410                           
  5411                           ;ai.c: 133:     }
  5412     040E  3001               	movlw	1
  5413     040F  0020               	movlb	0	; select bank0
  5414     0410  00A8               	movwf	??_ai_run
  5415     0411  0828               	movf	??_ai_run,w
  5416     0412  07B1               	addwf	ai_run@j_913,f
  5417     0413                     l2990:
  5418     0413  3004               	movlw	4
  5419     0414  0231               	subwf	ai_run@j_913,w
  5420     0415  1C03               	skipc
  5421     0416  2C18               	goto	u1881
  5422     0417  2C19               	goto	u1880
  5423     0418                     u1881:
  5424     0418  2BB2               	goto	l2968
  5425     0419                     u1880:
  5426     0419                     l2992:
  5427                           
  5428                           ;ai.c: 135:     choice = 0;
  5429     0419  01E8               	clrf	_choice
  5430     041A                     l2994:
  5431                           
  5432                           ;ai.c: 136:     for(uint8_t i = 1; i < 4; i++){
  5433     041A  01AD               	clrf	ai_run@i_917
  5434     041B  0AAD               	incf	ai_run@i_917,f
  5435     041C                     l3000:
  5436                           
  5437                           ;ai.c: 137:         if(Y2[i]>Y2[choice]){
  5438     041C  0868               	movf	_choice,w
  5439     041D  3E5D               	addlw	(low (_Y2| 0))& (0+255)
  5440     041E  0086               	movwf	6
  5441     041F  0187               	clrf	7
  5442     0420  082D               	movf	ai_run@i_917,w
  5443     0421  3E5D               	addlw	(low (_Y2| 0))& (0+255)
  5444     0422  0084               	movwf	4
  5445     0423  0185               	clrf	5
  5446     0424  0800               	movf	0,w
  5447     0425  0201               	subwf	1,w
  5448     0426  1803               	skipnc
  5449     0427  2C29               	goto	u1891
  5450     0428  2C2A               	goto	u1890
  5451     0429                     u1891:
  5452     0429  2C2C               	goto	l3004
  5453     042A                     u1890:
  5454     042A                     l3002:
  5455                           
  5456                           ;ai.c: 138:             choice = i;
  5457     042A  082D               	movf	ai_run@i_917,w
  5458     042B  00E8               	movwf	_choice
  5459     042C                     l3004:
  5460                           
  5461                           ;ai.c: 140:     }
  5462     042C  3001               	movlw	1
  5463     042D  00A8               	movwf	??_ai_run
  5464     042E  0828               	movf	??_ai_run,w
  5465     042F  07AD               	addwf	ai_run@i_917,f
  5466     0430                     l3006:
  5467     0430  3004               	movlw	4
  5468     0431  022D               	subwf	ai_run@i_917,w
  5469     0432  1C03               	skipc
  5470     0433  2C35               	goto	u1901
  5471     0434  2C36               	goto	u1900
  5472     0435                     u1901:
  5473     0435  2C1C               	goto	l3000
  5474     0436                     u1900:
  5475     0436                     l3008:
  5476                           
  5477                           ;ai.c: 141:     return choice;
  5478     0436  0868               	movf	_choice,w
  5479     0437                     l633:
  5480     0437  0008               	return
  5481     0438                     __end_of_ai_run:
  5482                           
  5483                           	psect	text15
  5484     0E8F                     __ptext15:	
  5485 ;; *************** function _sigmoid *****************
  5486 ;; Defined at:
  5487 ;;		line 8 in file "sigmoid.c"
  5488 ;; Parameters:    Size  Location     Type
  5489 ;;  z               1    wreg     char 
  5490 ;; Auto vars:     Size  Location     Type
  5491 ;;  z               1    1[COMMON] char 
  5492 ;; Return value:  Size  Location     Type
  5493 ;;                  1    wreg      unsigned char 
  5494 ;; Registers used:
  5495 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  5496 ;; Tracked objects:
  5497 ;;		On entry : 0/0
  5498 ;;		On exit  : 0/0
  5499 ;;		Unchanged: 0/0
  5500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5501 ;;      Params:         0       0       0       0       0       0
  5502 ;;      Locals:         1       0       0       0       0       0
  5503 ;;      Temps:          1       0       0       0       0       0
  5504 ;;      Totals:         2       0       0       0       0       0
  5505 ;;Total ram usage:        2 bytes
  5506 ;; Hardware stack levels used: 1
  5507 ;; This function calls:
  5508 ;;		Nothing
  5509 ;; This function is called by:
  5510 ;;		_ai_run
  5511 ;; This function uses a non-reentrant model
  5512 ;;
  5513                           
  5514     0E8F                     _sigmoid:	
  5515                           ;psect for function _sigmoid
  5516                           
  5517                           
  5518                           ;incstack = 0
  5519                           ; Regs used in _sigmoid: [wreg-fsr0h+status,2+status,0+pclath]
  5520                           ;sigmoid@z stored from wreg
  5521     0E8F  00F1               	movwf	sigmoid@z
  5522     0E90                     l2718:
  5523                           
  5524                           ;sigmoid.c: 9:     return sigmoidValues[((uint8_t)z)>>4];
  5525     0E90  0871               	movf	sigmoid@z,w
  5526     0E91  00F0               	movwf	??_sigmoid
  5527     0E92  3004               	movlw	4
  5528     0E93                     u1505:
  5529     0E93  36F0               	lsrf	??_sigmoid,f
  5530     0E94  0B89               	decfsz	9,f
  5531     0E95  2E93               	goto	u1505
  5532     0E96  0870               	movf	??_sigmoid,w
  5533     0E97  3E10               	addlw	low (_sigmoidValues| (0+32768))
  5534     0E98  0084               	movwf	4
  5535     0E99  3088               	movlw	high (_sigmoidValues| (0+32768))
  5536     0E9A  1803               	skipnc
  5537     0E9B  3E01               	addlw	1
  5538     0E9C  0085               	movwf	5
  5539     0E9D  0800               	movf	0,w	;code access
  5540     0E9E                     l686:
  5541     0E9E  0008               	return
  5542     0E9F                     __end_of_sigmoid:
  5543                           
  5544                           	psect	text16
  5545     0544                     __ptext16:	
  5546 ;; *************** function _ai_propagate *****************
  5547 ;; Defined at:
  5548 ;;		line 144 in file "ai.c"
  5549 ;; Parameters:    Size  Location     Type
  5550 ;;  incentive       1    wreg     char 
  5551 ;; Auto vars:     Size  Location     Type
  5552 ;;  incentive       1   20[BANK0 ] char 
  5553 ;;  i               1   28[BANK0 ] unsigned char 
  5554 ;;  i               1   27[BANK0 ] unsigned char 
  5555 ;;  i               1   25[BANK0 ] unsigned char 
  5556 ;;  i               1   29[BANK0 ] unsigned char 
  5557 ;;  i               1   24[BANK0 ] unsigned char 
  5558 ;;  i               1   23[BANK0 ] unsigned char 
  5559 ;;  i               1   22[BANK0 ] unsigned char 
  5560 ;;  i               1   21[BANK0 ] unsigned char 
  5561 ;;  j               1   34[BANK0 ] unsigned char 
  5562 ;;  j               1   33[BANK0 ] unsigned char 
  5563 ;;  j               1   30[BANK0 ] unsigned char 
  5564 ;;  j               1   32[BANK0 ] unsigned char 
  5565 ;;  j               1   31[BANK0 ] unsigned char 
  5566 ;;  j               1   26[BANK0 ] unsigned char 
  5567 ;;  S               4   16[BANK0 ] unsigned char [4]
  5568 ;;  dz              2   35[BANK0 ] short 
  5569 ;; Return value:  Size  Location     Type
  5570 ;;                  1    wreg      void 
  5571 ;; Registers used:
  5572 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5573 ;; Tracked objects:
  5574 ;;		On entry : 0/0
  5575 ;;		On exit  : 0/0
  5576 ;;		Unchanged: 0/0
  5577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5578 ;;      Params:         0       0       0       0       0       0
  5579 ;;      Locals:         0      21       0       0       0       0
  5580 ;;      Temps:          0       8       0       0       0       0
  5581 ;;      Totals:         0      29       0       0       0       0
  5582 ;;Total ram usage:       29 bytes
  5583 ;; Hardware stack levels used: 1
  5584 ;; Hardware stack levels required when called: 2
  5585 ;; This function calls:
  5586 ;;		___awdiv
  5587 ;;		___wmul
  5588 ;;		_biases1_read
  5589 ;;		_biases1_write
  5590 ;;		_biases2_read
  5591 ;;		_biases2_write
  5592 ;;		_de_sigmoid
  5593 ;;		_weights1_read
  5594 ;;		_weights1_write
  5595 ;;		_weights2_read
  5596 ;;		_weights2_write
  5597 ;; This function is called by:
  5598 ;;		_main
  5599 ;; This function uses a non-reentrant model
  5600 ;;
  5601                           
  5602     0544                     _ai_propagate:	
  5603                           ;psect for function _ai_propagate
  5604                           
  5605                           
  5606                           ;incstack = 0
  5607                           ; Regs used in _ai_propagate: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5608                           ;ai_propagate@incentive stored from wreg
  5609     0544  0020               	movlb	0	; select bank0
  5610     0545  00B4               	movwf	ai_propagate@incentive
  5611     0546                     l3098:
  5612                           
  5613                           ;ai.c: 145:     if(incentive == 0){
  5614     0546  0834               	movf	ai_propagate@incentive,w
  5615     0547  1D03               	btfss	3,2
  5616     0548  2D4A               	goto	u2031
  5617     0549  2D4B               	goto	u2030
  5618     054A                     u2031:
  5619     054A  2D4C               	goto	l3102
  5620     054B                     u2030:
  5621     054B  2FD8               	goto	l637
  5622     054C                     l3102:
  5623                           
  5624                           ;ai.c: 149:     if(incentive == -1){
  5625     054C  0A34               	incf	ai_propagate@incentive,w
  5626     054D  1D03               	btfss	3,2
  5627     054E  2D50               	goto	u2041
  5628     054F  2D51               	goto	u2040
  5629     0550                     u2041:
  5630     0550  2D52               	goto	l3106
  5631     0551                     u2040:
  5632     0551                     l3104:
  5633                           
  5634                           ;ai.c: 150:         incentive = 0;
  5635     0551  01B4               	clrf	ai_propagate@incentive
  5636     0552                     l3106:
  5637                           
  5638                           ;ai.c: 153:     uint8_t S[4];;ai.c: 154:     if(incentive == 0){
  5639     0552  0834               	movf	ai_propagate@incentive,w
  5640     0553  1D03               	btfss	3,2
  5641     0554  2D56               	goto	u2051
  5642     0555  2D57               	goto	u2050
  5643     0556                     u2051:
  5644     0556  2D6E               	goto	l3122
  5645     0557                     u2050:
  5646     0557                     l3108:
  5647                           
  5648                           ;ai.c: 155:         for(uint8_t i = 0; i < 4; i++){
  5649     0557  01B5               	clrf	ai_propagate@i
  5650     0558                     l3114:
  5651                           
  5652                           ;ai.c: 156:             S[i] = 255u;
  5653     0558  0835               	movf	ai_propagate@i,w
  5654     0559  3E30               	addlw	(low (ai_propagate@S| 0))& (0+255)
  5655     055A  0086               	movwf	6
  5656     055B  0187               	clrf	7
  5657     055C  30FF               	movlw	255
  5658     055D  0081               	movwf	1
  5659     055E                     l3116:
  5660                           
  5661                           ;ai.c: 157:         }
  5662     055E  3001               	movlw	1
  5663     055F  00A8               	movwf	??_ai_propagate
  5664     0560  0828               	movf	??_ai_propagate,w
  5665     0561  07B5               	addwf	ai_propagate@i,f
  5666     0562                     l3118:
  5667     0562  3004               	movlw	4
  5668     0563  0235               	subwf	ai_propagate@i,w
  5669     0564  1C03               	skipc
  5670     0565  2D67               	goto	u2061
  5671     0566  2D68               	goto	u2060
  5672     0567                     u2061:
  5673     0567  2D58               	goto	l3114
  5674     0568                     u2060:
  5675     0568                     l3120:
  5676                           
  5677                           ;ai.c: 158:         S[choice] = 0;
  5678     0568  0868               	movf	_choice,w
  5679     0569  3E30               	addlw	(low (ai_propagate@S| 0))& (0+255)
  5680     056A  0086               	movwf	6
  5681     056B  0187               	clrf	7
  5682     056C  0181               	clrf	1
  5683                           
  5684                           ;ai.c: 159:     } else{
  5685     056D  2D84               	goto	l3136
  5686     056E                     l3122:
  5687                           
  5688                           ;ai.c: 160:         for(uint8_t i = 0; i < 4; i++){
  5689     056E  01B6               	clrf	ai_propagate@i_922
  5690     056F                     l3128:
  5691                           
  5692                           ;ai.c: 161:             S[i] = 0;
  5693     056F  0836               	movf	ai_propagate@i_922,w
  5694     0570  3E30               	addlw	(low (ai_propagate@S| 0))& (0+255)
  5695     0571  0086               	movwf	6
  5696     0572  0187               	clrf	7
  5697     0573  0181               	clrf	1
  5698     0574                     l3130:
  5699                           
  5700                           ;ai.c: 162:         }
  5701     0574  3001               	movlw	1
  5702     0575  00A8               	movwf	??_ai_propagate
  5703     0576  0828               	movf	??_ai_propagate,w
  5704     0577  07B6               	addwf	ai_propagate@i_922,f
  5705     0578                     l3132:
  5706     0578  3004               	movlw	4
  5707     0579  0236               	subwf	ai_propagate@i_922,w
  5708     057A  1C03               	skipc
  5709     057B  2D7D               	goto	u2071
  5710     057C  2D7E               	goto	u2070
  5711     057D                     u2071:
  5712     057D  2D6F               	goto	l3128
  5713     057E                     u2070:
  5714     057E                     l3134:
  5715                           
  5716                           ;ai.c: 163:         S[choice] = 255u;
  5717     057E  0868               	movf	_choice,w
  5718     057F  3E30               	addlw	(low (ai_propagate@S| 0))& (0+255)
  5719     0580  0086               	movwf	6
  5720     0581  0187               	clrf	7
  5721     0582  30FF               	movlw	255
  5722     0583  0081               	movwf	1
  5723     0584                     l3136:
  5724                           
  5725                           ;ai.c: 166:     for(uint8_t j = 0; j < 4; j++){
  5726     0584  01BA               	clrf	ai_propagate@j
  5727     0585                     l3142:
  5728                           
  5729                           ;ai.c: 167:         DY1[j] = 0;
  5730     0585  083A               	movf	ai_propagate@j,w
  5731     0586  3E51               	addlw	(low (_DY1| 0))& (0+255)
  5732     0587  0086               	movwf	6
  5733     0588  0187               	clrf	7
  5734     0589  0181               	clrf	1
  5735                           
  5736                           ;ai.c: 168:         DB1[j] = 0;
  5737     058A  083A               	movf	ai_propagate@j,w
  5738     058B  3EBC               	addlw	(low (_DB1| 0))& (0+255)
  5739     058C  0086               	movwf	6
  5740     058D  0187               	clrf	7
  5741     058E  0181               	clrf	1
  5742     058F                     l3144:
  5743                           
  5744                           ;ai.c: 169:         for(uint8_t i = 0; i < 8; i++){
  5745     058F  01B7               	clrf	ai_propagate@i_924
  5746     0590                     l3150:
  5747                           
  5748                           ;ai.c: 170:             DW1[i][j] = 0;
  5749     0590  0837               	movf	ai_propagate@i_924,w
  5750     0591  00A8               	movwf	??_ai_propagate
  5751     0592  3002               	movlw	2
  5752     0593                     u2085:
  5753     0593  35A8               	lslf	??_ai_propagate,f
  5754     0594  0B89               	decfsz	9,f
  5755     0595  2D93               	goto	u2085
  5756     0596  3020               	movlw	(low (_DW1| (0+256)))& (0+255)
  5757     0597  0728               	addwf	??_ai_propagate,w
  5758     0598  00A9               	movwf	??_ai_propagate+1
  5759     0599  083A               	movf	ai_propagate@j,w
  5760     059A  0729               	addwf	??_ai_propagate+1,w
  5761     059B  00AA               	movwf	??_ai_propagate+2
  5762     059C  082A               	movf	??_ai_propagate+2,w
  5763     059D  0086               	movwf	6
  5764     059E  3001               	movlw	1	; select bank2/3
  5765     059F  0087               	movwf	7
  5766     05A0  0181               	clrf	1
  5767     05A1                     l3152:
  5768                           
  5769                           ;ai.c: 171:         }
  5770     05A1  3001               	movlw	1
  5771     05A2  00A8               	movwf	??_ai_propagate
  5772     05A3  0828               	movf	??_ai_propagate,w
  5773     05A4  07B7               	addwf	ai_propagate@i_924,f
  5774     05A5                     l3154:
  5775     05A5  3008               	movlw	8
  5776     05A6  0237               	subwf	ai_propagate@i_924,w
  5777     05A7  1C03               	skipc
  5778     05A8  2DAA               	goto	u2091
  5779     05A9  2DAB               	goto	u2090
  5780     05AA                     u2091:
  5781     05AA  2D90               	goto	l3150
  5782     05AB                     u2090:
  5783     05AB                     l3156:
  5784                           
  5785                           ;ai.c: 172:     }
  5786     05AB  3001               	movlw	1
  5787     05AC  00A8               	movwf	??_ai_propagate
  5788     05AD  0828               	movf	??_ai_propagate,w
  5789     05AE  07BA               	addwf	ai_propagate@j,f
  5790     05AF                     l3158:
  5791     05AF  3004               	movlw	4
  5792     05B0  023A               	subwf	ai_propagate@j,w
  5793     05B1  1C03               	skipc
  5794     05B2  2DB4               	goto	u2101
  5795     05B3  2DB5               	goto	u2100
  5796     05B4                     u2101:
  5797     05B4  2D85               	goto	l3142
  5798     05B5                     u2100:
  5799     05B5                     l3160:
  5800                           
  5801                           ;ai.c: 173:     for(uint8_t j = 0; j < 4; j++){
  5802     05B5  01BF               	clrf	ai_propagate@j_925
  5803     05B6                     l3166:
  5804                           
  5805                           ;ai.c: 174:         DY2[j] = (int8_t)(((int16_t)Y2[j] - (int16_t)S[j])>>1);
  5806     05B6  083F               	movf	ai_propagate@j_925,w
  5807     05B7  3EC0               	addlw	(low (_DY2| 0))& (0+255)
  5808     05B8  0086               	movwf	6
  5809     05B9  0187               	clrf	7
  5810     05BA  083F               	movf	ai_propagate@j_925,w
  5811     05BB  3E5D               	addlw	(low (_Y2| 0))& (0+255)
  5812     05BC  0084               	movwf	4
  5813     05BD  0185               	clrf	5
  5814     05BE  0800               	movf	0,w
  5815     05BF  00A8               	movwf	??_ai_propagate
  5816     05C0  01A9               	clrf	??_ai_propagate+1
  5817     05C1  083F               	movf	ai_propagate@j_925,w
  5818     05C2  3E30               	addlw	(low (ai_propagate@S| 0))& (0+255)
  5819     05C3  0084               	movwf	4
  5820     05C4  0185               	clrf	5
  5821     05C5  0829               	movf	??_ai_propagate+1,w
  5822     05C6  00AB               	movwf	??_ai_propagate+3
  5823     05C7  0800               	movf	0,w
  5824     05C8  0228               	subwf	??_ai_propagate,w
  5825     05C9  00AA               	movwf	??_ai_propagate+2
  5826     05CA  1C03               	skipc
  5827     05CB  03AB               	decf	??_ai_propagate+3,f
  5828     05CC  0D2B               	rlf	??_ai_propagate+3,w
  5829     05CD  0CAB               	rrf	??_ai_propagate+3,f
  5830     05CE  0CAA               	rrf	??_ai_propagate+2,f
  5831     05CF  082A               	movf	??_ai_propagate+2,w
  5832     05D0  0081               	movwf	1
  5833     05D1                     l3168:
  5834                           
  5835                           ;ai.c: 175:         DB2[j] = 0;
  5836     05D1  083F               	movf	ai_propagate@j_925,w
  5837     05D2  3EB8               	addlw	(low (_DB2| 0))& (0+255)
  5838     05D3  0086               	movwf	6
  5839     05D4  0187               	clrf	7
  5840     05D5  0181               	clrf	1
  5841     05D6                     l3170:
  5842                           
  5843                           ;ai.c: 176:         for(uint8_t i = 0; i < 4; i++){
  5844     05D6  01B8               	clrf	ai_propagate@i_926
  5845     05D7                     l3176:
  5846                           
  5847                           ;ai.c: 177:             DW2[i][j] = 0;
  5848     05D7  0838               	movf	ai_propagate@i_926,w
  5849     05D8  00A8               	movwf	??_ai_propagate
  5850     05D9  3002               	movlw	2
  5851     05DA                     u2115:
  5852     05DA  35A8               	lslf	??_ai_propagate,f
  5853     05DB  0B89               	decfsz	9,f
  5854     05DC  2DDA               	goto	u2115
  5855     05DD  30A0               	movlw	(low (_DW2| 0))& (0+255)
  5856     05DE  0728               	addwf	??_ai_propagate,w
  5857     05DF  00A9               	movwf	??_ai_propagate+1
  5858     05E0  083F               	movf	ai_propagate@j_925,w
  5859     05E1  0729               	addwf	??_ai_propagate+1,w
  5860     05E2  00AA               	movwf	??_ai_propagate+2
  5861     05E3  082A               	movf	??_ai_propagate+2,w
  5862     05E4  0086               	movwf	6
  5863     05E5  0187               	clrf	7
  5864     05E6  0181               	clrf	1
  5865     05E7                     l3178:
  5866                           
  5867                           ;ai.c: 178:         }
  5868     05E7  3001               	movlw	1
  5869     05E8  00A8               	movwf	??_ai_propagate
  5870     05E9  0828               	movf	??_ai_propagate,w
  5871     05EA  07B8               	addwf	ai_propagate@i_926,f
  5872     05EB                     l3180:
  5873     05EB  3004               	movlw	4
  5874     05EC  0238               	subwf	ai_propagate@i_926,w
  5875     05ED  1C03               	skipc
  5876     05EE  2DF0               	goto	u2121
  5877     05EF  2DF1               	goto	u2120
  5878     05F0                     u2121:
  5879     05F0  2DD7               	goto	l3176
  5880     05F1                     u2120:
  5881     05F1                     l3182:
  5882                           
  5883                           ;ai.c: 179:     }
  5884     05F1  3001               	movlw	1
  5885     05F2  00A8               	movwf	??_ai_propagate
  5886     05F3  0828               	movf	??_ai_propagate,w
  5887     05F4  07BF               	addwf	ai_propagate@j_925,f
  5888     05F5                     l3184:
  5889     05F5  3004               	movlw	4
  5890     05F6  023F               	subwf	ai_propagate@j_925,w
  5891     05F7  1C03               	skipc
  5892     05F8  2DFA               	goto	u2131
  5893     05F9  2DFB               	goto	u2130
  5894     05FA                     u2131:
  5895     05FA  2DB6               	goto	l3166
  5896     05FB                     u2130:
  5897     05FB                     l3186:
  5898                           
  5899                           ;ai.c: 181:     int16_t dz;;ai.c: 182:     for(uint8_t j = 0; j < 4; j++){
  5900     05FB  01C0               	clrf	ai_propagate@j_928
  5901     05FC                     l3192:
  5902                           
  5903                           ;ai.c: 183:         dz = (int16_t)de_sigmoid(Z2[j]);
  5904     05FC  0840               	movf	ai_propagate@j_928,w
  5905     05FD  3E55               	addlw	(low (_Z2| 0))& (0+255)
  5906     05FE  0086               	movwf	6
  5907     05FF  0187               	clrf	7
  5908     0600  0801               	movf	1,w
  5909     0601  318E  267F  3185   	fcall	_de_sigmoid
  5910     0604  0020               	movlb	0	; select bank0
  5911     0605  00A8               	movwf	??_ai_propagate
  5912     0606  01A9               	clrf	??_ai_propagate+1
  5913     0607  0828               	movf	??_ai_propagate,w
  5914     0608  00C3               	movwf	ai_propagate@dz
  5915     0609  0829               	movf	??_ai_propagate+1,w
  5916     060A  00C4               	movwf	ai_propagate@dz+1
  5917     060B                     l3194:
  5918                           
  5919                           ;ai.c: 184:         dz *= (int16_t)DY2[j];
  5920     060B  0840               	movf	ai_propagate@j_928,w
  5921     060C  3EC0               	addlw	(low (_DY2| 0))& (0+255)
  5922     060D  0086               	movwf	6
  5923     060E  0187               	clrf	7
  5924     060F  0801               	movf	1,w
  5925     0610  00F7               	movwf	___wmul@multiplier
  5926     0611  01F8               	clrf	___wmul@multiplier+1
  5927     0612  1BF7               	btfsc	___wmul@multiplier,7
  5928     0613  03F8               	decf	___wmul@multiplier+1,f
  5929     0614  0844               	movf	ai_propagate@dz+1,w
  5930     0615  00FA               	movwf	___wmul@multiplicand+1
  5931     0616  0843               	movf	ai_propagate@dz,w
  5932     0617  00F9               	movwf	___wmul@multiplicand
  5933     0618  3180  2006  3185   	fcall	___wmul
  5934     061B  0878               	movf	?___wmul+1,w
  5935     061C  0020               	movlb	0	; select bank0
  5936     061D  00C4               	movwf	ai_propagate@dz+1
  5937     061E  0877               	movf	?___wmul,w
  5938     061F  00C3               	movwf	ai_propagate@dz
  5939     0620                     l3196:
  5940                           
  5941                           ;ai.c: 185:         dz /= 255;
  5942     0620  30FF               	movlw	255
  5943     0621  00A0               	movwf	___awdiv@divisor
  5944     0622  3000               	movlw	0
  5945     0623  00A1               	movwf	___awdiv@divisor+1
  5946     0624  0844               	movf	ai_propagate@dz+1,w
  5947     0625  00A3               	movwf	___awdiv@dividend+1
  5948     0626  0843               	movf	ai_propagate@dz,w
  5949     0627  00A2               	movwf	___awdiv@dividend
  5950     0628  3181  212E  3185   	fcall	___awdiv
  5951     062B  0020               	movlb	0	; select bank0
  5952     062C  0821               	movf	?___awdiv+1,w
  5953     062D  00C4               	movwf	ai_propagate@dz+1
  5954     062E  0820               	movf	?___awdiv,w
  5955     062F  00C3               	movwf	ai_propagate@dz
  5956     0630                     l3198:
  5957                           
  5958                           ;ai.c: 187:         DB2[j] += (int8_t)dz;
  5959     0630  0843               	movf	ai_propagate@dz,w
  5960     0631  00A8               	movwf	??_ai_propagate
  5961     0632  0840               	movf	ai_propagate@j_928,w
  5962     0633  3EB8               	addlw	(low (_DB2| 0))& (0+255)
  5963     0634  0086               	movwf	6
  5964     0635  0187               	clrf	7
  5965     0636  0828               	movf	??_ai_propagate,w
  5966     0637  0781               	addwf	1,f
  5967     0638                     l3200:
  5968                           
  5969                           ;ai.c: 188:         for(uint8_t i = 0; i < 4; i++){
  5970     0638  01BD               	clrf	ai_propagate@i_929
  5971     0639                     l3206:
  5972                           
  5973                           ;ai.c: 189:             DY1[i] += (int8_t)((dz*(int16_t)weights2_read(i, j))/127);
  5974     0639  307F               	movlw	127
  5975     063A  00A0               	movwf	___awdiv@divisor
  5976     063B  3000               	movlw	0
  5977     063C  00A1               	movwf	___awdiv@divisor+1
  5978     063D  0840               	movf	ai_propagate@j_928,w
  5979     063E  00F4               	movwf	weights2_read@add2
  5980     063F  083D               	movf	ai_propagate@i_929,w
  5981     0640  318E  2660  3185   	fcall	_weights2_read
  5982     0643  00F7               	movwf	___wmul@multiplier
  5983     0644  01F8               	clrf	___wmul@multiplier+1
  5984     0645  1BF7               	btfsc	___wmul@multiplier,7
  5985     0646  03F8               	decf	___wmul@multiplier+1,f
  5986     0647  0020               	movlb	0	; select bank0
  5987     0648  0844               	movf	ai_propagate@dz+1,w
  5988     0649  00FA               	movwf	___wmul@multiplicand+1
  5989     064A  0843               	movf	ai_propagate@dz,w
  5990     064B  00F9               	movwf	___wmul@multiplicand
  5991     064C  3180  2006  3185   	fcall	___wmul
  5992     064F  0878               	movf	?___wmul+1,w
  5993     0650  0020               	movlb	0	; select bank0
  5994     0651  00A3               	movwf	___awdiv@dividend+1
  5995     0652  0877               	movf	?___wmul,w
  5996     0653  00A2               	movwf	___awdiv@dividend
  5997     0654  3181  212E  3185   	fcall	___awdiv
  5998     0657  0020               	movlb	0	; select bank0
  5999     0658  0820               	movf	?___awdiv,w
  6000     0659  00A8               	movwf	??_ai_propagate
  6001     065A  083D               	movf	ai_propagate@i_929,w
  6002     065B  3E51               	addlw	(low (_DY1| 0))& (0+255)
  6003     065C  0086               	movwf	6
  6004     065D  0187               	clrf	7
  6005     065E  0828               	movf	??_ai_propagate,w
  6006     065F  0781               	addwf	1,f
  6007                           
  6008                           ;ai.c: 190:             DW2[i][j] += (int8_t)(((dz*(int16_t)Y1[i])/127)>>1);
  6009     0660  307F               	movlw	127
  6010     0661  00A0               	movwf	___awdiv@divisor
  6011     0662  3000               	movlw	0
  6012     0663  00A1               	movwf	___awdiv@divisor+1
  6013     0664  083D               	movf	ai_propagate@i_929,w
  6014     0665  3E61               	addlw	(low (_Y1| 0))& (0+255)
  6015     0666  0086               	movwf	6
  6016     0667  0187               	clrf	7
  6017     0668  0801               	movf	1,w
  6018     0669  00A8               	movwf	??_ai_propagate
  6019     066A  01A9               	clrf	??_ai_propagate+1
  6020     066B  0828               	movf	??_ai_propagate,w
  6021     066C  00F7               	movwf	___wmul@multiplier
  6022     066D  0829               	movf	??_ai_propagate+1,w
  6023     066E  00F8               	movwf	___wmul@multiplier+1
  6024     066F  0844               	movf	ai_propagate@dz+1,w
  6025     0670  00FA               	movwf	___wmul@multiplicand+1
  6026     0671  0843               	movf	ai_propagate@dz,w
  6027     0672  00F9               	movwf	___wmul@multiplicand
  6028     0673  3180  2006  3185   	fcall	___wmul
  6029     0676  0878               	movf	?___wmul+1,w
  6030     0677  0020               	movlb	0	; select bank0
  6031     0678  00A3               	movwf	___awdiv@dividend+1
  6032     0679  0877               	movf	?___wmul,w
  6033     067A  00A2               	movwf	___awdiv@dividend
  6034     067B  3181  212E  3185   	fcall	___awdiv
  6035     067E  0020               	movlb	0	; select bank0
  6036     067F  0820               	movf	?___awdiv,w
  6037     0680  00AA               	movwf	??_ai_propagate+2
  6038     0681  0821               	movf	?___awdiv+1,w
  6039     0682  00AB               	movwf	??_ai_propagate+3
  6040     0683  0D2B               	rlf	??_ai_propagate+3,w
  6041     0684  0CAB               	rrf	??_ai_propagate+3,f
  6042     0685  0CAA               	rrf	??_ai_propagate+2,f
  6043     0686  082A               	movf	??_ai_propagate+2,w
  6044     0687  00AC               	movwf	??_ai_propagate+4
  6045     0688  083D               	movf	ai_propagate@i_929,w
  6046     0689  00AD               	movwf	??_ai_propagate+5
  6047     068A  3002               	movlw	2
  6048     068B                     u2145:
  6049     068B  35AD               	lslf	??_ai_propagate+5,f
  6050     068C  0B89               	decfsz	9,f
  6051     068D  2E8B               	goto	u2145
  6052     068E  30A0               	movlw	(low (_DW2| 0))& (0+255)
  6053     068F  072D               	addwf	??_ai_propagate+5,w
  6054     0690  00AE               	movwf	??_ai_propagate+6
  6055     0691  0840               	movf	ai_propagate@j_928,w
  6056     0692  072E               	addwf	??_ai_propagate+6,w
  6057     0693  00AF               	movwf	??_ai_propagate+7
  6058     0694  082F               	movf	??_ai_propagate+7,w
  6059     0695  0086               	movwf	6
  6060     0696  0187               	clrf	7
  6061     0697  082C               	movf	??_ai_propagate+4,w
  6062     0698  0781               	addwf	1,f
  6063     0699                     l3208:
  6064                           
  6065                           ;ai.c: 191:         }
  6066     0699  3001               	movlw	1
  6067     069A  00A8               	movwf	??_ai_propagate
  6068     069B  0828               	movf	??_ai_propagate,w
  6069     069C  07BD               	addwf	ai_propagate@i_929,f
  6070     069D                     l3210:
  6071     069D  3004               	movlw	4
  6072     069E  023D               	subwf	ai_propagate@i_929,w
  6073     069F  1C03               	skipc
  6074     06A0  2EA2               	goto	u2151
  6075     06A1  2EA3               	goto	u2150
  6076     06A2                     u2151:
  6077     06A2  2E39               	goto	l3206
  6078     06A3                     u2150:
  6079     06A3                     l3212:
  6080                           
  6081                           ;ai.c: 192:     }
  6082     06A3  3001               	movlw	1
  6083     06A4  00A8               	movwf	??_ai_propagate
  6084     06A5  0828               	movf	??_ai_propagate,w
  6085     06A6  07C0               	addwf	ai_propagate@j_928,f
  6086     06A7                     l3214:
  6087     06A7  3004               	movlw	4
  6088     06A8  0240               	subwf	ai_propagate@j_928,w
  6089     06A9  1C03               	skipc
  6090     06AA  2EAC               	goto	u2161
  6091     06AB  2EAD               	goto	u2160
  6092     06AC                     u2161:
  6093     06AC  2DFC               	goto	l3192
  6094     06AD                     u2160:
  6095     06AD                     l3216:
  6096                           
  6097                           ;ai.c: 193:     for(uint8_t j = 0; j < 4; j++){
  6098     06AD  01BE               	clrf	ai_propagate@j_930
  6099     06AE                     l3218:
  6100     06AE  3004               	movlw	4
  6101     06AF  023E               	subwf	ai_propagate@j_930,w
  6102     06B0  1C03               	skipc
  6103     06B1  2EB3               	goto	u2171
  6104     06B2  2EB4               	goto	u2170
  6105     06B3                     u2171:
  6106     06B3  2EB5               	goto	l3222
  6107     06B4                     u2170:
  6108     06B4  2F3D               	goto	l3246
  6109     06B5                     l3222:
  6110                           
  6111                           ;ai.c: 194:         dz = (int16_t)de_sigmoid(Z1[j]);
  6112     06B5  083E               	movf	ai_propagate@j_930,w
  6113     06B6  3E59               	addlw	(low (_Z1| 0))& (0+255)
  6114     06B7  0086               	movwf	6
  6115     06B8  0187               	clrf	7
  6116     06B9  0801               	movf	1,w
  6117     06BA  318E  267F  3185   	fcall	_de_sigmoid
  6118     06BD  0020               	movlb	0	; select bank0
  6119     06BE  00A8               	movwf	??_ai_propagate
  6120     06BF  01A9               	clrf	??_ai_propagate+1
  6121     06C0  0828               	movf	??_ai_propagate,w
  6122     06C1  00C3               	movwf	ai_propagate@dz
  6123     06C2  0829               	movf	??_ai_propagate+1,w
  6124     06C3  00C4               	movwf	ai_propagate@dz+1
  6125     06C4                     l3224:
  6126                           
  6127                           ;ai.c: 195:         dz *= (int16_t)DY1[j];
  6128     06C4  083E               	movf	ai_propagate@j_930,w
  6129     06C5  3E51               	addlw	(low (_DY1| 0))& (0+255)
  6130     06C6  0086               	movwf	6
  6131     06C7  0187               	clrf	7
  6132     06C8  0801               	movf	1,w
  6133     06C9  00F7               	movwf	___wmul@multiplier
  6134     06CA  01F8               	clrf	___wmul@multiplier+1
  6135     06CB  1BF7               	btfsc	___wmul@multiplier,7
  6136     06CC  03F8               	decf	___wmul@multiplier+1,f
  6137     06CD  0844               	movf	ai_propagate@dz+1,w
  6138     06CE  00FA               	movwf	___wmul@multiplicand+1
  6139     06CF  0843               	movf	ai_propagate@dz,w
  6140     06D0  00F9               	movwf	___wmul@multiplicand
  6141     06D1  3180  2006  3185   	fcall	___wmul
  6142     06D4  0878               	movf	?___wmul+1,w
  6143     06D5  0020               	movlb	0	; select bank0
  6144     06D6  00C4               	movwf	ai_propagate@dz+1
  6145     06D7  0877               	movf	?___wmul,w
  6146     06D8  00C3               	movwf	ai_propagate@dz
  6147     06D9                     l3226:
  6148                           
  6149                           ;ai.c: 196:         dz /= 255;
  6150     06D9  30FF               	movlw	255
  6151     06DA  00A0               	movwf	___awdiv@divisor
  6152     06DB  3000               	movlw	0
  6153     06DC  00A1               	movwf	___awdiv@divisor+1
  6154     06DD  0844               	movf	ai_propagate@dz+1,w
  6155     06DE  00A3               	movwf	___awdiv@dividend+1
  6156     06DF  0843               	movf	ai_propagate@dz,w
  6157     06E0  00A2               	movwf	___awdiv@dividend
  6158     06E1  3181  212E  3185   	fcall	___awdiv
  6159     06E4  0020               	movlb	0	; select bank0
  6160     06E5  0821               	movf	?___awdiv+1,w
  6161     06E6  00C4               	movwf	ai_propagate@dz+1
  6162     06E7  0820               	movf	?___awdiv,w
  6163     06E8  00C3               	movwf	ai_propagate@dz
  6164     06E9                     l3228:
  6165                           
  6166                           ;ai.c: 198:         DB1[j] += (int8_t)dz;
  6167     06E9  0843               	movf	ai_propagate@dz,w
  6168     06EA  00A8               	movwf	??_ai_propagate
  6169     06EB  083E               	movf	ai_propagate@j_930,w
  6170     06EC  3EBC               	addlw	(low (_DB1| 0))& (0+255)
  6171     06ED  0086               	movwf	6
  6172     06EE  0187               	clrf	7
  6173     06EF  0828               	movf	??_ai_propagate,w
  6174     06F0  0781               	addwf	1,f
  6175     06F1                     l3230:
  6176                           
  6177                           ;ai.c: 199:         for(uint8_t i = 0; i < 8; i++){
  6178     06F1  01B9               	clrf	ai_propagate@i_931
  6179     06F2                     l3232:
  6180     06F2  3008               	movlw	8
  6181     06F3  0239               	subwf	ai_propagate@i_931,w
  6182     06F4  1C03               	skipc
  6183     06F5  2EF7               	goto	u2181
  6184     06F6  2EF8               	goto	u2180
  6185     06F7                     u2181:
  6186     06F7  2EF9               	goto	l3236
  6187     06F8                     u2180:
  6188     06F8  2F38               	goto	l3242
  6189     06F9                     l3236:
  6190                           
  6191                           ;ai.c: 200:             DW1[i][j] += (int8_t)(((dz*(int16_t)Y0[i])/127)>>1);
  6192     06F9  307F               	movlw	127
  6193     06FA  00A0               	movwf	___awdiv@divisor
  6194     06FB  3000               	movlw	0
  6195     06FC  00A1               	movwf	___awdiv@divisor+1
  6196     06FD  0839               	movf	ai_propagate@i_931,w
  6197     06FE  3ED4               	addlw	(low (_Y0| 0))& (0+255)
  6198     06FF  0086               	movwf	6
  6199     0700  0187               	clrf	7
  6200     0701  0801               	movf	1,w
  6201     0702  00A8               	movwf	??_ai_propagate
  6202     0703  01A9               	clrf	??_ai_propagate+1
  6203     0704  0828               	movf	??_ai_propagate,w
  6204     0705  00F7               	movwf	___wmul@multiplier
  6205     0706  0829               	movf	??_ai_propagate+1,w
  6206     0707  00F8               	movwf	___wmul@multiplier+1
  6207     0708  0844               	movf	ai_propagate@dz+1,w
  6208     0709  00FA               	movwf	___wmul@multiplicand+1
  6209     070A  0843               	movf	ai_propagate@dz,w
  6210     070B  00F9               	movwf	___wmul@multiplicand
  6211     070C  3180  2006  3185   	fcall	___wmul
  6212     070F  0878               	movf	?___wmul+1,w
  6213     0710  0020               	movlb	0	; select bank0
  6214     0711  00A3               	movwf	___awdiv@dividend+1
  6215     0712  0877               	movf	?___wmul,w
  6216     0713  00A2               	movwf	___awdiv@dividend
  6217     0714  3181  212E  3185   	fcall	___awdiv
  6218     0717  0020               	movlb	0	; select bank0
  6219     0718  0820               	movf	?___awdiv,w
  6220     0719  00AA               	movwf	??_ai_propagate+2
  6221     071A  0821               	movf	?___awdiv+1,w
  6222     071B  00AB               	movwf	??_ai_propagate+3
  6223     071C  0D2B               	rlf	??_ai_propagate+3,w
  6224     071D  0CAB               	rrf	??_ai_propagate+3,f
  6225     071E  0CAA               	rrf	??_ai_propagate+2,f
  6226     071F  082A               	movf	??_ai_propagate+2,w
  6227     0720  00AC               	movwf	??_ai_propagate+4
  6228     0721  0839               	movf	ai_propagate@i_931,w
  6229     0722  00AD               	movwf	??_ai_propagate+5
  6230     0723  3002               	movlw	2
  6231     0724                     u2195:
  6232     0724  35AD               	lslf	??_ai_propagate+5,f
  6233     0725  0B89               	decfsz	9,f
  6234     0726  2F24               	goto	u2195
  6235     0727  3020               	movlw	(low (_DW1| (0+256)))& (0+255)
  6236     0728  072D               	addwf	??_ai_propagate+5,w
  6237     0729  00AE               	movwf	??_ai_propagate+6
  6238     072A  083E               	movf	ai_propagate@j_930,w
  6239     072B  072E               	addwf	??_ai_propagate+6,w
  6240     072C  00AF               	movwf	??_ai_propagate+7
  6241     072D  082F               	movf	??_ai_propagate+7,w
  6242     072E  0086               	movwf	6
  6243     072F  3001               	movlw	1	; select bank2/3
  6244     0730  0087               	movwf	7
  6245     0731  082C               	movf	??_ai_propagate+4,w
  6246     0732  0781               	addwf	1,f
  6247     0733                     l3238:
  6248                           
  6249                           ;ai.c: 201:         }
  6250     0733  3001               	movlw	1
  6251     0734  00A8               	movwf	??_ai_propagate
  6252     0735  0828               	movf	??_ai_propagate,w
  6253     0736  07B9               	addwf	ai_propagate@i_931,f
  6254     0737  2EF2               	goto	l3232
  6255     0738                     l3242:
  6256                           
  6257                           ;ai.c: 202:     }
  6258     0738  3001               	movlw	1
  6259     0739  00A8               	movwf	??_ai_propagate
  6260     073A  0828               	movf	??_ai_propagate,w
  6261     073B  07BE               	addwf	ai_propagate@j_930,f
  6262     073C  2EAE               	goto	l3218
  6263     073D                     l3246:
  6264                           
  6265                           ;ai.c: 204:     for(uint8_t j = 0; j < 4; j++){
  6266     073D  01C1               	clrf	ai_propagate@j_932
  6267     073E                     l3248:
  6268     073E  3004               	movlw	4
  6269     073F  0241               	subwf	ai_propagate@j_932,w
  6270     0740  1C03               	skipc
  6271     0741  2F43               	goto	u2201
  6272     0742  2F44               	goto	u2200
  6273     0743                     u2201:
  6274     0743  2F45               	goto	l3252
  6275     0744                     u2200:
  6276     0744  2F8A               	goto	l3270
  6277     0745                     l3252:
  6278                           
  6279                           ;ai.c: 205:         biases2_write(j, biases2_read(j) - DB2[j]);
  6280     0745  0841               	movf	ai_propagate@j_932,w
  6281     0746  3EB8               	addlw	(low (_DB2| 0))& (0+255)
  6282     0747  0086               	movwf	6
  6283     0748  0187               	clrf	7
  6284     0749  0841               	movf	ai_propagate@j_932,w
  6285     074A  318E  2616  3185   	fcall	_biases2_read
  6286     074D  0020               	movlb	0	; select bank0
  6287     074E  00A8               	movwf	??_ai_propagate
  6288     074F  0801               	movf	1,w
  6289     0750  0228               	subwf	??_ai_propagate,w
  6290     0751  00A4               	movwf	biases2_write@val
  6291     0752  0841               	movf	ai_propagate@j_932,w
  6292     0753  318E  262F  3185   	fcall	_biases2_write
  6293     0756                     l3254:
  6294                           
  6295                           ;ai.c: 206:         for(uint8_t i = 0; i < 4; i++){
  6296     0756  0020               	movlb	0	; select bank0
  6297     0757  01BB               	clrf	ai_propagate@i_933
  6298     0758                     l3256:
  6299     0758  3004               	movlw	4
  6300     0759  023B               	subwf	ai_propagate@i_933,w
  6301     075A  1C03               	skipc
  6302     075B  2F5D               	goto	u2211
  6303     075C  2F5E               	goto	u2210
  6304     075D                     u2211:
  6305     075D  2F5F               	goto	l3260
  6306     075E                     u2210:
  6307     075E  2F85               	goto	l3266
  6308     075F                     l3260:
  6309                           
  6310                           ;ai.c: 207:             weights2_write(i,j, weights2_read(i,j) - DW2[i][j]);
  6311     075F  0841               	movf	ai_propagate@j_932,w
  6312     0760  00A4               	movwf	weights2_write@add2
  6313     0761  083B               	movf	ai_propagate@i_933,w
  6314     0762  00A8               	movwf	??_ai_propagate
  6315     0763  3002               	movlw	2
  6316     0764                     u2225:
  6317     0764  35A8               	lslf	??_ai_propagate,f
  6318     0765  0B89               	decfsz	9,f
  6319     0766  2F64               	goto	u2225
  6320     0767  30A0               	movlw	(low (_DW2| 0))& (0+255)
  6321     0768  0728               	addwf	??_ai_propagate,w
  6322     0769  00A9               	movwf	??_ai_propagate+1
  6323     076A  0841               	movf	ai_propagate@j_932,w
  6324     076B  0729               	addwf	??_ai_propagate+1,w
  6325     076C  00AA               	movwf	??_ai_propagate+2
  6326     076D  082A               	movf	??_ai_propagate+2,w
  6327     076E  0086               	movwf	6
  6328     076F  0187               	clrf	7
  6329     0770  0841               	movf	ai_propagate@j_932,w
  6330     0771  00F4               	movwf	weights2_read@add2
  6331     0772  083B               	movf	ai_propagate@i_933,w
  6332     0773  318E  2660  3185   	fcall	_weights2_read
  6333     0776  0020               	movlb	0	; select bank0
  6334     0777  00AB               	movwf	??_ai_propagate+3
  6335     0778  0801               	movf	1,w
  6336     0779  022B               	subwf	??_ai_propagate+3,w
  6337     077A  00A5               	movwf	weights2_write@val
  6338     077B  083B               	movf	ai_propagate@i_933,w
  6339     077C  318E  26B0  3185   	fcall	_weights2_write
  6340     077F                     l3262:
  6341                           
  6342                           ;ai.c: 208:         }
  6343     077F  3001               	movlw	1
  6344     0780  0020               	movlb	0	; select bank0
  6345     0781  00A8               	movwf	??_ai_propagate
  6346     0782  0828               	movf	??_ai_propagate,w
  6347     0783  07BB               	addwf	ai_propagate@i_933,f
  6348     0784  2F58               	goto	l3256
  6349     0785                     l3266:
  6350                           
  6351                           ;ai.c: 209:     }
  6352     0785  3001               	movlw	1
  6353     0786  00A8               	movwf	??_ai_propagate
  6354     0787  0828               	movf	??_ai_propagate,w
  6355     0788  07C1               	addwf	ai_propagate@j_932,f
  6356     0789  2F3E               	goto	l3248
  6357     078A                     l3270:
  6358                           
  6359                           ;ai.c: 210:     for(uint8_t j = 0; j < 4; j++){
  6360     078A  01C2               	clrf	ai_propagate@j_934
  6361     078B                     l3272:
  6362     078B  3004               	movlw	4
  6363     078C  0242               	subwf	ai_propagate@j_934,w
  6364     078D  1C03               	skipc
  6365     078E  2F90               	goto	u2231
  6366     078F  2F91               	goto	u2230
  6367     0790                     u2231:
  6368     0790  2F92               	goto	l3276
  6369     0791                     u2230:
  6370     0791  2FD8               	goto	l637
  6371     0792                     l3276:
  6372                           
  6373                           ;ai.c: 211:         biases1_write(j, biases1_read(j) - DB1[j]);
  6374     0792  0842               	movf	ai_propagate@j_934,w
  6375     0793  3EBC               	addlw	(low (_DB1| 0))& (0+255)
  6376     0794  0086               	movwf	6
  6377     0795  0187               	clrf	7
  6378     0796  0842               	movf	ai_propagate@j_934,w
  6379     0797  318E  260F  3185   	fcall	_biases1_read
  6380     079A  0020               	movlb	0	; select bank0
  6381     079B  00A8               	movwf	??_ai_propagate
  6382     079C  0801               	movf	1,w
  6383     079D  0228               	subwf	??_ai_propagate,w
  6384     079E  00A4               	movwf	biases1_write@val
  6385     079F  0842               	movf	ai_propagate@j_934,w
  6386     07A0  318E  2625  3185   	fcall	_biases1_write
  6387     07A3                     l3278:
  6388                           
  6389                           ;ai.c: 212:         for(uint8_t i = 0; i < 8; i++){
  6390     07A3  0020               	movlb	0	; select bank0
  6391     07A4  01BC               	clrf	ai_propagate@i_935
  6392     07A5                     l3280:
  6393     07A5  3008               	movlw	8
  6394     07A6  023C               	subwf	ai_propagate@i_935,w
  6395     07A7  1C03               	skipc
  6396     07A8  2FAA               	goto	u2241
  6397     07A9  2FAB               	goto	u2240
  6398     07AA                     u2241:
  6399     07AA  2FAC               	goto	l3284
  6400     07AB                     u2240:
  6401     07AB  2FD3               	goto	l3290
  6402     07AC                     l3284:
  6403                           
  6404                           ;ai.c: 213:             weights1_write(i,j, weights1_read(i,j) - DW1[i][j]);
  6405     07AC  0842               	movf	ai_propagate@j_934,w
  6406     07AD  00A4               	movwf	weights1_write@add2
  6407     07AE  083C               	movf	ai_propagate@i_935,w
  6408     07AF  00A8               	movwf	??_ai_propagate
  6409     07B0  3002               	movlw	2
  6410     07B1                     u2255:
  6411     07B1  35A8               	lslf	??_ai_propagate,f
  6412     07B2  0B89               	decfsz	9,f
  6413     07B3  2FB1               	goto	u2255
  6414     07B4  3020               	movlw	(low (_DW1| (0+256)))& (0+255)
  6415     07B5  0728               	addwf	??_ai_propagate,w
  6416     07B6  00A9               	movwf	??_ai_propagate+1
  6417     07B7  0842               	movf	ai_propagate@j_934,w
  6418     07B8  0729               	addwf	??_ai_propagate+1,w
  6419     07B9  00AA               	movwf	??_ai_propagate+2
  6420     07BA  082A               	movf	??_ai_propagate+2,w
  6421     07BB  0086               	movwf	6
  6422     07BC  3001               	movlw	1	; select bank2/3
  6423     07BD  0087               	movwf	7
  6424     07BE  0842               	movf	ai_propagate@j_934,w
  6425     07BF  00F4               	movwf	weights1_read@add2
  6426     07C0  083C               	movf	ai_propagate@i_935,w
  6427     07C1  318E  2652  3185   	fcall	_weights1_read
  6428     07C4  0020               	movlb	0	; select bank0
  6429     07C5  00AB               	movwf	??_ai_propagate+3
  6430     07C6  0801               	movf	1,w
  6431     07C7  022B               	subwf	??_ai_propagate+3,w
  6432     07C8  00A5               	movwf	weights1_write@val
  6433     07C9  083C               	movf	ai_propagate@i_935,w
  6434     07CA  318E  269F  3185   	fcall	_weights1_write
  6435     07CD                     l3286:
  6436                           
  6437                           ;ai.c: 214:         }
  6438     07CD  3001               	movlw	1
  6439     07CE  0020               	movlb	0	; select bank0
  6440     07CF  00A8               	movwf	??_ai_propagate
  6441     07D0  0828               	movf	??_ai_propagate,w
  6442     07D1  07BC               	addwf	ai_propagate@i_935,f
  6443     07D2  2FA5               	goto	l3280
  6444     07D3                     l3290:
  6445                           
  6446                           ;ai.c: 215:     }
  6447     07D3  3001               	movlw	1
  6448     07D4  00A8               	movwf	??_ai_propagate
  6449     07D5  0828               	movf	??_ai_propagate,w
  6450     07D6  07C2               	addwf	ai_propagate@j_934,f
  6451     07D7  2F8B               	goto	l3272
  6452     07D8                     l637:
  6453     07D8  0008               	return
  6454     07D9                     __end_of_ai_propagate:
  6455                           
  6456                           	psect	text17
  6457     0E60                     __ptext17:	
  6458 ;; *************** function _weights2_read *****************
  6459 ;; Defined at:
  6460 ;;		line 38 in file "ai.c"
  6461 ;; Parameters:    Size  Location     Type
  6462 ;;  add1            1    wreg     unsigned char 
  6463 ;;  add2            1    4[COMMON] unsigned char 
  6464 ;; Auto vars:     Size  Location     Type
  6465 ;;  add1            1    6[COMMON] unsigned char 
  6466 ;; Return value:  Size  Location     Type
  6467 ;;                  1    wreg      char 
  6468 ;; Registers used:
  6469 ;;		wreg, status,2, status,0, pclath, cstack
  6470 ;; Tracked objects:
  6471 ;;		On entry : 0/0
  6472 ;;		On exit  : 0/0
  6473 ;;		Unchanged: 0/0
  6474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6475 ;;      Params:         1       0       0       0       0       0
  6476 ;;      Locals:         1       0       0       0       0       0
  6477 ;;      Temps:          1       0       0       0       0       0
  6478 ;;      Totals:         3       0       0       0       0       0
  6479 ;;Total ram usage:        3 bytes
  6480 ;; Hardware stack levels used: 1
  6481 ;; Hardware stack levels required when called: 1
  6482 ;; This function calls:
  6483 ;;		_eeprom_read
  6484 ;; This function is called by:
  6485 ;;		_ai_run
  6486 ;;		_ai_propagate
  6487 ;;		_printAI
  6488 ;; This function uses a non-reentrant model
  6489 ;;
  6490                           
  6491     0E60                     _weights2_read:	
  6492                           ;psect for function _weights2_read
  6493                           
  6494                           
  6495                           ;incstack = 0
  6496                           ; Regs used in _weights2_read: [wreg+status,2+status,0+pclath+cstack]
  6497                           ;weights2_read@add1 stored from wreg
  6498     0E60  00F6               	movwf	weights2_read@add1
  6499     0E61                     l2710:
  6500                           
  6501                           ;ai.c: 39:     return (int8_t)eeprom_read(0 +8*4 +4 + add1*4 + add2);
  6502     0E61  0876               	movf	weights2_read@add1,w
  6503     0E62  00F5               	movwf	??_weights2_read
  6504     0E63  3001               	movlw	1
  6505     0E64                     u1495:
  6506     0E64  35F5               	lslf	??_weights2_read,f
  6507     0E65  3EFF               	addlw	-1
  6508     0E66  1D03               	skipz
  6509     0E67  2E64               	goto	u1495
  6510     0E68  3575               	lslf	??_weights2_read,w
  6511     0E69  0774               	addwf	weights2_read@add2,w
  6512     0E6A  3E24               	addlw	36
  6513     0E6B  318E  26E6  318E   	fcall	_eeprom_read
  6514     0E6E                     l571:
  6515     0E6E  0008               	return
  6516     0E6F                     __end_of_weights2_read:
  6517                           
  6518                           	psect	text18
  6519     0E52                     __ptext18:	
  6520 ;; *************** function _weights1_read *****************
  6521 ;; Defined at:
  6522 ;;		line 32 in file "ai.c"
  6523 ;; Parameters:    Size  Location     Type
  6524 ;;  add1            1    wreg     unsigned char 
  6525 ;;  add2            1    4[COMMON] unsigned char 
  6526 ;; Auto vars:     Size  Location     Type
  6527 ;;  add1            1    6[COMMON] unsigned char 
  6528 ;; Return value:  Size  Location     Type
  6529 ;;                  1    wreg      char 
  6530 ;; Registers used:
  6531 ;;		wreg, status,2, status,0, pclath, cstack
  6532 ;; Tracked objects:
  6533 ;;		On entry : 0/0
  6534 ;;		On exit  : 0/0
  6535 ;;		Unchanged: 0/0
  6536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6537 ;;      Params:         1       0       0       0       0       0
  6538 ;;      Locals:         1       0       0       0       0       0
  6539 ;;      Temps:          1       0       0       0       0       0
  6540 ;;      Totals:         3       0       0       0       0       0
  6541 ;;Total ram usage:        3 bytes
  6542 ;; Hardware stack levels used: 1
  6543 ;; Hardware stack levels required when called: 1
  6544 ;; This function calls:
  6545 ;;		_eeprom_read
  6546 ;; This function is called by:
  6547 ;;		_ai_run
  6548 ;;		_ai_propagate
  6549 ;; This function uses a non-reentrant model
  6550 ;;
  6551                           
  6552     0E52                     _weights1_read:	
  6553                           ;psect for function _weights1_read
  6554                           
  6555                           
  6556                           ;incstack = 0
  6557                           ; Regs used in _weights1_read: [wreg+status,2+status,0+pclath+cstack]
  6558                           ;weights1_read@add1 stored from wreg
  6559     0E52  00F6               	movwf	weights1_read@add1
  6560     0E53                     l2702:
  6561                           
  6562                           ;ai.c: 33:     return (int8_t)eeprom_read(0 + add1*8 + add2);
  6563     0E53  0876               	movf	weights1_read@add1,w
  6564     0E54  00F5               	movwf	??_weights1_read
  6565     0E55  3002               	movlw	2
  6566     0E56                     u1485:
  6567     0E56  35F5               	lslf	??_weights1_read,f
  6568     0E57  3EFF               	addlw	-1
  6569     0E58  1D03               	skipz
  6570     0E59  2E56               	goto	u1485
  6571     0E5A  3575               	lslf	??_weights1_read,w
  6572     0E5B  0774               	addwf	weights1_read@add2,w
  6573     0E5C  318E  26E6  318E   	fcall	_eeprom_read
  6574     0E5F                     l565:
  6575     0E5F  0008               	return
  6576     0E60                     __end_of_weights1_read:
  6577                           
  6578                           	psect	text19
  6579     0E7F                     __ptext19:	
  6580 ;; *************** function _de_sigmoid *****************
  6581 ;; Defined at:
  6582 ;;		line 12 in file "sigmoid.c"
  6583 ;; Parameters:    Size  Location     Type
  6584 ;;  z               1    wreg     char 
  6585 ;; Auto vars:     Size  Location     Type
  6586 ;;  z               1    1[COMMON] char 
  6587 ;; Return value:  Size  Location     Type
  6588 ;;                  1    wreg      unsigned char 
  6589 ;; Registers used:
  6590 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  6591 ;; Tracked objects:
  6592 ;;		On entry : 0/0
  6593 ;;		On exit  : 0/0
  6594 ;;		Unchanged: 0/0
  6595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6596 ;;      Params:         0       0       0       0       0       0
  6597 ;;      Locals:         1       0       0       0       0       0
  6598 ;;      Temps:          1       0       0       0       0       0
  6599 ;;      Totals:         2       0       0       0       0       0
  6600 ;;Total ram usage:        2 bytes
  6601 ;; Hardware stack levels used: 1
  6602 ;; This function calls:
  6603 ;;		Nothing
  6604 ;; This function is called by:
  6605 ;;		_ai_propagate
  6606 ;; This function uses a non-reentrant model
  6607 ;;
  6608                           
  6609     0E7F                     _de_sigmoid:	
  6610                           ;psect for function _de_sigmoid
  6611                           
  6612                           
  6613                           ;incstack = 0
  6614                           ; Regs used in _de_sigmoid: [wreg-fsr0h+status,2+status,0+pclath]
  6615                           ;de_sigmoid@z stored from wreg
  6616     0E7F  00F1               	movwf	de_sigmoid@z
  6617     0E80                     l2722:
  6618                           
  6619                           ;sigmoid.c: 13:     return de_sigmoidValues[((uint8_t)z)>>4];
  6620     0E80  0871               	movf	de_sigmoid@z,w
  6621     0E81  00F0               	movwf	??_de_sigmoid
  6622     0E82  3004               	movlw	4
  6623     0E83                     u1515:
  6624     0E83  36F0               	lsrf	??_de_sigmoid,f
  6625     0E84  0B89               	decfsz	9,f
  6626     0E85  2E83               	goto	u1515
  6627     0E86  0870               	movf	??_de_sigmoid,w
  6628     0E87  3E00               	addlw	low (_de_sigmoidValues| (0+32768))
  6629     0E88  0084               	movwf	4
  6630     0E89  3088               	movlw	high (_de_sigmoidValues| (0+32768))
  6631     0E8A  1803               	skipnc
  6632     0E8B  3E01               	addlw	1
  6633     0E8C  0085               	movwf	5
  6634     0E8D  0800               	movf	0,w	;code access
  6635     0E8E                     l689:
  6636     0E8E  0008               	return
  6637     0E8F                     __end_of_de_sigmoid:
  6638                           
  6639                           	psect	text20
  6640     0E16                     __ptext20:	
  6641 ;; *************** function _biases2_read *****************
  6642 ;; Defined at:
  6643 ;;		line 41 in file "ai.c"
  6644 ;; Parameters:    Size  Location     Type
  6645 ;;  add             1    wreg     unsigned char 
  6646 ;; Auto vars:     Size  Location     Type
  6647 ;;  add             1    4[COMMON] unsigned char 
  6648 ;; Return value:  Size  Location     Type
  6649 ;;                  1    wreg      char 
  6650 ;; Registers used:
  6651 ;;		wreg, status,2, status,0, pclath, cstack
  6652 ;; Tracked objects:
  6653 ;;		On entry : 0/0
  6654 ;;		On exit  : 0/0
  6655 ;;		Unchanged: 0/0
  6656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6657 ;;      Params:         0       0       0       0       0       0
  6658 ;;      Locals:         1       0       0       0       0       0
  6659 ;;      Temps:          0       0       0       0       0       0
  6660 ;;      Totals:         1       0       0       0       0       0
  6661 ;;Total ram usage:        1 bytes
  6662 ;; Hardware stack levels used: 1
  6663 ;; Hardware stack levels required when called: 1
  6664 ;; This function calls:
  6665 ;;		_eeprom_read
  6666 ;; This function is called by:
  6667 ;;		_ai_run
  6668 ;;		_ai_propagate
  6669 ;;		_printAI
  6670 ;; This function uses a non-reentrant model
  6671 ;;
  6672                           
  6673     0E16                     _biases2_read:	
  6674                           ;psect for function _biases2_read
  6675                           
  6676                           
  6677                           ;incstack = 0
  6678                           ; Regs used in _biases2_read: [wreg+status,2+status,0+pclath+cstack]
  6679                           ;biases2_read@add stored from wreg
  6680     0E16  00F4               	movwf	biases2_read@add
  6681     0E17                     l2714:
  6682                           
  6683                           ;ai.c: 42:     return (int8_t)eeprom_read(0 +8*4 +4 +4*4 + add);
  6684     0E17  0874               	movf	biases2_read@add,w
  6685     0E18  3E34               	addlw	52
  6686     0E19  318E  26E6  318E   	fcall	_eeprom_read
  6687     0E1C                     l574:
  6688     0E1C  0008               	return
  6689     0E1D                     __end_of_biases2_read:
  6690                           
  6691                           	psect	text21
  6692     0E0F                     __ptext21:	
  6693 ;; *************** function _biases1_read *****************
  6694 ;; Defined at:
  6695 ;;		line 35 in file "ai.c"
  6696 ;; Parameters:    Size  Location     Type
  6697 ;;  add             1    wreg     unsigned char 
  6698 ;; Auto vars:     Size  Location     Type
  6699 ;;  add             1    4[COMMON] unsigned char 
  6700 ;; Return value:  Size  Location     Type
  6701 ;;                  1    wreg      char 
  6702 ;; Registers used:
  6703 ;;		wreg, status,2, status,0, pclath, cstack
  6704 ;; Tracked objects:
  6705 ;;		On entry : 0/0
  6706 ;;		On exit  : 0/0
  6707 ;;		Unchanged: 0/0
  6708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6709 ;;      Params:         0       0       0       0       0       0
  6710 ;;      Locals:         1       0       0       0       0       0
  6711 ;;      Temps:          0       0       0       0       0       0
  6712 ;;      Totals:         1       0       0       0       0       0
  6713 ;;Total ram usage:        1 bytes
  6714 ;; Hardware stack levels used: 1
  6715 ;; Hardware stack levels required when called: 1
  6716 ;; This function calls:
  6717 ;;		_eeprom_read
  6718 ;; This function is called by:
  6719 ;;		_ai_run
  6720 ;;		_ai_propagate
  6721 ;; This function uses a non-reentrant model
  6722 ;;
  6723                           
  6724     0E0F                     _biases1_read:	
  6725                           ;psect for function _biases1_read
  6726                           
  6727                           
  6728                           ;incstack = 0
  6729                           ; Regs used in _biases1_read: [wreg+status,2+status,0+pclath+cstack]
  6730                           ;biases1_read@add stored from wreg
  6731     0E0F  00F4               	movwf	biases1_read@add
  6732     0E10                     l2706:
  6733                           
  6734                           ;ai.c: 36:     return (int8_t)eeprom_read(0 +8*4 + add);
  6735     0E10  0874               	movf	biases1_read@add,w
  6736     0E11  3E20               	addlw	32
  6737     0E12  318E  26E6  318E   	fcall	_eeprom_read
  6738     0E15                     l568:
  6739     0E15  0008               	return
  6740     0E16                     __end_of_biases1_read:
  6741                           
  6742                           	psect	text22
  6743     0EE6                     __ptext22:	
  6744 ;; *************** function _eeprom_read *****************
  6745 ;; Defined at:
  6746 ;;		line 6 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\pic\__eeread.c"
  6747 ;; Parameters:    Size  Location     Type
  6748 ;;  addr            1    wreg     unsigned char 
  6749 ;; Auto vars:     Size  Location     Type
  6750 ;;  addr            1    3[COMMON] unsigned char 
  6751 ;; Return value:  Size  Location     Type
  6752 ;;                  1    wreg      unsigned char 
  6753 ;; Registers used:
  6754 ;;		wreg, status,2, status,0
  6755 ;; Tracked objects:
  6756 ;;		On entry : 0/0
  6757 ;;		On exit  : 0/0
  6758 ;;		Unchanged: 0/0
  6759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6760 ;;      Params:         0       0       0       0       0       0
  6761 ;;      Locals:         1       0       0       0       0       0
  6762 ;;      Temps:          3       0       0       0       0       0
  6763 ;;      Totals:         4       0       0       0       0       0
  6764 ;;Total ram usage:        4 bytes
  6765 ;; Hardware stack levels used: 1
  6766 ;; This function calls:
  6767 ;;		Nothing
  6768 ;; This function is called by:
  6769 ;;		_weights1_read
  6770 ;;		_biases1_read
  6771 ;;		_weights2_read
  6772 ;;		_biases2_read
  6773 ;;		_ai_is_ai_initiated_write
  6774 ;;		_ai_is_ai_initiated_read
  6775 ;;		_ai_is_ai_trained_write
  6776 ;;		_ai_is_ai_trained_read
  6777 ;;		_ai_maxScore_read
  6778 ;;		_ai_scores_read
  6779 ;; This function uses a non-reentrant model
  6780 ;;
  6781                           
  6782     0EE6                     _eeprom_read:	
  6783                           ;psect for function _eeprom_read
  6784                           
  6785                           
  6786                           ;incstack = 0
  6787                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  6788                           ;eeprom_read@addr stored from wreg
  6789     0EE6  00F3               	movwf	eeprom_read@addr
  6790     0EE7                     l846:	
  6791                           ;D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\pic\__eeread.c: 6: eeprom_read(unsig
      +                          ned char addr);D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\pic\__eeread.c: 7: {;D
      +                          :\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\pic\__eeread.c: 8:  do
  6792                           
  6793     0EE7  0064               	clrwdt	;# 
  6794     0EE8  0023               	movlb	3	; select bank3
  6795     0EE9  1895               	btfsc	21,1	;volsfr
  6796     0EEA  2EEC               	goto	u1381
  6797     0EEB  2EED               	goto	u1380
  6798     0EEC                     u1381:
  6799     0EEC  2EE7               	goto	l846
  6800     0EED                     u1380:
  6801     0EED                     l2618:
  6802                           
  6803                           ;D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\pic\__eeread.c: 18:  return ( EEADR 
      +                          = addr, EECON1 &= 0x3F, EECON1bits.RD = 1, EEDATA);
  6804     0EED  0873               	movf	eeprom_read@addr,w
  6805     0EEE  00F0               	movwf	??_eeprom_read
  6806     0EEF  01F1               	clrf	??_eeprom_read+1
  6807     0EF0  0870               	movf	??_eeprom_read,w
  6808     0EF1  0091               	movwf	17	;volatile
  6809     0EF2  0871               	movf	??_eeprom_read+1,w
  6810     0EF3  0092               	movwf	18	;volatile
  6811     0EF4  303F               	movlw	63
  6812     0EF5  00F2               	movwf	??_eeprom_read+2
  6813     0EF6  0872               	movf	??_eeprom_read+2,w
  6814     0EF7  0595               	andwf	21,f	;volsfr
  6815     0EF8  1415               	bsf	21,0	;volsfr
  6816     0EF9  0813               	movf	19,w	;volatile
  6817     0EFA                     l848:
  6818     0EFA  0008               	return
  6819     0EFB                     __end_of_eeprom_read:
  6820                           
  6821                           	psect	text23
  6822     0006                     __ptext23:	
  6823 ;; *************** function ___wmul *****************
  6824 ;; Defined at:
  6825 ;;		line 15 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  6826 ;; Parameters:    Size  Location     Type
  6827 ;;  multiplier      2    7[COMMON] unsigned int 
  6828 ;;  multiplicand    2    9[COMMON] unsigned int 
  6829 ;; Auto vars:     Size  Location     Type
  6830 ;;  product         2   11[COMMON] unsigned int 
  6831 ;; Return value:  Size  Location     Type
  6832 ;;                  2    7[COMMON] unsigned int 
  6833 ;; Registers used:
  6834 ;;		wreg, status,2, status,0
  6835 ;; Tracked objects:
  6836 ;;		On entry : 0/0
  6837 ;;		On exit  : 0/0
  6838 ;;		Unchanged: 0/0
  6839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6840 ;;      Params:         4       0       0       0       0       0
  6841 ;;      Locals:         2       0       0       0       0       0
  6842 ;;      Temps:          0       0       0       0       0       0
  6843 ;;      Totals:         6       0       0       0       0       0
  6844 ;;Total ram usage:        6 bytes
  6845 ;; Hardware stack levels used: 1
  6846 ;; This function calls:
  6847 ;;		Nothing
  6848 ;; This function is called by:
  6849 ;;		_ai_run
  6850 ;;		_ai_propagate
  6851 ;; This function uses a non-reentrant model
  6852 ;;
  6853                           
  6854     0006                     ___wmul:	
  6855                           ;psect for function ___wmul
  6856                           
  6857     0006                     l2726:	
  6858                           ;incstack = 0
  6859                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6860                           
  6861     0006  01FB               	clrf	___wmul@product
  6862     0007  01FC               	clrf	___wmul@product+1
  6863     0008                     l2728:
  6864     0008  1C77               	btfss	___wmul@multiplier,0
  6865     0009  280B               	goto	u1521
  6866     000A  280C               	goto	u1520
  6867     000B                     u1521:
  6868     000B  2810               	goto	l876
  6869     000C                     u1520:
  6870     000C                     l2730:
  6871     000C  0879               	movf	___wmul@multiplicand,w
  6872     000D  07FB               	addwf	___wmul@product,f
  6873     000E  087A               	movf	___wmul@multiplicand+1,w
  6874     000F  3DFC               	addwfc	___wmul@product+1,f
  6875     0010                     l876:
  6876     0010  3001               	movlw	1
  6877     0011                     u1535:
  6878     0011  35F9               	lslf	___wmul@multiplicand,f
  6879     0012  0DFA               	rlf	___wmul@multiplicand+1,f
  6880     0013  0B89               	decfsz	9,f
  6881     0014  2811               	goto	u1535
  6882     0015                     l2732:
  6883     0015  3001               	movlw	1
  6884     0016                     u1545:
  6885     0016  36F8               	lsrf	___wmul@multiplier+1,f
  6886     0017  0CF7               	rrf	___wmul@multiplier,f
  6887     0018  0B89               	decfsz	9,f
  6888     0019  2816               	goto	u1545
  6889     001A                     l2734:
  6890     001A  0877               	movf	___wmul@multiplier,w
  6891     001B  0478               	iorwf	___wmul@multiplier+1,w
  6892     001C  1D03               	btfss	3,2
  6893     001D  281F               	goto	u1551
  6894     001E  2820               	goto	u1550
  6895     001F                     u1551:
  6896     001F  2808               	goto	l2728
  6897     0020                     u1550:
  6898     0020                     l2736:
  6899     0020  087C               	movf	___wmul@product+1,w
  6900     0021  00F8               	movwf	?___wmul+1
  6901     0022  087B               	movf	___wmul@product,w
  6902     0023  00F7               	movwf	?___wmul
  6903     0024                     l878:
  6904     0024  0008               	return
  6905     0025                     __end_of___wmul:
  6906                           
  6907                           	psect	text24
  6908     012E                     __ptext24:	
  6909 ;; *************** function ___awdiv *****************
  6910 ;; Defined at:
  6911 ;;		line 5 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
  6912 ;; Parameters:    Size  Location     Type
  6913 ;;  divisor         2    0[BANK0 ] int 
  6914 ;;  dividend        2    2[BANK0 ] int 
  6915 ;; Auto vars:     Size  Location     Type
  6916 ;;  quotient        2    6[BANK0 ] int 
  6917 ;;  sign            1    5[BANK0 ] unsigned char 
  6918 ;;  counter         1    4[BANK0 ] unsigned char 
  6919 ;; Return value:  Size  Location     Type
  6920 ;;                  2    0[BANK0 ] int 
  6921 ;; Registers used:
  6922 ;;		wreg, status,2, status,0
  6923 ;; Tracked objects:
  6924 ;;		On entry : 0/0
  6925 ;;		On exit  : 0/0
  6926 ;;		Unchanged: 0/0
  6927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6928 ;;      Params:         0       4       0       0       0       0
  6929 ;;      Locals:         0       4       0       0       0       0
  6930 ;;      Temps:          1       0       0       0       0       0
  6931 ;;      Totals:         1       8       0       0       0       0
  6932 ;;Total ram usage:        9 bytes
  6933 ;; Hardware stack levels used: 1
  6934 ;; This function calls:
  6935 ;;		Nothing
  6936 ;; This function is called by:
  6937 ;;		_main
  6938 ;;		_snake_move
  6939 ;;		_snake_getSurroundings
  6940 ;;		_ai_run
  6941 ;;		_ai_propagate
  6942 ;; This function uses a non-reentrant model
  6943 ;;
  6944                           
  6945     012E                     ___awdiv:	
  6946                           ;psect for function ___awdiv
  6947                           
  6948     012E                     l2740:	
  6949                           ;incstack = 0
  6950                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  6951                           
  6952     012E  0020               	movlb	0	; select bank0
  6953     012F  01A5               	clrf	___awdiv@sign
  6954     0130                     l2742:
  6955     0130  1FA1               	btfss	___awdiv@divisor+1,7
  6956     0131  2933               	goto	u1561
  6957     0132  2934               	goto	u1560
  6958     0133                     u1561:
  6959     0133  293B               	goto	l2748
  6960     0134                     u1560:
  6961     0134                     l2744:
  6962     0134  09A0               	comf	___awdiv@divisor,f
  6963     0135  09A1               	comf	___awdiv@divisor+1,f
  6964     0136  0AA0               	incf	___awdiv@divisor,f
  6965     0137  1903               	skipnz
  6966     0138  0AA1               	incf	___awdiv@divisor+1,f
  6967     0139                     l2746:
  6968     0139  01A5               	clrf	___awdiv@sign
  6969     013A  0AA5               	incf	___awdiv@sign,f
  6970     013B                     l2748:
  6971     013B  1FA3               	btfss	___awdiv@dividend+1,7
  6972     013C  293E               	goto	u1571
  6973     013D  293F               	goto	u1570
  6974     013E                     u1571:
  6975     013E  2948               	goto	l2754
  6976     013F                     u1570:
  6977     013F                     l2750:
  6978     013F  09A2               	comf	___awdiv@dividend,f
  6979     0140  09A3               	comf	___awdiv@dividend+1,f
  6980     0141  0AA2               	incf	___awdiv@dividend,f
  6981     0142  1903               	skipnz
  6982     0143  0AA3               	incf	___awdiv@dividend+1,f
  6983     0144                     l2752:
  6984     0144  3001               	movlw	1
  6985     0145  00FD               	movwf	??___awdiv
  6986     0146  087D               	movf	??___awdiv,w
  6987     0147  06A5               	xorwf	___awdiv@sign,f
  6988     0148                     l2754:
  6989     0148  01A6               	clrf	___awdiv@quotient
  6990     0149  01A7               	clrf	___awdiv@quotient+1
  6991     014A                     l2756:
  6992     014A  0820               	movf	___awdiv@divisor,w
  6993     014B  0421               	iorwf	___awdiv@divisor+1,w
  6994     014C  1903               	btfsc	3,2
  6995     014D  294F               	goto	u1581
  6996     014E  2950               	goto	u1580
  6997     014F                     u1581:
  6998     014F  297F               	goto	l2776
  6999     0150                     u1580:
  7000     0150                     l2758:
  7001     0150  01A4               	clrf	___awdiv@counter
  7002     0151  0AA4               	incf	___awdiv@counter,f
  7003     0152  295C               	goto	l2764
  7004     0153                     l2760:
  7005     0153  3001               	movlw	1
  7006     0154                     u1595:
  7007     0154  35A0               	lslf	___awdiv@divisor,f
  7008     0155  0DA1               	rlf	___awdiv@divisor+1,f
  7009     0156  0B89               	decfsz	9,f
  7010     0157  2954               	goto	u1595
  7011     0158                     l2762:
  7012     0158  3001               	movlw	1
  7013     0159  00FD               	movwf	??___awdiv
  7014     015A  087D               	movf	??___awdiv,w
  7015     015B  07A4               	addwf	___awdiv@counter,f
  7016     015C                     l2764:
  7017     015C  1FA1               	btfss	___awdiv@divisor+1,7
  7018     015D  295F               	goto	u1601
  7019     015E  2960               	goto	u1600
  7020     015F                     u1601:
  7021     015F  2953               	goto	l2760
  7022     0160                     u1600:
  7023     0160                     l2766:
  7024     0160  3001               	movlw	1
  7025     0161                     u1615:
  7026     0161  35A6               	lslf	___awdiv@quotient,f
  7027     0162  0DA7               	rlf	___awdiv@quotient+1,f
  7028     0163  0B89               	decfsz	9,f
  7029     0164  2961               	goto	u1615
  7030     0165  0821               	movf	___awdiv@divisor+1,w
  7031     0166  0223               	subwf	___awdiv@dividend+1,w
  7032     0167  1D03               	skipz
  7033     0168  296B               	goto	u1625
  7034     0169  0820               	movf	___awdiv@divisor,w
  7035     016A  0222               	subwf	___awdiv@dividend,w
  7036     016B                     u1625:
  7037     016B  1C03               	skipc
  7038     016C  296E               	goto	u1621
  7039     016D  296F               	goto	u1620
  7040     016E                     u1621:
  7041     016E  2974               	goto	l2772
  7042     016F                     u1620:
  7043     016F                     l2768:
  7044     016F  0820               	movf	___awdiv@divisor,w
  7045     0170  02A2               	subwf	___awdiv@dividend,f
  7046     0171  0821               	movf	___awdiv@divisor+1,w
  7047     0172  3BA3               	subwfb	___awdiv@dividend+1,f
  7048     0173                     l2770:
  7049     0173  1426               	bsf	___awdiv@quotient,0
  7050     0174                     l2772:
  7051     0174  3001               	movlw	1
  7052     0175                     u1635:
  7053     0175  36A1               	lsrf	___awdiv@divisor+1,f
  7054     0176  0CA0               	rrf	___awdiv@divisor,f
  7055     0177  0B89               	decfsz	9,f
  7056     0178  2975               	goto	u1635
  7057     0179                     l2774:
  7058     0179  3001               	movlw	1
  7059     017A  02A4               	subwf	___awdiv@counter,f
  7060     017B  1D03               	btfss	3,2
  7061     017C  297E               	goto	u1641
  7062     017D  297F               	goto	u1640
  7063     017E                     u1641:
  7064     017E  2960               	goto	l2766
  7065     017F                     u1640:
  7066     017F                     l2776:
  7067     017F  0825               	movf	___awdiv@sign,w
  7068     0180  1903               	btfsc	3,2
  7069     0181  2983               	goto	u1651
  7070     0182  2984               	goto	u1650
  7071     0183                     u1651:
  7072     0183  2989               	goto	l2780
  7073     0184                     u1650:
  7074     0184                     l2778:
  7075     0184  09A6               	comf	___awdiv@quotient,f
  7076     0185  09A7               	comf	___awdiv@quotient+1,f
  7077     0186  0AA6               	incf	___awdiv@quotient,f
  7078     0187  1903               	skipnz
  7079     0188  0AA7               	incf	___awdiv@quotient+1,f
  7080     0189                     l2780:
  7081     0189  0827               	movf	___awdiv@quotient+1,w
  7082     018A  00A1               	movwf	?___awdiv+1
  7083     018B  0826               	movf	___awdiv@quotient,w
  7084     018C  00A0               	movwf	?___awdiv
  7085     018D                     l1029:
  7086     018D  0008               	return
  7087     018E                     __end_of___awdiv:
  7088                           
  7089                           	psect	text25
  7090     00D0                     __ptext25:	
  7091 ;; *************** function _ai_initiate *****************
  7092 ;; Defined at:
  7093 ;;		line 83 in file "ai.c"
  7094 ;; Parameters:    Size  Location     Type
  7095 ;;		None
  7096 ;; Auto vars:     Size  Location     Type
  7097 ;;  i               1   10[BANK0 ] unsigned char 
  7098 ;;  i               1    9[BANK0 ] unsigned char 
  7099 ;;  j               1   12[BANK0 ] unsigned char 
  7100 ;;  j               1   11[BANK0 ] unsigned char 
  7101 ;; Return value:  Size  Location     Type
  7102 ;;                  1    wreg      void 
  7103 ;; Registers used:
  7104 ;;		wreg, status,2, status,0, pclath, cstack
  7105 ;; Tracked objects:
  7106 ;;		On entry : 0/0
  7107 ;;		On exit  : 0/0
  7108 ;;		Unchanged: 0/0
  7109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7110 ;;      Params:         0       0       0       0       0       0
  7111 ;;      Locals:         0       4       0       0       0       0
  7112 ;;      Temps:          0       1       0       0       0       0
  7113 ;;      Totals:         0       5       0       0       0       0
  7114 ;;Total ram usage:        5 bytes
  7115 ;; Hardware stack levels used: 1
  7116 ;; Hardware stack levels required when called: 2
  7117 ;; This function calls:
  7118 ;;		_biases1_write
  7119 ;;		_biases2_write
  7120 ;;		_rand
  7121 ;;		_weights1_write
  7122 ;;		_weights2_write
  7123 ;; This function is called by:
  7124 ;;		_main
  7125 ;; This function uses a non-reentrant model
  7126 ;;
  7127                           
  7128     00D0                     _ai_initiate:	
  7129                           ;psect for function _ai_initiate
  7130                           
  7131     00D0                     l2792:	
  7132                           ;incstack = 0
  7133                           ; Regs used in _ai_initiate: [wreg+status,2+status,0+pclath+cstack]
  7134                           
  7135                           
  7136                           ;ai.c: 87:     for(uint8_t j = 0; j < 4; j++){
  7137     00D0  0020               	movlb	0	; select bank0
  7138     00D1  01AB               	clrf	ai_initiate@j
  7139     00D2                     l2798:
  7140                           
  7141                           ;ai.c: 88:         biases1_write(j, (int8_t)rand());
  7142     00D2  3180  2025  3180   	fcall	_rand
  7143     00D5  087C               	movf	?_rand,w
  7144     00D6  0020               	movlb	0	; select bank0
  7145     00D7  00A4               	movwf	biases1_write@val
  7146     00D8  082B               	movf	ai_initiate@j,w
  7147     00D9  318E  2625  3180   	fcall	_biases1_write
  7148     00DC                     l2800:
  7149                           
  7150                           ;ai.c: 89:         for(uint8_t i = 0; i < 8; i++){
  7151     00DC  0020               	movlb	0	; select bank0
  7152     00DD  01A9               	clrf	ai_initiate@i
  7153     00DE                     l2806:
  7154                           
  7155                           ;ai.c: 90:             weights1_write(i,j, (int8_t)rand());
  7156     00DE  082B               	movf	ai_initiate@j,w
  7157     00DF  00A4               	movwf	weights1_write@add2
  7158     00E0  3180  2025  3180   	fcall	_rand
  7159     00E3  087C               	movf	?_rand,w
  7160     00E4  0020               	movlb	0	; select bank0
  7161     00E5  00A5               	movwf	weights1_write@val
  7162     00E6  0829               	movf	ai_initiate@i,w
  7163     00E7  318E  269F  3180   	fcall	_weights1_write
  7164     00EA                     l2808:
  7165                           
  7166                           ;ai.c: 91:         }
  7167     00EA  3001               	movlw	1
  7168     00EB  0020               	movlb	0	; select bank0
  7169     00EC  00A8               	movwf	??_ai_initiate
  7170     00ED  0828               	movf	??_ai_initiate,w
  7171     00EE  07A9               	addwf	ai_initiate@i,f
  7172     00EF                     l2810:
  7173     00EF  3008               	movlw	8
  7174     00F0  0229               	subwf	ai_initiate@i,w
  7175     00F1  1C03               	skipc
  7176     00F2  28F4               	goto	u1671
  7177     00F3  28F5               	goto	u1670
  7178     00F4                     u1671:
  7179     00F4  28DE               	goto	l2806
  7180     00F5                     u1670:
  7181     00F5                     l2812:
  7182                           
  7183                           ;ai.c: 92:     }
  7184     00F5  3001               	movlw	1
  7185     00F6  00A8               	movwf	??_ai_initiate
  7186     00F7  0828               	movf	??_ai_initiate,w
  7187     00F8  07AB               	addwf	ai_initiate@j,f
  7188     00F9                     l2814:
  7189     00F9  3004               	movlw	4
  7190     00FA  022B               	subwf	ai_initiate@j,w
  7191     00FB  1C03               	skipc
  7192     00FC  28FE               	goto	u1681
  7193     00FD  28FF               	goto	u1680
  7194     00FE                     u1681:
  7195     00FE  28D2               	goto	l2798
  7196     00FF                     u1680:
  7197     00FF                     l2816:
  7198                           
  7199                           ;ai.c: 93:     for(uint8_t j = 0; j < 4; j++){
  7200     00FF  01AC               	clrf	ai_initiate@j_901
  7201     0100                     l2822:
  7202                           
  7203                           ;ai.c: 94:         biases2_write(j, (int8_t)rand());
  7204     0100  3180  2025  3180   	fcall	_rand
  7205     0103  087C               	movf	?_rand,w
  7206     0104  0020               	movlb	0	; select bank0
  7207     0105  00A4               	movwf	biases2_write@val
  7208     0106  082C               	movf	ai_initiate@j_901,w
  7209     0107  318E  262F  3180   	fcall	_biases2_write
  7210     010A                     l2824:
  7211                           
  7212                           ;ai.c: 95:         for(uint8_t i = 0; i < 4; i++){
  7213     010A  0020               	movlb	0	; select bank0
  7214     010B  01AA               	clrf	ai_initiate@i_903
  7215     010C                     l2830:
  7216                           
  7217                           ;ai.c: 96:             weights2_write(i,j, (int8_t)rand());
  7218     010C  082C               	movf	ai_initiate@j_901,w
  7219     010D  00A4               	movwf	weights2_write@add2
  7220     010E  3180  2025  3180   	fcall	_rand
  7221     0111  087C               	movf	?_rand,w
  7222     0112  0020               	movlb	0	; select bank0
  7223     0113  00A5               	movwf	weights2_write@val
  7224     0114  082A               	movf	ai_initiate@i_903,w
  7225     0115  318E  26B0  3180   	fcall	_weights2_write
  7226     0118                     l2832:
  7227                           
  7228                           ;ai.c: 97:         }
  7229     0118  3001               	movlw	1
  7230     0119  0020               	movlb	0	; select bank0
  7231     011A  00A8               	movwf	??_ai_initiate
  7232     011B  0828               	movf	??_ai_initiate,w
  7233     011C  07AA               	addwf	ai_initiate@i_903,f
  7234     011D                     l2834:
  7235     011D  3004               	movlw	4
  7236     011E  022A               	subwf	ai_initiate@i_903,w
  7237     011F  1C03               	skipc
  7238     0120  2922               	goto	u1691
  7239     0121  2923               	goto	u1690
  7240     0122                     u1691:
  7241     0122  290C               	goto	l2830
  7242     0123                     u1690:
  7243     0123                     l2836:
  7244                           
  7245                           ;ai.c: 98:     }
  7246     0123  3001               	movlw	1
  7247     0124  00A8               	movwf	??_ai_initiate
  7248     0125  0828               	movf	??_ai_initiate,w
  7249     0126  07AC               	addwf	ai_initiate@j_901,f
  7250     0127                     l2838:
  7251     0127  3004               	movlw	4
  7252     0128  022C               	subwf	ai_initiate@j_901,w
  7253     0129  1C03               	skipc
  7254     012A  292C               	goto	u1701
  7255     012B  292D               	goto	u1700
  7256     012C                     u1701:
  7257     012C  2900               	goto	l2822
  7258     012D                     u1700:
  7259     012D                     l613:
  7260     012D  0008               	return
  7261     012E                     __end_of_ai_initiate:
  7262                           
  7263                           	psect	text26
  7264     0EB0                     __ptext26:	
  7265 ;; *************** function _weights2_write *****************
  7266 ;; Defined at:
  7267 ;;		line 26 in file "ai.c"
  7268 ;; Parameters:    Size  Location     Type
  7269 ;;  add1            1    wreg     unsigned char 
  7270 ;;  add2            1    4[BANK0 ] unsigned char 
  7271 ;;  val             1    5[BANK0 ] char 
  7272 ;; Auto vars:     Size  Location     Type
  7273 ;;  add1            1    7[BANK0 ] unsigned char 
  7274 ;; Return value:  Size  Location     Type
  7275 ;;                  1    wreg      void 
  7276 ;; Registers used:
  7277 ;;		wreg, status,2, status,0, pclath, cstack
  7278 ;; Tracked objects:
  7279 ;;		On entry : 0/0
  7280 ;;		On exit  : 0/0
  7281 ;;		Unchanged: 0/0
  7282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7283 ;;      Params:         0       2       0       0       0       0
  7284 ;;      Locals:         0       1       0       0       0       0
  7285 ;;      Temps:          0       1       0       0       0       0
  7286 ;;      Totals:         0       4       0       0       0       0
  7287 ;;Total ram usage:        4 bytes
  7288 ;; Hardware stack levels used: 1
  7289 ;; Hardware stack levels required when called: 1
  7290 ;; This function calls:
  7291 ;;		_eeprom_write
  7292 ;; This function is called by:
  7293 ;;		_ai_initiate
  7294 ;;		_ai_propagate
  7295 ;; This function uses a non-reentrant model
  7296 ;;
  7297                           
  7298     0EB0                     _weights2_write:	
  7299                           ;psect for function _weights2_write
  7300                           
  7301                           
  7302                           ;incstack = 0
  7303                           ; Regs used in _weights2_write: [wreg+status,2+status,0+pclath+cstack]
  7304                           ;weights2_write@add1 stored from wreg
  7305     0EB0  0020               	movlb	0	; select bank0
  7306     0EB1  00A7               	movwf	weights2_write@add1
  7307     0EB2                     l2698:
  7308                           
  7309                           ;ai.c: 27:     eeprom_write(0 +8*4 +4 + 4*add1 + add2, (unsigned char)val);
  7310     0EB2  0825               	movf	weights2_write@val,w
  7311     0EB3  00F0               	movwf	eeprom_write@value
  7312     0EB4  0827               	movf	weights2_write@add1,w
  7313     0EB5  00A6               	movwf	??_weights2_write
  7314     0EB6  3001               	movlw	1
  7315     0EB7                     u1475:
  7316     0EB7  35A6               	lslf	??_weights2_write,f
  7317     0EB8  3EFF               	addlw	-1
  7318     0EB9  1D03               	skipz
  7319     0EBA  2EB7               	goto	u1475
  7320     0EBB  3526               	lslf	??_weights2_write,w
  7321     0EBC  0724               	addwf	weights2_write@add2,w
  7322     0EBD  3E24               	addlw	36
  7323     0EBE  318F  2775  318E   	fcall	_eeprom_write
  7324     0EC1                     l559:
  7325     0EC1  0008               	return
  7326     0EC2                     __end_of_weights2_write:
  7327                           
  7328                           	psect	text27
  7329     0E9F                     __ptext27:	
  7330 ;; *************** function _weights1_write *****************
  7331 ;; Defined at:
  7332 ;;		line 20 in file "ai.c"
  7333 ;; Parameters:    Size  Location     Type
  7334 ;;  add1            1    wreg     unsigned char 
  7335 ;;  add2            1    4[BANK0 ] unsigned char 
  7336 ;;  val             1    5[BANK0 ] char 
  7337 ;; Auto vars:     Size  Location     Type
  7338 ;;  add1            1    7[BANK0 ] unsigned char 
  7339 ;; Return value:  Size  Location     Type
  7340 ;;                  1    wreg      void 
  7341 ;; Registers used:
  7342 ;;		wreg, status,2, status,0, pclath, cstack
  7343 ;; Tracked objects:
  7344 ;;		On entry : 0/0
  7345 ;;		On exit  : 0/0
  7346 ;;		Unchanged: 0/0
  7347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7348 ;;      Params:         0       2       0       0       0       0
  7349 ;;      Locals:         0       1       0       0       0       0
  7350 ;;      Temps:          0       1       0       0       0       0
  7351 ;;      Totals:         0       4       0       0       0       0
  7352 ;;Total ram usage:        4 bytes
  7353 ;; Hardware stack levels used: 1
  7354 ;; Hardware stack levels required when called: 1
  7355 ;; This function calls:
  7356 ;;		_eeprom_write
  7357 ;; This function is called by:
  7358 ;;		_ai_initiate
  7359 ;;		_ai_propagate
  7360 ;; This function uses a non-reentrant model
  7361 ;;
  7362                           
  7363     0E9F                     _weights1_write:	
  7364                           ;psect for function _weights1_write
  7365                           
  7366                           
  7367                           ;incstack = 0
  7368                           ; Regs used in _weights1_write: [wreg+status,2+status,0+pclath+cstack]
  7369                           ;weights1_write@add1 stored from wreg
  7370     0E9F  0020               	movlb	0	; select bank0
  7371     0EA0  00A7               	movwf	weights1_write@add1
  7372     0EA1                     l2694:
  7373                           
  7374                           ;ai.c: 21:     eeprom_write(0 + 8*add1 + add2, (unsigned char)val);
  7375     0EA1  0825               	movf	weights1_write@val,w
  7376     0EA2  00F0               	movwf	eeprom_write@value
  7377     0EA3  0827               	movf	weights1_write@add1,w
  7378     0EA4  00A6               	movwf	??_weights1_write
  7379     0EA5  3002               	movlw	2
  7380     0EA6                     u1465:
  7381     0EA6  35A6               	lslf	??_weights1_write,f
  7382     0EA7  3EFF               	addlw	-1
  7383     0EA8  1D03               	skipz
  7384     0EA9  2EA6               	goto	u1465
  7385     0EAA  3526               	lslf	??_weights1_write,w
  7386     0EAB  0724               	addwf	weights1_write@add2,w
  7387     0EAC  318F  2775  318E   	fcall	_eeprom_write
  7388     0EAF                     l553:
  7389     0EAF  0008               	return
  7390     0EB0                     __end_of_weights1_write:
  7391                           
  7392                           	psect	text28
  7393     0025                     __ptext28:	
  7394 ;; *************** function _rand *****************
  7395 ;; Defined at:
  7396 ;;		line 11 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\common\rand.c"
  7397 ;; Parameters:    Size  Location     Type
  7398 ;;		None
  7399 ;; Auto vars:     Size  Location     Type
  7400 ;;		None
  7401 ;; Return value:  Size  Location     Type
  7402 ;;                  2   12[COMMON] int 
  7403 ;; Registers used:
  7404 ;;		wreg, status,2, status,0, pclath, cstack
  7405 ;; Tracked objects:
  7406 ;;		On entry : 0/0
  7407 ;;		On exit  : 0/0
  7408 ;;		Unchanged: 0/0
  7409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7410 ;;      Params:         2       0       0       0       0       0
  7411 ;;      Locals:         0       0       0       0       0       0
  7412 ;;      Temps:          0       4       0       0       0       0
  7413 ;;      Totals:         2       4       0       0       0       0
  7414 ;;Total ram usage:        6 bytes
  7415 ;; Hardware stack levels used: 1
  7416 ;; Hardware stack levels required when called: 1
  7417 ;; This function calls:
  7418 ;;		___lmul
  7419 ;; This function is called by:
  7420 ;;		_snake_initiate
  7421 ;;		_snake_move
  7422 ;;		_ai_initiate
  7423 ;; This function uses a non-reentrant model
  7424 ;;
  7425                           
  7426     0025                     _rand:	
  7427                           ;psect for function _rand
  7428                           
  7429     0025                     l2592:	
  7430                           ;incstack = 0
  7431                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
  7432                           
  7433     0025  0020               	movlb	0	; select bank0
  7434     0026  086E               	movf	_seed+3,w
  7435     0027  00F3               	movwf	___lmul@multiplier+3
  7436     0028  086D               	movf	_seed+2,w
  7437     0029  00F2               	movwf	___lmul@multiplier+2
  7438     002A  086C               	movf	_seed+1,w
  7439     002B  00F1               	movwf	___lmul@multiplier+1
  7440     002C  086B               	movf	_seed,w
  7441     002D  00F0               	movwf	___lmul@multiplier
  7442     002E  304C               	movlw	76
  7443     002F  00F7               	movwf	___lmul@multiplicand+3
  7444     0030  3095               	movlw	149
  7445     0031  00F6               	movwf	___lmul@multiplicand+2
  7446     0032  307F               	movlw	127
  7447     0033  00F5               	movwf	___lmul@multiplicand+1
  7448     0034  302D               	movlw	45
  7449     0035  00F4               	movwf	___lmul@multiplicand
  7450     0036  318F  27CD  3180   	fcall	___lmul
  7451     0039  3001               	movlw	1
  7452     003A  0770               	addwf	?___lmul,w
  7453     003B  0020               	movlb	0	; select bank0
  7454     003C  00EB               	movwf	_seed
  7455     003D  3000               	movlw	0
  7456     003E  3D71               	addwfc	?___lmul+1,w
  7457     003F  00EC               	movwf	_seed+1
  7458     0040  3000               	movlw	0
  7459     0041  3D72               	addwfc	?___lmul+2,w
  7460     0042  00ED               	movwf	_seed+2
  7461     0043  3000               	movlw	0
  7462     0044  3D73               	addwfc	?___lmul+3,w
  7463     0045  00EE               	movwf	_seed+3
  7464     0046                     l2594:
  7465     0046  086B               	movf	_seed,w
  7466     0047  00A0               	movwf	??_rand
  7467     0048  086C               	movf	_seed+1,w
  7468     0049  00A1               	movwf	??_rand+1
  7469     004A  086D               	movf	_seed+2,w
  7470     004B  00A2               	movwf	??_rand+2
  7471     004C  086E               	movf	_seed+3,w
  7472     004D  00A3               	movwf	??_rand+3
  7473     004E  3011               	movlw	17
  7474     004F                     u1345:
  7475     004F  36A3               	lsrf	??_rand+3,f
  7476     0050  0CA2               	rrf	??_rand+2,f
  7477     0051  0CA1               	rrf	??_rand+1,f
  7478     0052  0CA0               	rrf	??_rand,f
  7479     0053                     u1340:
  7480     0053  0B89               	decfsz	9,f
  7481     0054  284F               	goto	u1345
  7482     0055  0821               	movf	??_rand+1,w
  7483     0056  00FD               	movwf	?_rand+1
  7484     0057  0820               	movf	??_rand,w
  7485     0058  00FC               	movwf	?_rand
  7486     0059                     l1340:
  7487     0059  0008               	return
  7488     005A                     __end_of_rand:
  7489                           
  7490                           	psect	text29
  7491     0FCD                     __ptext29:	
  7492 ;; *************** function ___lmul *****************
  7493 ;; Defined at:
  7494 ;;		line 15 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\common\Umul32.c"
  7495 ;; Parameters:    Size  Location     Type
  7496 ;;  multiplier      4    0[COMMON] unsigned long 
  7497 ;;  multiplicand    4    4[COMMON] unsigned long 
  7498 ;; Auto vars:     Size  Location     Type
  7499 ;;  product         4    8[COMMON] unsigned long 
  7500 ;; Return value:  Size  Location     Type
  7501 ;;                  4    0[COMMON] unsigned long 
  7502 ;; Registers used:
  7503 ;;		wreg, status,2, status,0
  7504 ;; Tracked objects:
  7505 ;;		On entry : 0/0
  7506 ;;		On exit  : 0/0
  7507 ;;		Unchanged: 0/0
  7508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7509 ;;      Params:         8       0       0       0       0       0
  7510 ;;      Locals:         4       0       0       0       0       0
  7511 ;;      Temps:          0       0       0       0       0       0
  7512 ;;      Totals:        12       0       0       0       0       0
  7513 ;;Total ram usage:       12 bytes
  7514 ;; Hardware stack levels used: 1
  7515 ;; This function calls:
  7516 ;;		Nothing
  7517 ;; This function is called by:
  7518 ;;		_rand
  7519 ;; This function uses a non-reentrant model
  7520 ;;
  7521                           
  7522     0FCD                     ___lmul:	
  7523                           ;psect for function ___lmul
  7524                           
  7525     0FCD                     l2570:	
  7526                           ;incstack = 0
  7527                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  7528                           
  7529     0FCD  3000               	movlw	0
  7530     0FCE  00FB               	movwf	___lmul@product+3
  7531     0FCF  3000               	movlw	0
  7532     0FD0  00FA               	movwf	___lmul@product+2
  7533     0FD1  3000               	movlw	0
  7534     0FD2  00F9               	movwf	___lmul@product+1
  7535     0FD3  3000               	movlw	0
  7536     0FD4  00F8               	movwf	___lmul@product
  7537     0FD5                     l2572:
  7538     0FD5  1C70               	btfss	___lmul@multiplier,0
  7539     0FD6  2FD8               	goto	u1301
  7540     0FD7  2FD9               	goto	u1300
  7541     0FD8                     u1301:
  7542     0FD8  2FE1               	goto	l2576
  7543     0FD9                     u1300:
  7544     0FD9                     l2574:
  7545     0FD9  0874               	movf	___lmul@multiplicand,w
  7546     0FDA  07F8               	addwf	___lmul@product,f
  7547     0FDB  0875               	movf	___lmul@multiplicand+1,w
  7548     0FDC  3DF9               	addwfc	___lmul@product+1,f
  7549     0FDD  0876               	movf	___lmul@multiplicand+2,w
  7550     0FDE  3DFA               	addwfc	___lmul@product+2,f
  7551     0FDF  0877               	movf	___lmul@multiplicand+3,w
  7552     0FE0  3DFB               	addwfc	___lmul@product+3,f
  7553     0FE1                     l2576:
  7554     0FE1  3001               	movlw	1
  7555     0FE2                     u1315:
  7556     0FE2  35F4               	lslf	___lmul@multiplicand,f
  7557     0FE3  0DF5               	rlf	___lmul@multiplicand+1,f
  7558     0FE4  0DF6               	rlf	___lmul@multiplicand+2,f
  7559     0FE5  0DF7               	rlf	___lmul@multiplicand+3,f
  7560     0FE6  0B89               	decfsz	9,f
  7561     0FE7  2FE2               	goto	u1315
  7562     0FE8                     l2578:
  7563     0FE8  3001               	movlw	1
  7564     0FE9                     u1325:
  7565     0FE9  36F3               	lsrf	___lmul@multiplier+3,f
  7566     0FEA  0CF2               	rrf	___lmul@multiplier+2,f
  7567     0FEB  0CF1               	rrf	___lmul@multiplier+1,f
  7568     0FEC  0CF0               	rrf	___lmul@multiplier,f
  7569     0FED  0B89               	decfsz	9,f
  7570     0FEE  2FE9               	goto	u1325
  7571     0FEF  0873               	movf	___lmul@multiplier+3,w
  7572     0FF0  0472               	iorwf	___lmul@multiplier+2,w
  7573     0FF1  0471               	iorwf	___lmul@multiplier+1,w
  7574     0FF2  0470               	iorwf	___lmul@multiplier,w
  7575     0FF3  1D03               	skipz
  7576     0FF4  2FF6               	goto	u1331
  7577     0FF5  2FF7               	goto	u1330
  7578     0FF6                     u1331:
  7579     0FF6  2FD5               	goto	l2572
  7580     0FF7                     u1330:
  7581     0FF7                     l2580:
  7582     0FF7  087B               	movf	___lmul@product+3,w
  7583     0FF8  00F3               	movwf	?___lmul+3
  7584     0FF9  087A               	movf	___lmul@product+2,w
  7585     0FFA  00F2               	movwf	?___lmul+2
  7586     0FFB  0879               	movf	___lmul@product+1,w
  7587     0FFC  00F1               	movwf	?___lmul+1
  7588     0FFD  0878               	movf	___lmul@product,w
  7589     0FFE  00F0               	movwf	?___lmul
  7590     0FFF                     l890:
  7591     0FFF  0008               	return
  7592     1000                     __end_of___lmul:
  7593                           
  7594                           	psect	text30
  7595     0E2F                     __ptext30:	
  7596 ;; *************** function _biases2_write *****************
  7597 ;; Defined at:
  7598 ;;		line 29 in file "ai.c"
  7599 ;; Parameters:    Size  Location     Type
  7600 ;;  add             1    wreg     unsigned char 
  7601 ;;  val             1    4[BANK0 ] char 
  7602 ;; Auto vars:     Size  Location     Type
  7603 ;;  add             1    5[BANK0 ] unsigned char 
  7604 ;; Return value:  Size  Location     Type
  7605 ;;                  1    wreg      void 
  7606 ;; Registers used:
  7607 ;;		wreg, status,2, status,0, pclath, cstack
  7608 ;; Tracked objects:
  7609 ;;		On entry : 0/0
  7610 ;;		On exit  : 0/0
  7611 ;;		Unchanged: 0/0
  7612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7613 ;;      Params:         0       1       0       0       0       0
  7614 ;;      Locals:         0       1       0       0       0       0
  7615 ;;      Temps:          0       0       0       0       0       0
  7616 ;;      Totals:         0       2       0       0       0       0
  7617 ;;Total ram usage:        2 bytes
  7618 ;; Hardware stack levels used: 1
  7619 ;; Hardware stack levels required when called: 1
  7620 ;; This function calls:
  7621 ;;		_eeprom_write
  7622 ;; This function is called by:
  7623 ;;		_ai_initiate
  7624 ;;		_ai_propagate
  7625 ;; This function uses a non-reentrant model
  7626 ;;
  7627                           
  7628     0E2F                     _biases2_write:	
  7629                           ;psect for function _biases2_write
  7630                           
  7631                           
  7632                           ;incstack = 0
  7633                           ; Regs used in _biases2_write: [wreg+status,2+status,0+pclath+cstack]
  7634                           ;biases2_write@add stored from wreg
  7635     0E2F  0020               	movlb	0	; select bank0
  7636     0E30  00A5               	movwf	biases2_write@add
  7637     0E31                     l2700:
  7638                           
  7639                           ;ai.c: 30:     eeprom_write(0 +8*4 +4 +4*4 + add, (unsigned char)val);
  7640     0E31  0824               	movf	biases2_write@val,w
  7641     0E32  00F0               	movwf	eeprom_write@value
  7642     0E33  0825               	movf	biases2_write@add,w
  7643     0E34  3E34               	addlw	52
  7644     0E35  318F  2775  318E   	fcall	_eeprom_write
  7645     0E38                     l562:
  7646     0E38  0008               	return
  7647     0E39                     __end_of_biases2_write:
  7648                           
  7649                           	psect	text31
  7650     0E25                     __ptext31:	
  7651 ;; *************** function _biases1_write *****************
  7652 ;; Defined at:
  7653 ;;		line 23 in file "ai.c"
  7654 ;; Parameters:    Size  Location     Type
  7655 ;;  add             1    wreg     unsigned char 
  7656 ;;  val             1    4[BANK0 ] char 
  7657 ;; Auto vars:     Size  Location     Type
  7658 ;;  add             1    5[BANK0 ] unsigned char 
  7659 ;; Return value:  Size  Location     Type
  7660 ;;                  1    wreg      void 
  7661 ;; Registers used:
  7662 ;;		wreg, status,2, status,0, pclath, cstack
  7663 ;; Tracked objects:
  7664 ;;		On entry : 0/0
  7665 ;;		On exit  : 0/0
  7666 ;;		Unchanged: 0/0
  7667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7668 ;;      Params:         0       1       0       0       0       0
  7669 ;;      Locals:         0       1       0       0       0       0
  7670 ;;      Temps:          0       0       0       0       0       0
  7671 ;;      Totals:         0       2       0       0       0       0
  7672 ;;Total ram usage:        2 bytes
  7673 ;; Hardware stack levels used: 1
  7674 ;; Hardware stack levels required when called: 1
  7675 ;; This function calls:
  7676 ;;		_eeprom_write
  7677 ;; This function is called by:
  7678 ;;		_ai_initiate
  7679 ;;		_ai_propagate
  7680 ;; This function uses a non-reentrant model
  7681 ;;
  7682                           
  7683     0E25                     _biases1_write:	
  7684                           ;psect for function _biases1_write
  7685                           
  7686                           
  7687                           ;incstack = 0
  7688                           ; Regs used in _biases1_write: [wreg+status,2+status,0+pclath+cstack]
  7689                           ;biases1_write@add stored from wreg
  7690     0E25  0020               	movlb	0	; select bank0
  7691     0E26  00A5               	movwf	biases1_write@add
  7692     0E27                     l2696:
  7693                           
  7694                           ;ai.c: 24:     eeprom_write(0 +8*4 + add, (unsigned char)val);
  7695     0E27  0824               	movf	biases1_write@val,w
  7696     0E28  00F0               	movwf	eeprom_write@value
  7697     0E29  0825               	movf	biases1_write@add,w
  7698     0E2A  3E20               	addlw	32
  7699     0E2B  318F  2775  318E   	fcall	_eeprom_write
  7700     0E2E                     l556:
  7701     0E2E  0008               	return
  7702     0E2F                     __end_of_biases1_write:
  7703                           
  7704                           	psect	text32
  7705     0F75                     __ptext32:	
  7706 ;; *************** function _eeprom_write *****************
  7707 ;; Defined at:
  7708 ;;		line 6 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\pic\__eewrite.c"
  7709 ;; Parameters:    Size  Location     Type
  7710 ;;  addr            1    wreg     unsigned char 
  7711 ;;  value           1    0[COMMON] unsigned char 
  7712 ;; Auto vars:     Size  Location     Type
  7713 ;;  addr            1    3[COMMON] unsigned char 
  7714 ;; Return value:  Size  Location     Type
  7715 ;;                  1    wreg      void 
  7716 ;; Registers used:
  7717 ;;		wreg, status,2, status,0
  7718 ;; Tracked objects:
  7719 ;;		On entry : 0/0
  7720 ;;		On exit  : 0/0
  7721 ;;		Unchanged: 0/0
  7722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7723 ;;      Params:         1       0       0       0       0       0
  7724 ;;      Locals:         1       0       0       0       0       0
  7725 ;;      Temps:          2       0       0       0       0       0
  7726 ;;      Totals:         4       0       0       0       0       0
  7727 ;;Total ram usage:        4 bytes
  7728 ;; Hardware stack levels used: 1
  7729 ;; This function calls:
  7730 ;;		Nothing
  7731 ;; This function is called by:
  7732 ;;		_weights1_write
  7733 ;;		_biases1_write
  7734 ;;		_weights2_write
  7735 ;;		_biases2_write
  7736 ;;		_ai_is_ai_initiated_write
  7737 ;;		_ai_is_ai_trained_write
  7738 ;;		_ai_maxScore_write
  7739 ;;		_ai_scores_write
  7740 ;; This function uses a non-reentrant model
  7741 ;;
  7742                           
  7743     0F75                     _eeprom_write:	
  7744                           ;psect for function _eeprom_write
  7745                           
  7746                           
  7747                           ;incstack = 0
  7748                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  7749                           ;eeprom_write@addr stored from wreg
  7750     0F75  00F3               	movwf	eeprom_write@addr
  7751     0F76                     l865:	
  7752                           ;D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\pic\__eewrite.c: 6: eeprom_write(uns
      +                          igned char addr, unsigned char value);D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99
      +                          \pic\__eewrite.c: 7: {;D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\pic\__eewrite.
      +                          c: 8:  do{ while (EECON1bits.WR) { continue; } EEADR = (addr); EEDATA = (value); EECON1 
      +                          &= 0x3F; STATUSbits.CARRY = 0; if (INTCONbits.GIE) { STATUSbits.CARRY = 1; } INTCONbits.
      +                          GIE = 0; EECON1bits.WREN = 1; EECON2 = 0x55; EECON2 = 0xAA; EECON1bits.WR = 1; EECON1bit
      +                          s.WREN = 0; if (STATUSbits.CARRY) { INTCONbits.GIE = 1; } } while (0);
  7753                           
  7754     0F76                     l866:
  7755     0F76  0023               	movlb	3	; select bank3
  7756     0F77  1895               	btfsc	21,1	;volsfr
  7757     0F78  2F7A               	goto	u1351
  7758     0F79  2F7B               	goto	u1350
  7759     0F7A                     u1351:
  7760     0F7A  2F76               	goto	l866
  7761     0F7B                     u1350:
  7762     0F7B                     l2598:
  7763     0F7B  0873               	movf	eeprom_write@addr,w
  7764     0F7C  00F1               	movwf	??_eeprom_write
  7765     0F7D  01F2               	clrf	??_eeprom_write+1
  7766     0F7E  0871               	movf	??_eeprom_write,w
  7767     0F7F  0091               	movwf	17	;volatile
  7768     0F80  0872               	movf	??_eeprom_write+1,w
  7769     0F81  0092               	movwf	18	;volatile
  7770     0F82  0870               	movf	eeprom_write@value,w
  7771     0F83  0093               	movwf	19	;volatile
  7772     0F84                     l2600:
  7773     0F84  303F               	movlw	63
  7774     0F85  00F1               	movwf	??_eeprom_write
  7775     0F86  0871               	movf	??_eeprom_write,w
  7776     0F87  0595               	andwf	21,f	;volsfr
  7777     0F88                     l2602:
  7778     0F88  0020               	movlb	0	; select bank0
  7779     0F89  1003               	bcf	3,0	;volatile
  7780     0F8A                     l2604:
  7781     0F8A  1F8B               	btfss	11,7	;volatile
  7782     0F8B  2F8D               	goto	u1361
  7783     0F8C  2F8E               	goto	u1360
  7784     0F8D                     u1361:
  7785     0F8D  2F8F               	goto	l869
  7786     0F8E                     u1360:
  7787     0F8E                     l2606:
  7788     0F8E  1403               	bsf	3,0	;volatile
  7789     0F8F                     l869:
  7790     0F8F  138B               	bcf	11,7	;volatile
  7791     0F90  0023               	movlb	3	; select bank3
  7792     0F91  1515               	bsf	21,2	;volsfr
  7793     0F92                     l2608:
  7794     0F92  3055               	movlw	85
  7795     0F93  0096               	movwf	22	;volsfr
  7796     0F94  30AA               	movlw	170
  7797     0F95  0096               	movwf	22	;volsfr
  7798     0F96                     l2610:
  7799     0F96  1495               	bsf	21,1	;volsfr
  7800     0F97                     l2612:
  7801     0F97  1115               	bcf	21,2	;volsfr
  7802     0F98                     l2614:
  7803     0F98  0020               	movlb	0	; select bank0
  7804     0F99  1C03               	btfss	3,0	;volatile
  7805     0F9A  2F9C               	goto	u1371
  7806     0F9B  2F9D               	goto	u1370
  7807     0F9C                     u1371:
  7808     0F9C  2F9E               	goto	l872
  7809     0F9D                     u1370:
  7810     0F9D                     l2616:
  7811     0F9D  178B               	bsf	11,7	;volatile
  7812     0F9E                     l872:
  7813     0F9E  0008               	return
  7814     0F9F                     __end_of_eeprom_write:
  7815                           
  7816                           	psect	text33
  7817     0DDC                     __ptext33:	
  7818 ;; *************** function _ai_getInputField *****************
  7819 ;; Defined at:
  7820 ;;		line 102 in file "ai.c"
  7821 ;; Parameters:    Size  Location     Type
  7822 ;;		None
  7823 ;; Auto vars:     Size  Location     Type
  7824 ;;		None
  7825 ;; Return value:  Size  Location     Type
  7826 ;;                  1    wreg      PTR unsigned char 
  7827 ;; Registers used:
  7828 ;;		wreg
  7829 ;; Tracked objects:
  7830 ;;		On entry : 0/0
  7831 ;;		On exit  : 0/0
  7832 ;;		Unchanged: 0/0
  7833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7834 ;;      Params:         0       0       0       0       0       0
  7835 ;;      Locals:         0       0       0       0       0       0
  7836 ;;      Temps:          0       0       0       0       0       0
  7837 ;;      Totals:         0       0       0       0       0       0
  7838 ;;Total ram usage:        0 bytes
  7839 ;; Hardware stack levels used: 1
  7840 ;; This function calls:
  7841 ;;		Nothing
  7842 ;; This function is called by:
  7843 ;;		_main
  7844 ;; This function uses a non-reentrant model
  7845 ;;
  7846                           
  7847     0DDC                     _ai_getInputField:	
  7848                           ;psect for function _ai_getInputField
  7849                           
  7850     0DDC                     l2850:	
  7851                           ;incstack = 0
  7852                           ; Regs used in _ai_getInputField: [wreg]
  7853                           
  7854                           
  7855                           ;ai.c: 103:     return Y0;
  7856     0DDC  30D4               	movlw	(low (_Y0| 0))& (0+255)
  7857     0DDD                     l616:
  7858     0DDD  0008               	return
  7859     0DDE                     __end_of_ai_getInputField:
  7860                           
  7861                           	psect	text34
  7862     0E6F                     __ptext34:	
  7863 ;; *************** function _SYSTEM_Initialize *****************
  7864 ;; Defined at:
  7865 ;;		line 50 in file "mcc_generated_files/mcc.c"
  7866 ;; Parameters:    Size  Location     Type
  7867 ;;		None
  7868 ;; Auto vars:     Size  Location     Type
  7869 ;;		None
  7870 ;; Return value:  Size  Location     Type
  7871 ;;                  1    wreg      void 
  7872 ;; Registers used:
  7873 ;;		wreg, status,2, status,0, pclath, cstack
  7874 ;; Tracked objects:
  7875 ;;		On entry : 0/0
  7876 ;;		On exit  : 0/0
  7877 ;;		Unchanged: 0/0
  7878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7879 ;;      Params:         0       0       0       0       0       0
  7880 ;;      Locals:         0       0       0       0       0       0
  7881 ;;      Temps:          0       0       0       0       0       0
  7882 ;;      Totals:         0       0       0       0       0       0
  7883 ;;Total ram usage:        0 bytes
  7884 ;; Hardware stack levels used: 1
  7885 ;; Hardware stack levels required when called: 2
  7886 ;; This function calls:
  7887 ;;		_EUSART_Initialize
  7888 ;;		_OSCILLATOR_Initialize
  7889 ;;		_PIN_MANAGER_Initialize
  7890 ;;		_SPI1_Initialize
  7891 ;;		_WDT_Initialize
  7892 ;; This function is called by:
  7893 ;;		_main
  7894 ;; This function uses a non-reentrant model
  7895 ;;
  7896                           
  7897     0E6F                     _SYSTEM_Initialize:	
  7898                           ;psect for function _SYSTEM_Initialize
  7899                           
  7900     0E6F                     l2788:	
  7901                           ;incstack = 0
  7902                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7903                           
  7904                           
  7905                           ;mcc_generated_files/mcc.c: 53:     SPI1_Initialize();
  7906     0E6F  318E  2639  318E   	fcall	_SPI1_Initialize
  7907                           
  7908                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  7909     0E72  318E  26FB  318E   	fcall	_PIN_MANAGER_Initialize
  7910                           
  7911                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  7912     0E75  318E  2608  318E   	fcall	_OSCILLATOR_Initialize
  7913                           
  7914                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  7915     0E78  318D  25E1  318E   	fcall	_WDT_Initialize
  7916                           
  7917                           ;mcc_generated_files/mcc.c: 57:     EUSART_Initialize();
  7918     0E7B  318F  272D  318E   	fcall	_EUSART_Initialize
  7919     0E7E                     l248:
  7920     0E7E  0008               	return
  7921     0E7F                     __end_of_SYSTEM_Initialize:
  7922                           
  7923                           	psect	text35
  7924     0DE1                     __ptext35:	
  7925 ;; *************** function _WDT_Initialize *****************
  7926 ;; Defined at:
  7927 ;;		line 70 in file "mcc_generated_files/mcc.c"
  7928 ;; Parameters:    Size  Location     Type
  7929 ;;		None
  7930 ;; Auto vars:     Size  Location     Type
  7931 ;;		None
  7932 ;; Return value:  Size  Location     Type
  7933 ;;                  1    wreg      void 
  7934 ;; Registers used:
  7935 ;;		wreg
  7936 ;; Tracked objects:
  7937 ;;		On entry : 0/0
  7938 ;;		On exit  : 0/0
  7939 ;;		Unchanged: 0/0
  7940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7941 ;;      Params:         0       0       0       0       0       0
  7942 ;;      Locals:         0       0       0       0       0       0
  7943 ;;      Temps:          0       0       0       0       0       0
  7944 ;;      Totals:         0       0       0       0       0       0
  7945 ;;Total ram usage:        0 bytes
  7946 ;; Hardware stack levels used: 1
  7947 ;; This function calls:
  7948 ;;		Nothing
  7949 ;; This function is called by:
  7950 ;;		_SYSTEM_Initialize
  7951 ;; This function uses a non-reentrant model
  7952 ;;
  7953                           
  7954     0DE1                     _WDT_Initialize:	
  7955                           ;psect for function _WDT_Initialize
  7956                           
  7957     0DE1                     l2662:	
  7958                           ;incstack = 0
  7959                           ; Regs used in _WDT_Initialize: [wreg]
  7960                           
  7961                           
  7962                           ;mcc_generated_files/mcc.c: 73:     WDTCON = 0x16;
  7963     0DE1  3016               	movlw	22
  7964     0DE2  0021               	movlb	1	; select bank1
  7965     0DE3  0097               	movwf	23	;volatile
  7966     0DE4                     l254:
  7967     0DE4  0008               	return
  7968     0DE5                     __end_of_WDT_Initialize:
  7969                           
  7970                           	psect	text36
  7971     0E39                     __ptext36:	
  7972 ;; *************** function _SPI1_Initialize *****************
  7973 ;; Defined at:
  7974 ;;		line 62 in file "mcc_generated_files/spi1.c"
  7975 ;; Parameters:    Size  Location     Type
  7976 ;;		None
  7977 ;; Auto vars:     Size  Location     Type
  7978 ;;		None
  7979 ;; Return value:  Size  Location     Type
  7980 ;;                  1    wreg      void 
  7981 ;; Registers used:
  7982 ;;		wreg
  7983 ;; Tracked objects:
  7984 ;;		On entry : 0/0
  7985 ;;		On exit  : 0/0
  7986 ;;		Unchanged: 0/0
  7987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7988 ;;      Params:         0       0       0       0       0       0
  7989 ;;      Locals:         0       0       0       0       0       0
  7990 ;;      Temps:          0       0       0       0       0       0
  7991 ;;      Totals:         0       0       0       0       0       0
  7992 ;;Total ram usage:        0 bytes
  7993 ;; Hardware stack levels used: 1
  7994 ;; This function calls:
  7995 ;;		Nothing
  7996 ;; This function is called by:
  7997 ;;		_SYSTEM_Initialize
  7998 ;; This function uses a non-reentrant model
  7999 ;;
  8000                           
  8001     0E39                     _SPI1_Initialize:	
  8002                           ;psect for function _SPI1_Initialize
  8003                           
  8004     0E39                     l2650:	
  8005                           ;incstack = 0
  8006                           ; Regs used in _SPI1_Initialize: [wreg]
  8007                           
  8008                           
  8009                           ;mcc_generated_files/spi1.c: 65:     SSP1STAT = 0x40;
  8010     0E39  3040               	movlw	64
  8011     0E3A  0024               	movlb	4	; select bank4
  8012     0E3B  0094               	movwf	20	;volatile
  8013                           
  8014                           ;mcc_generated_files/spi1.c: 66:     SSP1CON1 = 0x02;
  8015     0E3C  3002               	movlw	2
  8016     0E3D  0095               	movwf	21	;volatile
  8017                           
  8018                           ;mcc_generated_files/spi1.c: 67:     SSP1ADD = 0x01;
  8019     0E3E  3001               	movlw	1
  8020     0E3F  0092               	movwf	18	;volatile
  8021     0E40                     l2652:
  8022                           
  8023                           ;mcc_generated_files/spi1.c: 68:     TRISBbits.TRISB4 = 0;
  8024     0E40  0021               	movlb	1	; select bank1
  8025     0E41  120D               	bcf	13,4	;volatile
  8026     0E42                     l2654:
  8027                           
  8028                           ;mcc_generated_files/spi1.c: 69:     SSP1CON1bits.SSPEN = 0;
  8029     0E42  0024               	movlb	4	; select bank4
  8030     0E43  1295               	bcf	21,5	;volatile
  8031     0E44                     l187:
  8032     0E44  0008               	return
  8033     0E45                     __end_of_SPI1_Initialize:
  8034                           
  8035                           	psect	text37
  8036     0EFB                     __ptext37:	
  8037 ;; *************** function _PIN_MANAGER_Initialize *****************
  8038 ;; Defined at:
  8039 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  8040 ;; Parameters:    Size  Location     Type
  8041 ;;		None
  8042 ;; Auto vars:     Size  Location     Type
  8043 ;;		None
  8044 ;; Return value:  Size  Location     Type
  8045 ;;                  1    wreg      void 
  8046 ;; Registers used:
  8047 ;;		wreg, status,2
  8048 ;; Tracked objects:
  8049 ;;		On entry : 0/0
  8050 ;;		On exit  : 0/0
  8051 ;;		Unchanged: 0/0
  8052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8053 ;;      Params:         0       0       0       0       0       0
  8054 ;;      Locals:         0       0       0       0       0       0
  8055 ;;      Temps:          0       0       0       0       0       0
  8056 ;;      Totals:         0       0       0       0       0       0
  8057 ;;Total ram usage:        0 bytes
  8058 ;; Hardware stack levels used: 1
  8059 ;; This function calls:
  8060 ;;		Nothing
  8061 ;; This function is called by:
  8062 ;;		_SYSTEM_Initialize
  8063 ;; This function uses a non-reentrant model
  8064 ;;
  8065                           
  8066     0EFB                     _PIN_MANAGER_Initialize:	
  8067                           ;psect for function _PIN_MANAGER_Initialize
  8068                           
  8069     0EFB                     l2634:	
  8070                           ;incstack = 0
  8071                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  8072                           
  8073                           
  8074                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  8075     0EFB  0022               	movlb	2	; select bank2
  8076     0EFC  018C               	clrf	12	;volatile
  8077                           
  8078                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  8079     0EFD  018D               	clrf	13	;volatile
  8080     0EFE                     l2636:
  8081                           
  8082                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x37;
  8083     0EFE  3037               	movlw	55
  8084     0EFF  0021               	movlb	1	; select bank1
  8085     0F00  008C               	movwf	12	;volatile
  8086     0F01                     l2638:
  8087                           
  8088                           ;mcc_generated_files/pin_manager.c: 67:     TRISB = 0xEF;
  8089     0F01  30EF               	movlw	239
  8090     0F02  008D               	movwf	13	;volatile
  8091     0F03                     l2640:
  8092                           
  8093                           ;mcc_generated_files/pin_manager.c: 72:     ANSELB = 0xC8;
  8094     0F03  30C8               	movlw	200
  8095     0F04  0023               	movlb	3	; select bank3
  8096     0F05  008D               	movwf	13	;volatile
  8097     0F06                     l2642:
  8098                           
  8099                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x1F;
  8100     0F06  301F               	movlw	31
  8101     0F07  008C               	movwf	12	;volatile
  8102                           
  8103                           ;mcc_generated_files/pin_manager.c: 78:     WPUB = 0x00;
  8104     0F08  0024               	movlb	4	; select bank4
  8105     0F09  018D               	clrf	13	;volatile
  8106                           
  8107                           ;mcc_generated_files/pin_manager.c: 79:     WPUA = 0x00;
  8108     0F0A  018C               	clrf	12	;volatile
  8109     0F0B                     l2644:
  8110                           
  8111                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  8112     0F0B  0021               	movlb	1	; select bank1
  8113     0F0C  1795               	bsf	21,7	;volatile
  8114     0F0D                     l2646:
  8115                           
  8116                           ;mcc_generated_files/pin_manager.c: 86:     APFCON0 = 0xC0;
  8117     0F0D  30C0               	movlw	192
  8118     0F0E  0022               	movlb	2	; select bank2
  8119     0F0F  009D               	movwf	29	;volatile
  8120     0F10                     l2648:
  8121                           
  8122                           ;mcc_generated_files/pin_manager.c: 87:     APFCON1 = 0x01;
  8123     0F10  3001               	movlw	1
  8124     0F11  009E               	movwf	30	;volatile
  8125     0F12                     l163:
  8126     0F12  0008               	return
  8127     0F13                     __end_of_PIN_MANAGER_Initialize:
  8128                           
  8129                           	psect	text38
  8130     0E08                     __ptext38:	
  8131 ;; *************** function _OSCILLATOR_Initialize *****************
  8132 ;; Defined at:
  8133 ;;		line 60 in file "mcc_generated_files/mcc.c"
  8134 ;; Parameters:    Size  Location     Type
  8135 ;;		None
  8136 ;; Auto vars:     Size  Location     Type
  8137 ;;		None
  8138 ;; Return value:  Size  Location     Type
  8139 ;;                  1    wreg      void 
  8140 ;; Registers used:
  8141 ;;		wreg, status,2
  8142 ;; Tracked objects:
  8143 ;;		On entry : 0/0
  8144 ;;		On exit  : 0/0
  8145 ;;		Unchanged: 0/0
  8146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8147 ;;      Params:         0       0       0       0       0       0
  8148 ;;      Locals:         0       0       0       0       0       0
  8149 ;;      Temps:          0       0       0       0       0       0
  8150 ;;      Totals:         0       0       0       0       0       0
  8151 ;;Total ram usage:        0 bytes
  8152 ;; Hardware stack levels used: 1
  8153 ;; This function calls:
  8154 ;;		Nothing
  8155 ;; This function is called by:
  8156 ;;		_SYSTEM_Initialize
  8157 ;; This function uses a non-reentrant model
  8158 ;;
  8159                           
  8160     0E08                     _OSCILLATOR_Initialize:	
  8161                           ;psect for function _OSCILLATOR_Initialize
  8162                           
  8163     0E08                     l2656:	
  8164                           ;incstack = 0
  8165                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  8166                           
  8167                           
  8168                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x70;
  8169     0E08  3070               	movlw	112
  8170     0E09  0021               	movlb	1	; select bank1
  8171     0E0A  0099               	movwf	25	;volatile
  8172     0E0B                     l2658:
  8173                           
  8174                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x00;
  8175     0E0B  0198               	clrf	24	;volatile
  8176     0E0C                     l2660:
  8177                           
  8178                           ;mcc_generated_files/mcc.c: 67:     BORCON = 0x00;
  8179     0E0C  0022               	movlb	2	; select bank2
  8180     0E0D  0196               	clrf	22	;volatile
  8181     0E0E                     l251:
  8182     0E0E  0008               	return
  8183     0E0F                     __end_of_OSCILLATOR_Initialize:
  8184                           
  8185                           	psect	text39
  8186     0F2D                     __ptext39:	
  8187 ;; *************** function _EUSART_Initialize *****************
  8188 ;; Defined at:
  8189 ;;		line 66 in file "mcc_generated_files/eusart.c"
  8190 ;; Parameters:    Size  Location     Type
  8191 ;;		None
  8192 ;; Auto vars:     Size  Location     Type
  8193 ;;		None
  8194 ;; Return value:  Size  Location     Type
  8195 ;;                  1    wreg      void 
  8196 ;; Registers used:
  8197 ;;		wreg, status,2, status,0, pclath, cstack
  8198 ;; Tracked objects:
  8199 ;;		On entry : 0/0
  8200 ;;		On exit  : 0/0
  8201 ;;		Unchanged: 0/0
  8202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8203 ;;      Params:         0       0       0       0       0       0
  8204 ;;      Locals:         0       0       0       0       0       0
  8205 ;;      Temps:          0       0       0       0       0       0
  8206 ;;      Totals:         0       0       0       0       0       0
  8207 ;;Total ram usage:        0 bytes
  8208 ;; Hardware stack levels used: 1
  8209 ;; Hardware stack levels required when called: 1
  8210 ;; This function calls:
  8211 ;;		_EUSART_SetErrorHandler
  8212 ;;		_EUSART_SetFramingErrorHandler
  8213 ;;		_EUSART_SetOverrunErrorHandler
  8214 ;; This function is called by:
  8215 ;;		_SYSTEM_Initialize
  8216 ;; This function uses a non-reentrant model
  8217 ;;
  8218                           
  8219     0F2D                     _EUSART_Initialize:	
  8220                           ;psect for function _EUSART_Initialize
  8221                           
  8222     0F2D                     l2622:	
  8223                           ;incstack = 0
  8224                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8225                           
  8226                           
  8227                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  8228     0F2D  3008               	movlw	8
  8229     0F2E  0023               	movlb	3	; select bank3
  8230     0F2F  009F               	movwf	31	;volatile
  8231                           
  8232                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
  8233     0F30  3090               	movlw	144
  8234     0F31  009D               	movwf	29	;volatile
  8235                           
  8236                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  8237     0F32  3024               	movlw	36
  8238     0F33  009E               	movwf	30	;volatile
  8239                           
  8240                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0x67;
  8241     0F34  3067               	movlw	103
  8242     0F35  009B               	movwf	27	;volatile
  8243     0F36                     l2624:
  8244                           
  8245                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x00;
  8246     0F36  019C               	clrf	28	;volatile
  8247     0F37                     l2626:
  8248                           
  8249                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  8250     0F37  3000               	movlw	0
  8251     0F38  00F0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  8252     0F39  3000               	movlw	0
  8253     0F3A  00F1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  8254     0F3B  318D  25F0  318F   	fcall	_EUSART_SetFramingErrorHandler
  8255     0F3E                     l2628:
  8256                           
  8257                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  8258     0F3E  3000               	movlw	0
  8259     0F3F  00F0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  8260     0F40  3000               	movlw	0
  8261     0F41  00F1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  8262     0F42  318D  25F6  318F   	fcall	_EUSART_SetOverrunErrorHandler
  8263     0F45                     l2630:
  8264                           
  8265                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  8266     0F45  3000               	movlw	0
  8267     0F46  00F0               	movwf	EUSART_SetErrorHandler@interruptHandler
  8268     0F47  3000               	movlw	0
  8269     0F48  00F1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  8270     0F49  318D  25EA  318F   	fcall	_EUSART_SetErrorHandler
  8271     0F4C                     l2632:
  8272                           
  8273                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  8274     0F4C  0020               	movlb	0	; select bank0
  8275     0F4D  01EA               	clrf	_eusartRxLastError	;volatile
  8276     0F4E                     l93:
  8277     0F4E  0008               	return
  8278     0F4F                     __end_of_EUSART_Initialize:
  8279                           
  8280                           	psect	text40
  8281     0DF6                     __ptext40:	
  8282 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  8283 ;; Defined at:
  8284 ;;		line 161 in file "mcc_generated_files/eusart.c"
  8285 ;; Parameters:    Size  Location     Type
  8286 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  8287 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  8288 ;; Auto vars:     Size  Location     Type
  8289 ;;		None
  8290 ;; Return value:  Size  Location     Type
  8291 ;;                  1    wreg      void 
  8292 ;; Registers used:
  8293 ;;		wreg
  8294 ;; Tracked objects:
  8295 ;;		On entry : 0/0
  8296 ;;		On exit  : 0/0
  8297 ;;		Unchanged: 0/0
  8298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8299 ;;      Params:         2       0       0       0       0       0
  8300 ;;      Locals:         0       0       0       0       0       0
  8301 ;;      Temps:          0       0       0       0       0       0
  8302 ;;      Totals:         2       0       0       0       0       0
  8303 ;;Total ram usage:        2 bytes
  8304 ;; Hardware stack levels used: 1
  8305 ;; This function calls:
  8306 ;;		Nothing
  8307 ;; This function is called by:
  8308 ;;		_EUSART_Initialize
  8309 ;; This function uses a non-reentrant model
  8310 ;;
  8311                           
  8312     0DF6                     _EUSART_SetOverrunErrorHandler:	
  8313                           ;psect for function _EUSART_SetOverrunErrorHandler
  8314                           
  8315     0DF6                     l2586:	
  8316                           ;incstack = 0
  8317                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  8318                           
  8319                           
  8320                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  8321     0DF6  0871               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  8322     0DF7  0021               	movlb	1	; select bank1
  8323     0DF8  00E7               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  8324     0DF9  0870               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  8325     0DFA  00E6               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  8326     0DFB                     l135:
  8327     0DFB  0008               	return
  8328     0DFC                     __end_of_EUSART_SetOverrunErrorHandler:
  8329                           
  8330                           	psect	text41
  8331     0DF0                     __ptext41:	
  8332 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  8333 ;; Defined at:
  8334 ;;		line 157 in file "mcc_generated_files/eusart.c"
  8335 ;; Parameters:    Size  Location     Type
  8336 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  8337 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  8338 ;; Auto vars:     Size  Location     Type
  8339 ;;		None
  8340 ;; Return value:  Size  Location     Type
  8341 ;;                  1    wreg      void 
  8342 ;; Registers used:
  8343 ;;		wreg
  8344 ;; Tracked objects:
  8345 ;;		On entry : 0/0
  8346 ;;		On exit  : 0/0
  8347 ;;		Unchanged: 0/0
  8348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8349 ;;      Params:         2       0       0       0       0       0
  8350 ;;      Locals:         0       0       0       0       0       0
  8351 ;;      Temps:          0       0       0       0       0       0
  8352 ;;      Totals:         2       0       0       0       0       0
  8353 ;;Total ram usage:        2 bytes
  8354 ;; Hardware stack levels used: 1
  8355 ;; This function calls:
  8356 ;;		Nothing
  8357 ;; This function is called by:
  8358 ;;		_EUSART_Initialize
  8359 ;; This function uses a non-reentrant model
  8360 ;;
  8361                           
  8362     0DF0                     _EUSART_SetFramingErrorHandler:	
  8363                           ;psect for function _EUSART_SetFramingErrorHandler
  8364                           
  8365     0DF0                     l2584:	
  8366                           ;incstack = 0
  8367                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  8368                           
  8369                           
  8370                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  8371     0DF0  0871               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  8372     0DF1  0021               	movlb	1	; select bank1
  8373     0DF2  00E9               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
  8374     0DF3  0870               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  8375     0DF4  00E8               	movwf	_EUSART_FramingErrorHandler^(0+128)
  8376     0DF5                     l132:
  8377     0DF5  0008               	return
  8378     0DF6                     __end_of_EUSART_SetFramingErrorHandler:
  8379                           
  8380                           	psect	text42
  8381     0DEA                     __ptext42:	
  8382 ;; *************** function _EUSART_SetErrorHandler *****************
  8383 ;; Defined at:
  8384 ;;		line 165 in file "mcc_generated_files/eusart.c"
  8385 ;; Parameters:    Size  Location     Type
  8386 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  8387 ;;		 -> EUSART_DefaultErrorHandler(1), 
  8388 ;; Auto vars:     Size  Location     Type
  8389 ;;		None
  8390 ;; Return value:  Size  Location     Type
  8391 ;;                  1    wreg      void 
  8392 ;; Registers used:
  8393 ;;		wreg
  8394 ;; Tracked objects:
  8395 ;;		On entry : 0/0
  8396 ;;		On exit  : 0/0
  8397 ;;		Unchanged: 0/0
  8398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8399 ;;      Params:         2       0       0       0       0       0
  8400 ;;      Locals:         0       0       0       0       0       0
  8401 ;;      Temps:          0       0       0       0       0       0
  8402 ;;      Totals:         2       0       0       0       0       0
  8403 ;;Total ram usage:        2 bytes
  8404 ;; Hardware stack levels used: 1
  8405 ;; This function calls:
  8406 ;;		Nothing
  8407 ;; This function is called by:
  8408 ;;		_EUSART_Initialize
  8409 ;; This function uses a non-reentrant model
  8410 ;;
  8411                           
  8412     0DEA                     _EUSART_SetErrorHandler:	
  8413                           ;psect for function _EUSART_SetErrorHandler
  8414                           
  8415     0DEA                     l2588:	
  8416                           ;incstack = 0
  8417                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  8418                           
  8419                           
  8420                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  8421     0DEA  0871               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  8422     0DEB  0021               	movlb	1	; select bank1
  8423     0DEC  00E5               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
  8424     0DED  0870               	movf	EUSART_SetErrorHandler@interruptHandler,w
  8425     0DEE  00E4               	movwf	_EUSART_ErrorHandler^(0+128)
  8426     0DEF                     l138:
  8427     0DEF  0008               	return
  8428     0DF0                     __end_of_EUSART_SetErrorHandler:
  8429     007E                     btemp	set	126	;btemp
  8430     007E                     wtemp0	set	126
  8431                           
  8432                           	psect	idloc
  8433                           
  8434                           ;Config register IDLOC0 @ 0x8000
  8435                           ;	unspecified, using default values
  8436     8000                     	org	32768
  8437     8000  3FFF               	dw	16383
  8438                           
  8439                           ;Config register IDLOC1 @ 0x8001
  8440                           ;	unspecified, using default values
  8441     8001                     	org	32769
  8442     8001  3FFF               	dw	16383
  8443                           
  8444                           ;Config register IDLOC2 @ 0x8002
  8445                           ;	unspecified, using default values
  8446     8002                     	org	32770
  8447     8002  3FFF               	dw	16383
  8448                           
  8449                           ;Config register IDLOC3 @ 0x8003
  8450                           ;	unspecified, using default values
  8451     8003                     	org	32771
  8452     8003  3FFF               	dw	16383
  8453                           
  8454                           	psect	config
  8455                           
  8456                           ;Config register CONFIG1 @ 0x8007
  8457                           ;	Oscillator Selection
  8458                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  8459                           ;	Watchdog Timer Enable
  8460                           ;	WDTE = OFF, WDT disabled
  8461                           ;	Power-up Timer Enable
  8462                           ;	PWRTE = OFF, PWRT disabled
  8463                           ;	MCLR Pin Function Select
  8464                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  8465                           ;	Flash Program Memory Code Protection
  8466                           ;	CP = OFF, Program memory code protection is disabled
  8467                           ;	Data Memory Code Protection
  8468                           ;	CPD = OFF, Data memory code protection is disabled
  8469                           ;	Brown-out Reset Enable
  8470                           ;	BOREN = ON, Brown-out Reset enabled
  8471                           ;	Clock Out Enable
  8472                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  8473                           ;	Internal/External Switchover
  8474                           ;	IESO = ON, Internal/External Switchover mode is enabled
  8475                           ;	Fail-Safe Clock Monitor Enable
  8476                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  8477     8007                     	org	32775
  8478     8007  3FE4               	dw	16356
  8479                           
  8480                           ;Config register CONFIG2 @ 0x8008
  8481                           ;	Flash Memory Self-Write Protection
  8482                           ;	WRT = OFF, Write protection off
  8483                           ;	PLL Enable
  8484                           ;	PLLEN = OFF, 4x PLL disabled
  8485                           ;	Stack Overflow/Underflow Reset Enable
  8486                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  8487                           ;	Brown-out Reset Voltage Selection
  8488                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  8489                           ;	Low-Voltage Programming Enable
  8490                           ;	LVP = ON, Low-voltage programming enabled
  8491     8008                     	org	32776
  8492     8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    36
    Data        8
    BSS         122
    Persistent  38
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     49      79
    BANK1            80      0      74
    BANK2            80      0      32
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    snake_getSurroundings@surroundings	PTR unsigned char  size(1) Largest target is 8
		 -> Y0(BANK1[8]), 

    sp__snake_getField	PTR unsigned char  size(1) Largest target is 16
		 -> field(BANK1[16]), 

    main@field	PTR unsigned char  size(1) Largest target is 16
		 -> field(BANK1[16]), 

    sp__ai_getInputField	PTR unsigned char  size(1) Largest target is 8
		 -> Y0(BANK1[8]), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    _main->___awdiv
    _snake_move->___awdiv
    _snake_move->_rand
    _snake_initiate->_rand
    _snake_getSurroundings->___awdiv
    _ledSet->___awdiv
    _sendMatrix->_txMAX7219
    _initMAX7219->_txMAX7219
    _txMAX7219->_SPI1_WriteByte
    _ai_run->___awdiv
    _ai_propagate->___awdiv
    _weights2_read->_eeprom_read
    _weights1_read->_eeprom_read
    _biases2_read->_eeprom_read
    _biases1_read->_eeprom_read
    ___wmul->_weights1_read
    ___wmul->_weights2_read
    ___awdiv->___wmul
    _ai_initiate->_rand
    _weights2_write->_rand
    _weights1_write->_rand
    _rand->___lmul
    _biases2_write->_rand
    _biases1_write->_rand
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _main in BANK0

    _main->_ai_propagate
    _snake_move->___awdiv
    _snake_initiate->_rand
    _snake_getSurroundings->___awdiv
    _setLine->_ledSet
    _ledSet->___awdiv
    _ai_run->___awdiv
    _ai_propagate->___awdiv
    _ai_propagate->_weights1_write
    _ai_propagate->_weights2_write
    _ai_initiate->_weights1_write
    _ai_initiate->_weights2_write
    _weights2_write->_rand
    _weights1_write->_rand
    _biases2_write->_rand
    _biases1_write->_rand

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0   32150
                                             37 BANK0     12    12      0
                  _SYSTEM_Initialize
                            ___awdiv
                   _ai_getInputField
                        _ai_initiate
                       _ai_propagate
                             _ai_run
                 _deactivateElevator
                        _initMAX7219
                           _ledClear
                             _ledSet
                         _sendMatrix
                            _setLine
                     _snake_getField
              _snake_getFoodPosition
              _snake_getSurroundings
                     _snake_initiate
                         _snake_move
 ---------------------------------------------------------------------------------
 (1) _snake_move                                           5     5      0    2997
                                              8 BANK0      5     5      0
                            ___awdiv
                               _rand
                     _snake_initiate
 ---------------------------------------------------------------------------------
 (2) _snake_initiate                                       2     2      0     312
                                              4 BANK0      2     2      0
                               _rand
 ---------------------------------------------------------------------------------
 (1) _snake_getSurroundings                               10    10      0    3011
                                              8 BANK0     10    10      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) _snake_getFoodPosition                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _snake_getField                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setLine                                              5     4      1    1028
                                             12 BANK0      5     4      1
                           _ledClear
                             _ledSet
 ---------------------------------------------------------------------------------
 (2) _ledSet                                               4     3      1     424
                                              8 BANK0      4     3      1
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _ledClear                                             4     3      1     272
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _sendMatrix                                           5     5      0     935
                                              3 COMMON     5     5      0
                          _txMAX7219
 ---------------------------------------------------------------------------------
 (1) _initMAX7219                                          2     2      0     750
                                              3 COMMON     2     2      0
                          _txMAX7219
 ---------------------------------------------------------------------------------
 (2) _txMAX7219                                            2     1      1     750
                                              1 COMMON     2     1      1
                     _SPI1_WriteByte
 ---------------------------------------------------------------------------------
 (3) _SPI1_WriteByte                                       1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _deactivateElevator                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ai_run                                              10    10      0    4984
                                              8 BANK0     10    10      0
                            ___awdiv
                             ___wmul
                       _biases1_read
                       _biases2_read
                            _sigmoid
                      _weights1_read
                      _weights2_read
 ---------------------------------------------------------------------------------
 (2) _sigmoid                                              2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ai_propagate                                        29    29      0    9894
                                              8 BANK0     29    29      0
                            ___awdiv
                             ___wmul
                       _biases1_read
                      _biases1_write
                       _biases2_read
                      _biases2_write
                         _de_sigmoid
                      _weights1_read
                     _weights1_write
                      _weights2_read
                     _weights2_write
 ---------------------------------------------------------------------------------
 (2) _weights2_read                                        3     2      1     370
                                              4 COMMON     3     2      1
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (2) _weights1_read                                        3     2      1     218
                                              4 COMMON     3     2      1
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (2) _de_sigmoid                                           2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _biases2_read                                         1     1      0      44
                                              4 COMMON     1     1      0
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (2) _biases1_read                                         1     1      0      44
                                              4 COMMON     1     1      0
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (3) _eeprom_read                                          4     4      0      22
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1156
                                              7 COMMON     6     2      4
                      _weights1_read (ARG)
                      _weights2_read (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    2276
                                             13 COMMON     1     1      0
                                              0 BANK0      8     4      4
                             ___wmul (ARG)
                      _weights2_read (ARG)
 ---------------------------------------------------------------------------------
 (1) _ai_initiate                                          5     5      0    4300
                                              8 BANK0      5     5      0
                      _biases1_write
                      _biases2_write
                               _rand
                     _weights1_write
                     _weights2_write
 ---------------------------------------------------------------------------------
 (2) _weights2_write                                       4     2      2    1022
                                              4 BANK0      4     2      2
                       _eeprom_write
                               _rand (ARG)
                      _weights2_read (ARG)
 ---------------------------------------------------------------------------------
 (2) _weights1_write                                       4     2      2    1022
                                              4 BANK0      4     2      2
                       _eeprom_write
                               _rand (ARG)
                      _weights1_read (ARG)
 ---------------------------------------------------------------------------------
 (3) _rand                                                 6     4      2     244
                                             12 COMMON     2     0      2
                                              0 BANK0      4     4      0
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     244
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) _biases2_write                                        2     1      1     848
                                              4 BANK0      2     1      1
                       _biases2_read (ARG)
                       _eeprom_write
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (2) _biases1_write                                        2     1      1     848
                                              4 BANK0      2     1      1
                       _biases1_read (ARG)
                       _eeprom_write
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (3) _eeprom_write                                         4     3      1     652
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _ai_getInputField                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI1_Initialize
     _WDT_Initialize
   ___awdiv
     ___wmul (ARG)
       _weights1_read (ARG)
         _eeprom_read
       _weights2_read (ARG)
         _eeprom_read
     _weights2_read (ARG)
   _ai_getInputField
   _ai_initiate
     _biases1_write
       _biases1_read (ARG)
         _eeprom_read
       _eeprom_write (ARG)
       _rand (ARG)
         ___lmul
     _biases2_write
       _biases2_read (ARG)
         _eeprom_read
       _eeprom_write (ARG)
       _rand (ARG)
     _rand
     _weights1_write
       _eeprom_write
       _rand (ARG)
       _weights1_read (ARG)
     _weights2_write
       _eeprom_write
       _rand (ARG)
       _weights2_read (ARG)
   _ai_propagate
     ___awdiv
     ___wmul
     _biases1_read
     _biases1_write
     _biases2_read
     _biases2_write
     _de_sigmoid
     _weights1_read
     _weights1_write
     _weights2_read
     _weights2_write
   _ai_run
     ___awdiv
     ___wmul
     _biases1_read
     _biases2_read
     _sigmoid
     _weights1_read
     _weights2_read
   _deactivateElevator
   _initMAX7219
     _txMAX7219
       _SPI1_WriteByte
   _ledClear
   _ledSet
     ___awdiv (ARG)
   _sendMatrix
     _txMAX7219
   _setLine
     _ledClear
     _ledSet
   _snake_getField
   _snake_getFoodPosition
   _snake_getSurroundings
     ___awdiv
   _snake_initiate
     _rand
   _snake_move
     ___awdiv
     _rand
     _snake_initiate

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      C7       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     31      4F       6       98.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      4A       8       92.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      20      10       40.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      C7      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Oct 08 23:03:18 2022

                           SPI1_WriteByte@byte 0070                           __end_of_ai_propagate 07D9  
                                           l93 0F4E                                             _Y0 00D4  
                                           _Y1 0061                                             _Y2 005D  
                                           _Z1 0059                                             _Z2 0055  
                                 ___awdiv@sign 0025                            ___wmul@multiplicand 0079  
                         __end_of_biases1_read 0E16                           __end_of_biases2_read 0E1D  
                                          l132 0DF5                                            _DB1 00BC  
                                          _DB2 00B8                                            l135 0DFB  
                                          l224 0DE9                                            l138 0DEF  
                                          l251 0E0E                                            l163 0F12  
                                          l325 0E51                                            l254 0DE4  
                                          l423 0091                                            l248 0E7E  
                                          l370 0F2C                                            l187 0E44  
                                          l451 032D                                            l364 0F1A  
                                          l613 012D                                            l373 00CF  
                                          l366 0F1F                                            l454 0005  
                                          l367 0F24                                            l616 0DDD  
                                          l376 0EE5                                            l553 0EAF  
                                          l633 0437                                            l369 0F29  
                                          l562 0E38                                            l474 0255  
                                          l571 0E6E                                            l379 0ED3  
                                          l483 0DE0                                            l556 0E2E  
                                          l396 0FCC                                            l565 0E5F  
                                          l637 07D8                                            l389 0F74  
                                          l574 0E1C                                            l559 0EC1  
                                          l568 0E15                                            l846 0EE7  
                                          l686 0E9E                                            l872 0F9E  
                                          l848 0EFA                                            l865 0F76  
                                          l689 0E8E                                            l866 0F76  
                                          l890 0FFF                                            l876 0010  
                                          l869 0F8F                                            l878 0024  
                                          _DW1 0120                                            _DW2 00A0  
                                          _DY1 0051                                            _DY2 00C0  
               ?_EUSART_SetFramingErrorHandler 0070                                            wreg 0009  
                        __end_of_biases1_write 0E2F                                   ?_initMAX7219 0070  
                        __end_of_biases2_write 0E39                                           l1029 018D  
                                         l3000 041C                                           l3002 042A  
                                         l1340 0059                                           l3004 042C  
                                         l3020 025B                                           l3012 0258  
                                         l3102 054C                                           l3006 0430  
                                         l3030 0275                                           l3022 0264  
                                         l3014 025A                                           l3200 0638  
                                         l3120 0568                                           l3104 0551  
                                         l3008 0436                                           l3032 027A  
                                         l3024 026A                                           l3210 069D  
                                         l3130 0574                                           l3114 0558  
                                         l3122 056E                                           l3106 0552  
                                         l3050 02AE                                           l3042 0290  
                                         l3034 0280                                           l3026 026E  
                                         l3212 06A3                                           l3132 0578  
                                         l3116 055E                                           l3108 0557  
                                         l3044 0295                                           l3060 02E0  
                                         l3036 0283                                           l3028 0274  
                                         l3230 06F1                                           l3222 06B5  
                                         l3214 06A7                                           l3206 0639  
                                         l3150 0590                                           l3142 0585  
                                         l3134 057E                                           l3118 0562  
                                         l3310 0F6A                                           l3302 0F54  
                                         l3070 02F5                                           l3062 02E5  
                                         l3054 02C5                                           l3038 0286  
                                         l2600 0F84                                           l3232 06F2  
                                         l3224 06C4                                           l3216 06AD  
                                         l3208 0699                                           l3160 05B5  
                                         l3152 05A1                                           l3144 058F  
                                         l3128 056F                                           l3136 0584  
                                         l3320 0FA0                                           l3312 0F6E  
                                         l3304 0F5A                                           l3080 0311  
                                         l3072 02FB                                           l3064 02E9  
                                         l3048 02AB                                           l2610 0F96  
                                         l2602 0F88                                           l3242 0738  
                                         l3226 06D9                                           l3218 06AE  
                                         l3170 05D6                                           l3154 05A5  
                                         l3330 0FA8                                           l3322 0FA6  
                                         l3314 0F9F                                           l3306 0F61  
                                         l3090 032B                                           l3074 02FD  
                                         l3082 031A                                           l3066 02F2  
                                         l3058 02CA                                           l3410 049D  
                                         l3402 0487                                           l2612 0F97  
                                         l2604 0F8A                                           l2700 0E31  
                                         l3260 075F                                           l3252 0745  
                                         l3236 06F9                                           l3228 06E9  
                                         l3180 05EB                                           l3156 05AB  
                                         l3340 0FC2                                           l3332 0FAA  
                                         l3324 0FA7                                           l3308 0F67  
                                         l3076 02FF                                           l3084 0320  
                                         l3420 04B9                                           l3412 04A4  
                                         l2630 0F45                                           l2622 0F2D  
                                         l2614 0F98                                           l2606 0F8E  
                                         l2702 0E53                                           l2710 0E61  
                                         l3262 077F                                           l3254 0756  
                                         l3270 078A                                           l3238 0733  
                                         l3246 073D                                           l3182 05F1  
                                         l3166 05B6                                           l3158 05AF  
                                         l3342 0FC6                                           l3334 0FAF  
                                         l3086 0326                                           l3078 0303  
                                         l3430 04E3                                           l3422 04BF  
                                         l3414 04AA                                           l2632 0F4C  
                                         l2624 0F36                                           l2640 0F03  
                                         l2616 0F9D                                           l2608 0F92  
                                         l2800 00DC                                           l3280 07A5  
                                         l3272 078B                                           l3256 0758  
                                         l3248 073E                                           l3192 05FC  
                                         l3184 05F5                                           l3176 05D7  
                                         l3168 05D1                                           l3336 0FB5  
                                         l3344 0004                                           l3088 0328  
                                         l3432 04EC                                           l3424 04C4  
                                         l3416 04AF                                           l3408 0488  
                                         l2626 0F37                                           l2642 0F06  
                                         l2634 0EFB                                           l2650 0E39  
                                         l2570 0FCD                                           l2810 00EF  
                                         l2730 000C                                           l2618 0EED  
                                         l2706 0E10                                           l2714 0E17  
                                         l2722 0E80                                           l3290 07D3  
                                         l3266 0785                                           l3194 060B  
                                         l3186 05FB                                           l3178 05E7  
                                         l3098 0546                                           l3338 0FBB  
                                         l3450 0511                                           l3426 04DA  
                                         l3418 04B5                                           l3370 0441  
                                         l2628 0F3E                                           l2660 0E0C  
                                         l2644 0F0B                                           l2636 0EFE  
                                         l2652 0E40                                           l2580 0FF7  
                                         l2572 0FD5                                           l2812 00F5  
                                         l2740 012E                                           l2732 0015  
                                         l3284 07AC                                           l3276 0792  
                                         l3196 0620                                           l3348 0DDE  
                                         l2900 021D                                           l3460 052B  
                                         l3452 0516                                           l3444 04EF  
                                         l3428 04DD                                           l3380 044A  
                                         l3372 0444                                           l3364 0438  
                                         l2646 0F0D                                           l2638 0F01  
                                         l2654 0E42                                           l2662 0DE1  
                                         l2574 0FD9                                           l2830 010C  
                                         l2822 0100                                           l2814 00F9  
                                         l2806 00DE                                           l2750 013F  
                                         l2742 0130                                           l2734 001A  
                                         l2726 0006                                           l3286 07CD  
                                         l3278 07A3                                           l3198 0630  
                                         l2718 0E90                                           l2590 0DE6  
                                         l3294 0F51                                           l2910 023C  
                                         l2902 0223                                           l2670 005C  
                                         l3454 051C                                           l3446 0504  
                                         l3438 04EE                                           l3390 0473  
                                         l3382 0450                                           l3374 0447  
                                         l3366 043B                                           l2584 0DF0  
                                         l2656 0E08                                           l2648 0F10  
                                         l2576 0FE1                                           l2592 0025  
                                         l2832 0118                                           l2824 010A  
                                         l2816 00FF                                           l2808 00EA  
                                         l2760 0153                                           l2752 0144  
                                         l2744 0134                                           l2736 0020  
                                         l2728 0008                                           l2840 0092  
                                         l3296 0F53                                           l2912 0242  
                                         l2904 0229                                           l2680 0089  
                                         l2672 0061                                           l2664 005A  
                                         l3456 0520                                           l3448 050B  
                                         l3392 0478                                           l3384 0459  
                                         l3368 043E                                           l2586 0DF6  
                                         l2658 0E0B                                           l2850 0DDC  
                                         l2578 0FE8                                           l2594 0046  
                                         l2834 011D                                           l2770 0173  
                                         l2762 0158                                           l2754 0148  
                                         l2746 0139                                           l2930 0343  
                                         l2690 0F16                                           l2842 0098  
                                         l2914 0249                                           l2906 0230  
                                         l2682 008B                                           l2674 0065  
                                         l3458 0526                                           l3394 0481  
                                         l3386 0468                                           l2588 0DEA  
                                         l2836 0123                                           l2780 0189  
                                         l2772 0174                                           l2764 015C  
                                         l2756 014A                                           l2748 013B  
                                         l2940 0353                                           l2932 0349  
                                         l2924 0330                                           l2692 0F20  
                                         l2844 00B9                                           l2684 0ED6  
                                         l2916 024F                                           l2908 0236  
                                         l2860 0191                                           l2676 006B  
                                         l3556 02D2                                           l3396 0486  
                                         l3388 0470                                           l2598 0F7B  
                                         l2694 0EA1                                           l2838 0127  
                                         l2774 0179                                           l2766 0160  
                                         l2758 0150                                           l2950 0377  
                                         l2926 0339                                           l2918 032E  
                                         l2790 0E45                                           l2846 00C4  
                                         l2686 0EC3                                           l2870 01B6  
                                         l2862 0198                                           l2854 0190  
                                         l2678 0087                                           l2696 0E27  
                                         l2792 00D0                                           l2768 016F  
                                         l2776 017F                                           l2960 03AB  
                                         l2952 038F                                           l2928 033F  
                                         l2688 0F14                                           l2848 00C9  
                                         l2880 01E0                                           l2872 01CA  
                                         l2864 019C                                           l2698 0EB2  
                                         l2778 0184                                           l2970 03BB  
                                         l2962 03B1                                           l2954 0393  
                                         l2946 0355                                           l2938 034A  
                                         l2882 01E5                                           l2874 01CF  
                                         l2866 01A2                                           l2788 0E6F  
                                         l2980 03DF                                           l2956 0399  
                                         l2948 0360                                           l2884 01EC  
                                         l2876 01D5                                           l2868 01A5  
                                         l2798 00D2                                           l2990 0413  
                                         l2982 03F7                                           l2958 03A6  
                                         l2894 01F9                                           l2886 01F2  
                                         l2878 01DB                                           l2992 0419  
                                         l2984 03FB                                           l2976 03BD  
                                         l2968 03B2                                           l2896 0211  
                                         l2888 01F8                                           l2994 041A  
                                         l2986 0401                                           l2978 03C8  
                                         l2898 0219                                           l2988 040E  
                __end_of_snake_getSurroundings 0256                                           u2010 031A  
                                         u2011 0319                                           u1300 0FD9  
                                         u2100 05B5                                           u2020 0326  
                                         u1301 0FD8                                           u2101 05B4  
                                         u2021 0325                                           u2005 030B  
                                         u2030 054B                                           u2031 054A  
                                         u2200 0744                                           u2120 05F1  
                                         u2040 0551                                           u2201 0743  
                                         u2121 05F0                                           u2041 0550  
                                         u1330 0FF7                                           u2210 075E  
                                         u2130 05FB                                           u2050 0557  
                                         u1331 0FF6                                           u1315 0FE2  
                                         u2211 075D                                           u2131 05FA  
                                         u2115 05DA                                           u2051 0556  
                                         u1340 0053                                           u2060 0568  
                                         u1325 0FE9                                           u2061 0567  
                                         u1405 0073                                           _LATA 010C  
                                         u1350 0F7B                                           u2230 0791  
                                         u2150 06A3                                           u2070 057E  
                                         _LATB 010D                                           u1351 0F7A  
                                         u2231 0790                                           u2151 06A2  
                                         u2071 057D                                           u1415 0081  
                                         u1360 0F8E                                           u1600 0160  
                                         u1520 000C                                           u2240 07AB  
                                         u2160 06AD                                           u1440 0F1F  
                                         u1424 0EDB                                           u2400 0526  
                                         u2320 0481                                           u1361 0F8D  
                                         u1345 004F                                           u1601 015F  
                                         u1521 000B                                           u2241 07AA  
                                         u2225 0764                                           u2161 06AC  
                                         u2145 068B                                           u1505 0E93  
                                         u1441 0F1E                                           u1425 0EDA  
                                         u2401 0525                                           u2321 0480  
                                         u1370 0F9D                                           u2170 06B4  
                                         u2090 05AB                                           u1450 0F29  
                                         u1434 0EC8                                           u1371 0F9C  
                                         u1515 0E83                                           u2171 06B3  
                                         u2091 05AA                                           u1451 0F28  
                                         u1435 0EC7                                           u1700 012D  
                                         u1620 016F                                           u1380 0EED  
                                         u2180 06F8                                           u2260 0F5A  
                                         u2340 049D                                           u1701 012C  
                                         u1621 016E                                           u1381 0EEC  
                                         u2181 06F7                                           u2085 0593  
                                         u2261 0F59                                           u2341 049C  
                                         u1550 0020                                           u2270 0F74  
                                         u1710 01A2                                           u1390 006B  
                                         u2350 04B5                                           u1615 0161  
                                         u1551 001F                                           u1535 0011  
                                         u2255 07B1                                           u2271 0F73  
                                         u1711 01A1                                           u1391 006A  
                                         u2351 04B4                                           u2335 048B  
                                         u1640 017F                                           u1560 0134  
                                         u2280 0FBB                                           u1800 0236  
                                         u1720 01CF                                           u2360 04BF  
                                         u1465 0EA6                                           u1641 017E  
                                         u1625 016B                                           u1561 0133  
                                         u1545 0016                                           u2281 0FBA  
                                         u1801 0235                                           u1721 01CE  
                                         u2361 04BE                                           u1650 0184  
                                         u1570 013F                                           u2290 0FCC  
                                         u1810 0242                                           u1730 01DB  
                                         u1475 0EB7                                           u1651 0183  
                                         u1635 0175                                           u1571 013E  
                                         u2195 0724                                           u2291 0FCB  
                                         u1811 0241                                           u1731 01DA  
                                         u1580 0150                                           u1900 0436  
                                         u1820 024F                                           u1740 01E5  
                                         u2380 0504                                           u1581 014F  
                                         u1485 0E56                                           u1901 0435  
                                         u1821 024E                                           u1741 01E4  
                                         u2381 0503                                           u1670 00F5  
                                         u1830 0339                                           u1750 01F2  
                                         u1910 0264                                           u2390 051C  
                                         u1671 00F4                                           u1495 0E64  
                                         u1831 0338                                           u1751 01F1  
                                         u1911 0263                                           u2391 051B  
                                         u2375 04F2                                           u1680 00FF  
                                         u1840 0349                                           u1920 0274  
                                         u1681 00FE                                           u1841 0348  
                                         u2457 00BE                                           u1921 0273  
                                         u1690 0123                                           u1850 0399  
                                         u1770 0211                                           u1930 0280  
                                         u1691 0122                                           u1595 0154  
                                         u1851 0398                                           u1771 0210  
                                         u1931 027F                                           u1860 03B1  
                                         u1780 0223                                           u1940 028F  
                                         u1861 03B0                                           u1781 0222  
                                         u1765 0202                                           u1941 028E  
                                         u1870 0401                                           u1790 0229  
                                         u1950 02AA                                           u1871 0400  
                                         u1791 0228                                           u1951 02A9  
                                         u1880 0419                                           u1960 02C4  
                                         u1881 0418                                           u1961 02C3  
                                         u1890 042A                                           u1970 02E5  
                                         u1891 0429                                           u1971 02E4  
                                         u1980 02F2                                           u1981 02F1  
                                         u1990 02FB                                           u1991 02FA  
                                         _WPUA 020C                                           _WPUB 020D  
                               ??_eeprom_write 0071                                           _main 0438  
                                         _rand 0025                                           _seed 006B  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         btemp 007E                                           start 0002  
                              ??_weights1_read 0075                                ??_weights2_read 0075  
                   __end_of_deactivateElevator 0E52                                biases1_read@add 0074  
                      ??_snake_getFoodPosition 0070                  __end_of_OSCILLATOR_Initialize 0E0F  
                              biases2_read@add 0074                                          ?_main 0070  
                                        ?_rand 007C                                __end_of___awdiv 018E  
                                        _EEADR 0191                                ___awdiv@divisor 0020  
                              ___awdiv@counter 0024                                          _RCREG 0199  
                                        _RCSTA 019D                                          _TRISA 008C  
                                        _TRISB 008D                                          _TXREG 019A  
                                        _TXSTA 019E                            ___lmul@multiplicand 0074  
                                        _field 00C4                                 _WDT_Initialize 0DE1  
                                        main@i 004B                                          main@j 004E  
                              __end_of_setLine 0F75                                __end_of_sigmoid 0E9F  
                                        status 0003                                          wtemp0 007E  
                              __initialization 07D9                                 _remainingMoves 0065  
                             ??_weights1_write 0026                                   __end_of_main 0544  
                             ??_weights2_write 0026                                   __end_of_rand 005A  
                                       ??_main 0045                                         ??_rand 0020  
                       __end_of_WDT_Initialize 0DE5              _EUSART_DefaultFramingErrorHandler 0000  
                   _EUSART_OverrunErrorHandler 00E6                                         _EEADRH 0192  
                                       _EEADRL 0191                                         _EEDATA 0193  
                                       _EEDATH 0194                                         _EEDATL 0193  
                                       _EECON1 0195                                         _EECON2 0196  
                             ___awdiv@dividend 0022                                         _ANSELA 018C  
                                       _ANSELB 018D                                         _BORCON 0116  
                            ?_ai_getInputField 0070                                         _OSCCON 0099  
                                       _SPBRGH 019C                                         _SPBRGL 019B  
                                       _WDTCON 0097                             ??_ai_getInputField 0070  
                             __end_of_ledClear 0ED4              snake_getSurroundings@surroundings 0031  
                                       ___lmul 0FCD                                         ___wmul 0006  
                                    ??___awdiv 007D                                         _ai_run 032E  
                                       _choice 0068                                         _ledSet 0ED4  
                             _de_sigmoidValues 0800                                         _matrix 00B0  
                             ___awdiv@quotient 0026                           __end_of_eeprom_write 0F9F  
                             biases1_write@add 0025                               biases1_write@val 0024  
                                    ??_setLine 002D                                ?_WDT_Initialize 0070  
                                    ??_sigmoid 0070                                  ai_propagate@S 0030  
                                ai_propagate@i 0035                               biases2_write@add 0025  
                                ai_propagate@j 003A                               biases2_write@val 0024  
                                 _ai_propagate 0544                              _SYSTEM_Initialize 0E6F  
                                 _biases1_read 0E0F                                   _biases2_read 0E16  
                      __end_of__initialization 07FD                                eeprom_read@addr 0073  
                           ?_SYSTEM_Initialize 0070                                 __pcstackCOMMON 0070  
                                 __pidataBANK1 0E1D                            ??_SYSTEM_Initialize 0072  
                            ??_SPI1_Initialize 0070                             _spi1_configuration 0820  
                               _OPTION_REGbits 0095                          __end_of_sigmoidValues 0820  
                            eeprom_write@value 0070                ??_EUSART_SetOverrunErrorHandler 0072  
                              snake_initiate@i 0025                      __end_of_SYSTEM_Initialize 0E7F  
                          snake_move@direction 002A                                   _headPosition 0067  
                                   __pbssBANK0 0051                                     __pbssBANK1 00A0  
                                   __pbssBANK2 0120                          ai_propagate@incentive 0034  
                                   _de_sigmoid 0E7F                                 _SPI1_WriteByte 0DE5  
                          snake_move@incentive 002B                                     __pmaintext 0438  
                                      ?___lmul 0070                                        ?___wmul 0077  
                                      ?_ai_run 0070                                    sendMatrix@b 0074  
                                  sendMatrix@i 0077                                    sendMatrix@j 0076  
                                      ?_ledSet 0028                                    setLine@mask 002E  
                                      _BAUDCON 019F                                 ___lmul@product 0078  
                                      _APFCON0 011D                                        _APFCON1 011E  
                __end_of_snake_getFoodPosition 0DE1                           main@foodPosition_665 004A  
                           _deactivateElevator 0E45                                        _OSCTUNE 0098  
                                    ?_ledClear 0070                                        _SSP1ADD 0212  
                                      _SSP1BUF 0211                       ??_EUSART_SetErrorHandler 0072  
                          ?_deactivateElevator 0070                         __end_of_SPI1_WriteByte 0DEA  
                        _snake_getSurroundings 018E                              weights1_read@add1 0076  
                            weights1_read@add2 0074                               main@foodPosition 0049  
                                ??_ai_initiate 0028                          __end_of_weights1_read 0E60  
                                      ___awdiv 012E                          __end_of_weights2_read 0E6F  
                            weights2_read@add1 0076                              weights2_read@add2 0074  
                         ??_deactivateElevator 0070                                        __ptext1 0256  
                                      __ptext2 005A                                        __ptext3 018E  
                                      __ptext4 0DDE                                        __ptext5 0004  
                                      __ptext6 0F4F                                        __ptext7 0ED4  
                                      __ptext8 0EC2                                        __ptext9 0F9F  
                            __end_of_txMAX7219 0F2D                                        ai_run@i 002A  
                                      ai_run@j 0030                                        ai_run@z 002E  
                        _OSCILLATOR_Initialize 0E08                                        _mapping 00DC  
                                      _setLine 0F4F                       ??_PIN_MANAGER_Initialize 0070  
                                      _sigmoid 0E8F                                     ??_ledClear 0071  
                                      ledSet@c 0028                                        ledSet@l 002B  
                                      clrloop0 0DFD                           end_of_initialization 07FD  
                                   _sendMatrix 0F9F                       __end_of_de_sigmoidValues 0810  
                                  ?_de_sigmoid 0070          __end_of_EUSART_SetOverrunErrorHandler 0DFC  
                _EUSART_SetOverrunErrorHandler 0DF6                                ?_SPI1_WriteByte 0070  
                                      init_ram 0E02                                   _eeprom_write 0F75  
                                      initloop 0E03                                    snake_move@i 002C  
                            _EUSART_Initialize 0F2D                              weights1_write@val 0025  
                           ?_EUSART_Initialize 0070                                      _RCSTAbits 019D  
                                   _snake_move 0256                                 ai_propagate@dz 0043  
                            weights2_write@val 0025                            ??_EUSART_Initialize 0072  
                          __end_of_ai_initiate 012E                               ??_WDT_Initialize 0070  
                               txMAX7219@addr0 0072                                      _TRISAbits 008C  
                                    _TRISBbits 008D                                  _biases1_write 0E25  
                                _biases2_write 0E2F                         ?_snake_getSurroundings 0070  
                    __end_of_EUSART_Initialize 0F4F                                _SPI1_Initialize 0E39  
                                ??_eeprom_read 0070                                      _TXSTAbits 019E  
                                 _foodPosition 0066                                 _snake_getField 0004  
                                 ai_initiate@i 0029                                   ai_initiate@j 002B  
                               __end_of___lmul 1000                     _EUSART_DefaultErrorHandler 0000  
                               __end_of___wmul 0025                                 __end_of_ai_run 0438  
                               __end_of_ledSet 0EE6                         ?_OSCILLATOR_Initialize 0070  
                               _snake_initiate 005A                            start_initialization 07D9  
                                ??_initMAX7219 0073                                 ?_biases1_write 0024  
                               ?_biases2_write 0024                                    ?_sendMatrix 0070  
                       __end_of_snake_getField 0006                 ?_EUSART_SetOverrunErrorHandler 0070  
                                  _ai_initiate 00D0                     _EUSART_FramingErrorHandler 00E8  
                                     ??___lmul 0078                                    ?_snake_move 0070  
                                     ??___wmul 007B                         _EUSART_SetErrorHandler 0DEA  
                          __end_of_eeprom_read 0EFB                                       ??_ai_run 0028  
                                     ??_ledSet 0029                                    __pdataBANK1 00DC  
                             ai_initiate@i_903 002A                               ai_initiate@j_901 002C  
                       __end_of_snake_initiate 0092                                      ___latbits 0001  
                                __pcstackBANK0 0020                        __end_of_SPI1_Initialize 0E45  
                      snake_getSurroundings@cf 002C                        snake_getSurroundings@ch 002F  
                      snake_getSurroundings@lf 002B                        snake_getSurroundings@lh 002E  
                             eeprom_write@addr 0073                            __end_of_initMAX7219 00D0  
                                    __pnvBANK1 00E4                                ?_snake_getField 0070  
                       _PIN_MANAGER_Initialize 0EFB                                     setLine@val 002C  
                                     ?___awdiv 0020                               _ai_getInputField 0DDC  
                              ?_snake_initiate 0070                                   sendMatrix@nb 0075  
                        _snake_getFoodPosition 0DDE                                ??_biases1_write 007E  
                              ??_biases2_write 007E                                       ?_setLine 002C  
                                     ?_sigmoid 0070                               ??_SPI1_WriteByte 0070  
                                    _txMAX7219 0F13                                   ??_de_sigmoid 0070  
                               ___wmul@product 007B                                       _LATAbits 010C  
       EUSART_SetErrorHandler@interruptHandler 0070                                       _LATBbits 010D  
                                    clear_ram0 0DFC                                    _eeprom_read 0EE6  
                            _eusartRxLastError 006A                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 0072                                      ledClear@c 0070  
                                    ledClear@l 0073                                      _snakeSize 0069  
                                     _SSP1CON1 0215                                       _SSP1CON2 0216  
            _EUSART_DefaultOverrunErrorHandler 0000                                       _SSP1STAT 0214  
                                txMAX7219@dat0 0071                                      main@i_660 004D  
                                    main@i_663 004F                              ___wmul@multiplier 0077  
                                    main@j_664 0050                             __end_of_de_sigmoid 0E8F  
                               _weights1_write 0E9F                                      main@field 0048  
                               _weights2_write 0EB0                                    _initMAX7219 0092  
                      ??_snake_getSurroundings 0028                                     ?_txMAX7219 0071  
                                _sigmoidValues 0810                               ?_SPI1_Initialize 0070  
                                ?_ai_propagate 0070                              ___lmul@multiplier 0070  
                                ?_biases1_read 0070                                  ?_biases2_read 0070  
                                   _EECON1bits 0195                                    ai_run@i_911 002B  
                                  ai_run@i_915 002C                                    ai_run@i_917 002D  
                                  ai_run@j_913 0031                        ??_OSCILLATOR_Initialize 0070  
                          _EUSART_ErrorHandler 00E4                         __end_of_weights1_write 0EB0  
                       __end_of_weights2_write 0EC2                         ?_snake_getFoodPosition 0070  
                       snake_getSurroundings@i 002D                         snake_getSurroundings@p 002A  
                            ai_propagate@i_922 0036                              ai_propagate@i_931 0039  
                            ai_propagate@i_924 0037                              ai_propagate@i_933 003B  
                            ai_propagate@i_926 0038                              ai_propagate@i_935 003C  
                            ai_propagate@i_929 003D                              ai_propagate@j_930 003E  
                            ai_propagate@j_932 0041                              ai_propagate@j_925 003F  
                            ai_propagate@j_934 0042                              ai_propagate@j_928 0040  
                                  de_sigmoid@z 0071                                       _ledClear 0EC2  
                               ??_ai_propagate 0028                                       __ptext10 0092  
                                     __ptext11 0F13                                       __ptext20 0E16  
                                     __ptext12 0DE5                                       __ptext21 0E0F  
                                     __ptext13 0E45                                       __ptext30 0E2F  
                                     __ptext22 0EE6                                       __ptext14 032E  
                                     __ptext31 0E25                                       __ptext23 0006  
                                     __ptext15 0E8F                                       __ptext40 0DF6  
                                     __ptext32 0F75                                       __ptext24 012E  
                                     __ptext16 0544                                       __ptext41 0DF0  
                                     __ptext33 0DDC                                       __ptext25 00D0  
                                     __ptext17 0E60                                       __ptext42 0DEA  
                                     __ptext34 0E6F                                       __ptext26 0EB0  
                                     __ptext18 0E52                                       __ptext35 0DE1  
                                     __ptext27 0E9F                                       __ptext19 0E7F  
                                     __ptext36 0E39                                       __ptext28 0025  
                                     __ptext37 0EFB                                       __ptext29 0FCD  
                                     __ptext38 0E08                                       __ptext39 0F2D  
                                 _SSP1CON1bits 0215                                   ??_sendMatrix 0073  
                               ??_biases1_read 0074                                 ??_biases2_read 0074  
                      ?_EUSART_SetErrorHandler 0070                                   ?_ai_initiate 0070  
EUSART_SetOverrunErrorHandler@interruptHandler 0070                                   ??_snake_move 0028  
                                _weights1_read 0E52                                  _weights2_read 0E60  
        __end_of_EUSART_SetFramingErrorHandler 0DF6                  _EUSART_SetFramingErrorHandler 0DF0  
                           __end_of_sendMatrix 0FCD                                ?_weights1_write 0024  
                              ?_weights2_write 0024                                     _INTCONbits 000B  
                                  ??_txMAX7219 0072                       __end_of_ai_getInputField 0DDE  
                             ??_snake_getField 0070                             __end_of_snake_move 032E  
                                     setLine@j 0030                                       setLine@l 002F  
                      ?_PIN_MANAGER_Initialize 0070                 __end_of_EUSART_SetErrorHandler 0DF0  
                           weights1_write@add1 0027                             weights1_write@add2 0024  
                                     sigmoid@z 0071                               ??_snake_initiate 0024  
                   snake_getSurroundings@i_796 0030                                 ?_weights1_read 0074  
                               ?_weights2_read 0074  EUSART_SetFramingErrorHandler@interruptHandler 0070  
                                __pstringtext1 0800                                  __pstringtext2 0810  
                                __pstringtext3 0820                             weights2_write@add1 0027  
                           weights2_write@add2 0024                 __end_of_PIN_MANAGER_Initialize 0F13  
                                ?_eeprom_write 0070                                     _STATUSbits 0003  
                                 ?_eeprom_read 0070                     __end_of_spi1_configuration 0824  
