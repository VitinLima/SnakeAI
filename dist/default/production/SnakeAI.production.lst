

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Oct 08 03:34:01 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1,noexec
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    14                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    16                           	psect	clrtext,global,class=CODE,delta=2
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2
    45                           	psect	text26,local,class=CODE,merge=1,delta=2
    46                           	psect	text27,local,class=CODE,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,merge=1,delta=2
    48                           	psect	text29,local,class=CODE,merge=1,delta=2
    49                           	psect	text30,local,class=CODE,merge=1,delta=2
    50                           	psect	text31,local,class=CODE,merge=1,delta=2,group=1
    51                           	psect	text32,local,class=CODE,merge=1,delta=2
    52                           	psect	text33,local,class=CODE,merge=1,delta=2
    53                           	psect	text34,local,class=CODE,merge=1,delta=2
    54                           	psect	text35,local,class=CODE,merge=1,delta=2
    55                           	psect	text36,local,class=CODE,merge=1,delta=2
    56                           	psect	text37,local,class=CODE,merge=1,delta=2
    57                           	psect	text38,local,class=CODE,merge=1,delta=2
    58                           	psect	text39,local,class=CODE,merge=1,delta=2
    59                           	psect	text40,local,class=CODE,merge=1,delta=2
    60                           	psect	text41,local,class=CODE,merge=1,delta=2
    61                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    62                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    63                           	dabs	1,0x220,48
    64                           	dabs	1,0x1B0,64
    65                           	dabs	1,0x2100,0,_DW1
    66                           	dabs	1,0x7E,2
    67     0000                     
    68                           ; Version 2.40
    69                           ; Generated 17/11/2021 GMT
    70                           ; 
    71                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    72                           ; All rights reserved.
    73                           ; 
    74                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    75                           ; 
    76                           ; Redistribution and use in source and binary forms, with or without modification, are
    77                           ; permitted provided that the following conditions are met:
    78                           ; 
    79                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    80                           ;        conditions and the following disclaimer.
    81                           ; 
    82                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    83                           ;        of conditions and the following disclaimer in the documentation and/or other
    84                           ;        materials provided with the distribution. Publication is not required when
    85                           ;        this file is used in an embedded application.
    86                           ; 
    87                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    88                           ;        software without specific prior written permission.
    89                           ; 
    90                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    91                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    92                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    93                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    94                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    95                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    96                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    97                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    98                           ; 
    99                           ; 
   100                           ; Code-generator required, PIC16F1827 Definitions
   101                           ; 
   102                           ; SFR Addresses
   103     0000                     	;# 
   104     0001                     	;# 
   105     0002                     	;# 
   106     0003                     	;# 
   107     0004                     	;# 
   108     0005                     	;# 
   109     0006                     	;# 
   110     0007                     	;# 
   111     0008                     	;# 
   112     0009                     	;# 
   113     000A                     	;# 
   114     000B                     	;# 
   115     000C                     	;# 
   116     000D                     	;# 
   117     0011                     	;# 
   118     0012                     	;# 
   119     0013                     	;# 
   120     0014                     	;# 
   121     0015                     	;# 
   122     0016                     	;# 
   123     0016                     	;# 
   124     0017                     	;# 
   125     0018                     	;# 
   126     0019                     	;# 
   127     001A                     	;# 
   128     001B                     	;# 
   129     001C                     	;# 
   130     001E                     	;# 
   131     001F                     	;# 
   132     008C                     	;# 
   133     008D                     	;# 
   134     0091                     	;# 
   135     0092                     	;# 
   136     0093                     	;# 
   137     0094                     	;# 
   138     0095                     	;# 
   139     0096                     	;# 
   140     0097                     	;# 
   141     0098                     	;# 
   142     0099                     	;# 
   143     009A                     	;# 
   144     009B                     	;# 
   145     009B                     	;# 
   146     009C                     	;# 
   147     009D                     	;# 
   148     009E                     	;# 
   149     010C                     	;# 
   150     010D                     	;# 
   151     0111                     	;# 
   152     0112                     	;# 
   153     0113                     	;# 
   154     0114                     	;# 
   155     0115                     	;# 
   156     0116                     	;# 
   157     0117                     	;# 
   158     0118                     	;# 
   159     0119                     	;# 
   160     011A                     	;# 
   161     011B                     	;# 
   162     011D                     	;# 
   163     011E                     	;# 
   164     018C                     	;# 
   165     018D                     	;# 
   166     0191                     	;# 
   167     0191                     	;# 
   168     0192                     	;# 
   169     0193                     	;# 
   170     0193                     	;# 
   171     0193                     	;# 
   172     0194                     	;# 
   173     0195                     	;# 
   174     0196                     	;# 
   175     0199                     	;# 
   176     019A                     	;# 
   177     019B                     	;# 
   178     019B                     	;# 
   179     019B                     	;# 
   180     019B                     	;# 
   181     019C                     	;# 
   182     019C                     	;# 
   183     019D                     	;# 
   184     019E                     	;# 
   185     019F                     	;# 
   186     020C                     	;# 
   187     020D                     	;# 
   188     0211                     	;# 
   189     0211                     	;# 
   190     0212                     	;# 
   191     0212                     	;# 
   192     0213                     	;# 
   193     0213                     	;# 
   194     0214                     	;# 
   195     0214                     	;# 
   196     0215                     	;# 
   197     0215                     	;# 
   198     0215                     	;# 
   199     0216                     	;# 
   200     0216                     	;# 
   201     0217                     	;# 
   202     0217                     	;# 
   203     0219                     	;# 
   204     021A                     	;# 
   205     021B                     	;# 
   206     021C                     	;# 
   207     021D                     	;# 
   208     021E                     	;# 
   209     021F                     	;# 
   210     0291                     	;# 
   211     0291                     	;# 
   212     0292                     	;# 
   213     0293                     	;# 
   214     0294                     	;# 
   215     0295                     	;# 
   216     0295                     	;# 
   217     0296                     	;# 
   218     0298                     	;# 
   219     0298                     	;# 
   220     0299                     	;# 
   221     029A                     	;# 
   222     029B                     	;# 
   223     029C                     	;# 
   224     029C                     	;# 
   225     029D                     	;# 
   226     029E                     	;# 
   227     029E                     	;# 
   228     0311                     	;# 
   229     0311                     	;# 
   230     0312                     	;# 
   231     0313                     	;# 
   232     0318                     	;# 
   233     0318                     	;# 
   234     0319                     	;# 
   235     031A                     	;# 
   236     0394                     	;# 
   237     0395                     	;# 
   238     0396                     	;# 
   239     039A                     	;# 
   240     039C                     	;# 
   241     039D                     	;# 
   242     039E                     	;# 
   243     039F                     	;# 
   244     0415                     	;# 
   245     0416                     	;# 
   246     0417                     	;# 
   247     041C                     	;# 
   248     041D                     	;# 
   249     041E                     	;# 
   250     0FE4                     	;# 
   251     0FE5                     	;# 
   252     0FE6                     	;# 
   253     0FE7                     	;# 
   254     0FE8                     	;# 
   255     0FE9                     	;# 
   256     0FEA                     	;# 
   257     0FEB                     	;# 
   258     0FED                     	;# 
   259     0FEE                     	;# 
   260     0FEF                     	;# 
   261     0000                     	;# 
   262     0001                     	;# 
   263     0002                     	;# 
   264     0003                     	;# 
   265     0004                     	;# 
   266     0005                     	;# 
   267     0006                     	;# 
   268     0007                     	;# 
   269     0008                     	;# 
   270     0009                     	;# 
   271     000A                     	;# 
   272     000B                     	;# 
   273     000C                     	;# 
   274     000D                     	;# 
   275     0011                     	;# 
   276     0012                     	;# 
   277     0013                     	;# 
   278     0014                     	;# 
   279     0015                     	;# 
   280     0016                     	;# 
   281     0016                     	;# 
   282     0017                     	;# 
   283     0018                     	;# 
   284     0019                     	;# 
   285     001A                     	;# 
   286     001B                     	;# 
   287     001C                     	;# 
   288     001E                     	;# 
   289     001F                     	;# 
   290     008C                     	;# 
   291     008D                     	;# 
   292     0091                     	;# 
   293     0092                     	;# 
   294     0093                     	;# 
   295     0094                     	;# 
   296     0095                     	;# 
   297     0096                     	;# 
   298     0097                     	;# 
   299     0098                     	;# 
   300     0099                     	;# 
   301     009A                     	;# 
   302     009B                     	;# 
   303     009B                     	;# 
   304     009C                     	;# 
   305     009D                     	;# 
   306     009E                     	;# 
   307     010C                     	;# 
   308     010D                     	;# 
   309     0111                     	;# 
   310     0112                     	;# 
   311     0113                     	;# 
   312     0114                     	;# 
   313     0115                     	;# 
   314     0116                     	;# 
   315     0117                     	;# 
   316     0118                     	;# 
   317     0119                     	;# 
   318     011A                     	;# 
   319     011B                     	;# 
   320     011D                     	;# 
   321     011E                     	;# 
   322     018C                     	;# 
   323     018D                     	;# 
   324     0191                     	;# 
   325     0191                     	;# 
   326     0192                     	;# 
   327     0193                     	;# 
   328     0193                     	;# 
   329     0193                     	;# 
   330     0194                     	;# 
   331     0195                     	;# 
   332     0196                     	;# 
   333     0199                     	;# 
   334     019A                     	;# 
   335     019B                     	;# 
   336     019B                     	;# 
   337     019B                     	;# 
   338     019B                     	;# 
   339     019C                     	;# 
   340     019C                     	;# 
   341     019D                     	;# 
   342     019E                     	;# 
   343     019F                     	;# 
   344     020C                     	;# 
   345     020D                     	;# 
   346     0211                     	;# 
   347     0211                     	;# 
   348     0212                     	;# 
   349     0212                     	;# 
   350     0213                     	;# 
   351     0213                     	;# 
   352     0214                     	;# 
   353     0214                     	;# 
   354     0215                     	;# 
   355     0215                     	;# 
   356     0215                     	;# 
   357     0216                     	;# 
   358     0216                     	;# 
   359     0217                     	;# 
   360     0217                     	;# 
   361     0219                     	;# 
   362     021A                     	;# 
   363     021B                     	;# 
   364     021C                     	;# 
   365     021D                     	;# 
   366     021E                     	;# 
   367     021F                     	;# 
   368     0291                     	;# 
   369     0291                     	;# 
   370     0292                     	;# 
   371     0293                     	;# 
   372     0294                     	;# 
   373     0295                     	;# 
   374     0295                     	;# 
   375     0296                     	;# 
   376     0298                     	;# 
   377     0298                     	;# 
   378     0299                     	;# 
   379     029A                     	;# 
   380     029B                     	;# 
   381     029C                     	;# 
   382     029C                     	;# 
   383     029D                     	;# 
   384     029E                     	;# 
   385     029E                     	;# 
   386     0311                     	;# 
   387     0311                     	;# 
   388     0312                     	;# 
   389     0313                     	;# 
   390     0318                     	;# 
   391     0318                     	;# 
   392     0319                     	;# 
   393     031A                     	;# 
   394     0394                     	;# 
   395     0395                     	;# 
   396     0396                     	;# 
   397     039A                     	;# 
   398     039C                     	;# 
   399     039D                     	;# 
   400     039E                     	;# 
   401     039F                     	;# 
   402     0415                     	;# 
   403     0416                     	;# 
   404     0417                     	;# 
   405     041C                     	;# 
   406     041D                     	;# 
   407     041E                     	;# 
   408     0FE4                     	;# 
   409     0FE5                     	;# 
   410     0FE6                     	;# 
   411     0FE7                     	;# 
   412     0FE8                     	;# 
   413     0FE9                     	;# 
   414     0FEA                     	;# 
   415     0FEB                     	;# 
   416     0FED                     	;# 
   417     0FEE                     	;# 
   418     0FEF                     	;# 
   419     0000                     	;# 
   420     0001                     	;# 
   421     0002                     	;# 
   422     0003                     	;# 
   423     0004                     	;# 
   424     0005                     	;# 
   425     0006                     	;# 
   426     0007                     	;# 
   427     0008                     	;# 
   428     0009                     	;# 
   429     000A                     	;# 
   430     000B                     	;# 
   431     000C                     	;# 
   432     000D                     	;# 
   433     0011                     	;# 
   434     0012                     	;# 
   435     0013                     	;# 
   436     0014                     	;# 
   437     0015                     	;# 
   438     0016                     	;# 
   439     0016                     	;# 
   440     0017                     	;# 
   441     0018                     	;# 
   442     0019                     	;# 
   443     001A                     	;# 
   444     001B                     	;# 
   445     001C                     	;# 
   446     001E                     	;# 
   447     001F                     	;# 
   448     008C                     	;# 
   449     008D                     	;# 
   450     0091                     	;# 
   451     0092                     	;# 
   452     0093                     	;# 
   453     0094                     	;# 
   454     0095                     	;# 
   455     0096                     	;# 
   456     0097                     	;# 
   457     0098                     	;# 
   458     0099                     	;# 
   459     009A                     	;# 
   460     009B                     	;# 
   461     009B                     	;# 
   462     009C                     	;# 
   463     009D                     	;# 
   464     009E                     	;# 
   465     010C                     	;# 
   466     010D                     	;# 
   467     0111                     	;# 
   468     0112                     	;# 
   469     0113                     	;# 
   470     0114                     	;# 
   471     0115                     	;# 
   472     0116                     	;# 
   473     0117                     	;# 
   474     0118                     	;# 
   475     0119                     	;# 
   476     011A                     	;# 
   477     011B                     	;# 
   478     011D                     	;# 
   479     011E                     	;# 
   480     018C                     	;# 
   481     018D                     	;# 
   482     0191                     	;# 
   483     0191                     	;# 
   484     0192                     	;# 
   485     0193                     	;# 
   486     0193                     	;# 
   487     0193                     	;# 
   488     0194                     	;# 
   489     0195                     	;# 
   490     0196                     	;# 
   491     0199                     	;# 
   492     019A                     	;# 
   493     019B                     	;# 
   494     019B                     	;# 
   495     019B                     	;# 
   496     019B                     	;# 
   497     019C                     	;# 
   498     019C                     	;# 
   499     019D                     	;# 
   500     019E                     	;# 
   501     019F                     	;# 
   502     020C                     	;# 
   503     020D                     	;# 
   504     0211                     	;# 
   505     0211                     	;# 
   506     0212                     	;# 
   507     0212                     	;# 
   508     0213                     	;# 
   509     0213                     	;# 
   510     0214                     	;# 
   511     0214                     	;# 
   512     0215                     	;# 
   513     0215                     	;# 
   514     0215                     	;# 
   515     0216                     	;# 
   516     0216                     	;# 
   517     0217                     	;# 
   518     0217                     	;# 
   519     0219                     	;# 
   520     021A                     	;# 
   521     021B                     	;# 
   522     021C                     	;# 
   523     021D                     	;# 
   524     021E                     	;# 
   525     021F                     	;# 
   526     0291                     	;# 
   527     0291                     	;# 
   528     0292                     	;# 
   529     0293                     	;# 
   530     0294                     	;# 
   531     0295                     	;# 
   532     0295                     	;# 
   533     0296                     	;# 
   534     0298                     	;# 
   535     0298                     	;# 
   536     0299                     	;# 
   537     029A                     	;# 
   538     029B                     	;# 
   539     029C                     	;# 
   540     029C                     	;# 
   541     029D                     	;# 
   542     029E                     	;# 
   543     029E                     	;# 
   544     0311                     	;# 
   545     0311                     	;# 
   546     0312                     	;# 
   547     0313                     	;# 
   548     0318                     	;# 
   549     0318                     	;# 
   550     0319                     	;# 
   551     031A                     	;# 
   552     0394                     	;# 
   553     0395                     	;# 
   554     0396                     	;# 
   555     039A                     	;# 
   556     039C                     	;# 
   557     039D                     	;# 
   558     039E                     	;# 
   559     039F                     	;# 
   560     0415                     	;# 
   561     0416                     	;# 
   562     0417                     	;# 
   563     041C                     	;# 
   564     041D                     	;# 
   565     041E                     	;# 
   566     0FE4                     	;# 
   567     0FE5                     	;# 
   568     0FE6                     	;# 
   569     0FE7                     	;# 
   570     0FE8                     	;# 
   571     0FE9                     	;# 
   572     0FEA                     	;# 
   573     0FEB                     	;# 
   574     0FED                     	;# 
   575     0FEE                     	;# 
   576     0FEF                     	;# 
   577     0000                     	;# 
   578     0001                     	;# 
   579     0002                     	;# 
   580     0003                     	;# 
   581     0004                     	;# 
   582     0005                     	;# 
   583     0006                     	;# 
   584     0007                     	;# 
   585     0008                     	;# 
   586     0009                     	;# 
   587     000A                     	;# 
   588     000B                     	;# 
   589     000C                     	;# 
   590     000D                     	;# 
   591     0011                     	;# 
   592     0012                     	;# 
   593     0013                     	;# 
   594     0014                     	;# 
   595     0015                     	;# 
   596     0016                     	;# 
   597     0016                     	;# 
   598     0017                     	;# 
   599     0018                     	;# 
   600     0019                     	;# 
   601     001A                     	;# 
   602     001B                     	;# 
   603     001C                     	;# 
   604     001E                     	;# 
   605     001F                     	;# 
   606     008C                     	;# 
   607     008D                     	;# 
   608     0091                     	;# 
   609     0092                     	;# 
   610     0093                     	;# 
   611     0094                     	;# 
   612     0095                     	;# 
   613     0096                     	;# 
   614     0097                     	;# 
   615     0098                     	;# 
   616     0099                     	;# 
   617     009A                     	;# 
   618     009B                     	;# 
   619     009B                     	;# 
   620     009C                     	;# 
   621     009D                     	;# 
   622     009E                     	;# 
   623     010C                     	;# 
   624     010D                     	;# 
   625     0111                     	;# 
   626     0112                     	;# 
   627     0113                     	;# 
   628     0114                     	;# 
   629     0115                     	;# 
   630     0116                     	;# 
   631     0117                     	;# 
   632     0118                     	;# 
   633     0119                     	;# 
   634     011A                     	;# 
   635     011B                     	;# 
   636     011D                     	;# 
   637     011E                     	;# 
   638     018C                     	;# 
   639     018D                     	;# 
   640     0191                     	;# 
   641     0191                     	;# 
   642     0192                     	;# 
   643     0193                     	;# 
   644     0193                     	;# 
   645     0193                     	;# 
   646     0194                     	;# 
   647     0195                     	;# 
   648     0196                     	;# 
   649     0199                     	;# 
   650     019A                     	;# 
   651     019B                     	;# 
   652     019B                     	;# 
   653     019B                     	;# 
   654     019B                     	;# 
   655     019C                     	;# 
   656     019C                     	;# 
   657     019D                     	;# 
   658     019E                     	;# 
   659     019F                     	;# 
   660     020C                     	;# 
   661     020D                     	;# 
   662     0211                     	;# 
   663     0211                     	;# 
   664     0212                     	;# 
   665     0212                     	;# 
   666     0213                     	;# 
   667     0213                     	;# 
   668     0214                     	;# 
   669     0214                     	;# 
   670     0215                     	;# 
   671     0215                     	;# 
   672     0215                     	;# 
   673     0216                     	;# 
   674     0216                     	;# 
   675     0217                     	;# 
   676     0217                     	;# 
   677     0219                     	;# 
   678     021A                     	;# 
   679     021B                     	;# 
   680     021C                     	;# 
   681     021D                     	;# 
   682     021E                     	;# 
   683     021F                     	;# 
   684     0291                     	;# 
   685     0291                     	;# 
   686     0292                     	;# 
   687     0293                     	;# 
   688     0294                     	;# 
   689     0295                     	;# 
   690     0295                     	;# 
   691     0296                     	;# 
   692     0298                     	;# 
   693     0298                     	;# 
   694     0299                     	;# 
   695     029A                     	;# 
   696     029B                     	;# 
   697     029C                     	;# 
   698     029C                     	;# 
   699     029D                     	;# 
   700     029E                     	;# 
   701     029E                     	;# 
   702     0311                     	;# 
   703     0311                     	;# 
   704     0312                     	;# 
   705     0313                     	;# 
   706     0318                     	;# 
   707     0318                     	;# 
   708     0319                     	;# 
   709     031A                     	;# 
   710     0394                     	;# 
   711     0395                     	;# 
   712     0396                     	;# 
   713     039A                     	;# 
   714     039C                     	;# 
   715     039D                     	;# 
   716     039E                     	;# 
   717     039F                     	;# 
   718     0415                     	;# 
   719     0416                     	;# 
   720     0417                     	;# 
   721     041C                     	;# 
   722     041D                     	;# 
   723     041E                     	;# 
   724     0FE4                     	;# 
   725     0FE5                     	;# 
   726     0FE6                     	;# 
   727     0FE7                     	;# 
   728     0FE8                     	;# 
   729     0FE9                     	;# 
   730     0FEA                     	;# 
   731     0FEB                     	;# 
   732     0FED                     	;# 
   733     0FEE                     	;# 
   734     0FEF                     	;# 
   735     0000                     	;# 
   736     0001                     	;# 
   737     0002                     	;# 
   738     0003                     	;# 
   739     0004                     	;# 
   740     0005                     	;# 
   741     0006                     	;# 
   742     0007                     	;# 
   743     0008                     	;# 
   744     0009                     	;# 
   745     000A                     	;# 
   746     000B                     	;# 
   747     000C                     	;# 
   748     000D                     	;# 
   749     0011                     	;# 
   750     0012                     	;# 
   751     0013                     	;# 
   752     0014                     	;# 
   753     0015                     	;# 
   754     0016                     	;# 
   755     0016                     	;# 
   756     0017                     	;# 
   757     0018                     	;# 
   758     0019                     	;# 
   759     001A                     	;# 
   760     001B                     	;# 
   761     001C                     	;# 
   762     001E                     	;# 
   763     001F                     	;# 
   764     008C                     	;# 
   765     008D                     	;# 
   766     0091                     	;# 
   767     0092                     	;# 
   768     0093                     	;# 
   769     0094                     	;# 
   770     0095                     	;# 
   771     0096                     	;# 
   772     0097                     	;# 
   773     0098                     	;# 
   774     0099                     	;# 
   775     009A                     	;# 
   776     009B                     	;# 
   777     009B                     	;# 
   778     009C                     	;# 
   779     009D                     	;# 
   780     009E                     	;# 
   781     010C                     	;# 
   782     010D                     	;# 
   783     0111                     	;# 
   784     0112                     	;# 
   785     0113                     	;# 
   786     0114                     	;# 
   787     0115                     	;# 
   788     0116                     	;# 
   789     0117                     	;# 
   790     0118                     	;# 
   791     0119                     	;# 
   792     011A                     	;# 
   793     011B                     	;# 
   794     011D                     	;# 
   795     011E                     	;# 
   796     018C                     	;# 
   797     018D                     	;# 
   798     0191                     	;# 
   799     0191                     	;# 
   800     0192                     	;# 
   801     0193                     	;# 
   802     0193                     	;# 
   803     0193                     	;# 
   804     0194                     	;# 
   805     0195                     	;# 
   806     0196                     	;# 
   807     0199                     	;# 
   808     019A                     	;# 
   809     019B                     	;# 
   810     019B                     	;# 
   811     019B                     	;# 
   812     019B                     	;# 
   813     019C                     	;# 
   814     019C                     	;# 
   815     019D                     	;# 
   816     019E                     	;# 
   817     019F                     	;# 
   818     020C                     	;# 
   819     020D                     	;# 
   820     0211                     	;# 
   821     0211                     	;# 
   822     0212                     	;# 
   823     0212                     	;# 
   824     0213                     	;# 
   825     0213                     	;# 
   826     0214                     	;# 
   827     0214                     	;# 
   828     0215                     	;# 
   829     0215                     	;# 
   830     0215                     	;# 
   831     0216                     	;# 
   832     0216                     	;# 
   833     0217                     	;# 
   834     0217                     	;# 
   835     0219                     	;# 
   836     021A                     	;# 
   837     021B                     	;# 
   838     021C                     	;# 
   839     021D                     	;# 
   840     021E                     	;# 
   841     021F                     	;# 
   842     0291                     	;# 
   843     0291                     	;# 
   844     0292                     	;# 
   845     0293                     	;# 
   846     0294                     	;# 
   847     0295                     	;# 
   848     0295                     	;# 
   849     0296                     	;# 
   850     0298                     	;# 
   851     0298                     	;# 
   852     0299                     	;# 
   853     029A                     	;# 
   854     029B                     	;# 
   855     029C                     	;# 
   856     029C                     	;# 
   857     029D                     	;# 
   858     029E                     	;# 
   859     029E                     	;# 
   860     0311                     	;# 
   861     0311                     	;# 
   862     0312                     	;# 
   863     0313                     	;# 
   864     0318                     	;# 
   865     0318                     	;# 
   866     0319                     	;# 
   867     031A                     	;# 
   868     0394                     	;# 
   869     0395                     	;# 
   870     0396                     	;# 
   871     039A                     	;# 
   872     039C                     	;# 
   873     039D                     	;# 
   874     039E                     	;# 
   875     039F                     	;# 
   876     0415                     	;# 
   877     0416                     	;# 
   878     0417                     	;# 
   879     041C                     	;# 
   880     041D                     	;# 
   881     041E                     	;# 
   882     0FE4                     	;# 
   883     0FE5                     	;# 
   884     0FE6                     	;# 
   885     0FE7                     	;# 
   886     0FE8                     	;# 
   887     0FE9                     	;# 
   888     0FEA                     	;# 
   889     0FEB                     	;# 
   890     0FED                     	;# 
   891     0FEE                     	;# 
   892     0FEF                     	;# 
   893     0000                     	;# 
   894     0001                     	;# 
   895     0002                     	;# 
   896     0003                     	;# 
   897     0004                     	;# 
   898     0005                     	;# 
   899     0006                     	;# 
   900     0007                     	;# 
   901     0008                     	;# 
   902     0009                     	;# 
   903     000A                     	;# 
   904     000B                     	;# 
   905     000C                     	;# 
   906     000D                     	;# 
   907     0011                     	;# 
   908     0012                     	;# 
   909     0013                     	;# 
   910     0014                     	;# 
   911     0015                     	;# 
   912     0016                     	;# 
   913     0016                     	;# 
   914     0017                     	;# 
   915     0018                     	;# 
   916     0019                     	;# 
   917     001A                     	;# 
   918     001B                     	;# 
   919     001C                     	;# 
   920     001E                     	;# 
   921     001F                     	;# 
   922     008C                     	;# 
   923     008D                     	;# 
   924     0091                     	;# 
   925     0092                     	;# 
   926     0093                     	;# 
   927     0094                     	;# 
   928     0095                     	;# 
   929     0096                     	;# 
   930     0097                     	;# 
   931     0098                     	;# 
   932     0099                     	;# 
   933     009A                     	;# 
   934     009B                     	;# 
   935     009B                     	;# 
   936     009C                     	;# 
   937     009D                     	;# 
   938     009E                     	;# 
   939     010C                     	;# 
   940     010D                     	;# 
   941     0111                     	;# 
   942     0112                     	;# 
   943     0113                     	;# 
   944     0114                     	;# 
   945     0115                     	;# 
   946     0116                     	;# 
   947     0117                     	;# 
   948     0118                     	;# 
   949     0119                     	;# 
   950     011A                     	;# 
   951     011B                     	;# 
   952     011D                     	;# 
   953     011E                     	;# 
   954     018C                     	;# 
   955     018D                     	;# 
   956     0191                     	;# 
   957     0191                     	;# 
   958     0192                     	;# 
   959     0193                     	;# 
   960     0193                     	;# 
   961     0193                     	;# 
   962     0194                     	;# 
   963     0195                     	;# 
   964     0196                     	;# 
   965     0199                     	;# 
   966     019A                     	;# 
   967     019B                     	;# 
   968     019B                     	;# 
   969     019B                     	;# 
   970     019B                     	;# 
   971     019C                     	;# 
   972     019C                     	;# 
   973     019D                     	;# 
   974     019E                     	;# 
   975     019F                     	;# 
   976     020C                     	;# 
   977     020D                     	;# 
   978     0211                     	;# 
   979     0211                     	;# 
   980     0212                     	;# 
   981     0212                     	;# 
   982     0213                     	;# 
   983     0213                     	;# 
   984     0214                     	;# 
   985     0214                     	;# 
   986     0215                     	;# 
   987     0215                     	;# 
   988     0215                     	;# 
   989     0216                     	;# 
   990     0216                     	;# 
   991     0217                     	;# 
   992     0217                     	;# 
   993     0219                     	;# 
   994     021A                     	;# 
   995     021B                     	;# 
   996     021C                     	;# 
   997     021D                     	;# 
   998     021E                     	;# 
   999     021F                     	;# 
  1000     0291                     	;# 
  1001     0291                     	;# 
  1002     0292                     	;# 
  1003     0293                     	;# 
  1004     0294                     	;# 
  1005     0295                     	;# 
  1006     0295                     	;# 
  1007     0296                     	;# 
  1008     0298                     	;# 
  1009     0298                     	;# 
  1010     0299                     	;# 
  1011     029A                     	;# 
  1012     029B                     	;# 
  1013     029C                     	;# 
  1014     029C                     	;# 
  1015     029D                     	;# 
  1016     029E                     	;# 
  1017     029E                     	;# 
  1018     0311                     	;# 
  1019     0311                     	;# 
  1020     0312                     	;# 
  1021     0313                     	;# 
  1022     0318                     	;# 
  1023     0318                     	;# 
  1024     0319                     	;# 
  1025     031A                     	;# 
  1026     0394                     	;# 
  1027     0395                     	;# 
  1028     0396                     	;# 
  1029     039A                     	;# 
  1030     039C                     	;# 
  1031     039D                     	;# 
  1032     039E                     	;# 
  1033     039F                     	;# 
  1034     0415                     	;# 
  1035     0416                     	;# 
  1036     0417                     	;# 
  1037     041C                     	;# 
  1038     041D                     	;# 
  1039     041E                     	;# 
  1040     0FE4                     	;# 
  1041     0FE5                     	;# 
  1042     0FE6                     	;# 
  1043     0FE7                     	;# 
  1044     0FE8                     	;# 
  1045     0FE9                     	;# 
  1046     0FEA                     	;# 
  1047     0FEB                     	;# 
  1048     0FED                     	;# 
  1049     0FEE                     	;# 
  1050     0FEF                     	;# 
  1051     0000                     	;# 
  1052     0001                     	;# 
  1053     0002                     	;# 
  1054     0003                     	;# 
  1055     0004                     	;# 
  1056     0005                     	;# 
  1057     0006                     	;# 
  1058     0007                     	;# 
  1059     0008                     	;# 
  1060     0009                     	;# 
  1061     000A                     	;# 
  1062     000B                     	;# 
  1063     000C                     	;# 
  1064     000D                     	;# 
  1065     0011                     	;# 
  1066     0012                     	;# 
  1067     0013                     	;# 
  1068     0014                     	;# 
  1069     0015                     	;# 
  1070     0016                     	;# 
  1071     0016                     	;# 
  1072     0017                     	;# 
  1073     0018                     	;# 
  1074     0019                     	;# 
  1075     001A                     	;# 
  1076     001B                     	;# 
  1077     001C                     	;# 
  1078     001E                     	;# 
  1079     001F                     	;# 
  1080     008C                     	;# 
  1081     008D                     	;# 
  1082     0091                     	;# 
  1083     0092                     	;# 
  1084     0093                     	;# 
  1085     0094                     	;# 
  1086     0095                     	;# 
  1087     0096                     	;# 
  1088     0097                     	;# 
  1089     0098                     	;# 
  1090     0099                     	;# 
  1091     009A                     	;# 
  1092     009B                     	;# 
  1093     009B                     	;# 
  1094     009C                     	;# 
  1095     009D                     	;# 
  1096     009E                     	;# 
  1097     010C                     	;# 
  1098     010D                     	;# 
  1099     0111                     	;# 
  1100     0112                     	;# 
  1101     0113                     	;# 
  1102     0114                     	;# 
  1103     0115                     	;# 
  1104     0116                     	;# 
  1105     0117                     	;# 
  1106     0118                     	;# 
  1107     0119                     	;# 
  1108     011A                     	;# 
  1109     011B                     	;# 
  1110     011D                     	;# 
  1111     011E                     	;# 
  1112     018C                     	;# 
  1113     018D                     	;# 
  1114     0191                     	;# 
  1115     0191                     	;# 
  1116     0192                     	;# 
  1117     0193                     	;# 
  1118     0193                     	;# 
  1119     0193                     	;# 
  1120     0194                     	;# 
  1121     0195                     	;# 
  1122     0196                     	;# 
  1123     0199                     	;# 
  1124     019A                     	;# 
  1125     019B                     	;# 
  1126     019B                     	;# 
  1127     019B                     	;# 
  1128     019B                     	;# 
  1129     019C                     	;# 
  1130     019C                     	;# 
  1131     019D                     	;# 
  1132     019E                     	;# 
  1133     019F                     	;# 
  1134     020C                     	;# 
  1135     020D                     	;# 
  1136     0211                     	;# 
  1137     0211                     	;# 
  1138     0212                     	;# 
  1139     0212                     	;# 
  1140     0213                     	;# 
  1141     0213                     	;# 
  1142     0214                     	;# 
  1143     0214                     	;# 
  1144     0215                     	;# 
  1145     0215                     	;# 
  1146     0215                     	;# 
  1147     0216                     	;# 
  1148     0216                     	;# 
  1149     0217                     	;# 
  1150     0217                     	;# 
  1151     0219                     	;# 
  1152     021A                     	;# 
  1153     021B                     	;# 
  1154     021C                     	;# 
  1155     021D                     	;# 
  1156     021E                     	;# 
  1157     021F                     	;# 
  1158     0291                     	;# 
  1159     0291                     	;# 
  1160     0292                     	;# 
  1161     0293                     	;# 
  1162     0294                     	;# 
  1163     0295                     	;# 
  1164     0295                     	;# 
  1165     0296                     	;# 
  1166     0298                     	;# 
  1167     0298                     	;# 
  1168     0299                     	;# 
  1169     029A                     	;# 
  1170     029B                     	;# 
  1171     029C                     	;# 
  1172     029C                     	;# 
  1173     029D                     	;# 
  1174     029E                     	;# 
  1175     029E                     	;# 
  1176     0311                     	;# 
  1177     0311                     	;# 
  1178     0312                     	;# 
  1179     0313                     	;# 
  1180     0318                     	;# 
  1181     0318                     	;# 
  1182     0319                     	;# 
  1183     031A                     	;# 
  1184     0394                     	;# 
  1185     0395                     	;# 
  1186     0396                     	;# 
  1187     039A                     	;# 
  1188     039C                     	;# 
  1189     039D                     	;# 
  1190     039E                     	;# 
  1191     039F                     	;# 
  1192     0415                     	;# 
  1193     0416                     	;# 
  1194     0417                     	;# 
  1195     041C                     	;# 
  1196     041D                     	;# 
  1197     041E                     	;# 
  1198     0FE4                     	;# 
  1199     0FE5                     	;# 
  1200     0FE6                     	;# 
  1201     0FE7                     	;# 
  1202     0FE8                     	;# 
  1203     0FE9                     	;# 
  1204     0FEA                     	;# 
  1205     0FEB                     	;# 
  1206     0FED                     	;# 
  1207     0FEE                     	;# 
  1208     0FEF                     	;# 
  1209     0000                     	;# 
  1210     0001                     	;# 
  1211     0002                     	;# 
  1212     0003                     	;# 
  1213     0004                     	;# 
  1214     0005                     	;# 
  1215     0006                     	;# 
  1216     0007                     	;# 
  1217     0008                     	;# 
  1218     0009                     	;# 
  1219     000A                     	;# 
  1220     000B                     	;# 
  1221     000C                     	;# 
  1222     000D                     	;# 
  1223     0011                     	;# 
  1224     0012                     	;# 
  1225     0013                     	;# 
  1226     0014                     	;# 
  1227     0015                     	;# 
  1228     0016                     	;# 
  1229     0016                     	;# 
  1230     0017                     	;# 
  1231     0018                     	;# 
  1232     0019                     	;# 
  1233     001A                     	;# 
  1234     001B                     	;# 
  1235     001C                     	;# 
  1236     001E                     	;# 
  1237     001F                     	;# 
  1238     008C                     	;# 
  1239     008D                     	;# 
  1240     0091                     	;# 
  1241     0092                     	;# 
  1242     0093                     	;# 
  1243     0094                     	;# 
  1244     0095                     	;# 
  1245     0096                     	;# 
  1246     0097                     	;# 
  1247     0098                     	;# 
  1248     0099                     	;# 
  1249     009A                     	;# 
  1250     009B                     	;# 
  1251     009B                     	;# 
  1252     009C                     	;# 
  1253     009D                     	;# 
  1254     009E                     	;# 
  1255     010C                     	;# 
  1256     010D                     	;# 
  1257     0111                     	;# 
  1258     0112                     	;# 
  1259     0113                     	;# 
  1260     0114                     	;# 
  1261     0115                     	;# 
  1262     0116                     	;# 
  1263     0117                     	;# 
  1264     0118                     	;# 
  1265     0119                     	;# 
  1266     011A                     	;# 
  1267     011B                     	;# 
  1268     011D                     	;# 
  1269     011E                     	;# 
  1270     018C                     	;# 
  1271     018D                     	;# 
  1272     0191                     	;# 
  1273     0191                     	;# 
  1274     0192                     	;# 
  1275     0193                     	;# 
  1276     0193                     	;# 
  1277     0193                     	;# 
  1278     0194                     	;# 
  1279     0195                     	;# 
  1280     0196                     	;# 
  1281     0199                     	;# 
  1282     019A                     	;# 
  1283     019B                     	;# 
  1284     019B                     	;# 
  1285     019B                     	;# 
  1286     019B                     	;# 
  1287     019C                     	;# 
  1288     019C                     	;# 
  1289     019D                     	;# 
  1290     019E                     	;# 
  1291     019F                     	;# 
  1292     020C                     	;# 
  1293     020D                     	;# 
  1294     0211                     	;# 
  1295     0211                     	;# 
  1296     0212                     	;# 
  1297     0212                     	;# 
  1298     0213                     	;# 
  1299     0213                     	;# 
  1300     0214                     	;# 
  1301     0214                     	;# 
  1302     0215                     	;# 
  1303     0215                     	;# 
  1304     0215                     	;# 
  1305     0216                     	;# 
  1306     0216                     	;# 
  1307     0217                     	;# 
  1308     0217                     	;# 
  1309     0219                     	;# 
  1310     021A                     	;# 
  1311     021B                     	;# 
  1312     021C                     	;# 
  1313     021D                     	;# 
  1314     021E                     	;# 
  1315     021F                     	;# 
  1316     0291                     	;# 
  1317     0291                     	;# 
  1318     0292                     	;# 
  1319     0293                     	;# 
  1320     0294                     	;# 
  1321     0295                     	;# 
  1322     0295                     	;# 
  1323     0296                     	;# 
  1324     0298                     	;# 
  1325     0298                     	;# 
  1326     0299                     	;# 
  1327     029A                     	;# 
  1328     029B                     	;# 
  1329     029C                     	;# 
  1330     029C                     	;# 
  1331     029D                     	;# 
  1332     029E                     	;# 
  1333     029E                     	;# 
  1334     0311                     	;# 
  1335     0311                     	;# 
  1336     0312                     	;# 
  1337     0313                     	;# 
  1338     0318                     	;# 
  1339     0318                     	;# 
  1340     0319                     	;# 
  1341     031A                     	;# 
  1342     0394                     	;# 
  1343     0395                     	;# 
  1344     0396                     	;# 
  1345     039A                     	;# 
  1346     039C                     	;# 
  1347     039D                     	;# 
  1348     039E                     	;# 
  1349     039F                     	;# 
  1350     0415                     	;# 
  1351     0416                     	;# 
  1352     0417                     	;# 
  1353     041C                     	;# 
  1354     041D                     	;# 
  1355     041E                     	;# 
  1356     0FE4                     	;# 
  1357     0FE5                     	;# 
  1358     0FE6                     	;# 
  1359     0FE7                     	;# 
  1360     0FE8                     	;# 
  1361     0FE9                     	;# 
  1362     0FEA                     	;# 
  1363     0FEB                     	;# 
  1364     0FED                     	;# 
  1365     0FEE                     	;# 
  1366     0FEF                     	;# 
  1367     0000                     	;# 
  1368     0001                     	;# 
  1369     0002                     	;# 
  1370     0003                     	;# 
  1371     0004                     	;# 
  1372     0005                     	;# 
  1373     0006                     	;# 
  1374     0007                     	;# 
  1375     0008                     	;# 
  1376     0009                     	;# 
  1377     000A                     	;# 
  1378     000B                     	;# 
  1379     000C                     	;# 
  1380     000D                     	;# 
  1381     0011                     	;# 
  1382     0012                     	;# 
  1383     0013                     	;# 
  1384     0014                     	;# 
  1385     0015                     	;# 
  1386     0016                     	;# 
  1387     0016                     	;# 
  1388     0017                     	;# 
  1389     0018                     	;# 
  1390     0019                     	;# 
  1391     001A                     	;# 
  1392     001B                     	;# 
  1393     001C                     	;# 
  1394     001E                     	;# 
  1395     001F                     	;# 
  1396     008C                     	;# 
  1397     008D                     	;# 
  1398     0091                     	;# 
  1399     0092                     	;# 
  1400     0093                     	;# 
  1401     0094                     	;# 
  1402     0095                     	;# 
  1403     0096                     	;# 
  1404     0097                     	;# 
  1405     0098                     	;# 
  1406     0099                     	;# 
  1407     009A                     	;# 
  1408     009B                     	;# 
  1409     009B                     	;# 
  1410     009C                     	;# 
  1411     009D                     	;# 
  1412     009E                     	;# 
  1413     010C                     	;# 
  1414     010D                     	;# 
  1415     0111                     	;# 
  1416     0112                     	;# 
  1417     0113                     	;# 
  1418     0114                     	;# 
  1419     0115                     	;# 
  1420     0116                     	;# 
  1421     0117                     	;# 
  1422     0118                     	;# 
  1423     0119                     	;# 
  1424     011A                     	;# 
  1425     011B                     	;# 
  1426     011D                     	;# 
  1427     011E                     	;# 
  1428     018C                     	;# 
  1429     018D                     	;# 
  1430     0191                     	;# 
  1431     0191                     	;# 
  1432     0192                     	;# 
  1433     0193                     	;# 
  1434     0193                     	;# 
  1435     0193                     	;# 
  1436     0194                     	;# 
  1437     0195                     	;# 
  1438     0196                     	;# 
  1439     0199                     	;# 
  1440     019A                     	;# 
  1441     019B                     	;# 
  1442     019B                     	;# 
  1443     019B                     	;# 
  1444     019B                     	;# 
  1445     019C                     	;# 
  1446     019C                     	;# 
  1447     019D                     	;# 
  1448     019E                     	;# 
  1449     019F                     	;# 
  1450     020C                     	;# 
  1451     020D                     	;# 
  1452     0211                     	;# 
  1453     0211                     	;# 
  1454     0212                     	;# 
  1455     0212                     	;# 
  1456     0213                     	;# 
  1457     0213                     	;# 
  1458     0214                     	;# 
  1459     0214                     	;# 
  1460     0215                     	;# 
  1461     0215                     	;# 
  1462     0215                     	;# 
  1463     0216                     	;# 
  1464     0216                     	;# 
  1465     0217                     	;# 
  1466     0217                     	;# 
  1467     0219                     	;# 
  1468     021A                     	;# 
  1469     021B                     	;# 
  1470     021C                     	;# 
  1471     021D                     	;# 
  1472     021E                     	;# 
  1473     021F                     	;# 
  1474     0291                     	;# 
  1475     0291                     	;# 
  1476     0292                     	;# 
  1477     0293                     	;# 
  1478     0294                     	;# 
  1479     0295                     	;# 
  1480     0295                     	;# 
  1481     0296                     	;# 
  1482     0298                     	;# 
  1483     0298                     	;# 
  1484     0299                     	;# 
  1485     029A                     	;# 
  1486     029B                     	;# 
  1487     029C                     	;# 
  1488     029C                     	;# 
  1489     029D                     	;# 
  1490     029E                     	;# 
  1491     029E                     	;# 
  1492     0311                     	;# 
  1493     0311                     	;# 
  1494     0312                     	;# 
  1495     0313                     	;# 
  1496     0318                     	;# 
  1497     0318                     	;# 
  1498     0319                     	;# 
  1499     031A                     	;# 
  1500     0394                     	;# 
  1501     0395                     	;# 
  1502     0396                     	;# 
  1503     039A                     	;# 
  1504     039C                     	;# 
  1505     039D                     	;# 
  1506     039E                     	;# 
  1507     039F                     	;# 
  1508     0415                     	;# 
  1509     0416                     	;# 
  1510     0417                     	;# 
  1511     041C                     	;# 
  1512     041D                     	;# 
  1513     041E                     	;# 
  1514     0FE4                     	;# 
  1515     0FE5                     	;# 
  1516     0FE6                     	;# 
  1517     0FE7                     	;# 
  1518     0FE8                     	;# 
  1519     0FE9                     	;# 
  1520     0FEA                     	;# 
  1521     0FEB                     	;# 
  1522     0FED                     	;# 
  1523     0FEE                     	;# 
  1524     0FEF                     	;# 
  1525     0000                     	;# 
  1526     0001                     	;# 
  1527     0002                     	;# 
  1528     0003                     	;# 
  1529     0004                     	;# 
  1530     0005                     	;# 
  1531     0006                     	;# 
  1532     0007                     	;# 
  1533     0008                     	;# 
  1534     0009                     	;# 
  1535     000A                     	;# 
  1536     000B                     	;# 
  1537     000C                     	;# 
  1538     000D                     	;# 
  1539     0011                     	;# 
  1540     0012                     	;# 
  1541     0013                     	;# 
  1542     0014                     	;# 
  1543     0015                     	;# 
  1544     0016                     	;# 
  1545     0016                     	;# 
  1546     0017                     	;# 
  1547     0018                     	;# 
  1548     0019                     	;# 
  1549     001A                     	;# 
  1550     001B                     	;# 
  1551     001C                     	;# 
  1552     001E                     	;# 
  1553     001F                     	;# 
  1554     008C                     	;# 
  1555     008D                     	;# 
  1556     0091                     	;# 
  1557     0092                     	;# 
  1558     0093                     	;# 
  1559     0094                     	;# 
  1560     0095                     	;# 
  1561     0096                     	;# 
  1562     0097                     	;# 
  1563     0098                     	;# 
  1564     0099                     	;# 
  1565     009A                     	;# 
  1566     009B                     	;# 
  1567     009B                     	;# 
  1568     009C                     	;# 
  1569     009D                     	;# 
  1570     009E                     	;# 
  1571     010C                     	;# 
  1572     010D                     	;# 
  1573     0111                     	;# 
  1574     0112                     	;# 
  1575     0113                     	;# 
  1576     0114                     	;# 
  1577     0115                     	;# 
  1578     0116                     	;# 
  1579     0117                     	;# 
  1580     0118                     	;# 
  1581     0119                     	;# 
  1582     011A                     	;# 
  1583     011B                     	;# 
  1584     011D                     	;# 
  1585     011E                     	;# 
  1586     018C                     	;# 
  1587     018D                     	;# 
  1588     0191                     	;# 
  1589     0191                     	;# 
  1590     0192                     	;# 
  1591     0193                     	;# 
  1592     0193                     	;# 
  1593     0193                     	;# 
  1594     0194                     	;# 
  1595     0195                     	;# 
  1596     0196                     	;# 
  1597     0199                     	;# 
  1598     019A                     	;# 
  1599     019B                     	;# 
  1600     019B                     	;# 
  1601     019B                     	;# 
  1602     019B                     	;# 
  1603     019C                     	;# 
  1604     019C                     	;# 
  1605     019D                     	;# 
  1606     019E                     	;# 
  1607     019F                     	;# 
  1608     020C                     	;# 
  1609     020D                     	;# 
  1610     0211                     	;# 
  1611     0211                     	;# 
  1612     0212                     	;# 
  1613     0212                     	;# 
  1614     0213                     	;# 
  1615     0213                     	;# 
  1616     0214                     	;# 
  1617     0214                     	;# 
  1618     0215                     	;# 
  1619     0215                     	;# 
  1620     0215                     	;# 
  1621     0216                     	;# 
  1622     0216                     	;# 
  1623     0217                     	;# 
  1624     0217                     	;# 
  1625     0219                     	;# 
  1626     021A                     	;# 
  1627     021B                     	;# 
  1628     021C                     	;# 
  1629     021D                     	;# 
  1630     021E                     	;# 
  1631     021F                     	;# 
  1632     0291                     	;# 
  1633     0291                     	;# 
  1634     0292                     	;# 
  1635     0293                     	;# 
  1636     0294                     	;# 
  1637     0295                     	;# 
  1638     0295                     	;# 
  1639     0296                     	;# 
  1640     0298                     	;# 
  1641     0298                     	;# 
  1642     0299                     	;# 
  1643     029A                     	;# 
  1644     029B                     	;# 
  1645     029C                     	;# 
  1646     029C                     	;# 
  1647     029D                     	;# 
  1648     029E                     	;# 
  1649     029E                     	;# 
  1650     0311                     	;# 
  1651     0311                     	;# 
  1652     0312                     	;# 
  1653     0313                     	;# 
  1654     0318                     	;# 
  1655     0318                     	;# 
  1656     0319                     	;# 
  1657     031A                     	;# 
  1658     0394                     	;# 
  1659     0395                     	;# 
  1660     0396                     	;# 
  1661     039A                     	;# 
  1662     039C                     	;# 
  1663     039D                     	;# 
  1664     039E                     	;# 
  1665     039F                     	;# 
  1666     0415                     	;# 
  1667     0416                     	;# 
  1668     0417                     	;# 
  1669     041C                     	;# 
  1670     041D                     	;# 
  1671     041E                     	;# 
  1672     0FE4                     	;# 
  1673     0FE5                     	;# 
  1674     0FE6                     	;# 
  1675     0FE7                     	;# 
  1676     0FE8                     	;# 
  1677     0FE9                     	;# 
  1678     0FEA                     	;# 
  1679     0FEB                     	;# 
  1680     0FED                     	;# 
  1681     0FEE                     	;# 
  1682     0FEF                     	;# 
  1683     0000                     	;# 
  1684     0001                     	;# 
  1685     0002                     	;# 
  1686     0003                     	;# 
  1687     0004                     	;# 
  1688     0005                     	;# 
  1689     0006                     	;# 
  1690     0007                     	;# 
  1691     0008                     	;# 
  1692     0009                     	;# 
  1693     000A                     	;# 
  1694     000B                     	;# 
  1695     000C                     	;# 
  1696     000D                     	;# 
  1697     0011                     	;# 
  1698     0012                     	;# 
  1699     0013                     	;# 
  1700     0014                     	;# 
  1701     0015                     	;# 
  1702     0016                     	;# 
  1703     0016                     	;# 
  1704     0017                     	;# 
  1705     0018                     	;# 
  1706     0019                     	;# 
  1707     001A                     	;# 
  1708     001B                     	;# 
  1709     001C                     	;# 
  1710     001E                     	;# 
  1711     001F                     	;# 
  1712     008C                     	;# 
  1713     008D                     	;# 
  1714     0091                     	;# 
  1715     0092                     	;# 
  1716     0093                     	;# 
  1717     0094                     	;# 
  1718     0095                     	;# 
  1719     0096                     	;# 
  1720     0097                     	;# 
  1721     0098                     	;# 
  1722     0099                     	;# 
  1723     009A                     	;# 
  1724     009B                     	;# 
  1725     009B                     	;# 
  1726     009C                     	;# 
  1727     009D                     	;# 
  1728     009E                     	;# 
  1729     010C                     	;# 
  1730     010D                     	;# 
  1731     0111                     	;# 
  1732     0112                     	;# 
  1733     0113                     	;# 
  1734     0114                     	;# 
  1735     0115                     	;# 
  1736     0116                     	;# 
  1737     0117                     	;# 
  1738     0118                     	;# 
  1739     0119                     	;# 
  1740     011A                     	;# 
  1741     011B                     	;# 
  1742     011D                     	;# 
  1743     011E                     	;# 
  1744     018C                     	;# 
  1745     018D                     	;# 
  1746     0191                     	;# 
  1747     0191                     	;# 
  1748     0192                     	;# 
  1749     0193                     	;# 
  1750     0193                     	;# 
  1751     0193                     	;# 
  1752     0194                     	;# 
  1753     0195                     	;# 
  1754     0196                     	;# 
  1755     0199                     	;# 
  1756     019A                     	;# 
  1757     019B                     	;# 
  1758     019B                     	;# 
  1759     019B                     	;# 
  1760     019B                     	;# 
  1761     019C                     	;# 
  1762     019C                     	;# 
  1763     019D                     	;# 
  1764     019E                     	;# 
  1765     019F                     	;# 
  1766     020C                     	;# 
  1767     020D                     	;# 
  1768     0211                     	;# 
  1769     0211                     	;# 
  1770     0212                     	;# 
  1771     0212                     	;# 
  1772     0213                     	;# 
  1773     0213                     	;# 
  1774     0214                     	;# 
  1775     0214                     	;# 
  1776     0215                     	;# 
  1777     0215                     	;# 
  1778     0215                     	;# 
  1779     0216                     	;# 
  1780     0216                     	;# 
  1781     0217                     	;# 
  1782     0217                     	;# 
  1783     0219                     	;# 
  1784     021A                     	;# 
  1785     021B                     	;# 
  1786     021C                     	;# 
  1787     021D                     	;# 
  1788     021E                     	;# 
  1789     021F                     	;# 
  1790     0291                     	;# 
  1791     0291                     	;# 
  1792     0292                     	;# 
  1793     0293                     	;# 
  1794     0294                     	;# 
  1795     0295                     	;# 
  1796     0295                     	;# 
  1797     0296                     	;# 
  1798     0298                     	;# 
  1799     0298                     	;# 
  1800     0299                     	;# 
  1801     029A                     	;# 
  1802     029B                     	;# 
  1803     029C                     	;# 
  1804     029C                     	;# 
  1805     029D                     	;# 
  1806     029E                     	;# 
  1807     029E                     	;# 
  1808     0311                     	;# 
  1809     0311                     	;# 
  1810     0312                     	;# 
  1811     0313                     	;# 
  1812     0318                     	;# 
  1813     0318                     	;# 
  1814     0319                     	;# 
  1815     031A                     	;# 
  1816     0394                     	;# 
  1817     0395                     	;# 
  1818     0396                     	;# 
  1819     039A                     	;# 
  1820     039C                     	;# 
  1821     039D                     	;# 
  1822     039E                     	;# 
  1823     039F                     	;# 
  1824     0415                     	;# 
  1825     0416                     	;# 
  1826     0417                     	;# 
  1827     041C                     	;# 
  1828     041D                     	;# 
  1829     041E                     	;# 
  1830     0FE4                     	;# 
  1831     0FE5                     	;# 
  1832     0FE6                     	;# 
  1833     0FE7                     	;# 
  1834     0FE8                     	;# 
  1835     0FE9                     	;# 
  1836     0FEA                     	;# 
  1837     0FEB                     	;# 
  1838     0FED                     	;# 
  1839     0FEE                     	;# 
  1840     0FEF                     	;# 
  1841     0000                     	;# 
  1842     0001                     	;# 
  1843     0002                     	;# 
  1844     0003                     	;# 
  1845     0004                     	;# 
  1846     0005                     	;# 
  1847     0006                     	;# 
  1848     0007                     	;# 
  1849     0008                     	;# 
  1850     0009                     	;# 
  1851     000A                     	;# 
  1852     000B                     	;# 
  1853     000C                     	;# 
  1854     000D                     	;# 
  1855     0011                     	;# 
  1856     0012                     	;# 
  1857     0013                     	;# 
  1858     0014                     	;# 
  1859     0015                     	;# 
  1860     0016                     	;# 
  1861     0016                     	;# 
  1862     0017                     	;# 
  1863     0018                     	;# 
  1864     0019                     	;# 
  1865     001A                     	;# 
  1866     001B                     	;# 
  1867     001C                     	;# 
  1868     001E                     	;# 
  1869     001F                     	;# 
  1870     008C                     	;# 
  1871     008D                     	;# 
  1872     0091                     	;# 
  1873     0092                     	;# 
  1874     0093                     	;# 
  1875     0094                     	;# 
  1876     0095                     	;# 
  1877     0096                     	;# 
  1878     0097                     	;# 
  1879     0098                     	;# 
  1880     0099                     	;# 
  1881     009A                     	;# 
  1882     009B                     	;# 
  1883     009B                     	;# 
  1884     009C                     	;# 
  1885     009D                     	;# 
  1886     009E                     	;# 
  1887     010C                     	;# 
  1888     010D                     	;# 
  1889     0111                     	;# 
  1890     0112                     	;# 
  1891     0113                     	;# 
  1892     0114                     	;# 
  1893     0115                     	;# 
  1894     0116                     	;# 
  1895     0117                     	;# 
  1896     0118                     	;# 
  1897     0119                     	;# 
  1898     011A                     	;# 
  1899     011B                     	;# 
  1900     011D                     	;# 
  1901     011E                     	;# 
  1902     018C                     	;# 
  1903     018D                     	;# 
  1904     0191                     	;# 
  1905     0191                     	;# 
  1906     0192                     	;# 
  1907     0193                     	;# 
  1908     0193                     	;# 
  1909     0193                     	;# 
  1910     0194                     	;# 
  1911     0195                     	;# 
  1912     0196                     	;# 
  1913     0199                     	;# 
  1914     019A                     	;# 
  1915     019B                     	;# 
  1916     019B                     	;# 
  1917     019B                     	;# 
  1918     019B                     	;# 
  1919     019C                     	;# 
  1920     019C                     	;# 
  1921     019D                     	;# 
  1922     019E                     	;# 
  1923     019F                     	;# 
  1924     020C                     	;# 
  1925     020D                     	;# 
  1926     0211                     	;# 
  1927     0211                     	;# 
  1928     0212                     	;# 
  1929     0212                     	;# 
  1930     0213                     	;# 
  1931     0213                     	;# 
  1932     0214                     	;# 
  1933     0214                     	;# 
  1934     0215                     	;# 
  1935     0215                     	;# 
  1936     0215                     	;# 
  1937     0216                     	;# 
  1938     0216                     	;# 
  1939     0217                     	;# 
  1940     0217                     	;# 
  1941     0219                     	;# 
  1942     021A                     	;# 
  1943     021B                     	;# 
  1944     021C                     	;# 
  1945     021D                     	;# 
  1946     021E                     	;# 
  1947     021F                     	;# 
  1948     0291                     	;# 
  1949     0291                     	;# 
  1950     0292                     	;# 
  1951     0293                     	;# 
  1952     0294                     	;# 
  1953     0295                     	;# 
  1954     0295                     	;# 
  1955     0296                     	;# 
  1956     0298                     	;# 
  1957     0298                     	;# 
  1958     0299                     	;# 
  1959     029A                     	;# 
  1960     029B                     	;# 
  1961     029C                     	;# 
  1962     029C                     	;# 
  1963     029D                     	;# 
  1964     029E                     	;# 
  1965     029E                     	;# 
  1966     0311                     	;# 
  1967     0311                     	;# 
  1968     0312                     	;# 
  1969     0313                     	;# 
  1970     0318                     	;# 
  1971     0318                     	;# 
  1972     0319                     	;# 
  1973     031A                     	;# 
  1974     0394                     	;# 
  1975     0395                     	;# 
  1976     0396                     	;# 
  1977     039A                     	;# 
  1978     039C                     	;# 
  1979     039D                     	;# 
  1980     039E                     	;# 
  1981     039F                     	;# 
  1982     0415                     	;# 
  1983     0416                     	;# 
  1984     0417                     	;# 
  1985     041C                     	;# 
  1986     041D                     	;# 
  1987     041E                     	;# 
  1988     0FE4                     	;# 
  1989     0FE5                     	;# 
  1990     0FE6                     	;# 
  1991     0FE7                     	;# 
  1992     0FE8                     	;# 
  1993     0FE9                     	;# 
  1994     0FEA                     	;# 
  1995     0FEB                     	;# 
  1996     0FED                     	;# 
  1997     0FEE                     	;# 
  1998     0FEF                     	;# 
  1999     0000                     	;# 
  2000     0001                     	;# 
  2001     0002                     	;# 
  2002     0003                     	;# 
  2003     0004                     	;# 
  2004     0005                     	;# 
  2005     0006                     	;# 
  2006     0007                     	;# 
  2007     0008                     	;# 
  2008     0009                     	;# 
  2009     000A                     	;# 
  2010     000B                     	;# 
  2011     000C                     	;# 
  2012     000D                     	;# 
  2013     0011                     	;# 
  2014     0012                     	;# 
  2015     0013                     	;# 
  2016     0014                     	;# 
  2017     0015                     	;# 
  2018     0016                     	;# 
  2019     0016                     	;# 
  2020     0017                     	;# 
  2021     0018                     	;# 
  2022     0019                     	;# 
  2023     001A                     	;# 
  2024     001B                     	;# 
  2025     001C                     	;# 
  2026     001E                     	;# 
  2027     001F                     	;# 
  2028     008C                     	;# 
  2029     008D                     	;# 
  2030     0091                     	;# 
  2031     0092                     	;# 
  2032     0093                     	;# 
  2033     0094                     	;# 
  2034     0095                     	;# 
  2035     0096                     	;# 
  2036     0097                     	;# 
  2037     0098                     	;# 
  2038     0099                     	;# 
  2039     009A                     	;# 
  2040     009B                     	;# 
  2041     009B                     	;# 
  2042     009C                     	;# 
  2043     009D                     	;# 
  2044     009E                     	;# 
  2045     010C                     	;# 
  2046     010D                     	;# 
  2047     0111                     	;# 
  2048     0112                     	;# 
  2049     0113                     	;# 
  2050     0114                     	;# 
  2051     0115                     	;# 
  2052     0116                     	;# 
  2053     0117                     	;# 
  2054     0118                     	;# 
  2055     0119                     	;# 
  2056     011A                     	;# 
  2057     011B                     	;# 
  2058     011D                     	;# 
  2059     011E                     	;# 
  2060     018C                     	;# 
  2061     018D                     	;# 
  2062     0191                     	;# 
  2063     0191                     	;# 
  2064     0192                     	;# 
  2065     0193                     	;# 
  2066     0193                     	;# 
  2067     0193                     	;# 
  2068     0194                     	;# 
  2069     0195                     	;# 
  2070     0196                     	;# 
  2071     0199                     	;# 
  2072     019A                     	;# 
  2073     019B                     	;# 
  2074     019B                     	;# 
  2075     019B                     	;# 
  2076     019B                     	;# 
  2077     019C                     	;# 
  2078     019C                     	;# 
  2079     019D                     	;# 
  2080     019E                     	;# 
  2081     019F                     	;# 
  2082     020C                     	;# 
  2083     020D                     	;# 
  2084     0211                     	;# 
  2085     0211                     	;# 
  2086     0212                     	;# 
  2087     0212                     	;# 
  2088     0213                     	;# 
  2089     0213                     	;# 
  2090     0214                     	;# 
  2091     0214                     	;# 
  2092     0215                     	;# 
  2093     0215                     	;# 
  2094     0215                     	;# 
  2095     0216                     	;# 
  2096     0216                     	;# 
  2097     0217                     	;# 
  2098     0217                     	;# 
  2099     0219                     	;# 
  2100     021A                     	;# 
  2101     021B                     	;# 
  2102     021C                     	;# 
  2103     021D                     	;# 
  2104     021E                     	;# 
  2105     021F                     	;# 
  2106     0291                     	;# 
  2107     0291                     	;# 
  2108     0292                     	;# 
  2109     0293                     	;# 
  2110     0294                     	;# 
  2111     0295                     	;# 
  2112     0295                     	;# 
  2113     0296                     	;# 
  2114     0298                     	;# 
  2115     0298                     	;# 
  2116     0299                     	;# 
  2117     029A                     	;# 
  2118     029B                     	;# 
  2119     029C                     	;# 
  2120     029C                     	;# 
  2121     029D                     	;# 
  2122     029E                     	;# 
  2123     029E                     	;# 
  2124     0311                     	;# 
  2125     0311                     	;# 
  2126     0312                     	;# 
  2127     0313                     	;# 
  2128     0318                     	;# 
  2129     0318                     	;# 
  2130     0319                     	;# 
  2131     031A                     	;# 
  2132     0394                     	;# 
  2133     0395                     	;# 
  2134     0396                     	;# 
  2135     039A                     	;# 
  2136     039C                     	;# 
  2137     039D                     	;# 
  2138     039E                     	;# 
  2139     039F                     	;# 
  2140     0415                     	;# 
  2141     0416                     	;# 
  2142     0417                     	;# 
  2143     041C                     	;# 
  2144     041D                     	;# 
  2145     041E                     	;# 
  2146     0FE4                     	;# 
  2147     0FE5                     	;# 
  2148     0FE6                     	;# 
  2149     0FE7                     	;# 
  2150     0FE8                     	;# 
  2151     0FE9                     	;# 
  2152     0FEA                     	;# 
  2153     0FEB                     	;# 
  2154     0FED                     	;# 
  2155     0FEE                     	;# 
  2156     0FEF                     	;_DW1
  2157                           
  2158 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  2159     0000                     
  2160 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  2161     0000                     
  2162 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  2163     0000                     
  2164                           	psect	idataBANK2
  2165     0F33                     __pidataBANK2:
  2166                           
  2167                           ;initializer for _mapping
  2168     0F33  3437               	retlw	55
  2169     0F34  343F               	retlw	63
  2170     0F35  3407               	retlw	7
  2171     0F36  3408               	retlw	8
  2172     0F37  3409               	retlw	9
  2173     0F38  3401               	retlw	1
  2174     0F39  3439               	retlw	57
  2175     0F3A  3438               	retlw	56
  2176                           
  2177                           	psect	stringtext1
  2178     0800                     __pstringtext1:
  2179     0800                     _de_sigmoidValues:
  2180     0800  3440               	retlw	64
  2181     0801  3432               	retlw	50
  2182     0802  341B               	retlw	27
  2183     0803  340C               	retlw	12
  2184     0804  3405               	retlw	5
  2185     0805  3402               	retlw	2
  2186     0806  3401               	retlw	1
  2187     0807  3400               	retlw	0
  2188     0808  3400               	retlw	0
  2189     0809  3400               	retlw	0
  2190     080A  3401               	retlw	1
  2191     080B  3402               	retlw	2
  2192     080C  3405               	retlw	5
  2193     080D  340C               	retlw	12
  2194     080E  341B               	retlw	27
  2195     080F  3432               	retlw	50
  2196     0810                     __end_of_de_sigmoidValues:
  2197                           
  2198                           	psect	stringtext2
  2199     0810                     __pstringtext2:
  2200     0810                     _sigmoidValues:
  2201     0810  3480               	retlw	128
  2202     0811  34BA               	retlw	186
  2203     0812  34E1               	retlw	225
  2204     0813  34F3               	retlw	243
  2205     0814  34FA               	retlw	250
  2206     0815  34FD               	retlw	253
  2207     0816  34FE               	retlw	254
  2208     0817  34FF               	retlw	255
  2209     0818  3400               	retlw	0
  2210     0819  3400               	retlw	0
  2211     081A  3401               	retlw	1
  2212     081B  3402               	retlw	2
  2213     081C  3405               	retlw	5
  2214     081D  340C               	retlw	12
  2215     081E  341E               	retlw	30
  2216     081F  3445               	retlw	69
  2217     0820                     __end_of_sigmoidValues:
  2218                           
  2219                           	psect	stringtext3
  2220     0820                     __pstringtext3:
  2221     0820                     _spi1_configuration:
  2222     0820  3402               	retlw	2
  2223     0821  3440               	retlw	64
  2224     0822  3401               	retlw	1
  2225     0823  3400               	retlw	0
  2226     0824                     __end_of_spi1_configuration:
  2227                           
  2228                           	psect	nvBANK0
  2229     006B                     __pnvBANK0:
  2230     006B                     _EUSART_OverrunErrorHandler:
  2231     006B                     	ds	2
  2232     006D                     _EUSART_FramingErrorHandler:
  2233     006D                     	ds	2
  2234                           
  2235                           	psect	nvBANK3
  2236     01A7                     __pnvBANK3:
  2237     01A7                     _EUSART_ErrorHandler:
  2238     01A7                     	ds	2
  2239     0003                     _STATUSbits	set	3
  2240     0011                     _PIR1bits	set	17
  2241     000B                     _INTCONbits	set	11
  2242     008C                     _TRISAbits	set	140
  2243     0097                     _WDTCON	set	151
  2244     0098                     _OSCTUNE	set	152
  2245     0099                     _OSCCON	set	153
  2246     008D                     _TRISBbits	set	141
  2247     0095                     _OPTION_REGbits	set	149
  2248     008D                     _TRISB	set	141
  2249     008C                     _TRISA	set	140
  2250     010D                     _LATBbits	set	269
  2251     010C                     _LATAbits	set	268
  2252     0116                     _BORCON	set	278
  2253     011E                     _APFCON1	set	286
  2254     011D                     _APFCON0	set	285
  2255     010D                     _LATB	set	269
  2256     010C                     _LATA	set	268
  2257     0191                     _EEADR	set	401
  2258     0193                     _EEDATA	set	403
  2259     0195                     _EECON1	set	405
  2260     018C                     _ANSELA	set	396
  2261     018D                     _ANSELB	set	397
  2262     019A                     _TXREG	set	410
  2263     0199                     _RCREG	set	409
  2264     019D                     _RCSTAbits	set	413
  2265     019E                     _TXSTAbits	set	414
  2266     019C                     _SPBRGH	set	412
  2267     019B                     _SPBRGL	set	411
  2268     019E                     _TXSTA	set	414
  2269     019D                     _RCSTA	set	413
  2270     019F                     _BAUDCON	set	415
  2271     0196                     _EECON2	set	406
  2272     0193                     _EEDATL	set	403
  2273     0194                     _EEDATH	set	404
  2274     0195                     _EECON1bits	set	405
  2275     0192                     _EEADRH	set	402
  2276     0191                     _EEADRL	set	401
  2277     0211                     _SSP1BUF	set	529
  2278     0216                     _SSP1CON2	set	534
  2279     0215                     _SSP1CON1bits	set	533
  2280     0212                     _SSP1ADD	set	530
  2281     0215                     _SSP1CON1	set	533
  2282     0214                     _SSP1STAT	set	532
  2283     020C                     _WPUA	set	524
  2284     020D                     _WPUB	set	525
  2285                           
  2286                           	psect	cinit
  2287     07B4                     start_initialization:	
  2288                           ; #config settings
  2289                           
  2290     07B4                     __initialization:	;BIGRAM
  2291                           
  2292                           ; Initialize objects allocated to BANK2
  2293     07B4  3033               	movlw	low __pidataBANK2
  2294     07B5  0084               	movwf	4
  2295     07B6  308F               	movlw	(high __pidataBANK2)| (0+128)
  2296     07B7  0085               	movwf	5
  2297     07B8  0022               	movlb	2	; select bank2
  2298     07B9  0012               	moviw fsr0++
  2299     07BA  00E7               	movwf	__pdataBANK2& (0+127)
  2300     07BB  0012               	moviw fsr0++
  2301     07BC  00E8               	movwf	(__pdataBANK2+1)& (0+127)
  2302     07BD  0012               	moviw fsr0++
  2303     07BE  00E9               	movwf	(__pdataBANK2+2)& (0+127)
  2304     07BF  0012               	moviw fsr0++
  2305     07C0  00EA               	movwf	(__pdataBANK2+3)& (0+127)
  2306     07C1  0012               	moviw fsr0++
  2307     07C2  00EB               	movwf	(__pdataBANK2+4)& (0+127)
  2308     07C3  0012               	moviw fsr0++
  2309     07C4  00EC               	movwf	(__pdataBANK2+5)& (0+127)
  2310     07C5  0012               	moviw fsr0++
  2311     07C6  00ED               	movwf	(__pdataBANK2+6)& (0+127)
  2312     07C7  0012               	moviw fsr0++
  2313     07C8  00EE               	movwf	(__pdataBANK2+7)& (0+127)
  2314                           
  2315                           ; Clear objects allocated to BIGRAM
  2316     07C9  3000               	movlw	low (0+8448)
  2317     07CA  0084               	movwf	4
  2318     07CB  3021               	movlw	high (0+8448)
  2319     07CC  0085               	movwf	5
  2320     07CD  3070               	movlw	112
  2321     07CE  00FE               	movwf	btemp
  2322     07CF  3000               	movlw	0
  2323     07D0  00FF               	movwf	btemp+1
  2324     07D1  318F  2759  3187   	fcall	clear_ram0
  2325                           
  2326                           ; Clear objects allocated to BANK0
  2327     07D4  304A               	movlw	low __pbssBANK0
  2328     07D5  0084               	movwf	4
  2329     07D6  3000               	movlw	high __pbssBANK0
  2330     07D7  0085               	movwf	5
  2331     07D8  3021               	movlw	33
  2332     07D9  00FE               	movwf	btemp
  2333     07DA  3000               	movlw	0
  2334     07DB  00FF               	movwf	btemp+1
  2335     07DC  318F  2759  3187   	fcall	clear_ram0
  2336                           
  2337                           ; Clear objects allocated to BANK1
  2338     07DF  30A0               	movlw	low __pbssBANK1
  2339     07E0  0084               	movwf	4
  2340     07E1  3000               	movlw	high __pbssBANK1
  2341     07E2  0085               	movwf	5
  2342     07E3  3050               	movlw	80
  2343     07E4  00FE               	movwf	btemp
  2344     07E5  3000               	movlw	0
  2345     07E6  00FF               	movwf	btemp+1
  2346     07E7  318F  2759  3187   	fcall	clear_ram0
  2347                           
  2348                           ; Clear objects allocated to BANK2
  2349     07EA  3020               	movlw	low __pbssBANK2
  2350     07EB  0084               	movwf	4
  2351     07EC  3001               	movlw	high __pbssBANK2
  2352     07ED  0085               	movwf	5
  2353     07EE  3047               	movlw	71
  2354     07EF  00FE               	movwf	btemp
  2355     07F0  3000               	movlw	0
  2356     07F1  00FF               	movwf	btemp+1
  2357     07F2  318F  2759  3187   	fcall	clear_ram0
  2358                           
  2359                           ; Clear objects allocated to BANK3
  2360     07F5  0023               	movlb	3	; select bank3
  2361     07F6  01A0               	clrf	__pbssBANK3& (0+127)
  2362     07F7  01A1               	clrf	(__pbssBANK3+1)& (0+127)
  2363     07F8  01A2               	clrf	(__pbssBANK3+2)& (0+127)
  2364     07F9  01A3               	clrf	(__pbssBANK3+3)& (0+127)
  2365     07FA  01A4               	clrf	(__pbssBANK3+4)& (0+127)
  2366     07FB  01A5               	clrf	(__pbssBANK3+5)& (0+127)
  2367     07FC  01A6               	clrf	(__pbssBANK3+6)& (0+127)
  2368     07FD                     end_of_initialization:	
  2369                           ;End of C runtime variable initialization code
  2370                           
  2371     07FD                     __end_of__initialization:
  2372     07FD  0020               	movlb	0
  2373     07FE  3183  2B90         	ljmp	_main	;jump to C main() function
  2374                           
  2375                           	psect	bssBANK0
  2376     004A                     __pbssBANK0:
  2377     004A                     _Z2:
  2378     004A                     	ds	8
  2379     0052                     _matrix:
  2380     0052                     	ds	8
  2381     005A                     _DB2:
  2382     005A                     	ds	4
  2383     005E                     _choice:
  2384     005E                     	ds	1
  2385     005F                     _foodPosition:
  2386     005F                     	ds	1
  2387     0060                     _headPosition:
  2388     0060                     	ds	1
  2389     0061                     _snakeSize:
  2390     0061                     	ds	1
  2391     0062                     _eusartRxLastError:
  2392     0062                     	ds	1
  2393     0063                     _seed:
  2394     0063                     	ds	4
  2395     0067                     _Y2:
  2396     0067                     	ds	4
  2397                           
  2398                           	psect	bssBANK1
  2399     00A0                     __pbssBANK1:
  2400     00A0                     _field:
  2401     00A0                     	ds	64
  2402     00E0                     _Y0:
  2403     00E0                     	ds	16
  2404                           
  2405                           	psect	bssBANK2
  2406     0120                     __pbssBANK2:
  2407     0120                     _DW2:
  2408     0120                     	ds	28
  2409     013C                     _DY1:
  2410     013C                     	ds	14
  2411     014A                     _Z1:
  2412     014A                     	ds	14
  2413     0158                     _DY2:
  2414     0158                     	ds	8
  2415     0160                     _Y1:
  2416     0160                     	ds	7
  2417                           
  2418                           	psect	dataBANK2
  2419     0167                     __pdataBANK2:
  2420     0167                     _mapping:
  2421     0167                     	ds	8
  2422                           
  2423                           	psect	bssBANK3
  2424     01A0                     __pbssBANK3:
  2425     01A0                     _DB1:
  2426     01A0                     	ds	7
  2427                           
  2428                           	psect	clrtext
  2429     0F59                     clear_ram0:	
  2430                           ;	Called with FSR0 containing the base address, and
  2431                           ;	btemp/btemp+1 has the size to clear
  2432                           
  2433     0F59  0064               	clrwdt	;clear the watchdog before getting into this loop
  2434     0F5A                     clrloop0:
  2435     0F5A  0180               	clrf	0	;clear RAM location pointed to by FSR
  2436     0F5B  3101               	addfsr 0,1
  2437     0F5C  3001               	movlw	1
  2438     0F5D  02FE               	subwf	btemp,f
  2439     0F5E  3000               	movlw	0
  2440     0F5F  3BFF               	subwfb	btemp+1,f
  2441     0F60  087F               	movf	btemp+1,w
  2442     0F61  047E               	iorwf	btemp,w
  2443     0F62  1D03               	skipz
  2444     0F63  2F5A               	goto	clrloop0	;have we reached the end yet?
  2445     0F64  3400               	retlw	0	;all done for this memory range, return
  2446                           
  2447                           	psect	cstackCOMMON
  2448     0070                     __pcstackCOMMON:
  2449     0070                     ?_EUSART_SetFramingErrorHandler:
  2450     0070                     ?_EUSART_SetOverrunErrorHandler:	
  2451                           ; 1 bytes @ 0x0
  2452                           
  2453     0070                     ?_EUSART_SetErrorHandler:	
  2454                           ; 1 bytes @ 0x0
  2455                           
  2456     0070                     ?_OSCILLATOR_Initialize:	
  2457                           ; 1 bytes @ 0x0
  2458                           
  2459     0070                     ??_OSCILLATOR_Initialize:	
  2460                           ; 1 bytes @ 0x0
  2461                           
  2462     0070                     ?_WDT_Initialize:	
  2463                           ; 1 bytes @ 0x0
  2464                           
  2465     0070                     ??_WDT_Initialize:	
  2466                           ; 1 bytes @ 0x0
  2467                           
  2468     0070                     ?_snake_initiate:	
  2469                           ; 1 bytes @ 0x0
  2470                           
  2471     0070                     ?_initMAX7219:	
  2472                           ; 1 bytes @ 0x0
  2473                           
  2474     0070                     ?_snake_getField:	
  2475                           ; 1 bytes @ 0x0
  2476                           
  2477     0070                     ??_snake_getField:	
  2478                           ; 1 bytes @ 0x0
  2479                           
  2480     0070                     ?_ledSet:	
  2481                           ; 1 bytes @ 0x0
  2482                           
  2483     0070                     ?_ledClear:	
  2484                           ; 1 bytes @ 0x0
  2485                           
  2486     0070                     ?_snake_getFoodPosition:	
  2487                           ; 1 bytes @ 0x0
  2488                           
  2489     0070                     ??_snake_getFoodPosition:	
  2490                           ; 1 bytes @ 0x0
  2491                           
  2492     0070                     ?_sendMatrix:	
  2493                           ; 1 bytes @ 0x0
  2494                           
  2495     0070                     ?_snake_getSurroundings:	
  2496                           ; 1 bytes @ 0x0
  2497                           
  2498     0070                     ??_snake_getSurroundings:	
  2499                           ; 1 bytes @ 0x0
  2500                           
  2501     0070                     ?_ai_getInputField:	
  2502                           ; 1 bytes @ 0x0
  2503                           
  2504     0070                     ??_ai_getInputField:	
  2505                           ; 1 bytes @ 0x0
  2506                           
  2507     0070                     ?_ai_propagate:	
  2508                           ; 1 bytes @ 0x0
  2509                           
  2510     0070                     ?_snake_move:	
  2511                           ; 1 bytes @ 0x0
  2512                           
  2513     0070                     ?_ai_run:	
  2514                           ; 1 bytes @ 0x0
  2515                           
  2516     0070                     ?_eeprom_read:	
  2517                           ; 1 bytes @ 0x0
  2518                           
  2519     0070                     ??_eeprom_read:	
  2520                           ; 1 bytes @ 0x0
  2521                           
  2522     0070                     ?_sigmoid:	
  2523                           ; 1 bytes @ 0x0
  2524                           
  2525     0070                     ??_sigmoid:	
  2526                           ; 1 bytes @ 0x0
  2527                           
  2528     0070                     ?_de_sigmoid:	
  2529                           ; 1 bytes @ 0x0
  2530                           
  2531     0070                     ??_de_sigmoid:	
  2532                           ; 1 bytes @ 0x0
  2533                           
  2534     0070                     ?_EUSART_Initialize:	
  2535                           ; 1 bytes @ 0x0
  2536                           
  2537     0070                     ?_PIN_MANAGER_Initialize:	
  2538                           ; 1 bytes @ 0x0
  2539                           
  2540     0070                     ??_PIN_MANAGER_Initialize:	
  2541                           ; 1 bytes @ 0x0
  2542                           
  2543     0070                     ?_SPI1_Initialize:	
  2544                           ; 1 bytes @ 0x0
  2545                           
  2546     0070                     ??_SPI1_Initialize:	
  2547                           ; 1 bytes @ 0x0
  2548                           
  2549     0070                     ?_SPI1_WriteByte:	
  2550                           ; 1 bytes @ 0x0
  2551                           
  2552     0070                     ??_SPI1_WriteByte:	
  2553                           ; 1 bytes @ 0x0
  2554                           
  2555     0070                     ?_SYSTEM_Initialize:	
  2556                           ; 1 bytes @ 0x0
  2557                           
  2558     0070                     ?_deactivateElevator:	
  2559                           ; 1 bytes @ 0x0
  2560                           
  2561     0070                     ??_deactivateElevator:	
  2562                           ; 1 bytes @ 0x0
  2563                           
  2564     0070                     ?_main:	
  2565                           ; 1 bytes @ 0x0
  2566                           
  2567     0070                     ?_biases1_read:	
  2568                           ; 1 bytes @ 0x0
  2569                           
  2570     0070                     ?_biases2_read:	
  2571                           ; 1 bytes @ 0x0
  2572                           
  2573     0070                     ?___bmul:	
  2574                           ; 1 bytes @ 0x0
  2575                           
  2576     0070                     ?___awdiv:	
  2577                           ; 1 bytes @ 0x0
  2578                           
  2579     0070                     ?___lmul:	
  2580                           ; 2 bytes @ 0x0
  2581                           
  2582     0070                     SPI1_WriteByte@byte:	
  2583                           ; 4 bytes @ 0x0
  2584                           
  2585     0070                     ledSet@c:	
  2586                           ; 1 bytes @ 0x0
  2587                           
  2588     0070                     ledClear@c:	
  2589                           ; 1 bytes @ 0x0
  2590                           
  2591     0070                     ___bmul@multiplicand:	
  2592                           ; 1 bytes @ 0x0
  2593                           
  2594     0070                     EUSART_SetFramingErrorHandler@interruptHandler:	
  2595                           ; 1 bytes @ 0x0
  2596                           
  2597     0070                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  2598                           ; 2 bytes @ 0x0
  2599                           
  2600     0070                     EUSART_SetErrorHandler@interruptHandler:	
  2601                           ; 2 bytes @ 0x0
  2602                           
  2603     0070                     ___awdiv@divisor:	
  2604                           ; 2 bytes @ 0x0
  2605                           
  2606     0070                     ___lmul@multiplier:	
  2607                           ; 2 bytes @ 0x0
  2608                           
  2609                           
  2610                           ; 4 bytes @ 0x0
  2611     0070                     	ds	1
  2612     0071                     ??_ledSet:
  2613     0071                     ??_ledClear:	
  2614                           ; 1 bytes @ 0x1
  2615                           
  2616     0071                     ?_txMAX7219:	
  2617                           ; 1 bytes @ 0x1
  2618                           
  2619     0071                     ??___bmul:	
  2620                           ; 1 bytes @ 0x1
  2621                           
  2622     0071                     txMAX7219@dat0:	
  2623                           ; 1 bytes @ 0x1
  2624                           
  2625     0071                     snake_getSurroundings@p:	
  2626                           ; 1 bytes @ 0x1
  2627                           
  2628     0071                     sigmoid@z:	
  2629                           ; 1 bytes @ 0x1
  2630                           
  2631     0071                     de_sigmoid@z:	
  2632                           ; 1 bytes @ 0x1
  2633                           
  2634                           
  2635                           ; 1 bytes @ 0x1
  2636     0071                     	ds	1
  2637     0072                     ??_EUSART_SetFramingErrorHandler:
  2638     0072                     ??_EUSART_SetOverrunErrorHandler:	
  2639                           ; 1 bytes @ 0x2
  2640                           
  2641     0072                     ??_EUSART_SetErrorHandler:	
  2642                           ; 1 bytes @ 0x2
  2643                           
  2644     0072                     ??_EUSART_Initialize:	
  2645                           ; 1 bytes @ 0x2
  2646                           
  2647     0072                     ??_SYSTEM_Initialize:	
  2648                           ; 1 bytes @ 0x2
  2649                           
  2650     0072                     ??_txMAX7219:	
  2651                           ; 1 bytes @ 0x2
  2652                           
  2653     0072                     txMAX7219@addr0:	
  2654                           ; 1 bytes @ 0x2
  2655                           
  2656     0072                     snake_getSurroundings@i:	
  2657                           ; 1 bytes @ 0x2
  2658                           
  2659     0072                     ___bmul@product:	
  2660                           ; 1 bytes @ 0x2
  2661                           
  2662     0072                     ___awdiv@dividend:	
  2663                           ; 1 bytes @ 0x2
  2664                           
  2665                           
  2666                           ; 2 bytes @ 0x2
  2667     0072                     	ds	1
  2668     0073                     ??_initMAX7219:
  2669     0073                     ??_sendMatrix:	
  2670                           ; 1 bytes @ 0x3
  2671                           
  2672     0073                     ledSet@l:	
  2673                           ; 1 bytes @ 0x3
  2674                           
  2675     0073                     ledClear@l:	
  2676                           ; 1 bytes @ 0x3
  2677                           
  2678     0073                     snake_getSurroundings@i_782:	
  2679                           ; 1 bytes @ 0x3
  2680                           
  2681     0073                     eeprom_read@addr:	
  2682                           ; 1 bytes @ 0x3
  2683                           
  2684     0073                     ___bmul@multiplier:	
  2685                           ; 1 bytes @ 0x3
  2686                           
  2687                           
  2688                           ; 1 bytes @ 0x3
  2689     0073                     	ds	1
  2690     0074                     ?_eeprom_write:
  2691     0074                     ?_weights1_read:	
  2692                           ; 1 bytes @ 0x4
  2693                           
  2694     0074                     ??_biases1_read:	
  2695                           ; 1 bytes @ 0x4
  2696                           
  2697     0074                     ?_weights2_read:	
  2698                           ; 1 bytes @ 0x4
  2699                           
  2700     0074                     ??_biases2_read:	
  2701                           ; 1 bytes @ 0x4
  2702                           
  2703     0074                     ??___awdiv:	
  2704                           ; 1 bytes @ 0x4
  2705                           
  2706     0074                     sendMatrix@b:	
  2707                           ; 1 bytes @ 0x4
  2708                           
  2709     0074                     snake_getSurroundings@surroundings:	
  2710                           ; 1 bytes @ 0x4
  2711                           
  2712     0074                     weights1_read@add2:	
  2713                           ; 1 bytes @ 0x4
  2714                           
  2715     0074                     biases1_read@add:	
  2716                           ; 1 bytes @ 0x4
  2717                           
  2718     0074                     weights2_read@add2:	
  2719                           ; 1 bytes @ 0x4
  2720                           
  2721     0074                     biases2_read@add:	
  2722                           ; 1 bytes @ 0x4
  2723                           
  2724     0074                     eeprom_write@value:	
  2725                           ; 1 bytes @ 0x4
  2726                           
  2727     0074                     ___lmul@multiplicand:	
  2728                           ; 1 bytes @ 0x4
  2729                           
  2730                           
  2731                           ; 4 bytes @ 0x4
  2732     0074                     	ds	1
  2733     0075                     ??_eeprom_write:
  2734     0075                     ??_weights1_read:	
  2735                           ; 1 bytes @ 0x5
  2736                           
  2737     0075                     ??_weights2_read:	
  2738                           ; 1 bytes @ 0x5
  2739                           
  2740     0075                     sendMatrix@nb:	
  2741                           ; 1 bytes @ 0x5
  2742                           
  2743     0075                     weights2_read@add1:	
  2744                           ; 1 bytes @ 0x5
  2745                           
  2746     0075                     ___awdiv@counter:	
  2747                           ; 1 bytes @ 0x5
  2748                           
  2749                           
  2750                           ; 1 bytes @ 0x5
  2751     0075                     	ds	1
  2752     0076                     sendMatrix@j:
  2753     0076                     weights1_read@add1:	
  2754                           ; 1 bytes @ 0x6
  2755                           
  2756     0076                     ___awdiv@sign:	
  2757                           ; 1 bytes @ 0x6
  2758                           
  2759                           
  2760                           ; 1 bytes @ 0x6
  2761     0076                     	ds	1
  2762     0077                     ?___wmul:
  2763     0077                     sendMatrix@i:	
  2764                           ; 2 bytes @ 0x7
  2765                           
  2766     0077                     eeprom_write@addr:	
  2767                           ; 1 bytes @ 0x7
  2768                           
  2769     0077                     ___wmul@multiplier:	
  2770                           ; 1 bytes @ 0x7
  2771                           
  2772     0077                     ___awdiv@quotient:	
  2773                           ; 2 bytes @ 0x7
  2774                           
  2775                           
  2776                           ; 2 bytes @ 0x7
  2777     0077                     	ds	1
  2778     0078                     ?_biases1_write:
  2779     0078                     ?_weights2_write:	
  2780                           ; 1 bytes @ 0x8
  2781                           
  2782     0078                     ?_biases2_write:	
  2783                           ; 1 bytes @ 0x8
  2784                           
  2785     0078                     ??___lmul:	
  2786                           ; 1 bytes @ 0x8
  2787                           
  2788     0078                     biases1_write@val:	
  2789                           ; 1 bytes @ 0x8
  2790                           
  2791     0078                     weights2_write@add2:	
  2792                           ; 1 bytes @ 0x8
  2793                           
  2794     0078                     biases2_write@val:	
  2795                           ; 1 bytes @ 0x8
  2796                           
  2797     0078                     ___lmul@product:	
  2798                           ; 1 bytes @ 0x8
  2799                           
  2800                           
  2801                           ; 4 bytes @ 0x8
  2802     0078                     	ds	1
  2803     0079                     ??_biases1_write:
  2804     0079                     ??_biases2_write:	
  2805                           ; 1 bytes @ 0x9
  2806                           
  2807     0079                     biases1_write@add:	
  2808                           ; 1 bytes @ 0x9
  2809                           
  2810     0079                     weights2_write@val:	
  2811                           ; 1 bytes @ 0x9
  2812                           
  2813     0079                     biases2_write@add:	
  2814                           ; 1 bytes @ 0x9
  2815                           
  2816     0079                     ___wmul@multiplicand:	
  2817                           ; 1 bytes @ 0x9
  2818                           
  2819                           
  2820                           ; 2 bytes @ 0x9
  2821     0079                     	ds	1
  2822     007A                     ??_weights2_write:
  2823     007A                     weights2_write@add1:	
  2824                           ; 1 bytes @ 0xA
  2825                           
  2826                           
  2827                           ; 1 bytes @ 0xA
  2828     007A                     	ds	1
  2829     007B                     ??___wmul:
  2830     007B                     ___wmul@product:	
  2831                           ; 1 bytes @ 0xB
  2832                           
  2833                           
  2834                           ; 2 bytes @ 0xB
  2835     007B                     	ds	1
  2836     007C                     ?_rand:
  2837                           
  2838                           ; 2 bytes @ 0xC
  2839     007C                     	ds	1
  2840     007D                     ??_weights1_write:
  2841                           
  2842                           ; 1 bytes @ 0xD
  2843     007D                     	ds	1
  2844                           
  2845                           	psect	cstackBANK0
  2846     0020                     __pcstackBANK0:
  2847     0020                     ??_ai_run:
  2848     0020                     ??_rand:	
  2849                           ; 1 bytes @ 0x0
  2850                           
  2851     0020                     ?_weights1_write:	
  2852                           ; 1 bytes @ 0x0
  2853                           
  2854     0020                     weights1_write@add2:	
  2855                           ; 1 bytes @ 0x0
  2856                           
  2857                           
  2858                           ; 1 bytes @ 0x0
  2859     0020                     	ds	1
  2860     0021                     weights1_write@val:
  2861                           
  2862                           ; 1 bytes @ 0x1
  2863     0021                     	ds	1
  2864     0022                     weights1_write@add1:
  2865     0022                     ai_run@i:	
  2866                           ; 1 bytes @ 0x2
  2867                           
  2868                           
  2869                           ; 1 bytes @ 0x2
  2870     0022                     	ds	1
  2871     0023                     ??_ai_propagate:
  2872     0023                     ai_run@i_900:	
  2873                           ; 1 bytes @ 0x3
  2874                           
  2875                           
  2876                           ; 1 bytes @ 0x3
  2877     0023                     	ds	1
  2878     0024                     ??_snake_initiate:
  2879     0024                     ai_run@i_902:	
  2880                           ; 1 bytes @ 0x4
  2881                           
  2882                           
  2883                           ; 1 bytes @ 0x4
  2884     0024                     	ds	1
  2885     0025                     snake_initiate@i:
  2886     0025                     ai_run@z:	
  2887                           ; 1 bytes @ 0x5
  2888                           
  2889                           
  2890                           ; 2 bytes @ 0x5
  2891     0025                     	ds	1
  2892     0026                     ??_snake_move:
  2893                           
  2894                           ; 1 bytes @ 0x6
  2895     0026                     	ds	1
  2896     0027                     ai_run@j:
  2897                           
  2898                           ; 1 bytes @ 0x7
  2899     0027                     	ds	1
  2900     0028                     snake_move@direction:
  2901     0028                     ai_run@j_898:	
  2902                           ; 1 bytes @ 0x8
  2903                           
  2904                           
  2905                           ; 1 bytes @ 0x8
  2906     0028                     	ds	1
  2907     0029                     snake_move@incentive:
  2908                           
  2909                           ; 1 bytes @ 0x9
  2910     0029                     	ds	1
  2911     002A                     snake_move@i:
  2912                           
  2913                           ; 1 bytes @ 0xA
  2914     002A                     	ds	2
  2915     002C                     ai_propagate@S:
  2916                           
  2917                           ; 4 bytes @ 0xC
  2918     002C                     	ds	4
  2919     0030                     ai_propagate@incentive:
  2920                           
  2921                           ; 1 bytes @ 0x10
  2922     0030                     	ds	1
  2923     0031                     ai_propagate@i:
  2924                           
  2925                           ; 1 bytes @ 0x11
  2926     0031                     	ds	1
  2927     0032                     ai_propagate@i_909:
  2928                           
  2929                           ; 1 bytes @ 0x12
  2930     0032                     	ds	1
  2931     0033                     ai_propagate@i_910:
  2932                           
  2933                           ; 1 bytes @ 0x13
  2934     0033                     	ds	1
  2935     0034                     ai_propagate@i_911:
  2936                           
  2937                           ; 1 bytes @ 0x14
  2938     0034                     	ds	1
  2939     0035                     ai_propagate@i_916:
  2940                           
  2941                           ; 1 bytes @ 0x15
  2942     0035                     	ds	1
  2943     0036                     ai_propagate@j:
  2944                           
  2945                           ; 1 bytes @ 0x16
  2946     0036                     	ds	1
  2947     0037                     ai_propagate@j_908:
  2948                           
  2949                           ; 1 bytes @ 0x17
  2950     0037                     	ds	1
  2951     0038                     ai_propagate@dz:
  2952                           
  2953                           ; 1 bytes @ 0x18
  2954     0038                     	ds	1
  2955     0039                     ai_propagate@i_914:
  2956                           
  2957                           ; 1 bytes @ 0x19
  2958     0039                     	ds	1
  2959     003A                     ai_propagate@i_918:
  2960                           
  2961                           ; 1 bytes @ 0x1A
  2962     003A                     	ds	1
  2963     003B                     ai_propagate@i_920:
  2964                           
  2965                           ; 1 bytes @ 0x1B
  2966     003B                     	ds	1
  2967     003C                     ai_propagate@j_915:
  2968                           
  2969                           ; 1 bytes @ 0x1C
  2970     003C                     	ds	1
  2971     003D                     ai_propagate@j_917:
  2972                           
  2973                           ; 1 bytes @ 0x1D
  2974     003D                     	ds	1
  2975     003E                     ai_propagate@j_919:
  2976                           
  2977                           ; 1 bytes @ 0x1E
  2978     003E                     	ds	1
  2979     003F                     ai_propagate@k:
  2980                           
  2981                           ; 1 bytes @ 0x1F
  2982     003F                     	ds	1
  2983     0040                     ??_main:
  2984                           
  2985                           ; 1 bytes @ 0x20
  2986     0040                     	ds	3
  2987     0043                     main@field:
  2988                           
  2989                           ; 1 bytes @ 0x23
  2990     0043                     	ds	1
  2991     0044                     main@foodPosition:
  2992                           
  2993                           ; 1 bytes @ 0x24
  2994     0044                     	ds	1
  2995     0045                     main@foodPosition_660:
  2996                           
  2997                           ; 1 bytes @ 0x25
  2998     0045                     	ds	1
  2999     0046                     main@i:
  3000                           
  3001                           ; 1 bytes @ 0x26
  3002     0046                     	ds	1
  3003     0047                     main@j:
  3004                           
  3005                           ; 1 bytes @ 0x27
  3006     0047                     	ds	1
  3007     0048                     main@i_658:
  3008                           
  3009                           ; 1 bytes @ 0x28
  3010     0048                     	ds	1
  3011     0049                     main@j_659:
  3012                           
  3013                           ; 1 bytes @ 0x29
  3014     0049                     	ds	1
  3015                           
  3016                           	psect	maintext
  3017     0390                     __pmaintext:	
  3018 ;;
  3019 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  3020 ;;
  3021 ;; *************** function _main *****************
  3022 ;; Defined at:
  3023 ;;		line 85 in file "main.c"
  3024 ;; Parameters:    Size  Location     Type
  3025 ;;		None
  3026 ;; Auto vars:     Size  Location     Type
  3027 ;;  j               1   41[BANK0 ] unsigned char 
  3028 ;;  j               1   39[BANK0 ] unsigned char 
  3029 ;;  i               1   40[BANK0 ] unsigned char 
  3030 ;;  foodPosition    1   37[BANK0 ] unsigned char 
  3031 ;;  i               1   38[BANK0 ] unsigned char 
  3032 ;;  foodPosition    1   36[BANK0 ] unsigned char 
  3033 ;;  field           1   35[BANK0 ] PTR unsigned char 
  3034 ;;		 -> field(64), 
  3035 ;;  d               1    0        unsigned char 
  3036 ;; Return value:  Size  Location     Type
  3037 ;;                  1    wreg      void 
  3038 ;; Registers used:
  3039 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3040 ;; Tracked objects:
  3041 ;;		On entry : B1F/0
  3042 ;;		On exit  : 0/0
  3043 ;;		Unchanged: 0/0
  3044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3045 ;;      Params:         0       0       0       0       0       0
  3046 ;;      Locals:         0       7       0       0       0       0
  3047 ;;      Temps:          0       3       0       0       0       0
  3048 ;;      Totals:         0      10       0       0       0       0
  3049 ;;Total ram usage:       10 bytes
  3050 ;; Hardware stack levels required when called: 4
  3051 ;; This function calls:
  3052 ;;		_SYSTEM_Initialize
  3053 ;;		_ai_getInputField
  3054 ;;		_ai_propagate
  3055 ;;		_ai_run
  3056 ;;		_deactivateElevator
  3057 ;;		_initMAX7219
  3058 ;;		_ledClear
  3059 ;;		_ledSet
  3060 ;;		_sendMatrix
  3061 ;;		_snake_getField
  3062 ;;		_snake_getFoodPosition
  3063 ;;		_snake_getSurroundings
  3064 ;;		_snake_initiate
  3065 ;;		_snake_move
  3066 ;; This function is called by:
  3067 ;;		Startup code after reset
  3068 ;; This function uses a non-reentrant model
  3069 ;;
  3070                           
  3071     0390                     _main:	
  3072                           ;psect for function _main
  3073                           
  3074     0390                     l3151:	
  3075                           ;incstack = 0
  3076                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3077                           
  3078                           
  3079                           ;main.c: 88:     SYSTEM_Initialize();
  3080     0390  318F  279C  3183   	fcall	_SYSTEM_Initialize
  3081     0393                     l3153:
  3082                           
  3083                           ;main.c: 105:     deactivateElevator();
  3084     0393  318F  2772  3183   	fcall	_deactivateElevator
  3085     0396                     l3155:
  3086                           
  3087                           ;main.c: 106:     snake_initiate();
  3088     0396  3180  20A7  3183   	fcall	_snake_initiate
  3089     0399                     l3157:
  3090                           
  3091                           ;main.c: 108:     initMAX7219();
  3092     0399  3181  218F  3183   	fcall	_initMAX7219
  3093     039C                     l3159:
  3094                           
  3095                           ;main.c: 158:     uint8_t* field = snake_getField();
  3096     039C  318F  2704  3183   	fcall	_snake_getField
  3097     039F  0020               	movlb	0	; select bank0
  3098     03A0  00C3               	movwf	main@field
  3099     03A1                     l3161:
  3100                           
  3101                           ;main.c: 160:     for(uint8_t i = 0; i < 8; i++){
  3102     03A1  01C6               	clrf	main@i
  3103     03A2                     l3167:
  3104                           
  3105                           ;main.c: 161:         for(uint8_t j = 0; j < 8; j++){
  3106     03A2  01C7               	clrf	main@j
  3107     03A3                     l3173:
  3108                           
  3109                           ;main.c: 162:             if(field[i+j*8]>0){
  3110     03A3  0847               	movf	main@j,w
  3111     03A4  00C0               	movwf	??_main
  3112     03A5  3002               	movlw	2
  3113     03A6                     u2075:
  3114     03A6  35C0               	lslf	??_main,f
  3115     03A7  3EFF               	addlw	-1
  3116     03A8  1D03               	skipz
  3117     03A9  2BA6               	goto	u2075
  3118     03AA  3540               	lslf	??_main,w
  3119     03AB  0743               	addwf	main@field,w
  3120     03AC  00C1               	movwf	??_main+1
  3121     03AD  0846               	movf	main@i,w
  3122     03AE  0741               	addwf	??_main+1,w
  3123     03AF  00C2               	movwf	??_main+2
  3124     03B0  0842               	movf	??_main+2,w
  3125     03B1  0086               	movwf	6
  3126     03B2  0187               	clrf	7
  3127     03B3  0801               	movf	1,w
  3128     03B4  1903               	btfsc	3,2
  3129     03B5  2BB7               	goto	u2081
  3130     03B6  2BB8               	goto	u2080
  3131     03B7                     u2081:
  3132     03B7  2BBF               	goto	l3177
  3133     03B8                     u2080:
  3134     03B8                     l3175:
  3135                           
  3136                           ;main.c: 163:                 ledSet(i,j);
  3137     03B8  0847               	movf	main@j,w
  3138     03B9  00F0               	movwf	ledSet@c
  3139     03BA  0846               	movf	main@i,w
  3140     03BB  318F  27DD  3183   	fcall	_ledSet
  3141                           
  3142                           ;main.c: 164:             } else{
  3143     03BE  2BC5               	goto	l3179
  3144     03BF                     l3177:
  3145                           
  3146                           ;main.c: 165:                 ledClear(i,j);
  3147     03BF  0847               	movf	main@j,w
  3148     03C0  00F0               	movwf	ledClear@c
  3149     03C1  0846               	movf	main@i,w
  3150     03C2  318F  27EE  3183   	fcall	_ledClear
  3151     03C5                     l3179:
  3152                           
  3153                           ;main.c: 167:         }
  3154     03C5  3001               	movlw	1
  3155     03C6  0020               	movlb	0	; select bank0
  3156     03C7  00C0               	movwf	??_main
  3157     03C8  0840               	movf	??_main,w
  3158     03C9  07C7               	addwf	main@j,f
  3159     03CA                     l3181:
  3160     03CA  3008               	movlw	8
  3161     03CB  0247               	subwf	main@j,w
  3162     03CC  1C03               	skipc
  3163     03CD  2BCF               	goto	u2091
  3164     03CE  2BD0               	goto	u2090
  3165     03CF                     u2091:
  3166     03CF  2BA3               	goto	l3173
  3167     03D0                     u2090:
  3168     03D0                     l3183:
  3169                           
  3170                           ;main.c: 168:     }
  3171     03D0  3001               	movlw	1
  3172     03D1  00C0               	movwf	??_main
  3173     03D2  0840               	movf	??_main,w
  3174     03D3  07C6               	addwf	main@i,f
  3175     03D4                     l3185:
  3176     03D4  3008               	movlw	8
  3177     03D5  0246               	subwf	main@i,w
  3178     03D6  1C03               	skipc
  3179     03D7  2BD9               	goto	u2101
  3180     03D8  2BDA               	goto	u2100
  3181     03D9                     u2101:
  3182     03D9  2BA2               	goto	l3167
  3183     03DA                     u2100:
  3184     03DA                     l3187:
  3185                           
  3186                           ;main.c: 169:     uint8_t foodPosition = snake_getFoodPosition();
  3187     03DA  318F  2706  3183   	fcall	_snake_getFoodPosition
  3188     03DD  0020               	movlb	0	; select bank0
  3189     03DE  00C4               	movwf	main@foodPosition
  3190     03DF                     l3189:
  3191                           
  3192                           ;main.c: 170:     ledSet(foodPosition&0x03, foodPosition>>3);
  3193     03DF  0844               	movf	main@foodPosition,w
  3194     03E0  00C0               	movwf	??_main
  3195     03E1  3003               	movlw	3
  3196     03E2                     u2115:
  3197     03E2  36C0               	lsrf	??_main,f
  3198     03E3  0B89               	decfsz	9,f
  3199     03E4  2BE2               	goto	u2115
  3200     03E5  0840               	movf	??_main,w
  3201     03E6  00F0               	movwf	ledSet@c
  3202     03E7  0844               	movf	main@foodPosition,w
  3203     03E8  3903               	andlw	3
  3204     03E9  318F  27DD  3183   	fcall	_ledSet
  3205     03EC                     l3191:
  3206                           
  3207                           ;main.c: 171:     sendMatrix();
  3208     03EC  3180  20F9  3183   	fcall	_sendMatrix
  3209     03EF                     l3193:
  3210     03EF                     l3195:
  3211                           
  3212                           ;main.c: 184:     {;main.c: 186:         _delay((unsigned long)((100)*(8000000/4000.0)))
      +                          ;
  3213     03EF  3002               	movlw	2
  3214     03F0  0020               	movlb	0	; select bank0
  3215     03F1  00C1               	movwf	??_main+1
  3216     03F2  3004               	movlw	4
  3217     03F3  00C0               	movwf	??_main
  3218     03F4  30BA               	movlw	186
  3219     03F5                     u2247:
  3220     03F5  0B89               	decfsz	9,f
  3221     03F6  2BF5               	goto	u2247
  3222     03F7  0BC0               	decfsz	??_main,f
  3223     03F8  2BF5               	goto	u2247
  3224     03F9  0BC1               	decfsz	??_main+1,f
  3225     03FA  2BF5               	goto	u2247
  3226     03FB  0000               	nop
  3227     03FC                     l3197:
  3228                           
  3229                           ;main.c: 187:         snake_getSurroundings(ai_getInputField());
  3230     03FC  318F  2702  3183   	fcall	_ai_getInputField
  3231     03FF  3182  22DA  3183   	fcall	_snake_getSurroundings
  3232     0402                     l3199:
  3233                           
  3234                           ;main.c: 188:         ai_propagate(snake_move(ai_run()));
  3235     0402  3184  245D  3183   	fcall	_ai_run
  3236     0405  3182  222C  3183   	fcall	_snake_move
  3237     0408  3185  2564  3183   	fcall	_ai_propagate
  3238     040B                     l3201:
  3239                           
  3240                           ;main.c: 189:         for(uint8_t i = 0; i < 8; i++){
  3241     040B  0020               	movlb	0	; select bank0
  3242     040C  01C8               	clrf	main@i_658
  3243     040D                     l3207:
  3244                           
  3245                           ;main.c: 190:             for(uint8_t j = 0; j < 8; j++){
  3246     040D  01C9               	clrf	main@j_659
  3247     040E                     l3213:
  3248                           
  3249                           ;main.c: 191:                 if(field[i+j*8]>0){
  3250     040E  0849               	movf	main@j_659,w
  3251     040F  00C0               	movwf	??_main
  3252     0410  3002               	movlw	2
  3253     0411                     u2125:
  3254     0411  35C0               	lslf	??_main,f
  3255     0412  3EFF               	addlw	-1
  3256     0413  1D03               	skipz
  3257     0414  2C11               	goto	u2125
  3258     0415  3540               	lslf	??_main,w
  3259     0416  0743               	addwf	main@field,w
  3260     0417  00C1               	movwf	??_main+1
  3261     0418  0848               	movf	main@i_658,w
  3262     0419  0741               	addwf	??_main+1,w
  3263     041A  00C2               	movwf	??_main+2
  3264     041B  0842               	movf	??_main+2,w
  3265     041C  0086               	movwf	6
  3266     041D  0187               	clrf	7
  3267     041E  0801               	movf	1,w
  3268     041F  1903               	btfsc	3,2
  3269     0420  2C22               	goto	u2131
  3270     0421  2C23               	goto	u2130
  3271     0422                     u2131:
  3272     0422  2C2A               	goto	l3217
  3273     0423                     u2130:
  3274     0423                     l3215:
  3275                           
  3276                           ;main.c: 192:                     ledSet(i,j);
  3277     0423  0849               	movf	main@j_659,w
  3278     0424  00F0               	movwf	ledSet@c
  3279     0425  0848               	movf	main@i_658,w
  3280     0426  318F  27DD  3183   	fcall	_ledSet
  3281                           
  3282                           ;main.c: 193:                 } else{
  3283     0429  2C30               	goto	l3219
  3284     042A                     l3217:
  3285                           
  3286                           ;main.c: 194:                     ledClear(i,j);
  3287     042A  0849               	movf	main@j_659,w
  3288     042B  00F0               	movwf	ledClear@c
  3289     042C  0848               	movf	main@i_658,w
  3290     042D  318F  27EE  3183   	fcall	_ledClear
  3291     0430                     l3219:
  3292                           
  3293                           ;main.c: 196:             }
  3294     0430  3001               	movlw	1
  3295     0431  0020               	movlb	0	; select bank0
  3296     0432  00C0               	movwf	??_main
  3297     0433  0840               	movf	??_main,w
  3298     0434  07C9               	addwf	main@j_659,f
  3299     0435                     l3221:
  3300     0435  3008               	movlw	8
  3301     0436  0249               	subwf	main@j_659,w
  3302     0437  1C03               	skipc
  3303     0438  2C3A               	goto	u2141
  3304     0439  2C3B               	goto	u2140
  3305     043A                     u2141:
  3306     043A  2C0E               	goto	l3213
  3307     043B                     u2140:
  3308     043B                     l3223:
  3309                           
  3310                           ;main.c: 197:         }
  3311     043B  3001               	movlw	1
  3312     043C  00C0               	movwf	??_main
  3313     043D  0840               	movf	??_main,w
  3314     043E  07C8               	addwf	main@i_658,f
  3315     043F                     l3225:
  3316     043F  3008               	movlw	8
  3317     0440  0248               	subwf	main@i_658,w
  3318     0441  1C03               	skipc
  3319     0442  2C44               	goto	u2151
  3320     0443  2C45               	goto	u2150
  3321     0444                     u2151:
  3322     0444  2C0D               	goto	l3207
  3323     0445                     u2150:
  3324     0445                     l3227:
  3325                           
  3326                           ;main.c: 198:         uint8_t foodPosition = snake_getFoodPosition();
  3327     0445  318F  2706  3183   	fcall	_snake_getFoodPosition
  3328     0448  0020               	movlb	0	; select bank0
  3329     0449  00C5               	movwf	main@foodPosition_660
  3330     044A                     l3229:
  3331                           
  3332                           ;main.c: 199:         ledSet(foodPosition&0x03, foodPosition>>3);
  3333     044A  0845               	movf	main@foodPosition_660,w
  3334     044B  00C0               	movwf	??_main
  3335     044C  3003               	movlw	3
  3336     044D                     u2165:
  3337     044D  36C0               	lsrf	??_main,f
  3338     044E  0B89               	decfsz	9,f
  3339     044F  2C4D               	goto	u2165
  3340     0450  0840               	movf	??_main,w
  3341     0451  00F0               	movwf	ledSet@c
  3342     0452  0845               	movf	main@foodPosition_660,w
  3343     0453  3903               	andlw	3
  3344     0454  318F  27DD  3183   	fcall	_ledSet
  3345     0457                     l3231:
  3346                           
  3347                           ;main.c: 200:         sendMatrix();
  3348     0457  3180  20F9  3183   	fcall	_sendMatrix
  3349     045A  2BEF               	goto	l3195
  3350     045B  3180  2802         	ljmp	start
  3351     045D                     __end_of_main:
  3352                           
  3353                           	psect	text1
  3354     022C                     __ptext1:	
  3355 ;; *************** function _snake_move *****************
  3356 ;; Defined at:
  3357 ;;		line 27 in file "snake.c"
  3358 ;; Parameters:    Size  Location     Type
  3359 ;;  direction       1    wreg     unsigned char 
  3360 ;; Auto vars:     Size  Location     Type
  3361 ;;  direction       1    8[BANK0 ] unsigned char 
  3362 ;;  i               1   10[BANK0 ] unsigned char 
  3363 ;;  incentive       1    9[BANK0 ] char 
  3364 ;; Return value:  Size  Location     Type
  3365 ;;                  1    wreg      char 
  3366 ;; Registers used:
  3367 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3368 ;; Tracked objects:
  3369 ;;		On entry : 0/0
  3370 ;;		On exit  : 0/0
  3371 ;;		Unchanged: 0/0
  3372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3373 ;;      Params:         0       0       0       0       0       0
  3374 ;;      Locals:         0       3       0       0       0       0
  3375 ;;      Temps:          0       2       0       0       0       0
  3376 ;;      Totals:         0       5       0       0       0       0
  3377 ;;Total ram usage:        5 bytes
  3378 ;; Hardware stack levels used: 1
  3379 ;; Hardware stack levels required when called: 3
  3380 ;; This function calls:
  3381 ;;		_rand
  3382 ;;		_snake_initiate
  3383 ;; This function is called by:
  3384 ;;		_main
  3385 ;; This function uses a non-reentrant model
  3386 ;;
  3387                           
  3388     022C                     _snake_move:	
  3389                           ;psect for function _snake_move
  3390                           
  3391                           
  3392                           ;incstack = 0
  3393                           ; Regs used in _snake_move: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3394                           ;snake_move@direction stored from wreg
  3395     022C  0020               	movlb	0	; select bank0
  3396     022D  00A8               	movwf	snake_move@direction
  3397     022E                     l2863:
  3398                           
  3399                           ;snake.c: 28:     for(uint8_t i = 0; i < 64; i++){
  3400     022E  01AA               	clrf	snake_move@i
  3401     022F                     l2869:
  3402                           
  3403                           ;snake.c: 29:         if(field[i] > 0){
  3404     022F  082A               	movf	snake_move@i,w
  3405     0230  3EA0               	addlw	(low (_field| 0))& (0+255)
  3406     0231  0086               	movwf	6
  3407     0232  0187               	clrf	7
  3408     0233  0801               	movf	1,w
  3409     0234  1903               	btfsc	3,2
  3410     0235  2A37               	goto	u1721
  3411     0236  2A38               	goto	u1720
  3412     0237                     u1721:
  3413     0237  2A3E               	goto	l2873
  3414     0238                     u1720:
  3415     0238                     l2871:
  3416                           
  3417                           ;snake.c: 30:             field[i]--;
  3418     0238  082A               	movf	snake_move@i,w
  3419     0239  3EA0               	addlw	(low (_field| 0))& (0+255)
  3420     023A  0086               	movwf	6
  3421     023B  0187               	clrf	7
  3422     023C  3001               	movlw	1
  3423     023D  0281               	subwf	1,f
  3424     023E                     l2873:
  3425                           
  3426                           ;snake.c: 32:     }
  3427     023E  3001               	movlw	1
  3428     023F  00A6               	movwf	??_snake_move
  3429     0240  0826               	movf	??_snake_move,w
  3430     0241  07AA               	addwf	snake_move@i,f
  3431     0242                     l2875:
  3432     0242  3040               	movlw	64
  3433     0243  022A               	subwf	snake_move@i,w
  3434     0244  1C03               	skipc
  3435     0245  2A47               	goto	u1731
  3436     0246  2A48               	goto	u1730
  3437     0247                     u1731:
  3438     0247  2A2F               	goto	l2869
  3439     0248                     u1730:
  3440     0248                     l2877:
  3441                           
  3442                           ;snake.c: 33:     int8_t incentive = 0;
  3443     0248  01A9               	clrf	snake_move@incentive
  3444     0249                     l2879:
  3445                           
  3446                           ;snake.c: 34:     direction &= 0x03;
  3447     0249  3003               	movlw	3
  3448     024A  00A6               	movwf	??_snake_move
  3449     024B  0826               	movf	??_snake_move,w
  3450     024C  05A8               	andwf	snake_move@direction,f
  3451                           
  3452                           ;snake.c: 35:     switch(direction){
  3453     024D  2A8A               	goto	l2907
  3454     024E                     l2881:
  3455                           
  3456                           ;snake.c: 37:             if((headPosition&0x07) == 0){
  3457     024E  0860               	movf	_headPosition,w
  3458     024F  3907               	andlw	7
  3459     0250  1D03               	btfss	3,2
  3460     0251  2A53               	goto	u1741
  3461     0252  2A54               	goto	u1740
  3462     0253                     u1741:
  3463     0253  2A57               	goto	l2885
  3464     0254                     u1740:
  3465     0254                     l2883:
  3466                           
  3467                           ;snake.c: 38:                 incentive = -1;
  3468     0254  01A9               	clrf	snake_move@incentive
  3469     0255  03A9               	decf	snake_move@incentive,f
  3470                           
  3471                           ;snake.c: 39:             } else{
  3472     0256  2AA0               	goto	l2909
  3473     0257                     l2885:
  3474                           
  3475                           ;snake.c: 40:                 headPosition--;
  3476     0257  3001               	movlw	1
  3477     0258  02E0               	subwf	_headPosition,f
  3478     0259  2AA0               	goto	l2909
  3479     025A                     l2887:
  3480                           
  3481                           ;snake.c: 44:             if((headPosition&0x07) == 7){
  3482     025A  3007               	movlw	7
  3483     025B  0560               	andwf	_headPosition,w
  3484     025C  00A6               	movwf	??_snake_move
  3485     025D  3007               	movlw	7
  3486     025E  0626               	xorwf	??_snake_move,w
  3487     025F  1D03               	btfss	3,2
  3488     0260  2A62               	goto	u1751
  3489     0261  2A63               	goto	u1750
  3490     0262                     u1751:
  3491     0262  2A64               	goto	l2891
  3492     0263                     u1750:
  3493     0263  2A54               	goto	l2883
  3494     0264                     l2891:
  3495                           
  3496                           ;snake.c: 47:                 headPosition++;
  3497     0264  3001               	movlw	1
  3498     0265  00A6               	movwf	??_snake_move
  3499     0266  0826               	movf	??_snake_move,w
  3500     0267  07E0               	addwf	_headPosition,f
  3501     0268  2AA0               	goto	l2909
  3502     0269                     l2893:
  3503                           
  3504                           ;snake.c: 51:             if((headPosition>>3) == 0){
  3505     0269  0860               	movf	_headPosition,w
  3506     026A  00A6               	movwf	??_snake_move
  3507     026B  3003               	movlw	3
  3508     026C                     u1765:
  3509     026C  36A6               	lsrf	??_snake_move,f
  3510     026D  0B89               	decfsz	9,f
  3511     026E  2A6C               	goto	u1765
  3512     026F  0826               	movf	??_snake_move,w
  3513     0270  1D03               	btfss	3,2
  3514     0271  2A73               	goto	u1771
  3515     0272  2A74               	goto	u1770
  3516     0273                     u1771:
  3517     0273  2A75               	goto	l2897
  3518     0274                     u1770:
  3519     0274  2A54               	goto	l2883
  3520     0275                     l2897:
  3521                           
  3522                           ;snake.c: 54:                 headPosition -= 8;
  3523     0275  3008               	movlw	8
  3524     0276  02E0               	subwf	_headPosition,f
  3525     0277  2AA0               	goto	l2909
  3526     0278                     l2899:
  3527                           
  3528                           ;snake.c: 58:             if((headPosition>>3) == 7){
  3529     0278  0860               	movf	_headPosition,w
  3530     0279  00A6               	movwf	??_snake_move
  3531     027A  3003               	movlw	3
  3532     027B                     u1785:
  3533     027B  36A6               	lsrf	??_snake_move,f
  3534     027C  0B89               	decfsz	9,f
  3535     027D  2A7B               	goto	u1785
  3536     027E  3007               	movlw	7
  3537     027F  0626               	xorwf	??_snake_move,w
  3538     0280  1D03               	btfss	3,2
  3539     0281  2A83               	goto	u1791
  3540     0282  2A84               	goto	u1790
  3541     0283                     u1791:
  3542     0283  2A85               	goto	l2903
  3543     0284                     u1790:
  3544     0284  2A54               	goto	l2883
  3545     0285                     l2903:
  3546                           
  3547                           ;snake.c: 61:                 headPosition += 8;
  3548     0285  3008               	movlw	8
  3549     0286  00A6               	movwf	??_snake_move
  3550     0287  0826               	movf	??_snake_move,w
  3551     0288  07E0               	addwf	_headPosition,f
  3552     0289  2AA0               	goto	l2909
  3553     028A                     l2907:
  3554     028A  0828               	movf	snake_move@direction,w
  3555     028B  00A6               	movwf	??_snake_move
  3556     028C  01A7               	clrf	??_snake_move+1
  3557                           
  3558                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3559                           ; Switch size 1, requested type "simple"
  3560                           ; Number of cases is 1, Range of values is 0 to 0
  3561                           ; switch strategies available:
  3562                           ; Name         Instructions Cycles
  3563                           ; simple_byte            4     3 (average)
  3564                           ; direct_byte            8     6 (fixed)
  3565                           ; jumptable            260     6 (fixed)
  3566                           ;	Chosen strategy is simple_byte
  3567     028D  0827               	movf	??_snake_move+1,w
  3568     028E  3A00               	xorlw	0	; case 0
  3569     028F  1903               	skipnz
  3570     0290  2A92               	goto	l3355
  3571     0291  2AA0               	goto	l2909
  3572     0292                     l3355:
  3573                           
  3574                           ; Switch size 1, requested type "simple"
  3575                           ; Number of cases is 4, Range of values is 0 to 3
  3576                           ; switch strategies available:
  3577                           ; Name         Instructions Cycles
  3578                           ; simple_byte           13     7 (average)
  3579                           ; direct_byte           14     6 (fixed)
  3580                           ; jumptable            260     6 (fixed)
  3581                           ;	Chosen strategy is simple_byte
  3582     0292  0826               	movf	??_snake_move,w
  3583     0293  3A00               	xorlw	0	; case 0
  3584     0294  1903               	skipnz
  3585     0295  2A4E               	goto	l2881
  3586     0296  3A01               	xorlw	1	; case 1
  3587     0297  1903               	skipnz
  3588     0298  2A5A               	goto	l2887
  3589     0299  3A03               	xorlw	3	; case 2
  3590     029A  1903               	skipnz
  3591     029B  2A69               	goto	l2893
  3592     029C  3A01               	xorlw	1	; case 3
  3593     029D  1903               	skipnz
  3594     029E  2A78               	goto	l2899
  3595     029F  2AA0               	goto	l2909
  3596     02A0                     l2909:
  3597                           
  3598                           ;snake.c: 65:     if(incentive == -1){
  3599     02A0  0A29               	incf	snake_move@incentive,w
  3600     02A1  1D03               	btfss	3,2
  3601     02A2  2AA4               	goto	u1801
  3602     02A3  2AA5               	goto	u1800
  3603     02A4                     u1801:
  3604     02A4  2AA9               	goto	l2913
  3605     02A5                     u1800:
  3606     02A5                     l2911:
  3607                           
  3608                           ;snake.c: 66:         snake_initiate();
  3609     02A5  3180  20A7  3182   	fcall	_snake_initiate
  3610                           
  3611                           ;snake.c: 67:     } else if(field[headPosition] > 0){
  3612     02A8  2AD7               	goto	l2931
  3613     02A9                     l2913:
  3614     02A9  0860               	movf	_headPosition,w
  3615     02AA  3EA0               	addlw	(low (_field| 0))& (0+255)
  3616     02AB  0086               	movwf	6
  3617     02AC  0187               	clrf	7
  3618     02AD  0801               	movf	1,w
  3619     02AE  1903               	btfsc	3,2
  3620     02AF  2AB1               	goto	u1811
  3621     02B0  2AB2               	goto	u1810
  3622     02B1                     u1811:
  3623     02B1  2AB5               	goto	l2919
  3624     02B2                     u1810:
  3625     02B2                     l2915:
  3626                           
  3627                           ;snake.c: 68:         incentive = -1;
  3628     02B2  01A9               	clrf	snake_move@incentive
  3629     02B3  03A9               	decf	snake_move@incentive,f
  3630     02B4  2AA5               	goto	l2911
  3631     02B5                     l2919:
  3632                           
  3633                           ;snake.c: 71:         if(headPosition == foodPosition){
  3634     02B5  0860               	movf	_headPosition,w
  3635     02B6  065F               	xorwf	_foodPosition,w
  3636     02B7  1D03               	skipz
  3637     02B8  2ABA               	goto	u1821
  3638     02B9  2ABB               	goto	u1820
  3639     02BA                     u1821:
  3640     02BA  2AD1               	goto	l2929
  3641     02BB                     u1820:
  3642     02BB                     l2921:
  3643                           
  3644                           ;snake.c: 72:             incentive = 1;
  3645     02BB  01A9               	clrf	snake_move@incentive
  3646     02BC  0AA9               	incf	snake_move@incentive,f
  3647     02BD                     l2923:
  3648                           
  3649                           ;snake.c: 73:             snakeSize++;
  3650     02BD  3001               	movlw	1
  3651     02BE  00A6               	movwf	??_snake_move
  3652     02BF  0826               	movf	??_snake_move,w
  3653     02C0  07E1               	addwf	_snakeSize,f
  3654     02C1                     l2925:
  3655                           
  3656                           ;snake.c: 75:                 foodPosition = ((uint8_t)rand())&0x1f;
  3657     02C1  3181  215A  3182   	fcall	_rand
  3658     02C4  087C               	movf	?_rand,w
  3659     02C5  391F               	andlw	31
  3660     02C6  0020               	movlb	0	; select bank0
  3661     02C7  00DF               	movwf	_foodPosition
  3662     02C8                     l2927:
  3663                           
  3664                           ;snake.c: 76:             }while(field[foodPosition] > 0);
  3665     02C8  085F               	movf	_foodPosition,w
  3666     02C9  3EA0               	addlw	(low (_field| 0))& (0+255)
  3667     02CA  0086               	movwf	6
  3668     02CB  0187               	clrf	7
  3669     02CC  0801               	movf	1,w
  3670     02CD  1D03               	btfss	3,2
  3671     02CE  2AD0               	goto	u1831
  3672     02CF  2AD1               	goto	u1830
  3673     02D0                     u1831:
  3674     02D0  2AC1               	goto	l2925
  3675     02D1                     u1830:
  3676     02D1                     l2929:
  3677                           
  3678                           ;snake.c: 78:         field[headPosition] = snakeSize;
  3679     02D1  0860               	movf	_headPosition,w
  3680     02D2  3EA0               	addlw	(low (_field| 0))& (0+255)
  3681     02D3  0086               	movwf	6
  3682     02D4  0187               	clrf	7
  3683     02D5  0861               	movf	_snakeSize,w
  3684     02D6  0081               	movwf	1
  3685     02D7                     l2931:
  3686                           
  3687                           ;snake.c: 80:     return incentive;
  3688     02D7  0020               	movlb	0	; select bank0
  3689     02D8  0829               	movf	snake_move@incentive,w
  3690     02D9                     l440:
  3691     02D9  0008               	return
  3692     02DA                     __end_of_snake_move:
  3693                           
  3694                           	psect	text2
  3695     00A7                     __ptext2:	
  3696 ;; *************** function _snake_initiate *****************
  3697 ;; Defined at:
  3698 ;;		line 17 in file "snake.c"
  3699 ;; Parameters:    Size  Location     Type
  3700 ;;		None
  3701 ;; Auto vars:     Size  Location     Type
  3702 ;;  i               1    5[BANK0 ] unsigned char 
  3703 ;; Return value:  Size  Location     Type
  3704 ;;                  1    wreg      void 
  3705 ;; Registers used:
  3706 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3707 ;; Tracked objects:
  3708 ;;		On entry : 0/0
  3709 ;;		On exit  : 0/0
  3710 ;;		Unchanged: 0/0
  3711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3712 ;;      Params:         0       0       0       0       0       0
  3713 ;;      Locals:         0       1       0       0       0       0
  3714 ;;      Temps:          0       1       0       0       0       0
  3715 ;;      Totals:         0       2       0       0       0       0
  3716 ;;Total ram usage:        2 bytes
  3717 ;; Hardware stack levels used: 1
  3718 ;; Hardware stack levels required when called: 2
  3719 ;; This function calls:
  3720 ;;		_rand
  3721 ;; This function is called by:
  3722 ;;		_main
  3723 ;;		_snake_move
  3724 ;; This function uses a non-reentrant model
  3725 ;;
  3726                           
  3727     00A7                     _snake_initiate:	
  3728                           ;psect for function _snake_initiate
  3729                           
  3730     00A7                     l2559:	
  3731                           ;incstack = 0
  3732                           ; Regs used in _snake_initiate: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3733                           
  3734                           
  3735                           ;snake.c: 18:     for(uint8_t i = 0; i < 64; i++){
  3736     00A7  0020               	movlb	0	; select bank0
  3737     00A8  01A5               	clrf	snake_initiate@i
  3738     00A9                     l2565:
  3739                           
  3740                           ;snake.c: 19:         field[i] = 0;
  3741     00A9  0825               	movf	snake_initiate@i,w
  3742     00AA  3EA0               	addlw	(low (_field| 0))& (0+255)
  3743     00AB  0086               	movwf	6
  3744     00AC  0187               	clrf	7
  3745     00AD  0181               	clrf	1
  3746     00AE                     l2567:
  3747                           
  3748                           ;snake.c: 20:     }
  3749     00AE  3001               	movlw	1
  3750     00AF  00A4               	movwf	??_snake_initiate
  3751     00B0  0824               	movf	??_snake_initiate,w
  3752     00B1  07A5               	addwf	snake_initiate@i,f
  3753     00B2                     l2569:
  3754     00B2  3040               	movlw	64
  3755     00B3  0225               	subwf	snake_initiate@i,w
  3756     00B4  1C03               	skipc
  3757     00B5  28B7               	goto	u1311
  3758     00B6  28B8               	goto	u1310
  3759     00B7                     u1311:
  3760     00B7  28A9               	goto	l2565
  3761     00B8                     u1310:
  3762     00B8                     l2571:
  3763                           
  3764                           ;snake.c: 21:     headPosition = ((uint8_t)rand())&0x3f;
  3765     00B8  3181  215A  3180   	fcall	_rand
  3766     00BB  087C               	movf	?_rand,w
  3767     00BC  393F               	andlw	63
  3768     00BD  0020               	movlb	0	; select bank0
  3769     00BE  00E0               	movwf	_headPosition
  3770                           
  3771                           ;snake.c: 22:     foodPosition = ((uint8_t)rand())&0x3f;
  3772     00BF  3181  215A  3180   	fcall	_rand
  3773     00C2  087C               	movf	?_rand,w
  3774     00C3  393F               	andlw	63
  3775     00C4  0020               	movlb	0	; select bank0
  3776     00C5  00DF               	movwf	_foodPosition
  3777     00C6                     l2573:
  3778                           
  3779                           ;snake.c: 23:     snakeSize = 1;
  3780     00C6  01E1               	clrf	_snakeSize
  3781     00C7  0AE1               	incf	_snakeSize,f
  3782     00C8                     l2575:
  3783                           
  3784                           ;snake.c: 24:     field[headPosition] = snakeSize;
  3785     00C8  0860               	movf	_headPosition,w
  3786     00C9  3EA0               	addlw	(low (_field| 0))& (0+255)
  3787     00CA  0086               	movwf	6
  3788     00CB  0187               	clrf	7
  3789     00CC  0861               	movf	_snakeSize,w
  3790     00CD  0081               	movwf	1
  3791     00CE                     l413:
  3792     00CE  0008               	return
  3793     00CF                     __end_of_snake_initiate:
  3794                           
  3795                           	psect	text3
  3796     015A                     __ptext3:	
  3797 ;; *************** function _rand *****************
  3798 ;; Defined at:
  3799 ;;		line 11 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\common\rand.c"
  3800 ;; Parameters:    Size  Location     Type
  3801 ;;		None
  3802 ;; Auto vars:     Size  Location     Type
  3803 ;;		None
  3804 ;; Return value:  Size  Location     Type
  3805 ;;                  2   12[COMMON] int 
  3806 ;; Registers used:
  3807 ;;		wreg, status,2, status,0, pclath, cstack
  3808 ;; Tracked objects:
  3809 ;;		On entry : 0/0
  3810 ;;		On exit  : 0/0
  3811 ;;		Unchanged: 0/0
  3812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3813 ;;      Params:         2       0       0       0       0       0
  3814 ;;      Locals:         0       0       0       0       0       0
  3815 ;;      Temps:          0       4       0       0       0       0
  3816 ;;      Totals:         2       4       0       0       0       0
  3817 ;;Total ram usage:        6 bytes
  3818 ;; Hardware stack levels used: 1
  3819 ;; Hardware stack levels required when called: 1
  3820 ;; This function calls:
  3821 ;;		___lmul
  3822 ;; This function is called by:
  3823 ;;		_snake_initiate
  3824 ;;		_snake_move
  3825 ;;		_ai_initiate
  3826 ;; This function uses a non-reentrant model
  3827 ;;
  3828                           
  3829     015A                     _rand:	
  3830                           ;psect for function _rand
  3831                           
  3832     015A                     l2473:	
  3833                           ;incstack = 0
  3834                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
  3835                           
  3836     015A  0020               	movlb	0	; select bank0
  3837     015B  0866               	movf	_seed+3,w
  3838     015C  00F3               	movwf	___lmul@multiplier+3
  3839     015D  0865               	movf	_seed+2,w
  3840     015E  00F2               	movwf	___lmul@multiplier+2
  3841     015F  0864               	movf	_seed+1,w
  3842     0160  00F1               	movwf	___lmul@multiplier+1
  3843     0161  0863               	movf	_seed,w
  3844     0162  00F0               	movwf	___lmul@multiplier
  3845     0163  304C               	movlw	76
  3846     0164  00F7               	movwf	___lmul@multiplicand+3
  3847     0165  3095               	movlw	149
  3848     0166  00F6               	movwf	___lmul@multiplicand+2
  3849     0167  307F               	movlw	127
  3850     0168  00F5               	movwf	___lmul@multiplicand+1
  3851     0169  302D               	movlw	45
  3852     016A  00F4               	movwf	___lmul@multiplicand
  3853     016B  3181  2127  3181   	fcall	___lmul
  3854     016E  3001               	movlw	1
  3855     016F  0770               	addwf	?___lmul,w
  3856     0170  0020               	movlb	0	; select bank0
  3857     0171  00E3               	movwf	_seed
  3858     0172  3000               	movlw	0
  3859     0173  3D71               	addwfc	?___lmul+1,w
  3860     0174  00E4               	movwf	_seed+1
  3861     0175  3000               	movlw	0
  3862     0176  3D72               	addwfc	?___lmul+2,w
  3863     0177  00E5               	movwf	_seed+2
  3864     0178  3000               	movlw	0
  3865     0179  3D73               	addwfc	?___lmul+3,w
  3866     017A  00E6               	movwf	_seed+3
  3867     017B                     l2475:
  3868     017B  0863               	movf	_seed,w
  3869     017C  00A0               	movwf	??_rand
  3870     017D  0864               	movf	_seed+1,w
  3871     017E  00A1               	movwf	??_rand+1
  3872     017F  0865               	movf	_seed+2,w
  3873     0180  00A2               	movwf	??_rand+2
  3874     0181  0866               	movf	_seed+3,w
  3875     0182  00A3               	movwf	??_rand+3
  3876     0183  3011               	movlw	17
  3877     0184                     u1245:
  3878     0184  36A3               	lsrf	??_rand+3,f
  3879     0185  0CA2               	rrf	??_rand+2,f
  3880     0186  0CA1               	rrf	??_rand+1,f
  3881     0187  0CA0               	rrf	??_rand,f
  3882     0188                     u1240:
  3883     0188  0B89               	decfsz	9,f
  3884     0189  2984               	goto	u1245
  3885     018A  0821               	movf	??_rand+1,w
  3886     018B  00FD               	movwf	?_rand+1
  3887     018C  0820               	movf	??_rand,w
  3888     018D  00FC               	movwf	?_rand
  3889     018E                     l1311:
  3890     018E  0008               	return
  3891     018F                     __end_of_rand:
  3892                           
  3893                           	psect	text4
  3894     0127                     __ptext4:	
  3895 ;; *************** function ___lmul *****************
  3896 ;; Defined at:
  3897 ;;		line 15 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\common\Umul32.c"
  3898 ;; Parameters:    Size  Location     Type
  3899 ;;  multiplier      4    0[COMMON] unsigned long 
  3900 ;;  multiplicand    4    4[COMMON] unsigned long 
  3901 ;; Auto vars:     Size  Location     Type
  3902 ;;  product         4    8[COMMON] unsigned long 
  3903 ;; Return value:  Size  Location     Type
  3904 ;;                  4    0[COMMON] unsigned long 
  3905 ;; Registers used:
  3906 ;;		wreg, status,2, status,0
  3907 ;; Tracked objects:
  3908 ;;		On entry : 0/0
  3909 ;;		On exit  : 0/0
  3910 ;;		Unchanged: 0/0
  3911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3912 ;;      Params:         8       0       0       0       0       0
  3913 ;;      Locals:         4       0       0       0       0       0
  3914 ;;      Temps:          0       0       0       0       0       0
  3915 ;;      Totals:        12       0       0       0       0       0
  3916 ;;Total ram usage:       12 bytes
  3917 ;; Hardware stack levels used: 1
  3918 ;; This function calls:
  3919 ;;		Nothing
  3920 ;; This function is called by:
  3921 ;;		_rand
  3922 ;; This function uses a non-reentrant model
  3923 ;;
  3924                           
  3925     0127                     ___lmul:	
  3926                           ;psect for function ___lmul
  3927                           
  3928     0127                     l2451:	
  3929                           ;incstack = 0
  3930                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  3931                           
  3932     0127  3000               	movlw	0
  3933     0128  00FB               	movwf	___lmul@product+3
  3934     0129  3000               	movlw	0
  3935     012A  00FA               	movwf	___lmul@product+2
  3936     012B  3000               	movlw	0
  3937     012C  00F9               	movwf	___lmul@product+1
  3938     012D  3000               	movlw	0
  3939     012E  00F8               	movwf	___lmul@product
  3940     012F                     l2453:
  3941     012F  1C70               	btfss	___lmul@multiplier,0
  3942     0130  2932               	goto	u1201
  3943     0131  2933               	goto	u1200
  3944     0132                     u1201:
  3945     0132  293B               	goto	l2457
  3946     0133                     u1200:
  3947     0133                     l2455:
  3948     0133  0874               	movf	___lmul@multiplicand,w
  3949     0134  07F8               	addwf	___lmul@product,f
  3950     0135  0875               	movf	___lmul@multiplicand+1,w
  3951     0136  3DF9               	addwfc	___lmul@product+1,f
  3952     0137  0876               	movf	___lmul@multiplicand+2,w
  3953     0138  3DFA               	addwfc	___lmul@product+2,f
  3954     0139  0877               	movf	___lmul@multiplicand+3,w
  3955     013A  3DFB               	addwfc	___lmul@product+3,f
  3956     013B                     l2457:
  3957     013B  3001               	movlw	1
  3958     013C                     u1215:
  3959     013C  35F4               	lslf	___lmul@multiplicand,f
  3960     013D  0DF5               	rlf	___lmul@multiplicand+1,f
  3961     013E  0DF6               	rlf	___lmul@multiplicand+2,f
  3962     013F  0DF7               	rlf	___lmul@multiplicand+3,f
  3963     0140  0B89               	decfsz	9,f
  3964     0141  293C               	goto	u1215
  3965     0142                     l2459:
  3966     0142  3001               	movlw	1
  3967     0143                     u1225:
  3968     0143  36F3               	lsrf	___lmul@multiplier+3,f
  3969     0144  0CF2               	rrf	___lmul@multiplier+2,f
  3970     0145  0CF1               	rrf	___lmul@multiplier+1,f
  3971     0146  0CF0               	rrf	___lmul@multiplier,f
  3972     0147  0B89               	decfsz	9,f
  3973     0148  2943               	goto	u1225
  3974     0149  0873               	movf	___lmul@multiplier+3,w
  3975     014A  0472               	iorwf	___lmul@multiplier+2,w
  3976     014B  0471               	iorwf	___lmul@multiplier+1,w
  3977     014C  0470               	iorwf	___lmul@multiplier,w
  3978     014D  1D03               	skipz
  3979     014E  2950               	goto	u1231
  3980     014F  2951               	goto	u1230
  3981     0150                     u1231:
  3982     0150  292F               	goto	l2453
  3983     0151                     u1230:
  3984     0151                     l2461:
  3985     0151  087B               	movf	___lmul@product+3,w
  3986     0152  00F3               	movwf	?___lmul+3
  3987     0153  087A               	movf	___lmul@product+2,w
  3988     0154  00F2               	movwf	?___lmul+2
  3989     0155  0879               	movf	___lmul@product+1,w
  3990     0156  00F1               	movwf	?___lmul+1
  3991     0157  0878               	movf	___lmul@product,w
  3992     0158  00F0               	movwf	?___lmul
  3993     0159                     l861:
  3994     0159  0008               	return
  3995     015A                     __end_of___lmul:
  3996                           
  3997                           	psect	text5
  3998     02DA                     __ptext5:	
  3999 ;; *************** function _snake_getSurroundings *****************
  4000 ;; Defined at:
  4001 ;;		line 87 in file "snake.c"
  4002 ;; Parameters:    Size  Location     Type
  4003 ;;  surroundings    1    wreg     PTR unsigned char 
  4004 ;;		 -> Y0(16), 
  4005 ;; Auto vars:     Size  Location     Type
  4006 ;;  surroundings    1    4[COMMON] PTR unsigned char 
  4007 ;;		 -> Y0(16), 
  4008 ;;  i               1    3[COMMON] unsigned char 
  4009 ;;  i               1    2[COMMON] unsigned char 
  4010 ;;  p               1    1[COMMON] unsigned char 
  4011 ;; Return value:  Size  Location     Type
  4012 ;;                  1    wreg      void 
  4013 ;; Registers used:
  4014 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4015 ;; Tracked objects:
  4016 ;;		On entry : 0/0
  4017 ;;		On exit  : 0/0
  4018 ;;		Unchanged: 0/0
  4019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4020 ;;      Params:         0       0       0       0       0       0
  4021 ;;      Locals:         4       0       0       0       0       0
  4022 ;;      Temps:          1       0       0       0       0       0
  4023 ;;      Totals:         5       0       0       0       0       0
  4024 ;;Total ram usage:        5 bytes
  4025 ;; Hardware stack levels used: 1
  4026 ;; This function calls:
  4027 ;;		Nothing
  4028 ;; This function is called by:
  4029 ;;		_main
  4030 ;; This function uses a non-reentrant model
  4031 ;;
  4032                           
  4033     02DA                     _snake_getSurroundings:	
  4034                           ;psect for function _snake_getSurroundings
  4035                           
  4036                           
  4037                           ;incstack = 0
  4038                           ; Regs used in _snake_getSurroundings: [wreg+fsr1l+fsr1h+status,2+status,0]
  4039                           ;snake_getSurroundings@surroundings stored from wreg
  4040     02DA  00F4               	movwf	snake_getSurroundings@surroundings
  4041     02DB                     l2733:
  4042                           
  4043                           ;snake.c: 88:     for(uint8_t i = 0; i < 16; i++){
  4044     02DB  01F2               	clrf	snake_getSurroundings@i
  4045     02DC                     l2739:
  4046                           
  4047                           ;snake.c: 89:         surroundings[i] = 0;
  4048     02DC  0872               	movf	snake_getSurroundings@i,w
  4049     02DD  0774               	addwf	snake_getSurroundings@surroundings,w
  4050     02DE  00F0               	movwf	??_snake_getSurroundings
  4051     02DF  0870               	movf	??_snake_getSurroundings,w
  4052     02E0  0086               	movwf	6
  4053     02E1  0187               	clrf	7
  4054     02E2  0181               	clrf	1
  4055     02E3                     l2741:
  4056                           
  4057                           ;snake.c: 90:     }
  4058     02E3  3001               	movlw	1
  4059     02E4  00F0               	movwf	??_snake_getSurroundings
  4060     02E5  0870               	movf	??_snake_getSurroundings,w
  4061     02E6  07F2               	addwf	snake_getSurroundings@i,f
  4062     02E7                     l2743:
  4063     02E7  3010               	movlw	16
  4064     02E8  0272               	subwf	snake_getSurroundings@i,w
  4065     02E9  1C03               	skipc
  4066     02EA  2AEC               	goto	u1561
  4067     02EB  2AED               	goto	u1560
  4068     02EC                     u1561:
  4069     02EC  2ADC               	goto	l2739
  4070     02ED                     u1560:
  4071     02ED                     l2745:
  4072                           
  4073                           ;snake.c: 91:     if((headPosition&0x07) == 0){
  4074     02ED  0020               	movlb	0	; select bank0
  4075     02EE  0860               	movf	_headPosition,w
  4076     02EF  3907               	andlw	7
  4077     02F0  1D03               	btfss	3,2
  4078     02F1  2AF3               	goto	u1571
  4079     02F2  2AF4               	goto	u1570
  4080     02F3                     u1571:
  4081     02F3  2B05               	goto	l2751
  4082     02F4                     u1570:
  4083     02F4                     l2747:
  4084                           
  4085                           ;snake.c: 92:         surroundings[0] = 1;
  4086     02F4  0874               	movf	snake_getSurroundings@surroundings,w
  4087     02F5  0086               	movwf	6
  4088     02F6  0187               	clrf	7
  4089     02F7  0181               	clrf	1
  4090     02F8  0A81               	incf	1,f
  4091                           
  4092                           ;snake.c: 93:         surroundings[1] = 1;
  4093     02F9  0A74               	incf	snake_getSurroundings@surroundings,w
  4094     02FA  0086               	movwf	6
  4095     02FB  0187               	clrf	7
  4096     02FC  0181               	clrf	1
  4097     02FD  0A81               	incf	1,f
  4098     02FE                     l2749:
  4099                           
  4100                           ;snake.c: 94:         surroundings[2] = 1;
  4101     02FE  0874               	movf	snake_getSurroundings@surroundings,w
  4102     02FF  3E02               	addlw	2
  4103     0300  0086               	movwf	6
  4104     0301  0187               	clrf	7
  4105     0302  0181               	clrf	1
  4106     0303  0A81               	incf	1,f
  4107                           
  4108                           ;snake.c: 95:     } else if((headPosition&0x07) == 7){
  4109     0304  2B20               	goto	l2755
  4110     0305                     l2751:
  4111     0305  3007               	movlw	7
  4112     0306  0560               	andwf	_headPosition,w
  4113     0307  00F0               	movwf	??_snake_getSurroundings
  4114     0308  3007               	movlw	7
  4115     0309  0670               	xorwf	??_snake_getSurroundings,w
  4116     030A  1D03               	btfss	3,2
  4117     030B  2B0D               	goto	u1581
  4118     030C  2B0E               	goto	u1580
  4119     030D                     u1581:
  4120     030D  2B20               	goto	l2755
  4121     030E                     u1580:
  4122     030E                     l2753:
  4123                           
  4124                           ;snake.c: 96:         surroundings[4] = 1;
  4125     030E  0874               	movf	snake_getSurroundings@surroundings,w
  4126     030F  3E04               	addlw	4
  4127     0310  0086               	movwf	6
  4128     0311  0187               	clrf	7
  4129     0312  0181               	clrf	1
  4130     0313  0A81               	incf	1,f
  4131                           
  4132                           ;snake.c: 97:         surroundings[5] = 1;
  4133     0314  0874               	movf	snake_getSurroundings@surroundings,w
  4134     0315  3E05               	addlw	5
  4135     0316  0086               	movwf	6
  4136     0317  0187               	clrf	7
  4137     0318  0181               	clrf	1
  4138     0319  0A81               	incf	1,f
  4139                           
  4140                           ;snake.c: 98:         surroundings[6] = 1;
  4141     031A  0874               	movf	snake_getSurroundings@surroundings,w
  4142     031B  3E06               	addlw	6
  4143     031C  0086               	movwf	6
  4144     031D  0187               	clrf	7
  4145     031E  0181               	clrf	1
  4146     031F  0A81               	incf	1,f
  4147     0320                     l2755:
  4148                           
  4149                           ;snake.c: 100:     if((headPosition>>3) == 0){
  4150     0320  0860               	movf	_headPosition,w
  4151     0321  00F0               	movwf	??_snake_getSurroundings
  4152     0322  3003               	movlw	3
  4153     0323                     u1595:
  4154     0323  36F0               	lsrf	??_snake_getSurroundings,f
  4155     0324  0B89               	decfsz	9,f
  4156     0325  2B23               	goto	u1595
  4157     0326  0870               	movf	??_snake_getSurroundings,w
  4158     0327  1D03               	btfss	3,2
  4159     0328  2B2A               	goto	u1601
  4160     0329  2B2B               	goto	u1600
  4161     032A                     u1601:
  4162     032A  2B3D               	goto	l2761
  4163     032B                     u1600:
  4164     032B                     l2757:
  4165                           
  4166                           ;snake.c: 101:         surroundings[6] = 1;
  4167     032B  0874               	movf	snake_getSurroundings@surroundings,w
  4168     032C  3E06               	addlw	6
  4169     032D  0086               	movwf	6
  4170     032E  0187               	clrf	7
  4171     032F  0181               	clrf	1
  4172     0330  0A81               	incf	1,f
  4173                           
  4174                           ;snake.c: 102:         surroundings[7] = 1;
  4175     0331  0874               	movf	snake_getSurroundings@surroundings,w
  4176     0332  3E07               	addlw	7
  4177     0333  0086               	movwf	6
  4178     0334  0187               	clrf	7
  4179     0335  0181               	clrf	1
  4180     0336  0A81               	incf	1,f
  4181     0337                     l2759:
  4182                           
  4183                           ;snake.c: 103:         surroundings[0] = 1;
  4184     0337  0874               	movf	snake_getSurroundings@surroundings,w
  4185     0338  0086               	movwf	6
  4186     0339  0187               	clrf	7
  4187     033A  0181               	clrf	1
  4188     033B  0A81               	incf	1,f
  4189                           
  4190                           ;snake.c: 104:     } else if((headPosition>>3) == 7){
  4191     033C  2B5B               	goto	l2765
  4192     033D                     l2761:
  4193     033D  0860               	movf	_headPosition,w
  4194     033E  00F0               	movwf	??_snake_getSurroundings
  4195     033F  3003               	movlw	3
  4196     0340                     u1615:
  4197     0340  36F0               	lsrf	??_snake_getSurroundings,f
  4198     0341  0B89               	decfsz	9,f
  4199     0342  2B40               	goto	u1615
  4200     0343  3007               	movlw	7
  4201     0344  0670               	xorwf	??_snake_getSurroundings,w
  4202     0345  1D03               	btfss	3,2
  4203     0346  2B48               	goto	u1621
  4204     0347  2B49               	goto	u1620
  4205     0348                     u1621:
  4206     0348  2B5B               	goto	l2765
  4207     0349                     u1620:
  4208     0349                     l2763:
  4209                           
  4210                           ;snake.c: 105:         surroundings[2] = 1;
  4211     0349  0874               	movf	snake_getSurroundings@surroundings,w
  4212     034A  3E02               	addlw	2
  4213     034B  0086               	movwf	6
  4214     034C  0187               	clrf	7
  4215     034D  0181               	clrf	1
  4216     034E  0A81               	incf	1,f
  4217                           
  4218                           ;snake.c: 106:         surroundings[3] = 1;
  4219     034F  0874               	movf	snake_getSurroundings@surroundings,w
  4220     0350  3E03               	addlw	3
  4221     0351  0086               	movwf	6
  4222     0352  0187               	clrf	7
  4223     0353  0181               	clrf	1
  4224     0354  0A81               	incf	1,f
  4225                           
  4226                           ;snake.c: 107:         surroundings[4] = 1;
  4227     0355  0874               	movf	snake_getSurroundings@surroundings,w
  4228     0356  3E04               	addlw	4
  4229     0357  0086               	movwf	6
  4230     0358  0187               	clrf	7
  4231     0359  0181               	clrf	1
  4232     035A  0A81               	incf	1,f
  4233     035B                     l2765:
  4234                           
  4235                           ;snake.c: 109:     uint8_t p;;snake.c: 110:     for(uint8_t i = 0; i < 8; i++){
  4236     035B  01F3               	clrf	snake_getSurroundings@i_782
  4237     035C                     l2771:
  4238                           
  4239                           ;snake.c: 111:         p = (headPosition+mapping[i])&0x3f;
  4240     035C  0873               	movf	snake_getSurroundings@i_782,w
  4241     035D  3E67               	addlw	(low (_mapping| (0+256)))& (0+255)
  4242     035E  0086               	movwf	6
  4243     035F  3001               	movlw	1	; select bank2/3
  4244     0360  0087               	movwf	7
  4245     0361  0801               	movf	1,w
  4246     0362  0760               	addwf	_headPosition,w
  4247     0363  393F               	andlw	63
  4248     0364  00F1               	movwf	snake_getSurroundings@p
  4249     0365                     l2773:
  4250                           
  4251                           ;snake.c: 112:         if(p==foodPosition){
  4252     0365  0871               	movf	snake_getSurroundings@p,w
  4253     0366  065F               	xorwf	_foodPosition,w
  4254     0367  1D03               	skipz
  4255     0368  2B6A               	goto	u1631
  4256     0369  2B6B               	goto	u1630
  4257     036A                     u1631:
  4258     036A  2B74               	goto	l456
  4259     036B                     u1630:
  4260     036B                     l2775:
  4261                           
  4262                           ;snake.c: 113:             surroundings[i+8] = 1;
  4263     036B  0873               	movf	snake_getSurroundings@i_782,w
  4264     036C  0774               	addwf	snake_getSurroundings@surroundings,w
  4265     036D  00F0               	movwf	??_snake_getSurroundings
  4266     036E  0870               	movf	??_snake_getSurroundings,w
  4267     036F  3E08               	addlw	8
  4268     0370  0086               	movwf	6
  4269     0371  0187               	clrf	7
  4270     0372  0181               	clrf	1
  4271     0373  0A81               	incf	1,f
  4272     0374                     l456:	
  4273                           ;snake.c: 114:         }
  4274                           
  4275                           
  4276                           ;snake.c: 115:         if(field[p] > 0){
  4277     0374  0871               	movf	snake_getSurroundings@p,w
  4278     0375  3EA0               	addlw	(low (_field| 0))& (0+255)
  4279     0376  0086               	movwf	6
  4280     0377  0187               	clrf	7
  4281     0378  0801               	movf	1,w
  4282     0379  1903               	btfsc	3,2
  4283     037A  2B7C               	goto	u1641
  4284     037B  2B7D               	goto	u1640
  4285     037C                     u1641:
  4286     037C  2B85               	goto	l2779
  4287     037D                     u1640:
  4288     037D                     l2777:
  4289                           
  4290                           ;snake.c: 116:             surroundings[i] = 1;
  4291     037D  0873               	movf	snake_getSurroundings@i_782,w
  4292     037E  0774               	addwf	snake_getSurroundings@surroundings,w
  4293     037F  00F0               	movwf	??_snake_getSurroundings
  4294     0380  0870               	movf	??_snake_getSurroundings,w
  4295     0381  0086               	movwf	6
  4296     0382  0187               	clrf	7
  4297     0383  0181               	clrf	1
  4298     0384  0A81               	incf	1,f
  4299     0385                     l2779:
  4300                           
  4301                           ;snake.c: 118:     }
  4302     0385  3001               	movlw	1
  4303     0386  00F0               	movwf	??_snake_getSurroundings
  4304     0387  0870               	movf	??_snake_getSurroundings,w
  4305     0388  07F3               	addwf	snake_getSurroundings@i_782,f
  4306     0389                     l2781:
  4307     0389  3008               	movlw	8
  4308     038A  0273               	subwf	snake_getSurroundings@i_782,w
  4309     038B  1C03               	skipc
  4310     038C  2B8E               	goto	u1651
  4311     038D  2B8F               	goto	u1650
  4312     038E                     u1651:
  4313     038E  2B5C               	goto	l2771
  4314     038F                     u1650:
  4315     038F                     l458:
  4316     038F  0008               	return
  4317     0390                     __end_of_snake_getSurroundings:
  4318                           
  4319                           	psect	text6
  4320     0F06                     __ptext6:	
  4321 ;; *************** function _snake_getFoodPosition *****************
  4322 ;; Defined at:
  4323 ;;		line 128 in file "snake.c"
  4324 ;; Parameters:    Size  Location     Type
  4325 ;;		None
  4326 ;; Auto vars:     Size  Location     Type
  4327 ;;		None
  4328 ;; Return value:  Size  Location     Type
  4329 ;;                  1    wreg      unsigned char 
  4330 ;; Registers used:
  4331 ;;		wreg
  4332 ;; Tracked objects:
  4333 ;;		On entry : 0/0
  4334 ;;		On exit  : 0/0
  4335 ;;		Unchanged: 0/0
  4336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4337 ;;      Params:         0       0       0       0       0       0
  4338 ;;      Locals:         0       0       0       0       0       0
  4339 ;;      Temps:          0       0       0       0       0       0
  4340 ;;      Totals:         0       0       0       0       0       0
  4341 ;;Total ram usage:        0 bytes
  4342 ;; Hardware stack levels used: 1
  4343 ;; This function calls:
  4344 ;;		Nothing
  4345 ;; This function is called by:
  4346 ;;		_main
  4347 ;; This function uses a non-reentrant model
  4348 ;;
  4349                           
  4350     0F06                     _snake_getFoodPosition:	
  4351                           ;psect for function _snake_getFoodPosition
  4352                           
  4353     0F06                     l2695:	
  4354                           ;incstack = 0
  4355                           ; Regs used in _snake_getFoodPosition: [wreg]
  4356                           
  4357                           
  4358                           ;snake.c: 129:     return foodPosition;
  4359     0F06  0020               	movlb	0	; select bank0
  4360     0F07  085F               	movf	_foodPosition,w
  4361     0F08                     l467:
  4362     0F08  0008               	return
  4363     0F09                     __end_of_snake_getFoodPosition:
  4364                           
  4365                           	psect	text7
  4366     0F04                     __ptext7:	
  4367 ;; *************** function _snake_getField *****************
  4368 ;; Defined at:
  4369 ;;		line 83 in file "snake.c"
  4370 ;; Parameters:    Size  Location     Type
  4371 ;;		None
  4372 ;; Auto vars:     Size  Location     Type
  4373 ;;		None
  4374 ;; Return value:  Size  Location     Type
  4375 ;;                  1    wreg      PTR unsigned char 
  4376 ;; Registers used:
  4377 ;;		wreg
  4378 ;; Tracked objects:
  4379 ;;		On entry : 0/0
  4380 ;;		On exit  : 0/0
  4381 ;;		Unchanged: 0/0
  4382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4383 ;;      Params:         0       0       0       0       0       0
  4384 ;;      Locals:         0       0       0       0       0       0
  4385 ;;      Temps:          0       0       0       0       0       0
  4386 ;;      Totals:         0       0       0       0       0       0
  4387 ;;Total ram usage:        0 bytes
  4388 ;; Hardware stack levels used: 1
  4389 ;; This function calls:
  4390 ;;		Nothing
  4391 ;; This function is called by:
  4392 ;;		_main
  4393 ;; This function uses a non-reentrant model
  4394 ;;
  4395                           
  4396     0F04                     _snake_getField:	
  4397                           ;psect for function _snake_getField
  4398                           
  4399     0F04                     l2687:	
  4400                           ;incstack = 0
  4401                           ; Regs used in _snake_getField: [wreg]
  4402                           
  4403                           
  4404                           ;snake.c: 84:     return field;
  4405     0F04  30A0               	movlw	(low (_field| 0))& (0+255)
  4406     0F05                     l443:
  4407     0F05  0008               	return
  4408     0F06                     __end_of_snake_getField:
  4409                           
  4410                           	psect	text8
  4411     00F9                     __ptext8:	
  4412 ;; *************** function _sendMatrix *****************
  4413 ;; Defined at:
  4414 ;;		line 51 in file "ledMatrix.c"
  4415 ;; Parameters:    Size  Location     Type
  4416 ;;		None
  4417 ;; Auto vars:     Size  Location     Type
  4418 ;;  j               1    6[COMMON] unsigned char 
  4419 ;;  i               1    7[COMMON] unsigned char 
  4420 ;;  nb              1    5[COMMON] unsigned char 
  4421 ;;  b               1    4[COMMON] unsigned char 
  4422 ;; Return value:  Size  Location     Type
  4423 ;;                  1    wreg      void 
  4424 ;; Registers used:
  4425 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4426 ;; Tracked objects:
  4427 ;;		On entry : 0/0
  4428 ;;		On exit  : 0/0
  4429 ;;		Unchanged: 0/0
  4430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4431 ;;      Params:         0       0       0       0       0       0
  4432 ;;      Locals:         4       0       0       0       0       0
  4433 ;;      Temps:          1       0       0       0       0       0
  4434 ;;      Totals:         5       0       0       0       0       0
  4435 ;;Total ram usage:        5 bytes
  4436 ;; Hardware stack levels used: 1
  4437 ;; Hardware stack levels required when called: 2
  4438 ;; This function calls:
  4439 ;;		_txMAX7219
  4440 ;; This function is called by:
  4441 ;;		_main
  4442 ;; This function uses a non-reentrant model
  4443 ;;
  4444                           
  4445     00F9                     _sendMatrix:	
  4446                           ;psect for function _sendMatrix
  4447                           
  4448     00F9                     l2699:	
  4449                           ;incstack = 0
  4450                           ; Regs used in _sendMatrix: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4451                           
  4452                           
  4453                           ;ledMatrix.c: 52:     uint8_t b;;ledMatrix.c: 53:     uint8_t nb;;ledMatrix.c: 54:     f
      +                          or(uint8_t i=0;i<8;i++){
  4454     00F9  01F7               	clrf	sendMatrix@i
  4455     00FA                     l2705:
  4456                           
  4457                           ;ledMatrix.c: 58:         b = matrix[i];
  4458     00FA  0877               	movf	sendMatrix@i,w
  4459     00FB  3E52               	addlw	(low (_matrix| 0))& (0+255)
  4460     00FC  0086               	movwf	6
  4461     00FD  0187               	clrf	7
  4462     00FE  0801               	movf	1,w
  4463     00FF  00F4               	movwf	sendMatrix@b
  4464     0100                     l2707:
  4465                           
  4466                           ;ledMatrix.c: 61:         nb = 0x00;
  4467     0100  01F5               	clrf	sendMatrix@nb
  4468     0101                     l2709:
  4469                           
  4470                           ;ledMatrix.c: 62:         for(uint8_t j = 0; j < 8; j++){
  4471     0101  01F6               	clrf	sendMatrix@j
  4472     0102                     l2715:
  4473                           
  4474                           ;ledMatrix.c: 63:             nb <<= 1;
  4475     0102  1003               	clrc
  4476     0103  0DF5               	rlf	sendMatrix@nb,f
  4477     0104                     l2717:
  4478                           
  4479                           ;ledMatrix.c: 64:             nb |= b&0x01;
  4480     0104  0874               	movf	sendMatrix@b,w
  4481     0105  3901               	andlw	1
  4482     0106  00F3               	movwf	??_sendMatrix
  4483     0107  0873               	movf	??_sendMatrix,w
  4484     0108  04F5               	iorwf	sendMatrix@nb,f
  4485     0109                     l2719:
  4486                           
  4487                           ;ledMatrix.c: 65:             b >>= 1;
  4488     0109  1003               	clrc
  4489     010A  0CF4               	rrf	sendMatrix@b,f
  4490                           
  4491                           ;ledMatrix.c: 66:         }
  4492     010B  3001               	movlw	1
  4493     010C  00F3               	movwf	??_sendMatrix
  4494     010D  0873               	movf	??_sendMatrix,w
  4495     010E  07F6               	addwf	sendMatrix@j,f
  4496     010F                     l2721:
  4497     010F  3008               	movlw	8
  4498     0110  0276               	subwf	sendMatrix@j,w
  4499     0111  1C03               	skipc
  4500     0112  2914               	goto	u1541
  4501     0113  2915               	goto	u1540
  4502     0114                     u1541:
  4503     0114  2902               	goto	l2715
  4504     0115                     u1540:
  4505     0115                     l2723:
  4506                           
  4507                           ;ledMatrix.c: 67:         txMAX7219(i+1,nb);
  4508     0115  0875               	movf	sendMatrix@nb,w
  4509     0116  00F1               	movwf	txMAX7219@dat0
  4510     0117  0877               	movf	sendMatrix@i,w
  4511     0118  3E01               	addlw	1
  4512     0119  3180  204C  3180   	fcall	_txMAX7219
  4513     011C                     l2725:
  4514                           
  4515                           ;ledMatrix.c: 71:     }
  4516     011C  3001               	movlw	1
  4517     011D  00F3               	movwf	??_sendMatrix
  4518     011E  0873               	movf	??_sendMatrix,w
  4519     011F  07F7               	addwf	sendMatrix@i,f
  4520     0120                     l2727:
  4521     0120  3008               	movlw	8
  4522     0121  0277               	subwf	sendMatrix@i,w
  4523     0122  1C03               	skipc
  4524     0123  2925               	goto	u1551
  4525     0124  2926               	goto	u1550
  4526     0125                     u1551:
  4527     0125  28FA               	goto	l2705
  4528     0126                     u1550:
  4529     0126                     l388:
  4530     0126  0008               	return
  4531     0127                     __end_of_sendMatrix:
  4532                           
  4533                           	psect	text9
  4534     0FDD                     __ptext9:	
  4535 ;; *************** function _ledSet *****************
  4536 ;; Defined at:
  4537 ;;		line 31 in file "ledMatrix.c"
  4538 ;; Parameters:    Size  Location     Type
  4539 ;;  l               1    wreg     unsigned char 
  4540 ;;  c               1    0[COMMON] unsigned char 
  4541 ;; Auto vars:     Size  Location     Type
  4542 ;;  l               1    3[COMMON] unsigned char 
  4543 ;; Return value:  Size  Location     Type
  4544 ;;                  1    wreg      void 
  4545 ;; Registers used:
  4546 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4547 ;; Tracked objects:
  4548 ;;		On entry : 0/0
  4549 ;;		On exit  : 0/0
  4550 ;;		Unchanged: 0/0
  4551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4552 ;;      Params:         1       0       0       0       0       0
  4553 ;;      Locals:         1       0       0       0       0       0
  4554 ;;      Temps:          2       0       0       0       0       0
  4555 ;;      Totals:         4       0       0       0       0       0
  4556 ;;Total ram usage:        4 bytes
  4557 ;; Hardware stack levels used: 1
  4558 ;; This function calls:
  4559 ;;		Nothing
  4560 ;; This function is called by:
  4561 ;;		_main
  4562 ;; This function uses a non-reentrant model
  4563 ;;
  4564                           
  4565     0FDD                     _ledSet:	
  4566                           ;psect for function _ledSet
  4567                           
  4568                           
  4569                           ;incstack = 0
  4570                           ; Regs used in _ledSet: [wreg+fsr1l+fsr1h+status,2+status,0]
  4571                           ;ledSet@l stored from wreg
  4572     0FDD  00F3               	movwf	ledSet@l
  4573     0FDE                     l2691:
  4574                           
  4575                           ;ledMatrix.c: 32:     (matrix[c]) |= 1UL << (l);
  4576     0FDE  3001               	movlw	1
  4577     0FDF  00F1               	movwf	??_ledSet
  4578     0FE0  0A73               	incf	ledSet@l,w
  4579     0FE1  2FE3               	goto	u1524
  4580     0FE2                     u1525:
  4581     0FE2  35F1               	lslf	??_ledSet,f
  4582     0FE3                     u1524:
  4583     0FE3  0B89               	decfsz	9,f
  4584     0FE4  2FE2               	goto	u1525
  4585     0FE5  0871               	movf	??_ledSet,w
  4586     0FE6  00F2               	movwf	??_ledSet+1
  4587     0FE7  0870               	movf	ledSet@c,w
  4588     0FE8  3E52               	addlw	(low (_matrix| 0))& (0+255)
  4589     0FE9  0086               	movwf	6
  4590     0FEA  0187               	clrf	7
  4591     0FEB  0872               	movf	??_ledSet+1,w
  4592     0FEC  0481               	iorwf	1,f
  4593     0FED                     l370:
  4594     0FED  0008               	return
  4595     0FEE                     __end_of_ledSet:
  4596                           
  4597                           	psect	text10
  4598     0FEE                     __ptext10:	
  4599 ;; *************** function _ledClear *****************
  4600 ;; Defined at:
  4601 ;;		line 35 in file "ledMatrix.c"
  4602 ;; Parameters:    Size  Location     Type
  4603 ;;  l               1    wreg     unsigned char 
  4604 ;;  c               1    0[COMMON] unsigned char 
  4605 ;; Auto vars:     Size  Location     Type
  4606 ;;  l               1    3[COMMON] unsigned char 
  4607 ;; Return value:  Size  Location     Type
  4608 ;;                  1    wreg      void 
  4609 ;; Registers used:
  4610 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4611 ;; Tracked objects:
  4612 ;;		On entry : 0/0
  4613 ;;		On exit  : 0/0
  4614 ;;		Unchanged: 0/0
  4615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4616 ;;      Params:         1       0       0       0       0       0
  4617 ;;      Locals:         1       0       0       0       0       0
  4618 ;;      Temps:          2       0       0       0       0       0
  4619 ;;      Totals:         4       0       0       0       0       0
  4620 ;;Total ram usage:        4 bytes
  4621 ;; Hardware stack levels used: 1
  4622 ;; This function calls:
  4623 ;;		Nothing
  4624 ;; This function is called by:
  4625 ;;		_main
  4626 ;; This function uses a non-reentrant model
  4627 ;;
  4628                           
  4629     0FEE                     _ledClear:	
  4630                           ;psect for function _ledClear
  4631                           
  4632                           
  4633                           ;incstack = 0
  4634                           ; Regs used in _ledClear: [wreg+fsr1l+fsr1h+status,2+status,0]
  4635                           ;ledClear@l stored from wreg
  4636     0FEE  00F3               	movwf	ledClear@l
  4637     0FEF                     l2693:
  4638                           
  4639                           ;ledMatrix.c: 36:     (matrix[c]) &= ~(1UL << (l));
  4640     0FEF  3001               	movlw	1
  4641     0FF0  00F1               	movwf	??_ledClear
  4642     0FF1  0A73               	incf	ledClear@l,w
  4643     0FF2  2FF4               	goto	u1534
  4644     0FF3                     u1535:
  4645     0FF3  35F1               	lslf	??_ledClear,f
  4646     0FF4                     u1534:
  4647     0FF4  0B89               	decfsz	9,f
  4648     0FF5  2FF3               	goto	u1535
  4649     0FF6  0871               	movf	??_ledClear,w
  4650     0FF7  3AFF               	xorlw	255
  4651     0FF8  00F2               	movwf	??_ledClear+1
  4652     0FF9  0870               	movf	ledClear@c,w
  4653     0FFA  3E52               	addlw	(low (_matrix| 0))& (0+255)
  4654     0FFB  0086               	movwf	6
  4655     0FFC  0187               	clrf	7
  4656     0FFD  0872               	movf	??_ledClear+1,w
  4657     0FFE  0581               	andwf	1,f
  4658     0FFF                     l373:
  4659     0FFF  0008               	return
  4660     1000                     __end_of_ledClear:
  4661                           
  4662                           	psect	text11
  4663     018F                     __ptext11:	
  4664 ;; *************** function _initMAX7219 *****************
  4665 ;; Defined at:
  4666 ;;		line 16 in file "ledMatrix.c"
  4667 ;; Parameters:    Size  Location     Type
  4668 ;;		None
  4669 ;; Auto vars:     Size  Location     Type
  4670 ;;		None
  4671 ;; Return value:  Size  Location     Type
  4672 ;;                  1    wreg      void 
  4673 ;; Registers used:
  4674 ;;		wreg, status,2, status,0, pclath, cstack
  4675 ;; Tracked objects:
  4676 ;;		On entry : 0/0
  4677 ;;		On exit  : 0/0
  4678 ;;		Unchanged: 0/0
  4679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4680 ;;      Params:         0       0       0       0       0       0
  4681 ;;      Locals:         0       0       0       0       0       0
  4682 ;;      Temps:          2       0       0       0       0       0
  4683 ;;      Totals:         2       0       0       0       0       0
  4684 ;;Total ram usage:        2 bytes
  4685 ;; Hardware stack levels used: 1
  4686 ;; Hardware stack levels required when called: 2
  4687 ;; This function calls:
  4688 ;;		_txMAX7219
  4689 ;; This function is called by:
  4690 ;;		_main
  4691 ;; This function uses a non-reentrant model
  4692 ;;
  4693                           
  4694     018F                     _initMAX7219:	
  4695                           ;psect for function _initMAX7219
  4696                           
  4697     018F                     l2677:	
  4698                           ;incstack = 0
  4699                           ; Regs used in _initMAX7219: [wreg+status,2+status,0+pclath+cstack]
  4700                           
  4701                           
  4702                           ;ledMatrix.c: 17:     LATBbits.LATB1 = 1;
  4703     018F  0022               	movlb	2	; select bank2
  4704     0190  148D               	bsf	13,1	;volatile
  4705                           
  4706                           ;ledMatrix.c: 18:     TRISBbits.TRISB1 = 0;
  4707     0191  0021               	movlb	1	; select bank1
  4708     0192  108D               	bcf	13,1	;volatile
  4709                           
  4710                           ;ledMatrix.c: 19:     SSP1CON1bits.SSPEN = 1;
  4711     0193  0024               	movlb	4	; select bank4
  4712     0194  1695               	bsf	21,5	;volatile
  4713     0195                     l2679:
  4714                           
  4715                           ;ledMatrix.c: 20:     txMAX7219(0x09,0x00);
  4716     0195  01F1               	clrf	txMAX7219@dat0
  4717     0196  3009               	movlw	9
  4718     0197  3180  204C  3181   	fcall	_txMAX7219
  4719                           
  4720                           ;ledMatrix.c: 21:     txMAX7219(0x0A,0x00);
  4721     019A  01F1               	clrf	txMAX7219@dat0
  4722     019B  300A               	movlw	10
  4723     019C  3180  204C  3181   	fcall	_txMAX7219
  4724                           
  4725                           ;ledMatrix.c: 22:     txMAX7219(0x0C,0x00);
  4726     019F  01F1               	clrf	txMAX7219@dat0
  4727     01A0  300C               	movlw	12
  4728     01A1  3180  204C  3181   	fcall	_txMAX7219
  4729                           
  4730                           ;ledMatrix.c: 23:     txMAX7219(0x0B,0x07);
  4731     01A4  3007               	movlw	7
  4732     01A5  00F1               	movwf	txMAX7219@dat0
  4733     01A6  300B               	movlw	11
  4734     01A7  3180  204C  3181   	fcall	_txMAX7219
  4735                           
  4736                           ;ledMatrix.c: 24:     txMAX7219(0x0C,0x01);
  4737     01AA  01F1               	clrf	txMAX7219@dat0
  4738     01AB  0AF1               	incf	txMAX7219@dat0,f
  4739     01AC  300C               	movlw	12
  4740     01AD  3180  204C  3181   	fcall	_txMAX7219
  4741                           
  4742                           ;ledMatrix.c: 25:     txMAX7219(0x0F,0x01);
  4743     01B0  01F1               	clrf	txMAX7219@dat0
  4744     01B1  0AF1               	incf	txMAX7219@dat0,f
  4745     01B2  300F               	movlw	15
  4746     01B3  3180  204C  3181   	fcall	_txMAX7219
  4747     01B6                     l2681:
  4748                           
  4749                           ;ledMatrix.c: 26:     _delay((unsigned long)((1000)*(8000000/4000.0)));
  4750     01B6  300B               	movlw	11
  4751     01B7  00F4               	movwf	??_initMAX7219+1
  4752     01B8  3026               	movlw	38
  4753     01B9  00F3               	movwf	??_initMAX7219
  4754     01BA  305E               	movlw	94
  4755     01BB                     u2257:
  4756     01BB  0B89               	decfsz	9,f
  4757     01BC  29BB               	goto	u2257
  4758     01BD  0BF3               	decfsz	??_initMAX7219,f
  4759     01BE  29BB               	goto	u2257
  4760     01BF  0BF4               	decfsz	??_initMAX7219+1,f
  4761     01C0  29BB               	goto	u2257
  4762     01C1                     l2683:
  4763                           
  4764                           ;ledMatrix.c: 27:     txMAX7219(0x0F,0x00);
  4765     01C1  01F1               	clrf	txMAX7219@dat0
  4766     01C2  300F               	movlw	15
  4767     01C3  3180  204C  3181   	fcall	_txMAX7219
  4768     01C6                     l2685:
  4769                           
  4770                           ;ledMatrix.c: 28:     txMAX7219(0x0C,0x01);
  4771     01C6  01F1               	clrf	txMAX7219@dat0
  4772     01C7  0AF1               	incf	txMAX7219@dat0,f
  4773     01C8  300C               	movlw	12
  4774     01C9  3180  204C  3181   	fcall	_txMAX7219
  4775     01CC                     l367:
  4776     01CC  0008               	return
  4777     01CD                     __end_of_initMAX7219:
  4778                           
  4779                           	psect	text12
  4780     004C                     __ptext12:	
  4781 ;; *************** function _txMAX7219 *****************
  4782 ;; Defined at:
  4783 ;;		line 5 in file "ledMatrix.c"
  4784 ;; Parameters:    Size  Location     Type
  4785 ;;  addr0           1    wreg     unsigned char 
  4786 ;;  dat0            1    1[COMMON] unsigned char 
  4787 ;; Auto vars:     Size  Location     Type
  4788 ;;  addr0           1    2[COMMON] unsigned char 
  4789 ;; Return value:  Size  Location     Type
  4790 ;;                  1    wreg      void 
  4791 ;; Registers used:
  4792 ;;		wreg, status,2, status,0, pclath, cstack
  4793 ;; Tracked objects:
  4794 ;;		On entry : 0/0
  4795 ;;		On exit  : 0/0
  4796 ;;		Unchanged: 0/0
  4797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4798 ;;      Params:         1       0       0       0       0       0
  4799 ;;      Locals:         1       0       0       0       0       0
  4800 ;;      Temps:          0       0       0       0       0       0
  4801 ;;      Totals:         2       0       0       0       0       0
  4802 ;;Total ram usage:        2 bytes
  4803 ;; Hardware stack levels used: 1
  4804 ;; Hardware stack levels required when called: 1
  4805 ;; This function calls:
  4806 ;;		_SPI1_WriteByte
  4807 ;; This function is called by:
  4808 ;;		_initMAX7219
  4809 ;;		_sendMatrix
  4810 ;; This function uses a non-reentrant model
  4811 ;;
  4812                           
  4813     004C                     _txMAX7219:	
  4814                           ;psect for function _txMAX7219
  4815                           
  4816                           
  4817                           ;incstack = 0
  4818                           ; Regs used in _txMAX7219: [wreg+status,2+status,0+pclath+cstack]
  4819                           ;txMAX7219@addr0 stored from wreg
  4820     004C  00F2               	movwf	txMAX7219@addr0
  4821     004D                     l2577:
  4822                           
  4823                           ;ledMatrix.c: 6:     LATBbits.LATB1 = 0;
  4824     004D  0022               	movlb	2	; select bank2
  4825     004E  108D               	bcf	13,1	;volatile
  4826     004F                     l2579:
  4827                           
  4828                           ;ledMatrix.c: 7:     SPI1_WriteByte(addr0);
  4829     004F  0872               	movf	txMAX7219@addr0,w
  4830     0050  318F  270D  3180   	fcall	_SPI1_WriteByte
  4831     0053                     l358:	
  4832                           ;ledMatrix.c: 8:     while(!PIR1bits.SSP1IF);
  4833                           
  4834     0053  0020               	movlb	0	; select bank0
  4835     0054  1D91               	btfss	17,3	;volatile
  4836     0055  2857               	goto	u1321
  4837     0056  2858               	goto	u1320
  4838     0057                     u1321:
  4839     0057  2853               	goto	l358
  4840     0058                     u1320:
  4841     0058                     l360:
  4842                           
  4843                           ;ledMatrix.c: 9:     PIR1bits.SSP1IF = 0;
  4844     0058  1191               	bcf	17,3	;volatile
  4845     0059                     l2581:
  4846                           
  4847                           ;ledMatrix.c: 10:     SPI1_WriteByte(dat0);
  4848     0059  0871               	movf	txMAX7219@dat0,w
  4849     005A  318F  270D  3180   	fcall	_SPI1_WriteByte
  4850     005D                     l361:	
  4851                           ;ledMatrix.c: 11:     while(!PIR1bits.SSP1IF);
  4852                           
  4853     005D  0020               	movlb	0	; select bank0
  4854     005E  1D91               	btfss	17,3	;volatile
  4855     005F  2861               	goto	u1331
  4856     0060  2862               	goto	u1330
  4857     0061                     u1331:
  4858     0061  285D               	goto	l361
  4859     0062                     u1330:
  4860     0062                     l363:
  4861                           
  4862                           ;ledMatrix.c: 12:     PIR1bits.SSP1IF = 0;
  4863     0062  1191               	bcf	17,3	;volatile
  4864                           
  4865                           ;ledMatrix.c: 13:     LATBbits.LATB1 = 1;
  4866     0063  0022               	movlb	2	; select bank2
  4867     0064  148D               	bsf	13,1	;volatile
  4868     0065                     l364:
  4869     0065  0008               	return
  4870     0066                     __end_of_txMAX7219:
  4871                           
  4872                           	psect	text13
  4873     0F0D                     __ptext13:	
  4874 ;; *************** function _SPI1_WriteByte *****************
  4875 ;; Defined at:
  4876 ;;		line 131 in file "mcc_generated_files/spi1.c"
  4877 ;; Parameters:    Size  Location     Type
  4878 ;;  byte            1    wreg     unsigned char 
  4879 ;; Auto vars:     Size  Location     Type
  4880 ;;  byte            1    0[COMMON] unsigned char 
  4881 ;; Return value:  Size  Location     Type
  4882 ;;                  1    wreg      void 
  4883 ;; Registers used:
  4884 ;;		wreg
  4885 ;; Tracked objects:
  4886 ;;		On entry : 0/0
  4887 ;;		On exit  : 0/0
  4888 ;;		Unchanged: 0/0
  4889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4890 ;;      Params:         0       0       0       0       0       0
  4891 ;;      Locals:         1       0       0       0       0       0
  4892 ;;      Temps:          0       0       0       0       0       0
  4893 ;;      Totals:         1       0       0       0       0       0
  4894 ;;Total ram usage:        1 bytes
  4895 ;; Hardware stack levels used: 1
  4896 ;; This function calls:
  4897 ;;		Nothing
  4898 ;; This function is called by:
  4899 ;;		_txMAX7219
  4900 ;; This function uses a non-reentrant model
  4901 ;;
  4902                           
  4903     0F0D                     _SPI1_WriteByte:	
  4904                           ;psect for function _SPI1_WriteByte
  4905                           
  4906                           
  4907                           ;incstack = 0
  4908                           ; Regs used in _SPI1_WriteByte: [wreg]
  4909                           ;SPI1_WriteByte@byte stored from wreg
  4910     0F0D  00F0               	movwf	SPI1_WriteByte@byte
  4911     0F0E                     l2471:
  4912                           
  4913                           ;mcc_generated_files/spi1.c: 131: void SPI1_WriteByte(uint8_t byte);mcc_generated_files/
      +                          spi1.c: 132: {;mcc_generated_files/spi1.c: 133:     SSP1BUF = byte;
  4914     0F0E  0870               	movf	SPI1_WriteByte@byte,w
  4915     0F0F  0024               	movlb	4	; select bank4
  4916     0F10  0091               	movwf	17	;volatile
  4917     0F11                     l224:
  4918     0F11  0008               	return
  4919     0F12                     __end_of_SPI1_WriteByte:
  4920                           
  4921                           	psect	text14
  4922     0F72                     __ptext14:	
  4923 ;; *************** function _deactivateElevator *****************
  4924 ;; Defined at:
  4925 ;;		line 50 in file "main.c"
  4926 ;; Parameters:    Size  Location     Type
  4927 ;;		None
  4928 ;; Auto vars:     Size  Location     Type
  4929 ;;		None
  4930 ;; Return value:  Size  Location     Type
  4931 ;;                  1    wreg      void 
  4932 ;; Registers used:
  4933 ;;		None
  4934 ;; Tracked objects:
  4935 ;;		On entry : 0/0
  4936 ;;		On exit  : 0/0
  4937 ;;		Unchanged: 0/0
  4938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4939 ;;      Params:         0       0       0       0       0       0
  4940 ;;      Locals:         0       0       0       0       0       0
  4941 ;;      Temps:          0       0       0       0       0       0
  4942 ;;      Totals:         0       0       0       0       0       0
  4943 ;;Total ram usage:        0 bytes
  4944 ;; Hardware stack levels used: 1
  4945 ;; This function calls:
  4946 ;;		Nothing
  4947 ;; This function is called by:
  4948 ;;		_main
  4949 ;; This function uses a non-reentrant model
  4950 ;;
  4951                           
  4952     0F72                     _deactivateElevator:	
  4953                           ;psect for function _deactivateElevator
  4954                           
  4955     0F72                     l2675:	
  4956                           ;incstack = 0
  4957                           ; Regs used in _deactivateElevator: []
  4958                           
  4959                           
  4960                           ;main.c: 51:     LATAbits.LATA3 = 0;
  4961     0F72  0022               	movlb	2	; select bank2
  4962     0F73  118C               	bcf	12,3	;volatile
  4963                           
  4964                           ;main.c: 52:     LATAbits.LATA7 = 0;
  4965     0F74  138C               	bcf	12,7	;volatile
  4966                           
  4967                           ;main.c: 54:     TRISAbits.TRISA0 = 1;
  4968     0F75  0021               	movlb	1	; select bank1
  4969     0F76  140C               	bsf	12,0	;volatile
  4970                           
  4971                           ;main.c: 55:     TRISAbits.TRISA1 = 1;
  4972     0F77  148C               	bsf	12,1	;volatile
  4973                           
  4974                           ;main.c: 56:     TRISAbits.TRISA2 = 1;
  4975     0F78  150C               	bsf	12,2	;volatile
  4976                           
  4977                           ;main.c: 57:     TRISAbits.TRISA3 = 0;
  4978     0F79  118C               	bcf	12,3	;volatile
  4979                           
  4980                           ;main.c: 58:     TRISAbits.TRISA4 = 1;
  4981     0F7A  160C               	bsf	12,4	;volatile
  4982                           
  4983                           ;main.c: 59:     TRISAbits.TRISA7 = 0;
  4984     0F7B  138C               	bcf	12,7	;volatile
  4985                           
  4986                           ;main.c: 60:     TRISBbits.TRISB0 = 1;
  4987     0F7C  140D               	bsf	13,0	;volatile
  4988                           
  4989                           ;main.c: 61:     TRISBbits.TRISB3 = 1;
  4990     0F7D  158D               	bsf	13,3	;volatile
  4991     0F7E                     l321:
  4992     0F7E  0008               	return
  4993     0F7F                     __end_of_deactivateElevator:
  4994                           
  4995                           	psect	text15
  4996     045D                     __ptext15:	
  4997 ;; *************** function _ai_run *****************
  4998 ;; Defined at:
  4999 ;;		line 106 in file "ai.c"
  5000 ;; Parameters:    Size  Location     Type
  5001 ;;		None
  5002 ;; Auto vars:     Size  Location     Type
  5003 ;;  i               1    3[BANK0 ] unsigned char 
  5004 ;;  i               1    2[BANK0 ] unsigned char 
  5005 ;;  i               1    4[BANK0 ] unsigned char 
  5006 ;;  j               1    8[BANK0 ] unsigned char 
  5007 ;;  j               1    7[BANK0 ] unsigned char 
  5008 ;;  z               2    5[BANK0 ] short 
  5009 ;; Return value:  Size  Location     Type
  5010 ;;                  1    wreg      unsigned char 
  5011 ;; Registers used:
  5012 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5013 ;; Tracked objects:
  5014 ;;		On entry : 0/0
  5015 ;;		On exit  : 0/0
  5016 ;;		Unchanged: 0/0
  5017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5018 ;;      Params:         0       0       0       0       0       0
  5019 ;;      Locals:         0       7       0       0       0       0
  5020 ;;      Temps:          0       2       0       0       0       0
  5021 ;;      Totals:         0       9       0       0       0       0
  5022 ;;Total ram usage:        9 bytes
  5023 ;; Hardware stack levels used: 1
  5024 ;; Hardware stack levels required when called: 2
  5025 ;; This function calls:
  5026 ;;		___awdiv
  5027 ;;		___wmul
  5028 ;;		_biases1_read
  5029 ;;		_biases2_read
  5030 ;;		_sigmoid
  5031 ;;		_weights1_read
  5032 ;;		_weights2_read
  5033 ;; This function is called by:
  5034 ;;		_main
  5035 ;; This function uses a non-reentrant model
  5036 ;;
  5037                           
  5038     045D                     _ai_run:	
  5039                           ;psect for function _ai_run
  5040                           
  5041     045D                     l2783:	
  5042                           ;incstack = 0
  5043                           ; Regs used in _ai_run: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5044                           
  5045                           
  5046                           ;ai.c: 107:     int16_t z;;ai.c: 108:     for(uint8_t j = 0; j < 7; j++){
  5047     045D  0020               	movlb	0	; select bank0
  5048     045E  01A7               	clrf	ai_run@j
  5049     045F                     l2789:
  5050                           
  5051                           ;ai.c: 109:         Z1[j] = biases1_read(j);
  5052     045F  0827               	movf	ai_run@j,w
  5053     0460  318F  272C  3184   	fcall	_biases1_read
  5054     0463  0020               	movlb	0	; select bank0
  5055     0464  00A0               	movwf	??_ai_run
  5056     0465  01A1               	clrf	??_ai_run+1
  5057     0466  1BA0               	btfsc	??_ai_run,7
  5058     0467  03A1               	decf	??_ai_run+1,f
  5059     0468  3527               	lslf	ai_run@j,w
  5060     0469  3E4A               	addlw	(low (_Z1| (0+256)))& (0+255)
  5061     046A  0086               	movwf	6
  5062     046B  3001               	movlw	1	; select bank2/3
  5063     046C  0087               	movwf	7
  5064     046D  0820               	movf	??_ai_run,w
  5065     046E  3FC0               	movwi [0]fsr1
  5066     046F  0821               	movf	??_ai_run+1,w
  5067     0470  3FC1               	movwi [1]fsr1
  5068     0471                     l2791:
  5069                           
  5070                           ;ai.c: 110:         for(uint8_t i = 0; i < 16; i++){
  5071     0471  01A2               	clrf	ai_run@i
  5072     0472                     l2797:
  5073                           
  5074                           ;ai.c: 111:             z = (int16_t)Y0[i];
  5075     0472  0822               	movf	ai_run@i,w
  5076     0473  3EE0               	addlw	(low (_Y0| 0))& (0+255)
  5077     0474  0086               	movwf	6
  5078     0475  0187               	clrf	7
  5079     0476  0801               	movf	1,w
  5080     0477  00A0               	movwf	??_ai_run
  5081     0478  01A1               	clrf	??_ai_run+1
  5082     0479  0820               	movf	??_ai_run,w
  5083     047A  00A5               	movwf	ai_run@z
  5084     047B  0821               	movf	??_ai_run+1,w
  5085     047C  00A6               	movwf	ai_run@z+1
  5086     047D                     l2799:
  5087                           
  5088                           ;ai.c: 112:             z *= weights1_read(i,j);
  5089     047D  0827               	movf	ai_run@j,w
  5090     047E  00F4               	movwf	weights1_read@add2
  5091     047F  0822               	movf	ai_run@i,w
  5092     0480  318F  277F  3184   	fcall	_weights1_read
  5093     0483  00F7               	movwf	___wmul@multiplier
  5094     0484  01F8               	clrf	___wmul@multiplier+1
  5095     0485  1BF7               	btfsc	___wmul@multiplier,7
  5096     0486  03F8               	decf	___wmul@multiplier+1,f
  5097     0487  0020               	movlb	0	; select bank0
  5098     0488  0826               	movf	ai_run@z+1,w
  5099     0489  00FA               	movwf	___wmul@multiplicand+1
  5100     048A  0825               	movf	ai_run@z,w
  5101     048B  00F9               	movwf	___wmul@multiplicand
  5102     048C  3180  2066  3184   	fcall	___wmul
  5103     048F  0878               	movf	?___wmul+1,w
  5104     0490  0020               	movlb	0	; select bank0
  5105     0491  00A6               	movwf	ai_run@z+1
  5106     0492  0877               	movf	?___wmul,w
  5107     0493  00A5               	movwf	ai_run@z
  5108     0494                     l2801:
  5109                           
  5110                           ;ai.c: 113:             z /= 255;
  5111     0494  30FF               	movlw	255
  5112     0495  00F0               	movwf	___awdiv@divisor
  5113     0496  3000               	movlw	0
  5114     0497  00F1               	movwf	___awdiv@divisor+1
  5115     0498  0826               	movf	ai_run@z+1,w
  5116     0499  00F3               	movwf	___awdiv@dividend+1
  5117     049A  0825               	movf	ai_run@z,w
  5118     049B  00F2               	movwf	___awdiv@dividend
  5119     049C  3181  21CD  3184   	fcall	___awdiv
  5120     049F  0871               	movf	?___awdiv+1,w
  5121     04A0  0020               	movlb	0	; select bank0
  5122     04A1  00A6               	movwf	ai_run@z+1
  5123     04A2  0870               	movf	?___awdiv,w
  5124     04A3  00A5               	movwf	ai_run@z
  5125                           
  5126                           ;ai.c: 114:             Z1[j] += z;
  5127     04A4  3527               	lslf	ai_run@j,w
  5128     04A5  3E4A               	addlw	(low (_Z1| (0+256)))& (0+255)
  5129     04A6  0086               	movwf	6
  5130     04A7  3001               	movlw	1	; select bank2/3
  5131     04A8  0087               	movwf	7
  5132     04A9  0825               	movf	ai_run@z,w
  5133     04AA  0781               	addwf	1,f
  5134     04AB  3141               	addfsr 1,1
  5135     04AC  0826               	movf	ai_run@z+1,w
  5136     04AD  3D81               	addwfc	1,f
  5137     04AE  317F               	addfsr 1,-1
  5138     04AF                     l2803:
  5139                           
  5140                           ;ai.c: 115:         }
  5141     04AF  3001               	movlw	1
  5142     04B0  00A0               	movwf	??_ai_run
  5143     04B1  0820               	movf	??_ai_run,w
  5144     04B2  07A2               	addwf	ai_run@i,f
  5145     04B3                     l2805:
  5146     04B3  3010               	movlw	16
  5147     04B4  0222               	subwf	ai_run@i,w
  5148     04B5  1C03               	skipc
  5149     04B6  2CB8               	goto	u1661
  5150     04B7  2CB9               	goto	u1660
  5151     04B8                     u1661:
  5152     04B8  2C72               	goto	l2797
  5153     04B9                     u1660:
  5154     04B9                     l2807:
  5155                           
  5156                           ;ai.c: 116:         Y1[j] = sigmoid((int8_t)Z1[j]);
  5157     04B9  0827               	movf	ai_run@j,w
  5158     04BA  3E60               	addlw	(low (_Y1| (0+256)))& (0+255)
  5159     04BB  0086               	movwf	6
  5160     04BC  3001               	movlw	1	; select bank2/3
  5161     04BD  0087               	movwf	7
  5162     04BE  3527               	lslf	ai_run@j,w
  5163     04BF  3E4A               	addlw	(low (_Z1| (0+256)))& (0+255)
  5164     04C0  0084               	movwf	4
  5165     04C1  3001               	movlw	1	; select bank2/3
  5166     04C2  0085               	movwf	5
  5167     04C3  0800               	movf	0,w
  5168     04C4  318F  27BC  3184   	fcall	_sigmoid
  5169     04C7  0081               	movwf	1
  5170     04C8                     l2809:
  5171                           
  5172                           ;ai.c: 117:     }
  5173     04C8  3001               	movlw	1
  5174     04C9  0020               	movlb	0	; select bank0
  5175     04CA  00A0               	movwf	??_ai_run
  5176     04CB  0820               	movf	??_ai_run,w
  5177     04CC  07A7               	addwf	ai_run@j,f
  5178     04CD                     l2811:
  5179     04CD  3007               	movlw	7
  5180     04CE  0227               	subwf	ai_run@j,w
  5181     04CF  1C03               	skipc
  5182     04D0  2CD2               	goto	u1671
  5183     04D1  2CD3               	goto	u1670
  5184     04D2                     u1671:
  5185     04D2  2C5F               	goto	l2789
  5186     04D3                     u1670:
  5187     04D3                     l2813:
  5188                           
  5189                           ;ai.c: 118:     for(uint8_t j = 0; j < 4; j++){
  5190     04D3  01A8               	clrf	ai_run@j_898
  5191     04D4                     l2819:
  5192                           
  5193                           ;ai.c: 119:         Z2[j] = biases2_read(j);
  5194     04D4  0828               	movf	ai_run@j_898,w
  5195     04D5  318F  2725  3184   	fcall	_biases2_read
  5196     04D8  0020               	movlb	0	; select bank0
  5197     04D9  00A0               	movwf	??_ai_run
  5198     04DA  01A1               	clrf	??_ai_run+1
  5199     04DB  1BA0               	btfsc	??_ai_run,7
  5200     04DC  03A1               	decf	??_ai_run+1,f
  5201     04DD  3528               	lslf	ai_run@j_898,w
  5202     04DE  3E4A               	addlw	(low (_Z2| 0))& (0+255)
  5203     04DF  0086               	movwf	6
  5204     04E0  0187               	clrf	7
  5205     04E1  0820               	movf	??_ai_run,w
  5206     04E2  3FC0               	movwi [0]fsr1
  5207     04E3  0821               	movf	??_ai_run+1,w
  5208     04E4  3FC1               	movwi [1]fsr1
  5209     04E5                     l2821:
  5210                           
  5211                           ;ai.c: 120:         for(uint8_t i = 0; i < 7; i++){
  5212     04E5  01A3               	clrf	ai_run@i_900
  5213     04E6                     l2827:
  5214                           
  5215                           ;ai.c: 121:             z = (int16_t)Y1[i];
  5216     04E6  0823               	movf	ai_run@i_900,w
  5217     04E7  3E60               	addlw	(low (_Y1| (0+256)))& (0+255)
  5218     04E8  0086               	movwf	6
  5219     04E9  3001               	movlw	1	; select bank2/3
  5220     04EA  0087               	movwf	7
  5221     04EB  0801               	movf	1,w
  5222     04EC  00A0               	movwf	??_ai_run
  5223     04ED  01A1               	clrf	??_ai_run+1
  5224     04EE  0820               	movf	??_ai_run,w
  5225     04EF  00A5               	movwf	ai_run@z
  5226     04F0  0821               	movf	??_ai_run+1,w
  5227     04F1  00A6               	movwf	ai_run@z+1
  5228     04F2                     l2829:
  5229                           
  5230                           ;ai.c: 122:             z *= weights2_read(i,j);
  5231     04F2  0828               	movf	ai_run@j_898,w
  5232     04F3  00F4               	movwf	weights2_read@add2
  5233     04F4  0823               	movf	ai_run@i_900,w
  5234     04F5  318F  2765  3184   	fcall	_weights2_read
  5235     04F8  00F7               	movwf	___wmul@multiplier
  5236     04F9  01F8               	clrf	___wmul@multiplier+1
  5237     04FA  1BF7               	btfsc	___wmul@multiplier,7
  5238     04FB  03F8               	decf	___wmul@multiplier+1,f
  5239     04FC  0020               	movlb	0	; select bank0
  5240     04FD  0826               	movf	ai_run@z+1,w
  5241     04FE  00FA               	movwf	___wmul@multiplicand+1
  5242     04FF  0825               	movf	ai_run@z,w
  5243     0500  00F9               	movwf	___wmul@multiplicand
  5244     0501  3180  2066  3184   	fcall	___wmul
  5245     0504  0878               	movf	?___wmul+1,w
  5246     0505  0020               	movlb	0	; select bank0
  5247     0506  00A6               	movwf	ai_run@z+1
  5248     0507  0877               	movf	?___wmul,w
  5249     0508  00A5               	movwf	ai_run@z
  5250     0509                     l2831:
  5251                           
  5252                           ;ai.c: 123:             z /= 255;
  5253     0509  30FF               	movlw	255
  5254     050A  00F0               	movwf	___awdiv@divisor
  5255     050B  3000               	movlw	0
  5256     050C  00F1               	movwf	___awdiv@divisor+1
  5257     050D  0826               	movf	ai_run@z+1,w
  5258     050E  00F3               	movwf	___awdiv@dividend+1
  5259     050F  0825               	movf	ai_run@z,w
  5260     0510  00F2               	movwf	___awdiv@dividend
  5261     0511  3181  21CD  3184   	fcall	___awdiv
  5262     0514  0871               	movf	?___awdiv+1,w
  5263     0515  0020               	movlb	0	; select bank0
  5264     0516  00A6               	movwf	ai_run@z+1
  5265     0517  0870               	movf	?___awdiv,w
  5266     0518  00A5               	movwf	ai_run@z
  5267                           
  5268                           ;ai.c: 124:             Z2[j] += z;
  5269     0519  3528               	lslf	ai_run@j_898,w
  5270     051A  3E4A               	addlw	(low (_Z2| 0))& (0+255)
  5271     051B  0086               	movwf	6
  5272     051C  0187               	clrf	7
  5273     051D  0825               	movf	ai_run@z,w
  5274     051E  0781               	addwf	1,f
  5275     051F  3141               	addfsr 1,1
  5276     0520  0826               	movf	ai_run@z+1,w
  5277     0521  3D81               	addwfc	1,f
  5278     0522  317F               	addfsr 1,-1
  5279     0523                     l2833:
  5280                           
  5281                           ;ai.c: 125:         }
  5282     0523  3001               	movlw	1
  5283     0524  00A0               	movwf	??_ai_run
  5284     0525  0820               	movf	??_ai_run,w
  5285     0526  07A3               	addwf	ai_run@i_900,f
  5286     0527                     l2835:
  5287     0527  3007               	movlw	7
  5288     0528  0223               	subwf	ai_run@i_900,w
  5289     0529  1C03               	skipc
  5290     052A  2D2C               	goto	u1681
  5291     052B  2D2D               	goto	u1680
  5292     052C                     u1681:
  5293     052C  2CE6               	goto	l2827
  5294     052D                     u1680:
  5295     052D                     l2837:
  5296                           
  5297                           ;ai.c: 126:         Y2[j] = sigmoid((int8_t)Z2[j]);
  5298     052D  0828               	movf	ai_run@j_898,w
  5299     052E  3E67               	addlw	(low (_Y2| 0))& (0+255)
  5300     052F  0086               	movwf	6
  5301     0530  0187               	clrf	7
  5302     0531  3528               	lslf	ai_run@j_898,w
  5303     0532  3E4A               	addlw	(low (_Z2| 0))& (0+255)
  5304     0533  0084               	movwf	4
  5305     0534  0185               	clrf	5
  5306     0535  0800               	movf	0,w
  5307     0536  318F  27BC  3184   	fcall	_sigmoid
  5308     0539  0081               	movwf	1
  5309     053A                     l2839:
  5310                           
  5311                           ;ai.c: 127:     }
  5312     053A  3001               	movlw	1
  5313     053B  0020               	movlb	0	; select bank0
  5314     053C  00A0               	movwf	??_ai_run
  5315     053D  0820               	movf	??_ai_run,w
  5316     053E  07A8               	addwf	ai_run@j_898,f
  5317     053F                     l2841:
  5318     053F  3004               	movlw	4
  5319     0540  0228               	subwf	ai_run@j_898,w
  5320     0541  1C03               	skipc
  5321     0542  2D44               	goto	u1691
  5322     0543  2D45               	goto	u1690
  5323     0544                     u1691:
  5324     0544  2CD4               	goto	l2819
  5325     0545                     u1690:
  5326     0545                     l2843:
  5327                           
  5328                           ;ai.c: 129:     choice = 0;
  5329     0545  01DE               	clrf	_choice
  5330     0546                     l2845:
  5331                           
  5332                           ;ai.c: 130:     for(uint8_t i = 1; i < 4; i++){
  5333     0546  01A4               	clrf	ai_run@i_902
  5334     0547  0AA4               	incf	ai_run@i_902,f
  5335     0548                     l2851:
  5336                           
  5337                           ;ai.c: 131:         if(Y2[i]>Y2[choice]){
  5338     0548  085E               	movf	_choice,w
  5339     0549  3E67               	addlw	(low (_Y2| 0))& (0+255)
  5340     054A  0086               	movwf	6
  5341     054B  0187               	clrf	7
  5342     054C  0824               	movf	ai_run@i_902,w
  5343     054D  3E67               	addlw	(low (_Y2| 0))& (0+255)
  5344     054E  0084               	movwf	4
  5345     054F  0185               	clrf	5
  5346     0550  0800               	movf	0,w
  5347     0551  0201               	subwf	1,w
  5348     0552  1803               	skipnc
  5349     0553  2D55               	goto	u1701
  5350     0554  2D56               	goto	u1700
  5351     0555                     u1701:
  5352     0555  2D58               	goto	l2855
  5353     0556                     u1700:
  5354     0556                     l2853:
  5355                           
  5356                           ;ai.c: 132:             choice = i;
  5357     0556  0824               	movf	ai_run@i_902,w
  5358     0557  00DE               	movwf	_choice
  5359     0558                     l2855:
  5360                           
  5361                           ;ai.c: 134:     }
  5362     0558  3001               	movlw	1
  5363     0559  00A0               	movwf	??_ai_run
  5364     055A  0820               	movf	??_ai_run,w
  5365     055B  07A4               	addwf	ai_run@i_902,f
  5366     055C                     l2857:
  5367     055C  3004               	movlw	4
  5368     055D  0224               	subwf	ai_run@i_902,w
  5369     055E  1C03               	skipc
  5370     055F  2D61               	goto	u1711
  5371     0560  2D62               	goto	u1710
  5372     0561                     u1711:
  5373     0561  2D48               	goto	l2851
  5374     0562                     u1710:
  5375     0562                     l2859:
  5376                           
  5377                           ;ai.c: 135:     return choice;
  5378     0562  085E               	movf	_choice,w
  5379     0563                     l611:
  5380     0563  0008               	return
  5381     0564                     __end_of_ai_run:
  5382                           
  5383                           	psect	text16
  5384     0F7F                     __ptext16:	
  5385 ;; *************** function _weights1_read *****************
  5386 ;; Defined at:
  5387 ;;		line 32 in file "ai.c"
  5388 ;; Parameters:    Size  Location     Type
  5389 ;;  add1            1    wreg     unsigned char 
  5390 ;;  add2            1    4[COMMON] unsigned char 
  5391 ;; Auto vars:     Size  Location     Type
  5392 ;;  add1            1    6[COMMON] unsigned char 
  5393 ;; Return value:  Size  Location     Type
  5394 ;;                  1    wreg      char 
  5395 ;; Registers used:
  5396 ;;		wreg, status,2, status,0, pclath, cstack
  5397 ;; Tracked objects:
  5398 ;;		On entry : 0/0
  5399 ;;		On exit  : 0/0
  5400 ;;		Unchanged: 0/0
  5401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5402 ;;      Params:         1       0       0       0       0       0
  5403 ;;      Locals:         1       0       0       0       0       0
  5404 ;;      Temps:          1       0       0       0       0       0
  5405 ;;      Totals:         3       0       0       0       0       0
  5406 ;;Total ram usage:        3 bytes
  5407 ;; Hardware stack levels used: 1
  5408 ;; Hardware stack levels required when called: 1
  5409 ;; This function calls:
  5410 ;;		_eeprom_read
  5411 ;; This function is called by:
  5412 ;;		_ai_run
  5413 ;; This function uses a non-reentrant model
  5414 ;;
  5415                           
  5416     0F7F                     _weights1_read:	
  5417                           ;psect for function _weights1_read
  5418                           
  5419                           
  5420                           ;incstack = 0
  5421                           ; Regs used in _weights1_read: [wreg+status,2+status,0+pclath+cstack]
  5422                           ;weights1_read@add1 stored from wreg
  5423     0F7F  00F6               	movwf	weights1_read@add1
  5424     0F80                     l2591:
  5425                           
  5426                           ;ai.c: 33:     return (int8_t)eeprom_read(0 + add1*16 + add2);
  5427     0F80  0876               	movf	weights1_read@add1,w
  5428     0F81  00F5               	movwf	??_weights1_read
  5429     0F82  3003               	movlw	3
  5430     0F83                     u1355:
  5431     0F83  35F5               	lslf	??_weights1_read,f
  5432     0F84  3EFF               	addlw	-1
  5433     0F85  1D03               	skipz
  5434     0F86  2F83               	goto	u1355
  5435     0F87  3575               	lslf	??_weights1_read,w
  5436     0F88  0774               	addwf	weights1_read@add2,w
  5437     0F89  3180  200A  318F   	fcall	_eeprom_read
  5438     0F8C                     l545:
  5439     0F8C  0008               	return
  5440     0F8D                     __end_of_weights1_read:
  5441                           
  5442                           	psect	text17
  5443     0FBC                     __ptext17:	
  5444 ;; *************** function _sigmoid *****************
  5445 ;; Defined at:
  5446 ;;		line 8 in file "sigmoid.c"
  5447 ;; Parameters:    Size  Location     Type
  5448 ;;  z               1    wreg     char 
  5449 ;; Auto vars:     Size  Location     Type
  5450 ;;  z               1    1[COMMON] char 
  5451 ;; Return value:  Size  Location     Type
  5452 ;;                  1    wreg      unsigned char 
  5453 ;; Registers used:
  5454 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  5455 ;; Tracked objects:
  5456 ;;		On entry : 0/0
  5457 ;;		On exit  : 0/0
  5458 ;;		Unchanged: 0/0
  5459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5460 ;;      Params:         0       0       0       0       0       0
  5461 ;;      Locals:         1       0       0       0       0       0
  5462 ;;      Temps:          1       0       0       0       0       0
  5463 ;;      Totals:         2       0       0       0       0       0
  5464 ;;Total ram usage:        2 bytes
  5465 ;; Hardware stack levels used: 1
  5466 ;; This function calls:
  5467 ;;		Nothing
  5468 ;; This function is called by:
  5469 ;;		_ai_run
  5470 ;; This function uses a non-reentrant model
  5471 ;;
  5472                           
  5473     0FBC                     _sigmoid:	
  5474                           ;psect for function _sigmoid
  5475                           
  5476                           
  5477                           ;incstack = 0
  5478                           ; Regs used in _sigmoid: [wreg-fsr0h+status,2+status,0+pclath]
  5479                           ;sigmoid@z stored from wreg
  5480     0FBC  00F1               	movwf	sigmoid@z
  5481     0FBD                     l2607:
  5482                           
  5483                           ;sigmoid.c: 9:     return sigmoidValues[((uint8_t)z)>>4];
  5484     0FBD  0871               	movf	sigmoid@z,w
  5485     0FBE  00F0               	movwf	??_sigmoid
  5486     0FBF  3004               	movlw	4
  5487     0FC0                     u1365:
  5488     0FC0  36F0               	lsrf	??_sigmoid,f
  5489     0FC1  0B89               	decfsz	9,f
  5490     0FC2  2FC0               	goto	u1365
  5491     0FC3  0870               	movf	??_sigmoid,w
  5492     0FC4  3E10               	addlw	low (_sigmoidValues| (0+32768))
  5493     0FC5  0084               	movwf	4
  5494     0FC6  3088               	movlw	high (_sigmoidValues| (0+32768))
  5495     0FC7  1803               	skipnc
  5496     0FC8  3E01               	addlw	1
  5497     0FC9  0085               	movwf	5
  5498     0FCA  0800               	movf	0,w	;code access
  5499     0FCB                     l657:
  5500     0FCB  0008               	return
  5501     0FCC                     __end_of_sigmoid:
  5502                           
  5503                           	psect	text18
  5504     0F2C                     __ptext18:	
  5505 ;; *************** function _biases1_read *****************
  5506 ;; Defined at:
  5507 ;;		line 35 in file "ai.c"
  5508 ;; Parameters:    Size  Location     Type
  5509 ;;  add             1    wreg     unsigned char 
  5510 ;; Auto vars:     Size  Location     Type
  5511 ;;  add             1    4[COMMON] unsigned char 
  5512 ;; Return value:  Size  Location     Type
  5513 ;;                  1    wreg      char 
  5514 ;; Registers used:
  5515 ;;		wreg, status,2, status,0, pclath, cstack
  5516 ;; Tracked objects:
  5517 ;;		On entry : 0/0
  5518 ;;		On exit  : 0/0
  5519 ;;		Unchanged: 0/0
  5520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5521 ;;      Params:         0       0       0       0       0       0
  5522 ;;      Locals:         1       0       0       0       0       0
  5523 ;;      Temps:          0       0       0       0       0       0
  5524 ;;      Totals:         1       0       0       0       0       0
  5525 ;;Total ram usage:        1 bytes
  5526 ;; Hardware stack levels used: 1
  5527 ;; Hardware stack levels required when called: 1
  5528 ;; This function calls:
  5529 ;;		_eeprom_read
  5530 ;; This function is called by:
  5531 ;;		_ai_run
  5532 ;; This function uses a non-reentrant model
  5533 ;;
  5534                           
  5535     0F2C                     _biases1_read:	
  5536                           ;psect for function _biases1_read
  5537                           
  5538                           
  5539                           ;incstack = 0
  5540                           ; Regs used in _biases1_read: [wreg+status,2+status,0+pclath+cstack]
  5541                           ;biases1_read@add stored from wreg
  5542     0F2C  00F4               	movwf	biases1_read@add
  5543     0F2D                     l2595:
  5544                           
  5545                           ;ai.c: 36:     return (int8_t)eeprom_read(0 +16*7 + add);
  5546     0F2D  0874               	movf	biases1_read@add,w
  5547     0F2E  3E70               	addlw	112
  5548     0F2F  3180  200A  318F   	fcall	_eeprom_read
  5549     0F32                     l548:
  5550     0F32  0008               	return
  5551     0F33                     __end_of_biases1_read:
  5552                           
  5553                           	psect	text19
  5554     01CD                     __ptext19:	
  5555 ;; *************** function ___awdiv *****************
  5556 ;; Defined at:
  5557 ;;		line 5 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
  5558 ;; Parameters:    Size  Location     Type
  5559 ;;  divisor         2    0[COMMON] int 
  5560 ;;  dividend        2    2[COMMON] int 
  5561 ;; Auto vars:     Size  Location     Type
  5562 ;;  quotient        2    7[COMMON] int 
  5563 ;;  sign            1    6[COMMON] unsigned char 
  5564 ;;  counter         1    5[COMMON] unsigned char 
  5565 ;; Return value:  Size  Location     Type
  5566 ;;                  2    0[COMMON] int 
  5567 ;; Registers used:
  5568 ;;		wreg, status,2, status,0
  5569 ;; Tracked objects:
  5570 ;;		On entry : 0/0
  5571 ;;		On exit  : 0/0
  5572 ;;		Unchanged: 0/0
  5573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5574 ;;      Params:         4       0       0       0       0       0
  5575 ;;      Locals:         4       0       0       0       0       0
  5576 ;;      Temps:          1       0       0       0       0       0
  5577 ;;      Totals:         9       0       0       0       0       0
  5578 ;;Total ram usage:        9 bytes
  5579 ;; Hardware stack levels used: 1
  5580 ;; This function calls:
  5581 ;;		Nothing
  5582 ;; This function is called by:
  5583 ;;		_ai_run
  5584 ;; This function uses a non-reentrant model
  5585 ;;
  5586                           
  5587     01CD                     ___awdiv:	
  5588                           ;psect for function ___awdiv
  5589                           
  5590     01CD                     l2629:	
  5591                           ;incstack = 0
  5592                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5593                           
  5594     01CD  01F6               	clrf	___awdiv@sign
  5595     01CE                     l2631:
  5596     01CE  1FF1               	btfss	___awdiv@divisor+1,7
  5597     01CF  29D1               	goto	u1421
  5598     01D0  29D2               	goto	u1420
  5599     01D1                     u1421:
  5600     01D1  29D9               	goto	l2637
  5601     01D2                     u1420:
  5602     01D2                     l2633:
  5603     01D2  09F0               	comf	___awdiv@divisor,f
  5604     01D3  09F1               	comf	___awdiv@divisor+1,f
  5605     01D4  0AF0               	incf	___awdiv@divisor,f
  5606     01D5  1903               	skipnz
  5607     01D6  0AF1               	incf	___awdiv@divisor+1,f
  5608     01D7                     l2635:
  5609     01D7  01F6               	clrf	___awdiv@sign
  5610     01D8  0AF6               	incf	___awdiv@sign,f
  5611     01D9                     l2637:
  5612     01D9  1FF3               	btfss	___awdiv@dividend+1,7
  5613     01DA  29DC               	goto	u1431
  5614     01DB  29DD               	goto	u1430
  5615     01DC                     u1431:
  5616     01DC  29E6               	goto	l2643
  5617     01DD                     u1430:
  5618     01DD                     l2639:
  5619     01DD  09F2               	comf	___awdiv@dividend,f
  5620     01DE  09F3               	comf	___awdiv@dividend+1,f
  5621     01DF  0AF2               	incf	___awdiv@dividend,f
  5622     01E0  1903               	skipnz
  5623     01E1  0AF3               	incf	___awdiv@dividend+1,f
  5624     01E2                     l2641:
  5625     01E2  3001               	movlw	1
  5626     01E3  00F4               	movwf	??___awdiv
  5627     01E4  0874               	movf	??___awdiv,w
  5628     01E5  06F6               	xorwf	___awdiv@sign,f
  5629     01E6                     l2643:
  5630     01E6  01F7               	clrf	___awdiv@quotient
  5631     01E7  01F8               	clrf	___awdiv@quotient+1
  5632     01E8                     l2645:
  5633     01E8  0870               	movf	___awdiv@divisor,w
  5634     01E9  0471               	iorwf	___awdiv@divisor+1,w
  5635     01EA  1903               	btfsc	3,2
  5636     01EB  29ED               	goto	u1441
  5637     01EC  29EE               	goto	u1440
  5638     01ED                     u1441:
  5639     01ED  2A1D               	goto	l2665
  5640     01EE                     u1440:
  5641     01EE                     l2647:
  5642     01EE  01F5               	clrf	___awdiv@counter
  5643     01EF  0AF5               	incf	___awdiv@counter,f
  5644     01F0  29FA               	goto	l2653
  5645     01F1                     l2649:
  5646     01F1  3001               	movlw	1
  5647     01F2                     u1455:
  5648     01F2  35F0               	lslf	___awdiv@divisor,f
  5649     01F3  0DF1               	rlf	___awdiv@divisor+1,f
  5650     01F4  0B89               	decfsz	9,f
  5651     01F5  29F2               	goto	u1455
  5652     01F6                     l2651:
  5653     01F6  3001               	movlw	1
  5654     01F7  00F4               	movwf	??___awdiv
  5655     01F8  0874               	movf	??___awdiv,w
  5656     01F9  07F5               	addwf	___awdiv@counter,f
  5657     01FA                     l2653:
  5658     01FA  1FF1               	btfss	___awdiv@divisor+1,7
  5659     01FB  29FD               	goto	u1461
  5660     01FC  29FE               	goto	u1460
  5661     01FD                     u1461:
  5662     01FD  29F1               	goto	l2649
  5663     01FE                     u1460:
  5664     01FE                     l2655:
  5665     01FE  3001               	movlw	1
  5666     01FF                     u1475:
  5667     01FF  35F7               	lslf	___awdiv@quotient,f
  5668     0200  0DF8               	rlf	___awdiv@quotient+1,f
  5669     0201  0B89               	decfsz	9,f
  5670     0202  29FF               	goto	u1475
  5671     0203  0871               	movf	___awdiv@divisor+1,w
  5672     0204  0273               	subwf	___awdiv@dividend+1,w
  5673     0205  1D03               	skipz
  5674     0206  2A09               	goto	u1485
  5675     0207  0870               	movf	___awdiv@divisor,w
  5676     0208  0272               	subwf	___awdiv@dividend,w
  5677     0209                     u1485:
  5678     0209  1C03               	skipc
  5679     020A  2A0C               	goto	u1481
  5680     020B  2A0D               	goto	u1480
  5681     020C                     u1481:
  5682     020C  2A12               	goto	l2661
  5683     020D                     u1480:
  5684     020D                     l2657:
  5685     020D  0870               	movf	___awdiv@divisor,w
  5686     020E  02F2               	subwf	___awdiv@dividend,f
  5687     020F  0871               	movf	___awdiv@divisor+1,w
  5688     0210  3BF3               	subwfb	___awdiv@dividend+1,f
  5689     0211                     l2659:
  5690     0211  1477               	bsf	___awdiv@quotient,0
  5691     0212                     l2661:
  5692     0212  3001               	movlw	1
  5693     0213                     u1495:
  5694     0213  36F1               	lsrf	___awdiv@divisor+1,f
  5695     0214  0CF0               	rrf	___awdiv@divisor,f
  5696     0215  0B89               	decfsz	9,f
  5697     0216  2A13               	goto	u1495
  5698     0217                     l2663:
  5699     0217  3001               	movlw	1
  5700     0218  02F5               	subwf	___awdiv@counter,f
  5701     0219  1D03               	btfss	3,2
  5702     021A  2A1C               	goto	u1501
  5703     021B  2A1D               	goto	u1500
  5704     021C                     u1501:
  5705     021C  29FE               	goto	l2655
  5706     021D                     u1500:
  5707     021D                     l2665:
  5708     021D  0876               	movf	___awdiv@sign,w
  5709     021E  1903               	btfsc	3,2
  5710     021F  2A21               	goto	u1511
  5711     0220  2A22               	goto	u1510
  5712     0221                     u1511:
  5713     0221  2A27               	goto	l2669
  5714     0222                     u1510:
  5715     0222                     l2667:
  5716     0222  09F7               	comf	___awdiv@quotient,f
  5717     0223  09F8               	comf	___awdiv@quotient+1,f
  5718     0224  0AF7               	incf	___awdiv@quotient,f
  5719     0225  1903               	skipnz
  5720     0226  0AF8               	incf	___awdiv@quotient+1,f
  5721     0227                     l2669:
  5722     0227  0878               	movf	___awdiv@quotient+1,w
  5723     0228  00F1               	movwf	?___awdiv+1
  5724     0229  0877               	movf	___awdiv@quotient,w
  5725     022A  00F0               	movwf	?___awdiv
  5726     022B                     l1000:
  5727     022B  0008               	return
  5728     022C                     __end_of___awdiv:
  5729                           
  5730                           	psect	text20
  5731     0564                     __ptext20:	
  5732 ;; *************** function _ai_propagate *****************
  5733 ;; Defined at:
  5734 ;;		line 138 in file "ai.c"
  5735 ;; Parameters:    Size  Location     Type
  5736 ;;  incentive       1    wreg     char 
  5737 ;; Auto vars:     Size  Location     Type
  5738 ;;  incentive       1   16[BANK0 ] char 
  5739 ;;  i               1   21[BANK0 ] unsigned char 
  5740 ;;  i               1   27[BANK0 ] unsigned char 
  5741 ;;  i               1   26[BANK0 ] unsigned char 
  5742 ;;  j               1   28[BANK0 ] unsigned char 
  5743 ;;  i               1   25[BANK0 ] unsigned char 
  5744 ;;  i               1   18[BANK0 ] unsigned char 
  5745 ;;  i               1   17[BANK0 ] unsigned char 
  5746 ;;  dz              1   24[BANK0 ] unsigned char 
  5747 ;;  i               1   20[BANK0 ] unsigned char 
  5748 ;;  i               1   19[BANK0 ] unsigned char 
  5749 ;;  j               1   30[BANK0 ] unsigned char 
  5750 ;;  j               1   29[BANK0 ] unsigned char 
  5751 ;;  k               1   31[BANK0 ] unsigned char 
  5752 ;;  j               1   23[BANK0 ] unsigned char 
  5753 ;;  j               1   22[BANK0 ] unsigned char 
  5754 ;;  S               4   12[BANK0 ] unsigned char [4]
  5755 ;; Return value:  Size  Location     Type
  5756 ;;                  1    wreg      void 
  5757 ;; Registers used:
  5758 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5759 ;; Tracked objects:
  5760 ;;		On entry : 0/0
  5761 ;;		On exit  : 0/0
  5762 ;;		Unchanged: 0/0
  5763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5764 ;;      Params:         0       0       0       0       0       0
  5765 ;;      Locals:         0      20       0       0       0       0
  5766 ;;      Temps:          0       9       0       0       0       0
  5767 ;;      Totals:         0      29       0       0       0       0
  5768 ;;Total ram usage:       29 bytes
  5769 ;; Hardware stack levels used: 1
  5770 ;; Hardware stack levels required when called: 2
  5771 ;; This function calls:
  5772 ;;		___bmul
  5773 ;;		___wmul
  5774 ;;		_biases1_write
  5775 ;;		_biases2_read
  5776 ;;		_biases2_write
  5777 ;;		_de_sigmoid
  5778 ;;		_weights1_write
  5779 ;;		_weights2_read
  5780 ;;		_weights2_write
  5781 ;; This function is called by:
  5782 ;;		_main
  5783 ;; This function uses a non-reentrant model
  5784 ;;
  5785                           
  5786     0564                     _ai_propagate:	
  5787                           ;psect for function _ai_propagate
  5788                           
  5789                           
  5790                           ;incstack = 0
  5791                           ; Regs used in _ai_propagate: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5792                           ;ai_propagate@incentive stored from wreg
  5793     0564  0020               	movlb	0	; select bank0
  5794     0565  00B0               	movwf	ai_propagate@incentive
  5795     0566                     l2939:
  5796                           
  5797                           ;ai.c: 139:     if(incentive == 0){
  5798     0566  0830               	movf	ai_propagate@incentive,w
  5799     0567  1D03               	btfss	3,2
  5800     0568  2D6A               	goto	u1841
  5801     0569  2D6B               	goto	u1840
  5802     056A                     u1841:
  5803     056A  2D6C               	goto	l2943
  5804     056B                     u1840:
  5805     056B  2FB3               	goto	l615
  5806     056C                     l2943:
  5807                           
  5808                           ;ai.c: 143:     if(incentive == -1){
  5809     056C  0A30               	incf	ai_propagate@incentive,w
  5810     056D  1D03               	btfss	3,2
  5811     056E  2D70               	goto	u1851
  5812     056F  2D71               	goto	u1850
  5813     0570                     u1851:
  5814     0570  2D72               	goto	l616
  5815     0571                     u1850:
  5816     0571                     l2945:
  5817                           
  5818                           ;ai.c: 144:         incentive = 0;
  5819     0571  01B0               	clrf	ai_propagate@incentive
  5820     0572                     l616:	
  5821                           ;ai.c: 145:     }
  5822                           
  5823                           
  5824                           ;ai.c: 147:     uint8_t S[4];;ai.c: 148:     for(uint8_t j = 0; j < 7; j++){
  5825     0572  01B6               	clrf	ai_propagate@j
  5826     0573                     l2951:
  5827                           
  5828                           ;ai.c: 149:         DB1[j] = 0;
  5829     0573  0836               	movf	ai_propagate@j,w
  5830     0574  3EA0               	addlw	(low (_DB1| (0+256)))& (0+255)
  5831     0575  0086               	movwf	6
  5832     0576  3001               	movlw	1	; select bank3/4
  5833     0577  0087               	movwf	7
  5834     0578  0181               	clrf	1
  5835     0579                     l2953:
  5836                           
  5837                           ;ai.c: 150:         for(uint8_t i = 0; i < 16; i++){
  5838     0579  01B1               	clrf	ai_propagate@i
  5839     057A                     l2959:
  5840                           
  5841                           ;ai.c: 151:             DW1[i][j] = 0;
  5842     057A  0836               	movf	ai_propagate@j,w
  5843     057B  00A3               	movwf	??_ai_propagate
  5844     057C  01A4               	clrf	??_ai_propagate+1
  5845     057D  0831               	movf	ai_propagate@i,w
  5846     057E  00A5               	movwf	??_ai_propagate+2
  5847     057F  01A6               	clrf	??_ai_propagate+3
  5848     0580  0825               	movf	??_ai_propagate+2,w
  5849     0581  00F7               	movwf	___wmul@multiplier
  5850     0582  0826               	movf	??_ai_propagate+3,w
  5851     0583  00F8               	movwf	___wmul@multiplier+1
  5852     0584  3007               	movlw	7
  5853     0585  00F9               	movwf	___wmul@multiplicand
  5854     0586  3000               	movlw	0
  5855     0587  00FA               	movwf	___wmul@multiplicand+1
  5856     0588  3180  2066  3185   	fcall	___wmul
  5857     058B  3000               	movlw	0
  5858     058C  0020               	movlb	0	; select bank0
  5859     058D  00A7               	movwf	??_ai_propagate+4
  5860     058E  3021               	movlw	33
  5861     058F  00A8               	movwf	??_ai_propagate+5
  5862     0590  0877               	movf	?___wmul,w
  5863     0591  0727               	addwf	??_ai_propagate+4,w
  5864     0592  00A9               	movwf	??_ai_propagate+6
  5865     0593  0878               	movf	?___wmul+1,w
  5866     0594  3D28               	addwfc	??_ai_propagate+5,w
  5867     0595  00AA               	movwf	??_ai_propagate+7
  5868     0596  0823               	movf	??_ai_propagate,w
  5869     0597  0729               	addwf	??_ai_propagate+6,w
  5870     0598  0086               	movwf	6
  5871     0599  0824               	movf	??_ai_propagate+1,w
  5872     059A  3D2A               	addwfc	??_ai_propagate+7,w
  5873     059B  0087               	movwf	7
  5874     059C  0181               	clrf	1
  5875     059D                     l2961:
  5876                           
  5877                           ;ai.c: 152:         }
  5878     059D  3001               	movlw	1
  5879     059E  00A3               	movwf	??_ai_propagate
  5880     059F  0823               	movf	??_ai_propagate,w
  5881     05A0  07B1               	addwf	ai_propagate@i,f
  5882     05A1                     l2963:
  5883     05A1  3010               	movlw	16
  5884     05A2  0231               	subwf	ai_propagate@i,w
  5885     05A3  1C03               	skipc
  5886     05A4  2DA6               	goto	u1861
  5887     05A5  2DA7               	goto	u1860
  5888     05A6                     u1861:
  5889     05A6  2D7A               	goto	l2959
  5890     05A7                     u1860:
  5891     05A7                     l2965:
  5892                           
  5893                           ;ai.c: 153:     }
  5894     05A7  3001               	movlw	1
  5895     05A8  00A3               	movwf	??_ai_propagate
  5896     05A9  0823               	movf	??_ai_propagate,w
  5897     05AA  07B6               	addwf	ai_propagate@j,f
  5898     05AB                     l2967:
  5899     05AB  3007               	movlw	7
  5900     05AC  0236               	subwf	ai_propagate@j,w
  5901     05AD  1C03               	skipc
  5902     05AE  2DB0               	goto	u1871
  5903     05AF  2DB1               	goto	u1870
  5904     05B0                     u1871:
  5905     05B0  2D73               	goto	l2951
  5906     05B1                     u1870:
  5907     05B1                     l2969:
  5908                           
  5909                           ;ai.c: 154:     for(uint8_t j = 0; j < 4; j++){
  5910     05B1  01B7               	clrf	ai_propagate@j_908
  5911     05B2                     l2975:
  5912                           
  5913                           ;ai.c: 155:         DB2[j] = 0;
  5914     05B2  0837               	movf	ai_propagate@j_908,w
  5915     05B3  3E5A               	addlw	(low (_DB2| 0))& (0+255)
  5916     05B4  0086               	movwf	6
  5917     05B5  0187               	clrf	7
  5918     05B6  0181               	clrf	1
  5919     05B7                     l2977:
  5920                           
  5921                           ;ai.c: 156:         for(uint8_t i = 0; i < 7; i++){
  5922     05B7  01B2               	clrf	ai_propagate@i_909
  5923     05B8                     l2983:
  5924                           
  5925                           ;ai.c: 157:             DW2[i][j] = 0;
  5926     05B8  0832               	movf	ai_propagate@i_909,w
  5927     05B9  00A3               	movwf	??_ai_propagate
  5928     05BA  3002               	movlw	2
  5929     05BB                     u1885:
  5930     05BB  35A3               	lslf	??_ai_propagate,f
  5931     05BC  0B89               	decfsz	9,f
  5932     05BD  2DBB               	goto	u1885
  5933     05BE  3020               	movlw	(low (_DW2| (0+256)))& (0+255)
  5934     05BF  0723               	addwf	??_ai_propagate,w
  5935     05C0  00A4               	movwf	??_ai_propagate+1
  5936     05C1  0837               	movf	ai_propagate@j_908,w
  5937     05C2  0724               	addwf	??_ai_propagate+1,w
  5938     05C3  00A5               	movwf	??_ai_propagate+2
  5939     05C4  0825               	movf	??_ai_propagate+2,w
  5940     05C5  0086               	movwf	6
  5941     05C6  3001               	movlw	1	; select bank2/3
  5942     05C7  0087               	movwf	7
  5943     05C8  0181               	clrf	1
  5944     05C9                     l2985:
  5945                           
  5946                           ;ai.c: 158:         }
  5947     05C9  3001               	movlw	1
  5948     05CA  00A3               	movwf	??_ai_propagate
  5949     05CB  0823               	movf	??_ai_propagate,w
  5950     05CC  07B2               	addwf	ai_propagate@i_909,f
  5951     05CD                     l2987:
  5952     05CD  3007               	movlw	7
  5953     05CE  0232               	subwf	ai_propagate@i_909,w
  5954     05CF  1C03               	skipc
  5955     05D0  2DD2               	goto	u1891
  5956     05D1  2DD3               	goto	u1890
  5957     05D2                     u1891:
  5958     05D2  2DB8               	goto	l2983
  5959     05D3                     u1890:
  5960     05D3                     l2989:
  5961                           
  5962                           ;ai.c: 159:     }
  5963     05D3  3001               	movlw	1
  5964     05D4  00A3               	movwf	??_ai_propagate
  5965     05D5  0823               	movf	??_ai_propagate,w
  5966     05D6  07B7               	addwf	ai_propagate@j_908,f
  5967     05D7                     l2991:
  5968     05D7  3004               	movlw	4
  5969     05D8  0237               	subwf	ai_propagate@j_908,w
  5970     05D9  1C03               	skipc
  5971     05DA  2DDC               	goto	u1901
  5972     05DB  2DDD               	goto	u1900
  5973     05DC                     u1901:
  5974     05DC  2DB2               	goto	l2975
  5975     05DD                     u1900:
  5976     05DD                     l2993:
  5977                           
  5978                           ;ai.c: 160:     if(incentive == 0){
  5979     05DD  0830               	movf	ai_propagate@incentive,w
  5980     05DE  1D03               	btfss	3,2
  5981     05DF  2DE1               	goto	u1911
  5982     05E0  2DE2               	goto	u1910
  5983     05E1                     u1911:
  5984     05E1  2DF9               	goto	l3009
  5985     05E2                     u1910:
  5986     05E2                     l2995:
  5987                           
  5988                           ;ai.c: 161:         for(uint8_t i = 0; i < 4; i++){
  5989     05E2  01B3               	clrf	ai_propagate@i_910
  5990     05E3                     l3001:
  5991                           
  5992                           ;ai.c: 162:             S[i] = 1;
  5993     05E3  0833               	movf	ai_propagate@i_910,w
  5994     05E4  3E2C               	addlw	(low (ai_propagate@S| 0))& (0+255)
  5995     05E5  0086               	movwf	6
  5996     05E6  0187               	clrf	7
  5997     05E7  0181               	clrf	1
  5998     05E8  0A81               	incf	1,f
  5999     05E9                     l3003:
  6000                           
  6001                           ;ai.c: 163:         }
  6002     05E9  3001               	movlw	1
  6003     05EA  00A3               	movwf	??_ai_propagate
  6004     05EB  0823               	movf	??_ai_propagate,w
  6005     05EC  07B3               	addwf	ai_propagate@i_910,f
  6006     05ED                     l3005:
  6007     05ED  3004               	movlw	4
  6008     05EE  0233               	subwf	ai_propagate@i_910,w
  6009     05EF  1C03               	skipc
  6010     05F0  2DF2               	goto	u1921
  6011     05F1  2DF3               	goto	u1920
  6012     05F2                     u1921:
  6013     05F2  2DE3               	goto	l3001
  6014     05F3                     u1920:
  6015     05F3                     l3007:
  6016                           
  6017                           ;ai.c: 164:         S[choice] = 0;
  6018     05F3  085E               	movf	_choice,w
  6019     05F4  3E2C               	addlw	(low (ai_propagate@S| 0))& (0+255)
  6020     05F5  0086               	movwf	6
  6021     05F6  0187               	clrf	7
  6022     05F7  0181               	clrf	1
  6023                           
  6024                           ;ai.c: 165:     } else{
  6025     05F8  2E0F               	goto	l3023
  6026     05F9                     l3009:
  6027                           
  6028                           ;ai.c: 166:         for(uint8_t i = 0; i < 4; i++){
  6029     05F9  01B4               	clrf	ai_propagate@i_911
  6030     05FA                     l3015:
  6031                           
  6032                           ;ai.c: 167:             S[i] = 0;
  6033     05FA  0834               	movf	ai_propagate@i_911,w
  6034     05FB  3E2C               	addlw	(low (ai_propagate@S| 0))& (0+255)
  6035     05FC  0086               	movwf	6
  6036     05FD  0187               	clrf	7
  6037     05FE  0181               	clrf	1
  6038     05FF                     l3017:
  6039                           
  6040                           ;ai.c: 168:         }
  6041     05FF  3001               	movlw	1
  6042     0600  00A3               	movwf	??_ai_propagate
  6043     0601  0823               	movf	??_ai_propagate,w
  6044     0602  07B4               	addwf	ai_propagate@i_911,f
  6045     0603                     l3019:
  6046     0603  3004               	movlw	4
  6047     0604  0234               	subwf	ai_propagate@i_911,w
  6048     0605  1C03               	skipc
  6049     0606  2E08               	goto	u1931
  6050     0607  2E09               	goto	u1930
  6051     0608                     u1931:
  6052     0608  2DFA               	goto	l3015
  6053     0609                     u1930:
  6054     0609                     l3021:
  6055                           
  6056                           ;ai.c: 169:         S[choice] = 1;
  6057     0609  085E               	movf	_choice,w
  6058     060A  3E2C               	addlw	(low (ai_propagate@S| 0))& (0+255)
  6059     060B  0086               	movwf	6
  6060     060C  0187               	clrf	7
  6061     060D  0181               	clrf	1
  6062     060E  0A81               	incf	1,f
  6063     060F                     l3023:
  6064                           
  6065                           ;ai.c: 172:     for(uint8_t k = 0; k < 4; k++){
  6066     060F  01BF               	clrf	ai_propagate@k
  6067     0610                     l3029:
  6068                           
  6069                           ;ai.c: 173:         DY2[k] = 2*(Y2[k] - S[k]);
  6070     0610  083F               	movf	ai_propagate@k,w
  6071     0611  3E2C               	addlw	(low (ai_propagate@S| 0))& (0+255)
  6072     0612  0086               	movwf	6
  6073     0613  0187               	clrf	7
  6074     0614  083F               	movf	ai_propagate@k,w
  6075     0615  3E67               	addlw	(low (_Y2| 0))& (0+255)
  6076     0616  0084               	movwf	4
  6077     0617  0185               	clrf	5
  6078     0618  0800               	movf	0,w
  6079     0619  00A3               	movwf	??_ai_propagate
  6080     061A  01A4               	clrf	??_ai_propagate+1
  6081     061B  0824               	movf	??_ai_propagate+1,w
  6082     061C  00A6               	movwf	??_ai_propagate+3
  6083     061D  0801               	movf	1,w
  6084     061E  0223               	subwf	??_ai_propagate,w
  6085     061F  00A5               	movwf	??_ai_propagate+2
  6086     0620  1C03               	skipc
  6087     0621  03A6               	decf	??_ai_propagate+3,f
  6088     0622  35A5               	lslf	??_ai_propagate+2,f
  6089     0623  0DA6               	rlf	??_ai_propagate+3,f
  6090     0624  353F               	lslf	ai_propagate@k,w
  6091     0625  3E58               	addlw	(low (_DY2| (0+256)))& (0+255)
  6092     0626  0086               	movwf	6
  6093     0627  3001               	movlw	1	; select bank2/3
  6094     0628  0087               	movwf	7
  6095     0629  0825               	movf	??_ai_propagate+2,w
  6096     062A  3FC0               	movwi [0]fsr1
  6097     062B  0826               	movf	??_ai_propagate+3,w
  6098     062C  3FC1               	movwi [1]fsr1
  6099     062D                     l3031:
  6100                           
  6101                           ;ai.c: 174:         uint8_t dz = de_sigmoid((int8_t)Z2[k]);
  6102     062D  353F               	lslf	ai_propagate@k,w
  6103     062E  3E4A               	addlw	(low (_Z2| 0))& (0+255)
  6104     062F  0086               	movwf	6
  6105     0630  0187               	clrf	7
  6106     0631  0801               	movf	1,w
  6107     0632  318F  27AC  3185   	fcall	_de_sigmoid
  6108     0635  0020               	movlb	0	; select bank0
  6109     0636  00B8               	movwf	ai_propagate@dz
  6110     0637                     l3033:
  6111                           
  6112                           ;ai.c: 175:         DB2[k] += DY2[k]*dz;
  6113     0637  0838               	movf	ai_propagate@dz,w
  6114     0638  00F0               	movwf	___bmul@multiplicand
  6115     0639  353F               	lslf	ai_propagate@k,w
  6116     063A  3E58               	addlw	(low (_DY2| (0+256)))& (0+255)
  6117     063B  0086               	movwf	6
  6118     063C  3001               	movlw	1	; select bank2/3
  6119     063D  0087               	movwf	7
  6120     063E  0801               	movf	1,w
  6121     063F  3180  201F  3185   	fcall	___bmul
  6122     0642  0020               	movlb	0	; select bank0
  6123     0643  00A3               	movwf	??_ai_propagate
  6124     0644  083F               	movf	ai_propagate@k,w
  6125     0645  3E5A               	addlw	(low (_DB2| 0))& (0+255)
  6126     0646  0086               	movwf	6
  6127     0647  0187               	clrf	7
  6128     0648  0823               	movf	??_ai_propagate,w
  6129     0649  0781               	addwf	1,f
  6130     064A                     l3035:
  6131                           
  6132                           ;ai.c: 176:         for(uint8_t i = 0; i < 7; i++){
  6133     064A  01B9               	clrf	ai_propagate@i_914
  6134     064B                     l3041:
  6135                           
  6136                           ;ai.c: 177:             DY1[i] = dz*weights2_read(i, k);
  6137     064B  0838               	movf	ai_propagate@dz,w
  6138     064C  00A3               	movwf	??_ai_propagate
  6139     064D  01A4               	clrf	??_ai_propagate+1
  6140     064E  0823               	movf	??_ai_propagate,w
  6141     064F  00F7               	movwf	___wmul@multiplier
  6142     0650  0824               	movf	??_ai_propagate+1,w
  6143     0651  00F8               	movwf	___wmul@multiplier+1
  6144     0652  083F               	movf	ai_propagate@k,w
  6145     0653  00F4               	movwf	weights2_read@add2
  6146     0654  0839               	movf	ai_propagate@i_914,w
  6147     0655  318F  2765  3185   	fcall	_weights2_read
  6148     0658  00F9               	movwf	___wmul@multiplicand
  6149     0659  01FA               	clrf	___wmul@multiplicand+1
  6150     065A  1BF9               	btfsc	___wmul@multiplicand,7
  6151     065B  03FA               	decf	___wmul@multiplicand+1,f
  6152     065C  3180  2066  3185   	fcall	___wmul
  6153     065F  0020               	movlb	0	; select bank0
  6154     0660  3539               	lslf	ai_propagate@i_914,w
  6155     0661  3E3C               	addlw	(low (_DY1| (0+256)))& (0+255)
  6156     0662  0086               	movwf	6
  6157     0663  3001               	movlw	1	; select bank2/3
  6158     0664  0087               	movwf	7
  6159     0665  0877               	movf	?___wmul,w
  6160     0666  3FC0               	movwi [0]fsr1
  6161     0667  0878               	movf	?___wmul+1,w
  6162     0668  3FC1               	movwi [1]fsr1
  6163                           
  6164                           ;ai.c: 178:             DW2[i][k] += dz*DY2[k];
  6165     0669  0838               	movf	ai_propagate@dz,w
  6166     066A  00F0               	movwf	___bmul@multiplicand
  6167     066B  353F               	lslf	ai_propagate@k,w
  6168     066C  3E58               	addlw	(low (_DY2| (0+256)))& (0+255)
  6169     066D  0086               	movwf	6
  6170     066E  3001               	movlw	1	; select bank2/3
  6171     066F  0087               	movwf	7
  6172     0670  0801               	movf	1,w
  6173     0671  3180  201F  3185   	fcall	___bmul
  6174     0674  0020               	movlb	0	; select bank0
  6175     0675  00A3               	movwf	??_ai_propagate
  6176     0676  0839               	movf	ai_propagate@i_914,w
  6177     0677  00A4               	movwf	??_ai_propagate+1
  6178     0678  3002               	movlw	2
  6179     0679                     u1945:
  6180     0679  35A4               	lslf	??_ai_propagate+1,f
  6181     067A  0B89               	decfsz	9,f
  6182     067B  2E79               	goto	u1945
  6183     067C  3020               	movlw	(low (_DW2| (0+256)))& (0+255)
  6184     067D  0724               	addwf	??_ai_propagate+1,w
  6185     067E  00A5               	movwf	??_ai_propagate+2
  6186     067F  083F               	movf	ai_propagate@k,w
  6187     0680  0725               	addwf	??_ai_propagate+2,w
  6188     0681  00A6               	movwf	??_ai_propagate+3
  6189     0682  0826               	movf	??_ai_propagate+3,w
  6190     0683  0086               	movwf	6
  6191     0684  3001               	movlw	1	; select bank2/3
  6192     0685  0087               	movwf	7
  6193     0686  0823               	movf	??_ai_propagate,w
  6194     0687  0781               	addwf	1,f
  6195     0688                     l3043:
  6196                           
  6197                           ;ai.c: 179:         }
  6198     0688  3001               	movlw	1
  6199     0689  00A3               	movwf	??_ai_propagate
  6200     068A  0823               	movf	??_ai_propagate,w
  6201     068B  07B9               	addwf	ai_propagate@i_914,f
  6202     068C                     l3045:
  6203     068C  3007               	movlw	7
  6204     068D  0239               	subwf	ai_propagate@i_914,w
  6205     068E  1C03               	skipc
  6206     068F  2E91               	goto	u1951
  6207     0690  2E92               	goto	u1950
  6208     0691                     u1951:
  6209     0691  2E4B               	goto	l3041
  6210     0692                     u1950:
  6211     0692                     l3047:
  6212                           
  6213                           ;ai.c: 181:         for(uint8_t j = 0; j < 7; j++){
  6214     0692  01BC               	clrf	ai_propagate@j_915
  6215     0693                     l3053:
  6216                           
  6217                           ;ai.c: 182:             dz = de_sigmoid((int8_t)Z1[j]);
  6218     0693  353C               	lslf	ai_propagate@j_915,w
  6219     0694  3E4A               	addlw	(low (_Z1| (0+256)))& (0+255)
  6220     0695  0086               	movwf	6
  6221     0696  3001               	movlw	1	; select bank2/3
  6222     0697  0087               	movwf	7
  6223     0698  0801               	movf	1,w
  6224     0699  318F  27AC  3185   	fcall	_de_sigmoid
  6225     069C  0020               	movlb	0	; select bank0
  6226     069D  00B8               	movwf	ai_propagate@dz
  6227     069E                     l3055:
  6228                           
  6229                           ;ai.c: 183:             DB1[j] += DY1[j]*dz;
  6230     069E  0838               	movf	ai_propagate@dz,w
  6231     069F  00F0               	movwf	___bmul@multiplicand
  6232     06A0  353C               	lslf	ai_propagate@j_915,w
  6233     06A1  3E3C               	addlw	(low (_DY1| (0+256)))& (0+255)
  6234     06A2  0086               	movwf	6
  6235     06A3  3001               	movlw	1	; select bank2/3
  6236     06A4  0087               	movwf	7
  6237     06A5  0801               	movf	1,w
  6238     06A6  3180  201F  3185   	fcall	___bmul
  6239     06A9  0020               	movlb	0	; select bank0
  6240     06AA  00A3               	movwf	??_ai_propagate
  6241     06AB  083C               	movf	ai_propagate@j_915,w
  6242     06AC  3EA0               	addlw	(low (_DB1| (0+256)))& (0+255)
  6243     06AD  0086               	movwf	6
  6244     06AE  3001               	movlw	1	; select bank3/4
  6245     06AF  0087               	movwf	7
  6246     06B0  0823               	movf	??_ai_propagate,w
  6247     06B1  0781               	addwf	1,f
  6248     06B2                     l3057:
  6249                           
  6250                           ;ai.c: 184:             for(uint8_t i = 0; i < 16; i++){
  6251     06B2  01B5               	clrf	ai_propagate@i_916
  6252     06B3                     l3059:
  6253     06B3  3010               	movlw	16
  6254     06B4  0235               	subwf	ai_propagate@i_916,w
  6255     06B5  1C03               	skipc
  6256     06B6  2EB8               	goto	u1961
  6257     06B7  2EB9               	goto	u1960
  6258     06B8                     u1961:
  6259     06B8  2EBA               	goto	l3063
  6260     06B9                     u1960:
  6261     06B9  2EF0               	goto	l3069
  6262     06BA                     l3063:
  6263                           
  6264                           ;ai.c: 185:                 DW1[i][j] += dz*DY1[j];
  6265     06BA  0838               	movf	ai_propagate@dz,w
  6266     06BB  00F0               	movwf	___bmul@multiplicand
  6267     06BC  353C               	lslf	ai_propagate@j_915,w
  6268     06BD  3E3C               	addlw	(low (_DY1| (0+256)))& (0+255)
  6269     06BE  0086               	movwf	6
  6270     06BF  3001               	movlw	1	; select bank2/3
  6271     06C0  0087               	movwf	7
  6272     06C1  0801               	movf	1,w
  6273     06C2  3180  201F  3185   	fcall	___bmul
  6274     06C5  0020               	movlb	0	; select bank0
  6275     06C6  00A3               	movwf	??_ai_propagate
  6276     06C7  083C               	movf	ai_propagate@j_915,w
  6277     06C8  00A4               	movwf	??_ai_propagate+1
  6278     06C9  01A5               	clrf	??_ai_propagate+2
  6279     06CA  0835               	movf	ai_propagate@i_916,w
  6280     06CB  00A6               	movwf	??_ai_propagate+3
  6281     06CC  01A7               	clrf	??_ai_propagate+4
  6282     06CD  0826               	movf	??_ai_propagate+3,w
  6283     06CE  00F7               	movwf	___wmul@multiplier
  6284     06CF  0827               	movf	??_ai_propagate+4,w
  6285     06D0  00F8               	movwf	___wmul@multiplier+1
  6286     06D1  3007               	movlw	7
  6287     06D2  00F9               	movwf	___wmul@multiplicand
  6288     06D3  3000               	movlw	0
  6289     06D4  00FA               	movwf	___wmul@multiplicand+1
  6290     06D5  3180  2066  3185   	fcall	___wmul
  6291     06D8  3000               	movlw	0
  6292     06D9  0020               	movlb	0	; select bank0
  6293     06DA  00A8               	movwf	??_ai_propagate+5
  6294     06DB  3021               	movlw	33
  6295     06DC  00A9               	movwf	??_ai_propagate+6
  6296     06DD  0877               	movf	?___wmul,w
  6297     06DE  0728               	addwf	??_ai_propagate+5,w
  6298     06DF  00AA               	movwf	??_ai_propagate+7
  6299     06E0  0878               	movf	?___wmul+1,w
  6300     06E1  3D29               	addwfc	??_ai_propagate+6,w
  6301     06E2  00AB               	movwf	??_ai_propagate+8
  6302     06E3  0824               	movf	??_ai_propagate+1,w
  6303     06E4  072A               	addwf	??_ai_propagate+7,w
  6304     06E5  0086               	movwf	6
  6305     06E6  0825               	movf	??_ai_propagate+2,w
  6306     06E7  3D2B               	addwfc	??_ai_propagate+8,w
  6307     06E8  0087               	movwf	7
  6308     06E9  0823               	movf	??_ai_propagate,w
  6309     06EA  0781               	addwf	1,f
  6310     06EB                     l3065:
  6311                           
  6312                           ;ai.c: 186:             }
  6313     06EB  3001               	movlw	1
  6314     06EC  00A3               	movwf	??_ai_propagate
  6315     06ED  0823               	movf	??_ai_propagate,w
  6316     06EE  07B5               	addwf	ai_propagate@i_916,f
  6317     06EF  2EB3               	goto	l3059
  6318     06F0                     l3069:
  6319                           
  6320                           ;ai.c: 187:         }
  6321     06F0  3001               	movlw	1
  6322     06F1  00A3               	movwf	??_ai_propagate
  6323     06F2  0823               	movf	??_ai_propagate,w
  6324     06F3  07BC               	addwf	ai_propagate@j_915,f
  6325     06F4                     l3071:
  6326     06F4  3007               	movlw	7
  6327     06F5  023C               	subwf	ai_propagate@j_915,w
  6328     06F6  1C03               	skipc
  6329     06F7  2EF9               	goto	u1971
  6330     06F8  2EFA               	goto	u1970
  6331     06F9                     u1971:
  6332     06F9  2E93               	goto	l3053
  6333     06FA                     u1970:
  6334     06FA                     l3073:
  6335                           
  6336                           ;ai.c: 188:     }
  6337     06FA  3001               	movlw	1
  6338     06FB  00A3               	movwf	??_ai_propagate
  6339     06FC  0823               	movf	??_ai_propagate,w
  6340     06FD  07BF               	addwf	ai_propagate@k,f
  6341     06FE                     l3075:
  6342     06FE  3004               	movlw	4
  6343     06FF  023F               	subwf	ai_propagate@k,w
  6344     0700  1C03               	skipc
  6345     0701  2F03               	goto	u1981
  6346     0702  2F04               	goto	u1980
  6347     0703                     u1981:
  6348     0703  2E10               	goto	l3029
  6349     0704                     u1980:
  6350     0704                     l3077:
  6351                           
  6352                           ;ai.c: 190:     for(uint8_t j = 0; j < 4; j++){
  6353     0704  01BD               	clrf	ai_propagate@j_917
  6354     0705                     l3079:
  6355     0705  3004               	movlw	4
  6356     0706  023D               	subwf	ai_propagate@j_917,w
  6357     0707  1C03               	skipc
  6358     0708  2F0A               	goto	u1991
  6359     0709  2F0B               	goto	u1990
  6360     070A                     u1991:
  6361     070A  2F0C               	goto	l3083
  6362     070B                     u1990:
  6363     070B  2F52               	goto	l3101
  6364     070C                     l3083:
  6365                           
  6366                           ;ai.c: 191:         biases2_write(j, (int8_t)(biases2_read(j) - DB2[j]));
  6367     070C  083D               	movf	ai_propagate@j_917,w
  6368     070D  3E5A               	addlw	(low (_DB2| 0))& (0+255)
  6369     070E  0086               	movwf	6
  6370     070F  0187               	clrf	7
  6371     0710  083D               	movf	ai_propagate@j_917,w
  6372     0711  318F  2725  3185   	fcall	_biases2_read
  6373     0714  0020               	movlb	0	; select bank0
  6374     0715  00A3               	movwf	??_ai_propagate
  6375     0716  0801               	movf	1,w
  6376     0717  0223               	subwf	??_ai_propagate,w
  6377     0718  00F8               	movwf	biases2_write@val
  6378     0719  083D               	movf	ai_propagate@j_917,w
  6379     071A  318F  2744  3185   	fcall	_biases2_write
  6380     071D                     l3085:
  6381                           
  6382                           ;ai.c: 192:         for(uint8_t i = 0; i < 7; i++){
  6383     071D  0020               	movlb	0	; select bank0
  6384     071E  01BA               	clrf	ai_propagate@i_918
  6385     071F                     l3087:
  6386     071F  3007               	movlw	7
  6387     0720  023A               	subwf	ai_propagate@i_918,w
  6388     0721  1C03               	skipc
  6389     0722  2F24               	goto	u2001
  6390     0723  2F25               	goto	u2000
  6391     0724                     u2001:
  6392     0724  2F26               	goto	l3091
  6393     0725                     u2000:
  6394     0725  2F4D               	goto	l3097
  6395     0726                     l3091:
  6396                           
  6397                           ;ai.c: 193:             weights2_write(i,j, (int8_t)(weights2_read(i,j) - DW2[i][j]));
  6398     0726  083D               	movf	ai_propagate@j_917,w
  6399     0727  00F8               	movwf	weights2_write@add2
  6400     0728  083A               	movf	ai_propagate@i_918,w
  6401     0729  00A3               	movwf	??_ai_propagate
  6402     072A  3002               	movlw	2
  6403     072B                     u2015:
  6404     072B  35A3               	lslf	??_ai_propagate,f
  6405     072C  0B89               	decfsz	9,f
  6406     072D  2F2B               	goto	u2015
  6407     072E  3020               	movlw	(low (_DW2| (0+256)))& (0+255)
  6408     072F  0723               	addwf	??_ai_propagate,w
  6409     0730  00A4               	movwf	??_ai_propagate+1
  6410     0731  083D               	movf	ai_propagate@j_917,w
  6411     0732  0724               	addwf	??_ai_propagate+1,w
  6412     0733  00A5               	movwf	??_ai_propagate+2
  6413     0734  0825               	movf	??_ai_propagate+2,w
  6414     0735  0086               	movwf	6
  6415     0736  3001               	movlw	1	; select bank2/3
  6416     0737  0087               	movwf	7
  6417     0738  083D               	movf	ai_propagate@j_917,w
  6418     0739  00F4               	movwf	weights2_read@add2
  6419     073A  083A               	movf	ai_propagate@i_918,w
  6420     073B  318F  2765  3185   	fcall	_weights2_read
  6421     073E  0020               	movlb	0	; select bank0
  6422     073F  00A6               	movwf	??_ai_propagate+3
  6423     0740  0801               	movf	1,w
  6424     0741  0226               	subwf	??_ai_propagate+3,w
  6425     0742  00F9               	movwf	weights2_write@val
  6426     0743  083A               	movf	ai_propagate@i_918,w
  6427     0744  318F  278D  3185   	fcall	_weights2_write
  6428     0747                     l3093:
  6429                           
  6430                           ;ai.c: 194:         }
  6431     0747  3001               	movlw	1
  6432     0748  0020               	movlb	0	; select bank0
  6433     0749  00A3               	movwf	??_ai_propagate
  6434     074A  0823               	movf	??_ai_propagate,w
  6435     074B  07BA               	addwf	ai_propagate@i_918,f
  6436     074C  2F1F               	goto	l3087
  6437     074D                     l3097:
  6438                           
  6439                           ;ai.c: 195:     }
  6440     074D  3001               	movlw	1
  6441     074E  00A3               	movwf	??_ai_propagate
  6442     074F  0823               	movf	??_ai_propagate,w
  6443     0750  07BD               	addwf	ai_propagate@j_917,f
  6444     0751  2F05               	goto	l3079
  6445     0752                     l3101:
  6446                           
  6447                           ;ai.c: 196:     for(uint8_t j = 0; j < 7; j++){
  6448     0752  01BE               	clrf	ai_propagate@j_919
  6449     0753                     l3103:
  6450     0753  3007               	movlw	7
  6451     0754  023E               	subwf	ai_propagate@j_919,w
  6452     0755  1C03               	skipc
  6453     0756  2F58               	goto	u2021
  6454     0757  2F59               	goto	u2020
  6455     0758                     u2021:
  6456     0758  2F5A               	goto	l3107
  6457     0759                     u2020:
  6458     0759  2FB3               	goto	l615
  6459     075A                     l3107:
  6460                           
  6461                           ;ai.c: 197:         biases1_write(j, (int8_t)(biases2_read(j) - DB1[j]));
  6462     075A  083E               	movf	ai_propagate@j_919,w
  6463     075B  3EA0               	addlw	(low (_DB1| (0+256)))& (0+255)
  6464     075C  0086               	movwf	6
  6465     075D  3001               	movlw	1	; select bank3/4
  6466     075E  0087               	movwf	7
  6467     075F  083E               	movf	ai_propagate@j_919,w
  6468     0760  318F  2725  3185   	fcall	_biases2_read
  6469     0763  0020               	movlb	0	; select bank0
  6470     0764  00A3               	movwf	??_ai_propagate
  6471     0765  0801               	movf	1,w
  6472     0766  0223               	subwf	??_ai_propagate,w
  6473     0767  00F8               	movwf	biases1_write@val
  6474     0768  083E               	movf	ai_propagate@j_919,w
  6475     0769  318F  273B  3185   	fcall	_biases1_write
  6476     076C                     l3109:
  6477                           
  6478                           ;ai.c: 198:         for(uint8_t i = 0; i < 16; i++){
  6479     076C  0020               	movlb	0	; select bank0
  6480     076D  01BB               	clrf	ai_propagate@i_920
  6481     076E                     l3111:
  6482     076E  3010               	movlw	16
  6483     076F  023B               	subwf	ai_propagate@i_920,w
  6484     0770  1C03               	skipc
  6485     0771  2F73               	goto	u2031
  6486     0772  2F74               	goto	u2030
  6487     0773                     u2031:
  6488     0773  2F75               	goto	l3115
  6489     0774                     u2030:
  6490     0774  2FAE               	goto	l3121
  6491     0775                     l3115:
  6492                           
  6493                           ;ai.c: 199:             weights1_write(i,j, (int8_t)(weights2_read(i,j) - DW1[i][j]));
  6494     0775  083E               	movf	ai_propagate@j_919,w
  6495     0776  00A0               	movwf	weights1_write@add2
  6496     0777  083E               	movf	ai_propagate@j_919,w
  6497     0778  00A3               	movwf	??_ai_propagate
  6498     0779  01A4               	clrf	??_ai_propagate+1
  6499     077A  083B               	movf	ai_propagate@i_920,w
  6500     077B  00A5               	movwf	??_ai_propagate+2
  6501     077C  01A6               	clrf	??_ai_propagate+3
  6502     077D  0825               	movf	??_ai_propagate+2,w
  6503     077E  00F7               	movwf	___wmul@multiplier
  6504     077F  0826               	movf	??_ai_propagate+3,w
  6505     0780  00F8               	movwf	___wmul@multiplier+1
  6506     0781  3007               	movlw	7
  6507     0782  00F9               	movwf	___wmul@multiplicand
  6508     0783  3000               	movlw	0
  6509     0784  00FA               	movwf	___wmul@multiplicand+1
  6510     0785  3180  2066  3185   	fcall	___wmul
  6511     0788  3000               	movlw	0
  6512     0789  0020               	movlb	0	; select bank0
  6513     078A  00A7               	movwf	??_ai_propagate+4
  6514     078B  3021               	movlw	33
  6515     078C  00A8               	movwf	??_ai_propagate+5
  6516     078D  0877               	movf	?___wmul,w
  6517     078E  0727               	addwf	??_ai_propagate+4,w
  6518     078F  00A9               	movwf	??_ai_propagate+6
  6519     0790  0878               	movf	?___wmul+1,w
  6520     0791  3D28               	addwfc	??_ai_propagate+5,w
  6521     0792  00AA               	movwf	??_ai_propagate+7
  6522     0793  0823               	movf	??_ai_propagate,w
  6523     0794  0729               	addwf	??_ai_propagate+6,w
  6524     0795  0086               	movwf	6
  6525     0796  0824               	movf	??_ai_propagate+1,w
  6526     0797  3D2A               	addwfc	??_ai_propagate+7,w
  6527     0798  0087               	movwf	7
  6528     0799  083E               	movf	ai_propagate@j_919,w
  6529     079A  00F4               	movwf	weights2_read@add2
  6530     079B  083B               	movf	ai_propagate@i_920,w
  6531     079C  318F  2765  3185   	fcall	_weights2_read
  6532     079F  0020               	movlb	0	; select bank0
  6533     07A0  00AB               	movwf	??_ai_propagate+8
  6534     07A1  0801               	movf	1,w
  6535     07A2  022B               	subwf	??_ai_propagate+8,w
  6536     07A3  00A1               	movwf	weights1_write@val
  6537     07A4  083B               	movf	ai_propagate@i_920,w
  6538     07A5  318F  27CC  3185   	fcall	_weights1_write
  6539     07A8                     l3117:
  6540                           
  6541                           ;ai.c: 200:         }
  6542     07A8  3001               	movlw	1
  6543     07A9  0020               	movlb	0	; select bank0
  6544     07AA  00A3               	movwf	??_ai_propagate
  6545     07AB  0823               	movf	??_ai_propagate,w
  6546     07AC  07BB               	addwf	ai_propagate@i_920,f
  6547     07AD  2F6E               	goto	l3111
  6548     07AE                     l3121:
  6549                           
  6550                           ;ai.c: 201:     }
  6551     07AE  3001               	movlw	1
  6552     07AF  00A3               	movwf	??_ai_propagate
  6553     07B0  0823               	movf	??_ai_propagate,w
  6554     07B1  07BE               	addwf	ai_propagate@j_919,f
  6555     07B2  2F53               	goto	l3103
  6556     07B3                     l615:
  6557     07B3  0008               	return
  6558     07B4                     __end_of_ai_propagate:
  6559                           
  6560                           	psect	text21
  6561     0F8D                     __ptext21:	
  6562 ;; *************** function _weights2_write *****************
  6563 ;; Defined at:
  6564 ;;		line 26 in file "ai.c"
  6565 ;; Parameters:    Size  Location     Type
  6566 ;;  add1            1    wreg     unsigned char 
  6567 ;;  add2            1    8[COMMON] unsigned char 
  6568 ;;  val             1    9[COMMON] char 
  6569 ;; Auto vars:     Size  Location     Type
  6570 ;;  add1            1   10[COMMON] unsigned char 
  6571 ;; Return value:  Size  Location     Type
  6572 ;;                  1    wreg      void 
  6573 ;; Registers used:
  6574 ;;		wreg, status,2, status,0, pclath, cstack
  6575 ;; Tracked objects:
  6576 ;;		On entry : 0/0
  6577 ;;		On exit  : 0/0
  6578 ;;		Unchanged: 0/0
  6579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6580 ;;      Params:         2       0       0       0       0       0
  6581 ;;      Locals:         1       0       0       0       0       0
  6582 ;;      Temps:          0       0       0       0       0       0
  6583 ;;      Totals:         3       0       0       0       0       0
  6584 ;;Total ram usage:        3 bytes
  6585 ;; Hardware stack levels used: 1
  6586 ;; Hardware stack levels required when called: 1
  6587 ;; This function calls:
  6588 ;;		___bmul
  6589 ;;		_eeprom_write
  6590 ;; This function is called by:
  6591 ;;		_ai_propagate
  6592 ;;		_ai_initiate
  6593 ;; This function uses a non-reentrant model
  6594 ;;
  6595                           
  6596     0F8D                     _weights2_write:	
  6597                           ;psect for function _weights2_write
  6598                           
  6599                           
  6600                           ;incstack = 0
  6601                           ; Regs used in _weights2_write: [wreg+status,2+status,0+pclath+cstack]
  6602                           ;weights2_write@add1 stored from wreg
  6603     0F8D  00FA               	movwf	weights2_write@add1
  6604     0F8E                     l2587:
  6605                           
  6606                           ;ai.c: 27:     eeprom_write(0 +16*7 +7 + 7*add1 + add2, (unsigned char)val);
  6607     0F8E  0879               	movf	weights2_write@val,w
  6608     0F8F  00F4               	movwf	eeprom_write@value
  6609     0F90  3007               	movlw	7
  6610     0F91  00F0               	movwf	___bmul@multiplicand
  6611     0F92  087A               	movf	weights2_write@add1,w
  6612     0F93  3180  201F  318F   	fcall	___bmul
  6613     0F96  0778               	addwf	weights2_write@add2,w
  6614     0F97  3E77               	addlw	119
  6615     0F98  3180  20CF  318F   	fcall	_eeprom_write
  6616     0F9B                     l539:
  6617     0F9B  0008               	return
  6618     0F9C                     __end_of_weights2_write:
  6619                           
  6620                           	psect	text22
  6621     0F65                     __ptext22:	
  6622 ;; *************** function _weights2_read *****************
  6623 ;; Defined at:
  6624 ;;		line 38 in file "ai.c"
  6625 ;; Parameters:    Size  Location     Type
  6626 ;;  add1            1    wreg     unsigned char 
  6627 ;;  add2            1    4[COMMON] unsigned char 
  6628 ;; Auto vars:     Size  Location     Type
  6629 ;;  add1            1    5[COMMON] unsigned char 
  6630 ;; Return value:  Size  Location     Type
  6631 ;;                  1    wreg      char 
  6632 ;; Registers used:
  6633 ;;		wreg, status,2, status,0, pclath, cstack
  6634 ;; Tracked objects:
  6635 ;;		On entry : 0/0
  6636 ;;		On exit  : 0/0
  6637 ;;		Unchanged: 0/0
  6638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6639 ;;      Params:         1       0       0       0       0       0
  6640 ;;      Locals:         1       0       0       0       0       0
  6641 ;;      Temps:          0       0       0       0       0       0
  6642 ;;      Totals:         2       0       0       0       0       0
  6643 ;;Total ram usage:        2 bytes
  6644 ;; Hardware stack levels used: 1
  6645 ;; Hardware stack levels required when called: 1
  6646 ;; This function calls:
  6647 ;;		___bmul
  6648 ;;		_eeprom_read
  6649 ;; This function is called by:
  6650 ;;		_ai_run
  6651 ;;		_ai_propagate
  6652 ;; This function uses a non-reentrant model
  6653 ;;
  6654                           
  6655     0F65                     _weights2_read:	
  6656                           ;psect for function _weights2_read
  6657                           
  6658                           
  6659                           ;incstack = 0
  6660                           ; Regs used in _weights2_read: [wreg+status,2+status,0+pclath+cstack]
  6661                           ;weights2_read@add1 stored from wreg
  6662     0F65  00F5               	movwf	weights2_read@add1
  6663     0F66                     l2599:
  6664                           
  6665                           ;ai.c: 39:     return (int8_t)eeprom_read(0 +16*7 +7 + add1*7 + add2);
  6666     0F66  3007               	movlw	7
  6667     0F67  00F0               	movwf	___bmul@multiplicand
  6668     0F68  0875               	movf	weights2_read@add1,w
  6669     0F69  3180  201F  318F   	fcall	___bmul
  6670     0F6C  0774               	addwf	weights2_read@add2,w
  6671     0F6D  3E77               	addlw	119
  6672     0F6E  3180  200A  318F   	fcall	_eeprom_read
  6673     0F71                     l551:
  6674     0F71  0008               	return
  6675     0F72                     __end_of_weights2_read:
  6676                           
  6677                           	psect	text23
  6678     001F                     __ptext23:	
  6679 ;; *************** function ___bmul *****************
  6680 ;; Defined at:
  6681 ;;		line 4 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\common\Umul8.c"
  6682 ;; Parameters:    Size  Location     Type
  6683 ;;  multiplier      1    wreg     unsigned char 
  6684 ;;  multiplicand    1    0[COMMON] unsigned char 
  6685 ;; Auto vars:     Size  Location     Type
  6686 ;;  multiplier      1    3[COMMON] unsigned char 
  6687 ;;  product         1    2[COMMON] unsigned char 
  6688 ;; Return value:  Size  Location     Type
  6689 ;;                  1    wreg      unsigned char 
  6690 ;; Registers used:
  6691 ;;		wreg, status,2, status,0
  6692 ;; Tracked objects:
  6693 ;;		On entry : 0/0
  6694 ;;		On exit  : 0/0
  6695 ;;		Unchanged: 0/0
  6696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6697 ;;      Params:         1       0       0       0       0       0
  6698 ;;      Locals:         2       0       0       0       0       0
  6699 ;;      Temps:          1       0       0       0       0       0
  6700 ;;      Totals:         4       0       0       0       0       0
  6701 ;;Total ram usage:        4 bytes
  6702 ;; Hardware stack levels used: 1
  6703 ;; This function calls:
  6704 ;;		Nothing
  6705 ;; This function is called by:
  6706 ;;		_weights2_write
  6707 ;;		_weights2_read
  6708 ;;		_ai_propagate
  6709 ;; This function uses a non-reentrant model
  6710 ;;
  6711                           
  6712     001F                     ___bmul:	
  6713                           ;psect for function ___bmul
  6714                           
  6715                           
  6716                           ;incstack = 0
  6717                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  6718                           ;___bmul@multiplier stored from wreg
  6719     001F  00F3               	movwf	___bmul@multiplier
  6720     0020                     l2503:
  6721     0020  01F2               	clrf	___bmul@product
  6722     0021                     l2505:
  6723     0021  1C73               	btfss	___bmul@multiplier,0
  6724     0022  2824               	goto	u1291
  6725     0023  2825               	goto	u1290
  6726     0024                     u1291:
  6727     0024  2829               	goto	l2509
  6728     0025                     u1290:
  6729     0025                     l2507:
  6730     0025  0870               	movf	___bmul@multiplicand,w
  6731     0026  00F1               	movwf	??___bmul
  6732     0027  0871               	movf	??___bmul,w
  6733     0028  07F2               	addwf	___bmul@product,f
  6734     0029                     l2509:
  6735     0029  1003               	clrc
  6736     002A  0DF0               	rlf	___bmul@multiplicand,f
  6737     002B                     l2511:
  6738     002B  1003               	clrc
  6739     002C  0CF3               	rrf	___bmul@multiplier,f
  6740     002D  0873               	movf	___bmul@multiplier,w
  6741     002E  1D03               	btfss	3,2
  6742     002F  2831               	goto	u1301
  6743     0030  2832               	goto	u1300
  6744     0031                     u1301:
  6745     0031  2821               	goto	l2505
  6746     0032                     u1300:
  6747     0032                     l2513:
  6748     0032  0872               	movf	___bmul@product,w
  6749     0033                     l873:
  6750     0033  0008               	return
  6751     0034                     __end_of___bmul:
  6752                           
  6753                           	psect	text24
  6754     0FCC                     __ptext24:	
  6755 ;; *************** function _weights1_write *****************
  6756 ;; Defined at:
  6757 ;;		line 20 in file "ai.c"
  6758 ;; Parameters:    Size  Location     Type
  6759 ;;  add1            1    wreg     unsigned char 
  6760 ;;  add2            1    0[BANK0 ] unsigned char 
  6761 ;;  val             1    1[BANK0 ] char 
  6762 ;; Auto vars:     Size  Location     Type
  6763 ;;  add1            1    2[BANK0 ] unsigned char 
  6764 ;; Return value:  Size  Location     Type
  6765 ;;                  1    wreg      void 
  6766 ;; Registers used:
  6767 ;;		wreg, status,2, status,0, pclath, cstack
  6768 ;; Tracked objects:
  6769 ;;		On entry : 0/0
  6770 ;;		On exit  : 0/0
  6771 ;;		Unchanged: 0/0
  6772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6773 ;;      Params:         0       2       0       0       0       0
  6774 ;;      Locals:         0       1       0       0       0       0
  6775 ;;      Temps:          1       0       0       0       0       0
  6776 ;;      Totals:         1       3       0       0       0       0
  6777 ;;Total ram usage:        4 bytes
  6778 ;; Hardware stack levels used: 1
  6779 ;; Hardware stack levels required when called: 1
  6780 ;; This function calls:
  6781 ;;		_eeprom_write
  6782 ;; This function is called by:
  6783 ;;		_ai_propagate
  6784 ;;		_ai_initiate
  6785 ;; This function uses a non-reentrant model
  6786 ;;
  6787                           
  6788     0FCC                     _weights1_write:	
  6789                           ;psect for function _weights1_write
  6790                           
  6791                           
  6792                           ;incstack = 0
  6793                           ; Regs used in _weights1_write: [wreg+status,2+status,0+pclath+cstack]
  6794                           ;weights1_write@add1 stored from wreg
  6795     0FCC  0020               	movlb	0	; select bank0
  6796     0FCD  00A2               	movwf	weights1_write@add1
  6797     0FCE                     l2583:
  6798                           
  6799                           ;ai.c: 21:     eeprom_write(0 + 16*add1 + add2, (unsigned char)val);
  6800     0FCE  0821               	movf	weights1_write@val,w
  6801     0FCF  00F4               	movwf	eeprom_write@value
  6802     0FD0  0822               	movf	weights1_write@add1,w
  6803     0FD1  00FD               	movwf	??_weights1_write
  6804     0FD2  3003               	movlw	3
  6805     0FD3                     u1345:
  6806     0FD3  35FD               	lslf	??_weights1_write,f
  6807     0FD4  3EFF               	addlw	-1
  6808     0FD5  1D03               	skipz
  6809     0FD6  2FD3               	goto	u1345
  6810     0FD7  357D               	lslf	??_weights1_write,w
  6811     0FD8  0720               	addwf	weights1_write@add2,w
  6812     0FD9  3180  20CF  318F   	fcall	_eeprom_write
  6813     0FDC                     l533:
  6814     0FDC  0008               	return
  6815     0FDD                     __end_of_weights1_write:
  6816                           
  6817                           	psect	text25
  6818     0FAC                     __ptext25:	
  6819 ;; *************** function _de_sigmoid *****************
  6820 ;; Defined at:
  6821 ;;		line 12 in file "sigmoid.c"
  6822 ;; Parameters:    Size  Location     Type
  6823 ;;  z               1    wreg     char 
  6824 ;; Auto vars:     Size  Location     Type
  6825 ;;  z               1    1[COMMON] char 
  6826 ;; Return value:  Size  Location     Type
  6827 ;;                  1    wreg      unsigned char 
  6828 ;; Registers used:
  6829 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  6830 ;; Tracked objects:
  6831 ;;		On entry : 0/0
  6832 ;;		On exit  : 0/0
  6833 ;;		Unchanged: 0/0
  6834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6835 ;;      Params:         0       0       0       0       0       0
  6836 ;;      Locals:         1       0       0       0       0       0
  6837 ;;      Temps:          1       0       0       0       0       0
  6838 ;;      Totals:         2       0       0       0       0       0
  6839 ;;Total ram usage:        2 bytes
  6840 ;; Hardware stack levels used: 1
  6841 ;; This function calls:
  6842 ;;		Nothing
  6843 ;; This function is called by:
  6844 ;;		_ai_propagate
  6845 ;; This function uses a non-reentrant model
  6846 ;;
  6847                           
  6848     0FAC                     _de_sigmoid:	
  6849                           ;psect for function _de_sigmoid
  6850                           
  6851                           
  6852                           ;incstack = 0
  6853                           ; Regs used in _de_sigmoid: [wreg-fsr0h+status,2+status,0+pclath]
  6854                           ;de_sigmoid@z stored from wreg
  6855     0FAC  00F1               	movwf	de_sigmoid@z
  6856     0FAD                     l2611:
  6857                           
  6858                           ;sigmoid.c: 13:     return de_sigmoidValues[((uint8_t)z)>>4];
  6859     0FAD  0871               	movf	de_sigmoid@z,w
  6860     0FAE  00F0               	movwf	??_de_sigmoid
  6861     0FAF  3004               	movlw	4
  6862     0FB0                     u1375:
  6863     0FB0  36F0               	lsrf	??_de_sigmoid,f
  6864     0FB1  0B89               	decfsz	9,f
  6865     0FB2  2FB0               	goto	u1375
  6866     0FB3  0870               	movf	??_de_sigmoid,w
  6867     0FB4  3E00               	addlw	low (_de_sigmoidValues| (0+32768))
  6868     0FB5  0084               	movwf	4
  6869     0FB6  3088               	movlw	high (_de_sigmoidValues| (0+32768))
  6870     0FB7  1803               	skipnc
  6871     0FB8  3E01               	addlw	1
  6872     0FB9  0085               	movwf	5
  6873     0FBA  0800               	movf	0,w	;code access
  6874     0FBB                     l660:
  6875     0FBB  0008               	return
  6876     0FBC                     __end_of_de_sigmoid:
  6877                           
  6878                           	psect	text26
  6879     0F44                     __ptext26:	
  6880 ;; *************** function _biases2_write *****************
  6881 ;; Defined at:
  6882 ;;		line 29 in file "ai.c"
  6883 ;; Parameters:    Size  Location     Type
  6884 ;;  add             1    wreg     unsigned char 
  6885 ;;  val             1    8[COMMON] char 
  6886 ;; Auto vars:     Size  Location     Type
  6887 ;;  add             1    9[COMMON] unsigned char 
  6888 ;; Return value:  Size  Location     Type
  6889 ;;                  1    wreg      void 
  6890 ;; Registers used:
  6891 ;;		wreg, status,2, status,0, pclath, cstack
  6892 ;; Tracked objects:
  6893 ;;		On entry : 0/0
  6894 ;;		On exit  : 0/0
  6895 ;;		Unchanged: 0/0
  6896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6897 ;;      Params:         1       0       0       0       0       0
  6898 ;;      Locals:         1       0       0       0       0       0
  6899 ;;      Temps:          0       0       0       0       0       0
  6900 ;;      Totals:         2       0       0       0       0       0
  6901 ;;Total ram usage:        2 bytes
  6902 ;; Hardware stack levels used: 1
  6903 ;; Hardware stack levels required when called: 1
  6904 ;; This function calls:
  6905 ;;		_eeprom_write
  6906 ;; This function is called by:
  6907 ;;		_ai_propagate
  6908 ;;		_ai_initiate
  6909 ;; This function uses a non-reentrant model
  6910 ;;
  6911                           
  6912     0F44                     _biases2_write:	
  6913                           ;psect for function _biases2_write
  6914                           
  6915                           
  6916                           ;incstack = 0
  6917                           ; Regs used in _biases2_write: [wreg+status,2+status,0+pclath+cstack]
  6918                           ;biases2_write@add stored from wreg
  6919     0F44  00F9               	movwf	biases2_write@add
  6920     0F45                     l2589:
  6921                           
  6922                           ;ai.c: 30:     eeprom_write(0 +16*7 +7 +4*7 + add, (unsigned char)val);
  6923     0F45  0878               	movf	biases2_write@val,w
  6924     0F46  00F4               	movwf	eeprom_write@value
  6925     0F47  0879               	movf	biases2_write@add,w
  6926     0F48  3E93               	addlw	147
  6927     0F49  3180  20CF  318F   	fcall	_eeprom_write
  6928     0F4C                     l542:
  6929     0F4C  0008               	return
  6930     0F4D                     __end_of_biases2_write:
  6931                           
  6932                           	psect	text27
  6933     0F25                     __ptext27:	
  6934 ;; *************** function _biases2_read *****************
  6935 ;; Defined at:
  6936 ;;		line 41 in file "ai.c"
  6937 ;; Parameters:    Size  Location     Type
  6938 ;;  add             1    wreg     unsigned char 
  6939 ;; Auto vars:     Size  Location     Type
  6940 ;;  add             1    4[COMMON] unsigned char 
  6941 ;; Return value:  Size  Location     Type
  6942 ;;                  1    wreg      char 
  6943 ;; Registers used:
  6944 ;;		wreg, status,2, status,0, pclath, cstack
  6945 ;; Tracked objects:
  6946 ;;		On entry : 0/0
  6947 ;;		On exit  : 0/0
  6948 ;;		Unchanged: 0/0
  6949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6950 ;;      Params:         0       0       0       0       0       0
  6951 ;;      Locals:         1       0       0       0       0       0
  6952 ;;      Temps:          0       0       0       0       0       0
  6953 ;;      Totals:         1       0       0       0       0       0
  6954 ;;Total ram usage:        1 bytes
  6955 ;; Hardware stack levels used: 1
  6956 ;; Hardware stack levels required when called: 1
  6957 ;; This function calls:
  6958 ;;		_eeprom_read
  6959 ;; This function is called by:
  6960 ;;		_ai_run
  6961 ;;		_ai_propagate
  6962 ;; This function uses a non-reentrant model
  6963 ;;
  6964                           
  6965     0F25                     _biases2_read:	
  6966                           ;psect for function _biases2_read
  6967                           
  6968                           
  6969                           ;incstack = 0
  6970                           ; Regs used in _biases2_read: [wreg+status,2+status,0+pclath+cstack]
  6971                           ;biases2_read@add stored from wreg
  6972     0F25  00F4               	movwf	biases2_read@add
  6973     0F26                     l2603:
  6974                           
  6975                           ;ai.c: 42:     return (int8_t)eeprom_read(0 +16*7 +7 +4*7 + add);
  6976     0F26  0874               	movf	biases2_read@add,w
  6977     0F27  3E93               	addlw	147
  6978     0F28  3180  200A  318F   	fcall	_eeprom_read
  6979     0F2B                     l554:
  6980     0F2B  0008               	return
  6981     0F2C                     __end_of_biases2_read:
  6982                           
  6983                           	psect	text28
  6984     000A                     __ptext28:	
  6985 ;; *************** function _eeprom_read *****************
  6986 ;; Defined at:
  6987 ;;		line 6 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\pic\__eeread.c"
  6988 ;; Parameters:    Size  Location     Type
  6989 ;;  addr            1    wreg     unsigned char 
  6990 ;; Auto vars:     Size  Location     Type
  6991 ;;  addr            1    3[COMMON] unsigned char 
  6992 ;; Return value:  Size  Location     Type
  6993 ;;                  1    wreg      unsigned char 
  6994 ;; Registers used:
  6995 ;;		wreg, status,2, status,0
  6996 ;; Tracked objects:
  6997 ;;		On entry : 0/0
  6998 ;;		On exit  : 0/0
  6999 ;;		Unchanged: 0/0
  7000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7001 ;;      Params:         0       0       0       0       0       0
  7002 ;;      Locals:         1       0       0       0       0       0
  7003 ;;      Temps:          3       0       0       0       0       0
  7004 ;;      Totals:         4       0       0       0       0       0
  7005 ;;Total ram usage:        4 bytes
  7006 ;; Hardware stack levels used: 1
  7007 ;; This function calls:
  7008 ;;		Nothing
  7009 ;; This function is called by:
  7010 ;;		_weights1_read
  7011 ;;		_biases1_read
  7012 ;;		_weights2_read
  7013 ;;		_biases2_read
  7014 ;;		_ai_is_ai_initiated_write
  7015 ;;		_ai_is_ai_initiated_read
  7016 ;;		_ai_is_ai_trained_write
  7017 ;;		_ai_is_ai_trained_read
  7018 ;;		_ai_maxScore_read
  7019 ;;		_ai_scores_read
  7020 ;; This function uses a non-reentrant model
  7021 ;;
  7022                           
  7023     000A                     _eeprom_read:	
  7024                           ;psect for function _eeprom_read
  7025                           
  7026                           
  7027                           ;incstack = 0
  7028                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  7029                           ;eeprom_read@addr stored from wreg
  7030     000A  00F3               	movwf	eeprom_read@addr
  7031     000B                     l817:	
  7032                           ;D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\pic\__eeread.c: 6: eeprom_read(unsig
      +                          ned char addr);D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\pic\__eeread.c: 7: {;D
      +                          :\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\pic\__eeread.c: 8:  do
  7033                           
  7034     000B  0064               	clrwdt	;# 
  7035     000C  0023               	movlb	3	; select bank3
  7036     000D  1895               	btfsc	21,1	;volsfr
  7037     000E  2810               	goto	u1281
  7038     000F  2811               	goto	u1280
  7039     0010                     u1281:
  7040     0010  280B               	goto	l817
  7041     0011                     u1280:
  7042     0011                     l2499:
  7043                           
  7044                           ;D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\pic\__eeread.c: 18:  return ( EEADR 
      +                          = addr, EECON1 &= 0x3F, EECON1bits.RD = 1, EEDATA);
  7045     0011  0873               	movf	eeprom_read@addr,w
  7046     0012  00F0               	movwf	??_eeprom_read
  7047     0013  01F1               	clrf	??_eeprom_read+1
  7048     0014  0870               	movf	??_eeprom_read,w
  7049     0015  0091               	movwf	17	;volatile
  7050     0016  0871               	movf	??_eeprom_read+1,w
  7051     0017  0092               	movwf	18	;volatile
  7052     0018  303F               	movlw	63
  7053     0019  00F2               	movwf	??_eeprom_read+2
  7054     001A  0872               	movf	??_eeprom_read+2,w
  7055     001B  0595               	andwf	21,f	;volsfr
  7056     001C  1415               	bsf	21,0	;volsfr
  7057     001D  0813               	movf	19,w	;volatile
  7058     001E                     l819:
  7059     001E  0008               	return
  7060     001F                     __end_of_eeprom_read:
  7061                           
  7062                           	psect	text29
  7063     0F3B                     __ptext29:	
  7064 ;; *************** function _biases1_write *****************
  7065 ;; Defined at:
  7066 ;;		line 23 in file "ai.c"
  7067 ;; Parameters:    Size  Location     Type
  7068 ;;  add             1    wreg     unsigned char 
  7069 ;;  val             1    8[COMMON] char 
  7070 ;; Auto vars:     Size  Location     Type
  7071 ;;  add             1    9[COMMON] unsigned char 
  7072 ;; Return value:  Size  Location     Type
  7073 ;;                  1    wreg      void 
  7074 ;; Registers used:
  7075 ;;		wreg, status,2, status,0, pclath, cstack
  7076 ;; Tracked objects:
  7077 ;;		On entry : 0/0
  7078 ;;		On exit  : 0/0
  7079 ;;		Unchanged: 0/0
  7080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7081 ;;      Params:         1       0       0       0       0       0
  7082 ;;      Locals:         1       0       0       0       0       0
  7083 ;;      Temps:          0       0       0       0       0       0
  7084 ;;      Totals:         2       0       0       0       0       0
  7085 ;;Total ram usage:        2 bytes
  7086 ;; Hardware stack levels used: 1
  7087 ;; Hardware stack levels required when called: 1
  7088 ;; This function calls:
  7089 ;;		_eeprom_write
  7090 ;; This function is called by:
  7091 ;;		_ai_propagate
  7092 ;;		_ai_initiate
  7093 ;; This function uses a non-reentrant model
  7094 ;;
  7095                           
  7096     0F3B                     _biases1_write:	
  7097                           ;psect for function _biases1_write
  7098                           
  7099                           
  7100                           ;incstack = 0
  7101                           ; Regs used in _biases1_write: [wreg+status,2+status,0+pclath+cstack]
  7102                           ;biases1_write@add stored from wreg
  7103     0F3B  00F9               	movwf	biases1_write@add
  7104     0F3C                     l2585:
  7105                           
  7106                           ;ai.c: 24:     eeprom_write(0 +16*7 + add, (unsigned char)val);
  7107     0F3C  0878               	movf	biases1_write@val,w
  7108     0F3D  00F4               	movwf	eeprom_write@value
  7109     0F3E  0879               	movf	biases1_write@add,w
  7110     0F3F  3E70               	addlw	112
  7111     0F40  3180  20CF  318F   	fcall	_eeprom_write
  7112     0F43                     l536:
  7113     0F43  0008               	return
  7114     0F44                     __end_of_biases1_write:
  7115                           
  7116                           	psect	text30
  7117     00CF                     __ptext30:	
  7118 ;; *************** function _eeprom_write *****************
  7119 ;; Defined at:
  7120 ;;		line 6 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\pic\__eewrite.c"
  7121 ;; Parameters:    Size  Location     Type
  7122 ;;  addr            1    wreg     unsigned char 
  7123 ;;  value           1    4[COMMON] unsigned char 
  7124 ;; Auto vars:     Size  Location     Type
  7125 ;;  addr            1    7[COMMON] unsigned char 
  7126 ;; Return value:  Size  Location     Type
  7127 ;;                  1    wreg      void 
  7128 ;; Registers used:
  7129 ;;		wreg, status,2, status,0
  7130 ;; Tracked objects:
  7131 ;;		On entry : 0/0
  7132 ;;		On exit  : 0/0
  7133 ;;		Unchanged: 0/0
  7134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7135 ;;      Params:         1       0       0       0       0       0
  7136 ;;      Locals:         1       0       0       0       0       0
  7137 ;;      Temps:          2       0       0       0       0       0
  7138 ;;      Totals:         4       0       0       0       0       0
  7139 ;;Total ram usage:        4 bytes
  7140 ;; Hardware stack levels used: 1
  7141 ;; This function calls:
  7142 ;;		Nothing
  7143 ;; This function is called by:
  7144 ;;		_weights1_write
  7145 ;;		_biases1_write
  7146 ;;		_weights2_write
  7147 ;;		_biases2_write
  7148 ;;		_ai_is_ai_initiated_write
  7149 ;;		_ai_is_ai_trained_write
  7150 ;;		_ai_maxScore_write
  7151 ;;		_ai_scores_write
  7152 ;; This function uses a non-reentrant model
  7153 ;;
  7154                           
  7155     00CF                     _eeprom_write:	
  7156                           ;psect for function _eeprom_write
  7157                           
  7158                           
  7159                           ;incstack = 0
  7160                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  7161                           ;eeprom_write@addr stored from wreg
  7162     00CF  00F7               	movwf	eeprom_write@addr
  7163     00D0                     l836:	
  7164                           ;D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\pic\__eewrite.c: 6: eeprom_write(uns
      +                          igned char addr, unsigned char value);D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99
      +                          \pic\__eewrite.c: 7: {;D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\pic\__eewrite.
      +                          c: 8:  do{ while (EECON1bits.WR) { continue; } EEADR = (addr); EEDATA = (value); EECON1 
      +                          &= 0x3F; STATUSbits.CARRY = 0; if (INTCONbits.GIE) { STATUSbits.CARRY = 1; } INTCONbits.
      +                          GIE = 0; EECON1bits.WREN = 1; EECON2 = 0x55; EECON2 = 0xAA; EECON1bits.WR = 1; EECON1bit
      +                          s.WREN = 0; if (STATUSbits.CARRY) { INTCONbits.GIE = 1; } } while (0);
  7165                           
  7166     00D0                     l837:
  7167     00D0  0023               	movlb	3	; select bank3
  7168     00D1  1895               	btfsc	21,1	;volsfr
  7169     00D2  28D4               	goto	u1251
  7170     00D3  28D5               	goto	u1250
  7171     00D4                     u1251:
  7172     00D4  28D0               	goto	l837
  7173     00D5                     u1250:
  7174     00D5                     l2479:
  7175     00D5  0877               	movf	eeprom_write@addr,w
  7176     00D6  00F5               	movwf	??_eeprom_write
  7177     00D7  01F6               	clrf	??_eeprom_write+1
  7178     00D8  0875               	movf	??_eeprom_write,w
  7179     00D9  0091               	movwf	17	;volatile
  7180     00DA  0876               	movf	??_eeprom_write+1,w
  7181     00DB  0092               	movwf	18	;volatile
  7182     00DC  0874               	movf	eeprom_write@value,w
  7183     00DD  0093               	movwf	19	;volatile
  7184     00DE                     l2481:
  7185     00DE  303F               	movlw	63
  7186     00DF  00F5               	movwf	??_eeprom_write
  7187     00E0  0875               	movf	??_eeprom_write,w
  7188     00E1  0595               	andwf	21,f	;volsfr
  7189     00E2                     l2483:
  7190     00E2  0020               	movlb	0	; select bank0
  7191     00E3  1003               	bcf	3,0	;volatile
  7192     00E4                     l2485:
  7193     00E4  1F8B               	btfss	11,7	;volatile
  7194     00E5  28E7               	goto	u1261
  7195     00E6  28E8               	goto	u1260
  7196     00E7                     u1261:
  7197     00E7  28E9               	goto	l840
  7198     00E8                     u1260:
  7199     00E8                     l2487:
  7200     00E8  1403               	bsf	3,0	;volatile
  7201     00E9                     l840:
  7202     00E9  138B               	bcf	11,7	;volatile
  7203     00EA  0023               	movlb	3	; select bank3
  7204     00EB  1515               	bsf	21,2	;volsfr
  7205     00EC                     l2489:
  7206     00EC  3055               	movlw	85
  7207     00ED  0096               	movwf	22	;volsfr
  7208     00EE  30AA               	movlw	170
  7209     00EF  0096               	movwf	22	;volsfr
  7210     00F0                     l2491:
  7211     00F0  1495               	bsf	21,1	;volsfr
  7212     00F1                     l2493:
  7213     00F1  1115               	bcf	21,2	;volsfr
  7214     00F2                     l2495:
  7215     00F2  0020               	movlb	0	; select bank0
  7216     00F3  1C03               	btfss	3,0	;volatile
  7217     00F4  28F6               	goto	u1271
  7218     00F5  28F7               	goto	u1270
  7219     00F6                     u1271:
  7220     00F6  28F8               	goto	l843
  7221     00F7                     u1270:
  7222     00F7                     l2497:
  7223     00F7  178B               	bsf	11,7	;volatile
  7224     00F8                     l843:
  7225     00F8  0008               	return
  7226     00F9                     __end_of_eeprom_write:
  7227                           
  7228                           	psect	text31
  7229     0066                     __ptext31:	
  7230 ;; *************** function ___wmul *****************
  7231 ;; Defined at:
  7232 ;;		line 15 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  7233 ;; Parameters:    Size  Location     Type
  7234 ;;  multiplier      2    7[COMMON] unsigned int 
  7235 ;;  multiplicand    2    9[COMMON] unsigned int 
  7236 ;; Auto vars:     Size  Location     Type
  7237 ;;  product         2   11[COMMON] unsigned int 
  7238 ;; Return value:  Size  Location     Type
  7239 ;;                  2    7[COMMON] unsigned int 
  7240 ;; Registers used:
  7241 ;;		wreg, status,2, status,0
  7242 ;; Tracked objects:
  7243 ;;		On entry : 0/0
  7244 ;;		On exit  : 0/0
  7245 ;;		Unchanged: 0/0
  7246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7247 ;;      Params:         4       0       0       0       0       0
  7248 ;;      Locals:         2       0       0       0       0       0
  7249 ;;      Temps:          0       0       0       0       0       0
  7250 ;;      Totals:         6       0       0       0       0       0
  7251 ;;Total ram usage:        6 bytes
  7252 ;; Hardware stack levels used: 1
  7253 ;; This function calls:
  7254 ;;		Nothing
  7255 ;; This function is called by:
  7256 ;;		_ai_run
  7257 ;;		_ai_propagate
  7258 ;; This function uses a non-reentrant model
  7259 ;;
  7260                           
  7261     0066                     ___wmul:	
  7262                           ;psect for function ___wmul
  7263                           
  7264     0066                     l2615:	
  7265                           ;incstack = 0
  7266                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7267                           
  7268     0066  01FB               	clrf	___wmul@product
  7269     0067  01FC               	clrf	___wmul@product+1
  7270     0068                     l2617:
  7271     0068  1C77               	btfss	___wmul@multiplier,0
  7272     0069  286B               	goto	u1381
  7273     006A  286C               	goto	u1380
  7274     006B                     u1381:
  7275     006B  2870               	goto	l847
  7276     006C                     u1380:
  7277     006C                     l2619:
  7278     006C  0879               	movf	___wmul@multiplicand,w
  7279     006D  07FB               	addwf	___wmul@product,f
  7280     006E  087A               	movf	___wmul@multiplicand+1,w
  7281     006F  3DFC               	addwfc	___wmul@product+1,f
  7282     0070                     l847:
  7283     0070  3001               	movlw	1
  7284     0071                     u1395:
  7285     0071  35F9               	lslf	___wmul@multiplicand,f
  7286     0072  0DFA               	rlf	___wmul@multiplicand+1,f
  7287     0073  0B89               	decfsz	9,f
  7288     0074  2871               	goto	u1395
  7289     0075                     l2621:
  7290     0075  3001               	movlw	1
  7291     0076                     u1405:
  7292     0076  36F8               	lsrf	___wmul@multiplier+1,f
  7293     0077  0CF7               	rrf	___wmul@multiplier,f
  7294     0078  0B89               	decfsz	9,f
  7295     0079  2876               	goto	u1405
  7296     007A                     l2623:
  7297     007A  0877               	movf	___wmul@multiplier,w
  7298     007B  0478               	iorwf	___wmul@multiplier+1,w
  7299     007C  1D03               	btfss	3,2
  7300     007D  287F               	goto	u1411
  7301     007E  2880               	goto	u1410
  7302     007F                     u1411:
  7303     007F  2868               	goto	l2617
  7304     0080                     u1410:
  7305     0080                     l2625:
  7306     0080  087C               	movf	___wmul@product+1,w
  7307     0081  00F8               	movwf	?___wmul+1
  7308     0082  087B               	movf	___wmul@product,w
  7309     0083  00F7               	movwf	?___wmul
  7310     0084                     l849:
  7311     0084  0008               	return
  7312     0085                     __end_of___wmul:
  7313                           
  7314                           	psect	text32
  7315     0F02                     __ptext32:	
  7316 ;; *************** function _ai_getInputField *****************
  7317 ;; Defined at:
  7318 ;;		line 102 in file "ai.c"
  7319 ;; Parameters:    Size  Location     Type
  7320 ;;		None
  7321 ;; Auto vars:     Size  Location     Type
  7322 ;;		None
  7323 ;; Return value:  Size  Location     Type
  7324 ;;                  1    wreg      PTR unsigned char 
  7325 ;; Registers used:
  7326 ;;		wreg
  7327 ;; Tracked objects:
  7328 ;;		On entry : 0/0
  7329 ;;		On exit  : 0/0
  7330 ;;		Unchanged: 0/0
  7331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7332 ;;      Params:         0       0       0       0       0       0
  7333 ;;      Locals:         0       0       0       0       0       0
  7334 ;;      Temps:          0       0       0       0       0       0
  7335 ;;      Totals:         0       0       0       0       0       0
  7336 ;;Total ram usage:        0 bytes
  7337 ;; Hardware stack levels used: 1
  7338 ;; This function calls:
  7339 ;;		Nothing
  7340 ;; This function is called by:
  7341 ;;		_main
  7342 ;; This function uses a non-reentrant model
  7343 ;;
  7344                           
  7345     0F02                     _ai_getInputField:	
  7346                           ;psect for function _ai_getInputField
  7347                           
  7348     0F02                     l2729:	
  7349                           ;incstack = 0
  7350                           ; Regs used in _ai_getInputField: [wreg]
  7351                           
  7352                           
  7353                           ;ai.c: 103:     return Y0;
  7354     0F02  30E0               	movlw	(low (_Y0| 0))& (0+255)
  7355     0F03                     l597:
  7356     0F03  0008               	return
  7357     0F04                     __end_of_ai_getInputField:
  7358                           
  7359                           	psect	text33
  7360     0F9C                     __ptext33:	
  7361 ;; *************** function _SYSTEM_Initialize *****************
  7362 ;; Defined at:
  7363 ;;		line 50 in file "mcc_generated_files/mcc.c"
  7364 ;; Parameters:    Size  Location     Type
  7365 ;;		None
  7366 ;; Auto vars:     Size  Location     Type
  7367 ;;		None
  7368 ;; Return value:  Size  Location     Type
  7369 ;;                  1    wreg      void 
  7370 ;; Registers used:
  7371 ;;		wreg, status,2, status,0, pclath, cstack
  7372 ;; Tracked objects:
  7373 ;;		On entry : 0/0
  7374 ;;		On exit  : 0/0
  7375 ;;		Unchanged: 0/0
  7376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7377 ;;      Params:         0       0       0       0       0       0
  7378 ;;      Locals:         0       0       0       0       0       0
  7379 ;;      Temps:          0       0       0       0       0       0
  7380 ;;      Totals:         0       0       0       0       0       0
  7381 ;;Total ram usage:        0 bytes
  7382 ;; Hardware stack levels used: 1
  7383 ;; Hardware stack levels required when called: 2
  7384 ;; This function calls:
  7385 ;;		_EUSART_Initialize
  7386 ;;		_OSCILLATOR_Initialize
  7387 ;;		_PIN_MANAGER_Initialize
  7388 ;;		_SPI1_Initialize
  7389 ;;		_WDT_Initialize
  7390 ;; This function is called by:
  7391 ;;		_main
  7392 ;; This function uses a non-reentrant model
  7393 ;;
  7394                           
  7395     0F9C                     _SYSTEM_Initialize:	
  7396                           ;psect for function _SYSTEM_Initialize
  7397                           
  7398     0F9C                     l2673:	
  7399                           ;incstack = 0
  7400                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7401                           
  7402                           
  7403                           ;mcc_generated_files/mcc.c: 53:     SPI1_Initialize();
  7404     0F9C  318F  274D  318F   	fcall	_SPI1_Initialize
  7405                           
  7406                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  7407     0F9F  3180  2034  318F   	fcall	_PIN_MANAGER_Initialize
  7408                           
  7409                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  7410     0FA2  318F  271E  318F   	fcall	_OSCILLATOR_Initialize
  7411                           
  7412                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  7413     0FA5  318F  2709  318F   	fcall	_WDT_Initialize
  7414                           
  7415                           ;mcc_generated_files/mcc.c: 57:     EUSART_Initialize();
  7416     0FA8  3180  2085  318F   	fcall	_EUSART_Initialize
  7417     0FAB                     l248:
  7418     0FAB  0008               	return
  7419     0FAC                     __end_of_SYSTEM_Initialize:
  7420                           
  7421                           	psect	text34
  7422     0F09                     __ptext34:	
  7423 ;; *************** function _WDT_Initialize *****************
  7424 ;; Defined at:
  7425 ;;		line 70 in file "mcc_generated_files/mcc.c"
  7426 ;; Parameters:    Size  Location     Type
  7427 ;;		None
  7428 ;; Auto vars:     Size  Location     Type
  7429 ;;		None
  7430 ;; Return value:  Size  Location     Type
  7431 ;;                  1    wreg      void 
  7432 ;; Registers used:
  7433 ;;		wreg
  7434 ;; Tracked objects:
  7435 ;;		On entry : 0/0
  7436 ;;		On exit  : 0/0
  7437 ;;		Unchanged: 0/0
  7438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7439 ;;      Params:         0       0       0       0       0       0
  7440 ;;      Locals:         0       0       0       0       0       0
  7441 ;;      Temps:          0       0       0       0       0       0
  7442 ;;      Totals:         0       0       0       0       0       0
  7443 ;;Total ram usage:        0 bytes
  7444 ;; Hardware stack levels used: 1
  7445 ;; This function calls:
  7446 ;;		Nothing
  7447 ;; This function is called by:
  7448 ;;		_SYSTEM_Initialize
  7449 ;; This function uses a non-reentrant model
  7450 ;;
  7451                           
  7452     0F09                     _WDT_Initialize:	
  7453                           ;psect for function _WDT_Initialize
  7454                           
  7455     0F09                     l2557:	
  7456                           ;incstack = 0
  7457                           ; Regs used in _WDT_Initialize: [wreg]
  7458                           
  7459                           
  7460                           ;mcc_generated_files/mcc.c: 73:     WDTCON = 0x16;
  7461     0F09  3016               	movlw	22
  7462     0F0A  0021               	movlb	1	; select bank1
  7463     0F0B  0097               	movwf	23	;volatile
  7464     0F0C                     l254:
  7465     0F0C  0008               	return
  7466     0F0D                     __end_of_WDT_Initialize:
  7467                           
  7468                           	psect	text35
  7469     0F4D                     __ptext35:	
  7470 ;; *************** function _SPI1_Initialize *****************
  7471 ;; Defined at:
  7472 ;;		line 62 in file "mcc_generated_files/spi1.c"
  7473 ;; Parameters:    Size  Location     Type
  7474 ;;		None
  7475 ;; Auto vars:     Size  Location     Type
  7476 ;;		None
  7477 ;; Return value:  Size  Location     Type
  7478 ;;                  1    wreg      void 
  7479 ;; Registers used:
  7480 ;;		wreg
  7481 ;; Tracked objects:
  7482 ;;		On entry : 0/0
  7483 ;;		On exit  : 0/0
  7484 ;;		Unchanged: 0/0
  7485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7486 ;;      Params:         0       0       0       0       0       0
  7487 ;;      Locals:         0       0       0       0       0       0
  7488 ;;      Temps:          0       0       0       0       0       0
  7489 ;;      Totals:         0       0       0       0       0       0
  7490 ;;Total ram usage:        0 bytes
  7491 ;; Hardware stack levels used: 1
  7492 ;; This function calls:
  7493 ;;		Nothing
  7494 ;; This function is called by:
  7495 ;;		_SYSTEM_Initialize
  7496 ;; This function uses a non-reentrant model
  7497 ;;
  7498                           
  7499     0F4D                     _SPI1_Initialize:	
  7500                           ;psect for function _SPI1_Initialize
  7501                           
  7502     0F4D                     l2545:	
  7503                           ;incstack = 0
  7504                           ; Regs used in _SPI1_Initialize: [wreg]
  7505                           
  7506                           
  7507                           ;mcc_generated_files/spi1.c: 65:     SSP1STAT = 0x40;
  7508     0F4D  3040               	movlw	64
  7509     0F4E  0024               	movlb	4	; select bank4
  7510     0F4F  0094               	movwf	20	;volatile
  7511                           
  7512                           ;mcc_generated_files/spi1.c: 66:     SSP1CON1 = 0x02;
  7513     0F50  3002               	movlw	2
  7514     0F51  0095               	movwf	21	;volatile
  7515                           
  7516                           ;mcc_generated_files/spi1.c: 67:     SSP1ADD = 0x01;
  7517     0F52  3001               	movlw	1
  7518     0F53  0092               	movwf	18	;volatile
  7519     0F54                     l2547:
  7520                           
  7521                           ;mcc_generated_files/spi1.c: 68:     TRISBbits.TRISB4 = 0;
  7522     0F54  0021               	movlb	1	; select bank1
  7523     0F55  120D               	bcf	13,4	;volatile
  7524     0F56                     l2549:
  7525                           
  7526                           ;mcc_generated_files/spi1.c: 69:     SSP1CON1bits.SSPEN = 0;
  7527     0F56  0024               	movlb	4	; select bank4
  7528     0F57  1295               	bcf	21,5	;volatile
  7529     0F58                     l187:
  7530     0F58  0008               	return
  7531     0F59                     __end_of_SPI1_Initialize:
  7532                           
  7533                           	psect	text36
  7534     0034                     __ptext36:	
  7535 ;; *************** function _PIN_MANAGER_Initialize *****************
  7536 ;; Defined at:
  7537 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  7538 ;; Parameters:    Size  Location     Type
  7539 ;;		None
  7540 ;; Auto vars:     Size  Location     Type
  7541 ;;		None
  7542 ;; Return value:  Size  Location     Type
  7543 ;;                  1    wreg      void 
  7544 ;; Registers used:
  7545 ;;		wreg, status,2
  7546 ;; Tracked objects:
  7547 ;;		On entry : 0/0
  7548 ;;		On exit  : 0/0
  7549 ;;		Unchanged: 0/0
  7550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7551 ;;      Params:         0       0       0       0       0       0
  7552 ;;      Locals:         0       0       0       0       0       0
  7553 ;;      Temps:          0       0       0       0       0       0
  7554 ;;      Totals:         0       0       0       0       0       0
  7555 ;;Total ram usage:        0 bytes
  7556 ;; Hardware stack levels used: 1
  7557 ;; This function calls:
  7558 ;;		Nothing
  7559 ;; This function is called by:
  7560 ;;		_SYSTEM_Initialize
  7561 ;; This function uses a non-reentrant model
  7562 ;;
  7563                           
  7564     0034                     _PIN_MANAGER_Initialize:	
  7565                           ;psect for function _PIN_MANAGER_Initialize
  7566                           
  7567     0034                     l2529:	
  7568                           ;incstack = 0
  7569                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  7570                           
  7571                           
  7572                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  7573     0034  0022               	movlb	2	; select bank2
  7574     0035  018C               	clrf	12	;volatile
  7575                           
  7576                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  7577     0036  018D               	clrf	13	;volatile
  7578     0037                     l2531:
  7579                           
  7580                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x37;
  7581     0037  3037               	movlw	55
  7582     0038  0021               	movlb	1	; select bank1
  7583     0039  008C               	movwf	12	;volatile
  7584     003A                     l2533:
  7585                           
  7586                           ;mcc_generated_files/pin_manager.c: 67:     TRISB = 0xEF;
  7587     003A  30EF               	movlw	239
  7588     003B  008D               	movwf	13	;volatile
  7589     003C                     l2535:
  7590                           
  7591                           ;mcc_generated_files/pin_manager.c: 72:     ANSELB = 0xC8;
  7592     003C  30C8               	movlw	200
  7593     003D  0023               	movlb	3	; select bank3
  7594     003E  008D               	movwf	13	;volatile
  7595     003F                     l2537:
  7596                           
  7597                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x1F;
  7598     003F  301F               	movlw	31
  7599     0040  008C               	movwf	12	;volatile
  7600                           
  7601                           ;mcc_generated_files/pin_manager.c: 78:     WPUB = 0x00;
  7602     0041  0024               	movlb	4	; select bank4
  7603     0042  018D               	clrf	13	;volatile
  7604                           
  7605                           ;mcc_generated_files/pin_manager.c: 79:     WPUA = 0x00;
  7606     0043  018C               	clrf	12	;volatile
  7607     0044                     l2539:
  7608                           
  7609                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  7610     0044  0021               	movlb	1	; select bank1
  7611     0045  1795               	bsf	21,7	;volatile
  7612     0046                     l2541:
  7613                           
  7614                           ;mcc_generated_files/pin_manager.c: 86:     APFCON0 = 0xC0;
  7615     0046  30C0               	movlw	192
  7616     0047  0022               	movlb	2	; select bank2
  7617     0048  009D               	movwf	29	;volatile
  7618     0049                     l2543:
  7619                           
  7620                           ;mcc_generated_files/pin_manager.c: 87:     APFCON1 = 0x01;
  7621     0049  3001               	movlw	1
  7622     004A  009E               	movwf	30	;volatile
  7623     004B                     l163:
  7624     004B  0008               	return
  7625     004C                     __end_of_PIN_MANAGER_Initialize:
  7626                           
  7627                           	psect	text37
  7628     0F1E                     __ptext37:	
  7629 ;; *************** function _OSCILLATOR_Initialize *****************
  7630 ;; Defined at:
  7631 ;;		line 60 in file "mcc_generated_files/mcc.c"
  7632 ;; Parameters:    Size  Location     Type
  7633 ;;		None
  7634 ;; Auto vars:     Size  Location     Type
  7635 ;;		None
  7636 ;; Return value:  Size  Location     Type
  7637 ;;                  1    wreg      void 
  7638 ;; Registers used:
  7639 ;;		wreg, status,2
  7640 ;; Tracked objects:
  7641 ;;		On entry : 0/0
  7642 ;;		On exit  : 0/0
  7643 ;;		Unchanged: 0/0
  7644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7645 ;;      Params:         0       0       0       0       0       0
  7646 ;;      Locals:         0       0       0       0       0       0
  7647 ;;      Temps:          0       0       0       0       0       0
  7648 ;;      Totals:         0       0       0       0       0       0
  7649 ;;Total ram usage:        0 bytes
  7650 ;; Hardware stack levels used: 1
  7651 ;; This function calls:
  7652 ;;		Nothing
  7653 ;; This function is called by:
  7654 ;;		_SYSTEM_Initialize
  7655 ;; This function uses a non-reentrant model
  7656 ;;
  7657                           
  7658     0F1E                     _OSCILLATOR_Initialize:	
  7659                           ;psect for function _OSCILLATOR_Initialize
  7660                           
  7661     0F1E                     l2551:	
  7662                           ;incstack = 0
  7663                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  7664                           
  7665                           
  7666                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x70;
  7667     0F1E  3070               	movlw	112
  7668     0F1F  0021               	movlb	1	; select bank1
  7669     0F20  0099               	movwf	25	;volatile
  7670     0F21                     l2553:
  7671                           
  7672                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x00;
  7673     0F21  0198               	clrf	24	;volatile
  7674     0F22                     l2555:
  7675                           
  7676                           ;mcc_generated_files/mcc.c: 67:     BORCON = 0x00;
  7677     0F22  0022               	movlb	2	; select bank2
  7678     0F23  0196               	clrf	22	;volatile
  7679     0F24                     l251:
  7680     0F24  0008               	return
  7681     0F25                     __end_of_OSCILLATOR_Initialize:
  7682                           
  7683                           	psect	text38
  7684     0085                     __ptext38:	
  7685 ;; *************** function _EUSART_Initialize *****************
  7686 ;; Defined at:
  7687 ;;		line 66 in file "mcc_generated_files/eusart.c"
  7688 ;; Parameters:    Size  Location     Type
  7689 ;;		None
  7690 ;; Auto vars:     Size  Location     Type
  7691 ;;		None
  7692 ;; Return value:  Size  Location     Type
  7693 ;;                  1    wreg      void 
  7694 ;; Registers used:
  7695 ;;		wreg, status,2, status,0, pclath, cstack
  7696 ;; Tracked objects:
  7697 ;;		On entry : 0/0
  7698 ;;		On exit  : 0/0
  7699 ;;		Unchanged: 0/0
  7700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7701 ;;      Params:         0       0       0       0       0       0
  7702 ;;      Locals:         0       0       0       0       0       0
  7703 ;;      Temps:          0       0       0       0       0       0
  7704 ;;      Totals:         0       0       0       0       0       0
  7705 ;;Total ram usage:        0 bytes
  7706 ;; Hardware stack levels used: 1
  7707 ;; Hardware stack levels required when called: 1
  7708 ;; This function calls:
  7709 ;;		_EUSART_SetErrorHandler
  7710 ;;		_EUSART_SetFramingErrorHandler
  7711 ;;		_EUSART_SetOverrunErrorHandler
  7712 ;; This function is called by:
  7713 ;;		_SYSTEM_Initialize
  7714 ;; This function uses a non-reentrant model
  7715 ;;
  7716                           
  7717     0085                     _EUSART_Initialize:	
  7718                           ;psect for function _EUSART_Initialize
  7719                           
  7720     0085                     l2517:	
  7721                           ;incstack = 0
  7722                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7723                           
  7724                           
  7725                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  7726     0085  3008               	movlw	8
  7727     0086  0023               	movlb	3	; select bank3
  7728     0087  009F               	movwf	31	;volatile
  7729                           
  7730                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
  7731     0088  3090               	movlw	144
  7732     0089  009D               	movwf	29	;volatile
  7733                           
  7734                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  7735     008A  3024               	movlw	36
  7736     008B  009E               	movwf	30	;volatile
  7737                           
  7738                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0x67;
  7739     008C  3067               	movlw	103
  7740     008D  009B               	movwf	27	;volatile
  7741     008E                     l2519:
  7742                           
  7743                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x00;
  7744     008E  019C               	clrf	28	;volatile
  7745     008F                     l2521:
  7746                           
  7747                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  7748     008F  3000               	movlw	0
  7749     0090  00F0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  7750     0091  3000               	movlw	0
  7751     0092  00F1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  7752     0093  318F  2718  3180   	fcall	_EUSART_SetFramingErrorHandler
  7753     0096                     l2523:
  7754                           
  7755                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  7756     0096  3000               	movlw	0
  7757     0097  00F0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  7758     0098  3000               	movlw	0
  7759     0099  00F1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  7760     009A  3180  2004  3180   	fcall	_EUSART_SetOverrunErrorHandler
  7761     009D                     l2525:
  7762                           
  7763                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  7764     009D  3000               	movlw	0
  7765     009E  00F0               	movwf	EUSART_SetErrorHandler@interruptHandler
  7766     009F  3000               	movlw	0
  7767     00A0  00F1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  7768     00A1  318F  2712  3180   	fcall	_EUSART_SetErrorHandler
  7769     00A4                     l2527:
  7770                           
  7771                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  7772     00A4  0020               	movlb	0	; select bank0
  7773     00A5  01E2               	clrf	_eusartRxLastError	;volatile
  7774     00A6                     l93:
  7775     00A6  0008               	return
  7776     00A7                     __end_of_EUSART_Initialize:
  7777                           
  7778                           	psect	text39
  7779     0004                     __ptext39:	
  7780 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  7781 ;; Defined at:
  7782 ;;		line 161 in file "mcc_generated_files/eusart.c"
  7783 ;; Parameters:    Size  Location     Type
  7784 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  7785 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  7786 ;; Auto vars:     Size  Location     Type
  7787 ;;		None
  7788 ;; Return value:  Size  Location     Type
  7789 ;;                  1    wreg      void 
  7790 ;; Registers used:
  7791 ;;		wreg
  7792 ;; Tracked objects:
  7793 ;;		On entry : 0/0
  7794 ;;		On exit  : 0/0
  7795 ;;		Unchanged: 0/0
  7796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7797 ;;      Params:         2       0       0       0       0       0
  7798 ;;      Locals:         0       0       0       0       0       0
  7799 ;;      Temps:          0       0       0       0       0       0
  7800 ;;      Totals:         2       0       0       0       0       0
  7801 ;;Total ram usage:        2 bytes
  7802 ;; Hardware stack levels used: 1
  7803 ;; This function calls:
  7804 ;;		Nothing
  7805 ;; This function is called by:
  7806 ;;		_EUSART_Initialize
  7807 ;; This function uses a non-reentrant model
  7808 ;;
  7809                           
  7810     0004                     _EUSART_SetOverrunErrorHandler:	
  7811                           ;psect for function _EUSART_SetOverrunErrorHandler
  7812                           
  7813     0004                     l2467:	
  7814                           ;incstack = 0
  7815                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  7816                           
  7817                           
  7818                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  7819     0004  0871               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  7820     0005  0020               	movlb	0	; select bank0
  7821     0006  00EC               	movwf	_EUSART_OverrunErrorHandler+1
  7822     0007  0870               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  7823     0008  00EB               	movwf	_EUSART_OverrunErrorHandler
  7824     0009                     l135:
  7825     0009  0008               	return
  7826     000A                     __end_of_EUSART_SetOverrunErrorHandler:
  7827                           
  7828                           	psect	text40
  7829     0F18                     __ptext40:	
  7830 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  7831 ;; Defined at:
  7832 ;;		line 157 in file "mcc_generated_files/eusart.c"
  7833 ;; Parameters:    Size  Location     Type
  7834 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  7835 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  7836 ;; Auto vars:     Size  Location     Type
  7837 ;;		None
  7838 ;; Return value:  Size  Location     Type
  7839 ;;                  1    wreg      void 
  7840 ;; Registers used:
  7841 ;;		wreg
  7842 ;; Tracked objects:
  7843 ;;		On entry : 0/0
  7844 ;;		On exit  : 0/0
  7845 ;;		Unchanged: 0/0
  7846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7847 ;;      Params:         2       0       0       0       0       0
  7848 ;;      Locals:         0       0       0       0       0       0
  7849 ;;      Temps:          0       0       0       0       0       0
  7850 ;;      Totals:         2       0       0       0       0       0
  7851 ;;Total ram usage:        2 bytes
  7852 ;; Hardware stack levels used: 1
  7853 ;; This function calls:
  7854 ;;		Nothing
  7855 ;; This function is called by:
  7856 ;;		_EUSART_Initialize
  7857 ;; This function uses a non-reentrant model
  7858 ;;
  7859                           
  7860     0F18                     _EUSART_SetFramingErrorHandler:	
  7861                           ;psect for function _EUSART_SetFramingErrorHandler
  7862                           
  7863     0F18                     l2465:	
  7864                           ;incstack = 0
  7865                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  7866                           
  7867                           
  7868                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  7869     0F18  0871               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  7870     0F19  0020               	movlb	0	; select bank0
  7871     0F1A  00EE               	movwf	_EUSART_FramingErrorHandler+1
  7872     0F1B  0870               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  7873     0F1C  00ED               	movwf	_EUSART_FramingErrorHandler
  7874     0F1D                     l132:
  7875     0F1D  0008               	return
  7876     0F1E                     __end_of_EUSART_SetFramingErrorHandler:
  7877                           
  7878                           	psect	text41
  7879     0F12                     __ptext41:	
  7880 ;; *************** function _EUSART_SetErrorHandler *****************
  7881 ;; Defined at:
  7882 ;;		line 165 in file "mcc_generated_files/eusart.c"
  7883 ;; Parameters:    Size  Location     Type
  7884 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  7885 ;;		 -> EUSART_DefaultErrorHandler(1), 
  7886 ;; Auto vars:     Size  Location     Type
  7887 ;;		None
  7888 ;; Return value:  Size  Location     Type
  7889 ;;                  1    wreg      void 
  7890 ;; Registers used:
  7891 ;;		wreg
  7892 ;; Tracked objects:
  7893 ;;		On entry : 0/0
  7894 ;;		On exit  : 0/0
  7895 ;;		Unchanged: 0/0
  7896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7897 ;;      Params:         2       0       0       0       0       0
  7898 ;;      Locals:         0       0       0       0       0       0
  7899 ;;      Temps:          0       0       0       0       0       0
  7900 ;;      Totals:         2       0       0       0       0       0
  7901 ;;Total ram usage:        2 bytes
  7902 ;; Hardware stack levels used: 1
  7903 ;; This function calls:
  7904 ;;		Nothing
  7905 ;; This function is called by:
  7906 ;;		_EUSART_Initialize
  7907 ;; This function uses a non-reentrant model
  7908 ;;
  7909                           
  7910     0F12                     _EUSART_SetErrorHandler:	
  7911                           ;psect for function _EUSART_SetErrorHandler
  7912                           
  7913     0F12                     l2469:	
  7914                           ;incstack = 0
  7915                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  7916                           
  7917                           
  7918                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  7919     0F12  0871               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  7920     0F13  0023               	movlb	3	; select bank3
  7921     0F14  00A8               	movwf	(_EUSART_ErrorHandler+1)^(0+384)
  7922     0F15  0870               	movf	EUSART_SetErrorHandler@interruptHandler,w
  7923     0F16  00A7               	movwf	_EUSART_ErrorHandler^(0+384)
  7924     0F17                     l138:
  7925     0F17  0008               	return
  7926     0F18                     __end_of_EUSART_SetErrorHandler:
  7927     007E                     btemp	set	126	;btemp
  7928     007E                     wtemp0	set	126
  7929     2100                     
  7930                           	psect	idloc
  7931                           
  7932                           ;Config register IDLOC0 @ 0x8000
  7933                           ;	unspecified, using default values
  7934     8000                     	org	32768
  7935     8000  3FFF               	dw	16383
  7936                           
  7937                           ;Config register IDLOC1 @ 0x8001
  7938                           ;	unspecified, using default values
  7939     8001                     	org	32769
  7940     8001  3FFF               	dw	16383
  7941                           
  7942                           ;Config register IDLOC2 @ 0x8002
  7943                           ;	unspecified, using default values
  7944     8002                     	org	32770
  7945     8002  3FFF               	dw	16383
  7946                           
  7947                           ;Config register IDLOC3 @ 0x8003
  7948                           ;	unspecified, using default values
  7949     8003                     	org	32771
  7950     8003  3FFF               	dw	16383
  7951                           
  7952                           	psect	config
  7953                           
  7954                           ;Config register CONFIG1 @ 0x8007
  7955                           ;	Oscillator Selection
  7956                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  7957                           ;	Watchdog Timer Enable
  7958                           ;	WDTE = OFF, WDT disabled
  7959                           ;	Power-up Timer Enable
  7960                           ;	PWRTE = OFF, PWRT disabled
  7961                           ;	MCLR Pin Function Select
  7962                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  7963                           ;	Flash Program Memory Code Protection
  7964                           ;	CP = OFF, Program memory code protection is disabled
  7965                           ;	Data Memory Code Protection
  7966                           ;	CPD = OFF, Data memory code protection is disabled
  7967                           ;	Brown-out Reset Enable
  7968                           ;	BOREN = ON, Brown-out Reset enabled
  7969                           ;	Clock Out Enable
  7970                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  7971                           ;	Internal/External Switchover
  7972                           ;	IESO = ON, Internal/External Switchover mode is enabled
  7973                           ;	Fail-Safe Clock Monitor Enable
  7974                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  7975     8007                     	org	32775
  7976     8007  3FE4               	dw	16356
  7977                           
  7978                           ;Config register CONFIG2 @ 0x8008
  7979                           ;	Flash Memory Self-Write Protection
  7980                           ;	WRT = OFF, Write protection off
  7981                           ;	PLL Enable
  7982                           ;	PLLEN = OFF, 4x PLL disabled
  7983                           ;	Stack Overflow/Underflow Reset Enable
  7984                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  7985                           ;	Brown-out Reset Voltage Selection
  7986                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  7987                           ;	Low-Voltage Programming Enable
  7988                           ;	LVP = ON, Low-voltage programming enabled
  7989     8008                     	org	32776
  7990     8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    36
    Data        8
    BSS         191
    Persistent  38
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     42      79
    BANK1            80      0      80
    BANK2            80      0      79
    BANK3            16      0       9
    BANK4             0      0       0

Pointer List with Targets:

    snake_getSurroundings@surroundings	PTR unsigned char  size(1) Largest target is 16
		 -> Y0(BANK1[16]), 

    sp__ai_getInputField	PTR unsigned char  size(1) Largest target is 16
		 -> Y0(BANK1[16]), 

    sp__snake_getField	PTR unsigned char  size(1) Largest target is 64
		 -> field(BANK1[64]), 

    main@field	PTR unsigned char  size(1) Largest target is 64
		 -> field(BANK1[64]), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    _snake_move->_rand
    _snake_initiate->_rand
    _rand->___lmul
    _sendMatrix->_txMAX7219
    _initMAX7219->_txMAX7219
    _txMAX7219->_SPI1_WriteByte
    _ai_run->___wmul
    _weights1_read->_eeprom_read
    _biases1_read->_eeprom_read
    _ai_propagate->_weights1_write
    _weights2_write->_eeprom_write
    _weights2_read->___bmul
    _weights2_read->_eeprom_read
    _weights1_write->___wmul
    _biases2_write->_eeprom_write
    _biases2_read->_eeprom_read
    _biases1_write->_eeprom_write
    _eeprom_write->___bmul
    ___wmul->_weights1_read
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _main in BANK0

    _main->_ai_propagate
    _snake_move->_snake_initiate
    _snake_initiate->_rand
    _ai_propagate->_weights1_write

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0   17003
                                             32 BANK0     10    10      0
                  _SYSTEM_Initialize
                   _ai_getInputField
                       _ai_propagate
                             _ai_run
                 _deactivateElevator
                        _initMAX7219
                           _ledClear
                             _ledSet
                         _sendMatrix
                     _snake_getField
              _snake_getFoodPosition
              _snake_getSurroundings
                     _snake_initiate
                         _snake_move
 ---------------------------------------------------------------------------------
 (1) _snake_move                                           5     5      0     720
                                              6 BANK0      5     5      0
                               _rand
                     _snake_initiate
 ---------------------------------------------------------------------------------
 (2) _snake_initiate                                       2     2      0     312
                                              4 BANK0      2     2      0
                               _rand
 ---------------------------------------------------------------------------------
 (3) _rand                                                 6     4      2     244
                                             12 COMMON     2     0      2
                                              0 BANK0      4     4      0
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     244
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _snake_getSurroundings                                5     5      0     588
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (1) _snake_getFoodPosition                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _snake_getField                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sendMatrix                                           5     5      0     935
                                              3 COMMON     5     5      0
                          _txMAX7219
 ---------------------------------------------------------------------------------
 (1) _ledSet                                               4     3      1     348
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _ledClear                                             4     3      1     196
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _initMAX7219                                          2     2      0     750
                                              3 COMMON     2     2      0
                          _txMAX7219
 ---------------------------------------------------------------------------------
 (2) _txMAX7219                                            2     1      1     750
                                              1 COMMON     2     1      1
                     _SPI1_WriteByte
 ---------------------------------------------------------------------------------
 (3) _SPI1_WriteByte                                       1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _deactivateElevator                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ai_run                                               9     9      0    3542
                                              0 BANK0      9     9      0
                            ___awdiv
                             ___wmul
                       _biases1_read
                       _biases2_read
                            _sigmoid
                      _weights1_read
                      _weights2_read
 ---------------------------------------------------------------------------------
 (2) _weights1_read                                        3     2      1     142
                                              4 COMMON     3     2      1
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (2) _sigmoid                                              2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _biases1_read                                         1     1      0      44
                                              4 COMMON     1     1      0
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     604
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _ai_propagate                                        29    29      0    8734
                                              3 BANK0     29    29      0
                             ___bmul
                             ___wmul
                      _biases1_write
                       _biases2_read
                      _biases2_write
                         _de_sigmoid
                     _weights1_write
                      _weights2_read
                     _weights2_write
 ---------------------------------------------------------------------------------
 (2) _weights2_write                                       3     1      2    1570
                                              8 COMMON     3     1      2
                             ___bmul
                       _eeprom_write
                      _weights2_read (ARG)
 ---------------------------------------------------------------------------------
 (2) _weights2_read                                        2     1      1     918
                                              4 COMMON     2     1      1
                             ___bmul
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     548
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _weights1_write                                       4     2      2    1022
                                             13 COMMON     1     1      0
                                              0 BANK0      3     1      2
                             ___wmul (ARG)
                       _eeprom_write
                      _weights2_read (ARG)
 ---------------------------------------------------------------------------------
 (2) _de_sigmoid                                           2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _biases2_write                                        2     1      1     848
                                              8 COMMON     2     1      1
                       _biases2_read (ARG)
                       _eeprom_write
 ---------------------------------------------------------------------------------
 (2) _biases2_read                                         1     1      0      44
                                              4 COMMON     1     1      0
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (3) _eeprom_read                                          4     4      0      22
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (2) _biases1_write                                        2     1      1     848
                                              8 COMMON     2     1      1
                       _biases2_read (ARG)
                       _eeprom_write
 ---------------------------------------------------------------------------------
 (3) _eeprom_write                                         4     3      1     652
                                              4 COMMON     4     3      1
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1004
                                              7 COMMON     6     2      4
                      _weights1_read (ARG)
                      _weights2_read (ARG)
 ---------------------------------------------------------------------------------
 (1) _ai_getInputField                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI1_Initialize
     _WDT_Initialize
   _ai_getInputField
   _ai_propagate
     ___bmul
     ___wmul
       _weights1_read (ARG)
         _eeprom_read
       _weights2_read (ARG)
         ___bmul
         _eeprom_read
     _biases1_write
       _biases2_read (ARG)
         _eeprom_read
       _eeprom_write (ARG)
         ___bmul (ARG)
     _biases2_read
     _biases2_write
       _biases2_read (ARG)
       _eeprom_write (ARG)
     _de_sigmoid
     _weights1_write
       ___wmul (ARG)
       _eeprom_write (ARG)
       _weights2_read (ARG)
     _weights2_read
     _weights2_write
       ___bmul
       _eeprom_write
       _weights2_read (ARG)
   _ai_run
     ___awdiv
     ___wmul
     _biases1_read
       _eeprom_read
     _biases2_read
     _sigmoid
     _weights1_read
     _weights2_read
   _deactivateElevator
   _initMAX7219
     _txMAX7219
       _SPI1_WriteByte
   _ledClear
   _ledSet
   _sendMatrix
     _txMAX7219
   _snake_getField
   _snake_getFoodPosition
   _snake_getSurroundings
   _snake_initiate
     _rand
       ___lmul
   _snake_move
     _rand
     _snake_initiate

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0     105       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     2A      4F       6       98.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      4F      10       98.8%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               10      0       9      12       56.2%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK4                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0     105      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Oct 08 03:34:01 2022

                           SPI1_WriteByte@byte 0070                           __end_of_ai_propagate 07B4  
                               ___bmul@product 0072                                             l93 00A6  
                                           _Y0 00E0                                             _Y1 0160  
                                           _Y2 0067                                             _Z1 014A  
                                           _Z2 004A                                   ___awdiv@sign 0076  
                          ___wmul@multiplicand 0079                           __end_of_biases1_read 0F33  
                         __end_of_biases2_read 0F2C                                            l132 0F1D  
                                          _DB1 01A0                                            _DB2 005A  
                                          l135 0009                                            l224 0F11  
                                          l321 0F7E                                            l138 0F17  
                                          l251 0F24                                            l163 004B  
                                          l413 00CE                                            l254 0F0C  
                                          l248 0FAB                                            l360 0058  
                                          l440 02D9                                            l361 005D  
                                          l370 0FED                                            l187 0F58  
                                          l611 0563                                            l363 0062  
                                          l443 0F05                                            l364 0065  
                                          l533 0FDC                                            l373 0FFF  
                                          l542 0F4C                                            l358 0053  
                                          l551 0F71                                            l615 07B3  
                                          l367 01CC                                            l536 0F43  
                                          l616 0572                                            l456 0374  
                                          l545 0F8C                                            l554 0F2B  
                                          l458 038F                                            l539 0F9B  
                                          l467 0F08                                            l660 0FBB  
                                          l548 0F32                                            l388 0126  
                                          l840 00E9                                            l817 000B  
                                          l657 0FCB                                            l843 00F8  
                                          l819 001E                                            l836 00D0  
                                          l597 0F03                                            l837 00D0  
                                          l861 0159                                            l847 0070  
                                          l849 0084                                            l873 0033  
                                          _DW1 2100                                            _DW2 0120  
                                          _DY1 013C                                            _DY2 0158  
               ?_EUSART_SetFramingErrorHandler 0070                                            wreg 0009  
                        __end_of_biases1_write 0F44                                   ?_initMAX7219 0070  
                        __end_of_biases2_write 0F4D                                           l1000 022B  
                                         l1311 018E                                           l3001 05E3  
                                         l3003 05E9                                           l3101 0752  
                                         l3021 0609                                           l3005 05ED  
                                         l3111 076E                                           l3103 0753  
                                         l3031 062D                                           l3015 05FA  
                                         l3023 060F                                           l3007 05F3  
                                         l3121 07AE                                           l3041 064B  
                                         l3033 0637                                           l3017 05FF  
                                         l3009 05F9                                           l3201 040B  
                                         l3115 0775                                           l3107 075A  
                                         l3043 0688                                           l3035 064A  
                                         l3019 0603                                           l3117 07A8  
                                         l3109 076C                                           l3053 0693  
                                         l3045 068C                                           l3029 0610  
                                         l3221 0435                                           l3213 040E  
                                         l2511 002B                                           l2503 0020  
                                         l3071 06F4                                           l3063 06BA  
                                         l3055 069E                                           l3047 0692  
                                         l3231 0457                                           l3223 043B  
                                         l3215 0423                                           l3207 040D  
                                         l3151 0390                                           l2521 008F  
                                         l2513 0032                                           l2505 0021  
                                         l3073 06FA                                           l3065 06EB  
                                         l3057 06B2                                           l3225 043F  
                                         l3217 042A                                           l3161 03A1  
                                         l3153 0393                                           l2523 0096  
                                         l2531 0037                                           l2603 0F26  
                                         l2611 0FAD                                           l2507 0025  
                                         l3091 0726                                           l3083 070C  
                                         l3075 06FE                                           l3059 06B3  
                                         l2451 0127                                           l3227 0445  
                                         l3219 0430                                           l3155 0396  
                                         l2525 009D                                           l2517 0085  
                                         l2541 0046                                           l2533 003A  
                                         l2621 0075                                           l2509 0029  
                                         l3093 0747                                           l3085 071D  
                                         l3077 0704                                           l3069 06F0  
                                         l2461 0151                                           l2453 012F  
                                         l3229 044A                                           l3181 03CA  
                                         l3173 03A3                                           l3157 0399  
                                         l2527 00A4                                           l2519 008E  
                                         l2551 0F1E                                           l2543 0049  
                                         l2535 003C                                           l2623 007A  
                                         l2615 0066                                           l3087 071F  
                                         l3079 0705                                           l2631 01CE  
                                         l2607 0FBD                                           l2471 0F0E  
                                         l2455 0133                                           l3191 03EC  
                                         l3183 03D0                                           l3175 03B8  
                                         l3167 03A2                                           l3159 039C  
                                         l2465 0F18                                           l2553 0F21  
                                         l2537 003F                                           l2529 0034  
                                         l2545 0F4D                                           l2625 0080  
                                         l2617 0068                                           l2481 00DE  
                                         l3097 074D                                           l2641 01E2  
                                         l2633 01D2                                           l2801 0494  
                                         l2721 010F                                           l2705 00FA  
                                         l2457 013B                                           l2473 015A  
                                         l3193 03EF                                           l3185 03D4  
                                         l3177 03BF                                           l2467 0004  
                                         l2555 0F22                                           l2539 0044  
                                         l2547 0F54                                           l2619 006C  
                                         l2491 00F0                                           l2483 00E2  
                                         l2651 01F6                                           l2643 01E6  
                                         l2635 01D7                                           l2811 04CD  
                                         l2803 04AF                                           l2723 0115  
                                         l2715 0102                                           l2707 0100  
                                         l2459 0142                                           l2475 017B  
                                         l2571 00B8                                           l3355 0292  
                                         l3195 03EF                                           l3187 03DA  
                                         l3179 03C5                                           l2469 0F12  
                                         l2549 0F56                                           l2557 0F09  
                                         l2493 00F1                                           l2485 00E4  
                                         l2661 0212                                           l2653 01FA  
                                         l2645 01E8                                           l2637 01D9  
                                         l2629 01CD                                           l2821 04E5  
                                         l2813 04D3                                           l2805 04B3  
                                         l2581 0059                                           l2725 011C  
                                         l2717 0104                                           l2709 0101  
                                         l2741 02E3                                           l2733 02DB  
                                         l2573 00C6                                           l2565 00A9  
                                         l3197 03FC                                           l3189 03DF  
                                         l2495 00F2                                           l2487 00E8  
                                         l2479 00D5                                           l2583 0FCE  
                                         l2663 0217                                           l2655 01FE  
                                         l2647 01EE                                           l2639 01DD  
                                         l2591 0F80                                           l2831 0509  
                                         l2807 04B9                                           l2727 0120  
                                         l2719 0109                                           l2751 0305  
                                         l2743 02E7                                           l2575 00C8  
                                         l2567 00AE                                           l2559 00A7  
                                         l2911 02A5                                           l2903 0285  
                                         l3199 0402                                           l2673 0F9C  
                                         l2729 0F02                                           l2497 00F7  
                                         l2489 00EC                                           l2585 0F3C  
                                         l2657 020D                                           l2649 01F1  
                                         l2665 021D                                           l2841 053F  
                                         l2833 0523                                           l2809 04C8  
                                         l2577 004D                                           l2681 01B6  
                                         l2761 033D                                           l2753 030E  
                                         l2745 02ED                                           l2569 00B2  
                                         l2921 02BB                                           l2913 02A9  
                                         l2499 0011                                           l2587 0F8E  
                                         l2667 0222                                           l2659 0211  
                                         l2595 0F2D                                           l2851 0548  
                                         l2843 0545                                           l2835 0527  
                                         l2827 04E6                                           l2819 04D4  
                                         l2675 0F72                                           l2579 004F  
                                         l2683 01C1                                           l2691 0FDE  
                                         l2771 035C                                           l2763 0349  
                                         l2755 0320                                           l2747 02F4  
                                         l2739 02DC                                           l2923 02BD  
                                         l2915 02B2                                           l2931 02D7  
                                         l2907 028A                                           l2589 0F45  
                                         l2669 0227                                           l2853 0556  
                                         l2845 0546                                           l2837 052D  
                                         l2829 04F2                                           l2685 01C6  
                                         l2677 018F                                           l2693 0FEF  
                                         l2781 0389                                           l2773 0365  
                                         l2765 035B                                           l2757 032B  
                                         l2749 02FE                                           l2925 02C1  
                                         l2909 02A0                                           l2599 0F66  
                                         l2951 0573                                           l2943 056C  
                                         l2855 0558                                           l2839 053A  
                                         l2791 0471                                           l2783 045D  
                                         l2679 0195                                           l2687 0F04  
                                         l2695 0F06                                           l2775 036B  
                                         l2759 0337                                           l2927 02C8  
                                         l2919 02B5                                           l2871 0238  
                                         l2863 022E                                           l2961 059D  
                                         l2953 0579                                           l2945 0571  
                                         l2857 055C                                           l2777 037D  
                                         l2929 02D1                                           l2881 024E  
                                         l2873 023E                                           l2963 05A1  
                                         l2939 0566                                           l2859 0562  
                                         l2699 00F9                                           l2779 0385  
                                         l2891 0264                                           l2883 0254  
                                         l2875 0242                                           l2965 05A7  
                                         l2797 0472                                           l2789 045F  
                                         l2893 0269                                           l2885 0257  
                                         l2877 0248                                           l2869 022F  
                                         l2991 05D7                                           l2983 05B8  
                                         l2975 05B2                                           l2967 05AB  
                                         l2959 057A                                           l2799 047D  
                                         l2887 025A                                           l2879 0249  
                                         l2993 05DD                                           l2985 05C9  
                                         l2977 05B7                                           l2969 05B1  
                                         l2897 0275                                           l2995 05E2  
                                         l2987 05CD                                           l2899 0278  
                                         l2989 05D3                  __end_of_snake_getSurroundings 0390  
                                         u2000 0725                                           u1200 0133  
                                         u2001 0724                                           u1201 0132  
                                         u1300 0032                                           u2020 0759  
                                         u2100 03DA                                           u1301 0031  
                                         u2021 0758                                           u2101 03D9  
                                         u2030 0774                                           u1230 0151  
                                         u1310 00B8                                           u2031 0773  
                                         u2015 072B                                           u1231 0150  
                                         u1215 013C                                           u1311 00B7  
                                         u1320 0058                                           u1240 0188  
                                         u1321 0057                                           u1225 0143  
                                         u1410 0080                                           u1250 00D5  
                                         u1330 0062                                           u2130 0423  
                                         u1411 007F                                           u1251 00D4  
                                         u1331 0061                                           u2131 0422  
                                         u2115 03E2                                           u1260 00E8  
                                         u1500 021D                                           u1420 01D2  
                                         u2140 043B                                           u1405 0076  
                                         u1261 00E7                                           u1501 021C  
                                         u1421 01D1                                           u1245 0184  
                                         u2141 043A                                           u2125 0411  
                                         _LATA 010C                                           u1270 00F7  
                                         u1510 0222                                           u1430 01DD  
                                         u2150 0445                                           _LATB 010D  
                                         u1271 00F6                                           u1511 0221  
                                         u1431 01DC                                           u2151 0444  
                                         u1280 0011                                           u1440 01EE  
                                         u1600 032B                                           u2080 03B8  
                                         u1281 0010                                           u1345 0FD3  
                                         u1441 01ED                                           u1601 032A  
                                         u2081 03B7                                           u1290 0025  
                                         u2090 03D0                                           u1291 0024  
                                         u1355 0F83                                           u2091 03CF  
                                         u2075 03A6                                           u1380 006C  
                                         u1460 01FE                                           u1700 0556  
                                         u1524 0FE3                                           u1540 0115  
                                         u1620 0349                                           u1381 006B  
                                         u1461 01FD                                           u1365 0FC0  
                                         u1701 0555                                           u1525 0FE2  
                                         u1541 0114                                           u1621 0348  
                                         u2165 044D                                           u1710 0562  
                                         u1534 0FF4                                           u1550 0126  
                                         u1630 036B                                           u1375 0FB0  
                                         u1455 01F2                                           u1711 0561  
                                         u1535 0FF3                                           u1551 0125  
                                         u1631 036A                                           u1615 0340  
                                         u2247 03F5                                           u1480 020D  
                                         u1640 037D                                           u1560 02ED  
                                         u1800 02A5                                           u1720 0238  
                                         u1481 020C                                           u2257 01BB  
                                         u1641 037C                                           u1561 02EC  
                                         u1801 02A4                                           u1721 0237  
                                         u1650 038F                                           u1570 02F4  
                                         u1810 02B2                                           u1730 0248  
                                         u1395 0071                                           u1475 01FF  
                                         u1651 038E                                           u1571 02F3  
                                         u1811 02B1                                           u1731 0247  
                                         u1900 05DD                                           u1660 04B9  
                                         u1580 030E                                           u1820 02BB  
                                         u1740 0254                                           u1901 05DC  
                                         u1485 0209                                           u1661 04B8  
                                         u1581 030D                                           u1821 02BA  
                                         u1741 0253                                           u1910 05E2  
                                         u1670 04D3                                           u1830 02D1  
                                         u1750 0263                                           u1911 05E1  
                                         u1495 0213                                           u1671 04D2  
                                         u1831 02D0                                           u1751 0262  
                                         u1920 05F3                                           u1840 056B  
                                         u1680 052D                                           u1921 05F2  
                                         u1841 056A                                           u1681 052C  
                                         u1930 0609                                           u1850 0571  
                                         u1690 0545                                           u1770 0274  
                                         u1931 0608                                           u1851 0570  
                                         u1691 0544                                           u1595 0323  
                                         u1771 0273                                           u1860 05A7  
                                         u1861 05A6                                           u1765 026C  
                                         u1950 0692                                           u1870 05B1  
                                         u1790 0284                                           u1951 0691  
                                         u1871 05B0                                           u1791 0283  
                                         u1960 06B9                                           u1961 06B8  
                                         u1945 0679                                           u1785 027B  
                                         u1970 06FA                                           u1890 05D3  
                                         u1971 06F9                                           u1891 05D2  
                                         u1980 0704                                           u1981 0703  
                                         u1885 05BB                                           u1990 070B  
                                         u1991 070A                                           _WPUA 020C  
                                         _WPUB 020D                                 ??_eeprom_write 0075  
                                         _main 0390                                           _rand 015A  
                                         _seed 0063                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           btemp 007E  
                                         start 0002                              ___bmul@multiplier 0073  
                              ??_weights1_read 0075                                ??_weights2_read 0075  
                   __end_of_deactivateElevator 0F7F                                biases1_read@add 0074  
                      ??_snake_getFoodPosition 0070                  __end_of_OSCILLATOR_Initialize 0F25  
                              biases2_read@add 0074                                          ?_main 0070  
                                        ?_rand 007C                                __end_of___awdiv 022C  
                                        _EEADR 0191                                ___awdiv@divisor 0070  
                              ___awdiv@counter 0075                                          _RCREG 0199  
                                        _RCSTA 019D                                          _TRISA 008C  
                                        _TRISB 008D                                          _TXREG 019A  
                                        _TXSTA 019E                            ___lmul@multiplicand 0074  
                                        _field 00A0                                 _WDT_Initialize 0F09  
                                        main@i 0046                                          main@j 0047  
                              __end_of_sigmoid 0FCC                                          status 0003  
                                        wtemp0 007E                                __initialization 07B4  
                             ??_weights1_write 007D                                   __end_of_main 045D  
                             ??_weights2_write 007A                                   __end_of_rand 018F  
                                       ??_main 0040                                         ??_rand 0020  
                       __end_of_WDT_Initialize 0F0D              _EUSART_DefaultFramingErrorHandler 0000  
                   _EUSART_OverrunErrorHandler 006B                                         _EEADRH 0192  
                                       _EEADRL 0191                                         _EEDATA 0193  
                                       _EEDATH 0194                                         _EEDATL 0193  
                                       _EECON1 0195                                         _EECON2 0196  
                             ___awdiv@dividend 0072                                         _ANSELA 018C  
                                       _ANSELB 018D                                         _BORCON 0116  
                            ?_ai_getInputField 0070                                         _OSCCON 0099  
                                       _SPBRGH 019C                                         _SPBRGL 019B  
                                       _WDTCON 0097                             ??_ai_getInputField 0070  
                             __end_of_ledClear 1000              snake_getSurroundings@surroundings 0074  
                                       ___bmul 001F                                         ___lmul 0127  
                                       ___wmul 0066                                      ??___awdiv 0074  
                                       _ai_run 045D                                         _choice 005E  
                                       _ledSet 0FDD                               _de_sigmoidValues 0800  
                                       _matrix 0052                               ___awdiv@quotient 0077  
                         __end_of_eeprom_write 00F9                               biases1_write@add 0079  
                             biases1_write@val 0078                                ?_WDT_Initialize 0070  
                                    ??_sigmoid 0070                                  ai_propagate@S 002C  
                                ai_propagate@i 0031                               biases2_write@add 0079  
                                ai_propagate@j 0036                                  ai_propagate@k 003F  
                             biases2_write@val 0078                                   _ai_propagate 0564  
                            _SYSTEM_Initialize 0F9C                                   _biases1_read 0F2C  
                                 _biases2_read 0F25                        __end_of__initialization 07FD  
                              eeprom_read@addr 0073                             ?_SYSTEM_Initialize 0070  
                          ___bmul@multiplicand 0070                                 __pcstackCOMMON 0070  
                                 __pidataBANK2 0F33                            ??_SYSTEM_Initialize 0072  
                            ??_SPI1_Initialize 0070                             _spi1_configuration 0820  
                               _OPTION_REGbits 0095                          __end_of_sigmoidValues 0820  
                            eeprom_write@value 0074                ??_EUSART_SetOverrunErrorHandler 0072  
                              snake_initiate@i 0025                      __end_of_SYSTEM_Initialize 0FAC  
                          snake_move@direction 0028                                   _headPosition 0060  
                                   __pbssBANK0 004A                                     __pbssBANK1 00A0  
                                   __pbssBANK2 0120                                     __pbssBANK3 01A0  
                        ai_propagate@incentive 0030                                     _de_sigmoid 0FAC  
                               _SPI1_WriteByte 0F0D                            snake_move@incentive 0029  
                                   __pmaintext 0390                                        ?___bmul 0070  
                                      ?___lmul 0070                                        ?___wmul 0077  
                                      ?_ai_run 0070                                    sendMatrix@b 0074  
                                  sendMatrix@i 0077                                    sendMatrix@j 0076  
                                      ?_ledSet 0070                                        _BAUDCON 019F  
                               ___lmul@product 0078                                        _APFCON0 011D  
                                      _APFCON1 011E                  __end_of_snake_getFoodPosition 0F09  
                         main@foodPosition_660 0045                             _deactivateElevator 0F72  
                                      _OSCTUNE 0098                                      ?_ledClear 0070  
                                      _SSP1ADD 0212                                        _SSP1BUF 0211  
                     ??_EUSART_SetErrorHandler 0072                            ?_deactivateElevator 0070  
                       __end_of_SPI1_WriteByte 0F12                          _snake_getSurroundings 02DA  
                            weights1_read@add1 0076                              weights1_read@add2 0074  
                             main@foodPosition 0044                          __end_of_weights1_read 0F8D  
                                      ___awdiv 01CD                          __end_of_weights2_read 0F72  
                            weights2_read@add1 0075                              weights2_read@add2 0074  
                         ??_deactivateElevator 0070                                        __ptext1 022C  
                                      __ptext2 00A7                                        __ptext3 015A  
                                      __ptext4 0127                                        __ptext5 02DA  
                                      __ptext6 0F06                                        __ptext7 0F04  
                                      __ptext8 00F9                                        __ptext9 0FDD  
                            __end_of_txMAX7219 0066                                        ai_run@i 0022  
                                      ai_run@j 0027                                        ai_run@z 0025  
                        _OSCILLATOR_Initialize 0F1E                                        _mapping 0167  
                     ??_PIN_MANAGER_Initialize 0070                                        _sigmoid 0FBC  
                                   ??_ledClear 0071                                        ledSet@c 0070  
                                      ledSet@l 0073                                        clrloop0 0F5A  
                         end_of_initialization 07FD                                     _sendMatrix 00F9  
                     __end_of_de_sigmoidValues 0810                                    ?_de_sigmoid 0070  
        __end_of_EUSART_SetOverrunErrorHandler 000A                  _EUSART_SetOverrunErrorHandler 0004  
                              ?_SPI1_WriteByte 0070                                   _eeprom_write 00CF  
                                  snake_move@i 002A                              _EUSART_Initialize 0085  
                            weights1_write@val 0021                             ?_EUSART_Initialize 0070  
                                    _RCSTAbits 019D                                     _snake_move 022C  
                               ai_propagate@dz 0038                              weights2_write@val 0079  
                          ??_EUSART_Initialize 0072                               ??_WDT_Initialize 0070  
                               txMAX7219@addr0 0072                                      _TRISAbits 008C  
                                    _TRISBbits 008D                                  _biases1_write 0F3B  
                                _biases2_write 0F44                         ?_snake_getSurroundings 0070  
                    __end_of_EUSART_Initialize 00A7                                _SPI1_Initialize 0F4D  
                                ??_eeprom_read 0070                                      _TXSTAbits 019E  
                                 _foodPosition 005F                                 _snake_getField 0F04  
                               __end_of___bmul 0034                                 __end_of___lmul 015A  
                   _EUSART_DefaultErrorHandler 0000                                 __end_of___wmul 0085  
                               __end_of_ai_run 0564                                 __end_of_ledSet 0FEE  
                       ?_OSCILLATOR_Initialize 0070                                 _snake_initiate 00A7  
                          start_initialization 07B4                                  ??_initMAX7219 0073  
                               ?_biases1_write 0078                                 ?_biases2_write 0078  
                                  ?_sendMatrix 0070                         __end_of_snake_getField 0F06  
               ?_EUSART_SetOverrunErrorHandler 0070                     _EUSART_FramingErrorHandler 006D  
                                     ??___bmul 0071                                       ??___lmul 0078  
                                  ?_snake_move 0070                                       ??___wmul 007B  
                       _EUSART_SetErrorHandler 0F12                            __end_of_eeprom_read 001F  
                                     ??_ai_run 0020                                       ??_ledSet 0071  
                                  __pdataBANK2 0167                         __end_of_snake_initiate 00CF  
                                  __pbssBIGRAM 2100                                      ___latbits 0001  
                                __pcstackBANK0 0020                        __end_of_SPI1_Initialize 0F59  
                             eeprom_write@addr 0077                            __end_of_initMAX7219 01CD  
                                    __pnvBANK0 006B                                      __pnvBANK3 01A7  
                              ?_snake_getField 0070                         _PIN_MANAGER_Initialize 0034  
                                     ?___awdiv 0070                               _ai_getInputField 0F02  
                              ?_snake_initiate 0070                                   sendMatrix@nb 0075  
                        _snake_getFoodPosition 0F06                                ??_biases1_write 0079  
                              ??_biases2_write 0079                                       ?_sigmoid 0070  
                             ??_SPI1_WriteByte 0070                                      _txMAX7219 004C  
                                 ??_de_sigmoid 0070                                 ___wmul@product 007B  
                                     _LATAbits 010C         EUSART_SetErrorHandler@interruptHandler 0070  
                                     _LATBbits 010D                                      clear_ram0 0F59  
                                  _eeprom_read 000A                              _eusartRxLastError 0062  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 0072  
                                    ledClear@c 0070                                      ledClear@l 0073  
                                    _snakeSize 0061                                       _SSP1CON1 0215  
                                     _SSP1CON2 0216              _EUSART_DefaultOverrunErrorHandler 0000  
                                     _SSP1STAT 0214                                  txMAX7219@dat0 0071  
                                    main@i_658 0048                              ___wmul@multiplier 0077  
                                    main@j_659 0049                             __end_of_de_sigmoid 0FBC  
                               _weights1_write 0FCC                                      main@field 0043  
                               _weights2_write 0F8D                                    _initMAX7219 018F  
                      ??_snake_getSurroundings 0070                                     ?_txMAX7219 0071  
                                _sigmoidValues 0810                               ?_SPI1_Initialize 0070  
                                ?_ai_propagate 0070                              ___lmul@multiplier 0070  
                                ?_biases1_read 0070                                  ?_biases2_read 0070  
                                   _EECON1bits 0195                                    ai_run@i_900 0023  
                                  ai_run@i_902 0024                                    ai_run@j_898 0028  
                      ??_OSCILLATOR_Initialize 0070                            _EUSART_ErrorHandler 01A7  
                       __end_of_weights1_write 0FDD                         __end_of_weights2_write 0F9C  
                       ?_snake_getFoodPosition 0070                         snake_getSurroundings@i 0072  
                       snake_getSurroundings@p 0071                              ai_propagate@i_910 0033  
                            ai_propagate@i_911 0034                              ai_propagate@i_920 003B  
                            ai_propagate@i_914 0039                              ai_propagate@i_916 0035  
                            ai_propagate@i_909 0032                              ai_propagate@i_918 003A  
                            ai_propagate@j_915 003C                              ai_propagate@j_908 0037  
                            ai_propagate@j_917 003D                              ai_propagate@j_919 003E  
                                  de_sigmoid@z 0071                                       _ledClear 0FEE  
                               ??_ai_propagate 0023                                       __ptext10 0FEE  
                                     __ptext11 018F                                       __ptext20 0564  
                                     __ptext12 004C                                       __ptext21 0F8D  
                                     __ptext13 0F0D                                       __ptext30 00CF  
                                     __ptext22 0F65                                       __ptext14 0F72  
                                     __ptext31 0066                                       __ptext23 001F  
                                     __ptext15 045D                                       __ptext40 0F18  
                                     __ptext32 0F02                                       __ptext24 0FCC  
                                     __ptext16 0F7F                                       __ptext41 0F12  
                                     __ptext33 0F9C                                       __ptext25 0FAC  
                                     __ptext17 0FBC                                       __ptext34 0F09  
                                     __ptext26 0F44                                       __ptext18 0F2C  
                                     __ptext35 0F4D                                       __ptext27 0F25  
                                     __ptext19 01CD                                       __ptext36 0034  
                                     __ptext28 000A                                       __ptext37 0F1E  
                                     __ptext29 0F3B                                       __ptext38 0085  
                                     __ptext39 0004                                   _SSP1CON1bits 0215  
                                 ??_sendMatrix 0073                                 ??_biases1_read 0074  
                               ??_biases2_read 0074                        ?_EUSART_SetErrorHandler 0070  
EUSART_SetOverrunErrorHandler@interruptHandler 0070                                   ??_snake_move 0026  
                                _weights1_read 0F7F                                  _weights2_read 0F65  
        __end_of_EUSART_SetFramingErrorHandler 0F1E                  _EUSART_SetFramingErrorHandler 0F18  
                           __end_of_sendMatrix 0127                                ?_weights1_write 0020  
                              ?_weights2_write 0078                                     _INTCONbits 000B  
                                  ??_txMAX7219 0072                       __end_of_ai_getInputField 0F04  
                             ??_snake_getField 0070                             __end_of_snake_move 02DA  
                      ?_PIN_MANAGER_Initialize 0070                 __end_of_EUSART_SetErrorHandler 0F18  
                           weights1_write@add1 0022                             weights1_write@add2 0020  
                                     sigmoid@z 0071                               ??_snake_initiate 0024  
                   snake_getSurroundings@i_782 0073                                 ?_weights1_read 0074  
                               ?_weights2_read 0074  EUSART_SetFramingErrorHandler@interruptHandler 0070  
                                __pstringtext1 0800                                  __pstringtext2 0810  
                                __pstringtext3 0820                             weights2_write@add1 007A  
                           weights2_write@add2 0078                 __end_of_PIN_MANAGER_Initialize 004C  
                                ?_eeprom_write 0074                                     _STATUSbits 0003  
                                 ?_eeprom_read 0070                     __end_of_spi1_configuration 0824  
