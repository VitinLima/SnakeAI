

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Oct 08 21:56:03 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,noexec
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    13                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2,group=1
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2,group=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2,group=1
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2,group=1
    55                           	psect	text38,local,class=CODE,merge=1,delta=2
    56                           	psect	text39,local,class=CODE,merge=1,delta=2
    57                           	psect	text40,local,class=CODE,merge=1,delta=2
    58                           	psect	text41,local,class=CODE,merge=1,delta=2
    59                           	psect	text42,local,class=CODE,merge=1,delta=2
    60                           	psect	text43,local,class=CODE,merge=1,delta=2
    61                           	psect	text44,local,class=CODE,merge=1,delta=2
    62                           	psect	text45,local,class=CODE,merge=1,delta=2
    63                           	psect	text46,local,class=CODE,merge=1,delta=2
    64                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    65                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    66                           	dabs	1,0x220,48
    67                           	dabs	1,0x1B0,64
    68                           	dabs	1,0x2100,0,_DW1
    69                           	dabs	1,0x7E,2
    70     0000                     
    71                           ; Version 2.40
    72                           ; Generated 17/11/2021 GMT
    73                           ; 
    74                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    75                           ; All rights reserved.
    76                           ; 
    77                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    78                           ; 
    79                           ; Redistribution and use in source and binary forms, with or without modification, are
    80                           ; permitted provided that the following conditions are met:
    81                           ; 
    82                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    83                           ;        conditions and the following disclaimer.
    84                           ; 
    85                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    86                           ;        of conditions and the following disclaimer in the documentation and/or other
    87                           ;        materials provided with the distribution. Publication is not required when
    88                           ;        this file is used in an embedded application.
    89                           ; 
    90                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    91                           ;        software without specific prior written permission.
    92                           ; 
    93                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    94                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    95                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    96                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    97                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    98                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    99                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   100                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   101                           ; 
   102                           ; 
   103                           ; Code-generator required, PIC16F1827 Definitions
   104                           ; 
   105                           ; SFR Addresses
   106     0000                     	;# 
   107     0001                     	;# 
   108     0002                     	;# 
   109     0003                     	;# 
   110     0004                     	;# 
   111     0005                     	;# 
   112     0006                     	;# 
   113     0007                     	;# 
   114     0008                     	;# 
   115     0009                     	;# 
   116     000A                     	;# 
   117     000B                     	;# 
   118     000C                     	;# 
   119     000D                     	;# 
   120     0011                     	;# 
   121     0012                     	;# 
   122     0013                     	;# 
   123     0014                     	;# 
   124     0015                     	;# 
   125     0016                     	;# 
   126     0016                     	;# 
   127     0017                     	;# 
   128     0018                     	;# 
   129     0019                     	;# 
   130     001A                     	;# 
   131     001B                     	;# 
   132     001C                     	;# 
   133     001E                     	;# 
   134     001F                     	;# 
   135     008C                     	;# 
   136     008D                     	;# 
   137     0091                     	;# 
   138     0092                     	;# 
   139     0093                     	;# 
   140     0094                     	;# 
   141     0095                     	;# 
   142     0096                     	;# 
   143     0097                     	;# 
   144     0098                     	;# 
   145     0099                     	;# 
   146     009A                     	;# 
   147     009B                     	;# 
   148     009B                     	;# 
   149     009C                     	;# 
   150     009D                     	;# 
   151     009E                     	;# 
   152     010C                     	;# 
   153     010D                     	;# 
   154     0111                     	;# 
   155     0112                     	;# 
   156     0113                     	;# 
   157     0114                     	;# 
   158     0115                     	;# 
   159     0116                     	;# 
   160     0117                     	;# 
   161     0118                     	;# 
   162     0119                     	;# 
   163     011A                     	;# 
   164     011B                     	;# 
   165     011D                     	;# 
   166     011E                     	;# 
   167     018C                     	;# 
   168     018D                     	;# 
   169     0191                     	;# 
   170     0191                     	;# 
   171     0192                     	;# 
   172     0193                     	;# 
   173     0193                     	;# 
   174     0193                     	;# 
   175     0194                     	;# 
   176     0195                     	;# 
   177     0196                     	;# 
   178     0199                     	;# 
   179     019A                     	;# 
   180     019B                     	;# 
   181     019B                     	;# 
   182     019B                     	;# 
   183     019B                     	;# 
   184     019C                     	;# 
   185     019C                     	;# 
   186     019D                     	;# 
   187     019E                     	;# 
   188     019F                     	;# 
   189     020C                     	;# 
   190     020D                     	;# 
   191     0211                     	;# 
   192     0211                     	;# 
   193     0212                     	;# 
   194     0212                     	;# 
   195     0213                     	;# 
   196     0213                     	;# 
   197     0214                     	;# 
   198     0214                     	;# 
   199     0215                     	;# 
   200     0215                     	;# 
   201     0215                     	;# 
   202     0216                     	;# 
   203     0216                     	;# 
   204     0217                     	;# 
   205     0217                     	;# 
   206     0219                     	;# 
   207     021A                     	;# 
   208     021B                     	;# 
   209     021C                     	;# 
   210     021D                     	;# 
   211     021E                     	;# 
   212     021F                     	;# 
   213     0291                     	;# 
   214     0291                     	;# 
   215     0292                     	;# 
   216     0293                     	;# 
   217     0294                     	;# 
   218     0295                     	;# 
   219     0295                     	;# 
   220     0296                     	;# 
   221     0298                     	;# 
   222     0298                     	;# 
   223     0299                     	;# 
   224     029A                     	;# 
   225     029B                     	;# 
   226     029C                     	;# 
   227     029C                     	;# 
   228     029D                     	;# 
   229     029E                     	;# 
   230     029E                     	;# 
   231     0311                     	;# 
   232     0311                     	;# 
   233     0312                     	;# 
   234     0313                     	;# 
   235     0318                     	;# 
   236     0318                     	;# 
   237     0319                     	;# 
   238     031A                     	;# 
   239     0394                     	;# 
   240     0395                     	;# 
   241     0396                     	;# 
   242     039A                     	;# 
   243     039C                     	;# 
   244     039D                     	;# 
   245     039E                     	;# 
   246     039F                     	;# 
   247     0415                     	;# 
   248     0416                     	;# 
   249     0417                     	;# 
   250     041C                     	;# 
   251     041D                     	;# 
   252     041E                     	;# 
   253     0FE4                     	;# 
   254     0FE5                     	;# 
   255     0FE6                     	;# 
   256     0FE7                     	;# 
   257     0FE8                     	;# 
   258     0FE9                     	;# 
   259     0FEA                     	;# 
   260     0FEB                     	;# 
   261     0FED                     	;# 
   262     0FEE                     	;# 
   263     0FEF                     	;# 
   264     0000                     	;# 
   265     0001                     	;# 
   266     0002                     	;# 
   267     0003                     	;# 
   268     0004                     	;# 
   269     0005                     	;# 
   270     0006                     	;# 
   271     0007                     	;# 
   272     0008                     	;# 
   273     0009                     	;# 
   274     000A                     	;# 
   275     000B                     	;# 
   276     000C                     	;# 
   277     000D                     	;# 
   278     0011                     	;# 
   279     0012                     	;# 
   280     0013                     	;# 
   281     0014                     	;# 
   282     0015                     	;# 
   283     0016                     	;# 
   284     0016                     	;# 
   285     0017                     	;# 
   286     0018                     	;# 
   287     0019                     	;# 
   288     001A                     	;# 
   289     001B                     	;# 
   290     001C                     	;# 
   291     001E                     	;# 
   292     001F                     	;# 
   293     008C                     	;# 
   294     008D                     	;# 
   295     0091                     	;# 
   296     0092                     	;# 
   297     0093                     	;# 
   298     0094                     	;# 
   299     0095                     	;# 
   300     0096                     	;# 
   301     0097                     	;# 
   302     0098                     	;# 
   303     0099                     	;# 
   304     009A                     	;# 
   305     009B                     	;# 
   306     009B                     	;# 
   307     009C                     	;# 
   308     009D                     	;# 
   309     009E                     	;# 
   310     010C                     	;# 
   311     010D                     	;# 
   312     0111                     	;# 
   313     0112                     	;# 
   314     0113                     	;# 
   315     0114                     	;# 
   316     0115                     	;# 
   317     0116                     	;# 
   318     0117                     	;# 
   319     0118                     	;# 
   320     0119                     	;# 
   321     011A                     	;# 
   322     011B                     	;# 
   323     011D                     	;# 
   324     011E                     	;# 
   325     018C                     	;# 
   326     018D                     	;# 
   327     0191                     	;# 
   328     0191                     	;# 
   329     0192                     	;# 
   330     0193                     	;# 
   331     0193                     	;# 
   332     0193                     	;# 
   333     0194                     	;# 
   334     0195                     	;# 
   335     0196                     	;# 
   336     0199                     	;# 
   337     019A                     	;# 
   338     019B                     	;# 
   339     019B                     	;# 
   340     019B                     	;# 
   341     019B                     	;# 
   342     019C                     	;# 
   343     019C                     	;# 
   344     019D                     	;# 
   345     019E                     	;# 
   346     019F                     	;# 
   347     020C                     	;# 
   348     020D                     	;# 
   349     0211                     	;# 
   350     0211                     	;# 
   351     0212                     	;# 
   352     0212                     	;# 
   353     0213                     	;# 
   354     0213                     	;# 
   355     0214                     	;# 
   356     0214                     	;# 
   357     0215                     	;# 
   358     0215                     	;# 
   359     0215                     	;# 
   360     0216                     	;# 
   361     0216                     	;# 
   362     0217                     	;# 
   363     0217                     	;# 
   364     0219                     	;# 
   365     021A                     	;# 
   366     021B                     	;# 
   367     021C                     	;# 
   368     021D                     	;# 
   369     021E                     	;# 
   370     021F                     	;# 
   371     0291                     	;# 
   372     0291                     	;# 
   373     0292                     	;# 
   374     0293                     	;# 
   375     0294                     	;# 
   376     0295                     	;# 
   377     0295                     	;# 
   378     0296                     	;# 
   379     0298                     	;# 
   380     0298                     	;# 
   381     0299                     	;# 
   382     029A                     	;# 
   383     029B                     	;# 
   384     029C                     	;# 
   385     029C                     	;# 
   386     029D                     	;# 
   387     029E                     	;# 
   388     029E                     	;# 
   389     0311                     	;# 
   390     0311                     	;# 
   391     0312                     	;# 
   392     0313                     	;# 
   393     0318                     	;# 
   394     0318                     	;# 
   395     0319                     	;# 
   396     031A                     	;# 
   397     0394                     	;# 
   398     0395                     	;# 
   399     0396                     	;# 
   400     039A                     	;# 
   401     039C                     	;# 
   402     039D                     	;# 
   403     039E                     	;# 
   404     039F                     	;# 
   405     0415                     	;# 
   406     0416                     	;# 
   407     0417                     	;# 
   408     041C                     	;# 
   409     041D                     	;# 
   410     041E                     	;# 
   411     0FE4                     	;# 
   412     0FE5                     	;# 
   413     0FE6                     	;# 
   414     0FE7                     	;# 
   415     0FE8                     	;# 
   416     0FE9                     	;# 
   417     0FEA                     	;# 
   418     0FEB                     	;# 
   419     0FED                     	;# 
   420     0FEE                     	;# 
   421     0FEF                     	;# 
   422     0000                     	;# 
   423     0001                     	;# 
   424     0002                     	;# 
   425     0003                     	;# 
   426     0004                     	;# 
   427     0005                     	;# 
   428     0006                     	;# 
   429     0007                     	;# 
   430     0008                     	;# 
   431     0009                     	;# 
   432     000A                     	;# 
   433     000B                     	;# 
   434     000C                     	;# 
   435     000D                     	;# 
   436     0011                     	;# 
   437     0012                     	;# 
   438     0013                     	;# 
   439     0014                     	;# 
   440     0015                     	;# 
   441     0016                     	;# 
   442     0016                     	;# 
   443     0017                     	;# 
   444     0018                     	;# 
   445     0019                     	;# 
   446     001A                     	;# 
   447     001B                     	;# 
   448     001C                     	;# 
   449     001E                     	;# 
   450     001F                     	;# 
   451     008C                     	;# 
   452     008D                     	;# 
   453     0091                     	;# 
   454     0092                     	;# 
   455     0093                     	;# 
   456     0094                     	;# 
   457     0095                     	;# 
   458     0096                     	;# 
   459     0097                     	;# 
   460     0098                     	;# 
   461     0099                     	;# 
   462     009A                     	;# 
   463     009B                     	;# 
   464     009B                     	;# 
   465     009C                     	;# 
   466     009D                     	;# 
   467     009E                     	;# 
   468     010C                     	;# 
   469     010D                     	;# 
   470     0111                     	;# 
   471     0112                     	;# 
   472     0113                     	;# 
   473     0114                     	;# 
   474     0115                     	;# 
   475     0116                     	;# 
   476     0117                     	;# 
   477     0118                     	;# 
   478     0119                     	;# 
   479     011A                     	;# 
   480     011B                     	;# 
   481     011D                     	;# 
   482     011E                     	;# 
   483     018C                     	;# 
   484     018D                     	;# 
   485     0191                     	;# 
   486     0191                     	;# 
   487     0192                     	;# 
   488     0193                     	;# 
   489     0193                     	;# 
   490     0193                     	;# 
   491     0194                     	;# 
   492     0195                     	;# 
   493     0196                     	;# 
   494     0199                     	;# 
   495     019A                     	;# 
   496     019B                     	;# 
   497     019B                     	;# 
   498     019B                     	;# 
   499     019B                     	;# 
   500     019C                     	;# 
   501     019C                     	;# 
   502     019D                     	;# 
   503     019E                     	;# 
   504     019F                     	;# 
   505     020C                     	;# 
   506     020D                     	;# 
   507     0211                     	;# 
   508     0211                     	;# 
   509     0212                     	;# 
   510     0212                     	;# 
   511     0213                     	;# 
   512     0213                     	;# 
   513     0214                     	;# 
   514     0214                     	;# 
   515     0215                     	;# 
   516     0215                     	;# 
   517     0215                     	;# 
   518     0216                     	;# 
   519     0216                     	;# 
   520     0217                     	;# 
   521     0217                     	;# 
   522     0219                     	;# 
   523     021A                     	;# 
   524     021B                     	;# 
   525     021C                     	;# 
   526     021D                     	;# 
   527     021E                     	;# 
   528     021F                     	;# 
   529     0291                     	;# 
   530     0291                     	;# 
   531     0292                     	;# 
   532     0293                     	;# 
   533     0294                     	;# 
   534     0295                     	;# 
   535     0295                     	;# 
   536     0296                     	;# 
   537     0298                     	;# 
   538     0298                     	;# 
   539     0299                     	;# 
   540     029A                     	;# 
   541     029B                     	;# 
   542     029C                     	;# 
   543     029C                     	;# 
   544     029D                     	;# 
   545     029E                     	;# 
   546     029E                     	;# 
   547     0311                     	;# 
   548     0311                     	;# 
   549     0312                     	;# 
   550     0313                     	;# 
   551     0318                     	;# 
   552     0318                     	;# 
   553     0319                     	;# 
   554     031A                     	;# 
   555     0394                     	;# 
   556     0395                     	;# 
   557     0396                     	;# 
   558     039A                     	;# 
   559     039C                     	;# 
   560     039D                     	;# 
   561     039E                     	;# 
   562     039F                     	;# 
   563     0415                     	;# 
   564     0416                     	;# 
   565     0417                     	;# 
   566     041C                     	;# 
   567     041D                     	;# 
   568     041E                     	;# 
   569     0FE4                     	;# 
   570     0FE5                     	;# 
   571     0FE6                     	;# 
   572     0FE7                     	;# 
   573     0FE8                     	;# 
   574     0FE9                     	;# 
   575     0FEA                     	;# 
   576     0FEB                     	;# 
   577     0FED                     	;# 
   578     0FEE                     	;# 
   579     0FEF                     	;# 
   580     0000                     	;# 
   581     0001                     	;# 
   582     0002                     	;# 
   583     0003                     	;# 
   584     0004                     	;# 
   585     0005                     	;# 
   586     0006                     	;# 
   587     0007                     	;# 
   588     0008                     	;# 
   589     0009                     	;# 
   590     000A                     	;# 
   591     000B                     	;# 
   592     000C                     	;# 
   593     000D                     	;# 
   594     0011                     	;# 
   595     0012                     	;# 
   596     0013                     	;# 
   597     0014                     	;# 
   598     0015                     	;# 
   599     0016                     	;# 
   600     0016                     	;# 
   601     0017                     	;# 
   602     0018                     	;# 
   603     0019                     	;# 
   604     001A                     	;# 
   605     001B                     	;# 
   606     001C                     	;# 
   607     001E                     	;# 
   608     001F                     	;# 
   609     008C                     	;# 
   610     008D                     	;# 
   611     0091                     	;# 
   612     0092                     	;# 
   613     0093                     	;# 
   614     0094                     	;# 
   615     0095                     	;# 
   616     0096                     	;# 
   617     0097                     	;# 
   618     0098                     	;# 
   619     0099                     	;# 
   620     009A                     	;# 
   621     009B                     	;# 
   622     009B                     	;# 
   623     009C                     	;# 
   624     009D                     	;# 
   625     009E                     	;# 
   626     010C                     	;# 
   627     010D                     	;# 
   628     0111                     	;# 
   629     0112                     	;# 
   630     0113                     	;# 
   631     0114                     	;# 
   632     0115                     	;# 
   633     0116                     	;# 
   634     0117                     	;# 
   635     0118                     	;# 
   636     0119                     	;# 
   637     011A                     	;# 
   638     011B                     	;# 
   639     011D                     	;# 
   640     011E                     	;# 
   641     018C                     	;# 
   642     018D                     	;# 
   643     0191                     	;# 
   644     0191                     	;# 
   645     0192                     	;# 
   646     0193                     	;# 
   647     0193                     	;# 
   648     0193                     	;# 
   649     0194                     	;# 
   650     0195                     	;# 
   651     0196                     	;# 
   652     0199                     	;# 
   653     019A                     	;# 
   654     019B                     	;# 
   655     019B                     	;# 
   656     019B                     	;# 
   657     019B                     	;# 
   658     019C                     	;# 
   659     019C                     	;# 
   660     019D                     	;# 
   661     019E                     	;# 
   662     019F                     	;# 
   663     020C                     	;# 
   664     020D                     	;# 
   665     0211                     	;# 
   666     0211                     	;# 
   667     0212                     	;# 
   668     0212                     	;# 
   669     0213                     	;# 
   670     0213                     	;# 
   671     0214                     	;# 
   672     0214                     	;# 
   673     0215                     	;# 
   674     0215                     	;# 
   675     0215                     	;# 
   676     0216                     	;# 
   677     0216                     	;# 
   678     0217                     	;# 
   679     0217                     	;# 
   680     0219                     	;# 
   681     021A                     	;# 
   682     021B                     	;# 
   683     021C                     	;# 
   684     021D                     	;# 
   685     021E                     	;# 
   686     021F                     	;# 
   687     0291                     	;# 
   688     0291                     	;# 
   689     0292                     	;# 
   690     0293                     	;# 
   691     0294                     	;# 
   692     0295                     	;# 
   693     0295                     	;# 
   694     0296                     	;# 
   695     0298                     	;# 
   696     0298                     	;# 
   697     0299                     	;# 
   698     029A                     	;# 
   699     029B                     	;# 
   700     029C                     	;# 
   701     029C                     	;# 
   702     029D                     	;# 
   703     029E                     	;# 
   704     029E                     	;# 
   705     0311                     	;# 
   706     0311                     	;# 
   707     0312                     	;# 
   708     0313                     	;# 
   709     0318                     	;# 
   710     0318                     	;# 
   711     0319                     	;# 
   712     031A                     	;# 
   713     0394                     	;# 
   714     0395                     	;# 
   715     0396                     	;# 
   716     039A                     	;# 
   717     039C                     	;# 
   718     039D                     	;# 
   719     039E                     	;# 
   720     039F                     	;# 
   721     0415                     	;# 
   722     0416                     	;# 
   723     0417                     	;# 
   724     041C                     	;# 
   725     041D                     	;# 
   726     041E                     	;# 
   727     0FE4                     	;# 
   728     0FE5                     	;# 
   729     0FE6                     	;# 
   730     0FE7                     	;# 
   731     0FE8                     	;# 
   732     0FE9                     	;# 
   733     0FEA                     	;# 
   734     0FEB                     	;# 
   735     0FED                     	;# 
   736     0FEE                     	;# 
   737     0FEF                     	;# 
   738     0000                     	;# 
   739     0001                     	;# 
   740     0002                     	;# 
   741     0003                     	;# 
   742     0004                     	;# 
   743     0005                     	;# 
   744     0006                     	;# 
   745     0007                     	;# 
   746     0008                     	;# 
   747     0009                     	;# 
   748     000A                     	;# 
   749     000B                     	;# 
   750     000C                     	;# 
   751     000D                     	;# 
   752     0011                     	;# 
   753     0012                     	;# 
   754     0013                     	;# 
   755     0014                     	;# 
   756     0015                     	;# 
   757     0016                     	;# 
   758     0016                     	;# 
   759     0017                     	;# 
   760     0018                     	;# 
   761     0019                     	;# 
   762     001A                     	;# 
   763     001B                     	;# 
   764     001C                     	;# 
   765     001E                     	;# 
   766     001F                     	;# 
   767     008C                     	;# 
   768     008D                     	;# 
   769     0091                     	;# 
   770     0092                     	;# 
   771     0093                     	;# 
   772     0094                     	;# 
   773     0095                     	;# 
   774     0096                     	;# 
   775     0097                     	;# 
   776     0098                     	;# 
   777     0099                     	;# 
   778     009A                     	;# 
   779     009B                     	;# 
   780     009B                     	;# 
   781     009C                     	;# 
   782     009D                     	;# 
   783     009E                     	;# 
   784     010C                     	;# 
   785     010D                     	;# 
   786     0111                     	;# 
   787     0112                     	;# 
   788     0113                     	;# 
   789     0114                     	;# 
   790     0115                     	;# 
   791     0116                     	;# 
   792     0117                     	;# 
   793     0118                     	;# 
   794     0119                     	;# 
   795     011A                     	;# 
   796     011B                     	;# 
   797     011D                     	;# 
   798     011E                     	;# 
   799     018C                     	;# 
   800     018D                     	;# 
   801     0191                     	;# 
   802     0191                     	;# 
   803     0192                     	;# 
   804     0193                     	;# 
   805     0193                     	;# 
   806     0193                     	;# 
   807     0194                     	;# 
   808     0195                     	;# 
   809     0196                     	;# 
   810     0199                     	;# 
   811     019A                     	;# 
   812     019B                     	;# 
   813     019B                     	;# 
   814     019B                     	;# 
   815     019B                     	;# 
   816     019C                     	;# 
   817     019C                     	;# 
   818     019D                     	;# 
   819     019E                     	;# 
   820     019F                     	;# 
   821     020C                     	;# 
   822     020D                     	;# 
   823     0211                     	;# 
   824     0211                     	;# 
   825     0212                     	;# 
   826     0212                     	;# 
   827     0213                     	;# 
   828     0213                     	;# 
   829     0214                     	;# 
   830     0214                     	;# 
   831     0215                     	;# 
   832     0215                     	;# 
   833     0215                     	;# 
   834     0216                     	;# 
   835     0216                     	;# 
   836     0217                     	;# 
   837     0217                     	;# 
   838     0219                     	;# 
   839     021A                     	;# 
   840     021B                     	;# 
   841     021C                     	;# 
   842     021D                     	;# 
   843     021E                     	;# 
   844     021F                     	;# 
   845     0291                     	;# 
   846     0291                     	;# 
   847     0292                     	;# 
   848     0293                     	;# 
   849     0294                     	;# 
   850     0295                     	;# 
   851     0295                     	;# 
   852     0296                     	;# 
   853     0298                     	;# 
   854     0298                     	;# 
   855     0299                     	;# 
   856     029A                     	;# 
   857     029B                     	;# 
   858     029C                     	;# 
   859     029C                     	;# 
   860     029D                     	;# 
   861     029E                     	;# 
   862     029E                     	;# 
   863     0311                     	;# 
   864     0311                     	;# 
   865     0312                     	;# 
   866     0313                     	;# 
   867     0318                     	;# 
   868     0318                     	;# 
   869     0319                     	;# 
   870     031A                     	;# 
   871     0394                     	;# 
   872     0395                     	;# 
   873     0396                     	;# 
   874     039A                     	;# 
   875     039C                     	;# 
   876     039D                     	;# 
   877     039E                     	;# 
   878     039F                     	;# 
   879     0415                     	;# 
   880     0416                     	;# 
   881     0417                     	;# 
   882     041C                     	;# 
   883     041D                     	;# 
   884     041E                     	;# 
   885     0FE4                     	;# 
   886     0FE5                     	;# 
   887     0FE6                     	;# 
   888     0FE7                     	;# 
   889     0FE8                     	;# 
   890     0FE9                     	;# 
   891     0FEA                     	;# 
   892     0FEB                     	;# 
   893     0FED                     	;# 
   894     0FEE                     	;# 
   895     0FEF                     	;# 
   896     0000                     	;# 
   897     0001                     	;# 
   898     0002                     	;# 
   899     0003                     	;# 
   900     0004                     	;# 
   901     0005                     	;# 
   902     0006                     	;# 
   903     0007                     	;# 
   904     0008                     	;# 
   905     0009                     	;# 
   906     000A                     	;# 
   907     000B                     	;# 
   908     000C                     	;# 
   909     000D                     	;# 
   910     0011                     	;# 
   911     0012                     	;# 
   912     0013                     	;# 
   913     0014                     	;# 
   914     0015                     	;# 
   915     0016                     	;# 
   916     0016                     	;# 
   917     0017                     	;# 
   918     0018                     	;# 
   919     0019                     	;# 
   920     001A                     	;# 
   921     001B                     	;# 
   922     001C                     	;# 
   923     001E                     	;# 
   924     001F                     	;# 
   925     008C                     	;# 
   926     008D                     	;# 
   927     0091                     	;# 
   928     0092                     	;# 
   929     0093                     	;# 
   930     0094                     	;# 
   931     0095                     	;# 
   932     0096                     	;# 
   933     0097                     	;# 
   934     0098                     	;# 
   935     0099                     	;# 
   936     009A                     	;# 
   937     009B                     	;# 
   938     009B                     	;# 
   939     009C                     	;# 
   940     009D                     	;# 
   941     009E                     	;# 
   942     010C                     	;# 
   943     010D                     	;# 
   944     0111                     	;# 
   945     0112                     	;# 
   946     0113                     	;# 
   947     0114                     	;# 
   948     0115                     	;# 
   949     0116                     	;# 
   950     0117                     	;# 
   951     0118                     	;# 
   952     0119                     	;# 
   953     011A                     	;# 
   954     011B                     	;# 
   955     011D                     	;# 
   956     011E                     	;# 
   957     018C                     	;# 
   958     018D                     	;# 
   959     0191                     	;# 
   960     0191                     	;# 
   961     0192                     	;# 
   962     0193                     	;# 
   963     0193                     	;# 
   964     0193                     	;# 
   965     0194                     	;# 
   966     0195                     	;# 
   967     0196                     	;# 
   968     0199                     	;# 
   969     019A                     	;# 
   970     019B                     	;# 
   971     019B                     	;# 
   972     019B                     	;# 
   973     019B                     	;# 
   974     019C                     	;# 
   975     019C                     	;# 
   976     019D                     	;# 
   977     019E                     	;# 
   978     019F                     	;# 
   979     020C                     	;# 
   980     020D                     	;# 
   981     0211                     	;# 
   982     0211                     	;# 
   983     0212                     	;# 
   984     0212                     	;# 
   985     0213                     	;# 
   986     0213                     	;# 
   987     0214                     	;# 
   988     0214                     	;# 
   989     0215                     	;# 
   990     0215                     	;# 
   991     0215                     	;# 
   992     0216                     	;# 
   993     0216                     	;# 
   994     0217                     	;# 
   995     0217                     	;# 
   996     0219                     	;# 
   997     021A                     	;# 
   998     021B                     	;# 
   999     021C                     	;# 
  1000     021D                     	;# 
  1001     021E                     	;# 
  1002     021F                     	;# 
  1003     0291                     	;# 
  1004     0291                     	;# 
  1005     0292                     	;# 
  1006     0293                     	;# 
  1007     0294                     	;# 
  1008     0295                     	;# 
  1009     0295                     	;# 
  1010     0296                     	;# 
  1011     0298                     	;# 
  1012     0298                     	;# 
  1013     0299                     	;# 
  1014     029A                     	;# 
  1015     029B                     	;# 
  1016     029C                     	;# 
  1017     029C                     	;# 
  1018     029D                     	;# 
  1019     029E                     	;# 
  1020     029E                     	;# 
  1021     0311                     	;# 
  1022     0311                     	;# 
  1023     0312                     	;# 
  1024     0313                     	;# 
  1025     0318                     	;# 
  1026     0318                     	;# 
  1027     0319                     	;# 
  1028     031A                     	;# 
  1029     0394                     	;# 
  1030     0395                     	;# 
  1031     0396                     	;# 
  1032     039A                     	;# 
  1033     039C                     	;# 
  1034     039D                     	;# 
  1035     039E                     	;# 
  1036     039F                     	;# 
  1037     0415                     	;# 
  1038     0416                     	;# 
  1039     0417                     	;# 
  1040     041C                     	;# 
  1041     041D                     	;# 
  1042     041E                     	;# 
  1043     0FE4                     	;# 
  1044     0FE5                     	;# 
  1045     0FE6                     	;# 
  1046     0FE7                     	;# 
  1047     0FE8                     	;# 
  1048     0FE9                     	;# 
  1049     0FEA                     	;# 
  1050     0FEB                     	;# 
  1051     0FED                     	;# 
  1052     0FEE                     	;# 
  1053     0FEF                     	;# 
  1054     0000                     	;# 
  1055     0001                     	;# 
  1056     0002                     	;# 
  1057     0003                     	;# 
  1058     0004                     	;# 
  1059     0005                     	;# 
  1060     0006                     	;# 
  1061     0007                     	;# 
  1062     0008                     	;# 
  1063     0009                     	;# 
  1064     000A                     	;# 
  1065     000B                     	;# 
  1066     000C                     	;# 
  1067     000D                     	;# 
  1068     0011                     	;# 
  1069     0012                     	;# 
  1070     0013                     	;# 
  1071     0014                     	;# 
  1072     0015                     	;# 
  1073     0016                     	;# 
  1074     0016                     	;# 
  1075     0017                     	;# 
  1076     0018                     	;# 
  1077     0019                     	;# 
  1078     001A                     	;# 
  1079     001B                     	;# 
  1080     001C                     	;# 
  1081     001E                     	;# 
  1082     001F                     	;# 
  1083     008C                     	;# 
  1084     008D                     	;# 
  1085     0091                     	;# 
  1086     0092                     	;# 
  1087     0093                     	;# 
  1088     0094                     	;# 
  1089     0095                     	;# 
  1090     0096                     	;# 
  1091     0097                     	;# 
  1092     0098                     	;# 
  1093     0099                     	;# 
  1094     009A                     	;# 
  1095     009B                     	;# 
  1096     009B                     	;# 
  1097     009C                     	;# 
  1098     009D                     	;# 
  1099     009E                     	;# 
  1100     010C                     	;# 
  1101     010D                     	;# 
  1102     0111                     	;# 
  1103     0112                     	;# 
  1104     0113                     	;# 
  1105     0114                     	;# 
  1106     0115                     	;# 
  1107     0116                     	;# 
  1108     0117                     	;# 
  1109     0118                     	;# 
  1110     0119                     	;# 
  1111     011A                     	;# 
  1112     011B                     	;# 
  1113     011D                     	;# 
  1114     011E                     	;# 
  1115     018C                     	;# 
  1116     018D                     	;# 
  1117     0191                     	;# 
  1118     0191                     	;# 
  1119     0192                     	;# 
  1120     0193                     	;# 
  1121     0193                     	;# 
  1122     0193                     	;# 
  1123     0194                     	;# 
  1124     0195                     	;# 
  1125     0196                     	;# 
  1126     0199                     	;# 
  1127     019A                     	;# 
  1128     019B                     	;# 
  1129     019B                     	;# 
  1130     019B                     	;# 
  1131     019B                     	;# 
  1132     019C                     	;# 
  1133     019C                     	;# 
  1134     019D                     	;# 
  1135     019E                     	;# 
  1136     019F                     	;# 
  1137     020C                     	;# 
  1138     020D                     	;# 
  1139     0211                     	;# 
  1140     0211                     	;# 
  1141     0212                     	;# 
  1142     0212                     	;# 
  1143     0213                     	;# 
  1144     0213                     	;# 
  1145     0214                     	;# 
  1146     0214                     	;# 
  1147     0215                     	;# 
  1148     0215                     	;# 
  1149     0215                     	;# 
  1150     0216                     	;# 
  1151     0216                     	;# 
  1152     0217                     	;# 
  1153     0217                     	;# 
  1154     0219                     	;# 
  1155     021A                     	;# 
  1156     021B                     	;# 
  1157     021C                     	;# 
  1158     021D                     	;# 
  1159     021E                     	;# 
  1160     021F                     	;# 
  1161     0291                     	;# 
  1162     0291                     	;# 
  1163     0292                     	;# 
  1164     0293                     	;# 
  1165     0294                     	;# 
  1166     0295                     	;# 
  1167     0295                     	;# 
  1168     0296                     	;# 
  1169     0298                     	;# 
  1170     0298                     	;# 
  1171     0299                     	;# 
  1172     029A                     	;# 
  1173     029B                     	;# 
  1174     029C                     	;# 
  1175     029C                     	;# 
  1176     029D                     	;# 
  1177     029E                     	;# 
  1178     029E                     	;# 
  1179     0311                     	;# 
  1180     0311                     	;# 
  1181     0312                     	;# 
  1182     0313                     	;# 
  1183     0318                     	;# 
  1184     0318                     	;# 
  1185     0319                     	;# 
  1186     031A                     	;# 
  1187     0394                     	;# 
  1188     0395                     	;# 
  1189     0396                     	;# 
  1190     039A                     	;# 
  1191     039C                     	;# 
  1192     039D                     	;# 
  1193     039E                     	;# 
  1194     039F                     	;# 
  1195     0415                     	;# 
  1196     0416                     	;# 
  1197     0417                     	;# 
  1198     041C                     	;# 
  1199     041D                     	;# 
  1200     041E                     	;# 
  1201     0FE4                     	;# 
  1202     0FE5                     	;# 
  1203     0FE6                     	;# 
  1204     0FE7                     	;# 
  1205     0FE8                     	;# 
  1206     0FE9                     	;# 
  1207     0FEA                     	;# 
  1208     0FEB                     	;# 
  1209     0FED                     	;# 
  1210     0FEE                     	;# 
  1211     0FEF                     	;# 
  1212     0000                     	;# 
  1213     0001                     	;# 
  1214     0002                     	;# 
  1215     0003                     	;# 
  1216     0004                     	;# 
  1217     0005                     	;# 
  1218     0006                     	;# 
  1219     0007                     	;# 
  1220     0008                     	;# 
  1221     0009                     	;# 
  1222     000A                     	;# 
  1223     000B                     	;# 
  1224     000C                     	;# 
  1225     000D                     	;# 
  1226     0011                     	;# 
  1227     0012                     	;# 
  1228     0013                     	;# 
  1229     0014                     	;# 
  1230     0015                     	;# 
  1231     0016                     	;# 
  1232     0016                     	;# 
  1233     0017                     	;# 
  1234     0018                     	;# 
  1235     0019                     	;# 
  1236     001A                     	;# 
  1237     001B                     	;# 
  1238     001C                     	;# 
  1239     001E                     	;# 
  1240     001F                     	;# 
  1241     008C                     	;# 
  1242     008D                     	;# 
  1243     0091                     	;# 
  1244     0092                     	;# 
  1245     0093                     	;# 
  1246     0094                     	;# 
  1247     0095                     	;# 
  1248     0096                     	;# 
  1249     0097                     	;# 
  1250     0098                     	;# 
  1251     0099                     	;# 
  1252     009A                     	;# 
  1253     009B                     	;# 
  1254     009B                     	;# 
  1255     009C                     	;# 
  1256     009D                     	;# 
  1257     009E                     	;# 
  1258     010C                     	;# 
  1259     010D                     	;# 
  1260     0111                     	;# 
  1261     0112                     	;# 
  1262     0113                     	;# 
  1263     0114                     	;# 
  1264     0115                     	;# 
  1265     0116                     	;# 
  1266     0117                     	;# 
  1267     0118                     	;# 
  1268     0119                     	;# 
  1269     011A                     	;# 
  1270     011B                     	;# 
  1271     011D                     	;# 
  1272     011E                     	;# 
  1273     018C                     	;# 
  1274     018D                     	;# 
  1275     0191                     	;# 
  1276     0191                     	;# 
  1277     0192                     	;# 
  1278     0193                     	;# 
  1279     0193                     	;# 
  1280     0193                     	;# 
  1281     0194                     	;# 
  1282     0195                     	;# 
  1283     0196                     	;# 
  1284     0199                     	;# 
  1285     019A                     	;# 
  1286     019B                     	;# 
  1287     019B                     	;# 
  1288     019B                     	;# 
  1289     019B                     	;# 
  1290     019C                     	;# 
  1291     019C                     	;# 
  1292     019D                     	;# 
  1293     019E                     	;# 
  1294     019F                     	;# 
  1295     020C                     	;# 
  1296     020D                     	;# 
  1297     0211                     	;# 
  1298     0211                     	;# 
  1299     0212                     	;# 
  1300     0212                     	;# 
  1301     0213                     	;# 
  1302     0213                     	;# 
  1303     0214                     	;# 
  1304     0214                     	;# 
  1305     0215                     	;# 
  1306     0215                     	;# 
  1307     0215                     	;# 
  1308     0216                     	;# 
  1309     0216                     	;# 
  1310     0217                     	;# 
  1311     0217                     	;# 
  1312     0219                     	;# 
  1313     021A                     	;# 
  1314     021B                     	;# 
  1315     021C                     	;# 
  1316     021D                     	;# 
  1317     021E                     	;# 
  1318     021F                     	;# 
  1319     0291                     	;# 
  1320     0291                     	;# 
  1321     0292                     	;# 
  1322     0293                     	;# 
  1323     0294                     	;# 
  1324     0295                     	;# 
  1325     0295                     	;# 
  1326     0296                     	;# 
  1327     0298                     	;# 
  1328     0298                     	;# 
  1329     0299                     	;# 
  1330     029A                     	;# 
  1331     029B                     	;# 
  1332     029C                     	;# 
  1333     029C                     	;# 
  1334     029D                     	;# 
  1335     029E                     	;# 
  1336     029E                     	;# 
  1337     0311                     	;# 
  1338     0311                     	;# 
  1339     0312                     	;# 
  1340     0313                     	;# 
  1341     0318                     	;# 
  1342     0318                     	;# 
  1343     0319                     	;# 
  1344     031A                     	;# 
  1345     0394                     	;# 
  1346     0395                     	;# 
  1347     0396                     	;# 
  1348     039A                     	;# 
  1349     039C                     	;# 
  1350     039D                     	;# 
  1351     039E                     	;# 
  1352     039F                     	;# 
  1353     0415                     	;# 
  1354     0416                     	;# 
  1355     0417                     	;# 
  1356     041C                     	;# 
  1357     041D                     	;# 
  1358     041E                     	;# 
  1359     0FE4                     	;# 
  1360     0FE5                     	;# 
  1361     0FE6                     	;# 
  1362     0FE7                     	;# 
  1363     0FE8                     	;# 
  1364     0FE9                     	;# 
  1365     0FEA                     	;# 
  1366     0FEB                     	;# 
  1367     0FED                     	;# 
  1368     0FEE                     	;# 
  1369     0FEF                     	;# 
  1370     0000                     	;# 
  1371     0001                     	;# 
  1372     0002                     	;# 
  1373     0003                     	;# 
  1374     0004                     	;# 
  1375     0005                     	;# 
  1376     0006                     	;# 
  1377     0007                     	;# 
  1378     0008                     	;# 
  1379     0009                     	;# 
  1380     000A                     	;# 
  1381     000B                     	;# 
  1382     000C                     	;# 
  1383     000D                     	;# 
  1384     0011                     	;# 
  1385     0012                     	;# 
  1386     0013                     	;# 
  1387     0014                     	;# 
  1388     0015                     	;# 
  1389     0016                     	;# 
  1390     0016                     	;# 
  1391     0017                     	;# 
  1392     0018                     	;# 
  1393     0019                     	;# 
  1394     001A                     	;# 
  1395     001B                     	;# 
  1396     001C                     	;# 
  1397     001E                     	;# 
  1398     001F                     	;# 
  1399     008C                     	;# 
  1400     008D                     	;# 
  1401     0091                     	;# 
  1402     0092                     	;# 
  1403     0093                     	;# 
  1404     0094                     	;# 
  1405     0095                     	;# 
  1406     0096                     	;# 
  1407     0097                     	;# 
  1408     0098                     	;# 
  1409     0099                     	;# 
  1410     009A                     	;# 
  1411     009B                     	;# 
  1412     009B                     	;# 
  1413     009C                     	;# 
  1414     009D                     	;# 
  1415     009E                     	;# 
  1416     010C                     	;# 
  1417     010D                     	;# 
  1418     0111                     	;# 
  1419     0112                     	;# 
  1420     0113                     	;# 
  1421     0114                     	;# 
  1422     0115                     	;# 
  1423     0116                     	;# 
  1424     0117                     	;# 
  1425     0118                     	;# 
  1426     0119                     	;# 
  1427     011A                     	;# 
  1428     011B                     	;# 
  1429     011D                     	;# 
  1430     011E                     	;# 
  1431     018C                     	;# 
  1432     018D                     	;# 
  1433     0191                     	;# 
  1434     0191                     	;# 
  1435     0192                     	;# 
  1436     0193                     	;# 
  1437     0193                     	;# 
  1438     0193                     	;# 
  1439     0194                     	;# 
  1440     0195                     	;# 
  1441     0196                     	;# 
  1442     0199                     	;# 
  1443     019A                     	;# 
  1444     019B                     	;# 
  1445     019B                     	;# 
  1446     019B                     	;# 
  1447     019B                     	;# 
  1448     019C                     	;# 
  1449     019C                     	;# 
  1450     019D                     	;# 
  1451     019E                     	;# 
  1452     019F                     	;# 
  1453     020C                     	;# 
  1454     020D                     	;# 
  1455     0211                     	;# 
  1456     0211                     	;# 
  1457     0212                     	;# 
  1458     0212                     	;# 
  1459     0213                     	;# 
  1460     0213                     	;# 
  1461     0214                     	;# 
  1462     0214                     	;# 
  1463     0215                     	;# 
  1464     0215                     	;# 
  1465     0215                     	;# 
  1466     0216                     	;# 
  1467     0216                     	;# 
  1468     0217                     	;# 
  1469     0217                     	;# 
  1470     0219                     	;# 
  1471     021A                     	;# 
  1472     021B                     	;# 
  1473     021C                     	;# 
  1474     021D                     	;# 
  1475     021E                     	;# 
  1476     021F                     	;# 
  1477     0291                     	;# 
  1478     0291                     	;# 
  1479     0292                     	;# 
  1480     0293                     	;# 
  1481     0294                     	;# 
  1482     0295                     	;# 
  1483     0295                     	;# 
  1484     0296                     	;# 
  1485     0298                     	;# 
  1486     0298                     	;# 
  1487     0299                     	;# 
  1488     029A                     	;# 
  1489     029B                     	;# 
  1490     029C                     	;# 
  1491     029C                     	;# 
  1492     029D                     	;# 
  1493     029E                     	;# 
  1494     029E                     	;# 
  1495     0311                     	;# 
  1496     0311                     	;# 
  1497     0312                     	;# 
  1498     0313                     	;# 
  1499     0318                     	;# 
  1500     0318                     	;# 
  1501     0319                     	;# 
  1502     031A                     	;# 
  1503     0394                     	;# 
  1504     0395                     	;# 
  1505     0396                     	;# 
  1506     039A                     	;# 
  1507     039C                     	;# 
  1508     039D                     	;# 
  1509     039E                     	;# 
  1510     039F                     	;# 
  1511     0415                     	;# 
  1512     0416                     	;# 
  1513     0417                     	;# 
  1514     041C                     	;# 
  1515     041D                     	;# 
  1516     041E                     	;# 
  1517     0FE4                     	;# 
  1518     0FE5                     	;# 
  1519     0FE6                     	;# 
  1520     0FE7                     	;# 
  1521     0FE8                     	;# 
  1522     0FE9                     	;# 
  1523     0FEA                     	;# 
  1524     0FEB                     	;# 
  1525     0FED                     	;# 
  1526     0FEE                     	;# 
  1527     0FEF                     	;# 
  1528     0000                     	;# 
  1529     0001                     	;# 
  1530     0002                     	;# 
  1531     0003                     	;# 
  1532     0004                     	;# 
  1533     0005                     	;# 
  1534     0006                     	;# 
  1535     0007                     	;# 
  1536     0008                     	;# 
  1537     0009                     	;# 
  1538     000A                     	;# 
  1539     000B                     	;# 
  1540     000C                     	;# 
  1541     000D                     	;# 
  1542     0011                     	;# 
  1543     0012                     	;# 
  1544     0013                     	;# 
  1545     0014                     	;# 
  1546     0015                     	;# 
  1547     0016                     	;# 
  1548     0016                     	;# 
  1549     0017                     	;# 
  1550     0018                     	;# 
  1551     0019                     	;# 
  1552     001A                     	;# 
  1553     001B                     	;# 
  1554     001C                     	;# 
  1555     001E                     	;# 
  1556     001F                     	;# 
  1557     008C                     	;# 
  1558     008D                     	;# 
  1559     0091                     	;# 
  1560     0092                     	;# 
  1561     0093                     	;# 
  1562     0094                     	;# 
  1563     0095                     	;# 
  1564     0096                     	;# 
  1565     0097                     	;# 
  1566     0098                     	;# 
  1567     0099                     	;# 
  1568     009A                     	;# 
  1569     009B                     	;# 
  1570     009B                     	;# 
  1571     009C                     	;# 
  1572     009D                     	;# 
  1573     009E                     	;# 
  1574     010C                     	;# 
  1575     010D                     	;# 
  1576     0111                     	;# 
  1577     0112                     	;# 
  1578     0113                     	;# 
  1579     0114                     	;# 
  1580     0115                     	;# 
  1581     0116                     	;# 
  1582     0117                     	;# 
  1583     0118                     	;# 
  1584     0119                     	;# 
  1585     011A                     	;# 
  1586     011B                     	;# 
  1587     011D                     	;# 
  1588     011E                     	;# 
  1589     018C                     	;# 
  1590     018D                     	;# 
  1591     0191                     	;# 
  1592     0191                     	;# 
  1593     0192                     	;# 
  1594     0193                     	;# 
  1595     0193                     	;# 
  1596     0193                     	;# 
  1597     0194                     	;# 
  1598     0195                     	;# 
  1599     0196                     	;# 
  1600     0199                     	;# 
  1601     019A                     	;# 
  1602     019B                     	;# 
  1603     019B                     	;# 
  1604     019B                     	;# 
  1605     019B                     	;# 
  1606     019C                     	;# 
  1607     019C                     	;# 
  1608     019D                     	;# 
  1609     019E                     	;# 
  1610     019F                     	;# 
  1611     020C                     	;# 
  1612     020D                     	;# 
  1613     0211                     	;# 
  1614     0211                     	;# 
  1615     0212                     	;# 
  1616     0212                     	;# 
  1617     0213                     	;# 
  1618     0213                     	;# 
  1619     0214                     	;# 
  1620     0214                     	;# 
  1621     0215                     	;# 
  1622     0215                     	;# 
  1623     0215                     	;# 
  1624     0216                     	;# 
  1625     0216                     	;# 
  1626     0217                     	;# 
  1627     0217                     	;# 
  1628     0219                     	;# 
  1629     021A                     	;# 
  1630     021B                     	;# 
  1631     021C                     	;# 
  1632     021D                     	;# 
  1633     021E                     	;# 
  1634     021F                     	;# 
  1635     0291                     	;# 
  1636     0291                     	;# 
  1637     0292                     	;# 
  1638     0293                     	;# 
  1639     0294                     	;# 
  1640     0295                     	;# 
  1641     0295                     	;# 
  1642     0296                     	;# 
  1643     0298                     	;# 
  1644     0298                     	;# 
  1645     0299                     	;# 
  1646     029A                     	;# 
  1647     029B                     	;# 
  1648     029C                     	;# 
  1649     029C                     	;# 
  1650     029D                     	;# 
  1651     029E                     	;# 
  1652     029E                     	;# 
  1653     0311                     	;# 
  1654     0311                     	;# 
  1655     0312                     	;# 
  1656     0313                     	;# 
  1657     0318                     	;# 
  1658     0318                     	;# 
  1659     0319                     	;# 
  1660     031A                     	;# 
  1661     0394                     	;# 
  1662     0395                     	;# 
  1663     0396                     	;# 
  1664     039A                     	;# 
  1665     039C                     	;# 
  1666     039D                     	;# 
  1667     039E                     	;# 
  1668     039F                     	;# 
  1669     0415                     	;# 
  1670     0416                     	;# 
  1671     0417                     	;# 
  1672     041C                     	;# 
  1673     041D                     	;# 
  1674     041E                     	;# 
  1675     0FE4                     	;# 
  1676     0FE5                     	;# 
  1677     0FE6                     	;# 
  1678     0FE7                     	;# 
  1679     0FE8                     	;# 
  1680     0FE9                     	;# 
  1681     0FEA                     	;# 
  1682     0FEB                     	;# 
  1683     0FED                     	;# 
  1684     0FEE                     	;# 
  1685     0FEF                     	;# 
  1686     0000                     	;# 
  1687     0001                     	;# 
  1688     0002                     	;# 
  1689     0003                     	;# 
  1690     0004                     	;# 
  1691     0005                     	;# 
  1692     0006                     	;# 
  1693     0007                     	;# 
  1694     0008                     	;# 
  1695     0009                     	;# 
  1696     000A                     	;# 
  1697     000B                     	;# 
  1698     000C                     	;# 
  1699     000D                     	;# 
  1700     0011                     	;# 
  1701     0012                     	;# 
  1702     0013                     	;# 
  1703     0014                     	;# 
  1704     0015                     	;# 
  1705     0016                     	;# 
  1706     0016                     	;# 
  1707     0017                     	;# 
  1708     0018                     	;# 
  1709     0019                     	;# 
  1710     001A                     	;# 
  1711     001B                     	;# 
  1712     001C                     	;# 
  1713     001E                     	;# 
  1714     001F                     	;# 
  1715     008C                     	;# 
  1716     008D                     	;# 
  1717     0091                     	;# 
  1718     0092                     	;# 
  1719     0093                     	;# 
  1720     0094                     	;# 
  1721     0095                     	;# 
  1722     0096                     	;# 
  1723     0097                     	;# 
  1724     0098                     	;# 
  1725     0099                     	;# 
  1726     009A                     	;# 
  1727     009B                     	;# 
  1728     009B                     	;# 
  1729     009C                     	;# 
  1730     009D                     	;# 
  1731     009E                     	;# 
  1732     010C                     	;# 
  1733     010D                     	;# 
  1734     0111                     	;# 
  1735     0112                     	;# 
  1736     0113                     	;# 
  1737     0114                     	;# 
  1738     0115                     	;# 
  1739     0116                     	;# 
  1740     0117                     	;# 
  1741     0118                     	;# 
  1742     0119                     	;# 
  1743     011A                     	;# 
  1744     011B                     	;# 
  1745     011D                     	;# 
  1746     011E                     	;# 
  1747     018C                     	;# 
  1748     018D                     	;# 
  1749     0191                     	;# 
  1750     0191                     	;# 
  1751     0192                     	;# 
  1752     0193                     	;# 
  1753     0193                     	;# 
  1754     0193                     	;# 
  1755     0194                     	;# 
  1756     0195                     	;# 
  1757     0196                     	;# 
  1758     0199                     	;# 
  1759     019A                     	;# 
  1760     019B                     	;# 
  1761     019B                     	;# 
  1762     019B                     	;# 
  1763     019B                     	;# 
  1764     019C                     	;# 
  1765     019C                     	;# 
  1766     019D                     	;# 
  1767     019E                     	;# 
  1768     019F                     	;# 
  1769     020C                     	;# 
  1770     020D                     	;# 
  1771     0211                     	;# 
  1772     0211                     	;# 
  1773     0212                     	;# 
  1774     0212                     	;# 
  1775     0213                     	;# 
  1776     0213                     	;# 
  1777     0214                     	;# 
  1778     0214                     	;# 
  1779     0215                     	;# 
  1780     0215                     	;# 
  1781     0215                     	;# 
  1782     0216                     	;# 
  1783     0216                     	;# 
  1784     0217                     	;# 
  1785     0217                     	;# 
  1786     0219                     	;# 
  1787     021A                     	;# 
  1788     021B                     	;# 
  1789     021C                     	;# 
  1790     021D                     	;# 
  1791     021E                     	;# 
  1792     021F                     	;# 
  1793     0291                     	;# 
  1794     0291                     	;# 
  1795     0292                     	;# 
  1796     0293                     	;# 
  1797     0294                     	;# 
  1798     0295                     	;# 
  1799     0295                     	;# 
  1800     0296                     	;# 
  1801     0298                     	;# 
  1802     0298                     	;# 
  1803     0299                     	;# 
  1804     029A                     	;# 
  1805     029B                     	;# 
  1806     029C                     	;# 
  1807     029C                     	;# 
  1808     029D                     	;# 
  1809     029E                     	;# 
  1810     029E                     	;# 
  1811     0311                     	;# 
  1812     0311                     	;# 
  1813     0312                     	;# 
  1814     0313                     	;# 
  1815     0318                     	;# 
  1816     0318                     	;# 
  1817     0319                     	;# 
  1818     031A                     	;# 
  1819     0394                     	;# 
  1820     0395                     	;# 
  1821     0396                     	;# 
  1822     039A                     	;# 
  1823     039C                     	;# 
  1824     039D                     	;# 
  1825     039E                     	;# 
  1826     039F                     	;# 
  1827     0415                     	;# 
  1828     0416                     	;# 
  1829     0417                     	;# 
  1830     041C                     	;# 
  1831     041D                     	;# 
  1832     041E                     	;# 
  1833     0FE4                     	;# 
  1834     0FE5                     	;# 
  1835     0FE6                     	;# 
  1836     0FE7                     	;# 
  1837     0FE8                     	;# 
  1838     0FE9                     	;# 
  1839     0FEA                     	;# 
  1840     0FEB                     	;# 
  1841     0FED                     	;# 
  1842     0FEE                     	;# 
  1843     0FEF                     	;# 
  1844     0000                     	;# 
  1845     0001                     	;# 
  1846     0002                     	;# 
  1847     0003                     	;# 
  1848     0004                     	;# 
  1849     0005                     	;# 
  1850     0006                     	;# 
  1851     0007                     	;# 
  1852     0008                     	;# 
  1853     0009                     	;# 
  1854     000A                     	;# 
  1855     000B                     	;# 
  1856     000C                     	;# 
  1857     000D                     	;# 
  1858     0011                     	;# 
  1859     0012                     	;# 
  1860     0013                     	;# 
  1861     0014                     	;# 
  1862     0015                     	;# 
  1863     0016                     	;# 
  1864     0016                     	;# 
  1865     0017                     	;# 
  1866     0018                     	;# 
  1867     0019                     	;# 
  1868     001A                     	;# 
  1869     001B                     	;# 
  1870     001C                     	;# 
  1871     001E                     	;# 
  1872     001F                     	;# 
  1873     008C                     	;# 
  1874     008D                     	;# 
  1875     0091                     	;# 
  1876     0092                     	;# 
  1877     0093                     	;# 
  1878     0094                     	;# 
  1879     0095                     	;# 
  1880     0096                     	;# 
  1881     0097                     	;# 
  1882     0098                     	;# 
  1883     0099                     	;# 
  1884     009A                     	;# 
  1885     009B                     	;# 
  1886     009B                     	;# 
  1887     009C                     	;# 
  1888     009D                     	;# 
  1889     009E                     	;# 
  1890     010C                     	;# 
  1891     010D                     	;# 
  1892     0111                     	;# 
  1893     0112                     	;# 
  1894     0113                     	;# 
  1895     0114                     	;# 
  1896     0115                     	;# 
  1897     0116                     	;# 
  1898     0117                     	;# 
  1899     0118                     	;# 
  1900     0119                     	;# 
  1901     011A                     	;# 
  1902     011B                     	;# 
  1903     011D                     	;# 
  1904     011E                     	;# 
  1905     018C                     	;# 
  1906     018D                     	;# 
  1907     0191                     	;# 
  1908     0191                     	;# 
  1909     0192                     	;# 
  1910     0193                     	;# 
  1911     0193                     	;# 
  1912     0193                     	;# 
  1913     0194                     	;# 
  1914     0195                     	;# 
  1915     0196                     	;# 
  1916     0199                     	;# 
  1917     019A                     	;# 
  1918     019B                     	;# 
  1919     019B                     	;# 
  1920     019B                     	;# 
  1921     019B                     	;# 
  1922     019C                     	;# 
  1923     019C                     	;# 
  1924     019D                     	;# 
  1925     019E                     	;# 
  1926     019F                     	;# 
  1927     020C                     	;# 
  1928     020D                     	;# 
  1929     0211                     	;# 
  1930     0211                     	;# 
  1931     0212                     	;# 
  1932     0212                     	;# 
  1933     0213                     	;# 
  1934     0213                     	;# 
  1935     0214                     	;# 
  1936     0214                     	;# 
  1937     0215                     	;# 
  1938     0215                     	;# 
  1939     0215                     	;# 
  1940     0216                     	;# 
  1941     0216                     	;# 
  1942     0217                     	;# 
  1943     0217                     	;# 
  1944     0219                     	;# 
  1945     021A                     	;# 
  1946     021B                     	;# 
  1947     021C                     	;# 
  1948     021D                     	;# 
  1949     021E                     	;# 
  1950     021F                     	;# 
  1951     0291                     	;# 
  1952     0291                     	;# 
  1953     0292                     	;# 
  1954     0293                     	;# 
  1955     0294                     	;# 
  1956     0295                     	;# 
  1957     0295                     	;# 
  1958     0296                     	;# 
  1959     0298                     	;# 
  1960     0298                     	;# 
  1961     0299                     	;# 
  1962     029A                     	;# 
  1963     029B                     	;# 
  1964     029C                     	;# 
  1965     029C                     	;# 
  1966     029D                     	;# 
  1967     029E                     	;# 
  1968     029E                     	;# 
  1969     0311                     	;# 
  1970     0311                     	;# 
  1971     0312                     	;# 
  1972     0313                     	;# 
  1973     0318                     	;# 
  1974     0318                     	;# 
  1975     0319                     	;# 
  1976     031A                     	;# 
  1977     0394                     	;# 
  1978     0395                     	;# 
  1979     0396                     	;# 
  1980     039A                     	;# 
  1981     039C                     	;# 
  1982     039D                     	;# 
  1983     039E                     	;# 
  1984     039F                     	;# 
  1985     0415                     	;# 
  1986     0416                     	;# 
  1987     0417                     	;# 
  1988     041C                     	;# 
  1989     041D                     	;# 
  1990     041E                     	;# 
  1991     0FE4                     	;# 
  1992     0FE5                     	;# 
  1993     0FE6                     	;# 
  1994     0FE7                     	;# 
  1995     0FE8                     	;# 
  1996     0FE9                     	;# 
  1997     0FEA                     	;# 
  1998     0FEB                     	;# 
  1999     0FED                     	;# 
  2000     0FEE                     	;# 
  2001     0FEF                     	;# 
  2002     0000                     	;# 
  2003     0001                     	;# 
  2004     0002                     	;# 
  2005     0003                     	;# 
  2006     0004                     	;# 
  2007     0005                     	;# 
  2008     0006                     	;# 
  2009     0007                     	;# 
  2010     0008                     	;# 
  2011     0009                     	;# 
  2012     000A                     	;# 
  2013     000B                     	;# 
  2014     000C                     	;# 
  2015     000D                     	;# 
  2016     0011                     	;# 
  2017     0012                     	;# 
  2018     0013                     	;# 
  2019     0014                     	;# 
  2020     0015                     	;# 
  2021     0016                     	;# 
  2022     0016                     	;# 
  2023     0017                     	;# 
  2024     0018                     	;# 
  2025     0019                     	;# 
  2026     001A                     	;# 
  2027     001B                     	;# 
  2028     001C                     	;# 
  2029     001E                     	;# 
  2030     001F                     	;# 
  2031     008C                     	;# 
  2032     008D                     	;# 
  2033     0091                     	;# 
  2034     0092                     	;# 
  2035     0093                     	;# 
  2036     0094                     	;# 
  2037     0095                     	;# 
  2038     0096                     	;# 
  2039     0097                     	;# 
  2040     0098                     	;# 
  2041     0099                     	;# 
  2042     009A                     	;# 
  2043     009B                     	;# 
  2044     009B                     	;# 
  2045     009C                     	;# 
  2046     009D                     	;# 
  2047     009E                     	;# 
  2048     010C                     	;# 
  2049     010D                     	;# 
  2050     0111                     	;# 
  2051     0112                     	;# 
  2052     0113                     	;# 
  2053     0114                     	;# 
  2054     0115                     	;# 
  2055     0116                     	;# 
  2056     0117                     	;# 
  2057     0118                     	;# 
  2058     0119                     	;# 
  2059     011A                     	;# 
  2060     011B                     	;# 
  2061     011D                     	;# 
  2062     011E                     	;# 
  2063     018C                     	;# 
  2064     018D                     	;# 
  2065     0191                     	;# 
  2066     0191                     	;# 
  2067     0192                     	;# 
  2068     0193                     	;# 
  2069     0193                     	;# 
  2070     0193                     	;# 
  2071     0194                     	;# 
  2072     0195                     	;# 
  2073     0196                     	;# 
  2074     0199                     	;# 
  2075     019A                     	;# 
  2076     019B                     	;# 
  2077     019B                     	;# 
  2078     019B                     	;# 
  2079     019B                     	;# 
  2080     019C                     	;# 
  2081     019C                     	;# 
  2082     019D                     	;# 
  2083     019E                     	;# 
  2084     019F                     	;# 
  2085     020C                     	;# 
  2086     020D                     	;# 
  2087     0211                     	;# 
  2088     0211                     	;# 
  2089     0212                     	;# 
  2090     0212                     	;# 
  2091     0213                     	;# 
  2092     0213                     	;# 
  2093     0214                     	;# 
  2094     0214                     	;# 
  2095     0215                     	;# 
  2096     0215                     	;# 
  2097     0215                     	;# 
  2098     0216                     	;# 
  2099     0216                     	;# 
  2100     0217                     	;# 
  2101     0217                     	;# 
  2102     0219                     	;# 
  2103     021A                     	;# 
  2104     021B                     	;# 
  2105     021C                     	;# 
  2106     021D                     	;# 
  2107     021E                     	;# 
  2108     021F                     	;# 
  2109     0291                     	;# 
  2110     0291                     	;# 
  2111     0292                     	;# 
  2112     0293                     	;# 
  2113     0294                     	;# 
  2114     0295                     	;# 
  2115     0295                     	;# 
  2116     0296                     	;# 
  2117     0298                     	;# 
  2118     0298                     	;# 
  2119     0299                     	;# 
  2120     029A                     	;# 
  2121     029B                     	;# 
  2122     029C                     	;# 
  2123     029C                     	;# 
  2124     029D                     	;# 
  2125     029E                     	;# 
  2126     029E                     	;# 
  2127     0311                     	;# 
  2128     0311                     	;# 
  2129     0312                     	;# 
  2130     0313                     	;# 
  2131     0318                     	;# 
  2132     0318                     	;# 
  2133     0319                     	;# 
  2134     031A                     	;# 
  2135     0394                     	;# 
  2136     0395                     	;# 
  2137     0396                     	;# 
  2138     039A                     	;# 
  2139     039C                     	;# 
  2140     039D                     	;# 
  2141     039E                     	;# 
  2142     039F                     	;# 
  2143     0415                     	;# 
  2144     0416                     	;# 
  2145     0417                     	;# 
  2146     041C                     	;# 
  2147     041D                     	;# 
  2148     041E                     	;# 
  2149     0FE4                     	;# 
  2150     0FE5                     	;# 
  2151     0FE6                     	;# 
  2152     0FE7                     	;# 
  2153     0FE8                     	;# 
  2154     0FE9                     	;# 
  2155     0FEA                     	;# 
  2156     0FEB                     	;# 
  2157     0FED                     	;# 
  2158     0FEE                     	;# 
  2159     0FEF                     	;_DW1
  2160                           
  2161 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  2162     0000                     
  2163 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  2164     0000                     
  2165 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  2166     0000                     
  2167                           	psect	idataBANK2
  2168     0D63                     __pidataBANK2:
  2169                           
  2170                           ;initializer for _mapping
  2171     0D63  3437               	retlw	55
  2172     0D64  343F               	retlw	63
  2173     0D65  3407               	retlw	7
  2174     0D66  3408               	retlw	8
  2175     0D67  3409               	retlw	9
  2176     0D68  3401               	retlw	1
  2177     0D69  3439               	retlw	57
  2178     0D6A  3438               	retlw	56
  2179                           
  2180                           	psect	stringtext1
  2181     0800                     __pstringtext1:
  2182     0800                     _de_sigmoidValues:
  2183     0800  3440               	retlw	64
  2184     0801  3432               	retlw	50
  2185     0802  341B               	retlw	27
  2186     0803  340C               	retlw	12
  2187     0804  3405               	retlw	5
  2188     0805  3402               	retlw	2
  2189     0806  3401               	retlw	1
  2190     0807  3400               	retlw	0
  2191     0808  3400               	retlw	0
  2192     0809  3400               	retlw	0
  2193     080A  3401               	retlw	1
  2194     080B  3402               	retlw	2
  2195     080C  3405               	retlw	5
  2196     080D  340C               	retlw	12
  2197     080E  341B               	retlw	27
  2198     080F  3432               	retlw	50
  2199     0810                     __end_of_de_sigmoidValues:
  2200                           
  2201                           	psect	stringtext2
  2202     0810                     __pstringtext2:
  2203     0810                     _sigmoidValues:
  2204     0810  3480               	retlw	128
  2205     0811  34BA               	retlw	186
  2206     0812  34E1               	retlw	225
  2207     0813  34F3               	retlw	243
  2208     0814  34FA               	retlw	250
  2209     0815  34FD               	retlw	253
  2210     0816  34FE               	retlw	254
  2211     0817  34FF               	retlw	255
  2212     0818  3400               	retlw	0
  2213     0819  3400               	retlw	0
  2214     081A  3401               	retlw	1
  2215     081B  3402               	retlw	2
  2216     081C  3405               	retlw	5
  2217     081D  340C               	retlw	12
  2218     081E  341E               	retlw	30
  2219     081F  3445               	retlw	69
  2220     0820                     __end_of_sigmoidValues:
  2221                           
  2222                           	psect	stringtext3
  2223     0820                     __pstringtext3:
  2224     0820                     _spi1_configuration:
  2225     0820  3402               	retlw	2
  2226     0821  3440               	retlw	64
  2227     0822  3401               	retlw	1
  2228     0823  3400               	retlw	0
  2229     0824                     __end_of_spi1_configuration:
  2230                           
  2231                           	psect	nvBANK2
  2232     0168                     __pnvBANK2:
  2233     0168                     _EUSART_ErrorHandler:
  2234     0168                     	ds	2
  2235     016A                     _EUSART_OverrunErrorHandler:
  2236     016A                     	ds	2
  2237     016C                     _EUSART_FramingErrorHandler:
  2238     016C                     	ds	2
  2239     0003                     _STATUSbits	set	3
  2240     0011                     _PIR1bits	set	17
  2241     000B                     _INTCONbits	set	11
  2242     008C                     _TRISAbits	set	140
  2243     0097                     _WDTCON	set	151
  2244     0098                     _OSCTUNE	set	152
  2245     0099                     _OSCCON	set	153
  2246     008D                     _TRISBbits	set	141
  2247     0095                     _OPTION_REGbits	set	149
  2248     008D                     _TRISB	set	141
  2249     008C                     _TRISA	set	140
  2250     010D                     _LATBbits	set	269
  2251     010C                     _LATAbits	set	268
  2252     0116                     _BORCON	set	278
  2253     011E                     _APFCON1	set	286
  2254     011D                     _APFCON0	set	285
  2255     010D                     _LATB	set	269
  2256     010C                     _LATA	set	268
  2257     0191                     _EEADR	set	401
  2258     0193                     _EEDATA	set	403
  2259     0195                     _EECON1	set	405
  2260     018C                     _ANSELA	set	396
  2261     018D                     _ANSELB	set	397
  2262     019A                     _TXREG	set	410
  2263     0199                     _RCREG	set	409
  2264     019D                     _RCSTAbits	set	413
  2265     019E                     _TXSTAbits	set	414
  2266     019C                     _SPBRGH	set	412
  2267     019B                     _SPBRGL	set	411
  2268     019E                     _TXSTA	set	414
  2269     019D                     _RCSTA	set	413
  2270     019F                     _BAUDCON	set	415
  2271     0196                     _EECON2	set	406
  2272     0193                     _EEDATL	set	403
  2273     0194                     _EEDATH	set	404
  2274     0195                     _EECON1bits	set	405
  2275     0192                     _EEADRH	set	402
  2276     0191                     _EEADRL	set	401
  2277     0211                     _SSP1BUF	set	529
  2278     0216                     _SSP1CON2	set	534
  2279     0215                     _SSP1CON1bits	set	533
  2280     0212                     _SSP1ADD	set	530
  2281     0215                     _SSP1CON1	set	533
  2282     0214                     _SSP1STAT	set	532
  2283     020C                     _WPUA	set	524
  2284     020D                     _WPUB	set	525
  2285                           
  2286                           	psect	cinit
  2287     07BC                     start_initialization:	
  2288                           ; #config settings
  2289                           
  2290     07BC                     __initialization:	;BIGRAM
  2291                           
  2292                           ; Initialize objects allocated to BANK2
  2293     07BC  3063               	movlw	low __pidataBANK2
  2294     07BD  0084               	movwf	4
  2295     07BE  308D               	movlw	(high __pidataBANK2)| (0+128)
  2296     07BF  0085               	movwf	5
  2297     07C0  0022               	movlb	2	; select bank2
  2298     07C1  0012               	moviw fsr0++
  2299     07C2  00E0               	movwf	__pdataBANK2& (0+127)
  2300     07C3  0012               	moviw fsr0++
  2301     07C4  00E1               	movwf	(__pdataBANK2+1)& (0+127)
  2302     07C5  0012               	moviw fsr0++
  2303     07C6  00E2               	movwf	(__pdataBANK2+2)& (0+127)
  2304     07C7  0012               	moviw fsr0++
  2305     07C8  00E3               	movwf	(__pdataBANK2+3)& (0+127)
  2306     07C9  0012               	moviw fsr0++
  2307     07CA  00E4               	movwf	(__pdataBANK2+4)& (0+127)
  2308     07CB  0012               	moviw fsr0++
  2309     07CC  00E5               	movwf	(__pdataBANK2+5)& (0+127)
  2310     07CD  0012               	moviw fsr0++
  2311     07CE  00E6               	movwf	(__pdataBANK2+6)& (0+127)
  2312     07CF  0012               	moviw fsr0++
  2313     07D0  00E7               	movwf	(__pdataBANK2+7)& (0+127)
  2314                           
  2315                           ; Clear objects allocated to BIGRAM
  2316     07D1  3000               	movlw	low (0+8448)
  2317     07D2  0084               	movwf	4
  2318     07D3  3021               	movlw	high (0+8448)
  2319     07D4  0085               	movwf	5
  2320     07D5  3070               	movlw	112
  2321     07D6  00FE               	movwf	btemp
  2322     07D7  3000               	movlw	0
  2323     07D8  00FF               	movwf	btemp+1
  2324     07D9  318D  258B  3187   	fcall	clear_ram0
  2325                           
  2326                           ; Clear objects allocated to BANK0
  2327     07DC  3056               	movlw	low __pbssBANK0
  2328     07DD  0084               	movwf	4
  2329     07DE  3000               	movlw	high __pbssBANK0
  2330     07DF  0085               	movwf	5
  2331     07E0  3019               	movlw	25
  2332     07E1  00FE               	movwf	btemp
  2333     07E2  3000               	movlw	0
  2334     07E3  00FF               	movwf	btemp+1
  2335     07E4  318D  258B  3187   	fcall	clear_ram0
  2336                           
  2337                           ; Clear objects allocated to BANK1
  2338     07E7  30A0               	movlw	low __pbssBANK1
  2339     07E8  0084               	movwf	4
  2340     07E9  3000               	movlw	high __pbssBANK1
  2341     07EA  0085               	movwf	5
  2342     07EB  3050               	movlw	80
  2343     07EC  00FE               	movwf	btemp
  2344     07ED  3000               	movlw	0
  2345     07EE  00FF               	movwf	btemp+1
  2346     07EF  318D  258B  3187   	fcall	clear_ram0
  2347                           
  2348                           ; Clear objects allocated to BANK2
  2349     07F2  3020               	movlw	low __pbssBANK2
  2350     07F3  0084               	movwf	4
  2351     07F4  3001               	movlw	high __pbssBANK2
  2352     07F5  0085               	movwf	5
  2353     07F6  3040               	movlw	64
  2354     07F7  00FE               	movwf	btemp
  2355     07F8  3000               	movlw	0
  2356     07F9  00FF               	movwf	btemp+1
  2357     07FA  318D  258B  3187   	fcall	clear_ram0
  2358     07FD                     end_of_initialization:	
  2359                           ;End of C runtime variable initialization code
  2360                           
  2361     07FD                     __end_of__initialization:
  2362     07FD  0020               	movlb	0
  2363     07FE  3183  2BC4         	ljmp	_main	;jump to C main() function
  2364                           
  2365                           	psect	bssBANK0
  2366     0056                     __pbssBANK0:
  2367     0056                     _DB2:
  2368     0056                     	ds	4
  2369     005A                     _DY2:
  2370     005A                     	ds	4
  2371     005E                     _Z2:
  2372     005E                     	ds	4
  2373     0062                     _Y2:
  2374     0062                     	ds	4
  2375     0066                     _foodPosition:
  2376     0066                     	ds	1
  2377     0067                     _headPosition:
  2378     0067                     	ds	1
  2379     0068                     _choice:
  2380     0068                     	ds	1
  2381     0069                     _snakeSize:
  2382     0069                     	ds	1
  2383     006A                     _eusartRxLastError:
  2384     006A                     	ds	1
  2385     006B                     _seed:
  2386     006B                     	ds	4
  2387                           
  2388                           	psect	bssBANK1
  2389     00A0                     __pbssBANK1:
  2390     00A0                     _field:
  2391     00A0                     	ds	64
  2392     00E0                     _Y0:
  2393     00E0                     	ds	16
  2394                           
  2395                           	psect	bssBANK2
  2396     0120                     __pbssBANK2:
  2397     0120                     _DW2:
  2398     0120                     	ds	28
  2399     013C                     _matrix:
  2400     013C                     	ds	8
  2401     0144                     _DB1:
  2402     0144                     	ds	7
  2403     014B                     _DY1:
  2404     014B                     	ds	7
  2405     0152                     _Z1:
  2406     0152                     	ds	7
  2407     0159                     _Y1:
  2408     0159                     	ds	7
  2409                           
  2410                           	psect	dataBANK2
  2411     0160                     __pdataBANK2:
  2412     0160                     _mapping:
  2413     0160                     	ds	8
  2414                           
  2415                           	psect	clrtext
  2416     0D8B                     clear_ram0:	
  2417                           ;	Called with FSR0 containing the base address, and
  2418                           ;	btemp/btemp+1 has the size to clear
  2419                           
  2420     0D8B  0064               	clrwdt	;clear the watchdog before getting into this loop
  2421     0D8C                     clrloop0:
  2422     0D8C  0180               	clrf	0	;clear RAM location pointed to by FSR
  2423     0D8D  3101               	addfsr 0,1
  2424     0D8E  3001               	movlw	1
  2425     0D8F  02FE               	subwf	btemp,f
  2426     0D90  3000               	movlw	0
  2427     0D91  3BFF               	subwfb	btemp+1,f
  2428     0D92  087F               	movf	btemp+1,w
  2429     0D93  047E               	iorwf	btemp,w
  2430     0D94  1D03               	skipz
  2431     0D95  2D8C               	goto	clrloop0	;have we reached the end yet?
  2432     0D96  3400               	retlw	0	;all done for this memory range, return
  2433                           
  2434                           	psect	cstackCOMMON
  2435     0070                     __pcstackCOMMON:
  2436     0070                     ?_EUSART_SetFramingErrorHandler:
  2437     0070                     ?_EUSART_SetOverrunErrorHandler:	
  2438                           ; 1 bytes @ 0x0
  2439                           
  2440     0070                     ?_EUSART_SetErrorHandler:	
  2441                           ; 1 bytes @ 0x0
  2442                           
  2443     0070                     ?_OSCILLATOR_Initialize:	
  2444                           ; 1 bytes @ 0x0
  2445                           
  2446     0070                     ??_OSCILLATOR_Initialize:	
  2447                           ; 1 bytes @ 0x0
  2448                           
  2449     0070                     ?_WDT_Initialize:	
  2450                           ; 1 bytes @ 0x0
  2451                           
  2452     0070                     ??_WDT_Initialize:	
  2453                           ; 1 bytes @ 0x0
  2454                           
  2455     0070                     ?_snake_initiate:	
  2456                           ; 1 bytes @ 0x0
  2457                           
  2458     0070                     ?_ai_initiate:	
  2459                           ; 1 bytes @ 0x0
  2460                           
  2461     0070                     ?_initMAX7219:	
  2462                           ; 1 bytes @ 0x0
  2463                           
  2464     0070                     ?_snake_getField:	
  2465                           ; 1 bytes @ 0x0
  2466                           
  2467     0070                     ??_snake_getField:	
  2468                           ; 1 bytes @ 0x0
  2469                           
  2470     0070                     ?_ledSet:	
  2471                           ; 1 bytes @ 0x0
  2472                           
  2473     0070                     ?_ledClear:	
  2474                           ; 1 bytes @ 0x0
  2475                           
  2476     0070                     ?_snake_getFoodPosition:	
  2477                           ; 1 bytes @ 0x0
  2478                           
  2479     0070                     ??_snake_getFoodPosition:	
  2480                           ; 1 bytes @ 0x0
  2481                           
  2482     0070                     ?_sendMatrix:	
  2483                           ; 1 bytes @ 0x0
  2484                           
  2485     0070                     ?_ai_is_ai_trained_read:	
  2486                           ; 1 bytes @ 0x0
  2487                           
  2488     0070                     ?_snake_getSurroundings:	
  2489                           ; 1 bytes @ 0x0
  2490                           
  2491     0070                     ??_snake_getSurroundings:	
  2492                           ; 1 bytes @ 0x0
  2493                           
  2494     0070                     ?_ai_getInputField:	
  2495                           ; 1 bytes @ 0x0
  2496                           
  2497     0070                     ??_ai_getInputField:	
  2498                           ; 1 bytes @ 0x0
  2499                           
  2500     0070                     ?_ai_propagate:	
  2501                           ; 1 bytes @ 0x0
  2502                           
  2503     0070                     ?_snake_move:	
  2504                           ; 1 bytes @ 0x0
  2505                           
  2506     0070                     ?_ai_run:	
  2507                           ; 1 bytes @ 0x0
  2508                           
  2509     0070                     ?_ai_is_ai_trained_write:	
  2510                           ; 1 bytes @ 0x0
  2511                           
  2512     0070                     ?_eeprom_read:	
  2513                           ; 1 bytes @ 0x0
  2514                           
  2515     0070                     ??_eeprom_read:	
  2516                           ; 1 bytes @ 0x0
  2517                           
  2518     0070                     ?_sigmoid:	
  2519                           ; 1 bytes @ 0x0
  2520                           
  2521     0070                     ??_sigmoid:	
  2522                           ; 1 bytes @ 0x0
  2523                           
  2524     0070                     ?_de_sigmoid:	
  2525                           ; 1 bytes @ 0x0
  2526                           
  2527     0070                     ??_de_sigmoid:	
  2528                           ; 1 bytes @ 0x0
  2529                           
  2530     0070                     ?_EUSART_Initialize:	
  2531                           ; 1 bytes @ 0x0
  2532                           
  2533     0070                     ?_PIN_MANAGER_Initialize:	
  2534                           ; 1 bytes @ 0x0
  2535                           
  2536     0070                     ??_PIN_MANAGER_Initialize:	
  2537                           ; 1 bytes @ 0x0
  2538                           
  2539     0070                     ?_SPI1_Initialize:	
  2540                           ; 1 bytes @ 0x0
  2541                           
  2542     0070                     ??_SPI1_Initialize:	
  2543                           ; 1 bytes @ 0x0
  2544                           
  2545     0070                     ?_SPI1_WriteByte:	
  2546                           ; 1 bytes @ 0x0
  2547                           
  2548     0070                     ??_SPI1_WriteByte:	
  2549                           ; 1 bytes @ 0x0
  2550                           
  2551     0070                     ?_SYSTEM_Initialize:	
  2552                           ; 1 bytes @ 0x0
  2553                           
  2554     0070                     ?_deactivateElevator:	
  2555                           ; 1 bytes @ 0x0
  2556                           
  2557     0070                     ??_deactivateElevator:	
  2558                           ; 1 bytes @ 0x0
  2559                           
  2560     0070                     ?_main:	
  2561                           ; 1 bytes @ 0x0
  2562                           
  2563     0070                     ?_biases1_read:	
  2564                           ; 1 bytes @ 0x0
  2565                           
  2566     0070                     ?_biases2_read:	
  2567                           ; 1 bytes @ 0x0
  2568                           
  2569     0070                     ?___bmul:	
  2570                           ; 1 bytes @ 0x0
  2571                           
  2572     0070                     ?___awmod:	
  2573                           ; 1 bytes @ 0x0
  2574                           
  2575     0070                     ?___lmul:	
  2576                           ; 2 bytes @ 0x0
  2577                           
  2578     0070                     SPI1_WriteByte@byte:	
  2579                           ; 4 bytes @ 0x0
  2580                           
  2581     0070                     ledSet@c:	
  2582                           ; 1 bytes @ 0x0
  2583                           
  2584     0070                     ledClear@c:	
  2585                           ; 1 bytes @ 0x0
  2586                           
  2587     0070                     ___bmul@multiplicand:	
  2588                           ; 1 bytes @ 0x0
  2589                           
  2590     0070                     EUSART_SetFramingErrorHandler@interruptHandler:	
  2591                           ; 1 bytes @ 0x0
  2592                           
  2593     0070                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  2594                           ; 2 bytes @ 0x0
  2595                           
  2596     0070                     EUSART_SetErrorHandler@interruptHandler:	
  2597                           ; 2 bytes @ 0x0
  2598                           
  2599     0070                     ___awmod@divisor:	
  2600                           ; 2 bytes @ 0x0
  2601                           
  2602     0070                     ___lmul@multiplier:	
  2603                           ; 2 bytes @ 0x0
  2604                           
  2605                           
  2606                           ; 4 bytes @ 0x0
  2607     0070                     	ds	1
  2608     0071                     ??_ledSet:
  2609     0071                     ??_ledClear:	
  2610                           ; 1 bytes @ 0x1
  2611                           
  2612     0071                     ?_txMAX7219:	
  2613                           ; 1 bytes @ 0x1
  2614                           
  2615     0071                     ??___bmul:	
  2616                           ; 1 bytes @ 0x1
  2617                           
  2618     0071                     txMAX7219@dat0:	
  2619                           ; 1 bytes @ 0x1
  2620                           
  2621     0071                     snake_getSurroundings@p:	
  2622                           ; 1 bytes @ 0x1
  2623                           
  2624     0071                     sigmoid@z:	
  2625                           ; 1 bytes @ 0x1
  2626                           
  2627     0071                     de_sigmoid@z:	
  2628                           ; 1 bytes @ 0x1
  2629                           
  2630                           
  2631                           ; 1 bytes @ 0x1
  2632     0071                     	ds	1
  2633     0072                     ??_EUSART_SetFramingErrorHandler:
  2634     0072                     ??_EUSART_SetOverrunErrorHandler:	
  2635                           ; 1 bytes @ 0x2
  2636                           
  2637     0072                     ??_EUSART_SetErrorHandler:	
  2638                           ; 1 bytes @ 0x2
  2639                           
  2640     0072                     ??_EUSART_Initialize:	
  2641                           ; 1 bytes @ 0x2
  2642                           
  2643     0072                     ??_SYSTEM_Initialize:	
  2644                           ; 1 bytes @ 0x2
  2645                           
  2646     0072                     ??_txMAX7219:	
  2647                           ; 1 bytes @ 0x2
  2648                           
  2649     0072                     txMAX7219@addr0:	
  2650                           ; 1 bytes @ 0x2
  2651                           
  2652     0072                     snake_getSurroundings@i:	
  2653                           ; 1 bytes @ 0x2
  2654                           
  2655     0072                     ___bmul@product:	
  2656                           ; 1 bytes @ 0x2
  2657                           
  2658     0072                     ___awmod@dividend:	
  2659                           ; 1 bytes @ 0x2
  2660                           
  2661                           
  2662                           ; 2 bytes @ 0x2
  2663     0072                     	ds	1
  2664     0073                     ??_initMAX7219:
  2665     0073                     ??_sendMatrix:	
  2666                           ; 1 bytes @ 0x3
  2667                           
  2668     0073                     ledSet@l:	
  2669                           ; 1 bytes @ 0x3
  2670                           
  2671     0073                     ledClear@l:	
  2672                           ; 1 bytes @ 0x3
  2673                           
  2674     0073                     snake_getSurroundings@i_802:	
  2675                           ; 1 bytes @ 0x3
  2676                           
  2677     0073                     eeprom_read@addr:	
  2678                           ; 1 bytes @ 0x3
  2679                           
  2680     0073                     ___bmul@multiplier:	
  2681                           ; 1 bytes @ 0x3
  2682                           
  2683                           
  2684                           ; 1 bytes @ 0x3
  2685     0073                     	ds	1
  2686     0074                     ??_ai_is_ai_trained_read:
  2687     0074                     ?_eeprom_write:	
  2688                           ; 1 bytes @ 0x4
  2689                           
  2690     0074                     ?_weights1_read:	
  2691                           ; 1 bytes @ 0x4
  2692                           
  2693     0074                     ??_biases1_read:	
  2694                           ; 1 bytes @ 0x4
  2695                           
  2696     0074                     ?_weights2_read:	
  2697                           ; 1 bytes @ 0x4
  2698                           
  2699     0074                     ??_biases2_read:	
  2700                           ; 1 bytes @ 0x4
  2701                           
  2702     0074                     ??___awmod:	
  2703                           ; 1 bytes @ 0x4
  2704                           
  2705     0074                     sendMatrix@b:	
  2706                           ; 1 bytes @ 0x4
  2707                           
  2708     0074                     snake_getSurroundings@surroundings:	
  2709                           ; 1 bytes @ 0x4
  2710                           
  2711     0074                     weights1_read@add2:	
  2712                           ; 1 bytes @ 0x4
  2713                           
  2714     0074                     biases1_read@add:	
  2715                           ; 1 bytes @ 0x4
  2716                           
  2717     0074                     weights2_read@add2:	
  2718                           ; 1 bytes @ 0x4
  2719                           
  2720     0074                     biases2_read@add:	
  2721                           ; 1 bytes @ 0x4
  2722                           
  2723     0074                     eeprom_write@value:	
  2724                           ; 1 bytes @ 0x4
  2725                           
  2726     0074                     ___lmul@multiplicand:	
  2727                           ; 1 bytes @ 0x4
  2728                           
  2729                           
  2730                           ; 4 bytes @ 0x4
  2731     0074                     	ds	1
  2732     0075                     ??_eeprom_write:
  2733     0075                     ??_weights1_read:	
  2734                           ; 1 bytes @ 0x5
  2735                           
  2736     0075                     ??_weights2_read:	
  2737                           ; 1 bytes @ 0x5
  2738                           
  2739     0075                     sendMatrix@nb:	
  2740                           ; 1 bytes @ 0x5
  2741                           
  2742     0075                     weights2_read@add1:	
  2743                           ; 1 bytes @ 0x5
  2744                           
  2745     0075                     ___awmod@counter:	
  2746                           ; 1 bytes @ 0x5
  2747                           
  2748                           
  2749                           ; 1 bytes @ 0x5
  2750     0075                     	ds	1
  2751     0076                     sendMatrix@j:
  2752     0076                     weights1_read@add1:	
  2753                           ; 1 bytes @ 0x6
  2754                           
  2755     0076                     ___awmod@sign:	
  2756                           ; 1 bytes @ 0x6
  2757                           
  2758                           
  2759                           ; 1 bytes @ 0x6
  2760     0076                     	ds	1
  2761     0077                     ?___wmul:
  2762     0077                     sendMatrix@i:	
  2763                           ; 2 bytes @ 0x7
  2764                           
  2765     0077                     eeprom_write@addr:	
  2766                           ; 1 bytes @ 0x7
  2767                           
  2768     0077                     ___wmul@multiplier:	
  2769                           ; 1 bytes @ 0x7
  2770                           
  2771                           
  2772                           ; 2 bytes @ 0x7
  2773     0077                     	ds	1
  2774     0078                     ??_ai_is_ai_trained_write:
  2775     0078                     ??___lmul:	
  2776                           ; 1 bytes @ 0x8
  2777                           
  2778     0078                     ___lmul@product:	
  2779                           ; 1 bytes @ 0x8
  2780                           
  2781                           
  2782                           ; 4 bytes @ 0x8
  2783     0078                     	ds	1
  2784     0079                     ai_is_ai_trained_write@val:
  2785     0079                     ___wmul@multiplicand:	
  2786                           ; 1 bytes @ 0x9
  2787                           
  2788                           
  2789                           ; 2 bytes @ 0x9
  2790     0079                     	ds	1
  2791     007A                     ai_is_ai_trained_write@c:
  2792                           
  2793                           ; 1 bytes @ 0xA
  2794     007A                     	ds	1
  2795     007B                     ??___wmul:
  2796     007B                     ___wmul@product:	
  2797                           ; 1 bytes @ 0xB
  2798                           
  2799                           
  2800                           ; 2 bytes @ 0xB
  2801     007B                     	ds	1
  2802     007C                     ?_rand:
  2803                           
  2804                           ; 2 bytes @ 0xC
  2805     007C                     	ds	1
  2806     007D                     ??___awdiv:
  2807                           
  2808                           ; 1 bytes @ 0xD
  2809     007D                     	ds	1
  2810     007E                     ??_biases1_write:
  2811     007E                     ??_weights2_write:	
  2812                           ; 1 bytes @ 0xE
  2813                           
  2814     007E                     ??_biases2_write:	
  2815                           ; 1 bytes @ 0xE
  2816                           
  2817                           
  2818                           	psect	cstackBANK0
  2819     0020                     __pcstackBANK0:	
  2820                           ; 1 bytes @ 0xE
  2821                           
  2822     0020                     ??_rand:
  2823     0020                     ?___awdiv:	
  2824                           ; 1 bytes @ 0x0
  2825                           
  2826     0020                     ___awdiv@divisor:	
  2827                           ; 2 bytes @ 0x0
  2828                           
  2829                           
  2830                           ; 2 bytes @ 0x0
  2831     0020                     	ds	2
  2832     0022                     ___awdiv@dividend:
  2833                           
  2834                           ; 2 bytes @ 0x2
  2835     0022                     	ds	2
  2836     0024                     ??_snake_initiate:
  2837     0024                     ?_weights1_write:	
  2838                           ; 1 bytes @ 0x4
  2839                           
  2840     0024                     ?_biases1_write:	
  2841                           ; 1 bytes @ 0x4
  2842                           
  2843     0024                     ?_weights2_write:	
  2844                           ; 1 bytes @ 0x4
  2845                           
  2846     0024                     ?_biases2_write:	
  2847                           ; 1 bytes @ 0x4
  2848                           
  2849     0024                     weights1_write@add2:	
  2850                           ; 1 bytes @ 0x4
  2851                           
  2852     0024                     biases1_write@val:	
  2853                           ; 1 bytes @ 0x4
  2854                           
  2855     0024                     weights2_write@add2:	
  2856                           ; 1 bytes @ 0x4
  2857                           
  2858     0024                     biases2_write@val:	
  2859                           ; 1 bytes @ 0x4
  2860                           
  2861     0024                     ___awdiv@counter:	
  2862                           ; 1 bytes @ 0x4
  2863                           
  2864                           
  2865                           ; 1 bytes @ 0x4
  2866     0024                     	ds	1
  2867     0025                     snake_initiate@i:
  2868     0025                     weights1_write@val:	
  2869                           ; 1 bytes @ 0x5
  2870                           
  2871     0025                     biases1_write@add:	
  2872                           ; 1 bytes @ 0x5
  2873                           
  2874     0025                     weights2_write@val:	
  2875                           ; 1 bytes @ 0x5
  2876                           
  2877     0025                     biases2_write@add:	
  2878                           ; 1 bytes @ 0x5
  2879                           
  2880     0025                     ___awdiv@sign:	
  2881                           ; 1 bytes @ 0x5
  2882                           
  2883                           
  2884                           ; 1 bytes @ 0x5
  2885     0025                     	ds	1
  2886     0026                     ??_snake_move:
  2887     0026                     ??_weights1_write:	
  2888                           ; 1 bytes @ 0x6
  2889                           
  2890     0026                     weights2_write@add1:	
  2891                           ; 1 bytes @ 0x6
  2892                           
  2893     0026                     ___awdiv@quotient:	
  2894                           ; 1 bytes @ 0x6
  2895                           
  2896                           
  2897                           ; 2 bytes @ 0x6
  2898     0026                     	ds	1
  2899     0027                     weights1_write@add1:
  2900                           
  2901                           ; 1 bytes @ 0x7
  2902     0027                     	ds	1
  2903     0028                     ??_ai_initiate:
  2904     0028                     ??_ai_propagate:	
  2905                           ; 1 bytes @ 0x8
  2906                           
  2907     0028                     ??_ai_run:	
  2908                           ; 1 bytes @ 0x8
  2909                           
  2910     0028                     ?_setLine:	
  2911                           ; 1 bytes @ 0x8
  2912                           
  2913     0028                     setLine@val:	
  2914                           ; 1 bytes @ 0x8
  2915                           
  2916     0028                     snake_move@direction:	
  2917                           ; 1 bytes @ 0x8
  2918                           
  2919                           
  2920                           ; 1 bytes @ 0x8
  2921     0028                     	ds	1
  2922     0029                     ??_setLine:
  2923     0029                     snake_move@incentive:	
  2924                           ; 1 bytes @ 0x9
  2925                           
  2926     0029                     ai_initiate@i:	
  2927                           ; 1 bytes @ 0x9
  2928                           
  2929                           
  2930                           ; 1 bytes @ 0x9
  2931     0029                     	ds	1
  2932     002A                     setLine@l:
  2933     002A                     snake_move@i:	
  2934                           ; 1 bytes @ 0xA
  2935                           
  2936     002A                     ai_initiate@i_909:	
  2937                           ; 1 bytes @ 0xA
  2938                           
  2939     002A                     ai_run@i:	
  2940                           ; 1 bytes @ 0xA
  2941                           
  2942                           
  2943                           ; 1 bytes @ 0xA
  2944     002A                     	ds	1
  2945     002B                     setLine@mask:
  2946     002B                     ai_initiate@j:	
  2947                           ; 1 bytes @ 0xB
  2948                           
  2949     002B                     ai_run@i_917:	
  2950                           ; 1 bytes @ 0xB
  2951                           
  2952                           
  2953                           ; 1 bytes @ 0xB
  2954     002B                     	ds	1
  2955     002C                     setLine@i:
  2956     002C                     ai_initiate@j_907:	
  2957                           ; 1 bytes @ 0xC
  2958                           
  2959     002C                     ai_run@i_921:	
  2960                           ; 1 bytes @ 0xC
  2961                           
  2962                           
  2963                           ; 1 bytes @ 0xC
  2964     002C                     	ds	1
  2965     002D                     ai_run@i_923:
  2966                           
  2967                           ; 1 bytes @ 0xD
  2968     002D                     	ds	1
  2969     002E                     ai_run@z:
  2970                           
  2971                           ; 2 bytes @ 0xE
  2972     002E                     	ds	2
  2973     0030                     ai_run@j:
  2974                           
  2975                           ; 1 bytes @ 0x10
  2976     0030                     	ds	1
  2977     0031                     ai_run@j_919:
  2978                           
  2979                           ; 1 bytes @ 0x11
  2980     0031                     	ds	4
  2981     0035                     ai_propagate@S:
  2982                           
  2983                           ; 4 bytes @ 0x15
  2984     0035                     	ds	4
  2985     0039                     ai_propagate@incentive:
  2986                           
  2987                           ; 1 bytes @ 0x19
  2988     0039                     	ds	1
  2989     003A                     ai_propagate@i:
  2990                           
  2991                           ; 1 bytes @ 0x1A
  2992     003A                     	ds	1
  2993     003B                     ai_propagate@i_928:
  2994                           
  2995                           ; 1 bytes @ 0x1B
  2996     003B                     	ds	1
  2997     003C                     ai_propagate@i_930:
  2998                           
  2999                           ; 1 bytes @ 0x1C
  3000     003C                     	ds	1
  3001     003D                     ai_propagate@i_932:
  3002                           
  3003                           ; 1 bytes @ 0x1D
  3004     003D                     	ds	1
  3005     003E                     ai_propagate@i_937:
  3006                           
  3007                           ; 1 bytes @ 0x1E
  3008     003E                     	ds	1
  3009     003F                     ai_propagate@j:
  3010                           
  3011                           ; 1 bytes @ 0x1F
  3012     003F                     	ds	1
  3013     0040                     ai_propagate@i_939:
  3014                           
  3015                           ; 1 bytes @ 0x20
  3016     0040                     	ds	1
  3017     0041                     ai_propagate@i_941:
  3018                           
  3019                           ; 1 bytes @ 0x21
  3020     0041                     	ds	1
  3021     0042                     ai_propagate@i_935:
  3022                           
  3023                           ; 1 bytes @ 0x22
  3024     0042                     	ds	1
  3025     0043                     ai_propagate@j_936:
  3026                           
  3027                           ; 1 bytes @ 0x23
  3028     0043                     	ds	1
  3029     0044                     ai_propagate@j_931:
  3030                           
  3031                           ; 1 bytes @ 0x24
  3032     0044                     	ds	1
  3033     0045                     ai_propagate@j_934:
  3034                           
  3035                           ; 1 bytes @ 0x25
  3036     0045                     	ds	1
  3037     0046                     ai_propagate@j_938:
  3038                           
  3039                           ; 1 bytes @ 0x26
  3040     0046                     	ds	1
  3041     0047                     ai_propagate@j_940:
  3042                           
  3043                           ; 1 bytes @ 0x27
  3044     0047                     	ds	1
  3045     0048                     ai_propagate@dz:
  3046                           
  3047                           ; 2 bytes @ 0x28
  3048     0048                     	ds	2
  3049     004A                     ??_main:
  3050                           
  3051                           ; 1 bytes @ 0x2A
  3052     004A                     	ds	3
  3053     004D                     main@field:
  3054                           
  3055                           ; 1 bytes @ 0x2D
  3056     004D                     	ds	1
  3057     004E                     main@foodPosition:
  3058                           
  3059                           ; 1 bytes @ 0x2E
  3060     004E                     	ds	1
  3061     004F                     main@foodPosition_680:
  3062                           
  3063                           ; 1 bytes @ 0x2F
  3064     004F                     	ds	1
  3065     0050                     main@i_677:
  3066                           
  3067                           ; 2 bytes @ 0x30
  3068     0050                     	ds	2
  3069     0052                     main@i:
  3070                           
  3071                           ; 1 bytes @ 0x32
  3072     0052                     	ds	1
  3073     0053                     main@j:
  3074                           
  3075                           ; 1 bytes @ 0x33
  3076     0053                     	ds	1
  3077     0054                     main@i_678:
  3078                           
  3079                           ; 1 bytes @ 0x34
  3080     0054                     	ds	1
  3081     0055                     main@j_679:
  3082                           
  3083                           ; 1 bytes @ 0x35
  3084     0055                     	ds	1
  3085                           
  3086                           	psect	maintext
  3087     03C4                     __pmaintext:	
  3088 ;;
  3089 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  3090 ;;
  3091 ;; *************** function _main *****************
  3092 ;; Defined at:
  3093 ;;		line 67 in file "main.c"
  3094 ;; Parameters:    Size  Location     Type
  3095 ;;		None
  3096 ;; Auto vars:     Size  Location     Type
  3097 ;;  j               1   53[BANK0 ] unsigned char 
  3098 ;;  j               1   51[BANK0 ] unsigned char 
  3099 ;;  i               1   52[BANK0 ] unsigned char 
  3100 ;;  i               2   48[BANK0 ] int 
  3101 ;;  foodPosition    1   47[BANK0 ] unsigned char 
  3102 ;;  i               1   50[BANK0 ] unsigned char 
  3103 ;;  foodPosition    1   46[BANK0 ] unsigned char 
  3104 ;;  field           1   45[BANK0 ] PTR unsigned char 
  3105 ;;		 -> field(64), 
  3106 ;; Return value:  Size  Location     Type
  3107 ;;                  1    wreg      void 
  3108 ;; Registers used:
  3109 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3110 ;; Tracked objects:
  3111 ;;		On entry : B1F/0
  3112 ;;		On exit  : 0/0
  3113 ;;		Unchanged: 0/0
  3114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3115 ;;      Params:         0       0       0       0       0       0
  3116 ;;      Locals:         0       9       0       0       0       0
  3117 ;;      Temps:          0       3       0       0       0       0
  3118 ;;      Totals:         0      12       0       0       0       0
  3119 ;;Total ram usage:       12 bytes
  3120 ;; Hardware stack levels required when called: 4
  3121 ;; This function calls:
  3122 ;;		_SYSTEM_Initialize
  3123 ;;		___awdiv
  3124 ;;		___awmod
  3125 ;;		_ai_getInputField
  3126 ;;		_ai_initiate
  3127 ;;		_ai_is_ai_trained_read
  3128 ;;		_ai_is_ai_trained_write
  3129 ;;		_ai_propagate
  3130 ;;		_ai_run
  3131 ;;		_deactivateElevator
  3132 ;;		_initMAX7219
  3133 ;;		_ledClear
  3134 ;;		_ledSet
  3135 ;;		_sendMatrix
  3136 ;;		_setLine
  3137 ;;		_snake_getField
  3138 ;;		_snake_getFoodPosition
  3139 ;;		_snake_getSurroundings
  3140 ;;		_snake_initiate
  3141 ;;		_snake_move
  3142 ;; This function is called by:
  3143 ;;		Startup code after reset
  3144 ;; This function uses a non-reentrant model
  3145 ;;
  3146                           
  3147     03C4                     _main:	
  3148                           ;psect for function _main
  3149                           
  3150     03C4                     l3409:	
  3151                           ;incstack = 0
  3152                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3153                           
  3154                           
  3155                           ;main.c: 70:     SYSTEM_Initialize();
  3156     03C4  318D  25BF  3183   	fcall	_SYSTEM_Initialize
  3157     03C7                     l3411:
  3158                           
  3159                           ;main.c: 87:     deactivateElevator();
  3160     03C7  318D  25A4  3183   	fcall	_deactivateElevator
  3161     03CA                     l3413:
  3162                           
  3163                           ;main.c: 88:     snake_initiate();
  3164     03CA  318F  270E  3183   	fcall	_snake_initiate
  3165     03CD                     l3415:
  3166                           
  3167                           ;main.c: 89:     ai_initiate();
  3168     03CD  3180  2093  3183   	fcall	_ai_initiate
  3169     03D0                     l3417:
  3170                           
  3171                           ;main.c: 90:     initMAX7219();
  3172     03D0  318F  27C2  3183   	fcall	_initMAX7219
  3173     03D3                     l3419:
  3174                           
  3175                           ;main.c: 92:     uint8_t* field = snake_getField();
  3176     03D3  318D  252F  3183   	fcall	_snake_getField
  3177     03D6  0020               	movlb	0	; select bank0
  3178     03D7  00CD               	movwf	main@field
  3179     03D8                     l3421:
  3180                           
  3181                           ;main.c: 94:     for(uint8_t i = 0; i < 8; i++){
  3182     03D8  01D2               	clrf	main@i
  3183     03D9                     l3427:
  3184                           
  3185                           ;main.c: 95:         for(uint8_t j = 0; j < 8; j++){
  3186     03D9  01D3               	clrf	main@j
  3187     03DA                     l3433:
  3188                           
  3189                           ;main.c: 96:             if(field[i+j*8]>0){
  3190     03DA  0853               	movf	main@j,w
  3191     03DB  00CA               	movwf	??_main
  3192     03DC  3002               	movlw	2
  3193     03DD                     u2385:
  3194     03DD  35CA               	lslf	??_main,f
  3195     03DE  3EFF               	addlw	-1
  3196     03DF  1D03               	skipz
  3197     03E0  2BDD               	goto	u2385
  3198     03E1  354A               	lslf	??_main,w
  3199     03E2  074D               	addwf	main@field,w
  3200     03E3  00CB               	movwf	??_main+1
  3201     03E4  0852               	movf	main@i,w
  3202     03E5  074B               	addwf	??_main+1,w
  3203     03E6  00CC               	movwf	??_main+2
  3204     03E7  084C               	movf	??_main+2,w
  3205     03E8  0086               	movwf	6
  3206     03E9  0187               	clrf	7
  3207     03EA  0801               	movf	1,w
  3208     03EB  1903               	btfsc	3,2
  3209     03EC  2BEE               	goto	u2391
  3210     03ED  2BEF               	goto	u2390
  3211     03EE                     u2391:
  3212     03EE  2BF6               	goto	l3437
  3213     03EF                     u2390:
  3214     03EF                     l3435:
  3215                           
  3216                           ;main.c: 97:                 ledSet(i,j);
  3217     03EF  0853               	movf	main@j,w
  3218     03F0  00F0               	movwf	ledSet@c
  3219     03F1  0852               	movf	main@i,w
  3220     03F2  318E  2611  3183   	fcall	_ledSet
  3221                           
  3222                           ;main.c: 98:             } else{
  3223     03F5  2BFC               	goto	l3439
  3224     03F6                     l3437:
  3225                           
  3226                           ;main.c: 99:                 ledClear(i,j);
  3227     03F6  0853               	movf	main@j,w
  3228     03F7  00F0               	movwf	ledClear@c
  3229     03F8  0852               	movf	main@i,w
  3230     03F9  318E  2623  3183   	fcall	_ledClear
  3231     03FC                     l3439:
  3232                           
  3233                           ;main.c: 101:         }
  3234     03FC  3001               	movlw	1
  3235     03FD  0020               	movlb	0	; select bank0
  3236     03FE  00CA               	movwf	??_main
  3237     03FF  084A               	movf	??_main,w
  3238     0400  07D3               	addwf	main@j,f
  3239     0401                     l3441:
  3240     0401  3008               	movlw	8
  3241     0402  0253               	subwf	main@j,w
  3242     0403  1C03               	skipc
  3243     0404  2C06               	goto	u2401
  3244     0405  2C07               	goto	u2400
  3245     0406                     u2401:
  3246     0406  2BDA               	goto	l3433
  3247     0407                     u2400:
  3248     0407                     l3443:
  3249                           
  3250                           ;main.c: 102:     }
  3251     0407  3001               	movlw	1
  3252     0408  00CA               	movwf	??_main
  3253     0409  084A               	movf	??_main,w
  3254     040A  07D2               	addwf	main@i,f
  3255     040B                     l3445:
  3256     040B  3008               	movlw	8
  3257     040C  0252               	subwf	main@i,w
  3258     040D  1C03               	skipc
  3259     040E  2C10               	goto	u2411
  3260     040F  2C11               	goto	u2410
  3261     0410                     u2411:
  3262     0410  2BD9               	goto	l3427
  3263     0411                     u2410:
  3264     0411                     l3447:
  3265                           
  3266                           ;main.c: 103:     uint8_t foodPosition = snake_getFoodPosition();
  3267     0411  318D  2531  3183   	fcall	_snake_getFoodPosition
  3268     0414  0020               	movlb	0	; select bank0
  3269     0415  00CE               	movwf	main@foodPosition
  3270     0416                     l3449:
  3271                           
  3272                           ;main.c: 104:     ledSet(foodPosition&0x03, foodPosition>>3);
  3273     0416  084E               	movf	main@foodPosition,w
  3274     0417  00CA               	movwf	??_main
  3275     0418  3003               	movlw	3
  3276     0419                     u2425:
  3277     0419  36CA               	lsrf	??_main,f
  3278     041A  0B89               	decfsz	9,f
  3279     041B  2C19               	goto	u2425
  3280     041C  084A               	movf	??_main,w
  3281     041D  00F0               	movwf	ledSet@c
  3282     041E  084E               	movf	main@foodPosition,w
  3283     041F  3903               	andlw	3
  3284     0420  318E  2611  3183   	fcall	_ledSet
  3285     0423                     l3451:
  3286                           
  3287                           ;main.c: 105:     sendMatrix();
  3288     0423  318F  2760  3183   	fcall	_sendMatrix
  3289     0426                     l3453:
  3290                           
  3291                           ;main.c: 107:     if(ai_is_ai_trained_read()==0){
  3292     0426  318D  254F  3183   	fcall	_ai_is_ai_trained_read
  3293     0429  3A00               	xorlw	0
  3294     042A  1D03               	skipz
  3295     042B  2C2D               	goto	u2431
  3296     042C  2C2E               	goto	u2430
  3297     042D                     u2431:
  3298     042D  2C78               	goto	l3473
  3299     042E                     u2430:
  3300     042E                     l3455:
  3301                           
  3302                           ;main.c: 108:         for(int i = 0; i < 1000; i++){
  3303     042E  0020               	movlb	0	; select bank0
  3304     042F  01D0               	clrf	main@i_677
  3305     0430  01D1               	clrf	main@i_677+1
  3306     0431                     l3461:
  3307                           
  3308                           ;main.c: 109:             snake_getSurroundings(ai_getInputField());
  3309     0431  318D  252D  3183   	fcall	_ai_getInputField
  3310     0434  3181  21FF  3183   	fcall	_snake_getSurroundings
  3311     0437                     l3463:
  3312                           
  3313                           ;main.c: 110:             ai_propagate(snake_move(ai_run()));
  3314     0437  3182  22B5  3183   	fcall	_ai_run
  3315     043A  3181  2151  3183   	fcall	_snake_move
  3316     043D  3184  24E6  3183   	fcall	_ai_propagate
  3317     0440                     l3465:
  3318                           
  3319                           ;main.c: 111:             setLine(0, (uint8_t)((i%1000)/4));
  3320     0440  3004               	movlw	4
  3321     0441  0020               	movlb	0	; select bank0
  3322     0442  00A0               	movwf	___awdiv@divisor
  3323     0443  3000               	movlw	0
  3324     0444  00A1               	movwf	___awdiv@divisor+1
  3325     0445  0851               	movf	main@i_677+1,w
  3326     0446  00F3               	movwf	___awmod@dividend+1
  3327     0447  0850               	movf	main@i_677,w
  3328     0448  00F2               	movwf	___awmod@dividend
  3329     0449  30E8               	movlw	232
  3330     044A  00F0               	movwf	___awmod@divisor
  3331     044B  3003               	movlw	3
  3332     044C  00F1               	movwf	___awmod@divisor+1
  3333     044D  3180  2040  3183   	fcall	___awmod
  3334     0450  0871               	movf	?___awmod+1,w
  3335     0451  0020               	movlb	0	; select bank0
  3336     0452  00A3               	movwf	___awdiv@dividend+1
  3337     0453  0870               	movf	?___awmod,w
  3338     0454  00A2               	movwf	___awdiv@dividend
  3339     0455  3180  20F1  3183   	fcall	___awdiv
  3340     0458  0020               	movlb	0	; select bank0
  3341     0459  0820               	movf	?___awdiv,w
  3342     045A  00A8               	movwf	setLine@val
  3343     045B  3000               	movlw	0
  3344     045C  318E  26EB  3183   	fcall	_setLine
  3345                           
  3346                           ;main.c: 112:             sendMatrix();
  3347     045F  318F  2760  3183   	fcall	_sendMatrix
  3348     0462                     l3467:
  3349                           
  3350                           ;main.c: 113:         }
  3351     0462  3001               	movlw	1
  3352     0463  0020               	movlb	0	; select bank0
  3353     0464  07D0               	addwf	main@i_677,f
  3354     0465  3000               	movlw	0
  3355     0466  3DD1               	addwfc	main@i_677+1,f
  3356     0467                     l3469:
  3357     0467  0851               	movf	main@i_677+1,w
  3358     0468  3A80               	xorlw	128
  3359     0469  00CA               	movwf	??_main
  3360     046A  3083               	movlw	131
  3361     046B  024A               	subwf	??_main,w
  3362     046C  1D03               	skipz
  3363     046D  2C70               	goto	u2445
  3364     046E  30E8               	movlw	232
  3365     046F  0250               	subwf	main@i_677,w
  3366     0470                     u2445:
  3367     0470  1C03               	skipc
  3368     0471  2C73               	goto	u2441
  3369     0472  2C74               	goto	u2440
  3370     0473                     u2441:
  3371     0473  2C31               	goto	l3461
  3372     0474                     u2440:
  3373     0474                     l3471:
  3374                           
  3375                           ;main.c: 114:         ai_is_ai_trained_write(1);
  3376     0474  3001               	movlw	1
  3377     0475  318E  2678  3183   	fcall	_ai_is_ai_trained_write
  3378     0478                     l3473:
  3379                           
  3380                           ;main.c: 118:     {;main.c: 120:         _delay((unsigned long)((100)*(8000000/4000.0)))
      +                          ;
  3381     0478  3002               	movlw	2
  3382     0479  0020               	movlb	0	; select bank0
  3383     047A  00CB               	movwf	??_main+1
  3384     047B  3004               	movlw	4
  3385     047C  00CA               	movwf	??_main
  3386     047D  30BA               	movlw	186
  3387     047E                     u2537:
  3388     047E  0B89               	decfsz	9,f
  3389     047F  2C7E               	goto	u2537
  3390     0480  0BCA               	decfsz	??_main,f
  3391     0481  2C7E               	goto	u2537
  3392     0482  0BCB               	decfsz	??_main+1,f
  3393     0483  2C7E               	goto	u2537
  3394     0484  0000               	nop
  3395     0485                     l3475:
  3396                           
  3397                           ;main.c: 121:         snake_getSurroundings(ai_getInputField());
  3398     0485  318D  252D  3183   	fcall	_ai_getInputField
  3399     0488  3181  21FF  3183   	fcall	_snake_getSurroundings
  3400     048B                     l3477:
  3401                           
  3402                           ;main.c: 122:         ai_propagate(snake_move(ai_run()));
  3403     048B  3182  22B5  3183   	fcall	_ai_run
  3404     048E  3181  2151  3183   	fcall	_snake_move
  3405     0491  3184  24E6  3183   	fcall	_ai_propagate
  3406     0494                     l3479:
  3407                           
  3408                           ;main.c: 123:         for(uint8_t i = 0; i < 8; i++){
  3409     0494  0020               	movlb	0	; select bank0
  3410     0495  01D4               	clrf	main@i_678
  3411     0496                     l3485:
  3412                           
  3413                           ;main.c: 124:             for(uint8_t j = 0; j < 8; j++){
  3414     0496  01D5               	clrf	main@j_679
  3415     0497                     l3491:
  3416                           
  3417                           ;main.c: 125:                 if(field[i+j*8]>0){
  3418     0497  0855               	movf	main@j_679,w
  3419     0498  00CA               	movwf	??_main
  3420     0499  3002               	movlw	2
  3421     049A                     u2455:
  3422     049A  35CA               	lslf	??_main,f
  3423     049B  3EFF               	addlw	-1
  3424     049C  1D03               	skipz
  3425     049D  2C9A               	goto	u2455
  3426     049E  354A               	lslf	??_main,w
  3427     049F  074D               	addwf	main@field,w
  3428     04A0  00CB               	movwf	??_main+1
  3429     04A1  0854               	movf	main@i_678,w
  3430     04A2  074B               	addwf	??_main+1,w
  3431     04A3  00CC               	movwf	??_main+2
  3432     04A4  084C               	movf	??_main+2,w
  3433     04A5  0086               	movwf	6
  3434     04A6  0187               	clrf	7
  3435     04A7  0801               	movf	1,w
  3436     04A8  1903               	btfsc	3,2
  3437     04A9  2CAB               	goto	u2461
  3438     04AA  2CAC               	goto	u2460
  3439     04AB                     u2461:
  3440     04AB  2CB3               	goto	l3495
  3441     04AC                     u2460:
  3442     04AC                     l3493:
  3443                           
  3444                           ;main.c: 126:                     ledSet(i,j);
  3445     04AC  0855               	movf	main@j_679,w
  3446     04AD  00F0               	movwf	ledSet@c
  3447     04AE  0854               	movf	main@i_678,w
  3448     04AF  318E  2611  3183   	fcall	_ledSet
  3449                           
  3450                           ;main.c: 127:                 } else{
  3451     04B2  2CB9               	goto	l3497
  3452     04B3                     l3495:
  3453                           
  3454                           ;main.c: 128:                     ledClear(i,j);
  3455     04B3  0855               	movf	main@j_679,w
  3456     04B4  00F0               	movwf	ledClear@c
  3457     04B5  0854               	movf	main@i_678,w
  3458     04B6  318E  2623  3183   	fcall	_ledClear
  3459     04B9                     l3497:
  3460                           
  3461                           ;main.c: 130:             }
  3462     04B9  3001               	movlw	1
  3463     04BA  0020               	movlb	0	; select bank0
  3464     04BB  00CA               	movwf	??_main
  3465     04BC  084A               	movf	??_main,w
  3466     04BD  07D5               	addwf	main@j_679,f
  3467     04BE                     l3499:
  3468     04BE  3008               	movlw	8
  3469     04BF  0255               	subwf	main@j_679,w
  3470     04C0  1C03               	skipc
  3471     04C1  2CC3               	goto	u2471
  3472     04C2  2CC4               	goto	u2470
  3473     04C3                     u2471:
  3474     04C3  2C97               	goto	l3491
  3475     04C4                     u2470:
  3476     04C4                     l3501:
  3477                           
  3478                           ;main.c: 131:         }
  3479     04C4  3001               	movlw	1
  3480     04C5  00CA               	movwf	??_main
  3481     04C6  084A               	movf	??_main,w
  3482     04C7  07D4               	addwf	main@i_678,f
  3483     04C8                     l3503:
  3484     04C8  3008               	movlw	8
  3485     04C9  0254               	subwf	main@i_678,w
  3486     04CA  1C03               	skipc
  3487     04CB  2CCD               	goto	u2481
  3488     04CC  2CCE               	goto	u2480
  3489     04CD                     u2481:
  3490     04CD  2C96               	goto	l3485
  3491     04CE                     u2480:
  3492     04CE                     l3505:
  3493                           
  3494                           ;main.c: 132:         uint8_t foodPosition = snake_getFoodPosition();
  3495     04CE  318D  2531  3183   	fcall	_snake_getFoodPosition
  3496     04D1  0020               	movlb	0	; select bank0
  3497     04D2  00CF               	movwf	main@foodPosition_680
  3498     04D3                     l3507:
  3499                           
  3500                           ;main.c: 133:         ledSet(foodPosition&0x03, foodPosition>>3);
  3501     04D3  084F               	movf	main@foodPosition_680,w
  3502     04D4  00CA               	movwf	??_main
  3503     04D5  3003               	movlw	3
  3504     04D6                     u2495:
  3505     04D6  36CA               	lsrf	??_main,f
  3506     04D7  0B89               	decfsz	9,f
  3507     04D8  2CD6               	goto	u2495
  3508     04D9  084A               	movf	??_main,w
  3509     04DA  00F0               	movwf	ledSet@c
  3510     04DB  084F               	movf	main@foodPosition_680,w
  3511     04DC  3903               	andlw	3
  3512     04DD  318E  2611  3183   	fcall	_ledSet
  3513     04E0                     l3509:
  3514                           
  3515                           ;main.c: 134:         sendMatrix();
  3516     04E0  318F  2760  3183   	fcall	_sendMatrix
  3517     04E3  2C78               	goto	l3473
  3518     04E4  3180  2802         	ljmp	start
  3519     04E6                     __end_of_main:
  3520                           
  3521                           	psect	text1
  3522     0151                     __ptext1:	
  3523 ;; *************** function _snake_move *****************
  3524 ;; Defined at:
  3525 ;;		line 27 in file "snake.c"
  3526 ;; Parameters:    Size  Location     Type
  3527 ;;  direction       1    wreg     unsigned char 
  3528 ;; Auto vars:     Size  Location     Type
  3529 ;;  direction       1    8[BANK0 ] unsigned char 
  3530 ;;  i               1   10[BANK0 ] unsigned char 
  3531 ;;  incentive       1    9[BANK0 ] char 
  3532 ;; Return value:  Size  Location     Type
  3533 ;;                  1    wreg      char 
  3534 ;; Registers used:
  3535 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3536 ;; Tracked objects:
  3537 ;;		On entry : 0/0
  3538 ;;		On exit  : 0/0
  3539 ;;		Unchanged: 0/0
  3540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3541 ;;      Params:         0       0       0       0       0       0
  3542 ;;      Locals:         0       3       0       0       0       0
  3543 ;;      Temps:          0       2       0       0       0       0
  3544 ;;      Totals:         0       5       0       0       0       0
  3545 ;;Total ram usage:        5 bytes
  3546 ;; Hardware stack levels used: 1
  3547 ;; Hardware stack levels required when called: 3
  3548 ;; This function calls:
  3549 ;;		_rand
  3550 ;;		_snake_initiate
  3551 ;; This function is called by:
  3552 ;;		_main
  3553 ;; This function uses a non-reentrant model
  3554 ;;
  3555                           
  3556     0151                     _snake_move:	
  3557                           ;psect for function _snake_move
  3558                           
  3559                           
  3560                           ;incstack = 0
  3561                           ; Regs used in _snake_move: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3562                           ;snake_move@direction stored from wreg
  3563     0151  0020               	movlb	0	; select bank0
  3564     0152  00A8               	movwf	snake_move@direction
  3565     0153                     l3061:
  3566                           
  3567                           ;snake.c: 28:     for(uint8_t i = 0; i < 64; i++){
  3568     0153  01AA               	clrf	snake_move@i
  3569     0154                     l3067:
  3570                           
  3571                           ;snake.c: 29:         if(field[i] > 0){
  3572     0154  082A               	movf	snake_move@i,w
  3573     0155  3EA0               	addlw	(low (_field| 0))& (0+255)
  3574     0156  0086               	movwf	6
  3575     0157  0187               	clrf	7
  3576     0158  0801               	movf	1,w
  3577     0159  1903               	btfsc	3,2
  3578     015A  295C               	goto	u1931
  3579     015B  295D               	goto	u1930
  3580     015C                     u1931:
  3581     015C  2963               	goto	l3071
  3582     015D                     u1930:
  3583     015D                     l3069:
  3584                           
  3585                           ;snake.c: 30:             field[i]--;
  3586     015D  082A               	movf	snake_move@i,w
  3587     015E  3EA0               	addlw	(low (_field| 0))& (0+255)
  3588     015F  0086               	movwf	6
  3589     0160  0187               	clrf	7
  3590     0161  3001               	movlw	1
  3591     0162  0281               	subwf	1,f
  3592     0163                     l3071:
  3593                           
  3594                           ;snake.c: 32:     }
  3595     0163  3001               	movlw	1
  3596     0164  00A6               	movwf	??_snake_move
  3597     0165  0826               	movf	??_snake_move,w
  3598     0166  07AA               	addwf	snake_move@i,f
  3599     0167                     l3073:
  3600     0167  3040               	movlw	64
  3601     0168  022A               	subwf	snake_move@i,w
  3602     0169  1C03               	skipc
  3603     016A  296C               	goto	u1941
  3604     016B  296D               	goto	u1940
  3605     016C                     u1941:
  3606     016C  2954               	goto	l3067
  3607     016D                     u1940:
  3608     016D                     l3075:
  3609                           
  3610                           ;snake.c: 33:     int8_t incentive = 0;
  3611     016D  01A9               	clrf	snake_move@incentive
  3612     016E                     l3077:
  3613                           
  3614                           ;snake.c: 34:     direction &= 0x03;
  3615     016E  3003               	movlw	3
  3616     016F  00A6               	movwf	??_snake_move
  3617     0170  0826               	movf	??_snake_move,w
  3618     0171  05A8               	andwf	snake_move@direction,f
  3619                           
  3620                           ;snake.c: 35:     switch(direction){
  3621     0172  29AF               	goto	l3105
  3622     0173                     l3079:
  3623                           
  3624                           ;snake.c: 37:             if((headPosition&0x07) == 0){
  3625     0173  0867               	movf	_headPosition,w
  3626     0174  3907               	andlw	7
  3627     0175  1D03               	btfss	3,2
  3628     0176  2978               	goto	u1951
  3629     0177  2979               	goto	u1950
  3630     0178                     u1951:
  3631     0178  297C               	goto	l3083
  3632     0179                     u1950:
  3633     0179                     l3081:
  3634                           
  3635                           ;snake.c: 38:                 incentive = -1;
  3636     0179  01A9               	clrf	snake_move@incentive
  3637     017A  03A9               	decf	snake_move@incentive,f
  3638                           
  3639                           ;snake.c: 39:             } else{
  3640     017B  29C5               	goto	l3107
  3641     017C                     l3083:
  3642                           
  3643                           ;snake.c: 40:                 headPosition--;
  3644     017C  3001               	movlw	1
  3645     017D  02E7               	subwf	_headPosition,f
  3646     017E  29C5               	goto	l3107
  3647     017F                     l3085:
  3648                           
  3649                           ;snake.c: 44:             if((headPosition&0x07) == 7){
  3650     017F  3007               	movlw	7
  3651     0180  0567               	andwf	_headPosition,w
  3652     0181  00A6               	movwf	??_snake_move
  3653     0182  3007               	movlw	7
  3654     0183  0626               	xorwf	??_snake_move,w
  3655     0184  1D03               	btfss	3,2
  3656     0185  2987               	goto	u1961
  3657     0186  2988               	goto	u1960
  3658     0187                     u1961:
  3659     0187  2989               	goto	l3089
  3660     0188                     u1960:
  3661     0188  2979               	goto	l3081
  3662     0189                     l3089:
  3663                           
  3664                           ;snake.c: 47:                 headPosition++;
  3665     0189  3001               	movlw	1
  3666     018A  00A6               	movwf	??_snake_move
  3667     018B  0826               	movf	??_snake_move,w
  3668     018C  07E7               	addwf	_headPosition,f
  3669     018D  29C5               	goto	l3107
  3670     018E                     l3091:
  3671                           
  3672                           ;snake.c: 51:             if((headPosition>>3) == 0){
  3673     018E  0867               	movf	_headPosition,w
  3674     018F  00A6               	movwf	??_snake_move
  3675     0190  3003               	movlw	3
  3676     0191                     u1975:
  3677     0191  36A6               	lsrf	??_snake_move,f
  3678     0192  0B89               	decfsz	9,f
  3679     0193  2991               	goto	u1975
  3680     0194  0826               	movf	??_snake_move,w
  3681     0195  1D03               	btfss	3,2
  3682     0196  2998               	goto	u1981
  3683     0197  2999               	goto	u1980
  3684     0198                     u1981:
  3685     0198  299A               	goto	l3095
  3686     0199                     u1980:
  3687     0199  2979               	goto	l3081
  3688     019A                     l3095:
  3689                           
  3690                           ;snake.c: 54:                 headPosition -= 8;
  3691     019A  3008               	movlw	8
  3692     019B  02E7               	subwf	_headPosition,f
  3693     019C  29C5               	goto	l3107
  3694     019D                     l3097:
  3695                           
  3696                           ;snake.c: 58:             if((headPosition>>3) == 7){
  3697     019D  0867               	movf	_headPosition,w
  3698     019E  00A6               	movwf	??_snake_move
  3699     019F  3003               	movlw	3
  3700     01A0                     u1995:
  3701     01A0  36A6               	lsrf	??_snake_move,f
  3702     01A1  0B89               	decfsz	9,f
  3703     01A2  29A0               	goto	u1995
  3704     01A3  3007               	movlw	7
  3705     01A4  0626               	xorwf	??_snake_move,w
  3706     01A5  1D03               	btfss	3,2
  3707     01A6  29A8               	goto	u2001
  3708     01A7  29A9               	goto	u2000
  3709     01A8                     u2001:
  3710     01A8  29AA               	goto	l3101
  3711     01A9                     u2000:
  3712     01A9  2979               	goto	l3081
  3713     01AA                     l3101:
  3714                           
  3715                           ;snake.c: 61:                 headPosition += 8;
  3716     01AA  3008               	movlw	8
  3717     01AB  00A6               	movwf	??_snake_move
  3718     01AC  0826               	movf	??_snake_move,w
  3719     01AD  07E7               	addwf	_headPosition,f
  3720     01AE  29C5               	goto	l3107
  3721     01AF                     l3105:
  3722     01AF  0828               	movf	snake_move@direction,w
  3723     01B0  00A6               	movwf	??_snake_move
  3724     01B1  01A7               	clrf	??_snake_move+1
  3725                           
  3726                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3727                           ; Switch size 1, requested type "simple"
  3728                           ; Number of cases is 1, Range of values is 0 to 0
  3729                           ; switch strategies available:
  3730                           ; Name         Instructions Cycles
  3731                           ; simple_byte            4     3 (average)
  3732                           ; direct_byte            8     6 (fixed)
  3733                           ; jumptable            260     6 (fixed)
  3734                           ;	Chosen strategy is simple_byte
  3735     01B2  0827               	movf	??_snake_move+1,w
  3736     01B3  3A00               	xorlw	0	; case 0
  3737     01B4  1903               	skipnz
  3738     01B5  29B7               	goto	l3589
  3739     01B6  29C5               	goto	l3107
  3740     01B7                     l3589:
  3741                           
  3742                           ; Switch size 1, requested type "simple"
  3743                           ; Number of cases is 4, Range of values is 0 to 3
  3744                           ; switch strategies available:
  3745                           ; Name         Instructions Cycles
  3746                           ; simple_byte           13     7 (average)
  3747                           ; direct_byte           14     6 (fixed)
  3748                           ; jumptable            260     6 (fixed)
  3749                           ;	Chosen strategy is simple_byte
  3750     01B7  0826               	movf	??_snake_move,w
  3751     01B8  3A00               	xorlw	0	; case 0
  3752     01B9  1903               	skipnz
  3753     01BA  2973               	goto	l3079
  3754     01BB  3A01               	xorlw	1	; case 1
  3755     01BC  1903               	skipnz
  3756     01BD  297F               	goto	l3085
  3757     01BE  3A03               	xorlw	3	; case 2
  3758     01BF  1903               	skipnz
  3759     01C0  298E               	goto	l3091
  3760     01C1  3A01               	xorlw	1	; case 3
  3761     01C2  1903               	skipnz
  3762     01C3  299D               	goto	l3097
  3763     01C4  29C5               	goto	l3107
  3764     01C5                     l3107:
  3765                           
  3766                           ;snake.c: 65:     if(incentive == -1){
  3767     01C5  0A29               	incf	snake_move@incentive,w
  3768     01C6  1D03               	btfss	3,2
  3769     01C7  29C9               	goto	u2011
  3770     01C8  29CA               	goto	u2010
  3771     01C9                     u2011:
  3772     01C9  29CE               	goto	l3111
  3773     01CA                     u2010:
  3774     01CA                     l3109:
  3775                           
  3776                           ;snake.c: 66:         snake_initiate();
  3777     01CA  318F  270E  3181   	fcall	_snake_initiate
  3778                           
  3779                           ;snake.c: 67:     } else if(field[headPosition] > 0){
  3780     01CD  29FC               	goto	l3129
  3781     01CE                     l3111:
  3782     01CE  0867               	movf	_headPosition,w
  3783     01CF  3EA0               	addlw	(low (_field| 0))& (0+255)
  3784     01D0  0086               	movwf	6
  3785     01D1  0187               	clrf	7
  3786     01D2  0801               	movf	1,w
  3787     01D3  1903               	btfsc	3,2
  3788     01D4  29D6               	goto	u2021
  3789     01D5  29D7               	goto	u2020
  3790     01D6                     u2021:
  3791     01D6  29DA               	goto	l3117
  3792     01D7                     u2020:
  3793     01D7                     l3113:
  3794                           
  3795                           ;snake.c: 68:         incentive = -1;
  3796     01D7  01A9               	clrf	snake_move@incentive
  3797     01D8  03A9               	decf	snake_move@incentive,f
  3798     01D9  29CA               	goto	l3109
  3799     01DA                     l3117:
  3800                           
  3801                           ;snake.c: 71:         if(headPosition == foodPosition){
  3802     01DA  0867               	movf	_headPosition,w
  3803     01DB  0666               	xorwf	_foodPosition,w
  3804     01DC  1D03               	skipz
  3805     01DD  29DF               	goto	u2031
  3806     01DE  29E0               	goto	u2030
  3807     01DF                     u2031:
  3808     01DF  29F6               	goto	l3127
  3809     01E0                     u2030:
  3810     01E0                     l3119:
  3811                           
  3812                           ;snake.c: 72:             incentive = 1;
  3813     01E0  01A9               	clrf	snake_move@incentive
  3814     01E1  0AA9               	incf	snake_move@incentive,f
  3815     01E2                     l3121:
  3816                           
  3817                           ;snake.c: 73:             snakeSize++;
  3818     01E2  3001               	movlw	1
  3819     01E3  00A6               	movwf	??_snake_move
  3820     01E4  0826               	movf	??_snake_move,w
  3821     01E5  07E9               	addwf	_snakeSize,f
  3822     01E6                     l3123:
  3823                           
  3824                           ;snake.c: 75:                 foodPosition = ((uint8_t)rand())&0x1f;
  3825     01E6  3180  200B  3181   	fcall	_rand
  3826     01E9  087C               	movf	?_rand,w
  3827     01EA  391F               	andlw	31
  3828     01EB  0020               	movlb	0	; select bank0
  3829     01EC  00E6               	movwf	_foodPosition
  3830     01ED                     l3125:
  3831                           
  3832                           ;snake.c: 76:             }while(field[foodPosition] > 0);
  3833     01ED  0866               	movf	_foodPosition,w
  3834     01EE  3EA0               	addlw	(low (_field| 0))& (0+255)
  3835     01EF  0086               	movwf	6
  3836     01F0  0187               	clrf	7
  3837     01F1  0801               	movf	1,w
  3838     01F2  1D03               	btfss	3,2
  3839     01F3  29F5               	goto	u2041
  3840     01F4  29F6               	goto	u2040
  3841     01F5                     u2041:
  3842     01F5  29E6               	goto	l3123
  3843     01F6                     u2040:
  3844     01F6                     l3127:
  3845                           
  3846                           ;snake.c: 78:         field[headPosition] = snakeSize;
  3847     01F6  0867               	movf	_headPosition,w
  3848     01F7  3EA0               	addlw	(low (_field| 0))& (0+255)
  3849     01F8  0086               	movwf	6
  3850     01F9  0187               	clrf	7
  3851     01FA  0869               	movf	_snakeSize,w
  3852     01FB  0081               	movwf	1
  3853     01FC                     l3129:
  3854                           
  3855                           ;snake.c: 80:     return incentive;
  3856     01FC  0020               	movlb	0	; select bank0
  3857     01FD  0829               	movf	snake_move@incentive,w
  3858     01FE                     l453:
  3859     01FE  0008               	return
  3860     01FF                     __end_of_snake_move:
  3861                           
  3862                           	psect	text2
  3863     0F0E                     __ptext2:	
  3864 ;; *************** function _snake_initiate *****************
  3865 ;; Defined at:
  3866 ;;		line 17 in file "snake.c"
  3867 ;; Parameters:    Size  Location     Type
  3868 ;;		None
  3869 ;; Auto vars:     Size  Location     Type
  3870 ;;  i               1    5[BANK0 ] unsigned char 
  3871 ;; Return value:  Size  Location     Type
  3872 ;;                  1    wreg      void 
  3873 ;; Registers used:
  3874 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3875 ;; Tracked objects:
  3876 ;;		On entry : 0/0
  3877 ;;		On exit  : 0/0
  3878 ;;		Unchanged: 0/0
  3879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3880 ;;      Params:         0       0       0       0       0       0
  3881 ;;      Locals:         0       1       0       0       0       0
  3882 ;;      Temps:          0       1       0       0       0       0
  3883 ;;      Totals:         0       2       0       0       0       0
  3884 ;;Total ram usage:        2 bytes
  3885 ;; Hardware stack levels used: 1
  3886 ;; Hardware stack levels required when called: 2
  3887 ;; This function calls:
  3888 ;;		_rand
  3889 ;; This function is called by:
  3890 ;;		_main
  3891 ;;		_snake_move
  3892 ;; This function uses a non-reentrant model
  3893 ;;
  3894                           
  3895     0F0E                     _snake_initiate:	
  3896                           ;psect for function _snake_initiate
  3897                           
  3898     0F0E                     l2687:	
  3899                           ;incstack = 0
  3900                           ; Regs used in _snake_initiate: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3901                           
  3902                           
  3903                           ;snake.c: 18:     for(uint8_t i = 0; i < 64; i++){
  3904     0F0E  0020               	movlb	0	; select bank0
  3905     0F0F  01A5               	clrf	snake_initiate@i
  3906     0F10                     l2693:
  3907                           
  3908                           ;snake.c: 19:         field[i] = 0;
  3909     0F10  0825               	movf	snake_initiate@i,w
  3910     0F11  3EA0               	addlw	(low (_field| 0))& (0+255)
  3911     0F12  0086               	movwf	6
  3912     0F13  0187               	clrf	7
  3913     0F14  0181               	clrf	1
  3914     0F15                     l2695:
  3915                           
  3916                           ;snake.c: 20:     }
  3917     0F15  3001               	movlw	1
  3918     0F16  00A4               	movwf	??_snake_initiate
  3919     0F17  0824               	movf	??_snake_initiate,w
  3920     0F18  07A5               	addwf	snake_initiate@i,f
  3921     0F19                     l2697:
  3922     0F19  3040               	movlw	64
  3923     0F1A  0225               	subwf	snake_initiate@i,w
  3924     0F1B  1C03               	skipc
  3925     0F1C  2F1E               	goto	u1451
  3926     0F1D  2F1F               	goto	u1450
  3927     0F1E                     u1451:
  3928     0F1E  2F10               	goto	l2693
  3929     0F1F                     u1450:
  3930     0F1F                     l2699:
  3931                           
  3932                           ;snake.c: 21:     headPosition = ((uint8_t)rand())&0x3f;
  3933     0F1F  3180  200B  318F   	fcall	_rand
  3934     0F22  087C               	movf	?_rand,w
  3935     0F23  393F               	andlw	63
  3936     0F24  0020               	movlb	0	; select bank0
  3937     0F25  00E7               	movwf	_headPosition
  3938                           
  3939                           ;snake.c: 22:     foodPosition = ((uint8_t)rand())&0x3f;
  3940     0F26  3180  200B  318F   	fcall	_rand
  3941     0F29  087C               	movf	?_rand,w
  3942     0F2A  393F               	andlw	63
  3943     0F2B  0020               	movlb	0	; select bank0
  3944     0F2C  00E6               	movwf	_foodPosition
  3945     0F2D                     l2701:
  3946                           
  3947                           ;snake.c: 23:     snakeSize = 1;
  3948     0F2D  01E9               	clrf	_snakeSize
  3949     0F2E  0AE9               	incf	_snakeSize,f
  3950     0F2F                     l2703:
  3951                           
  3952                           ;snake.c: 24:     field[headPosition] = snakeSize;
  3953     0F2F  0867               	movf	_headPosition,w
  3954     0F30  3EA0               	addlw	(low (_field| 0))& (0+255)
  3955     0F31  0086               	movwf	6
  3956     0F32  0187               	clrf	7
  3957     0F33  0869               	movf	_snakeSize,w
  3958     0F34  0081               	movwf	1
  3959     0F35                     l426:
  3960     0F35  0008               	return
  3961     0F36                     __end_of_snake_initiate:
  3962                           
  3963                           	psect	text3
  3964     01FF                     __ptext3:	
  3965 ;; *************** function _snake_getSurroundings *****************
  3966 ;; Defined at:
  3967 ;;		line 87 in file "snake.c"
  3968 ;; Parameters:    Size  Location     Type
  3969 ;;  surroundings    1    wreg     PTR unsigned char 
  3970 ;;		 -> Y0(16), 
  3971 ;; Auto vars:     Size  Location     Type
  3972 ;;  surroundings    1    4[COMMON] PTR unsigned char 
  3973 ;;		 -> Y0(16), 
  3974 ;;  i               1    3[COMMON] unsigned char 
  3975 ;;  i               1    2[COMMON] unsigned char 
  3976 ;;  p               1    1[COMMON] unsigned char 
  3977 ;; Return value:  Size  Location     Type
  3978 ;;                  1    wreg      void 
  3979 ;; Registers used:
  3980 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3981 ;; Tracked objects:
  3982 ;;		On entry : 0/0
  3983 ;;		On exit  : 0/0
  3984 ;;		Unchanged: 0/0
  3985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3986 ;;      Params:         0       0       0       0       0       0
  3987 ;;      Locals:         4       0       0       0       0       0
  3988 ;;      Temps:          1       0       0       0       0       0
  3989 ;;      Totals:         5       0       0       0       0       0
  3990 ;;Total ram usage:        5 bytes
  3991 ;; Hardware stack levels used: 1
  3992 ;; This function calls:
  3993 ;;		Nothing
  3994 ;; This function is called by:
  3995 ;;		_main
  3996 ;; This function uses a non-reentrant model
  3997 ;;
  3998                           
  3999     01FF                     _snake_getSurroundings:	
  4000                           ;psect for function _snake_getSurroundings
  4001                           
  4002                           
  4003                           ;incstack = 0
  4004                           ; Regs used in _snake_getSurroundings: [wreg+fsr1l+fsr1h+status,2+status,0]
  4005                           ;snake_getSurroundings@surroundings stored from wreg
  4006     01FF  00F4               	movwf	snake_getSurroundings@surroundings
  4007     0200                     l2917:
  4008                           
  4009                           ;snake.c: 88:     for(uint8_t i = 0; i < 16; i++){
  4010     0200  01F2               	clrf	snake_getSurroundings@i
  4011     0201                     l2923:
  4012                           
  4013                           ;snake.c: 89:         surroundings[i] = 0;
  4014     0201  0872               	movf	snake_getSurroundings@i,w
  4015     0202  0774               	addwf	snake_getSurroundings@surroundings,w
  4016     0203  00F0               	movwf	??_snake_getSurroundings
  4017     0204  0870               	movf	??_snake_getSurroundings,w
  4018     0205  0086               	movwf	6
  4019     0206  0187               	clrf	7
  4020     0207  0181               	clrf	1
  4021     0208                     l2925:
  4022                           
  4023                           ;snake.c: 90:     }
  4024     0208  3001               	movlw	1
  4025     0209  00F0               	movwf	??_snake_getSurroundings
  4026     020A  0870               	movf	??_snake_getSurroundings,w
  4027     020B  07F2               	addwf	snake_getSurroundings@i,f
  4028     020C                     l2927:
  4029     020C  3010               	movlw	16
  4030     020D  0272               	subwf	snake_getSurroundings@i,w
  4031     020E  1C03               	skipc
  4032     020F  2A11               	goto	u1751
  4033     0210  2A12               	goto	u1750
  4034     0211                     u1751:
  4035     0211  2A01               	goto	l2923
  4036     0212                     u1750:
  4037     0212                     l2929:
  4038                           
  4039                           ;snake.c: 91:     if((headPosition&0x07) == 0){
  4040     0212  0020               	movlb	0	; select bank0
  4041     0213  0867               	movf	_headPosition,w
  4042     0214  3907               	andlw	7
  4043     0215  1D03               	btfss	3,2
  4044     0216  2A18               	goto	u1761
  4045     0217  2A19               	goto	u1760
  4046     0218                     u1761:
  4047     0218  2A2A               	goto	l2935
  4048     0219                     u1760:
  4049     0219                     l2931:
  4050                           
  4051                           ;snake.c: 92:         surroundings[0] = 1;
  4052     0219  0874               	movf	snake_getSurroundings@surroundings,w
  4053     021A  0086               	movwf	6
  4054     021B  0187               	clrf	7
  4055     021C  0181               	clrf	1
  4056     021D  0A81               	incf	1,f
  4057                           
  4058                           ;snake.c: 93:         surroundings[1] = 1;
  4059     021E  0A74               	incf	snake_getSurroundings@surroundings,w
  4060     021F  0086               	movwf	6
  4061     0220  0187               	clrf	7
  4062     0221  0181               	clrf	1
  4063     0222  0A81               	incf	1,f
  4064     0223                     l2933:
  4065                           
  4066                           ;snake.c: 94:         surroundings[2] = 1;
  4067     0223  0874               	movf	snake_getSurroundings@surroundings,w
  4068     0224  3E02               	addlw	2
  4069     0225  0086               	movwf	6
  4070     0226  0187               	clrf	7
  4071     0227  0181               	clrf	1
  4072     0228  0A81               	incf	1,f
  4073                           
  4074                           ;snake.c: 95:     } else if((headPosition&0x07) == 7){
  4075     0229  2A45               	goto	l2939
  4076     022A                     l2935:
  4077     022A  3007               	movlw	7
  4078     022B  0567               	andwf	_headPosition,w
  4079     022C  00F0               	movwf	??_snake_getSurroundings
  4080     022D  3007               	movlw	7
  4081     022E  0670               	xorwf	??_snake_getSurroundings,w
  4082     022F  1D03               	btfss	3,2
  4083     0230  2A32               	goto	u1771
  4084     0231  2A33               	goto	u1770
  4085     0232                     u1771:
  4086     0232  2A45               	goto	l2939
  4087     0233                     u1770:
  4088     0233                     l2937:
  4089                           
  4090                           ;snake.c: 96:         surroundings[4] = 1;
  4091     0233  0874               	movf	snake_getSurroundings@surroundings,w
  4092     0234  3E04               	addlw	4
  4093     0235  0086               	movwf	6
  4094     0236  0187               	clrf	7
  4095     0237  0181               	clrf	1
  4096     0238  0A81               	incf	1,f
  4097                           
  4098                           ;snake.c: 97:         surroundings[5] = 1;
  4099     0239  0874               	movf	snake_getSurroundings@surroundings,w
  4100     023A  3E05               	addlw	5
  4101     023B  0086               	movwf	6
  4102     023C  0187               	clrf	7
  4103     023D  0181               	clrf	1
  4104     023E  0A81               	incf	1,f
  4105                           
  4106                           ;snake.c: 98:         surroundings[6] = 1;
  4107     023F  0874               	movf	snake_getSurroundings@surroundings,w
  4108     0240  3E06               	addlw	6
  4109     0241  0086               	movwf	6
  4110     0242  0187               	clrf	7
  4111     0243  0181               	clrf	1
  4112     0244  0A81               	incf	1,f
  4113     0245                     l2939:
  4114                           
  4115                           ;snake.c: 100:     if((headPosition>>3) == 0){
  4116     0245  0867               	movf	_headPosition,w
  4117     0246  00F0               	movwf	??_snake_getSurroundings
  4118     0247  3003               	movlw	3
  4119     0248                     u1785:
  4120     0248  36F0               	lsrf	??_snake_getSurroundings,f
  4121     0249  0B89               	decfsz	9,f
  4122     024A  2A48               	goto	u1785
  4123     024B  0870               	movf	??_snake_getSurroundings,w
  4124     024C  1D03               	btfss	3,2
  4125     024D  2A4F               	goto	u1791
  4126     024E  2A50               	goto	u1790
  4127     024F                     u1791:
  4128     024F  2A62               	goto	l2945
  4129     0250                     u1790:
  4130     0250                     l2941:
  4131                           
  4132                           ;snake.c: 101:         surroundings[6] = 1;
  4133     0250  0874               	movf	snake_getSurroundings@surroundings,w
  4134     0251  3E06               	addlw	6
  4135     0252  0086               	movwf	6
  4136     0253  0187               	clrf	7
  4137     0254  0181               	clrf	1
  4138     0255  0A81               	incf	1,f
  4139                           
  4140                           ;snake.c: 102:         surroundings[7] = 1;
  4141     0256  0874               	movf	snake_getSurroundings@surroundings,w
  4142     0257  3E07               	addlw	7
  4143     0258  0086               	movwf	6
  4144     0259  0187               	clrf	7
  4145     025A  0181               	clrf	1
  4146     025B  0A81               	incf	1,f
  4147     025C                     l2943:
  4148                           
  4149                           ;snake.c: 103:         surroundings[0] = 1;
  4150     025C  0874               	movf	snake_getSurroundings@surroundings,w
  4151     025D  0086               	movwf	6
  4152     025E  0187               	clrf	7
  4153     025F  0181               	clrf	1
  4154     0260  0A81               	incf	1,f
  4155                           
  4156                           ;snake.c: 104:     } else if((headPosition>>3) == 7){
  4157     0261  2A80               	goto	l2949
  4158     0262                     l2945:
  4159     0262  0867               	movf	_headPosition,w
  4160     0263  00F0               	movwf	??_snake_getSurroundings
  4161     0264  3003               	movlw	3
  4162     0265                     u1805:
  4163     0265  36F0               	lsrf	??_snake_getSurroundings,f
  4164     0266  0B89               	decfsz	9,f
  4165     0267  2A65               	goto	u1805
  4166     0268  3007               	movlw	7
  4167     0269  0670               	xorwf	??_snake_getSurroundings,w
  4168     026A  1D03               	btfss	3,2
  4169     026B  2A6D               	goto	u1811
  4170     026C  2A6E               	goto	u1810
  4171     026D                     u1811:
  4172     026D  2A80               	goto	l2949
  4173     026E                     u1810:
  4174     026E                     l2947:
  4175                           
  4176                           ;snake.c: 105:         surroundings[2] = 1;
  4177     026E  0874               	movf	snake_getSurroundings@surroundings,w
  4178     026F  3E02               	addlw	2
  4179     0270  0086               	movwf	6
  4180     0271  0187               	clrf	7
  4181     0272  0181               	clrf	1
  4182     0273  0A81               	incf	1,f
  4183                           
  4184                           ;snake.c: 106:         surroundings[3] = 1;
  4185     0274  0874               	movf	snake_getSurroundings@surroundings,w
  4186     0275  3E03               	addlw	3
  4187     0276  0086               	movwf	6
  4188     0277  0187               	clrf	7
  4189     0278  0181               	clrf	1
  4190     0279  0A81               	incf	1,f
  4191                           
  4192                           ;snake.c: 107:         surroundings[4] = 1;
  4193     027A  0874               	movf	snake_getSurroundings@surroundings,w
  4194     027B  3E04               	addlw	4
  4195     027C  0086               	movwf	6
  4196     027D  0187               	clrf	7
  4197     027E  0181               	clrf	1
  4198     027F  0A81               	incf	1,f
  4199     0280                     l2949:
  4200                           
  4201                           ;snake.c: 109:     uint8_t p;;snake.c: 110:     for(uint8_t i = 0; i < 8; i++){
  4202     0280  01F3               	clrf	snake_getSurroundings@i_802
  4203     0281                     l2955:
  4204                           
  4205                           ;snake.c: 111:         p = (headPosition+mapping[i])&0x3f;
  4206     0281  0873               	movf	snake_getSurroundings@i_802,w
  4207     0282  3E60               	addlw	(low (_mapping| (0+256)))& (0+255)
  4208     0283  0086               	movwf	6
  4209     0284  3001               	movlw	1	; select bank2/3
  4210     0285  0087               	movwf	7
  4211     0286  0801               	movf	1,w
  4212     0287  0767               	addwf	_headPosition,w
  4213     0288  393F               	andlw	63
  4214     0289  00F1               	movwf	snake_getSurroundings@p
  4215     028A                     l2957:
  4216                           
  4217                           ;snake.c: 112:         if(p==foodPosition){
  4218     028A  0871               	movf	snake_getSurroundings@p,w
  4219     028B  0666               	xorwf	_foodPosition,w
  4220     028C  1D03               	skipz
  4221     028D  2A8F               	goto	u1821
  4222     028E  2A90               	goto	u1820
  4223     028F                     u1821:
  4224     028F  2A99               	goto	l469
  4225     0290                     u1820:
  4226     0290                     l2959:
  4227                           
  4228                           ;snake.c: 113:             surroundings[i+8] = 1;
  4229     0290  0873               	movf	snake_getSurroundings@i_802,w
  4230     0291  0774               	addwf	snake_getSurroundings@surroundings,w
  4231     0292  00F0               	movwf	??_snake_getSurroundings
  4232     0293  0870               	movf	??_snake_getSurroundings,w
  4233     0294  3E08               	addlw	8
  4234     0295  0086               	movwf	6
  4235     0296  0187               	clrf	7
  4236     0297  0181               	clrf	1
  4237     0298  0A81               	incf	1,f
  4238     0299                     l469:	
  4239                           ;snake.c: 114:         }
  4240                           
  4241                           
  4242                           ;snake.c: 115:         if(field[p] > 0){
  4243     0299  0871               	movf	snake_getSurroundings@p,w
  4244     029A  3EA0               	addlw	(low (_field| 0))& (0+255)
  4245     029B  0086               	movwf	6
  4246     029C  0187               	clrf	7
  4247     029D  0801               	movf	1,w
  4248     029E  1903               	btfsc	3,2
  4249     029F  2AA1               	goto	u1831
  4250     02A0  2AA2               	goto	u1830
  4251     02A1                     u1831:
  4252     02A1  2AAA               	goto	l2963
  4253     02A2                     u1830:
  4254     02A2                     l2961:
  4255                           
  4256                           ;snake.c: 116:             surroundings[i] = 1;
  4257     02A2  0873               	movf	snake_getSurroundings@i_802,w
  4258     02A3  0774               	addwf	snake_getSurroundings@surroundings,w
  4259     02A4  00F0               	movwf	??_snake_getSurroundings
  4260     02A5  0870               	movf	??_snake_getSurroundings,w
  4261     02A6  0086               	movwf	6
  4262     02A7  0187               	clrf	7
  4263     02A8  0181               	clrf	1
  4264     02A9  0A81               	incf	1,f
  4265     02AA                     l2963:
  4266                           
  4267                           ;snake.c: 118:     }
  4268     02AA  3001               	movlw	1
  4269     02AB  00F0               	movwf	??_snake_getSurroundings
  4270     02AC  0870               	movf	??_snake_getSurroundings,w
  4271     02AD  07F3               	addwf	snake_getSurroundings@i_802,f
  4272     02AE                     l2965:
  4273     02AE  3008               	movlw	8
  4274     02AF  0273               	subwf	snake_getSurroundings@i_802,w
  4275     02B0  1C03               	skipc
  4276     02B1  2AB3               	goto	u1841
  4277     02B2  2AB4               	goto	u1840
  4278     02B3                     u1841:
  4279     02B3  2A81               	goto	l2955
  4280     02B4                     u1840:
  4281     02B4                     l471:
  4282     02B4  0008               	return
  4283     02B5                     __end_of_snake_getSurroundings:
  4284                           
  4285                           	psect	text4
  4286     0D31                     __ptext4:	
  4287 ;; *************** function _snake_getFoodPosition *****************
  4288 ;; Defined at:
  4289 ;;		line 128 in file "snake.c"
  4290 ;; Parameters:    Size  Location     Type
  4291 ;;		None
  4292 ;; Auto vars:     Size  Location     Type
  4293 ;;		None
  4294 ;; Return value:  Size  Location     Type
  4295 ;;                  1    wreg      unsigned char 
  4296 ;; Registers used:
  4297 ;;		wreg
  4298 ;; Tracked objects:
  4299 ;;		On entry : 0/0
  4300 ;;		On exit  : 0/0
  4301 ;;		Unchanged: 0/0
  4302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4303 ;;      Params:         0       0       0       0       0       0
  4304 ;;      Locals:         0       0       0       0       0       0
  4305 ;;      Temps:          0       0       0       0       0       0
  4306 ;;      Totals:         0       0       0       0       0       0
  4307 ;;Total ram usage:        0 bytes
  4308 ;; Hardware stack levels used: 1
  4309 ;; This function calls:
  4310 ;;		Nothing
  4311 ;; This function is called by:
  4312 ;;		_main
  4313 ;; This function uses a non-reentrant model
  4314 ;;
  4315                           
  4316     0D31                     _snake_getFoodPosition:	
  4317                           ;psect for function _snake_getFoodPosition
  4318                           
  4319     0D31                     l2875:	
  4320                           ;incstack = 0
  4321                           ; Regs used in _snake_getFoodPosition: [wreg]
  4322                           
  4323                           
  4324                           ;snake.c: 129:     return foodPosition;
  4325     0D31  0020               	movlb	0	; select bank0
  4326     0D32  0866               	movf	_foodPosition,w
  4327     0D33                     l480:
  4328     0D33  0008               	return
  4329     0D34                     __end_of_snake_getFoodPosition:
  4330                           
  4331                           	psect	text5
  4332     0D2F                     __ptext5:	
  4333 ;; *************** function _snake_getField *****************
  4334 ;; Defined at:
  4335 ;;		line 83 in file "snake.c"
  4336 ;; Parameters:    Size  Location     Type
  4337 ;;		None
  4338 ;; Auto vars:     Size  Location     Type
  4339 ;;		None
  4340 ;; Return value:  Size  Location     Type
  4341 ;;                  1    wreg      PTR unsigned char 
  4342 ;; Registers used:
  4343 ;;		wreg
  4344 ;; Tracked objects:
  4345 ;;		On entry : 0/0
  4346 ;;		On exit  : 0/0
  4347 ;;		Unchanged: 0/0
  4348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4349 ;;      Params:         0       0       0       0       0       0
  4350 ;;      Locals:         0       0       0       0       0       0
  4351 ;;      Temps:          0       0       0       0       0       0
  4352 ;;      Totals:         0       0       0       0       0       0
  4353 ;;Total ram usage:        0 bytes
  4354 ;; Hardware stack levels used: 1
  4355 ;; This function calls:
  4356 ;;		Nothing
  4357 ;; This function is called by:
  4358 ;;		_main
  4359 ;; This function uses a non-reentrant model
  4360 ;;
  4361                           
  4362     0D2F                     _snake_getField:	
  4363                           ;psect for function _snake_getField
  4364                           
  4365     0D2F                     l2867:	
  4366                           ;incstack = 0
  4367                           ; Regs used in _snake_getField: [wreg]
  4368                           
  4369                           
  4370                           ;snake.c: 84:     return field;
  4371     0D2F  30A0               	movlw	(low (_field| 0))& (0+255)
  4372     0D30                     l456:
  4373     0D30  0008               	return
  4374     0D31                     __end_of_snake_getField:
  4375                           
  4376                           	psect	text6
  4377     0EEB                     __ptext6:	
  4378 ;; *************** function _setLine *****************
  4379 ;; Defined at:
  4380 ;;		line 43 in file "ledMatrix.c"
  4381 ;; Parameters:    Size  Location     Type
  4382 ;;  l               1    wreg     unsigned char 
  4383 ;;  val             1    8[BANK0 ] unsigned char 
  4384 ;; Auto vars:     Size  Location     Type
  4385 ;;  l               1   10[BANK0 ] unsigned char 
  4386 ;;  i               1   12[BANK0 ] unsigned char 
  4387 ;;  mask            1   11[BANK0 ] unsigned char 
  4388 ;; Return value:  Size  Location     Type
  4389 ;;                  1    wreg      void 
  4390 ;; Registers used:
  4391 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  4392 ;; Tracked objects:
  4393 ;;		On entry : 0/0
  4394 ;;		On exit  : 0/0
  4395 ;;		Unchanged: 0/0
  4396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4397 ;;      Params:         0       1       0       0       0       0
  4398 ;;      Locals:         0       3       0       0       0       0
  4399 ;;      Temps:          0       1       0       0       0       0
  4400 ;;      Totals:         0       5       0       0       0       0
  4401 ;;Total ram usage:        5 bytes
  4402 ;; Hardware stack levels used: 1
  4403 ;; This function calls:
  4404 ;;		Nothing
  4405 ;; This function is called by:
  4406 ;;		_main
  4407 ;; This function uses a non-reentrant model
  4408 ;;
  4409                           
  4410     0EEB                     _setLine:	
  4411                           ;psect for function _setLine
  4412                           
  4413                           
  4414                           ;incstack = 0
  4415                           ; Regs used in _setLine: [wreg-fsr1h+status,2+status,0]
  4416                           ;setLine@l stored from wreg
  4417     0EEB  0020               	movlb	0	; select bank0
  4418     0EEC  00AA               	movwf	setLine@l
  4419     0EED                     l3333:
  4420                           
  4421                           ;ledMatrix.c: 44:     uint8_t mask = 0x80;
  4422     0EED  3080               	movlw	128
  4423     0EEE  00AB               	movwf	setLine@mask
  4424     0EEF                     l3335:
  4425                           
  4426                           ;ledMatrix.c: 45:     for(uint8_t i = 0; i < 8; i++){
  4427     0EEF  01AC               	clrf	setLine@i
  4428     0EF0                     l3341:
  4429                           
  4430                           ;ledMatrix.c: 46:         matrix[l] = (val&mask) | (matrix[l]|(~mask));
  4431     0EF0  082A               	movf	setLine@l,w
  4432     0EF1  3E3C               	addlw	(low (_matrix| (0+256)))& (0+255)
  4433     0EF2  0086               	movwf	6
  4434     0EF3  3001               	movlw	1	; select bank2/3
  4435     0EF4  0087               	movwf	7
  4436     0EF5  082A               	movf	setLine@l,w
  4437     0EF6  3E3C               	addlw	(low (_matrix| (0+256)))& (0+255)
  4438     0EF7  0084               	movwf	4
  4439     0EF8  3001               	movlw	1	; select bank2/3
  4440     0EF9  0085               	movwf	5
  4441     0EFA  092B               	comf	setLine@mask,w
  4442     0EFB  0400               	iorwf	0,w
  4443     0EFC  00A9               	movwf	??_setLine
  4444     0EFD  0828               	movf	setLine@val,w
  4445     0EFE  052B               	andwf	setLine@mask,w
  4446     0EFF  0429               	iorwf	??_setLine,w
  4447     0F00  0081               	movwf	1
  4448     0F01                     l3343:
  4449                           
  4450                           ;ledMatrix.c: 47:         mask >>= 1;
  4451     0F01  1003               	clrc
  4452     0F02  0CAB               	rrf	setLine@mask,f
  4453     0F03                     l3345:
  4454                           
  4455                           ;ledMatrix.c: 48:     }
  4456     0F03  3001               	movlw	1
  4457     0F04  00A9               	movwf	??_setLine
  4458     0F05  0829               	movf	??_setLine,w
  4459     0F06  07AC               	addwf	setLine@i,f
  4460     0F07                     l3347:
  4461     0F07  3008               	movlw	8
  4462     0F08  022C               	subwf	setLine@i,w
  4463     0F09  1C03               	skipc
  4464     0F0A  2F0C               	goto	u2251
  4465     0F0B  2F0D               	goto	u2250
  4466     0F0C                     u2251:
  4467     0F0C  2EF0               	goto	l3341
  4468     0F0D                     u2250:
  4469     0F0D                     l394:
  4470     0F0D  0008               	return
  4471     0F0E                     __end_of_setLine:
  4472                           
  4473                           	psect	text7
  4474     0F60                     __ptext7:	
  4475 ;; *************** function _sendMatrix *****************
  4476 ;; Defined at:
  4477 ;;		line 51 in file "ledMatrix.c"
  4478 ;; Parameters:    Size  Location     Type
  4479 ;;		None
  4480 ;; Auto vars:     Size  Location     Type
  4481 ;;  j               1    6[COMMON] unsigned char 
  4482 ;;  i               1    7[COMMON] unsigned char 
  4483 ;;  nb              1    5[COMMON] unsigned char 
  4484 ;;  b               1    4[COMMON] unsigned char 
  4485 ;; Return value:  Size  Location     Type
  4486 ;;                  1    wreg      void 
  4487 ;; Registers used:
  4488 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4489 ;; Tracked objects:
  4490 ;;		On entry : 0/0
  4491 ;;		On exit  : 0/0
  4492 ;;		Unchanged: 0/0
  4493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4494 ;;      Params:         0       0       0       0       0       0
  4495 ;;      Locals:         4       0       0       0       0       0
  4496 ;;      Temps:          1       0       0       0       0       0
  4497 ;;      Totals:         5       0       0       0       0       0
  4498 ;;Total ram usage:        5 bytes
  4499 ;; Hardware stack levels used: 1
  4500 ;; Hardware stack levels required when called: 2
  4501 ;; This function calls:
  4502 ;;		_txMAX7219
  4503 ;; This function is called by:
  4504 ;;		_main
  4505 ;; This function uses a non-reentrant model
  4506 ;;
  4507                           
  4508     0F60                     _sendMatrix:	
  4509                           ;psect for function _sendMatrix
  4510                           
  4511     0F60                     l2879:	
  4512                           ;incstack = 0
  4513                           ; Regs used in _sendMatrix: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4514                           
  4515                           
  4516                           ;ledMatrix.c: 52:     uint8_t b;;ledMatrix.c: 53:     uint8_t nb;;ledMatrix.c: 54:     f
      +                          or(uint8_t i=0;i<8;i++){
  4517     0F60  01F7               	clrf	sendMatrix@i
  4518     0F61                     l2885:
  4519                           
  4520                           ;ledMatrix.c: 58:         b = matrix[i];
  4521     0F61  0877               	movf	sendMatrix@i,w
  4522     0F62  3E3C               	addlw	(low (_matrix| (0+256)))& (0+255)
  4523     0F63  0086               	movwf	6
  4524     0F64  3001               	movlw	1	; select bank2/3
  4525     0F65  0087               	movwf	7
  4526     0F66  0801               	movf	1,w
  4527     0F67  00F4               	movwf	sendMatrix@b
  4528     0F68                     l2887:
  4529                           
  4530                           ;ledMatrix.c: 61:         nb = 0x00;
  4531     0F68  01F5               	clrf	sendMatrix@nb
  4532     0F69                     l2889:
  4533                           
  4534                           ;ledMatrix.c: 62:         for(uint8_t j = 0; j < 8; j++){
  4535     0F69  01F6               	clrf	sendMatrix@j
  4536     0F6A                     l2895:
  4537                           
  4538                           ;ledMatrix.c: 63:             nb <<= 1;
  4539     0F6A  1003               	clrc
  4540     0F6B  0DF5               	rlf	sendMatrix@nb,f
  4541     0F6C                     l2897:
  4542                           
  4543                           ;ledMatrix.c: 64:             nb |= b&0x01;
  4544     0F6C  0874               	movf	sendMatrix@b,w
  4545     0F6D  3901               	andlw	1
  4546     0F6E  00F3               	movwf	??_sendMatrix
  4547     0F6F  0873               	movf	??_sendMatrix,w
  4548     0F70  04F5               	iorwf	sendMatrix@nb,f
  4549     0F71                     l2899:
  4550                           
  4551                           ;ledMatrix.c: 65:             b >>= 1;
  4552     0F71  1003               	clrc
  4553     0F72  0CF4               	rrf	sendMatrix@b,f
  4554                           
  4555                           ;ledMatrix.c: 66:         }
  4556     0F73  3001               	movlw	1
  4557     0F74  00F3               	movwf	??_sendMatrix
  4558     0F75  0873               	movf	??_sendMatrix,w
  4559     0F76  07F6               	addwf	sendMatrix@j,f
  4560     0F77                     l2901:
  4561     0F77  3008               	movlw	8
  4562     0F78  0276               	subwf	sendMatrix@j,w
  4563     0F79  1C03               	skipc
  4564     0F7A  2F7C               	goto	u1731
  4565     0F7B  2F7D               	goto	u1730
  4566     0F7C                     u1731:
  4567     0F7C  2F6A               	goto	l2895
  4568     0F7D                     u1730:
  4569     0F7D                     l2903:
  4570                           
  4571                           ;ledMatrix.c: 67:         txMAX7219(i+1,nb);
  4572     0F7D  0875               	movf	sendMatrix@nb,w
  4573     0F7E  00F1               	movwf	txMAX7219@dat0
  4574     0F7F  0877               	movf	sendMatrix@i,w
  4575     0F80  3E01               	addlw	1
  4576     0F81  318E  2690  318F   	fcall	_txMAX7219
  4577     0F84                     l2905:
  4578                           
  4579                           ;ledMatrix.c: 71:     }
  4580     0F84  3001               	movlw	1
  4581     0F85  00F3               	movwf	??_sendMatrix
  4582     0F86  0873               	movf	??_sendMatrix,w
  4583     0F87  07F7               	addwf	sendMatrix@i,f
  4584     0F88                     l2907:
  4585     0F88  3008               	movlw	8
  4586     0F89  0277               	subwf	sendMatrix@i,w
  4587     0F8A  1C03               	skipc
  4588     0F8B  2F8D               	goto	u1741
  4589     0F8C  2F8E               	goto	u1740
  4590     0F8D                     u1741:
  4591     0F8D  2F61               	goto	l2885
  4592     0F8E                     u1740:
  4593     0F8E                     l401:
  4594     0F8E  0008               	return
  4595     0F8F                     __end_of_sendMatrix:
  4596                           
  4597                           	psect	text8
  4598     0E11                     __ptext8:	
  4599 ;; *************** function _ledSet *****************
  4600 ;; Defined at:
  4601 ;;		line 31 in file "ledMatrix.c"
  4602 ;; Parameters:    Size  Location     Type
  4603 ;;  l               1    wreg     unsigned char 
  4604 ;;  c               1    0[COMMON] unsigned char 
  4605 ;; Auto vars:     Size  Location     Type
  4606 ;;  l               1    3[COMMON] unsigned char 
  4607 ;; Return value:  Size  Location     Type
  4608 ;;                  1    wreg      void 
  4609 ;; Registers used:
  4610 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4611 ;; Tracked objects:
  4612 ;;		On entry : 0/0
  4613 ;;		On exit  : 0/0
  4614 ;;		Unchanged: 0/0
  4615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4616 ;;      Params:         1       0       0       0       0       0
  4617 ;;      Locals:         1       0       0       0       0       0
  4618 ;;      Temps:          2       0       0       0       0       0
  4619 ;;      Totals:         4       0       0       0       0       0
  4620 ;;Total ram usage:        4 bytes
  4621 ;; Hardware stack levels used: 1
  4622 ;; This function calls:
  4623 ;;		Nothing
  4624 ;; This function is called by:
  4625 ;;		_main
  4626 ;; This function uses a non-reentrant model
  4627 ;;
  4628                           
  4629     0E11                     _ledSet:	
  4630                           ;psect for function _ledSet
  4631                           
  4632                           
  4633                           ;incstack = 0
  4634                           ; Regs used in _ledSet: [wreg+fsr1l+fsr1h+status,2+status,0]
  4635                           ;ledSet@l stored from wreg
  4636     0E11  00F3               	movwf	ledSet@l
  4637     0E12                     l2871:
  4638                           
  4639                           ;ledMatrix.c: 32:     (matrix[c]) |= 1UL << (l);
  4640     0E12  3001               	movlw	1
  4641     0E13  00F1               	movwf	??_ledSet
  4642     0E14  0A73               	incf	ledSet@l,w
  4643     0E15  2E17               	goto	u1714
  4644     0E16                     u1715:
  4645     0E16  35F1               	lslf	??_ledSet,f
  4646     0E17                     u1714:
  4647     0E17  0B89               	decfsz	9,f
  4648     0E18  2E16               	goto	u1715
  4649     0E19  0871               	movf	??_ledSet,w
  4650     0E1A  00F2               	movwf	??_ledSet+1
  4651     0E1B  0870               	movf	ledSet@c,w
  4652     0E1C  3E3C               	addlw	(low (_matrix| (0+256)))& (0+255)
  4653     0E1D  0086               	movwf	6
  4654     0E1E  3001               	movlw	1	; select bank2/3
  4655     0E1F  0087               	movwf	7
  4656     0E20  0872               	movf	??_ledSet+1,w
  4657     0E21  0481               	iorwf	1,f
  4658     0E22                     l383:
  4659     0E22  0008               	return
  4660     0E23                     __end_of_ledSet:
  4661                           
  4662                           	psect	text9
  4663     0E23                     __ptext9:	
  4664 ;; *************** function _ledClear *****************
  4665 ;; Defined at:
  4666 ;;		line 35 in file "ledMatrix.c"
  4667 ;; Parameters:    Size  Location     Type
  4668 ;;  l               1    wreg     unsigned char 
  4669 ;;  c               1    0[COMMON] unsigned char 
  4670 ;; Auto vars:     Size  Location     Type
  4671 ;;  l               1    3[COMMON] unsigned char 
  4672 ;; Return value:  Size  Location     Type
  4673 ;;                  1    wreg      void 
  4674 ;; Registers used:
  4675 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4676 ;; Tracked objects:
  4677 ;;		On entry : 0/0
  4678 ;;		On exit  : 0/0
  4679 ;;		Unchanged: 0/0
  4680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4681 ;;      Params:         1       0       0       0       0       0
  4682 ;;      Locals:         1       0       0       0       0       0
  4683 ;;      Temps:          2       0       0       0       0       0
  4684 ;;      Totals:         4       0       0       0       0       0
  4685 ;;Total ram usage:        4 bytes
  4686 ;; Hardware stack levels used: 1
  4687 ;; This function calls:
  4688 ;;		Nothing
  4689 ;; This function is called by:
  4690 ;;		_main
  4691 ;; This function uses a non-reentrant model
  4692 ;;
  4693                           
  4694     0E23                     _ledClear:	
  4695                           ;psect for function _ledClear
  4696                           
  4697                           
  4698                           ;incstack = 0
  4699                           ; Regs used in _ledClear: [wreg+fsr1l+fsr1h+status,2+status,0]
  4700                           ;ledClear@l stored from wreg
  4701     0E23  00F3               	movwf	ledClear@l
  4702     0E24                     l2873:
  4703                           
  4704                           ;ledMatrix.c: 36:     (matrix[c]) &= ~(1UL << (l));
  4705     0E24  3001               	movlw	1
  4706     0E25  00F1               	movwf	??_ledClear
  4707     0E26  0A73               	incf	ledClear@l,w
  4708     0E27  2E29               	goto	u1724
  4709     0E28                     u1725:
  4710     0E28  35F1               	lslf	??_ledClear,f
  4711     0E29                     u1724:
  4712     0E29  0B89               	decfsz	9,f
  4713     0E2A  2E28               	goto	u1725
  4714     0E2B  0871               	movf	??_ledClear,w
  4715     0E2C  3AFF               	xorlw	255
  4716     0E2D  00F2               	movwf	??_ledClear+1
  4717     0E2E  0870               	movf	ledClear@c,w
  4718     0E2F  3E3C               	addlw	(low (_matrix| (0+256)))& (0+255)
  4719     0E30  0086               	movwf	6
  4720     0E31  3001               	movlw	1	; select bank2/3
  4721     0E32  0087               	movwf	7
  4722     0E33  0872               	movf	??_ledClear+1,w
  4723     0E34  0581               	andwf	1,f
  4724     0E35                     l386:
  4725     0E35  0008               	return
  4726     0E36                     __end_of_ledClear:
  4727                           
  4728                           	psect	text10
  4729     0FC2                     __ptext10:	
  4730 ;; *************** function _initMAX7219 *****************
  4731 ;; Defined at:
  4732 ;;		line 16 in file "ledMatrix.c"
  4733 ;; Parameters:    Size  Location     Type
  4734 ;;		None
  4735 ;; Auto vars:     Size  Location     Type
  4736 ;;		None
  4737 ;; Return value:  Size  Location     Type
  4738 ;;                  1    wreg      void 
  4739 ;; Registers used:
  4740 ;;		wreg, status,2, status,0, pclath, cstack
  4741 ;; Tracked objects:
  4742 ;;		On entry : 0/0
  4743 ;;		On exit  : 0/0
  4744 ;;		Unchanged: 0/0
  4745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4746 ;;      Params:         0       0       0       0       0       0
  4747 ;;      Locals:         0       0       0       0       0       0
  4748 ;;      Temps:          2       0       0       0       0       0
  4749 ;;      Totals:         2       0       0       0       0       0
  4750 ;;Total ram usage:        2 bytes
  4751 ;; Hardware stack levels used: 1
  4752 ;; Hardware stack levels required when called: 2
  4753 ;; This function calls:
  4754 ;;		_txMAX7219
  4755 ;; This function is called by:
  4756 ;;		_main
  4757 ;; This function uses a non-reentrant model
  4758 ;;
  4759                           
  4760     0FC2                     _initMAX7219:	
  4761                           ;psect for function _initMAX7219
  4762                           
  4763     0FC2                     l2857:	
  4764                           ;incstack = 0
  4765                           ; Regs used in _initMAX7219: [wreg+status,2+status,0+pclath+cstack]
  4766                           
  4767                           
  4768                           ;ledMatrix.c: 17:     LATBbits.LATB1 = 1;
  4769     0FC2  0022               	movlb	2	; select bank2
  4770     0FC3  148D               	bsf	13,1	;volatile
  4771                           
  4772                           ;ledMatrix.c: 18:     TRISBbits.TRISB1 = 0;
  4773     0FC4  0021               	movlb	1	; select bank1
  4774     0FC5  108D               	bcf	13,1	;volatile
  4775                           
  4776                           ;ledMatrix.c: 19:     SSP1CON1bits.SSPEN = 1;
  4777     0FC6  0024               	movlb	4	; select bank4
  4778     0FC7  1695               	bsf	21,5	;volatile
  4779     0FC8                     l2859:
  4780                           
  4781                           ;ledMatrix.c: 20:     txMAX7219(0x09,0x00);
  4782     0FC8  01F1               	clrf	txMAX7219@dat0
  4783     0FC9  3009               	movlw	9
  4784     0FCA  318E  2690  318F   	fcall	_txMAX7219
  4785                           
  4786                           ;ledMatrix.c: 21:     txMAX7219(0x0A,0x00);
  4787     0FCD  01F1               	clrf	txMAX7219@dat0
  4788     0FCE  300A               	movlw	10
  4789     0FCF  318E  2690  318F   	fcall	_txMAX7219
  4790                           
  4791                           ;ledMatrix.c: 22:     txMAX7219(0x0C,0x00);
  4792     0FD2  01F1               	clrf	txMAX7219@dat0
  4793     0FD3  300C               	movlw	12
  4794     0FD4  318E  2690  318F   	fcall	_txMAX7219
  4795                           
  4796                           ;ledMatrix.c: 23:     txMAX7219(0x0B,0x07);
  4797     0FD7  3007               	movlw	7
  4798     0FD8  00F1               	movwf	txMAX7219@dat0
  4799     0FD9  300B               	movlw	11
  4800     0FDA  318E  2690  318F   	fcall	_txMAX7219
  4801                           
  4802                           ;ledMatrix.c: 24:     txMAX7219(0x0C,0x01);
  4803     0FDD  01F1               	clrf	txMAX7219@dat0
  4804     0FDE  0AF1               	incf	txMAX7219@dat0,f
  4805     0FDF  300C               	movlw	12
  4806     0FE0  318E  2690  318F   	fcall	_txMAX7219
  4807                           
  4808                           ;ledMatrix.c: 25:     txMAX7219(0x0F,0x01);
  4809     0FE3  01F1               	clrf	txMAX7219@dat0
  4810     0FE4  0AF1               	incf	txMAX7219@dat0,f
  4811     0FE5  300F               	movlw	15
  4812     0FE6  318E  2690  318F   	fcall	_txMAX7219
  4813     0FE9                     l2861:
  4814                           
  4815                           ;ledMatrix.c: 26:     _delay((unsigned long)((1000)*(8000000/4000.0)));
  4816     0FE9  300B               	movlw	11
  4817     0FEA  00F4               	movwf	??_initMAX7219+1
  4818     0FEB  3026               	movlw	38
  4819     0FEC  00F3               	movwf	??_initMAX7219
  4820     0FED  305E               	movlw	94
  4821     0FEE                     u2547:
  4822     0FEE  0B89               	decfsz	9,f
  4823     0FEF  2FEE               	goto	u2547
  4824     0FF0  0BF3               	decfsz	??_initMAX7219,f
  4825     0FF1  2FEE               	goto	u2547
  4826     0FF2  0BF4               	decfsz	??_initMAX7219+1,f
  4827     0FF3  2FEE               	goto	u2547
  4828     0FF4                     l2863:
  4829                           
  4830                           ;ledMatrix.c: 27:     txMAX7219(0x0F,0x00);
  4831     0FF4  01F1               	clrf	txMAX7219@dat0
  4832     0FF5  300F               	movlw	15
  4833     0FF6  318E  2690  318F   	fcall	_txMAX7219
  4834     0FF9                     l2865:
  4835                           
  4836                           ;ledMatrix.c: 28:     txMAX7219(0x0C,0x01);
  4837     0FF9  01F1               	clrf	txMAX7219@dat0
  4838     0FFA  0AF1               	incf	txMAX7219@dat0,f
  4839     0FFB  300C               	movlw	12
  4840     0FFC  318E  2690  318F   	fcall	_txMAX7219
  4841     0FFF                     l380:
  4842     0FFF  0008               	return
  4843     1000                     __end_of_initMAX7219:
  4844                           
  4845                           	psect	text11
  4846     0E90                     __ptext11:	
  4847 ;; *************** function _txMAX7219 *****************
  4848 ;; Defined at:
  4849 ;;		line 5 in file "ledMatrix.c"
  4850 ;; Parameters:    Size  Location     Type
  4851 ;;  addr0           1    wreg     unsigned char 
  4852 ;;  dat0            1    1[COMMON] unsigned char 
  4853 ;; Auto vars:     Size  Location     Type
  4854 ;;  addr0           1    2[COMMON] unsigned char 
  4855 ;; Return value:  Size  Location     Type
  4856 ;;                  1    wreg      void 
  4857 ;; Registers used:
  4858 ;;		wreg, status,2, status,0, pclath, cstack
  4859 ;; Tracked objects:
  4860 ;;		On entry : 0/0
  4861 ;;		On exit  : 0/0
  4862 ;;		Unchanged: 0/0
  4863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4864 ;;      Params:         1       0       0       0       0       0
  4865 ;;      Locals:         1       0       0       0       0       0
  4866 ;;      Temps:          0       0       0       0       0       0
  4867 ;;      Totals:         2       0       0       0       0       0
  4868 ;;Total ram usage:        2 bytes
  4869 ;; Hardware stack levels used: 1
  4870 ;; Hardware stack levels required when called: 1
  4871 ;; This function calls:
  4872 ;;		_SPI1_WriteByte
  4873 ;; This function is called by:
  4874 ;;		_initMAX7219
  4875 ;;		_sendMatrix
  4876 ;; This function uses a non-reentrant model
  4877 ;;
  4878                           
  4879     0E90                     _txMAX7219:	
  4880                           ;psect for function _txMAX7219
  4881                           
  4882                           
  4883                           ;incstack = 0
  4884                           ; Regs used in _txMAX7219: [wreg+status,2+status,0+pclath+cstack]
  4885                           ;txMAX7219@addr0 stored from wreg
  4886     0E90  00F2               	movwf	txMAX7219@addr0
  4887     0E91                     l2705:
  4888                           
  4889                           ;ledMatrix.c: 6:     LATBbits.LATB1 = 0;
  4890     0E91  0022               	movlb	2	; select bank2
  4891     0E92  108D               	bcf	13,1	;volatile
  4892     0E93                     l2707:
  4893                           
  4894                           ;ledMatrix.c: 7:     SPI1_WriteByte(addr0);
  4895     0E93  0872               	movf	txMAX7219@addr0,w
  4896     0E94  318D  2538  318E   	fcall	_SPI1_WriteByte
  4897     0E97                     l371:	
  4898                           ;ledMatrix.c: 8:     while(!PIR1bits.SSP1IF);
  4899                           
  4900     0E97  0020               	movlb	0	; select bank0
  4901     0E98  1D91               	btfss	17,3	;volatile
  4902     0E99  2E9B               	goto	u1461
  4903     0E9A  2E9C               	goto	u1460
  4904     0E9B                     u1461:
  4905     0E9B  2E97               	goto	l371
  4906     0E9C                     u1460:
  4907     0E9C                     l373:
  4908                           
  4909                           ;ledMatrix.c: 9:     PIR1bits.SSP1IF = 0;
  4910     0E9C  1191               	bcf	17,3	;volatile
  4911     0E9D                     l2709:
  4912                           
  4913                           ;ledMatrix.c: 10:     SPI1_WriteByte(dat0);
  4914     0E9D  0871               	movf	txMAX7219@dat0,w
  4915     0E9E  318D  2538  318E   	fcall	_SPI1_WriteByte
  4916     0EA1                     l374:	
  4917                           ;ledMatrix.c: 11:     while(!PIR1bits.SSP1IF);
  4918                           
  4919     0EA1  0020               	movlb	0	; select bank0
  4920     0EA2  1D91               	btfss	17,3	;volatile
  4921     0EA3  2EA5               	goto	u1471
  4922     0EA4  2EA6               	goto	u1470
  4923     0EA5                     u1471:
  4924     0EA5  2EA1               	goto	l374
  4925     0EA6                     u1470:
  4926     0EA6                     l376:
  4927                           
  4928                           ;ledMatrix.c: 12:     PIR1bits.SSP1IF = 0;
  4929     0EA6  1191               	bcf	17,3	;volatile
  4930                           
  4931                           ;ledMatrix.c: 13:     LATBbits.LATB1 = 1;
  4932     0EA7  0022               	movlb	2	; select bank2
  4933     0EA8  148D               	bsf	13,1	;volatile
  4934     0EA9                     l377:
  4935     0EA9  0008               	return
  4936     0EAA                     __end_of_txMAX7219:
  4937                           
  4938                           	psect	text12
  4939     0D38                     __ptext12:	
  4940 ;; *************** function _SPI1_WriteByte *****************
  4941 ;; Defined at:
  4942 ;;		line 131 in file "mcc_generated_files/spi1.c"
  4943 ;; Parameters:    Size  Location     Type
  4944 ;;  byte            1    wreg     unsigned char 
  4945 ;; Auto vars:     Size  Location     Type
  4946 ;;  byte            1    0[COMMON] unsigned char 
  4947 ;; Return value:  Size  Location     Type
  4948 ;;                  1    wreg      void 
  4949 ;; Registers used:
  4950 ;;		wreg
  4951 ;; Tracked objects:
  4952 ;;		On entry : 0/0
  4953 ;;		On exit  : 0/0
  4954 ;;		Unchanged: 0/0
  4955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4956 ;;      Params:         0       0       0       0       0       0
  4957 ;;      Locals:         1       0       0       0       0       0
  4958 ;;      Temps:          0       0       0       0       0       0
  4959 ;;      Totals:         1       0       0       0       0       0
  4960 ;;Total ram usage:        1 bytes
  4961 ;; Hardware stack levels used: 1
  4962 ;; This function calls:
  4963 ;;		Nothing
  4964 ;; This function is called by:
  4965 ;;		_txMAX7219
  4966 ;; This function uses a non-reentrant model
  4967 ;;
  4968                           
  4969     0D38                     _SPI1_WriteByte:	
  4970                           ;psect for function _SPI1_WriteByte
  4971                           
  4972                           
  4973                           ;incstack = 0
  4974                           ; Regs used in _SPI1_WriteByte: [wreg]
  4975                           ;SPI1_WriteByte@byte stored from wreg
  4976     0D38  00F0               	movwf	SPI1_WriteByte@byte
  4977     0D39                     l2599:
  4978                           
  4979                           ;mcc_generated_files/spi1.c: 131: void SPI1_WriteByte(uint8_t byte);mcc_generated_files/
      +                          spi1.c: 132: {;mcc_generated_files/spi1.c: 133:     SSP1BUF = byte;
  4980     0D39  0870               	movf	SPI1_WriteByte@byte,w
  4981     0D3A  0024               	movlb	4	; select bank4
  4982     0D3B  0091               	movwf	17	;volatile
  4983     0D3C                     l224:
  4984     0D3C  0008               	return
  4985     0D3D                     __end_of_SPI1_WriteByte:
  4986                           
  4987                           	psect	text13
  4988     0DA4                     __ptext13:	
  4989 ;; *************** function _deactivateElevator *****************
  4990 ;; Defined at:
  4991 ;;		line 50 in file "main.c"
  4992 ;; Parameters:    Size  Location     Type
  4993 ;;		None
  4994 ;; Auto vars:     Size  Location     Type
  4995 ;;		None
  4996 ;; Return value:  Size  Location     Type
  4997 ;;                  1    wreg      void 
  4998 ;; Registers used:
  4999 ;;		None
  5000 ;; Tracked objects:
  5001 ;;		On entry : 0/0
  5002 ;;		On exit  : 0/0
  5003 ;;		Unchanged: 0/0
  5004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5005 ;;      Params:         0       0       0       0       0       0
  5006 ;;      Locals:         0       0       0       0       0       0
  5007 ;;      Temps:          0       0       0       0       0       0
  5008 ;;      Totals:         0       0       0       0       0       0
  5009 ;;Total ram usage:        0 bytes
  5010 ;; Hardware stack levels used: 1
  5011 ;; This function calls:
  5012 ;;		Nothing
  5013 ;; This function is called by:
  5014 ;;		_main
  5015 ;; This function uses a non-reentrant model
  5016 ;;
  5017                           
  5018     0DA4                     _deactivateElevator:	
  5019                           ;psect for function _deactivateElevator
  5020                           
  5021     0DA4                     l2807:	
  5022                           ;incstack = 0
  5023                           ; Regs used in _deactivateElevator: []
  5024                           
  5025                           
  5026                           ;main.c: 51:     LATAbits.LATA3 = 0;
  5027     0DA4  0022               	movlb	2	; select bank2
  5028     0DA5  118C               	bcf	12,3	;volatile
  5029                           
  5030                           ;main.c: 52:     LATAbits.LATA7 = 0;
  5031     0DA6  138C               	bcf	12,7	;volatile
  5032                           
  5033                           ;main.c: 54:     TRISAbits.TRISA0 = 1;
  5034     0DA7  0021               	movlb	1	; select bank1
  5035     0DA8  140C               	bsf	12,0	;volatile
  5036                           
  5037                           ;main.c: 55:     TRISAbits.TRISA1 = 1;
  5038     0DA9  148C               	bsf	12,1	;volatile
  5039                           
  5040                           ;main.c: 56:     TRISAbits.TRISA2 = 1;
  5041     0DAA  150C               	bsf	12,2	;volatile
  5042                           
  5043                           ;main.c: 57:     TRISAbits.TRISA3 = 0;
  5044     0DAB  118C               	bcf	12,3	;volatile
  5045                           
  5046                           ;main.c: 58:     TRISAbits.TRISA4 = 1;
  5047     0DAC  160C               	bsf	12,4	;volatile
  5048                           
  5049                           ;main.c: 59:     TRISAbits.TRISA7 = 0;
  5050     0DAD  138C               	bcf	12,7	;volatile
  5051                           
  5052                           ;main.c: 60:     TRISBbits.TRISB0 = 1;
  5053     0DAE  140D               	bsf	13,0	;volatile
  5054                           
  5055                           ;main.c: 61:     TRISBbits.TRISB3 = 1;
  5056     0DAF  158D               	bsf	13,3	;volatile
  5057     0DB0                     l331:
  5058     0DB0  0008               	return
  5059     0DB1                     __end_of_deactivateElevator:
  5060                           
  5061                           	psect	text14
  5062     02B5                     __ptext14:	
  5063 ;; *************** function _ai_run *****************
  5064 ;; Defined at:
  5065 ;;		line 106 in file "ai.c"
  5066 ;; Parameters:    Size  Location     Type
  5067 ;;		None
  5068 ;; Auto vars:     Size  Location     Type
  5069 ;;  i               1   12[BANK0 ] unsigned char 
  5070 ;;  i               1   11[BANK0 ] unsigned char 
  5071 ;;  i               1   13[BANK0 ] unsigned char 
  5072 ;;  j               1   17[BANK0 ] unsigned char 
  5073 ;;  j               1   16[BANK0 ] unsigned char 
  5074 ;;  i               1   10[BANK0 ] unsigned char 
  5075 ;;  z               2   14[BANK0 ] short 
  5076 ;; Return value:  Size  Location     Type
  5077 ;;                  1    wreg      unsigned char 
  5078 ;; Registers used:
  5079 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5080 ;; Tracked objects:
  5081 ;;		On entry : 0/0
  5082 ;;		On exit  : 0/0
  5083 ;;		Unchanged: 0/0
  5084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5085 ;;      Params:         0       0       0       0       0       0
  5086 ;;      Locals:         0       8       0       0       0       0
  5087 ;;      Temps:          0       2       0       0       0       0
  5088 ;;      Totals:         0      10       0       0       0       0
  5089 ;;Total ram usage:       10 bytes
  5090 ;; Hardware stack levels used: 1
  5091 ;; Hardware stack levels required when called: 2
  5092 ;; This function calls:
  5093 ;;		___awdiv
  5094 ;;		___wmul
  5095 ;;		_biases1_read
  5096 ;;		_biases2_read
  5097 ;;		_sigmoid
  5098 ;;		_weights1_read
  5099 ;;		_weights2_read
  5100 ;; This function is called by:
  5101 ;;		_main
  5102 ;; This function uses a non-reentrant model
  5103 ;;
  5104                           
  5105     02B5                     _ai_run:	
  5106                           ;psect for function _ai_run
  5107                           
  5108     02B5                     l2967:	
  5109                           ;incstack = 0
  5110                           ; Regs used in _ai_run: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5111                           
  5112                           
  5113                           ;ai.c: 107:     for(uint8_t i = 0; i < 16; i++){
  5114     02B5  0020               	movlb	0	; select bank0
  5115     02B6  01AA               	clrf	ai_run@i
  5116     02B7                     l2973:
  5117                           
  5118                           ;ai.c: 108:         if(Y0[i]> 0){
  5119     02B7  082A               	movf	ai_run@i,w
  5120     02B8  3EE0               	addlw	(low (_Y0| 0))& (0+255)
  5121     02B9  0086               	movwf	6
  5122     02BA  0187               	clrf	7
  5123     02BB  0801               	movf	1,w
  5124     02BC  1903               	btfsc	3,2
  5125     02BD  2ABF               	goto	u1851
  5126     02BE  2AC0               	goto	u1850
  5127     02BF                     u1851:
  5128     02BF  2AC6               	goto	l2977
  5129     02C0                     u1850:
  5130     02C0                     l2975:
  5131                           
  5132                           ;ai.c: 109:             Y0[i] = 255u;
  5133     02C0  082A               	movf	ai_run@i,w
  5134     02C1  3EE0               	addlw	(low (_Y0| 0))& (0+255)
  5135     02C2  0086               	movwf	6
  5136     02C3  0187               	clrf	7
  5137     02C4  30FF               	movlw	255
  5138     02C5  0081               	movwf	1
  5139     02C6                     l2977:
  5140                           
  5141                           ;ai.c: 111:     }
  5142     02C6  3001               	movlw	1
  5143     02C7  00A8               	movwf	??_ai_run
  5144     02C8  0828               	movf	??_ai_run,w
  5145     02C9  07AA               	addwf	ai_run@i,f
  5146     02CA                     l2979:
  5147     02CA  3010               	movlw	16
  5148     02CB  022A               	subwf	ai_run@i,w
  5149     02CC  1C03               	skipc
  5150     02CD  2ACF               	goto	u1861
  5151     02CE  2AD0               	goto	u1860
  5152     02CF                     u1861:
  5153     02CF  2AB7               	goto	l2973
  5154     02D0                     u1860:
  5155     02D0                     l2981:
  5156                           
  5157                           ;ai.c: 113:     int16_t z;;ai.c: 114:     for(uint8_t j = 0; j < 7; j++){
  5158     02D0  01B0               	clrf	ai_run@j
  5159     02D1                     l2987:
  5160                           
  5161                           ;ai.c: 115:         Z1[j] = biases1_read(j);
  5162     02D1  0830               	movf	ai_run@j,w
  5163     02D2  3E52               	addlw	(low (_Z1| (0+256)))& (0+255)
  5164     02D3  0086               	movwf	6
  5165     02D4  3001               	movlw	1	; select bank2/3
  5166     02D5  0087               	movwf	7
  5167     02D6  0830               	movf	ai_run@j,w
  5168     02D7  318D  255C  3182   	fcall	_biases1_read
  5169     02DA  0081               	movwf	1
  5170     02DB                     l2989:
  5171                           
  5172                           ;ai.c: 116:         for(uint8_t i = 0; i < 16; i++){
  5173     02DB  0020               	movlb	0	; select bank0
  5174     02DC  01AB               	clrf	ai_run@i_917
  5175     02DD                     l2995:
  5176                           
  5177                           ;ai.c: 117:             z = (int16_t)Y0[i];
  5178     02DD  082B               	movf	ai_run@i_917,w
  5179     02DE  3EE0               	addlw	(low (_Y0| 0))& (0+255)
  5180     02DF  0086               	movwf	6
  5181     02E0  0187               	clrf	7
  5182     02E1  0801               	movf	1,w
  5183     02E2  00A8               	movwf	??_ai_run
  5184     02E3  01A9               	clrf	??_ai_run+1
  5185     02E4  0828               	movf	??_ai_run,w
  5186     02E5  00AE               	movwf	ai_run@z
  5187     02E6  0829               	movf	??_ai_run+1,w
  5188     02E7  00AF               	movwf	ai_run@z+1
  5189     02E8                     l2997:
  5190                           
  5191                           ;ai.c: 118:             z *= weights1_read(i,j);
  5192     02E8  0830               	movf	ai_run@j,w
  5193     02E9  00F4               	movwf	weights1_read@add2
  5194     02EA  082B               	movf	ai_run@i_917,w
  5195     02EB  318D  25B1  3182   	fcall	_weights1_read
  5196     02EE  00F7               	movwf	___wmul@multiplier
  5197     02EF  01F8               	clrf	___wmul@multiplier+1
  5198     02F0  1BF7               	btfsc	___wmul@multiplier,7
  5199     02F1  03F8               	decf	___wmul@multiplier+1,f
  5200     02F2  0020               	movlb	0	; select bank0
  5201     02F3  082F               	movf	ai_run@z+1,w
  5202     02F4  00FA               	movwf	___wmul@multiplicand+1
  5203     02F5  082E               	movf	ai_run@z,w
  5204     02F6  00F9               	movwf	___wmul@multiplicand
  5205     02F7  318E  26AA  3182   	fcall	___wmul
  5206     02FA  0878               	movf	?___wmul+1,w
  5207     02FB  0020               	movlb	0	; select bank0
  5208     02FC  00AF               	movwf	ai_run@z+1
  5209     02FD  0877               	movf	?___wmul,w
  5210     02FE  00AE               	movwf	ai_run@z
  5211     02FF                     l2999:
  5212                           
  5213                           ;ai.c: 119:             z /= 255;
  5214     02FF  30FF               	movlw	255
  5215     0300  00A0               	movwf	___awdiv@divisor
  5216     0301  3000               	movlw	0
  5217     0302  00A1               	movwf	___awdiv@divisor+1
  5218     0303  082F               	movf	ai_run@z+1,w
  5219     0304  00A3               	movwf	___awdiv@dividend+1
  5220     0305  082E               	movf	ai_run@z,w
  5221     0306  00A2               	movwf	___awdiv@dividend
  5222     0307  3180  20F1  3182   	fcall	___awdiv
  5223     030A  0020               	movlb	0	; select bank0
  5224     030B  0821               	movf	?___awdiv+1,w
  5225     030C  00AF               	movwf	ai_run@z+1
  5226     030D  0820               	movf	?___awdiv,w
  5227     030E  00AE               	movwf	ai_run@z
  5228                           
  5229                           ;ai.c: 120:             Z1[j] += z;
  5230     030F  082E               	movf	ai_run@z,w
  5231     0310  00A8               	movwf	??_ai_run
  5232     0311  0830               	movf	ai_run@j,w
  5233     0312  3E52               	addlw	(low (_Z1| (0+256)))& (0+255)
  5234     0313  0086               	movwf	6
  5235     0314  3001               	movlw	1	; select bank2/3
  5236     0315  0087               	movwf	7
  5237     0316  0828               	movf	??_ai_run,w
  5238     0317  0781               	addwf	1,f
  5239     0318                     l3001:
  5240                           
  5241                           ;ai.c: 121:         }
  5242     0318  3001               	movlw	1
  5243     0319  00A8               	movwf	??_ai_run
  5244     031A  0828               	movf	??_ai_run,w
  5245     031B  07AB               	addwf	ai_run@i_917,f
  5246     031C                     l3003:
  5247     031C  3010               	movlw	16
  5248     031D  022B               	subwf	ai_run@i_917,w
  5249     031E  1C03               	skipc
  5250     031F  2B21               	goto	u1871
  5251     0320  2B22               	goto	u1870
  5252     0321                     u1871:
  5253     0321  2ADD               	goto	l2995
  5254     0322                     u1870:
  5255     0322                     l3005:
  5256                           
  5257                           ;ai.c: 122:         Y1[j] = sigmoid(Z1[j]);
  5258     0322  0830               	movf	ai_run@j,w
  5259     0323  3E59               	addlw	(low (_Y1| (0+256)))& (0+255)
  5260     0324  0086               	movwf	6
  5261     0325  3001               	movlw	1	; select bank2/3
  5262     0326  0087               	movwf	7
  5263     0327  0830               	movf	ai_run@j,w
  5264     0328  3E52               	addlw	(low (_Z1| (0+256)))& (0+255)
  5265     0329  0084               	movwf	4
  5266     032A  3001               	movlw	1	; select bank2/3
  5267     032B  0085               	movwf	5
  5268     032C  0800               	movf	0,w
  5269     032D  318D  25DF  3182   	fcall	_sigmoid
  5270     0330  0081               	movwf	1
  5271     0331                     l3007:
  5272                           
  5273                           ;ai.c: 123:     }
  5274     0331  3001               	movlw	1
  5275     0332  0020               	movlb	0	; select bank0
  5276     0333  00A8               	movwf	??_ai_run
  5277     0334  0828               	movf	??_ai_run,w
  5278     0335  07B0               	addwf	ai_run@j,f
  5279     0336                     l3009:
  5280     0336  3007               	movlw	7
  5281     0337  0230               	subwf	ai_run@j,w
  5282     0338  1C03               	skipc
  5283     0339  2B3B               	goto	u1881
  5284     033A  2B3C               	goto	u1880
  5285     033B                     u1881:
  5286     033B  2AD1               	goto	l2987
  5287     033C                     u1880:
  5288     033C                     l3011:
  5289                           
  5290                           ;ai.c: 124:     for(uint8_t j = 0; j < 4; j++){
  5291     033C  01B1               	clrf	ai_run@j_919
  5292     033D                     l3017:
  5293                           
  5294                           ;ai.c: 125:         Z2[j] = biases2_read(j);
  5295     033D  0831               	movf	ai_run@j_919,w
  5296     033E  3E5E               	addlw	(low (_Z2| 0))& (0+255)
  5297     033F  0086               	movwf	6
  5298     0340  0187               	clrf	7
  5299     0341  0831               	movf	ai_run@j_919,w
  5300     0342  3180  2004  3182   	fcall	_biases2_read
  5301     0345  0081               	movwf	1
  5302     0346                     l3019:
  5303                           
  5304                           ;ai.c: 126:         for(uint8_t i = 0; i < 7; i++){
  5305     0346  0020               	movlb	0	; select bank0
  5306     0347  01AC               	clrf	ai_run@i_921
  5307     0348                     l3025:
  5308                           
  5309                           ;ai.c: 127:             z = (int16_t)Y1[i];
  5310     0348  082C               	movf	ai_run@i_921,w
  5311     0349  3E59               	addlw	(low (_Y1| (0+256)))& (0+255)
  5312     034A  0086               	movwf	6
  5313     034B  3001               	movlw	1	; select bank2/3
  5314     034C  0087               	movwf	7
  5315     034D  0801               	movf	1,w
  5316     034E  00A8               	movwf	??_ai_run
  5317     034F  01A9               	clrf	??_ai_run+1
  5318     0350  0828               	movf	??_ai_run,w
  5319     0351  00AE               	movwf	ai_run@z
  5320     0352  0829               	movf	??_ai_run+1,w
  5321     0353  00AF               	movwf	ai_run@z+1
  5322     0354                     l3027:
  5323                           
  5324                           ;ai.c: 128:             z *= weights2_read(i,j);
  5325     0354  0831               	movf	ai_run@j_919,w
  5326     0355  00F4               	movwf	weights2_read@add2
  5327     0356  082C               	movf	ai_run@i_921,w
  5328     0357  318D  2597  3182   	fcall	_weights2_read
  5329     035A  00F7               	movwf	___wmul@multiplier
  5330     035B  01F8               	clrf	___wmul@multiplier+1
  5331     035C  1BF7               	btfsc	___wmul@multiplier,7
  5332     035D  03F8               	decf	___wmul@multiplier+1,f
  5333     035E  0020               	movlb	0	; select bank0
  5334     035F  082F               	movf	ai_run@z+1,w
  5335     0360  00FA               	movwf	___wmul@multiplicand+1
  5336     0361  082E               	movf	ai_run@z,w
  5337     0362  00F9               	movwf	___wmul@multiplicand
  5338     0363  318E  26AA  3182   	fcall	___wmul
  5339     0366  0878               	movf	?___wmul+1,w
  5340     0367  0020               	movlb	0	; select bank0
  5341     0368  00AF               	movwf	ai_run@z+1
  5342     0369  0877               	movf	?___wmul,w
  5343     036A  00AE               	movwf	ai_run@z
  5344     036B                     l3029:
  5345                           
  5346                           ;ai.c: 129:             z /= 255;
  5347     036B  30FF               	movlw	255
  5348     036C  00A0               	movwf	___awdiv@divisor
  5349     036D  3000               	movlw	0
  5350     036E  00A1               	movwf	___awdiv@divisor+1
  5351     036F  082F               	movf	ai_run@z+1,w
  5352     0370  00A3               	movwf	___awdiv@dividend+1
  5353     0371  082E               	movf	ai_run@z,w
  5354     0372  00A2               	movwf	___awdiv@dividend
  5355     0373  3180  20F1  3182   	fcall	___awdiv
  5356     0376  0020               	movlb	0	; select bank0
  5357     0377  0821               	movf	?___awdiv+1,w
  5358     0378  00AF               	movwf	ai_run@z+1
  5359     0379  0820               	movf	?___awdiv,w
  5360     037A  00AE               	movwf	ai_run@z
  5361                           
  5362                           ;ai.c: 130:             Z2[j] += z;
  5363     037B  082E               	movf	ai_run@z,w
  5364     037C  00A8               	movwf	??_ai_run
  5365     037D  0831               	movf	ai_run@j_919,w
  5366     037E  3E5E               	addlw	(low (_Z2| 0))& (0+255)
  5367     037F  0086               	movwf	6
  5368     0380  0187               	clrf	7
  5369     0381  0828               	movf	??_ai_run,w
  5370     0382  0781               	addwf	1,f
  5371     0383                     l3031:
  5372                           
  5373                           ;ai.c: 131:         }
  5374     0383  3001               	movlw	1
  5375     0384  00A8               	movwf	??_ai_run
  5376     0385  0828               	movf	??_ai_run,w
  5377     0386  07AC               	addwf	ai_run@i_921,f
  5378     0387                     l3033:
  5379     0387  3007               	movlw	7
  5380     0388  022C               	subwf	ai_run@i_921,w
  5381     0389  1C03               	skipc
  5382     038A  2B8C               	goto	u1891
  5383     038B  2B8D               	goto	u1890
  5384     038C                     u1891:
  5385     038C  2B48               	goto	l3025
  5386     038D                     u1890:
  5387     038D                     l3035:
  5388                           
  5389                           ;ai.c: 132:         Y2[j] = sigmoid(Z2[j]);
  5390     038D  0831               	movf	ai_run@j_919,w
  5391     038E  3E62               	addlw	(low (_Y2| 0))& (0+255)
  5392     038F  0086               	movwf	6
  5393     0390  0187               	clrf	7
  5394     0391  0831               	movf	ai_run@j_919,w
  5395     0392  3E5E               	addlw	(low (_Z2| 0))& (0+255)
  5396     0393  0084               	movwf	4
  5397     0394  0185               	clrf	5
  5398     0395  0800               	movf	0,w
  5399     0396  318D  25DF  3182   	fcall	_sigmoid
  5400     0399  0081               	movwf	1
  5401     039A                     l3037:
  5402                           
  5403                           ;ai.c: 133:     }
  5404     039A  3001               	movlw	1
  5405     039B  0020               	movlb	0	; select bank0
  5406     039C  00A8               	movwf	??_ai_run
  5407     039D  0828               	movf	??_ai_run,w
  5408     039E  07B1               	addwf	ai_run@j_919,f
  5409     039F                     l3039:
  5410     039F  3004               	movlw	4
  5411     03A0  0231               	subwf	ai_run@j_919,w
  5412     03A1  1C03               	skipc
  5413     03A2  2BA4               	goto	u1901
  5414     03A3  2BA5               	goto	u1900
  5415     03A4                     u1901:
  5416     03A4  2B3D               	goto	l3017
  5417     03A5                     u1900:
  5418     03A5                     l3041:
  5419                           
  5420                           ;ai.c: 135:     choice = 0;
  5421     03A5  01E8               	clrf	_choice
  5422     03A6                     l3043:
  5423                           
  5424                           ;ai.c: 136:     for(uint8_t i = 1; i < 4; i++){
  5425     03A6  01AD               	clrf	ai_run@i_923
  5426     03A7  0AAD               	incf	ai_run@i_923,f
  5427     03A8                     l3049:
  5428                           
  5429                           ;ai.c: 137:         if(Y2[i]>Y2[choice]){
  5430     03A8  0868               	movf	_choice,w
  5431     03A9  3E62               	addlw	(low (_Y2| 0))& (0+255)
  5432     03AA  0086               	movwf	6
  5433     03AB  0187               	clrf	7
  5434     03AC  082D               	movf	ai_run@i_923,w
  5435     03AD  3E62               	addlw	(low (_Y2| 0))& (0+255)
  5436     03AE  0084               	movwf	4
  5437     03AF  0185               	clrf	5
  5438     03B0  0800               	movf	0,w
  5439     03B1  0201               	subwf	1,w
  5440     03B2  1803               	skipnc
  5441     03B3  2BB5               	goto	u1911
  5442     03B4  2BB6               	goto	u1910
  5443     03B5                     u1911:
  5444     03B5  2BB8               	goto	l3053
  5445     03B6                     u1910:
  5446     03B6                     l3051:
  5447                           
  5448                           ;ai.c: 138:             choice = i;
  5449     03B6  082D               	movf	ai_run@i_923,w
  5450     03B7  00E8               	movwf	_choice
  5451     03B8                     l3053:
  5452                           
  5453                           ;ai.c: 140:     }
  5454     03B8  3001               	movlw	1
  5455     03B9  00A8               	movwf	??_ai_run
  5456     03BA  0828               	movf	??_ai_run,w
  5457     03BB  07AD               	addwf	ai_run@i_923,f
  5458     03BC                     l3055:
  5459     03BC  3004               	movlw	4
  5460     03BD  022D               	subwf	ai_run@i_923,w
  5461     03BE  1C03               	skipc
  5462     03BF  2BC1               	goto	u1921
  5463     03C0  2BC2               	goto	u1920
  5464     03C1                     u1921:
  5465     03C1  2BA8               	goto	l3049
  5466     03C2                     u1920:
  5467     03C2                     l3057:
  5468                           
  5469                           ;ai.c: 141:     return choice;
  5470     03C2  0868               	movf	_choice,w
  5471     03C3                     l630:
  5472     03C3  0008               	return
  5473     03C4                     __end_of_ai_run:
  5474                           
  5475                           	psect	text15
  5476     0DDF                     __ptext15:	
  5477 ;; *************** function _sigmoid *****************
  5478 ;; Defined at:
  5479 ;;		line 8 in file "sigmoid.c"
  5480 ;; Parameters:    Size  Location     Type
  5481 ;;  z               1    wreg     char 
  5482 ;; Auto vars:     Size  Location     Type
  5483 ;;  z               1    1[COMMON] char 
  5484 ;; Return value:  Size  Location     Type
  5485 ;;                  1    wreg      unsigned char 
  5486 ;; Registers used:
  5487 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  5488 ;; Tracked objects:
  5489 ;;		On entry : 0/0
  5490 ;;		On exit  : 0/0
  5491 ;;		Unchanged: 0/0
  5492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5493 ;;      Params:         0       0       0       0       0       0
  5494 ;;      Locals:         1       0       0       0       0       0
  5495 ;;      Temps:          1       0       0       0       0       0
  5496 ;;      Totals:         2       0       0       0       0       0
  5497 ;;Total ram usage:        2 bytes
  5498 ;; Hardware stack levels used: 1
  5499 ;; This function calls:
  5500 ;;		Nothing
  5501 ;; This function is called by:
  5502 ;;		_ai_run
  5503 ;; This function uses a non-reentrant model
  5504 ;;
  5505                           
  5506     0DDF                     _sigmoid:	
  5507                           ;psect for function _sigmoid
  5508                           
  5509                           
  5510                           ;incstack = 0
  5511                           ; Regs used in _sigmoid: [wreg-fsr0h+status,2+status,0+pclath]
  5512                           ;sigmoid@z stored from wreg
  5513     0DDF  00F1               	movwf	sigmoid@z
  5514     0DE0                     l2735:
  5515                           
  5516                           ;sigmoid.c: 9:     return sigmoidValues[((uint8_t)z)>>4];
  5517     0DE0  0871               	movf	sigmoid@z,w
  5518     0DE1  00F0               	movwf	??_sigmoid
  5519     0DE2  3004               	movlw	4
  5520     0DE3                     u1505:
  5521     0DE3  36F0               	lsrf	??_sigmoid,f
  5522     0DE4  0B89               	decfsz	9,f
  5523     0DE5  2DE3               	goto	u1505
  5524     0DE6  0870               	movf	??_sigmoid,w
  5525     0DE7  3E10               	addlw	low (_sigmoidValues| (0+32768))
  5526     0DE8  0084               	movwf	4
  5527     0DE9  3088               	movlw	high (_sigmoidValues| (0+32768))
  5528     0DEA  1803               	skipnc
  5529     0DEB  3E01               	addlw	1
  5530     0DEC  0085               	movwf	5
  5531     0DED  0800               	movf	0,w	;code access
  5532     0DEE                     l683:
  5533     0DEE  0008               	return
  5534     0DEF                     __end_of_sigmoid:
  5535                           
  5536                           	psect	text16
  5537     04E6                     __ptext16:	
  5538 ;; *************** function _ai_propagate *****************
  5539 ;; Defined at:
  5540 ;;		line 144 in file "ai.c"
  5541 ;; Parameters:    Size  Location     Type
  5542 ;;  incentive       1    wreg     char 
  5543 ;; Auto vars:     Size  Location     Type
  5544 ;;  incentive       1   25[BANK0 ] char 
  5545 ;;  i               1   33[BANK0 ] unsigned char 
  5546 ;;  i               1   32[BANK0 ] unsigned char 
  5547 ;;  i               1   30[BANK0 ] unsigned char 
  5548 ;;  i               1   34[BANK0 ] unsigned char 
  5549 ;;  i               1   29[BANK0 ] unsigned char 
  5550 ;;  i               1   28[BANK0 ] unsigned char 
  5551 ;;  i               1   27[BANK0 ] unsigned char 
  5552 ;;  i               1   26[BANK0 ] unsigned char 
  5553 ;;  j               1   39[BANK0 ] unsigned char 
  5554 ;;  j               1   38[BANK0 ] unsigned char 
  5555 ;;  j               1   35[BANK0 ] unsigned char 
  5556 ;;  j               1   37[BANK0 ] unsigned char 
  5557 ;;  j               1   36[BANK0 ] unsigned char 
  5558 ;;  j               1   31[BANK0 ] unsigned char 
  5559 ;;  S               4   21[BANK0 ] unsigned char [4]
  5560 ;;  dz              2   40[BANK0 ] short 
  5561 ;; Return value:  Size  Location     Type
  5562 ;;                  1    wreg      void 
  5563 ;; Registers used:
  5564 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5565 ;; Tracked objects:
  5566 ;;		On entry : 0/0
  5567 ;;		On exit  : 0/0
  5568 ;;		Unchanged: 0/0
  5569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5570 ;;      Params:         0       0       0       0       0       0
  5571 ;;      Locals:         0      21       0       0       0       0
  5572 ;;      Temps:          0      13       0       0       0       0
  5573 ;;      Totals:         0      34       0       0       0       0
  5574 ;;Total ram usage:       34 bytes
  5575 ;; Hardware stack levels used: 1
  5576 ;; Hardware stack levels required when called: 2
  5577 ;; This function calls:
  5578 ;;		___awdiv
  5579 ;;		___wmul
  5580 ;;		_biases1_read
  5581 ;;		_biases1_write
  5582 ;;		_biases2_read
  5583 ;;		_biases2_write
  5584 ;;		_de_sigmoid
  5585 ;;		_weights1_read
  5586 ;;		_weights1_write
  5587 ;;		_weights2_read
  5588 ;;		_weights2_write
  5589 ;; This function is called by:
  5590 ;;		_main
  5591 ;; This function uses a non-reentrant model
  5592 ;;
  5593                           
  5594     04E6                     _ai_propagate:	
  5595                           ;psect for function _ai_propagate
  5596                           
  5597                           
  5598                           ;incstack = 0
  5599                           ; Regs used in _ai_propagate: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5600                           ;ai_propagate@incentive stored from wreg
  5601     04E6  0020               	movlb	0	; select bank0
  5602     04E7  00B9               	movwf	ai_propagate@incentive
  5603     04E8                     l3137:
  5604                           
  5605                           ;ai.c: 145:     if(incentive == 0){
  5606     04E8  0839               	movf	ai_propagate@incentive,w
  5607     04E9  1D03               	btfss	3,2
  5608     04EA  2CEC               	goto	u2051
  5609     04EB  2CED               	goto	u2050
  5610     04EC                     u2051:
  5611     04EC  2CEE               	goto	l3141
  5612     04ED                     u2050:
  5613     04ED  2FBB               	goto	l634
  5614     04EE                     l3141:
  5615                           
  5616                           ;ai.c: 149:     if(incentive == -1){
  5617     04EE  0A39               	incf	ai_propagate@incentive,w
  5618     04EF  1D03               	btfss	3,2
  5619     04F0  2CF2               	goto	u2061
  5620     04F1  2CF3               	goto	u2060
  5621     04F2                     u2061:
  5622     04F2  2CF4               	goto	l3145
  5623     04F3                     u2060:
  5624     04F3                     l3143:
  5625                           
  5626                           ;ai.c: 150:         incentive = 0;
  5627     04F3  01B9               	clrf	ai_propagate@incentive
  5628     04F4                     l3145:
  5629                           
  5630                           ;ai.c: 153:     uint8_t S[4];;ai.c: 154:     if(incentive == 0){
  5631     04F4  0839               	movf	ai_propagate@incentive,w
  5632     04F5  1D03               	btfss	3,2
  5633     04F6  2CF8               	goto	u2071
  5634     04F7  2CF9               	goto	u2070
  5635     04F8                     u2071:
  5636     04F8  2D10               	goto	l3161
  5637     04F9                     u2070:
  5638     04F9                     l3147:
  5639                           
  5640                           ;ai.c: 155:         for(uint8_t i = 0; i < 4; i++){
  5641     04F9  01BA               	clrf	ai_propagate@i
  5642     04FA                     l3153:
  5643                           
  5644                           ;ai.c: 156:             S[i] = 255u;
  5645     04FA  083A               	movf	ai_propagate@i,w
  5646     04FB  3E35               	addlw	(low (ai_propagate@S| 0))& (0+255)
  5647     04FC  0086               	movwf	6
  5648     04FD  0187               	clrf	7
  5649     04FE  30FF               	movlw	255
  5650     04FF  0081               	movwf	1
  5651     0500                     l3155:
  5652                           
  5653                           ;ai.c: 157:         }
  5654     0500  3001               	movlw	1
  5655     0501  00A8               	movwf	??_ai_propagate
  5656     0502  0828               	movf	??_ai_propagate,w
  5657     0503  07BA               	addwf	ai_propagate@i,f
  5658     0504                     l3157:
  5659     0504  3004               	movlw	4
  5660     0505  023A               	subwf	ai_propagate@i,w
  5661     0506  1C03               	skipc
  5662     0507  2D09               	goto	u2081
  5663     0508  2D0A               	goto	u2080
  5664     0509                     u2081:
  5665     0509  2CFA               	goto	l3153
  5666     050A                     u2080:
  5667     050A                     l3159:
  5668                           
  5669                           ;ai.c: 158:         S[choice] = 0;
  5670     050A  0868               	movf	_choice,w
  5671     050B  3E35               	addlw	(low (ai_propagate@S| 0))& (0+255)
  5672     050C  0086               	movwf	6
  5673     050D  0187               	clrf	7
  5674     050E  0181               	clrf	1
  5675                           
  5676                           ;ai.c: 159:     } else{
  5677     050F  2D26               	goto	l3175
  5678     0510                     l3161:
  5679                           
  5680                           ;ai.c: 160:         for(uint8_t i = 0; i < 4; i++){
  5681     0510  01BB               	clrf	ai_propagate@i_928
  5682     0511                     l3167:
  5683                           
  5684                           ;ai.c: 161:             S[i] = 0;
  5685     0511  083B               	movf	ai_propagate@i_928,w
  5686     0512  3E35               	addlw	(low (ai_propagate@S| 0))& (0+255)
  5687     0513  0086               	movwf	6
  5688     0514  0187               	clrf	7
  5689     0515  0181               	clrf	1
  5690     0516                     l3169:
  5691                           
  5692                           ;ai.c: 162:         }
  5693     0516  3001               	movlw	1
  5694     0517  00A8               	movwf	??_ai_propagate
  5695     0518  0828               	movf	??_ai_propagate,w
  5696     0519  07BB               	addwf	ai_propagate@i_928,f
  5697     051A                     l3171:
  5698     051A  3004               	movlw	4
  5699     051B  023B               	subwf	ai_propagate@i_928,w
  5700     051C  1C03               	skipc
  5701     051D  2D1F               	goto	u2091
  5702     051E  2D20               	goto	u2090
  5703     051F                     u2091:
  5704     051F  2D11               	goto	l3167
  5705     0520                     u2090:
  5706     0520                     l3173:
  5707                           
  5708                           ;ai.c: 163:         S[choice] = 255u;
  5709     0520  0868               	movf	_choice,w
  5710     0521  3E35               	addlw	(low (ai_propagate@S| 0))& (0+255)
  5711     0522  0086               	movwf	6
  5712     0523  0187               	clrf	7
  5713     0524  30FF               	movlw	255
  5714     0525  0081               	movwf	1
  5715     0526                     l3175:
  5716                           
  5717                           ;ai.c: 166:     for(uint8_t j = 0; j < 7; j++){
  5718     0526  01BF               	clrf	ai_propagate@j
  5719     0527                     l3181:
  5720                           
  5721                           ;ai.c: 167:         DY1[j] = 0;
  5722     0527  083F               	movf	ai_propagate@j,w
  5723     0528  3E4B               	addlw	(low (_DY1| (0+256)))& (0+255)
  5724     0529  0086               	movwf	6
  5725     052A  3001               	movlw	1	; select bank2/3
  5726     052B  0087               	movwf	7
  5727     052C  0181               	clrf	1
  5728                           
  5729                           ;ai.c: 168:         DB1[j] = 0;
  5730     052D  083F               	movf	ai_propagate@j,w
  5731     052E  3E44               	addlw	(low (_DB1| (0+256)))& (0+255)
  5732     052F  0086               	movwf	6
  5733     0530  3001               	movlw	1	; select bank2/3
  5734     0531  0087               	movwf	7
  5735     0532  0181               	clrf	1
  5736     0533                     l3183:
  5737                           
  5738                           ;ai.c: 169:         for(uint8_t i = 0; i < 16; i++){
  5739     0533  01BC               	clrf	ai_propagate@i_930
  5740     0534                     l3189:
  5741                           
  5742                           ;ai.c: 170:             DW1[i][j] = 0;
  5743     0534  083F               	movf	ai_propagate@j,w
  5744     0535  00A8               	movwf	??_ai_propagate
  5745     0536  01A9               	clrf	??_ai_propagate+1
  5746     0537  083C               	movf	ai_propagate@i_930,w
  5747     0538  00AA               	movwf	??_ai_propagate+2
  5748     0539  01AB               	clrf	??_ai_propagate+3
  5749     053A  082A               	movf	??_ai_propagate+2,w
  5750     053B  00F7               	movwf	___wmul@multiplier
  5751     053C  082B               	movf	??_ai_propagate+3,w
  5752     053D  00F8               	movwf	___wmul@multiplier+1
  5753     053E  3007               	movlw	7
  5754     053F  00F9               	movwf	___wmul@multiplicand
  5755     0540  3000               	movlw	0
  5756     0541  00FA               	movwf	___wmul@multiplicand+1
  5757     0542  318E  26AA  3184   	fcall	___wmul
  5758     0545  3000               	movlw	0
  5759     0546  0020               	movlb	0	; select bank0
  5760     0547  00AC               	movwf	??_ai_propagate+4
  5761     0548  3021               	movlw	33
  5762     0549  00AD               	movwf	??_ai_propagate+5
  5763     054A  0877               	movf	?___wmul,w
  5764     054B  072C               	addwf	??_ai_propagate+4,w
  5765     054C  00AE               	movwf	??_ai_propagate+6
  5766     054D  0878               	movf	?___wmul+1,w
  5767     054E  3D2D               	addwfc	??_ai_propagate+5,w
  5768     054F  00AF               	movwf	??_ai_propagate+7
  5769     0550  0828               	movf	??_ai_propagate,w
  5770     0551  072E               	addwf	??_ai_propagate+6,w
  5771     0552  0086               	movwf	6
  5772     0553  0829               	movf	??_ai_propagate+1,w
  5773     0554  3D2F               	addwfc	??_ai_propagate+7,w
  5774     0555  0087               	movwf	7
  5775     0556  0181               	clrf	1
  5776     0557                     l3191:
  5777                           
  5778                           ;ai.c: 171:         }
  5779     0557  3001               	movlw	1
  5780     0558  00A8               	movwf	??_ai_propagate
  5781     0559  0828               	movf	??_ai_propagate,w
  5782     055A  07BC               	addwf	ai_propagate@i_930,f
  5783     055B                     l3193:
  5784     055B  3010               	movlw	16
  5785     055C  023C               	subwf	ai_propagate@i_930,w
  5786     055D  1C03               	skipc
  5787     055E  2D60               	goto	u2101
  5788     055F  2D61               	goto	u2100
  5789     0560                     u2101:
  5790     0560  2D34               	goto	l3189
  5791     0561                     u2100:
  5792     0561                     l3195:
  5793                           
  5794                           ;ai.c: 172:     }
  5795     0561  3001               	movlw	1
  5796     0562  00A8               	movwf	??_ai_propagate
  5797     0563  0828               	movf	??_ai_propagate,w
  5798     0564  07BF               	addwf	ai_propagate@j,f
  5799     0565                     l3197:
  5800     0565  3007               	movlw	7
  5801     0566  023F               	subwf	ai_propagate@j,w
  5802     0567  1C03               	skipc
  5803     0568  2D6A               	goto	u2111
  5804     0569  2D6B               	goto	u2110
  5805     056A                     u2111:
  5806     056A  2D27               	goto	l3181
  5807     056B                     u2110:
  5808     056B                     l3199:
  5809                           
  5810                           ;ai.c: 173:     for(uint8_t j = 0; j < 4; j++){
  5811     056B  01C4               	clrf	ai_propagate@j_931
  5812     056C                     l3205:
  5813                           
  5814                           ;ai.c: 174:         DY2[j] = (int8_t)(((int16_t)Y2[j] - (int16_t)S[j])>>1);
  5815     056C  0844               	movf	ai_propagate@j_931,w
  5816     056D  3E5A               	addlw	(low (_DY2| 0))& (0+255)
  5817     056E  0086               	movwf	6
  5818     056F  0187               	clrf	7
  5819     0570  0844               	movf	ai_propagate@j_931,w
  5820     0571  3E62               	addlw	(low (_Y2| 0))& (0+255)
  5821     0572  0084               	movwf	4
  5822     0573  0185               	clrf	5
  5823     0574  0800               	movf	0,w
  5824     0575  00A8               	movwf	??_ai_propagate
  5825     0576  01A9               	clrf	??_ai_propagate+1
  5826     0577  0844               	movf	ai_propagate@j_931,w
  5827     0578  3E35               	addlw	(low (ai_propagate@S| 0))& (0+255)
  5828     0579  0084               	movwf	4
  5829     057A  0185               	clrf	5
  5830     057B  0829               	movf	??_ai_propagate+1,w
  5831     057C  00AB               	movwf	??_ai_propagate+3
  5832     057D  0800               	movf	0,w
  5833     057E  0228               	subwf	??_ai_propagate,w
  5834     057F  00AA               	movwf	??_ai_propagate+2
  5835     0580  1C03               	skipc
  5836     0581  03AB               	decf	??_ai_propagate+3,f
  5837     0582  0D2B               	rlf	??_ai_propagate+3,w
  5838     0583  0CAB               	rrf	??_ai_propagate+3,f
  5839     0584  0CAA               	rrf	??_ai_propagate+2,f
  5840     0585  082A               	movf	??_ai_propagate+2,w
  5841     0586  0081               	movwf	1
  5842     0587                     l3207:
  5843                           
  5844                           ;ai.c: 175:         DB2[j] = 0;
  5845     0587  0844               	movf	ai_propagate@j_931,w
  5846     0588  3E56               	addlw	(low (_DB2| 0))& (0+255)
  5847     0589  0086               	movwf	6
  5848     058A  0187               	clrf	7
  5849     058B  0181               	clrf	1
  5850     058C                     l3209:
  5851                           
  5852                           ;ai.c: 176:         for(uint8_t i = 0; i < 7; i++){
  5853     058C  01BD               	clrf	ai_propagate@i_932
  5854     058D                     l3215:
  5855                           
  5856                           ;ai.c: 177:             DW2[i][j] = 0;
  5857     058D  083D               	movf	ai_propagate@i_932,w
  5858     058E  00A8               	movwf	??_ai_propagate
  5859     058F  3002               	movlw	2
  5860     0590                     u2125:
  5861     0590  35A8               	lslf	??_ai_propagate,f
  5862     0591  0B89               	decfsz	9,f
  5863     0592  2D90               	goto	u2125
  5864     0593  3020               	movlw	(low (_DW2| (0+256)))& (0+255)
  5865     0594  0728               	addwf	??_ai_propagate,w
  5866     0595  00A9               	movwf	??_ai_propagate+1
  5867     0596  0844               	movf	ai_propagate@j_931,w
  5868     0597  0729               	addwf	??_ai_propagate+1,w
  5869     0598  00AA               	movwf	??_ai_propagate+2
  5870     0599  082A               	movf	??_ai_propagate+2,w
  5871     059A  0086               	movwf	6
  5872     059B  3001               	movlw	1	; select bank2/3
  5873     059C  0087               	movwf	7
  5874     059D  0181               	clrf	1
  5875     059E                     l3217:
  5876                           
  5877                           ;ai.c: 178:         }
  5878     059E  3001               	movlw	1
  5879     059F  00A8               	movwf	??_ai_propagate
  5880     05A0  0828               	movf	??_ai_propagate,w
  5881     05A1  07BD               	addwf	ai_propagate@i_932,f
  5882     05A2                     l3219:
  5883     05A2  3007               	movlw	7
  5884     05A3  023D               	subwf	ai_propagate@i_932,w
  5885     05A4  1C03               	skipc
  5886     05A5  2DA7               	goto	u2131
  5887     05A6  2DA8               	goto	u2130
  5888     05A7                     u2131:
  5889     05A7  2D8D               	goto	l3215
  5890     05A8                     u2130:
  5891     05A8                     l3221:
  5892                           
  5893                           ;ai.c: 179:     }
  5894     05A8  3001               	movlw	1
  5895     05A9  00A8               	movwf	??_ai_propagate
  5896     05AA  0828               	movf	??_ai_propagate,w
  5897     05AB  07C4               	addwf	ai_propagate@j_931,f
  5898     05AC                     l3223:
  5899     05AC  3004               	movlw	4
  5900     05AD  0244               	subwf	ai_propagate@j_931,w
  5901     05AE  1C03               	skipc
  5902     05AF  2DB1               	goto	u2141
  5903     05B0  2DB2               	goto	u2140
  5904     05B1                     u2141:
  5905     05B1  2D6C               	goto	l3205
  5906     05B2                     u2140:
  5907     05B2                     l3225:
  5908                           
  5909                           ;ai.c: 181:     int16_t dz;;ai.c: 182:     for(uint8_t j = 0; j < 4; j++){
  5910     05B2  01C5               	clrf	ai_propagate@j_934
  5911     05B3                     l3231:
  5912                           
  5913                           ;ai.c: 183:         dz = (int16_t)de_sigmoid(Z2[j]);
  5914     05B3  0845               	movf	ai_propagate@j_934,w
  5915     05B4  3E5E               	addlw	(low (_Z2| 0))& (0+255)
  5916     05B5  0086               	movwf	6
  5917     05B6  0187               	clrf	7
  5918     05B7  0801               	movf	1,w
  5919     05B8  318D  25CF  3184   	fcall	_de_sigmoid
  5920     05BB  0020               	movlb	0	; select bank0
  5921     05BC  00A8               	movwf	??_ai_propagate
  5922     05BD  01A9               	clrf	??_ai_propagate+1
  5923     05BE  0828               	movf	??_ai_propagate,w
  5924     05BF  00C8               	movwf	ai_propagate@dz
  5925     05C0  0829               	movf	??_ai_propagate+1,w
  5926     05C1  00C9               	movwf	ai_propagate@dz+1
  5927     05C2                     l3233:
  5928                           
  5929                           ;ai.c: 184:         dz *= (int16_t)DY2[j];
  5930     05C2  0845               	movf	ai_propagate@j_934,w
  5931     05C3  3E5A               	addlw	(low (_DY2| 0))& (0+255)
  5932     05C4  0086               	movwf	6
  5933     05C5  0187               	clrf	7
  5934     05C6  0801               	movf	1,w
  5935     05C7  00F7               	movwf	___wmul@multiplier
  5936     05C8  01F8               	clrf	___wmul@multiplier+1
  5937     05C9  1BF7               	btfsc	___wmul@multiplier,7
  5938     05CA  03F8               	decf	___wmul@multiplier+1,f
  5939     05CB  0849               	movf	ai_propagate@dz+1,w
  5940     05CC  00FA               	movwf	___wmul@multiplicand+1
  5941     05CD  0848               	movf	ai_propagate@dz,w
  5942     05CE  00F9               	movwf	___wmul@multiplicand
  5943     05CF  318E  26AA  3184   	fcall	___wmul
  5944     05D2  0878               	movf	?___wmul+1,w
  5945     05D3  0020               	movlb	0	; select bank0
  5946     05D4  00C9               	movwf	ai_propagate@dz+1
  5947     05D5  0877               	movf	?___wmul,w
  5948     05D6  00C8               	movwf	ai_propagate@dz
  5949     05D7                     l3235:
  5950                           
  5951                           ;ai.c: 185:         dz /= 255;
  5952     05D7  30FF               	movlw	255
  5953     05D8  00A0               	movwf	___awdiv@divisor
  5954     05D9  3000               	movlw	0
  5955     05DA  00A1               	movwf	___awdiv@divisor+1
  5956     05DB  0849               	movf	ai_propagate@dz+1,w
  5957     05DC  00A3               	movwf	___awdiv@dividend+1
  5958     05DD  0848               	movf	ai_propagate@dz,w
  5959     05DE  00A2               	movwf	___awdiv@dividend
  5960     05DF  3180  20F1  3184   	fcall	___awdiv
  5961     05E2  0020               	movlb	0	; select bank0
  5962     05E3  0821               	movf	?___awdiv+1,w
  5963     05E4  00C9               	movwf	ai_propagate@dz+1
  5964     05E5  0820               	movf	?___awdiv,w
  5965     05E6  00C8               	movwf	ai_propagate@dz
  5966     05E7                     l3237:
  5967                           
  5968                           ;ai.c: 187:         DB2[j] += (int8_t)dz;
  5969     05E7  0848               	movf	ai_propagate@dz,w
  5970     05E8  00A8               	movwf	??_ai_propagate
  5971     05E9  0845               	movf	ai_propagate@j_934,w
  5972     05EA  3E56               	addlw	(low (_DB2| 0))& (0+255)
  5973     05EB  0086               	movwf	6
  5974     05EC  0187               	clrf	7
  5975     05ED  0828               	movf	??_ai_propagate,w
  5976     05EE  0781               	addwf	1,f
  5977     05EF                     l3239:
  5978                           
  5979                           ;ai.c: 188:         for(uint8_t i = 0; i < 7; i++){
  5980     05EF  01C2               	clrf	ai_propagate@i_935
  5981     05F0                     l3245:
  5982                           
  5983                           ;ai.c: 189:             DY1[i] += (int8_t)((dz*(int16_t)weights2_read(i, j))/127);
  5984     05F0  307F               	movlw	127
  5985     05F1  00A0               	movwf	___awdiv@divisor
  5986     05F2  3000               	movlw	0
  5987     05F3  00A1               	movwf	___awdiv@divisor+1
  5988     05F4  0845               	movf	ai_propagate@j_934,w
  5989     05F5  00F4               	movwf	weights2_read@add2
  5990     05F6  0842               	movf	ai_propagate@i_935,w
  5991     05F7  318D  2597  3184   	fcall	_weights2_read
  5992     05FA  00F7               	movwf	___wmul@multiplier
  5993     05FB  01F8               	clrf	___wmul@multiplier+1
  5994     05FC  1BF7               	btfsc	___wmul@multiplier,7
  5995     05FD  03F8               	decf	___wmul@multiplier+1,f
  5996     05FE  0020               	movlb	0	; select bank0
  5997     05FF  0849               	movf	ai_propagate@dz+1,w
  5998     0600  00FA               	movwf	___wmul@multiplicand+1
  5999     0601  0848               	movf	ai_propagate@dz,w
  6000     0602  00F9               	movwf	___wmul@multiplicand
  6001     0603  318E  26AA  3184   	fcall	___wmul
  6002     0606  0878               	movf	?___wmul+1,w
  6003     0607  0020               	movlb	0	; select bank0
  6004     0608  00A3               	movwf	___awdiv@dividend+1
  6005     0609  0877               	movf	?___wmul,w
  6006     060A  00A2               	movwf	___awdiv@dividend
  6007     060B  3180  20F1  3184   	fcall	___awdiv
  6008     060E  0020               	movlb	0	; select bank0
  6009     060F  0820               	movf	?___awdiv,w
  6010     0610  00A8               	movwf	??_ai_propagate
  6011     0611  0842               	movf	ai_propagate@i_935,w
  6012     0612  3E4B               	addlw	(low (_DY1| (0+256)))& (0+255)
  6013     0613  0086               	movwf	6
  6014     0614  3001               	movlw	1	; select bank2/3
  6015     0615  0087               	movwf	7
  6016     0616  0828               	movf	??_ai_propagate,w
  6017     0617  0781               	addwf	1,f
  6018                           
  6019                           ;ai.c: 190:             DW2[i][j] += (int8_t)(((dz*(int16_t)Y1[i])/127)>>1);
  6020     0618  307F               	movlw	127
  6021     0619  00A0               	movwf	___awdiv@divisor
  6022     061A  3000               	movlw	0
  6023     061B  00A1               	movwf	___awdiv@divisor+1
  6024     061C  0842               	movf	ai_propagate@i_935,w
  6025     061D  3E59               	addlw	(low (_Y1| (0+256)))& (0+255)
  6026     061E  0086               	movwf	6
  6027     061F  3001               	movlw	1	; select bank2/3
  6028     0620  0087               	movwf	7
  6029     0621  0801               	movf	1,w
  6030     0622  00A8               	movwf	??_ai_propagate
  6031     0623  01A9               	clrf	??_ai_propagate+1
  6032     0624  0828               	movf	??_ai_propagate,w
  6033     0625  00F7               	movwf	___wmul@multiplier
  6034     0626  0829               	movf	??_ai_propagate+1,w
  6035     0627  00F8               	movwf	___wmul@multiplier+1
  6036     0628  0849               	movf	ai_propagate@dz+1,w
  6037     0629  00FA               	movwf	___wmul@multiplicand+1
  6038     062A  0848               	movf	ai_propagate@dz,w
  6039     062B  00F9               	movwf	___wmul@multiplicand
  6040     062C  318E  26AA  3184   	fcall	___wmul
  6041     062F  0878               	movf	?___wmul+1,w
  6042     0630  0020               	movlb	0	; select bank0
  6043     0631  00A3               	movwf	___awdiv@dividend+1
  6044     0632  0877               	movf	?___wmul,w
  6045     0633  00A2               	movwf	___awdiv@dividend
  6046     0634  3180  20F1  3184   	fcall	___awdiv
  6047     0637  0020               	movlb	0	; select bank0
  6048     0638  0820               	movf	?___awdiv,w
  6049     0639  00AA               	movwf	??_ai_propagate+2
  6050     063A  0821               	movf	?___awdiv+1,w
  6051     063B  00AB               	movwf	??_ai_propagate+3
  6052     063C  0D2B               	rlf	??_ai_propagate+3,w
  6053     063D  0CAB               	rrf	??_ai_propagate+3,f
  6054     063E  0CAA               	rrf	??_ai_propagate+2,f
  6055     063F  082A               	movf	??_ai_propagate+2,w
  6056     0640  00AC               	movwf	??_ai_propagate+4
  6057     0641  0842               	movf	ai_propagate@i_935,w
  6058     0642  00AD               	movwf	??_ai_propagate+5
  6059     0643  3002               	movlw	2
  6060     0644                     u2155:
  6061     0644  35AD               	lslf	??_ai_propagate+5,f
  6062     0645  0B89               	decfsz	9,f
  6063     0646  2E44               	goto	u2155
  6064     0647  3020               	movlw	(low (_DW2| (0+256)))& (0+255)
  6065     0648  072D               	addwf	??_ai_propagate+5,w
  6066     0649  00AE               	movwf	??_ai_propagate+6
  6067     064A  0845               	movf	ai_propagate@j_934,w
  6068     064B  072E               	addwf	??_ai_propagate+6,w
  6069     064C  00AF               	movwf	??_ai_propagate+7
  6070     064D  082F               	movf	??_ai_propagate+7,w
  6071     064E  0086               	movwf	6
  6072     064F  3001               	movlw	1	; select bank2/3
  6073     0650  0087               	movwf	7
  6074     0651  082C               	movf	??_ai_propagate+4,w
  6075     0652  0781               	addwf	1,f
  6076     0653                     l3247:
  6077                           
  6078                           ;ai.c: 191:         }
  6079     0653  3001               	movlw	1
  6080     0654  00A8               	movwf	??_ai_propagate
  6081     0655  0828               	movf	??_ai_propagate,w
  6082     0656  07C2               	addwf	ai_propagate@i_935,f
  6083     0657                     l3249:
  6084     0657  3007               	movlw	7
  6085     0658  0242               	subwf	ai_propagate@i_935,w
  6086     0659  1C03               	skipc
  6087     065A  2E5C               	goto	u2161
  6088     065B  2E5D               	goto	u2160
  6089     065C                     u2161:
  6090     065C  2DF0               	goto	l3245
  6091     065D                     u2160:
  6092     065D                     l3251:
  6093                           
  6094                           ;ai.c: 192:     }
  6095     065D  3001               	movlw	1
  6096     065E  00A8               	movwf	??_ai_propagate
  6097     065F  0828               	movf	??_ai_propagate,w
  6098     0660  07C5               	addwf	ai_propagate@j_934,f
  6099     0661                     l3253:
  6100     0661  3004               	movlw	4
  6101     0662  0245               	subwf	ai_propagate@j_934,w
  6102     0663  1C03               	skipc
  6103     0664  2E66               	goto	u2171
  6104     0665  2E67               	goto	u2170
  6105     0666                     u2171:
  6106     0666  2DB3               	goto	l3231
  6107     0667                     u2170:
  6108     0667                     l3255:
  6109                           
  6110                           ;ai.c: 193:     for(uint8_t j = 0; j < 7; j++){
  6111     0667  01C3               	clrf	ai_propagate@j_936
  6112     0668                     l3257:
  6113     0668  3007               	movlw	7
  6114     0669  0243               	subwf	ai_propagate@j_936,w
  6115     066A  1C03               	skipc
  6116     066B  2E6D               	goto	u2181
  6117     066C  2E6E               	goto	u2180
  6118     066D                     u2181:
  6119     066D  2E6F               	goto	l3261
  6120     066E                     u2180:
  6121     066E  2F0C               	goto	l3285
  6122     066F                     l3261:
  6123                           
  6124                           ;ai.c: 194:         dz = (int16_t)de_sigmoid(Z1[j]);
  6125     066F  0843               	movf	ai_propagate@j_936,w
  6126     0670  3E52               	addlw	(low (_Z1| (0+256)))& (0+255)
  6127     0671  0086               	movwf	6
  6128     0672  3001               	movlw	1	; select bank2/3
  6129     0673  0087               	movwf	7
  6130     0674  0801               	movf	1,w
  6131     0675  318D  25CF  3184   	fcall	_de_sigmoid
  6132     0678  0020               	movlb	0	; select bank0
  6133     0679  00A8               	movwf	??_ai_propagate
  6134     067A  01A9               	clrf	??_ai_propagate+1
  6135     067B  0828               	movf	??_ai_propagate,w
  6136     067C  00C8               	movwf	ai_propagate@dz
  6137     067D  0829               	movf	??_ai_propagate+1,w
  6138     067E  00C9               	movwf	ai_propagate@dz+1
  6139     067F                     l3263:
  6140                           
  6141                           ;ai.c: 195:         dz *= (int16_t)DY1[j];
  6142     067F  0843               	movf	ai_propagate@j_936,w
  6143     0680  3E4B               	addlw	(low (_DY1| (0+256)))& (0+255)
  6144     0681  0086               	movwf	6
  6145     0682  3001               	movlw	1	; select bank2/3
  6146     0683  0087               	movwf	7
  6147     0684  0801               	movf	1,w
  6148     0685  00F7               	movwf	___wmul@multiplier
  6149     0686  01F8               	clrf	___wmul@multiplier+1
  6150     0687  1BF7               	btfsc	___wmul@multiplier,7
  6151     0688  03F8               	decf	___wmul@multiplier+1,f
  6152     0689  0849               	movf	ai_propagate@dz+1,w
  6153     068A  00FA               	movwf	___wmul@multiplicand+1
  6154     068B  0848               	movf	ai_propagate@dz,w
  6155     068C  00F9               	movwf	___wmul@multiplicand
  6156     068D  318E  26AA  3184   	fcall	___wmul
  6157     0690  0878               	movf	?___wmul+1,w
  6158     0691  0020               	movlb	0	; select bank0
  6159     0692  00C9               	movwf	ai_propagate@dz+1
  6160     0693  0877               	movf	?___wmul,w
  6161     0694  00C8               	movwf	ai_propagate@dz
  6162     0695                     l3265:
  6163                           
  6164                           ;ai.c: 196:         dz /= 255;
  6165     0695  30FF               	movlw	255
  6166     0696  00A0               	movwf	___awdiv@divisor
  6167     0697  3000               	movlw	0
  6168     0698  00A1               	movwf	___awdiv@divisor+1
  6169     0699  0849               	movf	ai_propagate@dz+1,w
  6170     069A  00A3               	movwf	___awdiv@dividend+1
  6171     069B  0848               	movf	ai_propagate@dz,w
  6172     069C  00A2               	movwf	___awdiv@dividend
  6173     069D  3180  20F1  3184   	fcall	___awdiv
  6174     06A0  0020               	movlb	0	; select bank0
  6175     06A1  0821               	movf	?___awdiv+1,w
  6176     06A2  00C9               	movwf	ai_propagate@dz+1
  6177     06A3  0820               	movf	?___awdiv,w
  6178     06A4  00C8               	movwf	ai_propagate@dz
  6179     06A5                     l3267:
  6180                           
  6181                           ;ai.c: 198:         DB1[j] += (int8_t)dz;
  6182     06A5  0848               	movf	ai_propagate@dz,w
  6183     06A6  00A8               	movwf	??_ai_propagate
  6184     06A7  0843               	movf	ai_propagate@j_936,w
  6185     06A8  3E44               	addlw	(low (_DB1| (0+256)))& (0+255)
  6186     06A9  0086               	movwf	6
  6187     06AA  3001               	movlw	1	; select bank2/3
  6188     06AB  0087               	movwf	7
  6189     06AC  0828               	movf	??_ai_propagate,w
  6190     06AD  0781               	addwf	1,f
  6191     06AE                     l3269:
  6192                           
  6193                           ;ai.c: 199:         for(uint8_t i = 0; i < 16; i++){
  6194     06AE  01BE               	clrf	ai_propagate@i_937
  6195     06AF                     l3271:
  6196     06AF  3010               	movlw	16
  6197     06B0  023E               	subwf	ai_propagate@i_937,w
  6198     06B1  1C03               	skipc
  6199     06B2  2EB4               	goto	u2191
  6200     06B3  2EB5               	goto	u2190
  6201     06B4                     u2191:
  6202     06B4  2EB6               	goto	l3275
  6203     06B5                     u2190:
  6204     06B5  2F07               	goto	l3281
  6205     06B6                     l3275:
  6206                           
  6207                           ;ai.c: 200:             DW1[i][j] += (int8_t)(((dz*(int16_t)Y0[i])/127)>>1);
  6208     06B6  307F               	movlw	127
  6209     06B7  00A0               	movwf	___awdiv@divisor
  6210     06B8  3000               	movlw	0
  6211     06B9  00A1               	movwf	___awdiv@divisor+1
  6212     06BA  083E               	movf	ai_propagate@i_937,w
  6213     06BB  3EE0               	addlw	(low (_Y0| 0))& (0+255)
  6214     06BC  0086               	movwf	6
  6215     06BD  0187               	clrf	7
  6216     06BE  0801               	movf	1,w
  6217     06BF  00A8               	movwf	??_ai_propagate
  6218     06C0  01A9               	clrf	??_ai_propagate+1
  6219     06C1  0828               	movf	??_ai_propagate,w
  6220     06C2  00F7               	movwf	___wmul@multiplier
  6221     06C3  0829               	movf	??_ai_propagate+1,w
  6222     06C4  00F8               	movwf	___wmul@multiplier+1
  6223     06C5  0849               	movf	ai_propagate@dz+1,w
  6224     06C6  00FA               	movwf	___wmul@multiplicand+1
  6225     06C7  0848               	movf	ai_propagate@dz,w
  6226     06C8  00F9               	movwf	___wmul@multiplicand
  6227     06C9  318E  26AA  3184   	fcall	___wmul
  6228     06CC  0878               	movf	?___wmul+1,w
  6229     06CD  0020               	movlb	0	; select bank0
  6230     06CE  00A3               	movwf	___awdiv@dividend+1
  6231     06CF  0877               	movf	?___wmul,w
  6232     06D0  00A2               	movwf	___awdiv@dividend
  6233     06D1  3180  20F1  3184   	fcall	___awdiv
  6234     06D4  0020               	movlb	0	; select bank0
  6235     06D5  0820               	movf	?___awdiv,w
  6236     06D6  00AA               	movwf	??_ai_propagate+2
  6237     06D7  0821               	movf	?___awdiv+1,w
  6238     06D8  00AB               	movwf	??_ai_propagate+3
  6239     06D9  0D2B               	rlf	??_ai_propagate+3,w
  6240     06DA  0CAB               	rrf	??_ai_propagate+3,f
  6241     06DB  0CAA               	rrf	??_ai_propagate+2,f
  6242     06DC  082A               	movf	??_ai_propagate+2,w
  6243     06DD  00AC               	movwf	??_ai_propagate+4
  6244     06DE  0843               	movf	ai_propagate@j_936,w
  6245     06DF  00AD               	movwf	??_ai_propagate+5
  6246     06E0  01AE               	clrf	??_ai_propagate+6
  6247     06E1  083E               	movf	ai_propagate@i_937,w
  6248     06E2  00AF               	movwf	??_ai_propagate+7
  6249     06E3  01B0               	clrf	??_ai_propagate+8
  6250     06E4  082F               	movf	??_ai_propagate+7,w
  6251     06E5  00F7               	movwf	___wmul@multiplier
  6252     06E6  0830               	movf	??_ai_propagate+8,w
  6253     06E7  00F8               	movwf	___wmul@multiplier+1
  6254     06E8  3007               	movlw	7
  6255     06E9  00F9               	movwf	___wmul@multiplicand
  6256     06EA  3000               	movlw	0
  6257     06EB  00FA               	movwf	___wmul@multiplicand+1
  6258     06EC  318E  26AA  3184   	fcall	___wmul
  6259     06EF  3000               	movlw	0
  6260     06F0  0020               	movlb	0	; select bank0
  6261     06F1  00B1               	movwf	??_ai_propagate+9
  6262     06F2  3021               	movlw	33
  6263     06F3  00B2               	movwf	??_ai_propagate+10
  6264     06F4  0877               	movf	?___wmul,w
  6265     06F5  0731               	addwf	??_ai_propagate+9,w
  6266     06F6  00B3               	movwf	??_ai_propagate+11
  6267     06F7  0878               	movf	?___wmul+1,w
  6268     06F8  3D32               	addwfc	??_ai_propagate+10,w
  6269     06F9  00B4               	movwf	??_ai_propagate+12
  6270     06FA  082D               	movf	??_ai_propagate+5,w
  6271     06FB  0733               	addwf	??_ai_propagate+11,w
  6272     06FC  0086               	movwf	6
  6273     06FD  082E               	movf	??_ai_propagate+6,w
  6274     06FE  3D34               	addwfc	??_ai_propagate+12,w
  6275     06FF  0087               	movwf	7
  6276     0700  082C               	movf	??_ai_propagate+4,w
  6277     0701  0781               	addwf	1,f
  6278     0702                     l3277:
  6279                           
  6280                           ;ai.c: 201:         }
  6281     0702  3001               	movlw	1
  6282     0703  00A8               	movwf	??_ai_propagate
  6283     0704  0828               	movf	??_ai_propagate,w
  6284     0705  07BE               	addwf	ai_propagate@i_937,f
  6285     0706  2EAF               	goto	l3271
  6286     0707                     l3281:
  6287                           
  6288                           ;ai.c: 202:     }
  6289     0707  3001               	movlw	1
  6290     0708  00A8               	movwf	??_ai_propagate
  6291     0709  0828               	movf	??_ai_propagate,w
  6292     070A  07C3               	addwf	ai_propagate@j_936,f
  6293     070B  2E68               	goto	l3257
  6294     070C                     l3285:
  6295                           
  6296                           ;ai.c: 204:     for(uint8_t j = 0; j < 4; j++){
  6297     070C  01C6               	clrf	ai_propagate@j_938
  6298     070D                     l3287:
  6299     070D  3004               	movlw	4
  6300     070E  0246               	subwf	ai_propagate@j_938,w
  6301     070F  1C03               	skipc
  6302     0710  2F12               	goto	u2201
  6303     0711  2F13               	goto	u2200
  6304     0712                     u2201:
  6305     0712  2F14               	goto	l3291
  6306     0713                     u2200:
  6307     0713  2F5A               	goto	l3309
  6308     0714                     l3291:
  6309                           
  6310                           ;ai.c: 205:         biases2_write(j, biases2_read(j) - DB2[j]);
  6311     0714  0846               	movf	ai_propagate@j_938,w
  6312     0715  3E56               	addlw	(low (_DB2| 0))& (0+255)
  6313     0716  0086               	movwf	6
  6314     0717  0187               	clrf	7
  6315     0718  0846               	movf	ai_propagate@j_938,w
  6316     0719  3180  2004  3184   	fcall	_biases2_read
  6317     071C  0020               	movlb	0	; select bank0
  6318     071D  00A8               	movwf	??_ai_propagate
  6319     071E  0801               	movf	1,w
  6320     071F  0228               	subwf	??_ai_propagate,w
  6321     0720  00A4               	movwf	biases2_write@val
  6322     0721  0846               	movf	ai_propagate@j_938,w
  6323     0722  318D  2575  3184   	fcall	_biases2_write
  6324     0725                     l3293:
  6325                           
  6326                           ;ai.c: 206:         for(uint8_t i = 0; i < 7; i++){
  6327     0725  0020               	movlb	0	; select bank0
  6328     0726  01C0               	clrf	ai_propagate@i_939
  6329     0727                     l3295:
  6330     0727  3007               	movlw	7
  6331     0728  0240               	subwf	ai_propagate@i_939,w
  6332     0729  1C03               	skipc
  6333     072A  2F2C               	goto	u2211
  6334     072B  2F2D               	goto	u2210
  6335     072C                     u2211:
  6336     072C  2F2E               	goto	l3299
  6337     072D                     u2210:
  6338     072D  2F55               	goto	l3305
  6339     072E                     l3299:
  6340                           
  6341                           ;ai.c: 207:             weights2_write(i,j, weights2_read(i,j) - DW2[i][j]);
  6342     072E  0846               	movf	ai_propagate@j_938,w
  6343     072F  00A4               	movwf	weights2_write@add2
  6344     0730  0840               	movf	ai_propagate@i_939,w
  6345     0731  00A8               	movwf	??_ai_propagate
  6346     0732  3002               	movlw	2
  6347     0733                     u2225:
  6348     0733  35A8               	lslf	??_ai_propagate,f
  6349     0734  0B89               	decfsz	9,f
  6350     0735  2F33               	goto	u2225
  6351     0736  3020               	movlw	(low (_DW2| (0+256)))& (0+255)
  6352     0737  0728               	addwf	??_ai_propagate,w
  6353     0738  00A9               	movwf	??_ai_propagate+1
  6354     0739  0846               	movf	ai_propagate@j_938,w
  6355     073A  0729               	addwf	??_ai_propagate+1,w
  6356     073B  00AA               	movwf	??_ai_propagate+2
  6357     073C  082A               	movf	??_ai_propagate+2,w
  6358     073D  0086               	movwf	6
  6359     073E  3001               	movlw	1	; select bank2/3
  6360     073F  0087               	movwf	7
  6361     0740  0846               	movf	ai_propagate@j_938,w
  6362     0741  00F4               	movwf	weights2_read@add2
  6363     0742  0840               	movf	ai_propagate@i_939,w
  6364     0743  318D  2597  3184   	fcall	_weights2_read
  6365     0746  0020               	movlb	0	; select bank0
  6366     0747  00AB               	movwf	??_ai_propagate+3
  6367     0748  0801               	movf	1,w
  6368     0749  022B               	subwf	??_ai_propagate+3,w
  6369     074A  00A5               	movwf	weights2_write@val
  6370     074B  0840               	movf	ai_propagate@i_939,w
  6371     074C  318E  2600  3184   	fcall	_weights2_write
  6372     074F                     l3301:
  6373                           
  6374                           ;ai.c: 208:         }
  6375     074F  3001               	movlw	1
  6376     0750  0020               	movlb	0	; select bank0
  6377     0751  00A8               	movwf	??_ai_propagate
  6378     0752  0828               	movf	??_ai_propagate,w
  6379     0753  07C0               	addwf	ai_propagate@i_939,f
  6380     0754  2F27               	goto	l3295
  6381     0755                     l3305:
  6382                           
  6383                           ;ai.c: 209:     }
  6384     0755  3001               	movlw	1
  6385     0756  00A8               	movwf	??_ai_propagate
  6386     0757  0828               	movf	??_ai_propagate,w
  6387     0758  07C6               	addwf	ai_propagate@j_938,f
  6388     0759  2F0D               	goto	l3287
  6389     075A                     l3309:
  6390                           
  6391                           ;ai.c: 210:     for(uint8_t j = 0; j < 7; j++){
  6392     075A  01C7               	clrf	ai_propagate@j_940
  6393     075B                     l3311:
  6394     075B  3007               	movlw	7
  6395     075C  0247               	subwf	ai_propagate@j_940,w
  6396     075D  1C03               	skipc
  6397     075E  2F60               	goto	u2231
  6398     075F  2F61               	goto	u2230
  6399     0760                     u2231:
  6400     0760  2F62               	goto	l3315
  6401     0761                     u2230:
  6402     0761  2FBB               	goto	l634
  6403     0762                     l3315:
  6404                           
  6405                           ;ai.c: 211:         biases1_write(j, biases1_read(j) - DB1[j]);
  6406     0762  0847               	movf	ai_propagate@j_940,w
  6407     0763  3E44               	addlw	(low (_DB1| (0+256)))& (0+255)
  6408     0764  0086               	movwf	6
  6409     0765  3001               	movlw	1	; select bank2/3
  6410     0766  0087               	movwf	7
  6411     0767  0847               	movf	ai_propagate@j_940,w
  6412     0768  318D  255C  3184   	fcall	_biases1_read
  6413     076B  0020               	movlb	0	; select bank0
  6414     076C  00A8               	movwf	??_ai_propagate
  6415     076D  0801               	movf	1,w
  6416     076E  0228               	subwf	??_ai_propagate,w
  6417     076F  00A4               	movwf	biases1_write@val
  6418     0770  0847               	movf	ai_propagate@j_940,w
  6419     0771  318D  256B  3184   	fcall	_biases1_write
  6420     0774                     l3317:
  6421                           
  6422                           ;ai.c: 212:         for(uint8_t i = 0; i < 16; i++){
  6423     0774  0020               	movlb	0	; select bank0
  6424     0775  01C1               	clrf	ai_propagate@i_941
  6425     0776                     l3319:
  6426     0776  3010               	movlw	16
  6427     0777  0241               	subwf	ai_propagate@i_941,w
  6428     0778  1C03               	skipc
  6429     0779  2F7B               	goto	u2241
  6430     077A  2F7C               	goto	u2240
  6431     077B                     u2241:
  6432     077B  2F7D               	goto	l3323
  6433     077C                     u2240:
  6434     077C  2FB6               	goto	l3329
  6435     077D                     l3323:
  6436                           
  6437                           ;ai.c: 213:             weights1_write(i,j, weights1_read(i,j) - DW1[i][j]);
  6438     077D  0847               	movf	ai_propagate@j_940,w
  6439     077E  00A4               	movwf	weights1_write@add2
  6440     077F  0847               	movf	ai_propagate@j_940,w
  6441     0780  00A8               	movwf	??_ai_propagate
  6442     0781  01A9               	clrf	??_ai_propagate+1
  6443     0782  0841               	movf	ai_propagate@i_941,w
  6444     0783  00AA               	movwf	??_ai_propagate+2
  6445     0784  01AB               	clrf	??_ai_propagate+3
  6446     0785  082A               	movf	??_ai_propagate+2,w
  6447     0786  00F7               	movwf	___wmul@multiplier
  6448     0787  082B               	movf	??_ai_propagate+3,w
  6449     0788  00F8               	movwf	___wmul@multiplier+1
  6450     0789  3007               	movlw	7
  6451     078A  00F9               	movwf	___wmul@multiplicand
  6452     078B  3000               	movlw	0
  6453     078C  00FA               	movwf	___wmul@multiplicand+1
  6454     078D  318E  26AA  3184   	fcall	___wmul
  6455     0790  3000               	movlw	0
  6456     0791  0020               	movlb	0	; select bank0
  6457     0792  00AC               	movwf	??_ai_propagate+4
  6458     0793  3021               	movlw	33
  6459     0794  00AD               	movwf	??_ai_propagate+5
  6460     0795  0877               	movf	?___wmul,w
  6461     0796  072C               	addwf	??_ai_propagate+4,w
  6462     0797  00AE               	movwf	??_ai_propagate+6
  6463     0798  0878               	movf	?___wmul+1,w
  6464     0799  3D2D               	addwfc	??_ai_propagate+5,w
  6465     079A  00AF               	movwf	??_ai_propagate+7
  6466     079B  0828               	movf	??_ai_propagate,w
  6467     079C  072E               	addwf	??_ai_propagate+6,w
  6468     079D  0086               	movwf	6
  6469     079E  0829               	movf	??_ai_propagate+1,w
  6470     079F  3D2F               	addwfc	??_ai_propagate+7,w
  6471     07A0  0087               	movwf	7
  6472     07A1  0847               	movf	ai_propagate@j_940,w
  6473     07A2  00F4               	movwf	weights1_read@add2
  6474     07A3  0841               	movf	ai_propagate@i_941,w
  6475     07A4  318D  25B1  3184   	fcall	_weights1_read
  6476     07A7  0020               	movlb	0	; select bank0
  6477     07A8  00B0               	movwf	??_ai_propagate+8
  6478     07A9  0801               	movf	1,w
  6479     07AA  0230               	subwf	??_ai_propagate+8,w
  6480     07AB  00A5               	movwf	weights1_write@val
  6481     07AC  0841               	movf	ai_propagate@i_941,w
  6482     07AD  318D  25EF  3184   	fcall	_weights1_write
  6483     07B0                     l3325:
  6484                           
  6485                           ;ai.c: 214:         }
  6486     07B0  3001               	movlw	1
  6487     07B1  0020               	movlb	0	; select bank0
  6488     07B2  00A8               	movwf	??_ai_propagate
  6489     07B3  0828               	movf	??_ai_propagate,w
  6490     07B4  07C1               	addwf	ai_propagate@i_941,f
  6491     07B5  2F76               	goto	l3319
  6492     07B6                     l3329:
  6493                           
  6494                           ;ai.c: 215:     }
  6495     07B6  3001               	movlw	1
  6496     07B7  00A8               	movwf	??_ai_propagate
  6497     07B8  0828               	movf	??_ai_propagate,w
  6498     07B9  07C7               	addwf	ai_propagate@j_940,f
  6499     07BA  2F5B               	goto	l3311
  6500     07BB                     l634:
  6501     07BB  0008               	return
  6502     07BC                     __end_of_ai_propagate:
  6503                           
  6504                           	psect	text17
  6505     0D97                     __ptext17:	
  6506 ;; *************** function _weights2_read *****************
  6507 ;; Defined at:
  6508 ;;		line 38 in file "ai.c"
  6509 ;; Parameters:    Size  Location     Type
  6510 ;;  add1            1    wreg     unsigned char 
  6511 ;;  add2            1    4[COMMON] unsigned char 
  6512 ;; Auto vars:     Size  Location     Type
  6513 ;;  add1            1    5[COMMON] unsigned char 
  6514 ;; Return value:  Size  Location     Type
  6515 ;;                  1    wreg      char 
  6516 ;; Registers used:
  6517 ;;		wreg, status,2, status,0, pclath, cstack
  6518 ;; Tracked objects:
  6519 ;;		On entry : 0/0
  6520 ;;		On exit  : 0/0
  6521 ;;		Unchanged: 0/0
  6522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6523 ;;      Params:         1       0       0       0       0       0
  6524 ;;      Locals:         1       0       0       0       0       0
  6525 ;;      Temps:          0       0       0       0       0       0
  6526 ;;      Totals:         2       0       0       0       0       0
  6527 ;;Total ram usage:        2 bytes
  6528 ;; Hardware stack levels used: 1
  6529 ;; Hardware stack levels required when called: 1
  6530 ;; This function calls:
  6531 ;;		___bmul
  6532 ;;		_eeprom_read
  6533 ;; This function is called by:
  6534 ;;		_ai_run
  6535 ;;		_ai_propagate
  6536 ;;		_printAI
  6537 ;; This function uses a non-reentrant model
  6538 ;;
  6539                           
  6540     0D97                     _weights2_read:	
  6541                           ;psect for function _weights2_read
  6542                           
  6543                           
  6544                           ;incstack = 0
  6545                           ; Regs used in _weights2_read: [wreg+status,2+status,0+pclath+cstack]
  6546                           ;weights2_read@add1 stored from wreg
  6547     0D97  00F5               	movwf	weights2_read@add1
  6548     0D98                     l2727:
  6549                           
  6550                           ;ai.c: 39:     return (int8_t)eeprom_read(0 +16*7 +7 + add1*7 + add2);
  6551     0D98  3007               	movlw	7
  6552     0D99  00F0               	movwf	___bmul@multiplicand
  6553     0D9A  0875               	movf	weights2_read@add1,w
  6554     0D9B  318E  2636  318D   	fcall	___bmul
  6555     0D9E  0774               	addwf	weights2_read@add2,w
  6556     0D9F  3E77               	addlw	119
  6557     0DA0  318E  264B  318D   	fcall	_eeprom_read
  6558     0DA3                     l568:
  6559     0DA3  0008               	return
  6560     0DA4                     __end_of_weights2_read:
  6561                           
  6562                           	psect	text18
  6563     0DB1                     __ptext18:	
  6564 ;; *************** function _weights1_read *****************
  6565 ;; Defined at:
  6566 ;;		line 32 in file "ai.c"
  6567 ;; Parameters:    Size  Location     Type
  6568 ;;  add1            1    wreg     unsigned char 
  6569 ;;  add2            1    4[COMMON] unsigned char 
  6570 ;; Auto vars:     Size  Location     Type
  6571 ;;  add1            1    6[COMMON] unsigned char 
  6572 ;; Return value:  Size  Location     Type
  6573 ;;                  1    wreg      char 
  6574 ;; Registers used:
  6575 ;;		wreg, status,2, status,0, pclath, cstack
  6576 ;; Tracked objects:
  6577 ;;		On entry : 0/0
  6578 ;;		On exit  : 0/0
  6579 ;;		Unchanged: 0/0
  6580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6581 ;;      Params:         1       0       0       0       0       0
  6582 ;;      Locals:         1       0       0       0       0       0
  6583 ;;      Temps:          1       0       0       0       0       0
  6584 ;;      Totals:         3       0       0       0       0       0
  6585 ;;Total ram usage:        3 bytes
  6586 ;; Hardware stack levels used: 1
  6587 ;; Hardware stack levels required when called: 1
  6588 ;; This function calls:
  6589 ;;		_eeprom_read
  6590 ;; This function is called by:
  6591 ;;		_ai_run
  6592 ;;		_ai_propagate
  6593 ;; This function uses a non-reentrant model
  6594 ;;
  6595                           
  6596     0DB1                     _weights1_read:	
  6597                           ;psect for function _weights1_read
  6598                           
  6599                           
  6600                           ;incstack = 0
  6601                           ; Regs used in _weights1_read: [wreg+status,2+status,0+pclath+cstack]
  6602                           ;weights1_read@add1 stored from wreg
  6603     0DB1  00F6               	movwf	weights1_read@add1
  6604     0DB2                     l2719:
  6605                           
  6606                           ;ai.c: 33:     return (int8_t)eeprom_read(0 + add1*16 + add2);
  6607     0DB2  0876               	movf	weights1_read@add1,w
  6608     0DB3  00F5               	movwf	??_weights1_read
  6609     0DB4  3003               	movlw	3
  6610     0DB5                     u1495:
  6611     0DB5  35F5               	lslf	??_weights1_read,f
  6612     0DB6  3EFF               	addlw	-1
  6613     0DB7  1D03               	skipz
  6614     0DB8  2DB5               	goto	u1495
  6615     0DB9  3575               	lslf	??_weights1_read,w
  6616     0DBA  0774               	addwf	weights1_read@add2,w
  6617     0DBB  318E  264B  318D   	fcall	_eeprom_read
  6618     0DBE                     l562:
  6619     0DBE  0008               	return
  6620     0DBF                     __end_of_weights1_read:
  6621                           
  6622                           	psect	text19
  6623     0DCF                     __ptext19:	
  6624 ;; *************** function _de_sigmoid *****************
  6625 ;; Defined at:
  6626 ;;		line 12 in file "sigmoid.c"
  6627 ;; Parameters:    Size  Location     Type
  6628 ;;  z               1    wreg     char 
  6629 ;; Auto vars:     Size  Location     Type
  6630 ;;  z               1    1[COMMON] char 
  6631 ;; Return value:  Size  Location     Type
  6632 ;;                  1    wreg      unsigned char 
  6633 ;; Registers used:
  6634 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  6635 ;; Tracked objects:
  6636 ;;		On entry : 0/0
  6637 ;;		On exit  : 0/0
  6638 ;;		Unchanged: 0/0
  6639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6640 ;;      Params:         0       0       0       0       0       0
  6641 ;;      Locals:         1       0       0       0       0       0
  6642 ;;      Temps:          1       0       0       0       0       0
  6643 ;;      Totals:         2       0       0       0       0       0
  6644 ;;Total ram usage:        2 bytes
  6645 ;; Hardware stack levels used: 1
  6646 ;; This function calls:
  6647 ;;		Nothing
  6648 ;; This function is called by:
  6649 ;;		_ai_propagate
  6650 ;; This function uses a non-reentrant model
  6651 ;;
  6652                           
  6653     0DCF                     _de_sigmoid:	
  6654                           ;psect for function _de_sigmoid
  6655                           
  6656                           
  6657                           ;incstack = 0
  6658                           ; Regs used in _de_sigmoid: [wreg-fsr0h+status,2+status,0+pclath]
  6659                           ;de_sigmoid@z stored from wreg
  6660     0DCF  00F1               	movwf	de_sigmoid@z
  6661     0DD0                     l2739:
  6662                           
  6663                           ;sigmoid.c: 13:     return de_sigmoidValues[((uint8_t)z)>>4];
  6664     0DD0  0871               	movf	de_sigmoid@z,w
  6665     0DD1  00F0               	movwf	??_de_sigmoid
  6666     0DD2  3004               	movlw	4
  6667     0DD3                     u1515:
  6668     0DD3  36F0               	lsrf	??_de_sigmoid,f
  6669     0DD4  0B89               	decfsz	9,f
  6670     0DD5  2DD3               	goto	u1515
  6671     0DD6  0870               	movf	??_de_sigmoid,w
  6672     0DD7  3E00               	addlw	low (_de_sigmoidValues| (0+32768))
  6673     0DD8  0084               	movwf	4
  6674     0DD9  3088               	movlw	high (_de_sigmoidValues| (0+32768))
  6675     0DDA  1803               	skipnc
  6676     0DDB  3E01               	addlw	1
  6677     0DDC  0085               	movwf	5
  6678     0DDD  0800               	movf	0,w	;code access
  6679     0DDE                     l686:
  6680     0DDE  0008               	return
  6681     0DDF                     __end_of_de_sigmoid:
  6682                           
  6683                           	psect	text20
  6684     0004                     __ptext20:	
  6685 ;; *************** function _biases2_read *****************
  6686 ;; Defined at:
  6687 ;;		line 41 in file "ai.c"
  6688 ;; Parameters:    Size  Location     Type
  6689 ;;  add             1    wreg     unsigned char 
  6690 ;; Auto vars:     Size  Location     Type
  6691 ;;  add             1    4[COMMON] unsigned char 
  6692 ;; Return value:  Size  Location     Type
  6693 ;;                  1    wreg      char 
  6694 ;; Registers used:
  6695 ;;		wreg, status,2, status,0, pclath, cstack
  6696 ;; Tracked objects:
  6697 ;;		On entry : 0/0
  6698 ;;		On exit  : 0/0
  6699 ;;		Unchanged: 0/0
  6700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6701 ;;      Params:         0       0       0       0       0       0
  6702 ;;      Locals:         1       0       0       0       0       0
  6703 ;;      Temps:          0       0       0       0       0       0
  6704 ;;      Totals:         1       0       0       0       0       0
  6705 ;;Total ram usage:        1 bytes
  6706 ;; Hardware stack levels used: 1
  6707 ;; Hardware stack levels required when called: 1
  6708 ;; This function calls:
  6709 ;;		_eeprom_read
  6710 ;; This function is called by:
  6711 ;;		_ai_run
  6712 ;;		_ai_propagate
  6713 ;;		_printAI
  6714 ;; This function uses a non-reentrant model
  6715 ;;
  6716                           
  6717     0004                     _biases2_read:	
  6718                           ;psect for function _biases2_read
  6719                           
  6720                           
  6721                           ;incstack = 0
  6722                           ; Regs used in _biases2_read: [wreg+status,2+status,0+pclath+cstack]
  6723                           ;biases2_read@add stored from wreg
  6724     0004  00F4               	movwf	biases2_read@add
  6725     0005                     l2731:
  6726                           
  6727                           ;ai.c: 42:     return (int8_t)eeprom_read(0 +16*7 +7 +4*7 + add);
  6728     0005  0874               	movf	biases2_read@add,w
  6729     0006  3E93               	addlw	147
  6730     0007  318E  264B  3180   	fcall	_eeprom_read
  6731     000A                     l571:
  6732     000A  0008               	return
  6733     000B                     __end_of_biases2_read:
  6734                           
  6735                           	psect	text21
  6736     0D5C                     __ptext21:	
  6737 ;; *************** function _biases1_read *****************
  6738 ;; Defined at:
  6739 ;;		line 35 in file "ai.c"
  6740 ;; Parameters:    Size  Location     Type
  6741 ;;  add             1    wreg     unsigned char 
  6742 ;; Auto vars:     Size  Location     Type
  6743 ;;  add             1    4[COMMON] unsigned char 
  6744 ;; Return value:  Size  Location     Type
  6745 ;;                  1    wreg      char 
  6746 ;; Registers used:
  6747 ;;		wreg, status,2, status,0, pclath, cstack
  6748 ;; Tracked objects:
  6749 ;;		On entry : 0/0
  6750 ;;		On exit  : 0/0
  6751 ;;		Unchanged: 0/0
  6752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6753 ;;      Params:         0       0       0       0       0       0
  6754 ;;      Locals:         1       0       0       0       0       0
  6755 ;;      Temps:          0       0       0       0       0       0
  6756 ;;      Totals:         1       0       0       0       0       0
  6757 ;;Total ram usage:        1 bytes
  6758 ;; Hardware stack levels used: 1
  6759 ;; Hardware stack levels required when called: 1
  6760 ;; This function calls:
  6761 ;;		_eeprom_read
  6762 ;; This function is called by:
  6763 ;;		_ai_run
  6764 ;;		_ai_propagate
  6765 ;; This function uses a non-reentrant model
  6766 ;;
  6767                           
  6768     0D5C                     _biases1_read:	
  6769                           ;psect for function _biases1_read
  6770                           
  6771                           
  6772                           ;incstack = 0
  6773                           ; Regs used in _biases1_read: [wreg+status,2+status,0+pclath+cstack]
  6774                           ;biases1_read@add stored from wreg
  6775     0D5C  00F4               	movwf	biases1_read@add
  6776     0D5D                     l2723:
  6777                           
  6778                           ;ai.c: 36:     return (int8_t)eeprom_read(0 +16*7 + add);
  6779     0D5D  0874               	movf	biases1_read@add,w
  6780     0D5E  3E70               	addlw	112
  6781     0D5F  318E  264B  318D   	fcall	_eeprom_read
  6782     0D62                     l565:
  6783     0D62  0008               	return
  6784     0D63                     __end_of_biases1_read:
  6785                           
  6786                           	psect	text22
  6787     0EAA                     __ptext22:	
  6788 ;; *************** function ___wmul *****************
  6789 ;; Defined at:
  6790 ;;		line 15 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  6791 ;; Parameters:    Size  Location     Type
  6792 ;;  multiplier      2    7[COMMON] unsigned int 
  6793 ;;  multiplicand    2    9[COMMON] unsigned int 
  6794 ;; Auto vars:     Size  Location     Type
  6795 ;;  product         2   11[COMMON] unsigned int 
  6796 ;; Return value:  Size  Location     Type
  6797 ;;                  2    7[COMMON] unsigned int 
  6798 ;; Registers used:
  6799 ;;		wreg, status,2, status,0
  6800 ;; Tracked objects:
  6801 ;;		On entry : 0/0
  6802 ;;		On exit  : 0/0
  6803 ;;		Unchanged: 0/0
  6804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6805 ;;      Params:         4       0       0       0       0       0
  6806 ;;      Locals:         2       0       0       0       0       0
  6807 ;;      Temps:          0       0       0       0       0       0
  6808 ;;      Totals:         6       0       0       0       0       0
  6809 ;;Total ram usage:        6 bytes
  6810 ;; Hardware stack levels used: 1
  6811 ;; This function calls:
  6812 ;;		Nothing
  6813 ;; This function is called by:
  6814 ;;		_ai_run
  6815 ;;		_ai_propagate
  6816 ;; This function uses a non-reentrant model
  6817 ;;
  6818                           
  6819     0EAA                     ___wmul:	
  6820                           ;psect for function ___wmul
  6821                           
  6822     0EAA                     l2743:	
  6823                           ;incstack = 0
  6824                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6825                           
  6826     0EAA  01FB               	clrf	___wmul@product
  6827     0EAB  01FC               	clrf	___wmul@product+1
  6828     0EAC                     l2745:
  6829     0EAC  1C77               	btfss	___wmul@multiplier,0
  6830     0EAD  2EAF               	goto	u1521
  6831     0EAE  2EB0               	goto	u1520
  6832     0EAF                     u1521:
  6833     0EAF  2EB4               	goto	l873
  6834     0EB0                     u1520:
  6835     0EB0                     l2747:
  6836     0EB0  0879               	movf	___wmul@multiplicand,w
  6837     0EB1  07FB               	addwf	___wmul@product,f
  6838     0EB2  087A               	movf	___wmul@multiplicand+1,w
  6839     0EB3  3DFC               	addwfc	___wmul@product+1,f
  6840     0EB4                     l873:
  6841     0EB4  3001               	movlw	1
  6842     0EB5                     u1535:
  6843     0EB5  35F9               	lslf	___wmul@multiplicand,f
  6844     0EB6  0DFA               	rlf	___wmul@multiplicand+1,f
  6845     0EB7  0B89               	decfsz	9,f
  6846     0EB8  2EB5               	goto	u1535
  6847     0EB9                     l2749:
  6848     0EB9  3001               	movlw	1
  6849     0EBA                     u1545:
  6850     0EBA  36F8               	lsrf	___wmul@multiplier+1,f
  6851     0EBB  0CF7               	rrf	___wmul@multiplier,f
  6852     0EBC  0B89               	decfsz	9,f
  6853     0EBD  2EBA               	goto	u1545
  6854     0EBE                     l2751:
  6855     0EBE  0877               	movf	___wmul@multiplier,w
  6856     0EBF  0478               	iorwf	___wmul@multiplier+1,w
  6857     0EC0  1D03               	btfss	3,2
  6858     0EC1  2EC3               	goto	u1551
  6859     0EC2  2EC4               	goto	u1550
  6860     0EC3                     u1551:
  6861     0EC3  2EAC               	goto	l2745
  6862     0EC4                     u1550:
  6863     0EC4                     l2753:
  6864     0EC4  087C               	movf	___wmul@product+1,w
  6865     0EC5  00F8               	movwf	?___wmul+1
  6866     0EC6  087B               	movf	___wmul@product,w
  6867     0EC7  00F7               	movwf	?___wmul
  6868     0EC8                     l875:
  6869     0EC8  0008               	return
  6870     0EC9                     __end_of___wmul:
  6871                           
  6872                           	psect	text23
  6873     00F1                     __ptext23:	
  6874 ;; *************** function ___awdiv *****************
  6875 ;; Defined at:
  6876 ;;		line 5 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
  6877 ;; Parameters:    Size  Location     Type
  6878 ;;  divisor         2    0[BANK0 ] int 
  6879 ;;  dividend        2    2[BANK0 ] int 
  6880 ;; Auto vars:     Size  Location     Type
  6881 ;;  quotient        2    6[BANK0 ] int 
  6882 ;;  sign            1    5[BANK0 ] unsigned char 
  6883 ;;  counter         1    4[BANK0 ] unsigned char 
  6884 ;; Return value:  Size  Location     Type
  6885 ;;                  2    0[BANK0 ] int 
  6886 ;; Registers used:
  6887 ;;		wreg, status,2, status,0
  6888 ;; Tracked objects:
  6889 ;;		On entry : 0/0
  6890 ;;		On exit  : 0/0
  6891 ;;		Unchanged: 0/0
  6892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6893 ;;      Params:         0       4       0       0       0       0
  6894 ;;      Locals:         0       4       0       0       0       0
  6895 ;;      Temps:          1       0       0       0       0       0
  6896 ;;      Totals:         1       8       0       0       0       0
  6897 ;;Total ram usage:        9 bytes
  6898 ;; Hardware stack levels used: 1
  6899 ;; This function calls:
  6900 ;;		Nothing
  6901 ;; This function is called by:
  6902 ;;		_main
  6903 ;;		_ai_run
  6904 ;;		_ai_propagate
  6905 ;; This function uses a non-reentrant model
  6906 ;;
  6907                           
  6908     00F1                     ___awdiv:	
  6909                           ;psect for function ___awdiv
  6910                           
  6911     00F1                     l2757:	
  6912                           ;incstack = 0
  6913                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  6914                           
  6915     00F1  0020               	movlb	0	; select bank0
  6916     00F2  01A5               	clrf	___awdiv@sign
  6917     00F3                     l2759:
  6918     00F3  1FA1               	btfss	___awdiv@divisor+1,7
  6919     00F4  28F6               	goto	u1561
  6920     00F5  28F7               	goto	u1560
  6921     00F6                     u1561:
  6922     00F6  28FE               	goto	l2765
  6923     00F7                     u1560:
  6924     00F7                     l2761:
  6925     00F7  09A0               	comf	___awdiv@divisor,f
  6926     00F8  09A1               	comf	___awdiv@divisor+1,f
  6927     00F9  0AA0               	incf	___awdiv@divisor,f
  6928     00FA  1903               	skipnz
  6929     00FB  0AA1               	incf	___awdiv@divisor+1,f
  6930     00FC                     l2763:
  6931     00FC  01A5               	clrf	___awdiv@sign
  6932     00FD  0AA5               	incf	___awdiv@sign,f
  6933     00FE                     l2765:
  6934     00FE  1FA3               	btfss	___awdiv@dividend+1,7
  6935     00FF  2901               	goto	u1571
  6936     0100  2902               	goto	u1570
  6937     0101                     u1571:
  6938     0101  290B               	goto	l2771
  6939     0102                     u1570:
  6940     0102                     l2767:
  6941     0102  09A2               	comf	___awdiv@dividend,f
  6942     0103  09A3               	comf	___awdiv@dividend+1,f
  6943     0104  0AA2               	incf	___awdiv@dividend,f
  6944     0105  1903               	skipnz
  6945     0106  0AA3               	incf	___awdiv@dividend+1,f
  6946     0107                     l2769:
  6947     0107  3001               	movlw	1
  6948     0108  00FD               	movwf	??___awdiv
  6949     0109  087D               	movf	??___awdiv,w
  6950     010A  06A5               	xorwf	___awdiv@sign,f
  6951     010B                     l2771:
  6952     010B  01A6               	clrf	___awdiv@quotient
  6953     010C  01A7               	clrf	___awdiv@quotient+1
  6954     010D                     l2773:
  6955     010D  0820               	movf	___awdiv@divisor,w
  6956     010E  0421               	iorwf	___awdiv@divisor+1,w
  6957     010F  1903               	btfsc	3,2
  6958     0110  2912               	goto	u1581
  6959     0111  2913               	goto	u1580
  6960     0112                     u1581:
  6961     0112  2942               	goto	l2793
  6962     0113                     u1580:
  6963     0113                     l2775:
  6964     0113  01A4               	clrf	___awdiv@counter
  6965     0114  0AA4               	incf	___awdiv@counter,f
  6966     0115  291F               	goto	l2781
  6967     0116                     l2777:
  6968     0116  3001               	movlw	1
  6969     0117                     u1595:
  6970     0117  35A0               	lslf	___awdiv@divisor,f
  6971     0118  0DA1               	rlf	___awdiv@divisor+1,f
  6972     0119  0B89               	decfsz	9,f
  6973     011A  2917               	goto	u1595
  6974     011B                     l2779:
  6975     011B  3001               	movlw	1
  6976     011C  00FD               	movwf	??___awdiv
  6977     011D  087D               	movf	??___awdiv,w
  6978     011E  07A4               	addwf	___awdiv@counter,f
  6979     011F                     l2781:
  6980     011F  1FA1               	btfss	___awdiv@divisor+1,7
  6981     0120  2922               	goto	u1601
  6982     0121  2923               	goto	u1600
  6983     0122                     u1601:
  6984     0122  2916               	goto	l2777
  6985     0123                     u1600:
  6986     0123                     l2783:
  6987     0123  3001               	movlw	1
  6988     0124                     u1615:
  6989     0124  35A6               	lslf	___awdiv@quotient,f
  6990     0125  0DA7               	rlf	___awdiv@quotient+1,f
  6991     0126  0B89               	decfsz	9,f
  6992     0127  2924               	goto	u1615
  6993     0128  0821               	movf	___awdiv@divisor+1,w
  6994     0129  0223               	subwf	___awdiv@dividend+1,w
  6995     012A  1D03               	skipz
  6996     012B  292E               	goto	u1625
  6997     012C  0820               	movf	___awdiv@divisor,w
  6998     012D  0222               	subwf	___awdiv@dividend,w
  6999     012E                     u1625:
  7000     012E  1C03               	skipc
  7001     012F  2931               	goto	u1621
  7002     0130  2932               	goto	u1620
  7003     0131                     u1621:
  7004     0131  2937               	goto	l2789
  7005     0132                     u1620:
  7006     0132                     l2785:
  7007     0132  0820               	movf	___awdiv@divisor,w
  7008     0133  02A2               	subwf	___awdiv@dividend,f
  7009     0134  0821               	movf	___awdiv@divisor+1,w
  7010     0135  3BA3               	subwfb	___awdiv@dividend+1,f
  7011     0136                     l2787:
  7012     0136  1426               	bsf	___awdiv@quotient,0
  7013     0137                     l2789:
  7014     0137  3001               	movlw	1
  7015     0138                     u1635:
  7016     0138  36A1               	lsrf	___awdiv@divisor+1,f
  7017     0139  0CA0               	rrf	___awdiv@divisor,f
  7018     013A  0B89               	decfsz	9,f
  7019     013B  2938               	goto	u1635
  7020     013C                     l2791:
  7021     013C  3001               	movlw	1
  7022     013D  02A4               	subwf	___awdiv@counter,f
  7023     013E  1D03               	btfss	3,2
  7024     013F  2941               	goto	u1641
  7025     0140  2942               	goto	u1640
  7026     0141                     u1641:
  7027     0141  2923               	goto	l2783
  7028     0142                     u1640:
  7029     0142                     l2793:
  7030     0142  0825               	movf	___awdiv@sign,w
  7031     0143  1903               	btfsc	3,2
  7032     0144  2946               	goto	u1651
  7033     0145  2947               	goto	u1650
  7034     0146                     u1651:
  7035     0146  294C               	goto	l2797
  7036     0147                     u1650:
  7037     0147                     l2795:
  7038     0147  09A6               	comf	___awdiv@quotient,f
  7039     0148  09A7               	comf	___awdiv@quotient+1,f
  7040     0149  0AA6               	incf	___awdiv@quotient,f
  7041     014A  1903               	skipnz
  7042     014B  0AA7               	incf	___awdiv@quotient+1,f
  7043     014C                     l2797:
  7044     014C  0827               	movf	___awdiv@quotient+1,w
  7045     014D  00A1               	movwf	?___awdiv+1
  7046     014E  0826               	movf	___awdiv@quotient,w
  7047     014F  00A0               	movwf	?___awdiv
  7048     0150                     l1026:
  7049     0150  0008               	return
  7050     0151                     __end_of___awdiv:
  7051                           
  7052                           	psect	text24
  7053     0E78                     __ptext24:	
  7054 ;; *************** function _ai_is_ai_trained_write *****************
  7055 ;; Defined at:
  7056 ;;		line 57 in file "ai.c"
  7057 ;; Parameters:    Size  Location     Type
  7058 ;;  val             1    wreg     unsigned char 
  7059 ;; Auto vars:     Size  Location     Type
  7060 ;;  val             1    9[COMMON] unsigned char 
  7061 ;;  c               1   10[COMMON] unsigned char 
  7062 ;; Return value:  Size  Location     Type
  7063 ;;                  1    wreg      void 
  7064 ;; Registers used:
  7065 ;;		wreg, status,2, status,0, pclath, cstack
  7066 ;; Tracked objects:
  7067 ;;		On entry : 0/0
  7068 ;;		On exit  : 0/0
  7069 ;;		Unchanged: 0/0
  7070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7071 ;;      Params:         0       0       0       0       0       0
  7072 ;;      Locals:         2       0       0       0       0       0
  7073 ;;      Temps:          1       0       0       0       0       0
  7074 ;;      Totals:         3       0       0       0       0       0
  7075 ;;Total ram usage:        3 bytes
  7076 ;; Hardware stack levels used: 1
  7077 ;; Hardware stack levels required when called: 1
  7078 ;; This function calls:
  7079 ;;		_eeprom_read
  7080 ;;		_eeprom_write
  7081 ;; This function is called by:
  7082 ;;		_main
  7083 ;; This function uses a non-reentrant model
  7084 ;;
  7085                           
  7086     0E78                     _ai_is_ai_trained_write:	
  7087                           ;psect for function _ai_is_ai_trained_write
  7088                           
  7089                           
  7090                           ;incstack = 0
  7091                           ; Regs used in _ai_is_ai_trained_write: [wreg+status,2+status,0+pclath+cstack]
  7092                           ;ai_is_ai_trained_write@val stored from wreg
  7093     0E78  00F9               	movwf	ai_is_ai_trained_write@val
  7094     0E79                     l3349:
  7095                           
  7096                           ;ai.c: 58:     unsigned char c = eeprom_read(0 +16*7 +7 +4*7 +4);
  7097     0E79  3097               	movlw	151
  7098     0E7A  318E  264B  318E   	fcall	_eeprom_read
  7099     0E7D  00FA               	movwf	ai_is_ai_trained_write@c
  7100     0E7E                     l3351:
  7101                           
  7102                           ;ai.c: 59:     if(val){
  7103     0E7E  0879               	movf	ai_is_ai_trained_write@val,w
  7104     0E7F  1903               	btfsc	3,2
  7105     0E80  2E82               	goto	u2261
  7106     0E81  2E83               	goto	u2260
  7107     0E82                     u2261:
  7108     0E82  2E85               	goto	l3355
  7109     0E83                     u2260:
  7110     0E83                     l3353:
  7111                           
  7112                           ;ai.c: 60:         (c) |= 1UL << (1);
  7113     0E83  14FA               	bsf	ai_is_ai_trained_write@c,1
  7114                           
  7115                           ;ai.c: 61:     } else{
  7116     0E84  2E89               	goto	l3357
  7117     0E85                     l3355:
  7118                           
  7119                           ;ai.c: 62:         (c) &= ~(1UL << (1));
  7120     0E85  30FD               	movlw	253
  7121     0E86  00F8               	movwf	??_ai_is_ai_trained_write
  7122     0E87  0878               	movf	??_ai_is_ai_trained_write,w
  7123     0E88  05FA               	andwf	ai_is_ai_trained_write@c,f
  7124     0E89                     l3357:
  7125                           
  7126                           ;ai.c: 64:     eeprom_write(0 +16*7 +7 +4*7 +4, c);
  7127     0E89  087A               	movf	ai_is_ai_trained_write@c,w
  7128     0E8A  00F4               	movwf	eeprom_write@value
  7129     0E8B  3097               	movlw	151
  7130     0E8C  318F  2736  318E   	fcall	_eeprom_write
  7131     0E8F                     l584:
  7132     0E8F  0008               	return
  7133     0E90                     __end_of_ai_is_ai_trained_write:
  7134                           
  7135                           	psect	text25
  7136     0D4F                     __ptext25:	
  7137 ;; *************** function _ai_is_ai_trained_read *****************
  7138 ;; Defined at:
  7139 ;;		line 66 in file "ai.c"
  7140 ;; Parameters:    Size  Location     Type
  7141 ;;		None
  7142 ;; Auto vars:     Size  Location     Type
  7143 ;;		None
  7144 ;; Return value:  Size  Location     Type
  7145 ;;                  1    wreg      unsigned char 
  7146 ;; Registers used:
  7147 ;;		wreg, status,2, status,0, pclath, cstack
  7148 ;; Tracked objects:
  7149 ;;		On entry : 0/0
  7150 ;;		On exit  : 0/0
  7151 ;;		Unchanged: 0/0
  7152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7153 ;;      Params:         0       0       0       0       0       0
  7154 ;;      Locals:         0       0       0       0       0       0
  7155 ;;      Temps:          0       0       0       0       0       0
  7156 ;;      Totals:         0       0       0       0       0       0
  7157 ;;Total ram usage:        0 bytes
  7158 ;; Hardware stack levels used: 1
  7159 ;; Hardware stack levels required when called: 1
  7160 ;; This function calls:
  7161 ;;		_eeprom_read
  7162 ;; This function is called by:
  7163 ;;		_main
  7164 ;; This function uses a non-reentrant model
  7165 ;;
  7166                           
  7167     0D4F                     _ai_is_ai_trained_read:	
  7168                           ;psect for function _ai_is_ai_trained_read
  7169                           
  7170     0D4F                     l2909:	
  7171                           ;incstack = 0
  7172                           ; Regs used in _ai_is_ai_trained_read: [wreg+status,2+status,0+pclath+cstack]
  7173                           
  7174                           
  7175                           ;ai.c: 67:     return (uint8_t)(eeprom_read(0 +16*7 +7 +4*7 +4)&0x02);
  7176     0D4F  3097               	movlw	151
  7177     0D50  318E  264B  318D   	fcall	_eeprom_read
  7178     0D53  3902               	andlw	2
  7179     0D54                     l587:
  7180     0D54  0008               	return
  7181     0D55                     __end_of_ai_is_ai_trained_read:
  7182                           
  7183                           	psect	text26
  7184     0E4B                     __ptext26:	
  7185 ;; *************** function _eeprom_read *****************
  7186 ;; Defined at:
  7187 ;;		line 6 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\pic\__eeread.c"
  7188 ;; Parameters:    Size  Location     Type
  7189 ;;  addr            1    wreg     unsigned char 
  7190 ;; Auto vars:     Size  Location     Type
  7191 ;;  addr            1    3[COMMON] unsigned char 
  7192 ;; Return value:  Size  Location     Type
  7193 ;;                  1    wreg      unsigned char 
  7194 ;; Registers used:
  7195 ;;		wreg, status,2, status,0
  7196 ;; Tracked objects:
  7197 ;;		On entry : 0/0
  7198 ;;		On exit  : 0/0
  7199 ;;		Unchanged: 0/0
  7200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7201 ;;      Params:         0       0       0       0       0       0
  7202 ;;      Locals:         1       0       0       0       0       0
  7203 ;;      Temps:          3       0       0       0       0       0
  7204 ;;      Totals:         4       0       0       0       0       0
  7205 ;;Total ram usage:        4 bytes
  7206 ;; Hardware stack levels used: 1
  7207 ;; This function calls:
  7208 ;;		Nothing
  7209 ;; This function is called by:
  7210 ;;		_weights1_read
  7211 ;;		_biases1_read
  7212 ;;		_weights2_read
  7213 ;;		_biases2_read
  7214 ;;		_ai_is_ai_trained_write
  7215 ;;		_ai_is_ai_trained_read
  7216 ;;		_ai_is_ai_initiated_write
  7217 ;;		_ai_is_ai_initiated_read
  7218 ;;		_ai_maxScore_read
  7219 ;;		_ai_scores_read
  7220 ;; This function uses a non-reentrant model
  7221 ;;
  7222                           
  7223     0E4B                     _eeprom_read:	
  7224                           ;psect for function _eeprom_read
  7225                           
  7226                           
  7227                           ;incstack = 0
  7228                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  7229                           ;eeprom_read@addr stored from wreg
  7230     0E4B  00F3               	movwf	eeprom_read@addr
  7231     0E4C                     l843:	
  7232                           ;D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\pic\__eeread.c: 6: eeprom_read(unsig
      +                          ned char addr);D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\pic\__eeread.c: 7: {;D
      +                          :\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\pic\__eeread.c: 8:  do
  7233                           
  7234     0E4C  0064               	clrwdt	;# 
  7235     0E4D  0023               	movlb	3	; select bank3
  7236     0E4E  1895               	btfsc	21,1	;volsfr
  7237     0E4F  2E51               	goto	u1421
  7238     0E50  2E52               	goto	u1420
  7239     0E51                     u1421:
  7240     0E51  2E4C               	goto	l843
  7241     0E52                     u1420:
  7242     0E52                     l2627:
  7243                           
  7244                           ;D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\pic\__eeread.c: 18:  return ( EEADR 
      +                          = addr, EECON1 &= 0x3F, EECON1bits.RD = 1, EEDATA);
  7245     0E52  0873               	movf	eeprom_read@addr,w
  7246     0E53  00F0               	movwf	??_eeprom_read
  7247     0E54  01F1               	clrf	??_eeprom_read+1
  7248     0E55  0870               	movf	??_eeprom_read,w
  7249     0E56  0091               	movwf	17	;volatile
  7250     0E57  0871               	movf	??_eeprom_read+1,w
  7251     0E58  0092               	movwf	18	;volatile
  7252     0E59  303F               	movlw	63
  7253     0E5A  00F2               	movwf	??_eeprom_read+2
  7254     0E5B  0872               	movf	??_eeprom_read+2,w
  7255     0E5C  0595               	andwf	21,f	;volsfr
  7256     0E5D  1415               	bsf	21,0	;volsfr
  7257     0E5E  0813               	movf	19,w	;volatile
  7258     0E5F                     l845:
  7259     0E5F  0008               	return
  7260     0E60                     __end_of_eeprom_read:
  7261                           
  7262                           	psect	text27
  7263     0093                     __ptext27:	
  7264 ;; *************** function _ai_initiate *****************
  7265 ;; Defined at:
  7266 ;;		line 83 in file "ai.c"
  7267 ;; Parameters:    Size  Location     Type
  7268 ;;		None
  7269 ;; Auto vars:     Size  Location     Type
  7270 ;;  i               1   10[BANK0 ] unsigned char 
  7271 ;;  i               1    9[BANK0 ] unsigned char 
  7272 ;;  j               1   12[BANK0 ] unsigned char 
  7273 ;;  j               1   11[BANK0 ] unsigned char 
  7274 ;; Return value:  Size  Location     Type
  7275 ;;                  1    wreg      void 
  7276 ;; Registers used:
  7277 ;;		wreg, status,2, status,0, pclath, cstack
  7278 ;; Tracked objects:
  7279 ;;		On entry : 0/0
  7280 ;;		On exit  : 0/0
  7281 ;;		Unchanged: 0/0
  7282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7283 ;;      Params:         0       0       0       0       0       0
  7284 ;;      Locals:         0       4       0       0       0       0
  7285 ;;      Temps:          0       1       0       0       0       0
  7286 ;;      Totals:         0       5       0       0       0       0
  7287 ;;Total ram usage:        5 bytes
  7288 ;; Hardware stack levels used: 1
  7289 ;; Hardware stack levels required when called: 2
  7290 ;; This function calls:
  7291 ;;		_biases1_write
  7292 ;;		_biases2_write
  7293 ;;		_rand
  7294 ;;		_weights1_write
  7295 ;;		_weights2_write
  7296 ;; This function is called by:
  7297 ;;		_main
  7298 ;; This function uses a non-reentrant model
  7299 ;;
  7300                           
  7301     0093                     _ai_initiate:	
  7302                           ;psect for function _ai_initiate
  7303                           
  7304     0093                     l2809:	
  7305                           ;incstack = 0
  7306                           ; Regs used in _ai_initiate: [wreg+status,2+status,0+pclath+cstack]
  7307                           
  7308                           
  7309                           ;ai.c: 87:     for(uint8_t j = 0; j < 7; j++){
  7310     0093  0020               	movlb	0	; select bank0
  7311     0094  01AB               	clrf	ai_initiate@j
  7312     0095                     l2815:
  7313                           
  7314                           ;ai.c: 88:         biases1_write(j, (int8_t)rand());
  7315     0095  3180  200B  3180   	fcall	_rand
  7316     0098  087C               	movf	?_rand,w
  7317     0099  0020               	movlb	0	; select bank0
  7318     009A  00A4               	movwf	biases1_write@val
  7319     009B  082B               	movf	ai_initiate@j,w
  7320     009C  318D  256B  3180   	fcall	_biases1_write
  7321     009F                     l2817:
  7322                           
  7323                           ;ai.c: 89:         for(uint8_t i = 0; i < 16; i++){
  7324     009F  0020               	movlb	0	; select bank0
  7325     00A0  01A9               	clrf	ai_initiate@i
  7326     00A1                     l2823:
  7327                           
  7328                           ;ai.c: 90:             weights1_write(i,j, (int8_t)rand());
  7329     00A1  082B               	movf	ai_initiate@j,w
  7330     00A2  00A4               	movwf	weights1_write@add2
  7331     00A3  3180  200B  3180   	fcall	_rand
  7332     00A6  087C               	movf	?_rand,w
  7333     00A7  0020               	movlb	0	; select bank0
  7334     00A8  00A5               	movwf	weights1_write@val
  7335     00A9  0829               	movf	ai_initiate@i,w
  7336     00AA  318D  25EF  3180   	fcall	_weights1_write
  7337     00AD                     l2825:
  7338                           
  7339                           ;ai.c: 91:         }
  7340     00AD  3001               	movlw	1
  7341     00AE  0020               	movlb	0	; select bank0
  7342     00AF  00A8               	movwf	??_ai_initiate
  7343     00B0  0828               	movf	??_ai_initiate,w
  7344     00B1  07A9               	addwf	ai_initiate@i,f
  7345     00B2                     l2827:
  7346     00B2  3010               	movlw	16
  7347     00B3  0229               	subwf	ai_initiate@i,w
  7348     00B4  1C03               	skipc
  7349     00B5  28B7               	goto	u1671
  7350     00B6  28B8               	goto	u1670
  7351     00B7                     u1671:
  7352     00B7  28A1               	goto	l2823
  7353     00B8                     u1670:
  7354     00B8                     l2829:
  7355                           
  7356                           ;ai.c: 92:     }
  7357     00B8  3001               	movlw	1
  7358     00B9  00A8               	movwf	??_ai_initiate
  7359     00BA  0828               	movf	??_ai_initiate,w
  7360     00BB  07AB               	addwf	ai_initiate@j,f
  7361     00BC                     l2831:
  7362     00BC  3007               	movlw	7
  7363     00BD  022B               	subwf	ai_initiate@j,w
  7364     00BE  1C03               	skipc
  7365     00BF  28C1               	goto	u1681
  7366     00C0  28C2               	goto	u1680
  7367     00C1                     u1681:
  7368     00C1  2895               	goto	l2815
  7369     00C2                     u1680:
  7370     00C2                     l2833:
  7371                           
  7372                           ;ai.c: 93:     for(uint8_t j = 0; j < 4; j++){
  7373     00C2  01AC               	clrf	ai_initiate@j_907
  7374     00C3                     l2839:
  7375                           
  7376                           ;ai.c: 94:         biases2_write(j, (int8_t)rand());
  7377     00C3  3180  200B  3180   	fcall	_rand
  7378     00C6  087C               	movf	?_rand,w
  7379     00C7  0020               	movlb	0	; select bank0
  7380     00C8  00A4               	movwf	biases2_write@val
  7381     00C9  082C               	movf	ai_initiate@j_907,w
  7382     00CA  318D  2575  3180   	fcall	_biases2_write
  7383     00CD                     l2841:
  7384                           
  7385                           ;ai.c: 95:         for(uint8_t i = 0; i < 7; i++){
  7386     00CD  0020               	movlb	0	; select bank0
  7387     00CE  01AA               	clrf	ai_initiate@i_909
  7388     00CF                     l2847:
  7389                           
  7390                           ;ai.c: 96:             weights2_write(i,j, (int8_t)rand());
  7391     00CF  082C               	movf	ai_initiate@j_907,w
  7392     00D0  00A4               	movwf	weights2_write@add2
  7393     00D1  3180  200B  3180   	fcall	_rand
  7394     00D4  087C               	movf	?_rand,w
  7395     00D5  0020               	movlb	0	; select bank0
  7396     00D6  00A5               	movwf	weights2_write@val
  7397     00D7  082A               	movf	ai_initiate@i_909,w
  7398     00D8  318E  2600  3180   	fcall	_weights2_write
  7399     00DB                     l2849:
  7400                           
  7401                           ;ai.c: 97:         }
  7402     00DB  3001               	movlw	1
  7403     00DC  0020               	movlb	0	; select bank0
  7404     00DD  00A8               	movwf	??_ai_initiate
  7405     00DE  0828               	movf	??_ai_initiate,w
  7406     00DF  07AA               	addwf	ai_initiate@i_909,f
  7407     00E0                     l2851:
  7408     00E0  3007               	movlw	7
  7409     00E1  022A               	subwf	ai_initiate@i_909,w
  7410     00E2  1C03               	skipc
  7411     00E3  28E5               	goto	u1691
  7412     00E4  28E6               	goto	u1690
  7413     00E5                     u1691:
  7414     00E5  28CF               	goto	l2847
  7415     00E6                     u1690:
  7416     00E6                     l2853:
  7417                           
  7418                           ;ai.c: 98:     }
  7419     00E6  3001               	movlw	1
  7420     00E7  00A8               	movwf	??_ai_initiate
  7421     00E8  0828               	movf	??_ai_initiate,w
  7422     00E9  07AC               	addwf	ai_initiate@j_907,f
  7423     00EA                     l2855:
  7424     00EA  3004               	movlw	4
  7425     00EB  022C               	subwf	ai_initiate@j_907,w
  7426     00EC  1C03               	skipc
  7427     00ED  28EF               	goto	u1701
  7428     00EE  28F0               	goto	u1700
  7429     00EF                     u1701:
  7430     00EF  28C3               	goto	l2839
  7431     00F0                     u1700:
  7432     00F0                     l610:
  7433     00F0  0008               	return
  7434     00F1                     __end_of_ai_initiate:
  7435                           
  7436                           	psect	text28
  7437     0E00                     __ptext28:	
  7438 ;; *************** function _weights2_write *****************
  7439 ;; Defined at:
  7440 ;;		line 26 in file "ai.c"
  7441 ;; Parameters:    Size  Location     Type
  7442 ;;  add1            1    wreg     unsigned char 
  7443 ;;  add2            1    4[BANK0 ] unsigned char 
  7444 ;;  val             1    5[BANK0 ] char 
  7445 ;; Auto vars:     Size  Location     Type
  7446 ;;  add1            1    6[BANK0 ] unsigned char 
  7447 ;; Return value:  Size  Location     Type
  7448 ;;                  1    wreg      void 
  7449 ;; Registers used:
  7450 ;;		wreg, status,2, status,0, pclath, cstack
  7451 ;; Tracked objects:
  7452 ;;		On entry : 0/0
  7453 ;;		On exit  : 0/0
  7454 ;;		Unchanged: 0/0
  7455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7456 ;;      Params:         0       2       0       0       0       0
  7457 ;;      Locals:         0       1       0       0       0       0
  7458 ;;      Temps:          0       0       0       0       0       0
  7459 ;;      Totals:         0       3       0       0       0       0
  7460 ;;Total ram usage:        3 bytes
  7461 ;; Hardware stack levels used: 1
  7462 ;; Hardware stack levels required when called: 1
  7463 ;; This function calls:
  7464 ;;		___bmul
  7465 ;;		_eeprom_write
  7466 ;; This function is called by:
  7467 ;;		_ai_initiate
  7468 ;;		_ai_propagate
  7469 ;; This function uses a non-reentrant model
  7470 ;;
  7471                           
  7472     0E00                     _weights2_write:	
  7473                           ;psect for function _weights2_write
  7474                           
  7475                           
  7476                           ;incstack = 0
  7477                           ; Regs used in _weights2_write: [wreg+status,2+status,0+pclath+cstack]
  7478                           ;weights2_write@add1 stored from wreg
  7479     0E00  0020               	movlb	0	; select bank0
  7480     0E01  00A6               	movwf	weights2_write@add1
  7481     0E02                     l2715:
  7482                           
  7483                           ;ai.c: 27:     eeprom_write(0 +16*7 +7 + 7*add1 + add2, (unsigned char)val);
  7484     0E02  0825               	movf	weights2_write@val,w
  7485     0E03  00F4               	movwf	eeprom_write@value
  7486     0E04  3007               	movlw	7
  7487     0E05  00F0               	movwf	___bmul@multiplicand
  7488     0E06  0826               	movf	weights2_write@add1,w
  7489     0E07  318E  2636  318E   	fcall	___bmul
  7490     0E0A  0020               	movlb	0	; select bank0
  7491     0E0B  0724               	addwf	weights2_write@add2,w
  7492     0E0C  3E77               	addlw	119
  7493     0E0D  318F  2736  318E   	fcall	_eeprom_write
  7494     0E10                     l556:
  7495     0E10  0008               	return
  7496     0E11                     __end_of_weights2_write:
  7497                           
  7498                           	psect	text29
  7499     0E36                     __ptext29:	
  7500 ;; *************** function ___bmul *****************
  7501 ;; Defined at:
  7502 ;;		line 4 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\common\Umul8.c"
  7503 ;; Parameters:    Size  Location     Type
  7504 ;;  multiplier      1    wreg     unsigned char 
  7505 ;;  multiplicand    1    0[COMMON] unsigned char 
  7506 ;; Auto vars:     Size  Location     Type
  7507 ;;  multiplier      1    3[COMMON] unsigned char 
  7508 ;;  product         1    2[COMMON] unsigned char 
  7509 ;; Return value:  Size  Location     Type
  7510 ;;                  1    wreg      unsigned char 
  7511 ;; Registers used:
  7512 ;;		wreg, status,2, status,0
  7513 ;; Tracked objects:
  7514 ;;		On entry : 0/0
  7515 ;;		On exit  : 0/0
  7516 ;;		Unchanged: 0/0
  7517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7518 ;;      Params:         1       0       0       0       0       0
  7519 ;;      Locals:         2       0       0       0       0       0
  7520 ;;      Temps:          1       0       0       0       0       0
  7521 ;;      Totals:         4       0       0       0       0       0
  7522 ;;Total ram usage:        4 bytes
  7523 ;; Hardware stack levels used: 1
  7524 ;; This function calls:
  7525 ;;		Nothing
  7526 ;; This function is called by:
  7527 ;;		_weights2_write
  7528 ;;		_weights2_read
  7529 ;; This function uses a non-reentrant model
  7530 ;;
  7531                           
  7532     0E36                     ___bmul:	
  7533                           ;psect for function ___bmul
  7534                           
  7535                           
  7536                           ;incstack = 0
  7537                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  7538                           ;___bmul@multiplier stored from wreg
  7539     0E36  00F3               	movwf	___bmul@multiplier
  7540     0E37                     l2631:
  7541     0E37  01F2               	clrf	___bmul@product
  7542     0E38                     l2633:
  7543     0E38  1C73               	btfss	___bmul@multiplier,0
  7544     0E39  2E3B               	goto	u1431
  7545     0E3A  2E3C               	goto	u1430
  7546     0E3B                     u1431:
  7547     0E3B  2E40               	goto	l2637
  7548     0E3C                     u1430:
  7549     0E3C                     l2635:
  7550     0E3C  0870               	movf	___bmul@multiplicand,w
  7551     0E3D  00F1               	movwf	??___bmul
  7552     0E3E  0871               	movf	??___bmul,w
  7553     0E3F  07F2               	addwf	___bmul@product,f
  7554     0E40                     l2637:
  7555     0E40  1003               	clrc
  7556     0E41  0DF0               	rlf	___bmul@multiplicand,f
  7557     0E42                     l2639:
  7558     0E42  1003               	clrc
  7559     0E43  0CF3               	rrf	___bmul@multiplier,f
  7560     0E44  0873               	movf	___bmul@multiplier,w
  7561     0E45  1D03               	btfss	3,2
  7562     0E46  2E48               	goto	u1441
  7563     0E47  2E49               	goto	u1440
  7564     0E48                     u1441:
  7565     0E48  2E38               	goto	l2633
  7566     0E49                     u1440:
  7567     0E49                     l2641:
  7568     0E49  0872               	movf	___bmul@product,w
  7569     0E4A                     l899:
  7570     0E4A  0008               	return
  7571     0E4B                     __end_of___bmul:
  7572                           
  7573                           	psect	text30
  7574     0DEF                     __ptext30:	
  7575 ;; *************** function _weights1_write *****************
  7576 ;; Defined at:
  7577 ;;		line 20 in file "ai.c"
  7578 ;; Parameters:    Size  Location     Type
  7579 ;;  add1            1    wreg     unsigned char 
  7580 ;;  add2            1    4[BANK0 ] unsigned char 
  7581 ;;  val             1    5[BANK0 ] char 
  7582 ;; Auto vars:     Size  Location     Type
  7583 ;;  add1            1    7[BANK0 ] unsigned char 
  7584 ;; Return value:  Size  Location     Type
  7585 ;;                  1    wreg      void 
  7586 ;; Registers used:
  7587 ;;		wreg, status,2, status,0, pclath, cstack
  7588 ;; Tracked objects:
  7589 ;;		On entry : 0/0
  7590 ;;		On exit  : 0/0
  7591 ;;		Unchanged: 0/0
  7592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7593 ;;      Params:         0       2       0       0       0       0
  7594 ;;      Locals:         0       1       0       0       0       0
  7595 ;;      Temps:          0       1       0       0       0       0
  7596 ;;      Totals:         0       4       0       0       0       0
  7597 ;;Total ram usage:        4 bytes
  7598 ;; Hardware stack levels used: 1
  7599 ;; Hardware stack levels required when called: 1
  7600 ;; This function calls:
  7601 ;;		_eeprom_write
  7602 ;; This function is called by:
  7603 ;;		_ai_initiate
  7604 ;;		_ai_propagate
  7605 ;; This function uses a non-reentrant model
  7606 ;;
  7607                           
  7608     0DEF                     _weights1_write:	
  7609                           ;psect for function _weights1_write
  7610                           
  7611                           
  7612                           ;incstack = 0
  7613                           ; Regs used in _weights1_write: [wreg+status,2+status,0+pclath+cstack]
  7614                           ;weights1_write@add1 stored from wreg
  7615     0DEF  0020               	movlb	0	; select bank0
  7616     0DF0  00A7               	movwf	weights1_write@add1
  7617     0DF1                     l2711:
  7618                           
  7619                           ;ai.c: 21:     eeprom_write(0 + 16*add1 + add2, (unsigned char)val);
  7620     0DF1  0825               	movf	weights1_write@val,w
  7621     0DF2  00F4               	movwf	eeprom_write@value
  7622     0DF3  0827               	movf	weights1_write@add1,w
  7623     0DF4  00A6               	movwf	??_weights1_write
  7624     0DF5  3003               	movlw	3
  7625     0DF6                     u1485:
  7626     0DF6  35A6               	lslf	??_weights1_write,f
  7627     0DF7  3EFF               	addlw	-1
  7628     0DF8  1D03               	skipz
  7629     0DF9  2DF6               	goto	u1485
  7630     0DFA  3526               	lslf	??_weights1_write,w
  7631     0DFB  0724               	addwf	weights1_write@add2,w
  7632     0DFC  318F  2736  318D   	fcall	_eeprom_write
  7633     0DFF                     l550:
  7634     0DFF  0008               	return
  7635     0E00                     __end_of_weights1_write:
  7636                           
  7637                           	psect	text31
  7638     000B                     __ptext31:	
  7639 ;; *************** function _rand *****************
  7640 ;; Defined at:
  7641 ;;		line 11 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\common\rand.c"
  7642 ;; Parameters:    Size  Location     Type
  7643 ;;		None
  7644 ;; Auto vars:     Size  Location     Type
  7645 ;;		None
  7646 ;; Return value:  Size  Location     Type
  7647 ;;                  2   12[COMMON] int 
  7648 ;; Registers used:
  7649 ;;		wreg, status,2, status,0, pclath, cstack
  7650 ;; Tracked objects:
  7651 ;;		On entry : 0/0
  7652 ;;		On exit  : 0/0
  7653 ;;		Unchanged: 0/0
  7654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7655 ;;      Params:         2       0       0       0       0       0
  7656 ;;      Locals:         0       0       0       0       0       0
  7657 ;;      Temps:          0       4       0       0       0       0
  7658 ;;      Totals:         2       4       0       0       0       0
  7659 ;;Total ram usage:        6 bytes
  7660 ;; Hardware stack levels used: 1
  7661 ;; Hardware stack levels required when called: 1
  7662 ;; This function calls:
  7663 ;;		___lmul
  7664 ;; This function is called by:
  7665 ;;		_snake_initiate
  7666 ;;		_snake_move
  7667 ;;		_ai_initiate
  7668 ;; This function uses a non-reentrant model
  7669 ;;
  7670                           
  7671     000B                     _rand:	
  7672                           ;psect for function _rand
  7673                           
  7674     000B                     l2601:	
  7675                           ;incstack = 0
  7676                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
  7677                           
  7678     000B  0020               	movlb	0	; select bank0
  7679     000C  086E               	movf	_seed+3,w
  7680     000D  00F3               	movwf	___lmul@multiplier+3
  7681     000E  086D               	movf	_seed+2,w
  7682     000F  00F2               	movwf	___lmul@multiplier+2
  7683     0010  086C               	movf	_seed+1,w
  7684     0011  00F1               	movwf	___lmul@multiplier+1
  7685     0012  086B               	movf	_seed,w
  7686     0013  00F0               	movwf	___lmul@multiplier
  7687     0014  304C               	movlw	76
  7688     0015  00F7               	movwf	___lmul@multiplicand+3
  7689     0016  3095               	movlw	149
  7690     0017  00F6               	movwf	___lmul@multiplicand+2
  7691     0018  307F               	movlw	127
  7692     0019  00F5               	movwf	___lmul@multiplicand+1
  7693     001A  302D               	movlw	45
  7694     001B  00F4               	movwf	___lmul@multiplicand
  7695     001C  318F  278F  3180   	fcall	___lmul
  7696     001F  3001               	movlw	1
  7697     0020  0770               	addwf	?___lmul,w
  7698     0021  0020               	movlb	0	; select bank0
  7699     0022  00EB               	movwf	_seed
  7700     0023  3000               	movlw	0
  7701     0024  3D71               	addwfc	?___lmul+1,w
  7702     0025  00EC               	movwf	_seed+1
  7703     0026  3000               	movlw	0
  7704     0027  3D72               	addwfc	?___lmul+2,w
  7705     0028  00ED               	movwf	_seed+2
  7706     0029  3000               	movlw	0
  7707     002A  3D73               	addwfc	?___lmul+3,w
  7708     002B  00EE               	movwf	_seed+3
  7709     002C                     l2603:
  7710     002C  086B               	movf	_seed,w
  7711     002D  00A0               	movwf	??_rand
  7712     002E  086C               	movf	_seed+1,w
  7713     002F  00A1               	movwf	??_rand+1
  7714     0030  086D               	movf	_seed+2,w
  7715     0031  00A2               	movwf	??_rand+2
  7716     0032  086E               	movf	_seed+3,w
  7717     0033  00A3               	movwf	??_rand+3
  7718     0034  3011               	movlw	17
  7719     0035                     u1385:
  7720     0035  36A3               	lsrf	??_rand+3,f
  7721     0036  0CA2               	rrf	??_rand+2,f
  7722     0037  0CA1               	rrf	??_rand+1,f
  7723     0038  0CA0               	rrf	??_rand,f
  7724     0039                     u1380:
  7725     0039  0B89               	decfsz	9,f
  7726     003A  2835               	goto	u1385
  7727     003B  0821               	movf	??_rand+1,w
  7728     003C  00FD               	movwf	?_rand+1
  7729     003D  0820               	movf	??_rand,w
  7730     003E  00FC               	movwf	?_rand
  7731     003F                     l1337:
  7732     003F  0008               	return
  7733     0040                     __end_of_rand:
  7734                           
  7735                           	psect	text32
  7736     0F8F                     __ptext32:	
  7737 ;; *************** function ___lmul *****************
  7738 ;; Defined at:
  7739 ;;		line 15 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\common\Umul32.c"
  7740 ;; Parameters:    Size  Location     Type
  7741 ;;  multiplier      4    0[COMMON] unsigned long 
  7742 ;;  multiplicand    4    4[COMMON] unsigned long 
  7743 ;; Auto vars:     Size  Location     Type
  7744 ;;  product         4    8[COMMON] unsigned long 
  7745 ;; Return value:  Size  Location     Type
  7746 ;;                  4    0[COMMON] unsigned long 
  7747 ;; Registers used:
  7748 ;;		wreg, status,2, status,0
  7749 ;; Tracked objects:
  7750 ;;		On entry : 0/0
  7751 ;;		On exit  : 0/0
  7752 ;;		Unchanged: 0/0
  7753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7754 ;;      Params:         8       0       0       0       0       0
  7755 ;;      Locals:         4       0       0       0       0       0
  7756 ;;      Temps:          0       0       0       0       0       0
  7757 ;;      Totals:        12       0       0       0       0       0
  7758 ;;Total ram usage:       12 bytes
  7759 ;; Hardware stack levels used: 1
  7760 ;; This function calls:
  7761 ;;		Nothing
  7762 ;; This function is called by:
  7763 ;;		_rand
  7764 ;; This function uses a non-reentrant model
  7765 ;;
  7766                           
  7767     0F8F                     ___lmul:	
  7768                           ;psect for function ___lmul
  7769                           
  7770     0F8F                     l2579:	
  7771                           ;incstack = 0
  7772                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  7773                           
  7774     0F8F  3000               	movlw	0
  7775     0F90  00FB               	movwf	___lmul@product+3
  7776     0F91  3000               	movlw	0
  7777     0F92  00FA               	movwf	___lmul@product+2
  7778     0F93  3000               	movlw	0
  7779     0F94  00F9               	movwf	___lmul@product+1
  7780     0F95  3000               	movlw	0
  7781     0F96  00F8               	movwf	___lmul@product
  7782     0F97                     l2581:
  7783     0F97  1C70               	btfss	___lmul@multiplier,0
  7784     0F98  2F9A               	goto	u1341
  7785     0F99  2F9B               	goto	u1340
  7786     0F9A                     u1341:
  7787     0F9A  2FA3               	goto	l2585
  7788     0F9B                     u1340:
  7789     0F9B                     l2583:
  7790     0F9B  0874               	movf	___lmul@multiplicand,w
  7791     0F9C  07F8               	addwf	___lmul@product,f
  7792     0F9D  0875               	movf	___lmul@multiplicand+1,w
  7793     0F9E  3DF9               	addwfc	___lmul@product+1,f
  7794     0F9F  0876               	movf	___lmul@multiplicand+2,w
  7795     0FA0  3DFA               	addwfc	___lmul@product+2,f
  7796     0FA1  0877               	movf	___lmul@multiplicand+3,w
  7797     0FA2  3DFB               	addwfc	___lmul@product+3,f
  7798     0FA3                     l2585:
  7799     0FA3  3001               	movlw	1
  7800     0FA4                     u1355:
  7801     0FA4  35F4               	lslf	___lmul@multiplicand,f
  7802     0FA5  0DF5               	rlf	___lmul@multiplicand+1,f
  7803     0FA6  0DF6               	rlf	___lmul@multiplicand+2,f
  7804     0FA7  0DF7               	rlf	___lmul@multiplicand+3,f
  7805     0FA8  0B89               	decfsz	9,f
  7806     0FA9  2FA4               	goto	u1355
  7807     0FAA                     l2587:
  7808     0FAA  3001               	movlw	1
  7809     0FAB                     u1365:
  7810     0FAB  36F3               	lsrf	___lmul@multiplier+3,f
  7811     0FAC  0CF2               	rrf	___lmul@multiplier+2,f
  7812     0FAD  0CF1               	rrf	___lmul@multiplier+1,f
  7813     0FAE  0CF0               	rrf	___lmul@multiplier,f
  7814     0FAF  0B89               	decfsz	9,f
  7815     0FB0  2FAB               	goto	u1365
  7816     0FB1  0873               	movf	___lmul@multiplier+3,w
  7817     0FB2  0472               	iorwf	___lmul@multiplier+2,w
  7818     0FB3  0471               	iorwf	___lmul@multiplier+1,w
  7819     0FB4  0470               	iorwf	___lmul@multiplier,w
  7820     0FB5  1D03               	skipz
  7821     0FB6  2FB8               	goto	u1371
  7822     0FB7  2FB9               	goto	u1370
  7823     0FB8                     u1371:
  7824     0FB8  2F97               	goto	l2581
  7825     0FB9                     u1370:
  7826     0FB9                     l2589:
  7827     0FB9  087B               	movf	___lmul@product+3,w
  7828     0FBA  00F3               	movwf	?___lmul+3
  7829     0FBB  087A               	movf	___lmul@product+2,w
  7830     0FBC  00F2               	movwf	?___lmul+2
  7831     0FBD  0879               	movf	___lmul@product+1,w
  7832     0FBE  00F1               	movwf	?___lmul+1
  7833     0FBF  0878               	movf	___lmul@product,w
  7834     0FC0  00F0               	movwf	?___lmul
  7835     0FC1                     l887:
  7836     0FC1  0008               	return
  7837     0FC2                     __end_of___lmul:
  7838                           
  7839                           	psect	text33
  7840     0D75                     __ptext33:	
  7841 ;; *************** function _biases2_write *****************
  7842 ;; Defined at:
  7843 ;;		line 29 in file "ai.c"
  7844 ;; Parameters:    Size  Location     Type
  7845 ;;  add             1    wreg     unsigned char 
  7846 ;;  val             1    4[BANK0 ] char 
  7847 ;; Auto vars:     Size  Location     Type
  7848 ;;  add             1    5[BANK0 ] unsigned char 
  7849 ;; Return value:  Size  Location     Type
  7850 ;;                  1    wreg      void 
  7851 ;; Registers used:
  7852 ;;		wreg, status,2, status,0, pclath, cstack
  7853 ;; Tracked objects:
  7854 ;;		On entry : 0/0
  7855 ;;		On exit  : 0/0
  7856 ;;		Unchanged: 0/0
  7857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7858 ;;      Params:         0       1       0       0       0       0
  7859 ;;      Locals:         0       1       0       0       0       0
  7860 ;;      Temps:          0       0       0       0       0       0
  7861 ;;      Totals:         0       2       0       0       0       0
  7862 ;;Total ram usage:        2 bytes
  7863 ;; Hardware stack levels used: 1
  7864 ;; Hardware stack levels required when called: 1
  7865 ;; This function calls:
  7866 ;;		_eeprom_write
  7867 ;; This function is called by:
  7868 ;;		_ai_initiate
  7869 ;;		_ai_propagate
  7870 ;; This function uses a non-reentrant model
  7871 ;;
  7872                           
  7873     0D75                     _biases2_write:	
  7874                           ;psect for function _biases2_write
  7875                           
  7876                           
  7877                           ;incstack = 0
  7878                           ; Regs used in _biases2_write: [wreg+status,2+status,0+pclath+cstack]
  7879                           ;biases2_write@add stored from wreg
  7880     0D75  0020               	movlb	0	; select bank0
  7881     0D76  00A5               	movwf	biases2_write@add
  7882     0D77                     l2717:
  7883                           
  7884                           ;ai.c: 30:     eeprom_write(0 +16*7 +7 +4*7 + add, (unsigned char)val);
  7885     0D77  0824               	movf	biases2_write@val,w
  7886     0D78  00F4               	movwf	eeprom_write@value
  7887     0D79  0825               	movf	biases2_write@add,w
  7888     0D7A  3E93               	addlw	147
  7889     0D7B  318F  2736  318D   	fcall	_eeprom_write
  7890     0D7E                     l559:
  7891     0D7E  0008               	return
  7892     0D7F                     __end_of_biases2_write:
  7893                           
  7894                           	psect	text34
  7895     0D6B                     __ptext34:	
  7896 ;; *************** function _biases1_write *****************
  7897 ;; Defined at:
  7898 ;;		line 23 in file "ai.c"
  7899 ;; Parameters:    Size  Location     Type
  7900 ;;  add             1    wreg     unsigned char 
  7901 ;;  val             1    4[BANK0 ] char 
  7902 ;; Auto vars:     Size  Location     Type
  7903 ;;  add             1    5[BANK0 ] unsigned char 
  7904 ;; Return value:  Size  Location     Type
  7905 ;;                  1    wreg      void 
  7906 ;; Registers used:
  7907 ;;		wreg, status,2, status,0, pclath, cstack
  7908 ;; Tracked objects:
  7909 ;;		On entry : 0/0
  7910 ;;		On exit  : 0/0
  7911 ;;		Unchanged: 0/0
  7912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7913 ;;      Params:         0       1       0       0       0       0
  7914 ;;      Locals:         0       1       0       0       0       0
  7915 ;;      Temps:          0       0       0       0       0       0
  7916 ;;      Totals:         0       2       0       0       0       0
  7917 ;;Total ram usage:        2 bytes
  7918 ;; Hardware stack levels used: 1
  7919 ;; Hardware stack levels required when called: 1
  7920 ;; This function calls:
  7921 ;;		_eeprom_write
  7922 ;; This function is called by:
  7923 ;;		_ai_initiate
  7924 ;;		_ai_propagate
  7925 ;; This function uses a non-reentrant model
  7926 ;;
  7927                           
  7928     0D6B                     _biases1_write:	
  7929                           ;psect for function _biases1_write
  7930                           
  7931                           
  7932                           ;incstack = 0
  7933                           ; Regs used in _biases1_write: [wreg+status,2+status,0+pclath+cstack]
  7934                           ;biases1_write@add stored from wreg
  7935     0D6B  0020               	movlb	0	; select bank0
  7936     0D6C  00A5               	movwf	biases1_write@add
  7937     0D6D                     l2713:
  7938                           
  7939                           ;ai.c: 24:     eeprom_write(0 +16*7 + add, (unsigned char)val);
  7940     0D6D  0824               	movf	biases1_write@val,w
  7941     0D6E  00F4               	movwf	eeprom_write@value
  7942     0D6F  0825               	movf	biases1_write@add,w
  7943     0D70  3E70               	addlw	112
  7944     0D71  318F  2736  318D   	fcall	_eeprom_write
  7945     0D74                     l553:
  7946     0D74  0008               	return
  7947     0D75                     __end_of_biases1_write:
  7948                           
  7949                           	psect	text35
  7950     0F36                     __ptext35:	
  7951 ;; *************** function _eeprom_write *****************
  7952 ;; Defined at:
  7953 ;;		line 6 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\pic\__eewrite.c"
  7954 ;; Parameters:    Size  Location     Type
  7955 ;;  addr            1    wreg     unsigned char 
  7956 ;;  value           1    4[COMMON] unsigned char 
  7957 ;; Auto vars:     Size  Location     Type
  7958 ;;  addr            1    7[COMMON] unsigned char 
  7959 ;; Return value:  Size  Location     Type
  7960 ;;                  1    wreg      void 
  7961 ;; Registers used:
  7962 ;;		wreg, status,2, status,0
  7963 ;; Tracked objects:
  7964 ;;		On entry : 0/0
  7965 ;;		On exit  : 0/0
  7966 ;;		Unchanged: 0/0
  7967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7968 ;;      Params:         1       0       0       0       0       0
  7969 ;;      Locals:         1       0       0       0       0       0
  7970 ;;      Temps:          2       0       0       0       0       0
  7971 ;;      Totals:         4       0       0       0       0       0
  7972 ;;Total ram usage:        4 bytes
  7973 ;; Hardware stack levels used: 1
  7974 ;; This function calls:
  7975 ;;		Nothing
  7976 ;; This function is called by:
  7977 ;;		_weights1_write
  7978 ;;		_biases1_write
  7979 ;;		_weights2_write
  7980 ;;		_biases2_write
  7981 ;;		_ai_is_ai_trained_write
  7982 ;;		_ai_is_ai_initiated_write
  7983 ;;		_ai_maxScore_write
  7984 ;;		_ai_scores_write
  7985 ;; This function uses a non-reentrant model
  7986 ;;
  7987                           
  7988     0F36                     _eeprom_write:	
  7989                           ;psect for function _eeprom_write
  7990                           
  7991                           
  7992                           ;incstack = 0
  7993                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  7994                           ;eeprom_write@addr stored from wreg
  7995     0F36  00F7               	movwf	eeprom_write@addr
  7996     0F37                     l862:	
  7997                           ;D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\pic\__eewrite.c: 6: eeprom_write(uns
      +                          igned char addr, unsigned char value);D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99
      +                          \pic\__eewrite.c: 7: {;D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\pic\__eewrite.
      +                          c: 8:  do{ while (EECON1bits.WR) { continue; } EEADR = (addr); EEDATA = (value); EECON1 
      +                          &= 0x3F; STATUSbits.CARRY = 0; if (INTCONbits.GIE) { STATUSbits.CARRY = 1; } INTCONbits.
      +                          GIE = 0; EECON1bits.WREN = 1; EECON2 = 0x55; EECON2 = 0xAA; EECON1bits.WR = 1; EECON1bit
      +                          s.WREN = 0; if (STATUSbits.CARRY) { INTCONbits.GIE = 1; } } while (0);
  7998                           
  7999     0F37                     l863:
  8000     0F37  0023               	movlb	3	; select bank3
  8001     0F38  1895               	btfsc	21,1	;volsfr
  8002     0F39  2F3B               	goto	u1391
  8003     0F3A  2F3C               	goto	u1390
  8004     0F3B                     u1391:
  8005     0F3B  2F37               	goto	l863
  8006     0F3C                     u1390:
  8007     0F3C                     l2607:
  8008     0F3C  0877               	movf	eeprom_write@addr,w
  8009     0F3D  00F5               	movwf	??_eeprom_write
  8010     0F3E  01F6               	clrf	??_eeprom_write+1
  8011     0F3F  0875               	movf	??_eeprom_write,w
  8012     0F40  0091               	movwf	17	;volatile
  8013     0F41  0876               	movf	??_eeprom_write+1,w
  8014     0F42  0092               	movwf	18	;volatile
  8015     0F43  0874               	movf	eeprom_write@value,w
  8016     0F44  0093               	movwf	19	;volatile
  8017     0F45                     l2609:
  8018     0F45  303F               	movlw	63
  8019     0F46  00F5               	movwf	??_eeprom_write
  8020     0F47  0875               	movf	??_eeprom_write,w
  8021     0F48  0595               	andwf	21,f	;volsfr
  8022     0F49                     l2611:
  8023     0F49  0020               	movlb	0	; select bank0
  8024     0F4A  1003               	bcf	3,0	;volatile
  8025     0F4B                     l2613:
  8026     0F4B  1F8B               	btfss	11,7	;volatile
  8027     0F4C  2F4E               	goto	u1401
  8028     0F4D  2F4F               	goto	u1400
  8029     0F4E                     u1401:
  8030     0F4E  2F50               	goto	l866
  8031     0F4F                     u1400:
  8032     0F4F                     l2615:
  8033     0F4F  1403               	bsf	3,0	;volatile
  8034     0F50                     l866:
  8035     0F50  138B               	bcf	11,7	;volatile
  8036     0F51  0023               	movlb	3	; select bank3
  8037     0F52  1515               	bsf	21,2	;volsfr
  8038     0F53                     l2617:
  8039     0F53  3055               	movlw	85
  8040     0F54  0096               	movwf	22	;volsfr
  8041     0F55  30AA               	movlw	170
  8042     0F56  0096               	movwf	22	;volsfr
  8043     0F57                     l2619:
  8044     0F57  1495               	bsf	21,1	;volsfr
  8045     0F58                     l2621:
  8046     0F58  1115               	bcf	21,2	;volsfr
  8047     0F59                     l2623:
  8048     0F59  0020               	movlb	0	; select bank0
  8049     0F5A  1C03               	btfss	3,0	;volatile
  8050     0F5B  2F5D               	goto	u1411
  8051     0F5C  2F5E               	goto	u1410
  8052     0F5D                     u1411:
  8053     0F5D  2F5F               	goto	l869
  8054     0F5E                     u1410:
  8055     0F5E                     l2625:
  8056     0F5E  178B               	bsf	11,7	;volatile
  8057     0F5F                     l869:
  8058     0F5F  0008               	return
  8059     0F60                     __end_of_eeprom_write:
  8060                           
  8061                           	psect	text36
  8062     0D2D                     __ptext36:	
  8063 ;; *************** function _ai_getInputField *****************
  8064 ;; Defined at:
  8065 ;;		line 102 in file "ai.c"
  8066 ;; Parameters:    Size  Location     Type
  8067 ;;		None
  8068 ;; Auto vars:     Size  Location     Type
  8069 ;;		None
  8070 ;; Return value:  Size  Location     Type
  8071 ;;                  1    wreg      PTR unsigned char 
  8072 ;; Registers used:
  8073 ;;		wreg
  8074 ;; Tracked objects:
  8075 ;;		On entry : 0/0
  8076 ;;		On exit  : 0/0
  8077 ;;		Unchanged: 0/0
  8078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8079 ;;      Params:         0       0       0       0       0       0
  8080 ;;      Locals:         0       0       0       0       0       0
  8081 ;;      Temps:          0       0       0       0       0       0
  8082 ;;      Totals:         0       0       0       0       0       0
  8083 ;;Total ram usage:        0 bytes
  8084 ;; Hardware stack levels used: 1
  8085 ;; This function calls:
  8086 ;;		Nothing
  8087 ;; This function is called by:
  8088 ;;		_main
  8089 ;; This function uses a non-reentrant model
  8090 ;;
  8091                           
  8092     0D2D                     _ai_getInputField:	
  8093                           ;psect for function _ai_getInputField
  8094                           
  8095     0D2D                     l2913:	
  8096                           ;incstack = 0
  8097                           ; Regs used in _ai_getInputField: [wreg]
  8098                           
  8099                           
  8100                           ;ai.c: 103:     return Y0;
  8101     0D2D  30E0               	movlw	(low (_Y0| 0))& (0+255)
  8102     0D2E                     l613:
  8103     0D2E  0008               	return
  8104     0D2F                     __end_of_ai_getInputField:
  8105                           
  8106                           	psect	text37
  8107     0040                     __ptext37:	
  8108 ;; *************** function ___awmod *****************
  8109 ;; Defined at:
  8110 ;;		line 5 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\common\awmod.c"
  8111 ;; Parameters:    Size  Location     Type
  8112 ;;  divisor         2    0[COMMON] int 
  8113 ;;  dividend        2    2[COMMON] int 
  8114 ;; Auto vars:     Size  Location     Type
  8115 ;;  sign            1    6[COMMON] unsigned char 
  8116 ;;  counter         1    5[COMMON] unsigned char 
  8117 ;; Return value:  Size  Location     Type
  8118 ;;                  2    0[COMMON] int 
  8119 ;; Registers used:
  8120 ;;		wreg, status,2, status,0
  8121 ;; Tracked objects:
  8122 ;;		On entry : 0/0
  8123 ;;		On exit  : 0/0
  8124 ;;		Unchanged: 0/0
  8125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8126 ;;      Params:         4       0       0       0       0       0
  8127 ;;      Locals:         2       0       0       0       0       0
  8128 ;;      Temps:          1       0       0       0       0       0
  8129 ;;      Totals:         7       0       0       0       0       0
  8130 ;;Total ram usage:        7 bytes
  8131 ;; Hardware stack levels used: 1
  8132 ;; This function calls:
  8133 ;;		Nothing
  8134 ;; This function is called by:
  8135 ;;		_main
  8136 ;; This function uses a non-reentrant model
  8137 ;;
  8138                           
  8139     0040                     ___awmod:	
  8140                           ;psect for function ___awmod
  8141                           
  8142     0040                     l3359:	
  8143                           ;incstack = 0
  8144                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  8145                           
  8146     0040  01F6               	clrf	___awmod@sign
  8147     0041                     l3361:
  8148     0041  1FF3               	btfss	___awmod@dividend+1,7
  8149     0042  2844               	goto	u2271
  8150     0043  2845               	goto	u2270
  8151     0044                     u2271:
  8152     0044  284C               	goto	l3367
  8153     0045                     u2270:
  8154     0045                     l3363:
  8155     0045  09F2               	comf	___awmod@dividend,f
  8156     0046  09F3               	comf	___awmod@dividend+1,f
  8157     0047  0AF2               	incf	___awmod@dividend,f
  8158     0048  1903               	skipnz
  8159     0049  0AF3               	incf	___awmod@dividend+1,f
  8160     004A                     l3365:
  8161     004A  01F6               	clrf	___awmod@sign
  8162     004B  0AF6               	incf	___awmod@sign,f
  8163     004C                     l3367:
  8164     004C  1FF1               	btfss	___awmod@divisor+1,7
  8165     004D  284F               	goto	u2281
  8166     004E  2850               	goto	u2280
  8167     004F                     u2281:
  8168     004F  2855               	goto	l3371
  8169     0050                     u2280:
  8170     0050                     l3369:
  8171     0050  09F0               	comf	___awmod@divisor,f
  8172     0051  09F1               	comf	___awmod@divisor+1,f
  8173     0052  0AF0               	incf	___awmod@divisor,f
  8174     0053  1903               	skipnz
  8175     0054  0AF1               	incf	___awmod@divisor+1,f
  8176     0055                     l3371:
  8177     0055  0870               	movf	___awmod@divisor,w
  8178     0056  0471               	iorwf	___awmod@divisor+1,w
  8179     0057  1903               	btfsc	3,2
  8180     0058  285A               	goto	u2291
  8181     0059  285B               	goto	u2290
  8182     005A                     u2291:
  8183     005A  2884               	goto	l3389
  8184     005B                     u2290:
  8185     005B                     l3373:
  8186     005B  01F5               	clrf	___awmod@counter
  8187     005C  0AF5               	incf	___awmod@counter,f
  8188     005D  2867               	goto	l3379
  8189     005E                     l3375:
  8190     005E  3001               	movlw	1
  8191     005F                     u2305:
  8192     005F  35F0               	lslf	___awmod@divisor,f
  8193     0060  0DF1               	rlf	___awmod@divisor+1,f
  8194     0061  0B89               	decfsz	9,f
  8195     0062  285F               	goto	u2305
  8196     0063                     l3377:
  8197     0063  3001               	movlw	1
  8198     0064  00F4               	movwf	??___awmod
  8199     0065  0874               	movf	??___awmod,w
  8200     0066  07F5               	addwf	___awmod@counter,f
  8201     0067                     l3379:
  8202     0067  1FF1               	btfss	___awmod@divisor+1,7
  8203     0068  286A               	goto	u2311
  8204     0069  286B               	goto	u2310
  8205     006A                     u2311:
  8206     006A  285E               	goto	l3375
  8207     006B                     u2310:
  8208     006B                     l3381:
  8209     006B  0871               	movf	___awmod@divisor+1,w
  8210     006C  0273               	subwf	___awmod@dividend+1,w
  8211     006D  1D03               	skipz
  8212     006E  2871               	goto	u2325
  8213     006F  0870               	movf	___awmod@divisor,w
  8214     0070  0272               	subwf	___awmod@dividend,w
  8215     0071                     u2325:
  8216     0071  1C03               	skipc
  8217     0072  2874               	goto	u2321
  8218     0073  2875               	goto	u2320
  8219     0074                     u2321:
  8220     0074  2879               	goto	l3385
  8221     0075                     u2320:
  8222     0075                     l3383:
  8223     0075  0870               	movf	___awmod@divisor,w
  8224     0076  02F2               	subwf	___awmod@dividend,f
  8225     0077  0871               	movf	___awmod@divisor+1,w
  8226     0078  3BF3               	subwfb	___awmod@dividend+1,f
  8227     0079                     l3385:
  8228     0079  3001               	movlw	1
  8229     007A                     u2335:
  8230     007A  36F1               	lsrf	___awmod@divisor+1,f
  8231     007B  0CF0               	rrf	___awmod@divisor,f
  8232     007C  0B89               	decfsz	9,f
  8233     007D  287A               	goto	u2335
  8234     007E                     l3387:
  8235     007E  3001               	movlw	1
  8236     007F  02F5               	subwf	___awmod@counter,f
  8237     0080  1D03               	btfss	3,2
  8238     0081  2883               	goto	u2341
  8239     0082  2884               	goto	u2340
  8240     0083                     u2341:
  8241     0083  286B               	goto	l3381
  8242     0084                     u2340:
  8243     0084                     l3389:
  8244     0084  0876               	movf	___awmod@sign,w
  8245     0085  1903               	btfsc	3,2
  8246     0086  2888               	goto	u2351
  8247     0087  2889               	goto	u2350
  8248     0088                     u2351:
  8249     0088  288E               	goto	l3393
  8250     0089                     u2350:
  8251     0089                     l3391:
  8252     0089  09F2               	comf	___awmod@dividend,f
  8253     008A  09F3               	comf	___awmod@dividend+1,f
  8254     008B  0AF2               	incf	___awmod@dividend,f
  8255     008C  1903               	skipnz
  8256     008D  0AF3               	incf	___awmod@dividend+1,f
  8257     008E                     l3393:
  8258     008E  0873               	movf	___awmod@dividend+1,w
  8259     008F  00F1               	movwf	?___awmod+1
  8260     0090  0872               	movf	___awmod@dividend,w
  8261     0091  00F0               	movwf	?___awmod
  8262     0092                     l1039:
  8263     0092  0008               	return
  8264     0093                     __end_of___awmod:
  8265                           
  8266                           	psect	text38
  8267     0DBF                     __ptext38:	
  8268 ;; *************** function _SYSTEM_Initialize *****************
  8269 ;; Defined at:
  8270 ;;		line 50 in file "mcc_generated_files/mcc.c"
  8271 ;; Parameters:    Size  Location     Type
  8272 ;;		None
  8273 ;; Auto vars:     Size  Location     Type
  8274 ;;		None
  8275 ;; Return value:  Size  Location     Type
  8276 ;;                  1    wreg      void 
  8277 ;; Registers used:
  8278 ;;		wreg, status,2, status,0, pclath, cstack
  8279 ;; Tracked objects:
  8280 ;;		On entry : 0/0
  8281 ;;		On exit  : 0/0
  8282 ;;		Unchanged: 0/0
  8283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8284 ;;      Params:         0       0       0       0       0       0
  8285 ;;      Locals:         0       0       0       0       0       0
  8286 ;;      Temps:          0       0       0       0       0       0
  8287 ;;      Totals:         0       0       0       0       0       0
  8288 ;;Total ram usage:        0 bytes
  8289 ;; Hardware stack levels used: 1
  8290 ;; Hardware stack levels required when called: 2
  8291 ;; This function calls:
  8292 ;;		_EUSART_Initialize
  8293 ;;		_OSCILLATOR_Initialize
  8294 ;;		_PIN_MANAGER_Initialize
  8295 ;;		_SPI1_Initialize
  8296 ;;		_WDT_Initialize
  8297 ;; This function is called by:
  8298 ;;		_main
  8299 ;; This function uses a non-reentrant model
  8300 ;;
  8301                           
  8302     0DBF                     _SYSTEM_Initialize:	
  8303                           ;psect for function _SYSTEM_Initialize
  8304                           
  8305     0DBF                     l2805:	
  8306                           ;incstack = 0
  8307                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8308                           
  8309                           
  8310                           ;mcc_generated_files/mcc.c: 53:     SPI1_Initialize();
  8311     0DBF  318D  257F  318D   	fcall	_SPI1_Initialize
  8312                           
  8313                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  8314     0DC2  318E  2660  318D   	fcall	_PIN_MANAGER_Initialize
  8315                           
  8316                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  8317     0DC5  318D  2555  318D   	fcall	_OSCILLATOR_Initialize
  8318                           
  8319                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  8320     0DC8  318D  2534  318D   	fcall	_WDT_Initialize
  8321                           
  8322                           ;mcc_generated_files/mcc.c: 57:     EUSART_Initialize();
  8323     0DCB  318E  26C9  318D   	fcall	_EUSART_Initialize
  8324     0DCE                     l248:
  8325     0DCE  0008               	return
  8326     0DCF                     __end_of_SYSTEM_Initialize:
  8327                           
  8328                           	psect	text39
  8329     0D34                     __ptext39:	
  8330 ;; *************** function _WDT_Initialize *****************
  8331 ;; Defined at:
  8332 ;;		line 70 in file "mcc_generated_files/mcc.c"
  8333 ;; Parameters:    Size  Location     Type
  8334 ;;		None
  8335 ;; Auto vars:     Size  Location     Type
  8336 ;;		None
  8337 ;; Return value:  Size  Location     Type
  8338 ;;                  1    wreg      void 
  8339 ;; Registers used:
  8340 ;;		wreg
  8341 ;; Tracked objects:
  8342 ;;		On entry : 0/0
  8343 ;;		On exit  : 0/0
  8344 ;;		Unchanged: 0/0
  8345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8346 ;;      Params:         0       0       0       0       0       0
  8347 ;;      Locals:         0       0       0       0       0       0
  8348 ;;      Temps:          0       0       0       0       0       0
  8349 ;;      Totals:         0       0       0       0       0       0
  8350 ;;Total ram usage:        0 bytes
  8351 ;; Hardware stack levels used: 1
  8352 ;; This function calls:
  8353 ;;		Nothing
  8354 ;; This function is called by:
  8355 ;;		_SYSTEM_Initialize
  8356 ;; This function uses a non-reentrant model
  8357 ;;
  8358                           
  8359     0D34                     _WDT_Initialize:	
  8360                           ;psect for function _WDT_Initialize
  8361                           
  8362     0D34                     l2685:	
  8363                           ;incstack = 0
  8364                           ; Regs used in _WDT_Initialize: [wreg]
  8365                           
  8366                           
  8367                           ;mcc_generated_files/mcc.c: 73:     WDTCON = 0x16;
  8368     0D34  3016               	movlw	22
  8369     0D35  0021               	movlb	1	; select bank1
  8370     0D36  0097               	movwf	23	;volatile
  8371     0D37                     l254:
  8372     0D37  0008               	return
  8373     0D38                     __end_of_WDT_Initialize:
  8374                           
  8375                           	psect	text40
  8376     0D7F                     __ptext40:	
  8377 ;; *************** function _SPI1_Initialize *****************
  8378 ;; Defined at:
  8379 ;;		line 62 in file "mcc_generated_files/spi1.c"
  8380 ;; Parameters:    Size  Location     Type
  8381 ;;		None
  8382 ;; Auto vars:     Size  Location     Type
  8383 ;;		None
  8384 ;; Return value:  Size  Location     Type
  8385 ;;                  1    wreg      void 
  8386 ;; Registers used:
  8387 ;;		wreg
  8388 ;; Tracked objects:
  8389 ;;		On entry : 0/0
  8390 ;;		On exit  : 0/0
  8391 ;;		Unchanged: 0/0
  8392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8393 ;;      Params:         0       0       0       0       0       0
  8394 ;;      Locals:         0       0       0       0       0       0
  8395 ;;      Temps:          0       0       0       0       0       0
  8396 ;;      Totals:         0       0       0       0       0       0
  8397 ;;Total ram usage:        0 bytes
  8398 ;; Hardware stack levels used: 1
  8399 ;; This function calls:
  8400 ;;		Nothing
  8401 ;; This function is called by:
  8402 ;;		_SYSTEM_Initialize
  8403 ;; This function uses a non-reentrant model
  8404 ;;
  8405                           
  8406     0D7F                     _SPI1_Initialize:	
  8407                           ;psect for function _SPI1_Initialize
  8408                           
  8409     0D7F                     l2673:	
  8410                           ;incstack = 0
  8411                           ; Regs used in _SPI1_Initialize: [wreg]
  8412                           
  8413                           
  8414                           ;mcc_generated_files/spi1.c: 65:     SSP1STAT = 0x40;
  8415     0D7F  3040               	movlw	64
  8416     0D80  0024               	movlb	4	; select bank4
  8417     0D81  0094               	movwf	20	;volatile
  8418                           
  8419                           ;mcc_generated_files/spi1.c: 66:     SSP1CON1 = 0x02;
  8420     0D82  3002               	movlw	2
  8421     0D83  0095               	movwf	21	;volatile
  8422                           
  8423                           ;mcc_generated_files/spi1.c: 67:     SSP1ADD = 0x01;
  8424     0D84  3001               	movlw	1
  8425     0D85  0092               	movwf	18	;volatile
  8426     0D86                     l2675:
  8427                           
  8428                           ;mcc_generated_files/spi1.c: 68:     TRISBbits.TRISB4 = 0;
  8429     0D86  0021               	movlb	1	; select bank1
  8430     0D87  120D               	bcf	13,4	;volatile
  8431     0D88                     l2677:
  8432                           
  8433                           ;mcc_generated_files/spi1.c: 69:     SSP1CON1bits.SSPEN = 0;
  8434     0D88  0024               	movlb	4	; select bank4
  8435     0D89  1295               	bcf	21,5	;volatile
  8436     0D8A                     l187:
  8437     0D8A  0008               	return
  8438     0D8B                     __end_of_SPI1_Initialize:
  8439                           
  8440                           	psect	text41
  8441     0E60                     __ptext41:	
  8442 ;; *************** function _PIN_MANAGER_Initialize *****************
  8443 ;; Defined at:
  8444 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  8445 ;; Parameters:    Size  Location     Type
  8446 ;;		None
  8447 ;; Auto vars:     Size  Location     Type
  8448 ;;		None
  8449 ;; Return value:  Size  Location     Type
  8450 ;;                  1    wreg      void 
  8451 ;; Registers used:
  8452 ;;		wreg, status,2
  8453 ;; Tracked objects:
  8454 ;;		On entry : 0/0
  8455 ;;		On exit  : 0/0
  8456 ;;		Unchanged: 0/0
  8457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8458 ;;      Params:         0       0       0       0       0       0
  8459 ;;      Locals:         0       0       0       0       0       0
  8460 ;;      Temps:          0       0       0       0       0       0
  8461 ;;      Totals:         0       0       0       0       0       0
  8462 ;;Total ram usage:        0 bytes
  8463 ;; Hardware stack levels used: 1
  8464 ;; This function calls:
  8465 ;;		Nothing
  8466 ;; This function is called by:
  8467 ;;		_SYSTEM_Initialize
  8468 ;; This function uses a non-reentrant model
  8469 ;;
  8470                           
  8471     0E60                     _PIN_MANAGER_Initialize:	
  8472                           ;psect for function _PIN_MANAGER_Initialize
  8473                           
  8474     0E60                     l2657:	
  8475                           ;incstack = 0
  8476                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  8477                           
  8478                           
  8479                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  8480     0E60  0022               	movlb	2	; select bank2
  8481     0E61  018C               	clrf	12	;volatile
  8482                           
  8483                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  8484     0E62  018D               	clrf	13	;volatile
  8485     0E63                     l2659:
  8486                           
  8487                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x37;
  8488     0E63  3037               	movlw	55
  8489     0E64  0021               	movlb	1	; select bank1
  8490     0E65  008C               	movwf	12	;volatile
  8491     0E66                     l2661:
  8492                           
  8493                           ;mcc_generated_files/pin_manager.c: 67:     TRISB = 0xEF;
  8494     0E66  30EF               	movlw	239
  8495     0E67  008D               	movwf	13	;volatile
  8496     0E68                     l2663:
  8497                           
  8498                           ;mcc_generated_files/pin_manager.c: 72:     ANSELB = 0xC8;
  8499     0E68  30C8               	movlw	200
  8500     0E69  0023               	movlb	3	; select bank3
  8501     0E6A  008D               	movwf	13	;volatile
  8502     0E6B                     l2665:
  8503                           
  8504                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x1F;
  8505     0E6B  301F               	movlw	31
  8506     0E6C  008C               	movwf	12	;volatile
  8507                           
  8508                           ;mcc_generated_files/pin_manager.c: 78:     WPUB = 0x00;
  8509     0E6D  0024               	movlb	4	; select bank4
  8510     0E6E  018D               	clrf	13	;volatile
  8511                           
  8512                           ;mcc_generated_files/pin_manager.c: 79:     WPUA = 0x00;
  8513     0E6F  018C               	clrf	12	;volatile
  8514     0E70                     l2667:
  8515                           
  8516                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  8517     0E70  0021               	movlb	1	; select bank1
  8518     0E71  1795               	bsf	21,7	;volatile
  8519     0E72                     l2669:
  8520                           
  8521                           ;mcc_generated_files/pin_manager.c: 86:     APFCON0 = 0xC0;
  8522     0E72  30C0               	movlw	192
  8523     0E73  0022               	movlb	2	; select bank2
  8524     0E74  009D               	movwf	29	;volatile
  8525     0E75                     l2671:
  8526                           
  8527                           ;mcc_generated_files/pin_manager.c: 87:     APFCON1 = 0x01;
  8528     0E75  3001               	movlw	1
  8529     0E76  009E               	movwf	30	;volatile
  8530     0E77                     l163:
  8531     0E77  0008               	return
  8532     0E78                     __end_of_PIN_MANAGER_Initialize:
  8533                           
  8534                           	psect	text42
  8535     0D55                     __ptext42:	
  8536 ;; *************** function _OSCILLATOR_Initialize *****************
  8537 ;; Defined at:
  8538 ;;		line 60 in file "mcc_generated_files/mcc.c"
  8539 ;; Parameters:    Size  Location     Type
  8540 ;;		None
  8541 ;; Auto vars:     Size  Location     Type
  8542 ;;		None
  8543 ;; Return value:  Size  Location     Type
  8544 ;;                  1    wreg      void 
  8545 ;; Registers used:
  8546 ;;		wreg, status,2
  8547 ;; Tracked objects:
  8548 ;;		On entry : 0/0
  8549 ;;		On exit  : 0/0
  8550 ;;		Unchanged: 0/0
  8551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8552 ;;      Params:         0       0       0       0       0       0
  8553 ;;      Locals:         0       0       0       0       0       0
  8554 ;;      Temps:          0       0       0       0       0       0
  8555 ;;      Totals:         0       0       0       0       0       0
  8556 ;;Total ram usage:        0 bytes
  8557 ;; Hardware stack levels used: 1
  8558 ;; This function calls:
  8559 ;;		Nothing
  8560 ;; This function is called by:
  8561 ;;		_SYSTEM_Initialize
  8562 ;; This function uses a non-reentrant model
  8563 ;;
  8564                           
  8565     0D55                     _OSCILLATOR_Initialize:	
  8566                           ;psect for function _OSCILLATOR_Initialize
  8567                           
  8568     0D55                     l2679:	
  8569                           ;incstack = 0
  8570                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  8571                           
  8572                           
  8573                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x70;
  8574     0D55  3070               	movlw	112
  8575     0D56  0021               	movlb	1	; select bank1
  8576     0D57  0099               	movwf	25	;volatile
  8577     0D58                     l2681:
  8578                           
  8579                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x00;
  8580     0D58  0198               	clrf	24	;volatile
  8581     0D59                     l2683:
  8582                           
  8583                           ;mcc_generated_files/mcc.c: 67:     BORCON = 0x00;
  8584     0D59  0022               	movlb	2	; select bank2
  8585     0D5A  0196               	clrf	22	;volatile
  8586     0D5B                     l251:
  8587     0D5B  0008               	return
  8588     0D5C                     __end_of_OSCILLATOR_Initialize:
  8589                           
  8590                           	psect	text43
  8591     0EC9                     __ptext43:	
  8592 ;; *************** function _EUSART_Initialize *****************
  8593 ;; Defined at:
  8594 ;;		line 66 in file "mcc_generated_files/eusart.c"
  8595 ;; Parameters:    Size  Location     Type
  8596 ;;		None
  8597 ;; Auto vars:     Size  Location     Type
  8598 ;;		None
  8599 ;; Return value:  Size  Location     Type
  8600 ;;                  1    wreg      void 
  8601 ;; Registers used:
  8602 ;;		wreg, status,2, status,0, pclath, cstack
  8603 ;; Tracked objects:
  8604 ;;		On entry : 0/0
  8605 ;;		On exit  : 0/0
  8606 ;;		Unchanged: 0/0
  8607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8608 ;;      Params:         0       0       0       0       0       0
  8609 ;;      Locals:         0       0       0       0       0       0
  8610 ;;      Temps:          0       0       0       0       0       0
  8611 ;;      Totals:         0       0       0       0       0       0
  8612 ;;Total ram usage:        0 bytes
  8613 ;; Hardware stack levels used: 1
  8614 ;; Hardware stack levels required when called: 1
  8615 ;; This function calls:
  8616 ;;		_EUSART_SetErrorHandler
  8617 ;;		_EUSART_SetFramingErrorHandler
  8618 ;;		_EUSART_SetOverrunErrorHandler
  8619 ;; This function is called by:
  8620 ;;		_SYSTEM_Initialize
  8621 ;; This function uses a non-reentrant model
  8622 ;;
  8623                           
  8624     0EC9                     _EUSART_Initialize:	
  8625                           ;psect for function _EUSART_Initialize
  8626                           
  8627     0EC9                     l2645:	
  8628                           ;incstack = 0
  8629                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8630                           
  8631                           
  8632                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  8633     0EC9  3008               	movlw	8
  8634     0ECA  0023               	movlb	3	; select bank3
  8635     0ECB  009F               	movwf	31	;volatile
  8636                           
  8637                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
  8638     0ECC  3090               	movlw	144
  8639     0ECD  009D               	movwf	29	;volatile
  8640                           
  8641                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  8642     0ECE  3024               	movlw	36
  8643     0ECF  009E               	movwf	30	;volatile
  8644                           
  8645                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0x67;
  8646     0ED0  3067               	movlw	103
  8647     0ED1  009B               	movwf	27	;volatile
  8648     0ED2                     l2647:
  8649                           
  8650                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x00;
  8651     0ED2  019C               	clrf	28	;volatile
  8652     0ED3                     l2649:
  8653                           
  8654                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  8655     0ED3  3000               	movlw	0
  8656     0ED4  00F0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  8657     0ED5  3000               	movlw	0
  8658     0ED6  00F1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  8659     0ED7  318D  2543  318E   	fcall	_EUSART_SetFramingErrorHandler
  8660     0EDA                     l2651:
  8661                           
  8662                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  8663     0EDA  3000               	movlw	0
  8664     0EDB  00F0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  8665     0EDC  3000               	movlw	0
  8666     0EDD  00F1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  8667     0EDE  318D  2549  318E   	fcall	_EUSART_SetOverrunErrorHandler
  8668     0EE1                     l2653:
  8669                           
  8670                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  8671     0EE1  3000               	movlw	0
  8672     0EE2  00F0               	movwf	EUSART_SetErrorHandler@interruptHandler
  8673     0EE3  3000               	movlw	0
  8674     0EE4  00F1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  8675     0EE5  318D  253D  318E   	fcall	_EUSART_SetErrorHandler
  8676     0EE8                     l2655:
  8677                           
  8678                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  8679     0EE8  0020               	movlb	0	; select bank0
  8680     0EE9  01EA               	clrf	_eusartRxLastError	;volatile
  8681     0EEA                     l93:
  8682     0EEA  0008               	return
  8683     0EEB                     __end_of_EUSART_Initialize:
  8684                           
  8685                           	psect	text44
  8686     0D49                     __ptext44:	
  8687 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  8688 ;; Defined at:
  8689 ;;		line 161 in file "mcc_generated_files/eusart.c"
  8690 ;; Parameters:    Size  Location     Type
  8691 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  8692 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  8693 ;; Auto vars:     Size  Location     Type
  8694 ;;		None
  8695 ;; Return value:  Size  Location     Type
  8696 ;;                  1    wreg      void 
  8697 ;; Registers used:
  8698 ;;		wreg
  8699 ;; Tracked objects:
  8700 ;;		On entry : 0/0
  8701 ;;		On exit  : 0/0
  8702 ;;		Unchanged: 0/0
  8703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8704 ;;      Params:         2       0       0       0       0       0
  8705 ;;      Locals:         0       0       0       0       0       0
  8706 ;;      Temps:          0       0       0       0       0       0
  8707 ;;      Totals:         2       0       0       0       0       0
  8708 ;;Total ram usage:        2 bytes
  8709 ;; Hardware stack levels used: 1
  8710 ;; This function calls:
  8711 ;;		Nothing
  8712 ;; This function is called by:
  8713 ;;		_EUSART_Initialize
  8714 ;; This function uses a non-reentrant model
  8715 ;;
  8716                           
  8717     0D49                     _EUSART_SetOverrunErrorHandler:	
  8718                           ;psect for function _EUSART_SetOverrunErrorHandler
  8719                           
  8720     0D49                     l2595:	
  8721                           ;incstack = 0
  8722                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  8723                           
  8724                           
  8725                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  8726     0D49  0871               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  8727     0D4A  0022               	movlb	2	; select bank2
  8728     0D4B  00EB               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+256)
  8729     0D4C  0870               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  8730     0D4D  00EA               	movwf	_EUSART_OverrunErrorHandler^(0+256)
  8731     0D4E                     l135:
  8732     0D4E  0008               	return
  8733     0D4F                     __end_of_EUSART_SetOverrunErrorHandler:
  8734                           
  8735                           	psect	text45
  8736     0D43                     __ptext45:	
  8737 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  8738 ;; Defined at:
  8739 ;;		line 157 in file "mcc_generated_files/eusart.c"
  8740 ;; Parameters:    Size  Location     Type
  8741 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  8742 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  8743 ;; Auto vars:     Size  Location     Type
  8744 ;;		None
  8745 ;; Return value:  Size  Location     Type
  8746 ;;                  1    wreg      void 
  8747 ;; Registers used:
  8748 ;;		wreg
  8749 ;; Tracked objects:
  8750 ;;		On entry : 0/0
  8751 ;;		On exit  : 0/0
  8752 ;;		Unchanged: 0/0
  8753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8754 ;;      Params:         2       0       0       0       0       0
  8755 ;;      Locals:         0       0       0       0       0       0
  8756 ;;      Temps:          0       0       0       0       0       0
  8757 ;;      Totals:         2       0       0       0       0       0
  8758 ;;Total ram usage:        2 bytes
  8759 ;; Hardware stack levels used: 1
  8760 ;; This function calls:
  8761 ;;		Nothing
  8762 ;; This function is called by:
  8763 ;;		_EUSART_Initialize
  8764 ;; This function uses a non-reentrant model
  8765 ;;
  8766                           
  8767     0D43                     _EUSART_SetFramingErrorHandler:	
  8768                           ;psect for function _EUSART_SetFramingErrorHandler
  8769                           
  8770     0D43                     l2593:	
  8771                           ;incstack = 0
  8772                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  8773                           
  8774                           
  8775                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  8776     0D43  0871               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  8777     0D44  0022               	movlb	2	; select bank2
  8778     0D45  00ED               	movwf	(_EUSART_FramingErrorHandler+1)^(0+256)
  8779     0D46  0870               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  8780     0D47  00EC               	movwf	_EUSART_FramingErrorHandler^(0+256)
  8781     0D48                     l132:
  8782     0D48  0008               	return
  8783     0D49                     __end_of_EUSART_SetFramingErrorHandler:
  8784                           
  8785                           	psect	text46
  8786     0D3D                     __ptext46:	
  8787 ;; *************** function _EUSART_SetErrorHandler *****************
  8788 ;; Defined at:
  8789 ;;		line 165 in file "mcc_generated_files/eusart.c"
  8790 ;; Parameters:    Size  Location     Type
  8791 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  8792 ;;		 -> EUSART_DefaultErrorHandler(1), 
  8793 ;; Auto vars:     Size  Location     Type
  8794 ;;		None
  8795 ;; Return value:  Size  Location     Type
  8796 ;;                  1    wreg      void 
  8797 ;; Registers used:
  8798 ;;		wreg
  8799 ;; Tracked objects:
  8800 ;;		On entry : 0/0
  8801 ;;		On exit  : 0/0
  8802 ;;		Unchanged: 0/0
  8803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8804 ;;      Params:         2       0       0       0       0       0
  8805 ;;      Locals:         0       0       0       0       0       0
  8806 ;;      Temps:          0       0       0       0       0       0
  8807 ;;      Totals:         2       0       0       0       0       0
  8808 ;;Total ram usage:        2 bytes
  8809 ;; Hardware stack levels used: 1
  8810 ;; This function calls:
  8811 ;;		Nothing
  8812 ;; This function is called by:
  8813 ;;		_EUSART_Initialize
  8814 ;; This function uses a non-reentrant model
  8815 ;;
  8816                           
  8817     0D3D                     _EUSART_SetErrorHandler:	
  8818                           ;psect for function _EUSART_SetErrorHandler
  8819                           
  8820     0D3D                     l2597:	
  8821                           ;incstack = 0
  8822                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  8823                           
  8824                           
  8825                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  8826     0D3D  0871               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  8827     0D3E  0022               	movlb	2	; select bank2
  8828     0D3F  00E9               	movwf	(_EUSART_ErrorHandler+1)^(0+256)
  8829     0D40  0870               	movf	EUSART_SetErrorHandler@interruptHandler,w
  8830     0D41  00E8               	movwf	_EUSART_ErrorHandler^(0+256)
  8831     0D42                     l138:
  8832     0D42  0008               	return
  8833     0D43                     __end_of_EUSART_SetErrorHandler:
  8834     007E                     btemp	set	126	;btemp
  8835     007E                     wtemp0	set	126
  8836     2100                     
  8837                           	psect	idloc
  8838                           
  8839                           ;Config register IDLOC0 @ 0x8000
  8840                           ;	unspecified, using default values
  8841     8000                     	org	32768
  8842     8000  3FFF               	dw	16383
  8843                           
  8844                           ;Config register IDLOC1 @ 0x8001
  8845                           ;	unspecified, using default values
  8846     8001                     	org	32769
  8847     8001  3FFF               	dw	16383
  8848                           
  8849                           ;Config register IDLOC2 @ 0x8002
  8850                           ;	unspecified, using default values
  8851     8002                     	org	32770
  8852     8002  3FFF               	dw	16383
  8853                           
  8854                           ;Config register IDLOC3 @ 0x8003
  8855                           ;	unspecified, using default values
  8856     8003                     	org	32771
  8857     8003  3FFF               	dw	16383
  8858                           
  8859                           	psect	config
  8860                           
  8861                           ;Config register CONFIG1 @ 0x8007
  8862                           ;	Oscillator Selection
  8863                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  8864                           ;	Watchdog Timer Enable
  8865                           ;	WDTE = OFF, WDT disabled
  8866                           ;	Power-up Timer Enable
  8867                           ;	PWRTE = OFF, PWRT disabled
  8868                           ;	MCLR Pin Function Select
  8869                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  8870                           ;	Flash Program Memory Code Protection
  8871                           ;	CP = OFF, Program memory code protection is disabled
  8872                           ;	Data Memory Code Protection
  8873                           ;	CPD = OFF, Data memory code protection is disabled
  8874                           ;	Brown-out Reset Enable
  8875                           ;	BOREN = ON, Brown-out Reset enabled
  8876                           ;	Clock Out Enable
  8877                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  8878                           ;	Internal/External Switchover
  8879                           ;	IESO = ON, Internal/External Switchover mode is enabled
  8880                           ;	Fail-Safe Clock Monitor Enable
  8881                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  8882     8007                     	org	32775
  8883     8007  3FE4               	dw	16356
  8884                           
  8885                           ;Config register CONFIG2 @ 0x8008
  8886                           ;	Flash Memory Self-Write Protection
  8887                           ;	WRT = OFF, Write protection off
  8888                           ;	PLL Enable
  8889                           ;	PLLEN = OFF, 4x PLL disabled
  8890                           ;	Stack Overflow/Underflow Reset Enable
  8891                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  8892                           ;	Brown-out Reset Voltage Selection
  8893                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  8894                           ;	Low-Voltage Programming Enable
  8895                           ;	LVP = ON, Low-voltage programming enabled
  8896     8008                     	org	32776
  8897     8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    36
    Data        8
    BSS         169
    Persistent  38
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     54      79
    BANK1            80      0      80
    BANK2            80      0      78
    BANK3            16      0       0
    BANK4             0      0       0

Pointer List with Targets:

    snake_getSurroundings@surroundings	PTR unsigned char  size(1) Largest target is 16
		 -> Y0(BANK1[16]), 

    sp__ai_getInputField	PTR unsigned char  size(1) Largest target is 16
		 -> Y0(BANK1[16]), 

    sp__snake_getField	PTR unsigned char  size(1) Largest target is 64
		 -> field(BANK1[64]), 

    main@field	PTR unsigned char  size(1) Largest target is 64
		 -> field(BANK1[64]), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    _main->___awdiv
    _snake_move->_rand
    _snake_initiate->_rand
    _setLine->___awdiv
    _sendMatrix->_txMAX7219
    _initMAX7219->_txMAX7219
    _txMAX7219->_SPI1_WriteByte
    _ai_run->___awdiv
    _ai_propagate->___awdiv
    _weights2_read->___bmul
    _weights2_read->_eeprom_read
    _weights1_read->_eeprom_read
    _biases2_read->_eeprom_read
    _biases1_read->_eeprom_read
    ___wmul->_weights1_read
    ___awdiv->___wmul
    _ai_is_ai_trained_write->_eeprom_write
    _ai_is_ai_trained_read->_eeprom_read
    _ai_initiate->_rand
    _weights2_write->_rand
    _weights1_write->_rand
    _rand->___lmul
    _biases2_write->_rand
    _biases1_write->_rand
    _eeprom_write->___bmul
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _main in BANK0

    _main->_ai_propagate
    _snake_move->_snake_initiate
    _snake_initiate->_rand
    _setLine->___awdiv
    _ai_run->___awdiv
    _ai_propagate->___awdiv
    _ai_propagate->_weights1_write
    _ai_initiate->_weights1_write
    _weights2_write->_rand
    _weights1_write->_rand
    _biases2_write->_rand
    _biases1_write->_rand

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0   27314
                                             42 BANK0     12    12      0
                  _SYSTEM_Initialize
                            ___awdiv
                            ___awmod
                   _ai_getInputField
                        _ai_initiate
              _ai_is_ai_trained_read
             _ai_is_ai_trained_write
                       _ai_propagate
                             _ai_run
                 _deactivateElevator
                        _initMAX7219
                           _ledClear
                             _ledSet
                         _sendMatrix
                            _setLine
                     _snake_getField
              _snake_getFoodPosition
              _snake_getSurroundings
                     _snake_initiate
                         _snake_move
 ---------------------------------------------------------------------------------
 (1) _snake_move                                           5     5      0     720
                                              6 BANK0      5     5      0
                               _rand
                     _snake_initiate
 ---------------------------------------------------------------------------------
 (2) _snake_initiate                                       2     2      0     312
                                              4 BANK0      2     2      0
                               _rand
 ---------------------------------------------------------------------------------
 (1) _snake_getSurroundings                                5     5      0     621
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (1) _snake_getFoodPosition                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _snake_getField                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setLine                                              5     4      1     234
                                              8 BANK0      5     4      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _sendMatrix                                           5     5      0     935
                                              3 COMMON     5     5      0
                          _txMAX7219
 ---------------------------------------------------------------------------------
 (1) _ledSet                                               4     3      1     348
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _ledClear                                             4     3      1     196
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _initMAX7219                                          2     2      0     750
                                              3 COMMON     2     2      0
                          _txMAX7219
 ---------------------------------------------------------------------------------
 (2) _txMAX7219                                            2     1      1     750
                                              1 COMMON     2     1      1
                     _SPI1_WriteByte
 ---------------------------------------------------------------------------------
 (3) _SPI1_WriteByte                                       1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _deactivateElevator                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ai_run                                              10    10      0    4924
                                              8 BANK0     10    10      0
                            ___awdiv
                             ___wmul
                       _biases1_read
                       _biases2_read
                            _sigmoid
                      _weights1_read
                      _weights2_read
 ---------------------------------------------------------------------------------
 (2) _sigmoid                                              2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ai_propagate                                        34    34      0   10078
                                              8 BANK0     34    34      0
                            ___awdiv
                             ___wmul
                       _biases1_read
                      _biases1_write
                       _biases2_read
                      _biases2_write
                         _de_sigmoid
                      _weights1_read
                     _weights1_write
                      _weights2_read
                     _weights2_write
 ---------------------------------------------------------------------------------
 (2) _weights2_read                                        2     1      1     614
                                              4 COMMON     2     1      1
                             ___bmul
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (2) _weights1_read                                        3     2      1     218
                                              4 COMMON     3     2      1
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (2) _de_sigmoid                                           2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _biases2_read                                         1     1      0      44
                                              4 COMMON     1     1      0
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (2) _biases1_read                                         1     1      0      44
                                              4 COMMON     1     1      0
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1612
                                              7 COMMON     6     2      4
                      _weights1_read (ARG)
                      _weights2_read (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1516
                                             13 COMMON     1     1      0
                                              0 BANK0      8     4      4
                            ___awmod (ARG)
                             ___wmul (ARG)
                      _weights2_read (ARG)
 ---------------------------------------------------------------------------------
 (1) _ai_is_ai_trained_write                               3     3      0     721
                                              8 COMMON     3     3      0
                        _eeprom_read
                       _eeprom_write
 ---------------------------------------------------------------------------------
 (1) _ai_is_ai_trained_read                                0     0      0      22
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (3) _eeprom_read                                          4     4      0      22
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _ai_initiate                                          5     5      0    4544
                                              8 BANK0      5     5      0
                      _biases1_write
                      _biases2_write
                               _rand
                     _weights1_write
                     _weights2_write
 ---------------------------------------------------------------------------------
 (2) _weights2_write                                       3     1      2    1266
                                              4 BANK0      3     1      2
                             ___bmul
                       _eeprom_write
                               _rand (ARG)
                      _weights2_read (ARG)
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     244
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _weights1_write                                       4     2      2    1022
                                              4 BANK0      4     2      2
                             ___wmul (ARG)
                       _eeprom_write
                               _rand (ARG)
                      _weights1_read (ARG)
 ---------------------------------------------------------------------------------
 (3) _rand                                                 6     4      2     244
                                             12 COMMON     2     0      2
                                              0 BANK0      4     4      0
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     244
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) _biases2_write                                        2     1      1     848
                                              4 BANK0      2     1      1
                       _biases2_read (ARG)
                       _eeprom_write
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (2) _biases1_write                                        2     1      1     848
                                              4 BANK0      2     1      1
                       _biases1_read (ARG)
                       _eeprom_write
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (3) _eeprom_write                                         4     3      1     652
                                              4 COMMON     4     3      1
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _ai_getInputField                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI1_Initialize
     _WDT_Initialize
   ___awdiv
     ___awmod (ARG)
     ___wmul (ARG)
       _weights1_read (ARG)
         _eeprom_read
       _weights2_read (ARG)
         ___bmul
         _eeprom_read
     _weights2_read (ARG)
   ___awmod
   _ai_getInputField
   _ai_initiate
     _biases1_write
       _biases1_read (ARG)
         _eeprom_read
       _eeprom_write (ARG)
         ___bmul (ARG)
       _rand (ARG)
         ___lmul
     _biases2_write
       _biases2_read (ARG)
         _eeprom_read
       _eeprom_write (ARG)
       _rand (ARG)
     _rand
     _weights1_write
       ___wmul (ARG)
       _eeprom_write (ARG)
       _rand (ARG)
       _weights1_read (ARG)
     _weights2_write
       ___bmul
       _eeprom_write
       _rand (ARG)
       _weights2_read (ARG)
   _ai_is_ai_trained_read
     _eeprom_read
   _ai_is_ai_trained_write
     _eeprom_read
     _eeprom_write
   _ai_propagate
     ___awdiv
     ___wmul
     _biases1_read
     _biases1_write
     _biases2_read
     _biases2_write
     _de_sigmoid
     _weights1_read
     _weights1_write
     _weights2_read
     _weights2_write
   _ai_run
     ___awdiv
     ___wmul
     _biases1_read
     _biases2_read
     _sigmoid
     _weights1_read
     _weights2_read
   _deactivateElevator
   _initMAX7219
     _txMAX7219
       _SPI1_WriteByte
   _ledClear
   _ledSet
   _sendMatrix
     _txMAX7219
   _setLine
     ___awdiv (ARG)
     ___awmod (ARG)
   _snake_getField
   _snake_getFoodPosition
   _snake_getSurroundings
   _snake_initiate
     _rand
   _snake_move
     _rand
     _snake_initiate

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      FB       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     36      4F       6       98.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      4E      10       97.5%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               10      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK4                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      FB      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Oct 08 21:56:03 2022

                           SPI1_WriteByte@byte 0070                           __end_of_ai_propagate 07BC  
                               ___bmul@product 0072                                             l93 0EEA  
                                           _Y0 00E0                                             _Y1 0159  
                                           _Y2 0062                                             _Z1 0152  
                                           _Z2 005E                                   ___awdiv@sign 0025  
                          ___wmul@multiplicand 0079                           __end_of_biases1_read 0D63  
                         __end_of_biases2_read 000B                                            l132 0D48  
                                          _DB1 0144                                            _DB2 0056  
                                          l135 0D4E                                            l224 0D3C  
                                          l401 0F8E                                            l138 0D42  
                                          l251 0D5B                                            l163 0E77  
                                          l331 0DB0                                            l254 0D37  
                                          l248 0DCE                                            l610 00F0  
                                          l426 0F35                                            l187 0D8A  
                                          l371 0E97                                            l380 0FFF  
                                          l613 0D2E                                            l373 0E9C  
                                          l453 01FE                                            l550 0DFF  
                                          l630 03C3                                            l374 0EA1  
                                          l383 0E22                                            l471 02B4  
                                          l376 0EA6                                            l456 0D30  
                                          l480 0D33                                            l553 0D74  
                                          l377 0EA9                                            l562 0DBE  
                                          l634 07BB                                            l386 0E35  
                                          l394 0F0D                                            l571 000A  
                                          l556 0E10                                            l565 0D62  
                                          l469 0299                                            l559 0D7E  
                                          l584 0E8F                                            l568 0DA3  
                                          l843 0E4C                                            l587 0D54  
                                          l683 0DEE                                            l845 0E5F  
                                          l862 0F37                                            l686 0DDE  
                                          l863 0F37                                            l873 0EB4  
                                          l866 0F50                                            l875 0EC8  
                                          l869 0F5F                                            l887 0FC1  
                                          _DW1 2100                                            _DW2 0120  
                                          l899 0E4A                                            _DY1 014B  
                                          _DY2 005A                 ?_EUSART_SetFramingErrorHandler 0070  
                                 ___awmod@sign 0076                                            wreg 0009  
                        __end_of_biases1_write 0D75                                   ?_initMAX7219 0070  
                        __end_of_biases2_write 0D7F                                           l1026 0150  
                                         l1039 0092                                           l3001 0318  
                                         l3011 033C                                           l3003 031C  
                                         l3005 0322                                           l3101 01AA  
                                         l3031 0383                                           l3007 0331  
                                         l3111 01CE                                           l1337 003F  
                                         l3041 03A5                                           l3033 0387  
                                         l3025 0348                                           l3017 033D  
                                         l3009 0336                                           l3121 01E2  
                                         l3113 01D7                                           l3105 01AF  
                                         l3051 03B6                                           l3043 03A6  
                                         l3035 038D                                           l3027 0354  
                                         l3019 0346                                           l3123 01E6  
                                         l3107 01C5                                           l3301 074F  
                                         l3221 05A8                                           l3205 056C  
                                         l3141 04EE                                           l3053 03B8  
                                         l3037 039A                                           l3029 036B  
                                         l3125 01ED                                           l3117 01DA  
                                         l3109 01CA                                           l3061 0153  
                                         l3311 075B                                           l3231 05B3  
                                         l3223 05AC                                           l3215 058D  
                                         l3207 0587                                           l3143 04F3  
                                         l3055 03BC                                           l3039 039F  
                                         l3119 01E0                                           l3127 01F6  
                                         l3071 0163                                           l2601 000B  
                                         l3305 0755                                           l3233 05C2  
                                         l3225 05B2                                           l3217 059E  
                                         l3209 058C                                           l3153 04FA  
                                         l3161 0510                                           l3145 04F4  
                                         l3137 04E8                                           l3057 03C2  
                                         l3049 03A8                                           l3129 01FC  
                                         l3081 0179                                           l3073 0167  
                                         l2611 0F49                                           l2603 002C  
                                         l3323 077D                                           l3315 0762  
                                         l3251 065D                                           l3235 05D7  
                                         l3219 05A2                                           l3171 051A  
                                         l3155 0500                                           l3147 04F9  
                                         l3091 018E                                           l3083 017C  
                                         l3075 016D                                           l3067 0154  
                                         l3411 03C7                                           l2621 0F58  
                                         l2613 0F4B                                           l3325 07B0  
                                         l3317 0774                                           l3309 075A  
                                         l3261 066F                                           l3253 0661  
                                         l3245 05F0                                           l3237 05E7  
                                         l3181 0527                                           l3173 0520  
                                         l3157 0504                                           l3341 0EF0  
                                         l3333 0EED                                           l2701 0F2D  
                                         l3085 017F                                           l3077 016E  
                                         l3069 015D                                           l3501 04C4  
                                         l3421 03D8                                           l3413 03CA  
                                         l2623 0F59                                           l2615 0F4F  
                                         l2607 0F3C                                           l2711 0DF1  
                                         l2631 0E37                                           l3351 0E7E  
                                         l3319 0776                                           l3271 06AF  
                                         l3263 067F                                           l3255 0667  
                                         l3247 0653                                           l3239 05EF  
                                         l3191 0557                                           l3183 0533  
                                         l3167 0511                                           l3175 0526  
                                         l3159 050A                                           l3343 0F01  
                                         l3335 0EEF                                           l2703 0F2F  
                                         l3095 019A                                           l3079 0173  
                                         l3503 04C8                                           l3415 03CD  
                                         l3361 0041                                           l2625 0F5E  
                                         l2617 0F53                                           l2609 0F45  
                                         l2713 0D6D                                           l2641 0E49  
                                         l2633 0E38                                           l3353 0E83  
                                         l3329 07B6                                           l3281 0707  
                                         l3265 0695                                           l3257 0668  
                                         l3249 0657                                           l3193 055B  
                                         l3169 0516                                           l2705 0E91  
                                         l3345 0F03                                           l3097 019D  
                                         l3089 0189                                           l3505 04CE  
                                         l3441 0401                                           l3433 03DA  
                                         l3417 03D0                                           l3409 03C4  
                                         l2651 0EDA                                           l3371 0055  
                                         l3363 0045                                           l2619 0F57  
                                         l2635 0E3C                                           l2715 0E02  
                                         l2627 0E52                                           l3355 0E85  
                                         l2723 0D5D                                           l2731 0005  
                                         l3291 0714                                           l3275 06B6  
                                         l3267 06A5                                           l3195 0561  
                                         l2707 0E93                                           l3347 0F07  
                                         l3507 04D3                                           l3451 0423  
                                         l3443 0407                                           l3435 03EF  
                                         l3427 03D9                                           l3419 03D3  
                                         l2653 0EE1                                           l2645 0EC9  
                                         l2661 0E66                                           l2805 0DBF  
                                         l3381 006B                                           l3373 005B  
                                         l3365 004A                                           l2717 0D77  
                                         l2581 0F97                                           l2637 0E40  
                                         l3357 0E89                                           l3349 0E79  
                                         l3293 0725                                           l3277 0702  
                                         l3269 06AE                                           l3285 070C  
                                         l3197 0565                                           l3189 0534  
                                         l2709 0E9D                                           l2901 0F77  
                                         l3509 04E0                                           l3461 0431  
                                         l3453 0426                                           l3445 040B  
                                         l3437 03F6                                           l2655 0EE8  
                                         l2647 0ED2                                           l2671 0E75  
                                         l2663 0E68                                           l3391 0089  
                                         l3383 0075                                           l3375 005E  
                                         l3367 004C                                           l3359 0040  
                                         l2583 0F9B                                           l2639 0E42  
                                         l2831 00BC                                           l2823 00A1  
                                         l2815 0095                                           l2751 0EBE  
                                         l2743 0EAA                                           l2719 0DB2  
                                         l2727 0D98                                           l3295 0727  
                                         l3287 070D                                           l3199 056B  
                                         l2735 0DE0                                           l2807 0DA4  
                                         l2903 0F7D                                           l3471 0474  
                                         l3463 0437                                           l3455 042E  
                                         l3447 0411                                           l3439 03FC  
                                         l2593 0D43                                           l2649 0ED3  
                                         l2681 0D58                                           l2665 0E6B  
                                         l2657 0E60                                           l2673 0D7F  
                                         l3393 008E                                           l3385 0079  
                                         l3377 0063                                           l3369 0050  
                                         l2913 0D2D                                           l2585 0FA3  
                                         l2841 00CD                                           l2833 00C2  
                                         l2825 00AD                                           l2817 009F  
                                         l2809 0093                                           l2761 00F7  
                                         l2753 0EC4                                           l2745 0EAC  
                                         l2905 0F84                                           l3465 0440  
                                         l3473 0478                                           l3449 0416  
                                         l2595 0D49                                           l2683 0D59  
                                         l2667 0E70                                           l2659 0E63  
                                         l2675 0D86                                           l3387 007E  
                                         l3379 0067                                           l2587 0FAA  
                                         l2579 0F8F                                           l2851 00E0  
                                         l2827 00B2                                           l2771 010B  
                                         l2763 00FC                                           l2747 0EB0  
                                         l2739 0DD0                                           l3299 072E  
                                         l2907 0F88                                           l2931 0219  
                                         l2923 0201                                           l3491 0497  
                                         l3475 0485                                           l3467 0462  
                                         l2597 0D3D                                           l2669 0E72  
                                         l2677 0D88                                           l2685 0D34  
                                         l3389 0084                                           l2589 0FB9  
                                         l2853 00E6                                           l2829 00B8  
                                         l2909 0D4F                                           l2781 011F  
                                         l2773 010D                                           l2765 00FE  
                                         l2757 00F1                                           l2749 0EB9  
                                         l2861 0FE9                                           l2941 0250  
                                         l2933 0223                                           l2925 0208  
                                         l2917 0200                                           l2693 0F10  
                                         l3493 04AC                                           l3485 0496  
                                         l3477 048B                                           l3469 0467  
                                         l2679 0D55                                           l2855 00EA  
                                         l2847 00CF                                           l2839 00C3  
                                         l2791 013C                                           l2783 0123  
                                         l2775 0113                                           l2767 0102  
                                         l2759 00F3                                           l2599 0D39  
                                         l2863 0FF4                                           l2871 0E12  
                                         l2943 025C                                           l2935 022A  
                                         l2927 020C                                           l2695 0F15  
                                         l2687 0F0E                                           l3495 04B3  
                                         l3479 0494                                           l2849 00DB  
                                         l2785 0132                                           l2777 0116  
                                         l2793 0142                                           l2769 0107  
                                         l2865 0FF9                                           l2857 0FC2  
                                         l2873 0E24                                           l2961 02A2  
                                         l2945 0262                                           l2937 0233  
                                         l2929 0212                                           l2697 0F19  
                                         l3497 04B9                                           l2795 0147  
                                         l2787 0136                                           l2779 011B  
                                         l2859 0FC8                                           l2867 0D2F  
                                         l2875 0D31                                           l2963 02AA  
                                         l2955 0281                                           l2947 026E  
                                         l2939 0245                                           l2699 0F1F  
                                         l3499 04BE                                           l2797 014C  
                                         l2789 0137                                           l2981 02D0  
                                         l2973 02B7                                           l2885 0F61  
                                         l2965 02AE                                           l2957 028A  
                                         l2949 0280                                           l3589 01B7  
                                         l2975 02C0                                           l2967 02B5  
                                         l2895 0F6A                                           l2887 0F68  
                                         l2879 0F60                                           l2959 0290  
                                         l2977 02C6                                           l2897 0F6C  
                                         l2889 0F69                                           l2995 02DD  
                                         l2987 02D1                                           l2979 02CA  
                                         l2899 0F71                                           l2997 02E8  
                                         l2989 02DB                                           l2999 02FF  
                __end_of_snake_getSurroundings 02B5                                           u2000 01A9  
                                         u2001 01A8                                           u2010 01CA  
                                         u2011 01C9                                           u2100 0561  
                                         u2020 01D7                                           u2101 0560  
                                         u2021 01D6                                           u2110 056B  
                                         u2030 01E0                                           u2111 056A  
                                         u2031 01DF                                           u1400 0F4F  
                                         u2200 0713                                           u2040 01F6  
                                         u1401 0F4E                                           u2201 0712  
                                         u2041 01F5                                           u1410 0F5E  
                                         u2210 072D                                           u2130 05A8  
                                         u2050 04ED                                           u1411 0F5D  
                                         u2211 072C                                           u2131 05A7  
                                         u2051 04EC                                           u1340 0F9B  
                                         u1420 0E52                                           u2140 05B2  
                                         u2060 04F3                                           u1341 0F9A  
                                         u1421 0E51                                           u2141 05B1  
                                         u2125 0590                                           u2061 04F2  
                                         _LATA 010C                                           u2310 006B  
                                         u1430 0E3C                                           u2230 0761  
                                         u2070 04F9                                           _LATB 010D  
                                         u2311 006A                                           u1431 0E3B  
                                         u2231 0760                                           u2071 04F8  
                                         u2320 0075                                           u1440 0E49  
                                         u1600 0123                                           u1520 0EB0  
                                         u2240 077C                                           u2160 065D  
                                         u2080 050A                                           u2400 0407  
                                         u2321 0074                                           u2305 005F  
                                         u1441 0E48                                           u1601 0122  
                                         u1521 0EAF                                           u2241 077B  
                                         u2225 0733                                           u2161 065C  
                                         u2081 0509                                           u1505 0DE3  
                                         u2401 0406                                           u1370 0FB9  
                                         u2170 0667                                           u2090 0520  
                                         u2250 0F0D                                           u1450 0F1F  
                                         u2410 0411                                           u1371 0FB8  
                                         u1355 0FA4                                           u1515 0DD3  
                                         u2171 0666                                           u2155 0644  
                                         u2091 051F                                           u2251 0F0C  
                                         u1451 0F1E                                           u2411 0410  
                                         u2340 0084                                           u1380 0039  
                                         u1700 00F0                                           u2260 0E83  
                                         u1620 0132                                           u2180 066E  
                                         u1460 0E9C                                           u2341 0083  
                                         u2325 0071                                           u1365 0FAB  
                                         u1701 00EF                                           u2261 0E82  
                                         u1621 0131                                           u2181 066D  
                                         u1461 0E9B                                           u2350 0089  
                                         u2270 0045                                           u1390 0F3C  
                                         u1550 0EC4                                           u2190 06B5  
                                         u1470 0EA6                                           u2430 042E  
                                         u2351 0088                                           u2335 007A  
                                         u2271 0044                                           u1391 0F3B  
                                         u1615 0124                                           u1551 0EC3  
                                         u1535 0EB5                                           u2191 06B4  
                                         u1471 0EA5                                           u2431 042D  
                                         u2280 0050                                           u1640 0142  
                                         u1560 00F7                                           u2440 0474  
                                         u2281 004F                                           u1385 0035  
                                         u1641 0141                                           u1625 012E  
                                         u1561 00F6                                           u1545 0EBA  
                                         u2441 0473                                           u2425 0419  
                                         u2290 005B                                           u1650 0147  
                                         u1570 0102                                           u1714 0E17  
                                         u1730 0F7D                                           u1810 026E  
                                         u2291 005A                                           u1651 0146  
                                         u1635 0138                                           u1571 0101  
                                         u1715 0E16                                           u1731 0F7C  
                                         u1811 026D                                           u1580 0113  
                                         u1900 03A5                                           u1724 0E29  
                                         u1740 0F8E                                           u1820 0290  
                                         u2460 04AC                                           u1485 0DF6  
                                         u1581 0112                                           u1901 03A4  
                                         u1725 0E28                                           u1741 0F8D  
                                         u1821 028F                                           u1805 0265  
                                         u2461 04AB                                           u2445 0470  
                                         u1670 00B8                                           u1910 03B6  
                                         u1830 02A2                                           u1750 0212  
                                         u2470 04C4                                           u2390 03EF  
                                         u1671 00B7                                           u1495 0DB5  
                                         u1911 03B5                                           u1831 02A1  
                                         u1751 0211                                           u2471 04C3  
                                         u2455 049A                                           u2391 03EE  
                                         u1680 00C2                                           u1920 03C2  
                                         u1840 02B4                                           u1760 0219  
                                         u2480 04CE                                           u1681 00C1  
                                         u1921 03C1                                           u1841 02B3  
                                         u1761 0218                                           u2481 04CD  
                                         u2537 047E                                           u2385 03DD  
                                         u1690 00E6                                           u1850 02C0  
                                         u1770 0233                                           u1930 015D  
                                         u1691 00E5                                           u1595 0117  
                                         u1851 02BF                                           u2547 0FEE  
                                         u1771 0232                                           u1931 015C  
                                         u1860 02D0                                           u1940 016D  
                                         u1861 02CF                                           u1941 016C  
                                         u1870 0322                                           u1790 0250  
                                         u1950 0179                                           u1871 0321  
                                         u1791 024F                                           u1951 0178  
                                         u2495 04D6                                           u1880 033C  
                                         u1960 0188                                           u1881 033B  
                                         u1785 0248                                           u1961 0187  
                                         u1890 038D                                           u1891 038C  
                                         u1980 0199                                           u1981 0198  
                                         u1975 0191                                           u1995 01A0  
                                         _WPUA 020C                                           _WPUB 020D  
                               ??_eeprom_write 0075                                           _main 03C4  
                                         _rand 000B                                           _seed 006B  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         btemp 007E                                           start 0002  
                            ___bmul@multiplier 0073                                ??_weights1_read 0075  
                              ??_weights2_read 0075                     __end_of_deactivateElevator 0DB1  
                              biases1_read@add 0074                        ??_snake_getFoodPosition 0070  
                      ai_is_ai_trained_write@c 007A                  __end_of_OSCILLATOR_Initialize 0D5C  
                              biases2_read@add 0074                                          ?_main 0070  
                                        ?_rand 007C                                __end_of___awdiv 0151  
                                        _EEADR 0191                                __end_of___awmod 0093  
                              ___awdiv@divisor 0020                                ___awdiv@counter 0024  
                                        _RCREG 0199                                          _RCSTA 019D  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TXREG 019A                                          _TXSTA 019E  
                          ___lmul@multiplicand 0074                                          _field 00A0  
                               _WDT_Initialize 0D34                                          main@i 0052  
                                        main@j 0053                                __end_of_setLine 0F0E  
                              __end_of_sigmoid 0DEF                                          status 0003  
                                        wtemp0 007E                         _ai_is_ai_trained_write 0E78  
                              __initialization 07BC                               ??_weights1_write 0026  
                                 __end_of_main 04E6                               ??_weights2_write 007E  
                                 __end_of_rand 0040                                         ??_main 004A  
                                       ??_rand 0020                         __end_of_WDT_Initialize 0D38  
            _EUSART_DefaultFramingErrorHandler 0000                     _EUSART_OverrunErrorHandler 016A  
                                       _EEADRH 0192                                         _EEADRL 0191  
                                       _EEDATA 0193                                         _EEDATH 0194  
                                       _EEDATL 0193                                         _EECON1 0195  
                                       _EECON2 0196                               ___awdiv@dividend 0022  
                                       _ANSELA 018C                                         _ANSELB 018D  
                                       _BORCON 0116                              ?_ai_getInputField 0070  
                                       _OSCCON 0099                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _WDTCON 0097  
                           ??_ai_getInputField 0070                               __end_of_ledClear 0E36  
            snake_getSurroundings@surroundings 0074                                         ___bmul 0E36  
                                       ___lmul 0F8F                                         ___wmul 0EAA  
                                    ??___awdiv 007D                                         _ai_run 02B5  
                                    ??___awmod 0074                                         _choice 0068  
                                       _ledSet 0E11                               _de_sigmoidValues 0800  
                                       _matrix 013C                               ___awdiv@quotient 0026  
                              ___awmod@divisor 0070                           __end_of_eeprom_write 0F60  
                              ___awmod@counter 0075                  __end_of_ai_is_ai_trained_read 0D55  
                             biases1_write@add 0025                               biases1_write@val 0024  
                                    ??_setLine 0029                                ?_WDT_Initialize 0070  
                                    ??_sigmoid 0070                                  ai_propagate@S 0035  
                                ai_propagate@i 003A                               biases2_write@add 0025  
                                ai_propagate@j 003F                               biases2_write@val 0024  
                                 _ai_propagate 04E6                              _SYSTEM_Initialize 0DBF  
                                 _biases1_read 0D5C                                   _biases2_read 0004  
                      __end_of__initialization 07FD                                eeprom_read@addr 0073  
                           ?_SYSTEM_Initialize 0070                            ___bmul@multiplicand 0070  
                               __pcstackCOMMON 0070                                   __pidataBANK2 0D63  
                          ??_SYSTEM_Initialize 0072                              ??_SPI1_Initialize 0070  
                           _spi1_configuration 0820                                 _OPTION_REGbits 0095  
                        __end_of_sigmoidValues 0820                              eeprom_write@value 0074  
              ??_EUSART_SetOverrunErrorHandler 0072                                snake_initiate@i 0025  
                    __end_of_SYSTEM_Initialize 0DCF                            snake_move@direction 0028  
                                 _headPosition 0067                                     __pbssBANK0 0056  
                                   __pbssBANK1 00A0                                     __pbssBANK2 0120  
                        ai_propagate@incentive 0039                                     _de_sigmoid 0DCF  
                               _SPI1_WriteByte 0D38                            snake_move@incentive 0029  
                                   __pmaintext 03C4                                        ?___bmul 0070  
                                      ?___lmul 0070                                        ?___wmul 0077  
                                      ?_ai_run 0070                                    sendMatrix@b 0074  
                                  sendMatrix@i 0077                                    sendMatrix@j 0076  
                                      ?_ledSet 0070                                    setLine@mask 002B  
                                      _BAUDCON 019F                                 ___lmul@product 0078  
                                      _APFCON0 011D                                        _APFCON1 011E  
                __end_of_snake_getFoodPosition 0D34                           main@foodPosition_680 004F  
                           _deactivateElevator 0DA4                                        _OSCTUNE 0098  
                                    ?_ledClear 0070                                        _SSP1ADD 0212  
                                      _SSP1BUF 0211                       ??_EUSART_SetErrorHandler 0072  
                          ?_deactivateElevator 0070                         __end_of_SPI1_WriteByte 0D3D  
                      ?_ai_is_ai_trained_write 0070                          _snake_getSurroundings 01FF  
                            weights1_read@add1 0076                              weights1_read@add2 0074  
                             main@foodPosition 004E                                  ??_ai_initiate 0028  
                        __end_of_weights1_read 0DBF                                        ___awdiv 00F1  
                                      ___awmod 0040                          __end_of_weights2_read 0DA4  
                            weights2_read@add1 0075                              weights2_read@add2 0074  
                         ??_deactivateElevator 0070                                        __ptext1 0151  
                                      __ptext2 0F0E                                        __ptext3 01FF  
                                      __ptext4 0D31                                        __ptext5 0D2F  
                                      __ptext6 0EEB                                        __ptext7 0F60  
                                      __ptext8 0E11                                        __ptext9 0E23  
                            __end_of_txMAX7219 0EAA                                        ai_run@i 002A  
                                      ai_run@j 0030                                        ai_run@z 002E  
                        _OSCILLATOR_Initialize 0D55                                        _mapping 0160  
                             ___awmod@dividend 0072                                        _setLine 0EEB  
                     ??_PIN_MANAGER_Initialize 0070                                        _sigmoid 0DDF  
                                   ??_ledClear 0071                                        ledSet@c 0070  
                                      ledSet@l 0073                                        clrloop0 0D8C  
                         end_of_initialization 07FD                                     _sendMatrix 0F60  
               __end_of_ai_is_ai_trained_write 0E90                       __end_of_de_sigmoidValues 0810  
                                  ?_de_sigmoid 0070          __end_of_EUSART_SetOverrunErrorHandler 0D4F  
                _EUSART_SetOverrunErrorHandler 0D49                                ?_SPI1_WriteByte 0070  
                                 _eeprom_write 0F36                                    snake_move@i 002A  
                            _EUSART_Initialize 0EC9                              weights1_write@val 0025  
                           ?_EUSART_Initialize 0070                                      _RCSTAbits 019D  
                                   _snake_move 0151                                 ai_propagate@dz 0048  
                            weights2_write@val 0025                            ??_EUSART_Initialize 0072  
                          __end_of_ai_initiate 00F1                               ??_WDT_Initialize 0070  
                               txMAX7219@addr0 0072                                      _TRISAbits 008C  
                                    _TRISBbits 008D                                  _biases1_write 0D6B  
                                _biases2_write 0D75                         ?_snake_getSurroundings 0070  
                    __end_of_EUSART_Initialize 0EEB                                _SPI1_Initialize 0D7F  
                                ??_eeprom_read 0070                                      _TXSTAbits 019E  
                                 _foodPosition 0066                                 _snake_getField 0D2F  
                                 ai_initiate@i 0029                                   ai_initiate@j 002B  
                               __end_of___bmul 0E4B                                 __end_of___lmul 0FC2  
                   _EUSART_DefaultErrorHandler 0000                                 __end_of___wmul 0EC9  
                               __end_of_ai_run 03C4                                 __end_of_ledSet 0E23  
                       ?_OSCILLATOR_Initialize 0070                                 _snake_initiate 0F0E  
                        _ai_is_ai_trained_read 0D4F                            start_initialization 07BC  
                                ??_initMAX7219 0073                                 ?_biases1_write 0024  
                               ?_biases2_write 0024                                    ?_sendMatrix 0070  
                       __end_of_snake_getField 0D31                 ?_EUSART_SetOverrunErrorHandler 0070  
                                  _ai_initiate 0093                     _EUSART_FramingErrorHandler 016C  
                                     ??___bmul 0071                                       ??___lmul 0078  
                                  ?_snake_move 0070                                       ??___wmul 007B  
                       _EUSART_SetErrorHandler 0D3D                            __end_of_eeprom_read 0E60  
                                     ??_ai_run 0028                                       ??_ledSet 0071  
                                  __pdataBANK2 0160                               ai_initiate@i_909 002A  
                             ai_initiate@j_907 002C                         __end_of_snake_initiate 0F36  
                                  __pbssBIGRAM 2100                                      ___latbits 0001  
                                __pcstackBANK0 0020                        __end_of_SPI1_Initialize 0D8B  
                             eeprom_write@addr 0077                            __end_of_initMAX7219 1000  
                                    __pnvBANK2 0168                                ?_snake_getField 0070  
                       _PIN_MANAGER_Initialize 0E60                                     setLine@val 0028  
                                     ?___awdiv 0020                                       ?___awmod 0070  
                             _ai_getInputField 0D2D                                ?_snake_initiate 0070  
                                 sendMatrix@nb 0075                         ?_ai_is_ai_trained_read 0070  
                        _snake_getFoodPosition 0D31                                ??_biases1_write 007E  
                              ??_biases2_write 007E                                       ?_setLine 0028  
                                     ?_sigmoid 0070                               ??_SPI1_WriteByte 0070  
                                    _txMAX7219 0E90                                   ??_de_sigmoid 0070  
                               ___wmul@product 007B                                       _LATAbits 010C  
       EUSART_SetErrorHandler@interruptHandler 0070                                       _LATBbits 010D  
                                    clear_ram0 0D8B                                    _eeprom_read 0E4B  
                            _eusartRxLastError 006A                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 0072                                      ledClear@c 0070  
                                    ledClear@l 0073                                      _snakeSize 0069  
                                     _SSP1CON1 0215                                       _SSP1CON2 0216  
            _EUSART_DefaultOverrunErrorHandler 0000                                       _SSP1STAT 0214  
                                txMAX7219@dat0 0071                                      main@i_677 0050  
                                    main@i_678 0054                              ___wmul@multiplier 0077  
                                    main@j_679 0055                             __end_of_de_sigmoid 0DDF  
                               _weights1_write 0DEF                                      main@field 004D  
                               _weights2_write 0E00                                    _initMAX7219 0FC2  
                      ??_snake_getSurroundings 0070                                     ?_txMAX7219 0071  
                                _sigmoidValues 0810                               ?_SPI1_Initialize 0070  
                                ?_ai_propagate 0070                              ___lmul@multiplier 0070  
                                ?_biases1_read 0070                                  ?_biases2_read 0070  
                                   _EECON1bits 0195                                    ai_run@i_921 002C  
                                  ai_run@i_923 002D                                    ai_run@i_917 002B  
                                  ai_run@j_919 0031                        ??_OSCILLATOR_Initialize 0070  
                          _EUSART_ErrorHandler 0168                         __end_of_weights1_write 0E00  
                       __end_of_weights2_write 0E11                         ?_snake_getFoodPosition 0070  
                       snake_getSurroundings@i 0072                         snake_getSurroundings@p 0071  
                            ai_propagate@i_930 003C                              ai_propagate@i_932 003D  
                            ai_propagate@i_941 0041                              ai_propagate@i_935 0042  
                            ai_propagate@i_928 003B                              ai_propagate@i_937 003E  
                            ai_propagate@i_939 0040                              ai_propagate@j_931 0044  
                            ai_propagate@j_940 0047                              ai_propagate@j_934 0045  
                            ai_propagate@j_936 0043                              ai_propagate@j_938 0046  
                                  de_sigmoid@z 0071                                       _ledClear 0E23  
                               ??_ai_propagate 0028                                       __ptext10 0FC2  
                                     __ptext11 0E90                                       __ptext20 0004  
                                     __ptext12 0D38                                       __ptext21 0D5C  
                                     __ptext13 0DA4                                       __ptext30 0DEF  
                                     __ptext22 0EAA                                       __ptext14 02B5  
                                     __ptext31 000B                                       __ptext23 00F1  
                                     __ptext15 0DDF                                       __ptext40 0D7F  
                                     __ptext32 0F8F                                       __ptext24 0E78  
                                     __ptext16 04E6                                       __ptext41 0E60  
                                     __ptext33 0D75                                       __ptext25 0D4F  
                                     __ptext17 0D97                                       __ptext42 0D55  
                                     __ptext34 0D6B                                       __ptext26 0E4B  
                                     __ptext18 0DB1                                       __ptext43 0EC9  
                                     __ptext35 0F36                                       __ptext27 0093  
                                     __ptext19 0DCF                                       __ptext44 0D49  
                                     __ptext36 0D2D                                       __ptext28 0E00  
                                     __ptext45 0D43                                       __ptext37 0040  
                                     __ptext29 0E36                                       __ptext46 0D3D  
                                     __ptext38 0DBF                                       __ptext39 0D34  
                                 _SSP1CON1bits 0215                                   ??_sendMatrix 0073  
                               ??_biases1_read 0074                                 ??_biases2_read 0074  
                      ?_EUSART_SetErrorHandler 0070                                   ?_ai_initiate 0070  
EUSART_SetOverrunErrorHandler@interruptHandler 0070                                   ??_snake_move 0026  
                                _weights1_read 0DB1                                  _weights2_read 0D97  
        __end_of_EUSART_SetFramingErrorHandler 0D49                  _EUSART_SetFramingErrorHandler 0D43  
                           __end_of_sendMatrix 0F8F                                ?_weights1_write 0024  
                              ?_weights2_write 0024                                     _INTCONbits 000B  
                     ??_ai_is_ai_trained_write 0078                      ai_is_ai_trained_write@val 0079  
                                  ??_txMAX7219 0072                       __end_of_ai_getInputField 0D2F  
                             ??_snake_getField 0070                             __end_of_snake_move 01FF  
                                     setLine@i 002C                                       setLine@l 002A  
                      ?_PIN_MANAGER_Initialize 0070                 __end_of_EUSART_SetErrorHandler 0D43  
                           weights1_write@add1 0027                             weights1_write@add2 0024  
                                     sigmoid@z 0071                     snake_getSurroundings@i_802 0073  
                             ??_snake_initiate 0024                                 ?_weights1_read 0074  
                               ?_weights2_read 0074  EUSART_SetFramingErrorHandler@interruptHandler 0070  
                      ??_ai_is_ai_trained_read 0074                                  __pstringtext1 0800  
                                __pstringtext2 0810                                  __pstringtext3 0820  
                           weights2_write@add1 0026                             weights2_write@add2 0024  
               __end_of_PIN_MANAGER_Initialize 0E78                                  ?_eeprom_write 0074  
                                   _STATUSbits 0003                                   ?_eeprom_read 0070  
                   __end_of_spi1_configuration 0824  
