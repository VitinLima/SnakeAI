

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Oct 09 02:17:53 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    15                           	psect	inittext,global,class=CODE,delta=2
    16                           	psect	clrtext,global,class=CODE,delta=2
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2
    45                           	psect	text26,local,class=CODE,merge=1,delta=2
    46                           	psect	text27,local,class=CODE,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,merge=1,delta=2
    48                           	psect	text29,local,class=CODE,merge=1,delta=2
    49                           	psect	text30,local,class=CODE,merge=1,delta=2
    50                           	psect	text31,local,class=CODE,merge=1,delta=2
    51                           	psect	text32,local,class=CODE,merge=1,delta=2
    52                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    53                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    54                           	dabs	1,0x7E,2
    55     0000                     
    56                           ; Version 2.40
    57                           ; Generated 17/11/2021 GMT
    58                           ; 
    59                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution. Publication is not required when
    73                           ;        this file is used in an embedded application.
    74                           ; 
    75                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    76                           ;        software without specific prior written permission.
    77                           ; 
    78                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    79                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    80                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    81                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    82                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    83                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    84                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    85                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    86                           ; 
    87                           ; 
    88                           ; Code-generator required, PIC16F1827 Definitions
    89                           ; 
    90                           ; SFR Addresses
    91     0000                     	;# 
    92     0001                     	;# 
    93     0002                     	;# 
    94     0003                     	;# 
    95     0004                     	;# 
    96     0005                     	;# 
    97     0006                     	;# 
    98     0007                     	;# 
    99     0008                     	;# 
   100     0009                     	;# 
   101     000A                     	;# 
   102     000B                     	;# 
   103     000C                     	;# 
   104     000D                     	;# 
   105     0011                     	;# 
   106     0012                     	;# 
   107     0013                     	;# 
   108     0014                     	;# 
   109     0015                     	;# 
   110     0016                     	;# 
   111     0016                     	;# 
   112     0017                     	;# 
   113     0018                     	;# 
   114     0019                     	;# 
   115     001A                     	;# 
   116     001B                     	;# 
   117     001C                     	;# 
   118     001E                     	;# 
   119     001F                     	;# 
   120     008C                     	;# 
   121     008D                     	;# 
   122     0091                     	;# 
   123     0092                     	;# 
   124     0093                     	;# 
   125     0094                     	;# 
   126     0095                     	;# 
   127     0096                     	;# 
   128     0097                     	;# 
   129     0098                     	;# 
   130     0099                     	;# 
   131     009A                     	;# 
   132     009B                     	;# 
   133     009B                     	;# 
   134     009C                     	;# 
   135     009D                     	;# 
   136     009E                     	;# 
   137     010C                     	;# 
   138     010D                     	;# 
   139     0111                     	;# 
   140     0112                     	;# 
   141     0113                     	;# 
   142     0114                     	;# 
   143     0115                     	;# 
   144     0116                     	;# 
   145     0117                     	;# 
   146     0118                     	;# 
   147     0119                     	;# 
   148     011A                     	;# 
   149     011B                     	;# 
   150     011D                     	;# 
   151     011E                     	;# 
   152     018C                     	;# 
   153     018D                     	;# 
   154     0191                     	;# 
   155     0191                     	;# 
   156     0192                     	;# 
   157     0193                     	;# 
   158     0193                     	;# 
   159     0193                     	;# 
   160     0194                     	;# 
   161     0195                     	;# 
   162     0196                     	;# 
   163     0199                     	;# 
   164     019A                     	;# 
   165     019B                     	;# 
   166     019B                     	;# 
   167     019B                     	;# 
   168     019B                     	;# 
   169     019C                     	;# 
   170     019C                     	;# 
   171     019D                     	;# 
   172     019E                     	;# 
   173     019F                     	;# 
   174     020C                     	;# 
   175     020D                     	;# 
   176     0211                     	;# 
   177     0211                     	;# 
   178     0212                     	;# 
   179     0212                     	;# 
   180     0213                     	;# 
   181     0213                     	;# 
   182     0214                     	;# 
   183     0214                     	;# 
   184     0215                     	;# 
   185     0215                     	;# 
   186     0215                     	;# 
   187     0216                     	;# 
   188     0216                     	;# 
   189     0217                     	;# 
   190     0217                     	;# 
   191     0219                     	;# 
   192     021A                     	;# 
   193     021B                     	;# 
   194     021C                     	;# 
   195     021D                     	;# 
   196     021E                     	;# 
   197     021F                     	;# 
   198     0291                     	;# 
   199     0291                     	;# 
   200     0292                     	;# 
   201     0293                     	;# 
   202     0294                     	;# 
   203     0295                     	;# 
   204     0295                     	;# 
   205     0296                     	;# 
   206     0298                     	;# 
   207     0298                     	;# 
   208     0299                     	;# 
   209     029A                     	;# 
   210     029B                     	;# 
   211     029C                     	;# 
   212     029C                     	;# 
   213     029D                     	;# 
   214     029E                     	;# 
   215     029E                     	;# 
   216     0311                     	;# 
   217     0311                     	;# 
   218     0312                     	;# 
   219     0313                     	;# 
   220     0318                     	;# 
   221     0318                     	;# 
   222     0319                     	;# 
   223     031A                     	;# 
   224     0394                     	;# 
   225     0395                     	;# 
   226     0396                     	;# 
   227     039A                     	;# 
   228     039C                     	;# 
   229     039D                     	;# 
   230     039E                     	;# 
   231     039F                     	;# 
   232     0415                     	;# 
   233     0416                     	;# 
   234     0417                     	;# 
   235     041C                     	;# 
   236     041D                     	;# 
   237     041E                     	;# 
   238     0FE4                     	;# 
   239     0FE5                     	;# 
   240     0FE6                     	;# 
   241     0FE7                     	;# 
   242     0FE8                     	;# 
   243     0FE9                     	;# 
   244     0FEA                     	;# 
   245     0FEB                     	;# 
   246     0FED                     	;# 
   247     0FEE                     	;# 
   248     0FEF                     	;# 
   249     0000                     	;# 
   250     0001                     	;# 
   251     0002                     	;# 
   252     0003                     	;# 
   253     0004                     	;# 
   254     0005                     	;# 
   255     0006                     	;# 
   256     0007                     	;# 
   257     0008                     	;# 
   258     0009                     	;# 
   259     000A                     	;# 
   260     000B                     	;# 
   261     000C                     	;# 
   262     000D                     	;# 
   263     0011                     	;# 
   264     0012                     	;# 
   265     0013                     	;# 
   266     0014                     	;# 
   267     0015                     	;# 
   268     0016                     	;# 
   269     0016                     	;# 
   270     0017                     	;# 
   271     0018                     	;# 
   272     0019                     	;# 
   273     001A                     	;# 
   274     001B                     	;# 
   275     001C                     	;# 
   276     001E                     	;# 
   277     001F                     	;# 
   278     008C                     	;# 
   279     008D                     	;# 
   280     0091                     	;# 
   281     0092                     	;# 
   282     0093                     	;# 
   283     0094                     	;# 
   284     0095                     	;# 
   285     0096                     	;# 
   286     0097                     	;# 
   287     0098                     	;# 
   288     0099                     	;# 
   289     009A                     	;# 
   290     009B                     	;# 
   291     009B                     	;# 
   292     009C                     	;# 
   293     009D                     	;# 
   294     009E                     	;# 
   295     010C                     	;# 
   296     010D                     	;# 
   297     0111                     	;# 
   298     0112                     	;# 
   299     0113                     	;# 
   300     0114                     	;# 
   301     0115                     	;# 
   302     0116                     	;# 
   303     0117                     	;# 
   304     0118                     	;# 
   305     0119                     	;# 
   306     011A                     	;# 
   307     011B                     	;# 
   308     011D                     	;# 
   309     011E                     	;# 
   310     018C                     	;# 
   311     018D                     	;# 
   312     0191                     	;# 
   313     0191                     	;# 
   314     0192                     	;# 
   315     0193                     	;# 
   316     0193                     	;# 
   317     0193                     	;# 
   318     0194                     	;# 
   319     0195                     	;# 
   320     0196                     	;# 
   321     0199                     	;# 
   322     019A                     	;# 
   323     019B                     	;# 
   324     019B                     	;# 
   325     019B                     	;# 
   326     019B                     	;# 
   327     019C                     	;# 
   328     019C                     	;# 
   329     019D                     	;# 
   330     019E                     	;# 
   331     019F                     	;# 
   332     020C                     	;# 
   333     020D                     	;# 
   334     0211                     	;# 
   335     0211                     	;# 
   336     0212                     	;# 
   337     0212                     	;# 
   338     0213                     	;# 
   339     0213                     	;# 
   340     0214                     	;# 
   341     0214                     	;# 
   342     0215                     	;# 
   343     0215                     	;# 
   344     0215                     	;# 
   345     0216                     	;# 
   346     0216                     	;# 
   347     0217                     	;# 
   348     0217                     	;# 
   349     0219                     	;# 
   350     021A                     	;# 
   351     021B                     	;# 
   352     021C                     	;# 
   353     021D                     	;# 
   354     021E                     	;# 
   355     021F                     	;# 
   356     0291                     	;# 
   357     0291                     	;# 
   358     0292                     	;# 
   359     0293                     	;# 
   360     0294                     	;# 
   361     0295                     	;# 
   362     0295                     	;# 
   363     0296                     	;# 
   364     0298                     	;# 
   365     0298                     	;# 
   366     0299                     	;# 
   367     029A                     	;# 
   368     029B                     	;# 
   369     029C                     	;# 
   370     029C                     	;# 
   371     029D                     	;# 
   372     029E                     	;# 
   373     029E                     	;# 
   374     0311                     	;# 
   375     0311                     	;# 
   376     0312                     	;# 
   377     0313                     	;# 
   378     0318                     	;# 
   379     0318                     	;# 
   380     0319                     	;# 
   381     031A                     	;# 
   382     0394                     	;# 
   383     0395                     	;# 
   384     0396                     	;# 
   385     039A                     	;# 
   386     039C                     	;# 
   387     039D                     	;# 
   388     039E                     	;# 
   389     039F                     	;# 
   390     0415                     	;# 
   391     0416                     	;# 
   392     0417                     	;# 
   393     041C                     	;# 
   394     041D                     	;# 
   395     041E                     	;# 
   396     0FE4                     	;# 
   397     0FE5                     	;# 
   398     0FE6                     	;# 
   399     0FE7                     	;# 
   400     0FE8                     	;# 
   401     0FE9                     	;# 
   402     0FEA                     	;# 
   403     0FEB                     	;# 
   404     0FED                     	;# 
   405     0FEE                     	;# 
   406     0FEF                     	;# 
   407     0000                     	;# 
   408     0001                     	;# 
   409     0002                     	;# 
   410     0003                     	;# 
   411     0004                     	;# 
   412     0005                     	;# 
   413     0006                     	;# 
   414     0007                     	;# 
   415     0008                     	;# 
   416     0009                     	;# 
   417     000A                     	;# 
   418     000B                     	;# 
   419     000C                     	;# 
   420     000D                     	;# 
   421     0011                     	;# 
   422     0012                     	;# 
   423     0013                     	;# 
   424     0014                     	;# 
   425     0015                     	;# 
   426     0016                     	;# 
   427     0016                     	;# 
   428     0017                     	;# 
   429     0018                     	;# 
   430     0019                     	;# 
   431     001A                     	;# 
   432     001B                     	;# 
   433     001C                     	;# 
   434     001E                     	;# 
   435     001F                     	;# 
   436     008C                     	;# 
   437     008D                     	;# 
   438     0091                     	;# 
   439     0092                     	;# 
   440     0093                     	;# 
   441     0094                     	;# 
   442     0095                     	;# 
   443     0096                     	;# 
   444     0097                     	;# 
   445     0098                     	;# 
   446     0099                     	;# 
   447     009A                     	;# 
   448     009B                     	;# 
   449     009B                     	;# 
   450     009C                     	;# 
   451     009D                     	;# 
   452     009E                     	;# 
   453     010C                     	;# 
   454     010D                     	;# 
   455     0111                     	;# 
   456     0112                     	;# 
   457     0113                     	;# 
   458     0114                     	;# 
   459     0115                     	;# 
   460     0116                     	;# 
   461     0117                     	;# 
   462     0118                     	;# 
   463     0119                     	;# 
   464     011A                     	;# 
   465     011B                     	;# 
   466     011D                     	;# 
   467     011E                     	;# 
   468     018C                     	;# 
   469     018D                     	;# 
   470     0191                     	;# 
   471     0191                     	;# 
   472     0192                     	;# 
   473     0193                     	;# 
   474     0193                     	;# 
   475     0193                     	;# 
   476     0194                     	;# 
   477     0195                     	;# 
   478     0196                     	;# 
   479     0199                     	;# 
   480     019A                     	;# 
   481     019B                     	;# 
   482     019B                     	;# 
   483     019B                     	;# 
   484     019B                     	;# 
   485     019C                     	;# 
   486     019C                     	;# 
   487     019D                     	;# 
   488     019E                     	;# 
   489     019F                     	;# 
   490     020C                     	;# 
   491     020D                     	;# 
   492     0211                     	;# 
   493     0211                     	;# 
   494     0212                     	;# 
   495     0212                     	;# 
   496     0213                     	;# 
   497     0213                     	;# 
   498     0214                     	;# 
   499     0214                     	;# 
   500     0215                     	;# 
   501     0215                     	;# 
   502     0215                     	;# 
   503     0216                     	;# 
   504     0216                     	;# 
   505     0217                     	;# 
   506     0217                     	;# 
   507     0219                     	;# 
   508     021A                     	;# 
   509     021B                     	;# 
   510     021C                     	;# 
   511     021D                     	;# 
   512     021E                     	;# 
   513     021F                     	;# 
   514     0291                     	;# 
   515     0291                     	;# 
   516     0292                     	;# 
   517     0293                     	;# 
   518     0294                     	;# 
   519     0295                     	;# 
   520     0295                     	;# 
   521     0296                     	;# 
   522     0298                     	;# 
   523     0298                     	;# 
   524     0299                     	;# 
   525     029A                     	;# 
   526     029B                     	;# 
   527     029C                     	;# 
   528     029C                     	;# 
   529     029D                     	;# 
   530     029E                     	;# 
   531     029E                     	;# 
   532     0311                     	;# 
   533     0311                     	;# 
   534     0312                     	;# 
   535     0313                     	;# 
   536     0318                     	;# 
   537     0318                     	;# 
   538     0319                     	;# 
   539     031A                     	;# 
   540     0394                     	;# 
   541     0395                     	;# 
   542     0396                     	;# 
   543     039A                     	;# 
   544     039C                     	;# 
   545     039D                     	;# 
   546     039E                     	;# 
   547     039F                     	;# 
   548     0415                     	;# 
   549     0416                     	;# 
   550     0417                     	;# 
   551     041C                     	;# 
   552     041D                     	;# 
   553     041E                     	;# 
   554     0FE4                     	;# 
   555     0FE5                     	;# 
   556     0FE6                     	;# 
   557     0FE7                     	;# 
   558     0FE8                     	;# 
   559     0FE9                     	;# 
   560     0FEA                     	;# 
   561     0FEB                     	;# 
   562     0FED                     	;# 
   563     0FEE                     	;# 
   564     0FEF                     	;# 
   565     0000                     	;# 
   566     0001                     	;# 
   567     0002                     	;# 
   568     0003                     	;# 
   569     0004                     	;# 
   570     0005                     	;# 
   571     0006                     	;# 
   572     0007                     	;# 
   573     0008                     	;# 
   574     0009                     	;# 
   575     000A                     	;# 
   576     000B                     	;# 
   577     000C                     	;# 
   578     000D                     	;# 
   579     0011                     	;# 
   580     0012                     	;# 
   581     0013                     	;# 
   582     0014                     	;# 
   583     0015                     	;# 
   584     0016                     	;# 
   585     0016                     	;# 
   586     0017                     	;# 
   587     0018                     	;# 
   588     0019                     	;# 
   589     001A                     	;# 
   590     001B                     	;# 
   591     001C                     	;# 
   592     001E                     	;# 
   593     001F                     	;# 
   594     008C                     	;# 
   595     008D                     	;# 
   596     0091                     	;# 
   597     0092                     	;# 
   598     0093                     	;# 
   599     0094                     	;# 
   600     0095                     	;# 
   601     0096                     	;# 
   602     0097                     	;# 
   603     0098                     	;# 
   604     0099                     	;# 
   605     009A                     	;# 
   606     009B                     	;# 
   607     009B                     	;# 
   608     009C                     	;# 
   609     009D                     	;# 
   610     009E                     	;# 
   611     010C                     	;# 
   612     010D                     	;# 
   613     0111                     	;# 
   614     0112                     	;# 
   615     0113                     	;# 
   616     0114                     	;# 
   617     0115                     	;# 
   618     0116                     	;# 
   619     0117                     	;# 
   620     0118                     	;# 
   621     0119                     	;# 
   622     011A                     	;# 
   623     011B                     	;# 
   624     011D                     	;# 
   625     011E                     	;# 
   626     018C                     	;# 
   627     018D                     	;# 
   628     0191                     	;# 
   629     0191                     	;# 
   630     0192                     	;# 
   631     0193                     	;# 
   632     0193                     	;# 
   633     0193                     	;# 
   634     0194                     	;# 
   635     0195                     	;# 
   636     0196                     	;# 
   637     0199                     	;# 
   638     019A                     	;# 
   639     019B                     	;# 
   640     019B                     	;# 
   641     019B                     	;# 
   642     019B                     	;# 
   643     019C                     	;# 
   644     019C                     	;# 
   645     019D                     	;# 
   646     019E                     	;# 
   647     019F                     	;# 
   648     020C                     	;# 
   649     020D                     	;# 
   650     0211                     	;# 
   651     0211                     	;# 
   652     0212                     	;# 
   653     0212                     	;# 
   654     0213                     	;# 
   655     0213                     	;# 
   656     0214                     	;# 
   657     0214                     	;# 
   658     0215                     	;# 
   659     0215                     	;# 
   660     0215                     	;# 
   661     0216                     	;# 
   662     0216                     	;# 
   663     0217                     	;# 
   664     0217                     	;# 
   665     0219                     	;# 
   666     021A                     	;# 
   667     021B                     	;# 
   668     021C                     	;# 
   669     021D                     	;# 
   670     021E                     	;# 
   671     021F                     	;# 
   672     0291                     	;# 
   673     0291                     	;# 
   674     0292                     	;# 
   675     0293                     	;# 
   676     0294                     	;# 
   677     0295                     	;# 
   678     0295                     	;# 
   679     0296                     	;# 
   680     0298                     	;# 
   681     0298                     	;# 
   682     0299                     	;# 
   683     029A                     	;# 
   684     029B                     	;# 
   685     029C                     	;# 
   686     029C                     	;# 
   687     029D                     	;# 
   688     029E                     	;# 
   689     029E                     	;# 
   690     0311                     	;# 
   691     0311                     	;# 
   692     0312                     	;# 
   693     0313                     	;# 
   694     0318                     	;# 
   695     0318                     	;# 
   696     0319                     	;# 
   697     031A                     	;# 
   698     0394                     	;# 
   699     0395                     	;# 
   700     0396                     	;# 
   701     039A                     	;# 
   702     039C                     	;# 
   703     039D                     	;# 
   704     039E                     	;# 
   705     039F                     	;# 
   706     0415                     	;# 
   707     0416                     	;# 
   708     0417                     	;# 
   709     041C                     	;# 
   710     041D                     	;# 
   711     041E                     	;# 
   712     0FE4                     	;# 
   713     0FE5                     	;# 
   714     0FE6                     	;# 
   715     0FE7                     	;# 
   716     0FE8                     	;# 
   717     0FE9                     	;# 
   718     0FEA                     	;# 
   719     0FEB                     	;# 
   720     0FED                     	;# 
   721     0FEE                     	;# 
   722     0FEF                     	;# 
   723     0000                     	;# 
   724     0001                     	;# 
   725     0002                     	;# 
   726     0003                     	;# 
   727     0004                     	;# 
   728     0005                     	;# 
   729     0006                     	;# 
   730     0007                     	;# 
   731     0008                     	;# 
   732     0009                     	;# 
   733     000A                     	;# 
   734     000B                     	;# 
   735     000C                     	;# 
   736     000D                     	;# 
   737     0011                     	;# 
   738     0012                     	;# 
   739     0013                     	;# 
   740     0014                     	;# 
   741     0015                     	;# 
   742     0016                     	;# 
   743     0016                     	;# 
   744     0017                     	;# 
   745     0018                     	;# 
   746     0019                     	;# 
   747     001A                     	;# 
   748     001B                     	;# 
   749     001C                     	;# 
   750     001E                     	;# 
   751     001F                     	;# 
   752     008C                     	;# 
   753     008D                     	;# 
   754     0091                     	;# 
   755     0092                     	;# 
   756     0093                     	;# 
   757     0094                     	;# 
   758     0095                     	;# 
   759     0096                     	;# 
   760     0097                     	;# 
   761     0098                     	;# 
   762     0099                     	;# 
   763     009A                     	;# 
   764     009B                     	;# 
   765     009B                     	;# 
   766     009C                     	;# 
   767     009D                     	;# 
   768     009E                     	;# 
   769     010C                     	;# 
   770     010D                     	;# 
   771     0111                     	;# 
   772     0112                     	;# 
   773     0113                     	;# 
   774     0114                     	;# 
   775     0115                     	;# 
   776     0116                     	;# 
   777     0117                     	;# 
   778     0118                     	;# 
   779     0119                     	;# 
   780     011A                     	;# 
   781     011B                     	;# 
   782     011D                     	;# 
   783     011E                     	;# 
   784     018C                     	;# 
   785     018D                     	;# 
   786     0191                     	;# 
   787     0191                     	;# 
   788     0192                     	;# 
   789     0193                     	;# 
   790     0193                     	;# 
   791     0193                     	;# 
   792     0194                     	;# 
   793     0195                     	;# 
   794     0196                     	;# 
   795     0199                     	;# 
   796     019A                     	;# 
   797     019B                     	;# 
   798     019B                     	;# 
   799     019B                     	;# 
   800     019B                     	;# 
   801     019C                     	;# 
   802     019C                     	;# 
   803     019D                     	;# 
   804     019E                     	;# 
   805     019F                     	;# 
   806     020C                     	;# 
   807     020D                     	;# 
   808     0211                     	;# 
   809     0211                     	;# 
   810     0212                     	;# 
   811     0212                     	;# 
   812     0213                     	;# 
   813     0213                     	;# 
   814     0214                     	;# 
   815     0214                     	;# 
   816     0215                     	;# 
   817     0215                     	;# 
   818     0215                     	;# 
   819     0216                     	;# 
   820     0216                     	;# 
   821     0217                     	;# 
   822     0217                     	;# 
   823     0219                     	;# 
   824     021A                     	;# 
   825     021B                     	;# 
   826     021C                     	;# 
   827     021D                     	;# 
   828     021E                     	;# 
   829     021F                     	;# 
   830     0291                     	;# 
   831     0291                     	;# 
   832     0292                     	;# 
   833     0293                     	;# 
   834     0294                     	;# 
   835     0295                     	;# 
   836     0295                     	;# 
   837     0296                     	;# 
   838     0298                     	;# 
   839     0298                     	;# 
   840     0299                     	;# 
   841     029A                     	;# 
   842     029B                     	;# 
   843     029C                     	;# 
   844     029C                     	;# 
   845     029D                     	;# 
   846     029E                     	;# 
   847     029E                     	;# 
   848     0311                     	;# 
   849     0311                     	;# 
   850     0312                     	;# 
   851     0313                     	;# 
   852     0318                     	;# 
   853     0318                     	;# 
   854     0319                     	;# 
   855     031A                     	;# 
   856     0394                     	;# 
   857     0395                     	;# 
   858     0396                     	;# 
   859     039A                     	;# 
   860     039C                     	;# 
   861     039D                     	;# 
   862     039E                     	;# 
   863     039F                     	;# 
   864     0415                     	;# 
   865     0416                     	;# 
   866     0417                     	;# 
   867     041C                     	;# 
   868     041D                     	;# 
   869     041E                     	;# 
   870     0FE4                     	;# 
   871     0FE5                     	;# 
   872     0FE6                     	;# 
   873     0FE7                     	;# 
   874     0FE8                     	;# 
   875     0FE9                     	;# 
   876     0FEA                     	;# 
   877     0FEB                     	;# 
   878     0FED                     	;# 
   879     0FEE                     	;# 
   880     0FEF                     	;# 
   881     0000                     	;# 
   882     0001                     	;# 
   883     0002                     	;# 
   884     0003                     	;# 
   885     0004                     	;# 
   886     0005                     	;# 
   887     0006                     	;# 
   888     0007                     	;# 
   889     0008                     	;# 
   890     0009                     	;# 
   891     000A                     	;# 
   892     000B                     	;# 
   893     000C                     	;# 
   894     000D                     	;# 
   895     0011                     	;# 
   896     0012                     	;# 
   897     0013                     	;# 
   898     0014                     	;# 
   899     0015                     	;# 
   900     0016                     	;# 
   901     0016                     	;# 
   902     0017                     	;# 
   903     0018                     	;# 
   904     0019                     	;# 
   905     001A                     	;# 
   906     001B                     	;# 
   907     001C                     	;# 
   908     001E                     	;# 
   909     001F                     	;# 
   910     008C                     	;# 
   911     008D                     	;# 
   912     0091                     	;# 
   913     0092                     	;# 
   914     0093                     	;# 
   915     0094                     	;# 
   916     0095                     	;# 
   917     0096                     	;# 
   918     0097                     	;# 
   919     0098                     	;# 
   920     0099                     	;# 
   921     009A                     	;# 
   922     009B                     	;# 
   923     009B                     	;# 
   924     009C                     	;# 
   925     009D                     	;# 
   926     009E                     	;# 
   927     010C                     	;# 
   928     010D                     	;# 
   929     0111                     	;# 
   930     0112                     	;# 
   931     0113                     	;# 
   932     0114                     	;# 
   933     0115                     	;# 
   934     0116                     	;# 
   935     0117                     	;# 
   936     0118                     	;# 
   937     0119                     	;# 
   938     011A                     	;# 
   939     011B                     	;# 
   940     011D                     	;# 
   941     011E                     	;# 
   942     018C                     	;# 
   943     018D                     	;# 
   944     0191                     	;# 
   945     0191                     	;# 
   946     0192                     	;# 
   947     0193                     	;# 
   948     0193                     	;# 
   949     0193                     	;# 
   950     0194                     	;# 
   951     0195                     	;# 
   952     0196                     	;# 
   953     0199                     	;# 
   954     019A                     	;# 
   955     019B                     	;# 
   956     019B                     	;# 
   957     019B                     	;# 
   958     019B                     	;# 
   959     019C                     	;# 
   960     019C                     	;# 
   961     019D                     	;# 
   962     019E                     	;# 
   963     019F                     	;# 
   964     020C                     	;# 
   965     020D                     	;# 
   966     0211                     	;# 
   967     0211                     	;# 
   968     0212                     	;# 
   969     0212                     	;# 
   970     0213                     	;# 
   971     0213                     	;# 
   972     0214                     	;# 
   973     0214                     	;# 
   974     0215                     	;# 
   975     0215                     	;# 
   976     0215                     	;# 
   977     0216                     	;# 
   978     0216                     	;# 
   979     0217                     	;# 
   980     0217                     	;# 
   981     0219                     	;# 
   982     021A                     	;# 
   983     021B                     	;# 
   984     021C                     	;# 
   985     021D                     	;# 
   986     021E                     	;# 
   987     021F                     	;# 
   988     0291                     	;# 
   989     0291                     	;# 
   990     0292                     	;# 
   991     0293                     	;# 
   992     0294                     	;# 
   993     0295                     	;# 
   994     0295                     	;# 
   995     0296                     	;# 
   996     0298                     	;# 
   997     0298                     	;# 
   998     0299                     	;# 
   999     029A                     	;# 
  1000     029B                     	;# 
  1001     029C                     	;# 
  1002     029C                     	;# 
  1003     029D                     	;# 
  1004     029E                     	;# 
  1005     029E                     	;# 
  1006     0311                     	;# 
  1007     0311                     	;# 
  1008     0312                     	;# 
  1009     0313                     	;# 
  1010     0318                     	;# 
  1011     0318                     	;# 
  1012     0319                     	;# 
  1013     031A                     	;# 
  1014     0394                     	;# 
  1015     0395                     	;# 
  1016     0396                     	;# 
  1017     039A                     	;# 
  1018     039C                     	;# 
  1019     039D                     	;# 
  1020     039E                     	;# 
  1021     039F                     	;# 
  1022     0415                     	;# 
  1023     0416                     	;# 
  1024     0417                     	;# 
  1025     041C                     	;# 
  1026     041D                     	;# 
  1027     041E                     	;# 
  1028     0FE4                     	;# 
  1029     0FE5                     	;# 
  1030     0FE6                     	;# 
  1031     0FE7                     	;# 
  1032     0FE8                     	;# 
  1033     0FE9                     	;# 
  1034     0FEA                     	;# 
  1035     0FEB                     	;# 
  1036     0FED                     	;# 
  1037     0FEE                     	;# 
  1038     0FEF                     	;# 
  1039     0000                     	;# 
  1040     0001                     	;# 
  1041     0002                     	;# 
  1042     0003                     	;# 
  1043     0004                     	;# 
  1044     0005                     	;# 
  1045     0006                     	;# 
  1046     0007                     	;# 
  1047     0008                     	;# 
  1048     0009                     	;# 
  1049     000A                     	;# 
  1050     000B                     	;# 
  1051     000C                     	;# 
  1052     000D                     	;# 
  1053     0011                     	;# 
  1054     0012                     	;# 
  1055     0013                     	;# 
  1056     0014                     	;# 
  1057     0015                     	;# 
  1058     0016                     	;# 
  1059     0016                     	;# 
  1060     0017                     	;# 
  1061     0018                     	;# 
  1062     0019                     	;# 
  1063     001A                     	;# 
  1064     001B                     	;# 
  1065     001C                     	;# 
  1066     001E                     	;# 
  1067     001F                     	;# 
  1068     008C                     	;# 
  1069     008D                     	;# 
  1070     0091                     	;# 
  1071     0092                     	;# 
  1072     0093                     	;# 
  1073     0094                     	;# 
  1074     0095                     	;# 
  1075     0096                     	;# 
  1076     0097                     	;# 
  1077     0098                     	;# 
  1078     0099                     	;# 
  1079     009A                     	;# 
  1080     009B                     	;# 
  1081     009B                     	;# 
  1082     009C                     	;# 
  1083     009D                     	;# 
  1084     009E                     	;# 
  1085     010C                     	;# 
  1086     010D                     	;# 
  1087     0111                     	;# 
  1088     0112                     	;# 
  1089     0113                     	;# 
  1090     0114                     	;# 
  1091     0115                     	;# 
  1092     0116                     	;# 
  1093     0117                     	;# 
  1094     0118                     	;# 
  1095     0119                     	;# 
  1096     011A                     	;# 
  1097     011B                     	;# 
  1098     011D                     	;# 
  1099     011E                     	;# 
  1100     018C                     	;# 
  1101     018D                     	;# 
  1102     0191                     	;# 
  1103     0191                     	;# 
  1104     0192                     	;# 
  1105     0193                     	;# 
  1106     0193                     	;# 
  1107     0193                     	;# 
  1108     0194                     	;# 
  1109     0195                     	;# 
  1110     0196                     	;# 
  1111     0199                     	;# 
  1112     019A                     	;# 
  1113     019B                     	;# 
  1114     019B                     	;# 
  1115     019B                     	;# 
  1116     019B                     	;# 
  1117     019C                     	;# 
  1118     019C                     	;# 
  1119     019D                     	;# 
  1120     019E                     	;# 
  1121     019F                     	;# 
  1122     020C                     	;# 
  1123     020D                     	;# 
  1124     0211                     	;# 
  1125     0211                     	;# 
  1126     0212                     	;# 
  1127     0212                     	;# 
  1128     0213                     	;# 
  1129     0213                     	;# 
  1130     0214                     	;# 
  1131     0214                     	;# 
  1132     0215                     	;# 
  1133     0215                     	;# 
  1134     0215                     	;# 
  1135     0216                     	;# 
  1136     0216                     	;# 
  1137     0217                     	;# 
  1138     0217                     	;# 
  1139     0219                     	;# 
  1140     021A                     	;# 
  1141     021B                     	;# 
  1142     021C                     	;# 
  1143     021D                     	;# 
  1144     021E                     	;# 
  1145     021F                     	;# 
  1146     0291                     	;# 
  1147     0291                     	;# 
  1148     0292                     	;# 
  1149     0293                     	;# 
  1150     0294                     	;# 
  1151     0295                     	;# 
  1152     0295                     	;# 
  1153     0296                     	;# 
  1154     0298                     	;# 
  1155     0298                     	;# 
  1156     0299                     	;# 
  1157     029A                     	;# 
  1158     029B                     	;# 
  1159     029C                     	;# 
  1160     029C                     	;# 
  1161     029D                     	;# 
  1162     029E                     	;# 
  1163     029E                     	;# 
  1164     0311                     	;# 
  1165     0311                     	;# 
  1166     0312                     	;# 
  1167     0313                     	;# 
  1168     0318                     	;# 
  1169     0318                     	;# 
  1170     0319                     	;# 
  1171     031A                     	;# 
  1172     0394                     	;# 
  1173     0395                     	;# 
  1174     0396                     	;# 
  1175     039A                     	;# 
  1176     039C                     	;# 
  1177     039D                     	;# 
  1178     039E                     	;# 
  1179     039F                     	;# 
  1180     0415                     	;# 
  1181     0416                     	;# 
  1182     0417                     	;# 
  1183     041C                     	;# 
  1184     041D                     	;# 
  1185     041E                     	;# 
  1186     0FE4                     	;# 
  1187     0FE5                     	;# 
  1188     0FE6                     	;# 
  1189     0FE7                     	;# 
  1190     0FE8                     	;# 
  1191     0FE9                     	;# 
  1192     0FEA                     	;# 
  1193     0FEB                     	;# 
  1194     0FED                     	;# 
  1195     0FEE                     	;# 
  1196     0FEF                     	;# 
  1197     0000                     	;# 
  1198     0001                     	;# 
  1199     0002                     	;# 
  1200     0003                     	;# 
  1201     0004                     	;# 
  1202     0005                     	;# 
  1203     0006                     	;# 
  1204     0007                     	;# 
  1205     0008                     	;# 
  1206     0009                     	;# 
  1207     000A                     	;# 
  1208     000B                     	;# 
  1209     000C                     	;# 
  1210     000D                     	;# 
  1211     0011                     	;# 
  1212     0012                     	;# 
  1213     0013                     	;# 
  1214     0014                     	;# 
  1215     0015                     	;# 
  1216     0016                     	;# 
  1217     0016                     	;# 
  1218     0017                     	;# 
  1219     0018                     	;# 
  1220     0019                     	;# 
  1221     001A                     	;# 
  1222     001B                     	;# 
  1223     001C                     	;# 
  1224     001E                     	;# 
  1225     001F                     	;# 
  1226     008C                     	;# 
  1227     008D                     	;# 
  1228     0091                     	;# 
  1229     0092                     	;# 
  1230     0093                     	;# 
  1231     0094                     	;# 
  1232     0095                     	;# 
  1233     0096                     	;# 
  1234     0097                     	;# 
  1235     0098                     	;# 
  1236     0099                     	;# 
  1237     009A                     	;# 
  1238     009B                     	;# 
  1239     009B                     	;# 
  1240     009C                     	;# 
  1241     009D                     	;# 
  1242     009E                     	;# 
  1243     010C                     	;# 
  1244     010D                     	;# 
  1245     0111                     	;# 
  1246     0112                     	;# 
  1247     0113                     	;# 
  1248     0114                     	;# 
  1249     0115                     	;# 
  1250     0116                     	;# 
  1251     0117                     	;# 
  1252     0118                     	;# 
  1253     0119                     	;# 
  1254     011A                     	;# 
  1255     011B                     	;# 
  1256     011D                     	;# 
  1257     011E                     	;# 
  1258     018C                     	;# 
  1259     018D                     	;# 
  1260     0191                     	;# 
  1261     0191                     	;# 
  1262     0192                     	;# 
  1263     0193                     	;# 
  1264     0193                     	;# 
  1265     0193                     	;# 
  1266     0194                     	;# 
  1267     0195                     	;# 
  1268     0196                     	;# 
  1269     0199                     	;# 
  1270     019A                     	;# 
  1271     019B                     	;# 
  1272     019B                     	;# 
  1273     019B                     	;# 
  1274     019B                     	;# 
  1275     019C                     	;# 
  1276     019C                     	;# 
  1277     019D                     	;# 
  1278     019E                     	;# 
  1279     019F                     	;# 
  1280     020C                     	;# 
  1281     020D                     	;# 
  1282     0211                     	;# 
  1283     0211                     	;# 
  1284     0212                     	;# 
  1285     0212                     	;# 
  1286     0213                     	;# 
  1287     0213                     	;# 
  1288     0214                     	;# 
  1289     0214                     	;# 
  1290     0215                     	;# 
  1291     0215                     	;# 
  1292     0215                     	;# 
  1293     0216                     	;# 
  1294     0216                     	;# 
  1295     0217                     	;# 
  1296     0217                     	;# 
  1297     0219                     	;# 
  1298     021A                     	;# 
  1299     021B                     	;# 
  1300     021C                     	;# 
  1301     021D                     	;# 
  1302     021E                     	;# 
  1303     021F                     	;# 
  1304     0291                     	;# 
  1305     0291                     	;# 
  1306     0292                     	;# 
  1307     0293                     	;# 
  1308     0294                     	;# 
  1309     0295                     	;# 
  1310     0295                     	;# 
  1311     0296                     	;# 
  1312     0298                     	;# 
  1313     0298                     	;# 
  1314     0299                     	;# 
  1315     029A                     	;# 
  1316     029B                     	;# 
  1317     029C                     	;# 
  1318     029C                     	;# 
  1319     029D                     	;# 
  1320     029E                     	;# 
  1321     029E                     	;# 
  1322     0311                     	;# 
  1323     0311                     	;# 
  1324     0312                     	;# 
  1325     0313                     	;# 
  1326     0318                     	;# 
  1327     0318                     	;# 
  1328     0319                     	;# 
  1329     031A                     	;# 
  1330     0394                     	;# 
  1331     0395                     	;# 
  1332     0396                     	;# 
  1333     039A                     	;# 
  1334     039C                     	;# 
  1335     039D                     	;# 
  1336     039E                     	;# 
  1337     039F                     	;# 
  1338     0415                     	;# 
  1339     0416                     	;# 
  1340     0417                     	;# 
  1341     041C                     	;# 
  1342     041D                     	;# 
  1343     041E                     	;# 
  1344     0FE4                     	;# 
  1345     0FE5                     	;# 
  1346     0FE6                     	;# 
  1347     0FE7                     	;# 
  1348     0FE8                     	;# 
  1349     0FE9                     	;# 
  1350     0FEA                     	;# 
  1351     0FEB                     	;# 
  1352     0FED                     	;# 
  1353     0FEE                     	;# 
  1354     0FEF                     	;# 
  1355     0000                     	;# 
  1356     0001                     	;# 
  1357     0002                     	;# 
  1358     0003                     	;# 
  1359     0004                     	;# 
  1360     0005                     	;# 
  1361     0006                     	;# 
  1362     0007                     	;# 
  1363     0008                     	;# 
  1364     0009                     	;# 
  1365     000A                     	;# 
  1366     000B                     	;# 
  1367     000C                     	;# 
  1368     000D                     	;# 
  1369     0011                     	;# 
  1370     0012                     	;# 
  1371     0013                     	;# 
  1372     0014                     	;# 
  1373     0015                     	;# 
  1374     0016                     	;# 
  1375     0016                     	;# 
  1376     0017                     	;# 
  1377     0018                     	;# 
  1378     0019                     	;# 
  1379     001A                     	;# 
  1380     001B                     	;# 
  1381     001C                     	;# 
  1382     001E                     	;# 
  1383     001F                     	;# 
  1384     008C                     	;# 
  1385     008D                     	;# 
  1386     0091                     	;# 
  1387     0092                     	;# 
  1388     0093                     	;# 
  1389     0094                     	;# 
  1390     0095                     	;# 
  1391     0096                     	;# 
  1392     0097                     	;# 
  1393     0098                     	;# 
  1394     0099                     	;# 
  1395     009A                     	;# 
  1396     009B                     	;# 
  1397     009B                     	;# 
  1398     009C                     	;# 
  1399     009D                     	;# 
  1400     009E                     	;# 
  1401     010C                     	;# 
  1402     010D                     	;# 
  1403     0111                     	;# 
  1404     0112                     	;# 
  1405     0113                     	;# 
  1406     0114                     	;# 
  1407     0115                     	;# 
  1408     0116                     	;# 
  1409     0117                     	;# 
  1410     0118                     	;# 
  1411     0119                     	;# 
  1412     011A                     	;# 
  1413     011B                     	;# 
  1414     011D                     	;# 
  1415     011E                     	;# 
  1416     018C                     	;# 
  1417     018D                     	;# 
  1418     0191                     	;# 
  1419     0191                     	;# 
  1420     0192                     	;# 
  1421     0193                     	;# 
  1422     0193                     	;# 
  1423     0193                     	;# 
  1424     0194                     	;# 
  1425     0195                     	;# 
  1426     0196                     	;# 
  1427     0199                     	;# 
  1428     019A                     	;# 
  1429     019B                     	;# 
  1430     019B                     	;# 
  1431     019B                     	;# 
  1432     019B                     	;# 
  1433     019C                     	;# 
  1434     019C                     	;# 
  1435     019D                     	;# 
  1436     019E                     	;# 
  1437     019F                     	;# 
  1438     020C                     	;# 
  1439     020D                     	;# 
  1440     0211                     	;# 
  1441     0211                     	;# 
  1442     0212                     	;# 
  1443     0212                     	;# 
  1444     0213                     	;# 
  1445     0213                     	;# 
  1446     0214                     	;# 
  1447     0214                     	;# 
  1448     0215                     	;# 
  1449     0215                     	;# 
  1450     0215                     	;# 
  1451     0216                     	;# 
  1452     0216                     	;# 
  1453     0217                     	;# 
  1454     0217                     	;# 
  1455     0219                     	;# 
  1456     021A                     	;# 
  1457     021B                     	;# 
  1458     021C                     	;# 
  1459     021D                     	;# 
  1460     021E                     	;# 
  1461     021F                     	;# 
  1462     0291                     	;# 
  1463     0291                     	;# 
  1464     0292                     	;# 
  1465     0293                     	;# 
  1466     0294                     	;# 
  1467     0295                     	;# 
  1468     0295                     	;# 
  1469     0296                     	;# 
  1470     0298                     	;# 
  1471     0298                     	;# 
  1472     0299                     	;# 
  1473     029A                     	;# 
  1474     029B                     	;# 
  1475     029C                     	;# 
  1476     029C                     	;# 
  1477     029D                     	;# 
  1478     029E                     	;# 
  1479     029E                     	;# 
  1480     0311                     	;# 
  1481     0311                     	;# 
  1482     0312                     	;# 
  1483     0313                     	;# 
  1484     0318                     	;# 
  1485     0318                     	;# 
  1486     0319                     	;# 
  1487     031A                     	;# 
  1488     0394                     	;# 
  1489     0395                     	;# 
  1490     0396                     	;# 
  1491     039A                     	;# 
  1492     039C                     	;# 
  1493     039D                     	;# 
  1494     039E                     	;# 
  1495     039F                     	;# 
  1496     0415                     	;# 
  1497     0416                     	;# 
  1498     0417                     	;# 
  1499     041C                     	;# 
  1500     041D                     	;# 
  1501     041E                     	;# 
  1502     0FE4                     	;# 
  1503     0FE5                     	;# 
  1504     0FE6                     	;# 
  1505     0FE7                     	;# 
  1506     0FE8                     	;# 
  1507     0FE9                     	;# 
  1508     0FEA                     	;# 
  1509     0FEB                     	;# 
  1510     0FED                     	;# 
  1511     0FEE                     	;# 
  1512     0FEF                     	;# 
  1513     0000                     	;# 
  1514     0001                     	;# 
  1515     0002                     	;# 
  1516     0003                     	;# 
  1517     0004                     	;# 
  1518     0005                     	;# 
  1519     0006                     	;# 
  1520     0007                     	;# 
  1521     0008                     	;# 
  1522     0009                     	;# 
  1523     000A                     	;# 
  1524     000B                     	;# 
  1525     000C                     	;# 
  1526     000D                     	;# 
  1527     0011                     	;# 
  1528     0012                     	;# 
  1529     0013                     	;# 
  1530     0014                     	;# 
  1531     0015                     	;# 
  1532     0016                     	;# 
  1533     0016                     	;# 
  1534     0017                     	;# 
  1535     0018                     	;# 
  1536     0019                     	;# 
  1537     001A                     	;# 
  1538     001B                     	;# 
  1539     001C                     	;# 
  1540     001E                     	;# 
  1541     001F                     	;# 
  1542     008C                     	;# 
  1543     008D                     	;# 
  1544     0091                     	;# 
  1545     0092                     	;# 
  1546     0093                     	;# 
  1547     0094                     	;# 
  1548     0095                     	;# 
  1549     0096                     	;# 
  1550     0097                     	;# 
  1551     0098                     	;# 
  1552     0099                     	;# 
  1553     009A                     	;# 
  1554     009B                     	;# 
  1555     009B                     	;# 
  1556     009C                     	;# 
  1557     009D                     	;# 
  1558     009E                     	;# 
  1559     010C                     	;# 
  1560     010D                     	;# 
  1561     0111                     	;# 
  1562     0112                     	;# 
  1563     0113                     	;# 
  1564     0114                     	;# 
  1565     0115                     	;# 
  1566     0116                     	;# 
  1567     0117                     	;# 
  1568     0118                     	;# 
  1569     0119                     	;# 
  1570     011A                     	;# 
  1571     011B                     	;# 
  1572     011D                     	;# 
  1573     011E                     	;# 
  1574     018C                     	;# 
  1575     018D                     	;# 
  1576     0191                     	;# 
  1577     0191                     	;# 
  1578     0192                     	;# 
  1579     0193                     	;# 
  1580     0193                     	;# 
  1581     0193                     	;# 
  1582     0194                     	;# 
  1583     0195                     	;# 
  1584     0196                     	;# 
  1585     0199                     	;# 
  1586     019A                     	;# 
  1587     019B                     	;# 
  1588     019B                     	;# 
  1589     019B                     	;# 
  1590     019B                     	;# 
  1591     019C                     	;# 
  1592     019C                     	;# 
  1593     019D                     	;# 
  1594     019E                     	;# 
  1595     019F                     	;# 
  1596     020C                     	;# 
  1597     020D                     	;# 
  1598     0211                     	;# 
  1599     0211                     	;# 
  1600     0212                     	;# 
  1601     0212                     	;# 
  1602     0213                     	;# 
  1603     0213                     	;# 
  1604     0214                     	;# 
  1605     0214                     	;# 
  1606     0215                     	;# 
  1607     0215                     	;# 
  1608     0215                     	;# 
  1609     0216                     	;# 
  1610     0216                     	;# 
  1611     0217                     	;# 
  1612     0217                     	;# 
  1613     0219                     	;# 
  1614     021A                     	;# 
  1615     021B                     	;# 
  1616     021C                     	;# 
  1617     021D                     	;# 
  1618     021E                     	;# 
  1619     021F                     	;# 
  1620     0291                     	;# 
  1621     0291                     	;# 
  1622     0292                     	;# 
  1623     0293                     	;# 
  1624     0294                     	;# 
  1625     0295                     	;# 
  1626     0295                     	;# 
  1627     0296                     	;# 
  1628     0298                     	;# 
  1629     0298                     	;# 
  1630     0299                     	;# 
  1631     029A                     	;# 
  1632     029B                     	;# 
  1633     029C                     	;# 
  1634     029C                     	;# 
  1635     029D                     	;# 
  1636     029E                     	;# 
  1637     029E                     	;# 
  1638     0311                     	;# 
  1639     0311                     	;# 
  1640     0312                     	;# 
  1641     0313                     	;# 
  1642     0318                     	;# 
  1643     0318                     	;# 
  1644     0319                     	;# 
  1645     031A                     	;# 
  1646     0394                     	;# 
  1647     0395                     	;# 
  1648     0396                     	;# 
  1649     039A                     	;# 
  1650     039C                     	;# 
  1651     039D                     	;# 
  1652     039E                     	;# 
  1653     039F                     	;# 
  1654     0415                     	;# 
  1655     0416                     	;# 
  1656     0417                     	;# 
  1657     041C                     	;# 
  1658     041D                     	;# 
  1659     041E                     	;# 
  1660     0FE4                     	;# 
  1661     0FE5                     	;# 
  1662     0FE6                     	;# 
  1663     0FE7                     	;# 
  1664     0FE8                     	;# 
  1665     0FE9                     	;# 
  1666     0FEA                     	;# 
  1667     0FEB                     	;# 
  1668     0FED                     	;# 
  1669     0FEE                     	;# 
  1670     0FEF                     	;# 
  1671     0000                     	;# 
  1672     0001                     	;# 
  1673     0002                     	;# 
  1674     0003                     	;# 
  1675     0004                     	;# 
  1676     0005                     	;# 
  1677     0006                     	;# 
  1678     0007                     	;# 
  1679     0008                     	;# 
  1680     0009                     	;# 
  1681     000A                     	;# 
  1682     000B                     	;# 
  1683     000C                     	;# 
  1684     000D                     	;# 
  1685     0011                     	;# 
  1686     0012                     	;# 
  1687     0013                     	;# 
  1688     0014                     	;# 
  1689     0015                     	;# 
  1690     0016                     	;# 
  1691     0016                     	;# 
  1692     0017                     	;# 
  1693     0018                     	;# 
  1694     0019                     	;# 
  1695     001A                     	;# 
  1696     001B                     	;# 
  1697     001C                     	;# 
  1698     001E                     	;# 
  1699     001F                     	;# 
  1700     008C                     	;# 
  1701     008D                     	;# 
  1702     0091                     	;# 
  1703     0092                     	;# 
  1704     0093                     	;# 
  1705     0094                     	;# 
  1706     0095                     	;# 
  1707     0096                     	;# 
  1708     0097                     	;# 
  1709     0098                     	;# 
  1710     0099                     	;# 
  1711     009A                     	;# 
  1712     009B                     	;# 
  1713     009B                     	;# 
  1714     009C                     	;# 
  1715     009D                     	;# 
  1716     009E                     	;# 
  1717     010C                     	;# 
  1718     010D                     	;# 
  1719     0111                     	;# 
  1720     0112                     	;# 
  1721     0113                     	;# 
  1722     0114                     	;# 
  1723     0115                     	;# 
  1724     0116                     	;# 
  1725     0117                     	;# 
  1726     0118                     	;# 
  1727     0119                     	;# 
  1728     011A                     	;# 
  1729     011B                     	;# 
  1730     011D                     	;# 
  1731     011E                     	;# 
  1732     018C                     	;# 
  1733     018D                     	;# 
  1734     0191                     	;# 
  1735     0191                     	;# 
  1736     0192                     	;# 
  1737     0193                     	;# 
  1738     0193                     	;# 
  1739     0193                     	;# 
  1740     0194                     	;# 
  1741     0195                     	;# 
  1742     0196                     	;# 
  1743     0199                     	;# 
  1744     019A                     	;# 
  1745     019B                     	;# 
  1746     019B                     	;# 
  1747     019B                     	;# 
  1748     019B                     	;# 
  1749     019C                     	;# 
  1750     019C                     	;# 
  1751     019D                     	;# 
  1752     019E                     	;# 
  1753     019F                     	;# 
  1754     020C                     	;# 
  1755     020D                     	;# 
  1756     0211                     	;# 
  1757     0211                     	;# 
  1758     0212                     	;# 
  1759     0212                     	;# 
  1760     0213                     	;# 
  1761     0213                     	;# 
  1762     0214                     	;# 
  1763     0214                     	;# 
  1764     0215                     	;# 
  1765     0215                     	;# 
  1766     0215                     	;# 
  1767     0216                     	;# 
  1768     0216                     	;# 
  1769     0217                     	;# 
  1770     0217                     	;# 
  1771     0219                     	;# 
  1772     021A                     	;# 
  1773     021B                     	;# 
  1774     021C                     	;# 
  1775     021D                     	;# 
  1776     021E                     	;# 
  1777     021F                     	;# 
  1778     0291                     	;# 
  1779     0291                     	;# 
  1780     0292                     	;# 
  1781     0293                     	;# 
  1782     0294                     	;# 
  1783     0295                     	;# 
  1784     0295                     	;# 
  1785     0296                     	;# 
  1786     0298                     	;# 
  1787     0298                     	;# 
  1788     0299                     	;# 
  1789     029A                     	;# 
  1790     029B                     	;# 
  1791     029C                     	;# 
  1792     029C                     	;# 
  1793     029D                     	;# 
  1794     029E                     	;# 
  1795     029E                     	;# 
  1796     0311                     	;# 
  1797     0311                     	;# 
  1798     0312                     	;# 
  1799     0313                     	;# 
  1800     0318                     	;# 
  1801     0318                     	;# 
  1802     0319                     	;# 
  1803     031A                     	;# 
  1804     0394                     	;# 
  1805     0395                     	;# 
  1806     0396                     	;# 
  1807     039A                     	;# 
  1808     039C                     	;# 
  1809     039D                     	;# 
  1810     039E                     	;# 
  1811     039F                     	;# 
  1812     0415                     	;# 
  1813     0416                     	;# 
  1814     0417                     	;# 
  1815     041C                     	;# 
  1816     041D                     	;# 
  1817     041E                     	;# 
  1818     0FE4                     	;# 
  1819     0FE5                     	;# 
  1820     0FE6                     	;# 
  1821     0FE7                     	;# 
  1822     0FE8                     	;# 
  1823     0FE9                     	;# 
  1824     0FEA                     	;# 
  1825     0FEB                     	;# 
  1826     0FED                     	;# 
  1827     0FEE                     	;# 
  1828     0FEF                     	;# 
  1829                           
  1830 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  1831     0000                     
  1832 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  1833     0000                     
  1834 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  1835     0000                     
  1836                           	psect	idataBANK1
  1837     0DBC                     __pidataBANK1:
  1838                           
  1839                           ;initializer for _mapping
  1840     0DBC  340B               	retlw	11
  1841     0DBD  340F               	retlw	15
  1842     0DBE  3403               	retlw	3
  1843     0DBF  3404               	retlw	4
  1844     0DC0  3405               	retlw	5
  1845     0DC1  3401               	retlw	1
  1846     0DC2  340D               	retlw	13
  1847     0DC3  340C               	retlw	12
  1848                           
  1849                           	psect	stringtext1
  1850     0800                     __pstringtext1:
  1851     0800                     _de_sigmoidValues:
  1852     0800  3440               	retlw	64
  1853     0801  3432               	retlw	50
  1854     0802  341B               	retlw	27
  1855     0803  340C               	retlw	12
  1856     0804  3405               	retlw	5
  1857     0805  3402               	retlw	2
  1858     0806  3401               	retlw	1
  1859     0807  3400               	retlw	0
  1860     0808  3400               	retlw	0
  1861     0809  3400               	retlw	0
  1862     080A  3401               	retlw	1
  1863     080B  3402               	retlw	2
  1864     080C  3405               	retlw	5
  1865     080D  340C               	retlw	12
  1866     080E  341B               	retlw	27
  1867     080F  3432               	retlw	50
  1868     0810                     __end_of_de_sigmoidValues:
  1869                           
  1870                           	psect	stringtext2
  1871     0810                     __pstringtext2:
  1872     0810                     _sigmoidValues:
  1873     0810  3480               	retlw	128
  1874     0811  34BA               	retlw	186
  1875     0812  34E1               	retlw	225
  1876     0813  34F3               	retlw	243
  1877     0814  34FA               	retlw	250
  1878     0815  34FD               	retlw	253
  1879     0816  34FE               	retlw	254
  1880     0817  34FF               	retlw	255
  1881     0818  3400               	retlw	0
  1882     0819  3400               	retlw	0
  1883     081A  3401               	retlw	1
  1884     081B  3402               	retlw	2
  1885     081C  3405               	retlw	5
  1886     081D  340C               	retlw	12
  1887     081E  341E               	retlw	30
  1888     081F  3445               	retlw	69
  1889     0820                     __end_of_sigmoidValues:
  1890                           
  1891                           	psect	stringtext3
  1892     0820                     __pstringtext3:
  1893     0820                     _spi1_configuration:
  1894     0820  3402               	retlw	2
  1895     0821  3440               	retlw	64
  1896     0822  3401               	retlw	1
  1897     0823  3400               	retlw	0
  1898     0824                     __end_of_spi1_configuration:
  1899                           
  1900                           	psect	nvBANK1
  1901     00E8                     __pnvBANK1:
  1902     00E8                     _EUSART_ErrorHandler:
  1903     00E8                     	ds	2
  1904     00EA                     _EUSART_OverrunErrorHandler:
  1905     00EA                     	ds	2
  1906     00EC                     _EUSART_FramingErrorHandler:
  1907     00EC                     	ds	2
  1908     0011                     _PIR1bits	set	17
  1909     000B                     _INTCONbits	set	11
  1910     008C                     _TRISAbits	set	140
  1911     0097                     _WDTCON	set	151
  1912     0098                     _OSCTUNE	set	152
  1913     0099                     _OSCCON	set	153
  1914     008D                     _TRISBbits	set	141
  1915     0095                     _OPTION_REGbits	set	149
  1916     008D                     _TRISB	set	141
  1917     008C                     _TRISA	set	140
  1918     010D                     _LATBbits	set	269
  1919     010C                     _LATAbits	set	268
  1920     0116                     _BORCON	set	278
  1921     011E                     _APFCON1	set	286
  1922     011D                     _APFCON0	set	285
  1923     010D                     _LATB	set	269
  1924     010C                     _LATA	set	268
  1925     018C                     _ANSELA	set	396
  1926     018D                     _ANSELB	set	397
  1927     019A                     _TXREG	set	410
  1928     0199                     _RCREG	set	409
  1929     019D                     _RCSTAbits	set	413
  1930     019E                     _TXSTAbits	set	414
  1931     019C                     _SPBRGH	set	412
  1932     019B                     _SPBRGL	set	411
  1933     019E                     _TXSTA	set	414
  1934     019D                     _RCSTA	set	413
  1935     019F                     _BAUDCON	set	415
  1936     0196                     _EECON2	set	406
  1937     0193                     _EEDATL	set	403
  1938     0194                     _EEDATH	set	404
  1939     0195                     _EECON1bits	set	405
  1940     0192                     _EEADRH	set	402
  1941     0191                     _EEADRL	set	401
  1942     0211                     _SSP1BUF	set	529
  1943     0216                     _SSP1CON2	set	534
  1944     0215                     _SSP1CON1bits	set	533
  1945     0212                     _SSP1ADD	set	530
  1946     0215                     _SSP1CON1	set	533
  1947     0214                     _SSP1STAT	set	532
  1948     020C                     _WPUA	set	524
  1949     020D                     _WPUB	set	525
  1950                           
  1951                           	psect	cinit
  1952     07D1                     start_initialization:	
  1953                           ; #config settings
  1954                           
  1955     07D1                     __initialization:
  1956                           
  1957                           ; Initialize objects allocated to BANK1
  1958     07D1  30BC               	movlw	low __pidataBANK1
  1959     07D2  0084               	movwf	4
  1960     07D3  308D               	movlw	(high __pidataBANK1)| (0+128)
  1961     07D4  0085               	movwf	5
  1962     07D5  30E0               	movlw	low __pdataBANK1
  1963     07D6  0086               	movwf	6
  1964     07D7  3000               	movlw	high __pdataBANK1
  1965     07D8  0087               	movwf	7
  1966     07D9  3008               	movlw	8
  1967     07DA  318D  25AF  3187   	fcall	init_ram
  1968                           
  1969                           ; Clear objects allocated to BANK0
  1970     07DD  3049               	movlw	low __pbssBANK0
  1971     07DE  0084               	movwf	4
  1972     07DF  3000               	movlw	high __pbssBANK0
  1973     07E0  0085               	movwf	5
  1974     07E1  3026               	movlw	38
  1975     07E2  318D  25A9  3187   	fcall	clear_ram0
  1976                           
  1977                           ; Clear objects allocated to BANK1
  1978     07E5  30A0               	movlw	low __pbssBANK1
  1979     07E6  0084               	movwf	4
  1980     07E7  3000               	movlw	high __pbssBANK1
  1981     07E8  0085               	movwf	5
  1982     07E9  3040               	movlw	64
  1983     07EA  318D  25A9  3187   	fcall	clear_ram0
  1984                           
  1985                           ; Clear objects allocated to BANK2
  1986     07ED  3020               	movlw	low __pbssBANK2
  1987     07EE  0084               	movwf	4
  1988     07EF  3001               	movlw	high __pbssBANK2
  1989     07F0  0085               	movwf	5
  1990     07F1  3050               	movlw	80
  1991     07F2  318D  25A9  3187   	fcall	clear_ram0
  1992                           
  1993                           ; Clear objects allocated to BANK3
  1994     07F5  30A0               	movlw	low __pbssBANK3
  1995     07F6  0084               	movwf	4
  1996     07F7  3001               	movlw	high __pbssBANK3
  1997     07F8  0085               	movwf	5
  1998     07F9  3040               	movlw	64
  1999     07FA  318D  25A9  3187   	fcall	clear_ram0
  2000     07FD                     end_of_initialization:	
  2001                           ;End of C runtime variable initialization code
  2002                           
  2003     07FD                     __end_of__initialization:
  2004     07FD  0020               	movlb	0
  2005     07FE  3183  2B57         	ljmp	_main	;jump to C main() function
  2006                           
  2007                           	psect	bssBANK0
  2008     0049                     __pbssBANK0:
  2009     0049                     _DC_DZ2:
  2010     0049                     	ds	4
  2011     004D                     _Z2:
  2012     004D                     	ds	4
  2013     0051                     _Z1:
  2014     0051                     	ds	4
  2015     0055                     _Y2:
  2016     0055                     	ds	4
  2017     0059                     _Y1:
  2018     0059                     	ds	4
  2019     005D                     _remainingMoves:
  2020     005D                     	ds	1
  2021     005E                     _foodPosition:
  2022     005E                     	ds	1
  2023     005F                     _headPosition:
  2024     005F                     	ds	1
  2025     0060                     _choice:
  2026     0060                     	ds	1
  2027     0061                     _snakeSize:
  2028     0061                     	ds	1
  2029     0062                     _eusartRxLastError:
  2030     0062                     	ds	1
  2031     0063                     _Y0:
  2032     0063                     	ds	8
  2033     006B                     _seed:
  2034     006B                     	ds	4
  2035                           
  2036                           	psect	bssBANK1
  2037     00A0                     __pbssBANK1:
  2038     00A0                     _matrix:
  2039     00A0                     	ds	8
  2040     00A8                     _DC_DB1:
  2041     00A8                     	ds	4
  2042     00AC                     _DC_DZ1:
  2043     00AC                     	ds	4
  2044     00B0                     _DC_DY1:
  2045     00B0                     	ds	4
  2046     00B4                     _DC_DB2:
  2047     00B4                     	ds	4
  2048     00B8                     _DZ2_DB2:
  2049     00B8                     	ds	4
  2050     00BC                     _DZ1_DB1:
  2051     00BC                     	ds	4
  2052     00C0                     _DZ2_DY1:
  2053     00C0                     	ds	4
  2054     00C4                     _DC_DY2:
  2055     00C4                     	ds	4
  2056     00C8                     _B2:
  2057     00C8                     	ds	4
  2058     00CC                     _B1:
  2059     00CC                     	ds	4
  2060     00D0                     _field:
  2061     00D0                     	ds	16
  2062                           
  2063                           	psect	dataBANK1
  2064     00E0                     __pdataBANK1:
  2065     00E0                     _mapping:
  2066     00E0                     	ds	8
  2067                           
  2068                           	psect	bssBANK2
  2069     0120                     __pbssBANK2:
  2070     0120                     _W1:
  2071     0120                     	ds	32
  2072     0140                     _DC_DW2:
  2073     0140                     	ds	16
  2074     0150                     _DZ2_DW2:
  2075     0150                     	ds	16
  2076     0160                     _W2:
  2077     0160                     	ds	16
  2078                           
  2079                           	psect	bssBANK3
  2080     01A0                     __pbssBANK3:
  2081     01A0                     _DC_DW1:
  2082     01A0                     	ds	32
  2083     01C0                     _DZ1_DW1:
  2084     01C0                     	ds	32
  2085                           
  2086                           	psect	inittext
  2087     0DAF                     init_ram:
  2088     0DAF  00FE               	movwf	btemp
  2089     0DB0                     initloop:
  2090     0DB0  0012               	moviw fsr0++
  2091     0DB1  001E               	movwi fsr1++
  2092     0DB2  0BFE               	decfsz	btemp,f
  2093     0DB3  2DB0               	goto	initloop
  2094     0DB4  3400               	retlw	0
  2095                           
  2096                           	psect	clrtext
  2097     0DA9                     clear_ram0:	
  2098                           ;	Called with FSR0 containing the base address, and
  2099                           ;	WREG with the size to clear
  2100                           
  2101     0DA9  0064               	clrwdt	;clear the watchdog before getting into this loop
  2102     0DAA                     clrloop0:
  2103     0DAA  0180               	clrf	0	;clear RAM location pointed to by FSR
  2104     0DAB  3101               	addfsr 0,1
  2105     0DAC  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2106     0DAD  2DAA               	goto	clrloop0	;have we reached the end yet?
  2107     0DAE  3400               	retlw	0	;all done for this memory range, return
  2108                           
  2109                           	psect	cstackCOMMON
  2110     0070                     __pcstackCOMMON:
  2111     0070                     ?_EUSART_SetFramingErrorHandler:
  2112     0070                     ?_EUSART_SetOverrunErrorHandler:	
  2113                           ; 1 bytes @ 0x0
  2114                           
  2115     0070                     ?_EUSART_SetErrorHandler:	
  2116                           ; 1 bytes @ 0x0
  2117                           
  2118     0070                     ?_OSCILLATOR_Initialize:	
  2119                           ; 1 bytes @ 0x0
  2120                           
  2121     0070                     ??_OSCILLATOR_Initialize:	
  2122                           ; 1 bytes @ 0x0
  2123                           
  2124     0070                     ?_WDT_Initialize:	
  2125                           ; 1 bytes @ 0x0
  2126                           
  2127     0070                     ??_WDT_Initialize:	
  2128                           ; 1 bytes @ 0x0
  2129                           
  2130     0070                     ?_snake_initiate:	
  2131                           ; 1 bytes @ 0x0
  2132                           
  2133     0070                     ?_ai_initiate:	
  2134                           ; 1 bytes @ 0x0
  2135                           
  2136     0070                     ?_initMAX7219:	
  2137                           ; 1 bytes @ 0x0
  2138                           
  2139     0070                     ?_snake_getField:	
  2140                           ; 1 bytes @ 0x0
  2141                           
  2142     0070                     ??_snake_getField:	
  2143                           ; 1 bytes @ 0x0
  2144                           
  2145     0070                     ?_ledClear:	
  2146                           ; 1 bytes @ 0x0
  2147                           
  2148     0070                     ?_snake_getFoodPosition:	
  2149                           ; 1 bytes @ 0x0
  2150                           
  2151     0070                     ??_snake_getFoodPosition:	
  2152                           ; 1 bytes @ 0x0
  2153                           
  2154     0070                     ?_sendMatrix:	
  2155                           ; 1 bytes @ 0x0
  2156                           
  2157     0070                     ?_snake_getSurroundings:	
  2158                           ; 1 bytes @ 0x0
  2159                           
  2160     0070                     ?_ai_getInputField:	
  2161                           ; 1 bytes @ 0x0
  2162                           
  2163     0070                     ??_ai_getInputField:	
  2164                           ; 1 bytes @ 0x0
  2165                           
  2166     0070                     ?_ai_run:	
  2167                           ; 1 bytes @ 0x0
  2168                           
  2169     0070                     ?_snake_move:	
  2170                           ; 1 bytes @ 0x0
  2171                           
  2172     0070                     ?_ai_propagate:	
  2173                           ; 1 bytes @ 0x0
  2174                           
  2175     0070                     ?_srand:	
  2176                           ; 1 bytes @ 0x0
  2177                           
  2178     0070                     ?_sigmoid:	
  2179                           ; 1 bytes @ 0x0
  2180                           
  2181     0070                     ??_sigmoid:	
  2182                           ; 1 bytes @ 0x0
  2183                           
  2184     0070                     ?_de_sigmoid:	
  2185                           ; 1 bytes @ 0x0
  2186                           
  2187     0070                     ??_de_sigmoid:	
  2188                           ; 1 bytes @ 0x0
  2189                           
  2190     0070                     ?_EUSART_Initialize:	
  2191                           ; 1 bytes @ 0x0
  2192                           
  2193     0070                     ?_PIN_MANAGER_Initialize:	
  2194                           ; 1 bytes @ 0x0
  2195                           
  2196     0070                     ??_PIN_MANAGER_Initialize:	
  2197                           ; 1 bytes @ 0x0
  2198                           
  2199     0070                     ?_SPI1_Initialize:	
  2200                           ; 1 bytes @ 0x0
  2201                           
  2202     0070                     ??_SPI1_Initialize:	
  2203                           ; 1 bytes @ 0x0
  2204                           
  2205     0070                     ?_SPI1_WriteByte:	
  2206                           ; 1 bytes @ 0x0
  2207                           
  2208     0070                     ??_SPI1_WriteByte:	
  2209                           ; 1 bytes @ 0x0
  2210                           
  2211     0070                     ?_SYSTEM_Initialize:	
  2212                           ; 1 bytes @ 0x0
  2213                           
  2214     0070                     ?_deactivateElevator:	
  2215                           ; 1 bytes @ 0x0
  2216                           
  2217     0070                     ??_deactivateElevator:	
  2218                           ; 1 bytes @ 0x0
  2219                           
  2220     0070                     ?_main:	
  2221                           ; 1 bytes @ 0x0
  2222                           
  2223     0070                     ?___lmul:	
  2224                           ; 1 bytes @ 0x0
  2225                           
  2226     0070                     SPI1_WriteByte@byte:	
  2227                           ; 4 bytes @ 0x0
  2228                           
  2229     0070                     ledClear@c:	
  2230                           ; 1 bytes @ 0x0
  2231                           
  2232     0070                     EUSART_SetFramingErrorHandler@interruptHandler:	
  2233                           ; 1 bytes @ 0x0
  2234                           
  2235     0070                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  2236                           ; 2 bytes @ 0x0
  2237                           
  2238     0070                     EUSART_SetErrorHandler@interruptHandler:	
  2239                           ; 2 bytes @ 0x0
  2240                           
  2241     0070                     srand@s:	
  2242                           ; 2 bytes @ 0x0
  2243                           
  2244     0070                     ___lmul@multiplier:	
  2245                           ; 2 bytes @ 0x0
  2246                           
  2247                           
  2248                           ; 4 bytes @ 0x0
  2249     0070                     	ds	1
  2250     0071                     ??_ledClear:
  2251     0071                     ?_txMAX7219:	
  2252                           ; 1 bytes @ 0x1
  2253                           
  2254     0071                     txMAX7219@dat0:	
  2255                           ; 1 bytes @ 0x1
  2256                           
  2257     0071                     sigmoid@z:	
  2258                           ; 1 bytes @ 0x1
  2259                           
  2260     0071                     de_sigmoid@z:	
  2261                           ; 1 bytes @ 0x1
  2262                           
  2263                           
  2264                           ; 1 bytes @ 0x1
  2265     0071                     	ds	1
  2266     0072                     ??_EUSART_SetFramingErrorHandler:
  2267     0072                     ??_EUSART_SetOverrunErrorHandler:	
  2268                           ; 1 bytes @ 0x2
  2269                           
  2270     0072                     ??_EUSART_SetErrorHandler:	
  2271                           ; 1 bytes @ 0x2
  2272                           
  2273     0072                     ??_srand:	
  2274                           ; 1 bytes @ 0x2
  2275                           
  2276     0072                     ??_EUSART_Initialize:	
  2277                           ; 1 bytes @ 0x2
  2278                           
  2279     0072                     ??_SYSTEM_Initialize:	
  2280                           ; 1 bytes @ 0x2
  2281                           
  2282     0072                     ??_txMAX7219:	
  2283                           ; 1 bytes @ 0x2
  2284                           
  2285     0072                     ?___awdiv:	
  2286                           ; 1 bytes @ 0x2
  2287                           
  2288     0072                     txMAX7219@addr0:	
  2289                           ; 2 bytes @ 0x2
  2290                           
  2291     0072                     ___awdiv@divisor:	
  2292                           ; 1 bytes @ 0x2
  2293                           
  2294                           
  2295                           ; 2 bytes @ 0x2
  2296     0072                     	ds	1
  2297     0073                     ??_initMAX7219:
  2298     0073                     ??_sendMatrix:	
  2299                           ; 1 bytes @ 0x3
  2300                           
  2301     0073                     ledClear@l:	
  2302                           ; 1 bytes @ 0x3
  2303                           
  2304                           
  2305                           ; 1 bytes @ 0x3
  2306     0073                     	ds	1
  2307     0074                     sendMatrix@b:
  2308     0074                     ___awdiv@dividend:	
  2309                           ; 1 bytes @ 0x4
  2310                           
  2311     0074                     ___lmul@multiplicand:	
  2312                           ; 2 bytes @ 0x4
  2313                           
  2314                           
  2315                           ; 4 bytes @ 0x4
  2316     0074                     	ds	1
  2317     0075                     sendMatrix@nb:
  2318                           
  2319                           ; 1 bytes @ 0x5
  2320     0075                     	ds	1
  2321     0076                     ??___awdiv:
  2322     0076                     sendMatrix@j:	
  2323                           ; 1 bytes @ 0x6
  2324                           
  2325                           
  2326                           ; 1 bytes @ 0x6
  2327     0076                     	ds	1
  2328     0077                     sendMatrix@i:
  2329     0077                     ___awdiv@counter:	
  2330                           ; 1 bytes @ 0x7
  2331                           
  2332                           
  2333                           ; 1 bytes @ 0x7
  2334     0077                     	ds	1
  2335     0078                     ??___lmul:
  2336     0078                     ___awdiv@sign:	
  2337                           ; 1 bytes @ 0x8
  2338                           
  2339     0078                     ___lmul@product:	
  2340                           ; 1 bytes @ 0x8
  2341                           
  2342                           
  2343                           ; 4 bytes @ 0x8
  2344     0078                     	ds	1
  2345     0079                     ___awdiv@quotient:
  2346                           
  2347                           ; 2 bytes @ 0x9
  2348     0079                     	ds	2
  2349     007B                     ?_ledSet:
  2350     007B                     ??_snake_getSurroundings:	
  2351                           ; 1 bytes @ 0xB
  2352                           
  2353     007B                     ??___wmul:	
  2354                           ; 1 bytes @ 0xB
  2355                           
  2356     007B                     ledSet@c:	
  2357                           ; 1 bytes @ 0xB
  2358                           
  2359     007B                     ___wmul@product:	
  2360                           ; 1 bytes @ 0xB
  2361                           
  2362                           
  2363                           ; 2 bytes @ 0xB
  2364     007B                     	ds	1
  2365     007C                     ??_ledSet:
  2366     007C                     ?_rand:	
  2367                           ; 1 bytes @ 0xC
  2368                           
  2369                           
  2370                           ; 2 bytes @ 0xC
  2371     007C                     	ds	2
  2372                           
  2373                           	psect	cstackBANK0
  2374     0020                     __pcstackBANK0:
  2375     0020                     ??_rand:
  2376     0020                     ?___wmul:	
  2377                           ; 1 bytes @ 0x0
  2378                           
  2379     0020                     ledSet@l:	
  2380                           ; 2 bytes @ 0x0
  2381                           
  2382     0020                     snake_getSurroundings@p:	
  2383                           ; 1 bytes @ 0x0
  2384                           
  2385     0020                     ___wmul@multiplier:	
  2386                           ; 1 bytes @ 0x0
  2387                           
  2388                           
  2389                           ; 2 bytes @ 0x0
  2390     0020                     	ds	1
  2391     0021                     snake_getSurroundings@lf:
  2392                           
  2393                           ; 1 bytes @ 0x1
  2394     0021                     	ds	1
  2395     0022                     snake_getSurroundings@cf:
  2396     0022                     ___wmul@multiplicand:	
  2397                           ; 1 bytes @ 0x2
  2398                           
  2399                           
  2400                           ; 2 bytes @ 0x2
  2401     0022                     	ds	1
  2402     0023                     snake_getSurroundings@i:
  2403                           
  2404                           ; 1 bytes @ 0x3
  2405     0023                     	ds	1
  2406     0024                     ??_snake_initiate:
  2407     0024                     ??_ai_initiate:	
  2408                           ; 1 bytes @ 0x4
  2409                           
  2410     0024                     ??_ai_run:	
  2411                           ; 1 bytes @ 0x4
  2412                           
  2413     0024                     ??_ai_propagate:	
  2414                           ; 1 bytes @ 0x4
  2415                           
  2416     0024                     snake_getSurroundings@lh:	
  2417                           ; 1 bytes @ 0x4
  2418                           
  2419                           
  2420                           ; 1 bytes @ 0x4
  2421     0024                     	ds	1
  2422     0025                     snake_initiate@i:
  2423     0025                     snake_getSurroundings@ch:	
  2424                           ; 1 bytes @ 0x5
  2425                           
  2426                           
  2427                           ; 1 bytes @ 0x5
  2428     0025                     	ds	1
  2429     0026                     ??_snake_move:
  2430     0026                     snake_getSurroundings@i_804:	
  2431                           ; 1 bytes @ 0x6
  2432                           
  2433                           
  2434                           ; 1 bytes @ 0x6
  2435     0026                     	ds	1
  2436     0027                     snake_getSurroundings@surroundings:
  2437     0027                     ai_initiate@i:	
  2438                           ; 1 bytes @ 0x7
  2439                           
  2440     0027                     ai_run@i:	
  2441                           ; 1 bytes @ 0x7
  2442                           
  2443                           
  2444                           ; 1 bytes @ 0x7
  2445     0027                     	ds	1
  2446     0028                     snake_move@direction:
  2447     0028                     ai_initiate@i_870:	
  2448                           ; 1 bytes @ 0x8
  2449                           
  2450     0028                     ai_run@i_876:	
  2451                           ; 1 bytes @ 0x8
  2452                           
  2453                           
  2454                           ; 1 bytes @ 0x8
  2455     0028                     	ds	1
  2456     0029                     snake_move@incentive:
  2457     0029                     ai_initiate@j:	
  2458                           ; 1 bytes @ 0x9
  2459                           
  2460     0029                     ai_run@i_878:	
  2461                           ; 1 bytes @ 0x9
  2462                           
  2463                           
  2464                           ; 1 bytes @ 0x9
  2465     0029                     	ds	1
  2466     002A                     snake_move@i:
  2467     002A                     ai_initiate@j_869:	
  2468                           ; 1 bytes @ 0xA
  2469                           
  2470     002A                     ai_run@i_879:	
  2471                           ; 1 bytes @ 0xA
  2472                           
  2473     002A                     ai_propagate@S:	
  2474                           ; 1 bytes @ 0xA
  2475                           
  2476                           
  2477                           ; 4 bytes @ 0xA
  2478     002A                     	ds	1
  2479     002B                     ai_run@z:
  2480                           
  2481                           ; 2 bytes @ 0xB
  2482     002B                     	ds	2
  2483     002D                     ai_run@j:
  2484                           
  2485                           ; 1 bytes @ 0xD
  2486     002D                     	ds	1
  2487     002E                     ai_run@j_877:
  2488     002E                     ai_propagate@incentive:	
  2489                           ; 1 bytes @ 0xE
  2490                           
  2491                           
  2492                           ; 1 bytes @ 0xE
  2493     002E                     	ds	1
  2494     002F                     ai_propagate@i:
  2495                           
  2496                           ; 1 bytes @ 0xF
  2497     002F                     	ds	1
  2498     0030                     ai_propagate@i_884:
  2499                           
  2500                           ; 1 bytes @ 0x10
  2501     0030                     	ds	1
  2502     0031                     ai_propagate@j_886:
  2503                           
  2504                           ; 1 bytes @ 0x11
  2505     0031                     	ds	1
  2506     0032                     ai_propagate@i_891:
  2507                           
  2508                           ; 1 bytes @ 0x12
  2509     0032                     	ds	1
  2510     0033                     ai_propagate@i_893:
  2511                           
  2512                           ; 1 bytes @ 0x13
  2513     0033                     	ds	1
  2514     0034                     ai_propagate@i_895:
  2515                           
  2516                           ; 1 bytes @ 0x14
  2517     0034                     	ds	1
  2518     0035                     _ai_propagate$1579:
  2519                           
  2520                           ; 2 bytes @ 0x15
  2521     0035                     	ds	2
  2522     0037                     ai_propagate@j:
  2523                           
  2524                           ; 1 bytes @ 0x17
  2525     0037                     	ds	1
  2526     0038                     ai_propagate@i_889:
  2527                           
  2528                           ; 1 bytes @ 0x18
  2529     0038                     	ds	1
  2530     0039                     ai_propagate@j_892:
  2531                           
  2532                           ; 1 bytes @ 0x19
  2533     0039                     	ds	1
  2534     003A                     ai_propagate@j_894:
  2535                           
  2536                           ; 1 bytes @ 0x1A
  2537     003A                     	ds	1
  2538     003B                     ai_propagate@j_890:
  2539                           
  2540                           ; 1 bytes @ 0x1B
  2541     003B                     	ds	1
  2542     003C                     ai_propagate@j_888:
  2543                           
  2544                           ; 1 bytes @ 0x1C
  2545     003C                     	ds	1
  2546     003D                     ??_main:
  2547                           
  2548                           ; 1 bytes @ 0x1D
  2549     003D                     	ds	3
  2550     0040                     main@field:
  2551                           
  2552                           ; 1 bytes @ 0x20
  2553     0040                     	ds	1
  2554     0041                     main@foodPosition:
  2555                           
  2556                           ; 1 bytes @ 0x21
  2557     0041                     	ds	1
  2558     0042                     main@choice:
  2559                           
  2560                           ; 1 bytes @ 0x22
  2561     0042                     	ds	1
  2562     0043                     main@foodPosition_672:
  2563                           
  2564                           ; 1 bytes @ 0x23
  2565     0043                     	ds	1
  2566     0044                     main@incentive:
  2567                           
  2568                           ; 1 bytes @ 0x24
  2569     0044                     	ds	1
  2570     0045                     main@i:
  2571                           
  2572                           ; 1 bytes @ 0x25
  2573     0045                     	ds	1
  2574     0046                     main@j:
  2575                           
  2576                           ; 1 bytes @ 0x26
  2577     0046                     	ds	1
  2578     0047                     main@i_670:
  2579                           
  2580                           ; 1 bytes @ 0x27
  2581     0047                     	ds	1
  2582     0048                     main@j_671:
  2583                           
  2584                           ; 1 bytes @ 0x28
  2585     0048                     	ds	1
  2586                           
  2587                           	psect	maintext
  2588     0357                     __pmaintext:	
  2589 ;;
  2590 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  2591 ;;
  2592 ;; *************** function _main *****************
  2593 ;; Defined at:
  2594 ;;		line 67 in file "main.c"
  2595 ;; Parameters:    Size  Location     Type
  2596 ;;		None
  2597 ;; Auto vars:     Size  Location     Type
  2598 ;;  j               1   40[BANK0 ] unsigned char 
  2599 ;;  j               1   38[BANK0 ] unsigned char 
  2600 ;;  i               1   39[BANK0 ] unsigned char 
  2601 ;;  incentive       1   36[BANK0 ] char 
  2602 ;;  foodPosition    1   35[BANK0 ] unsigned char 
  2603 ;;  choice          1   34[BANK0 ] unsigned char 
  2604 ;;  i               1   37[BANK0 ] unsigned char 
  2605 ;;  foodPosition    1   33[BANK0 ] unsigned char 
  2606 ;;  field           1   32[BANK0 ] PTR unsigned char 
  2607 ;;		 -> field(16), 
  2608 ;; Return value:  Size  Location     Type
  2609 ;;                  1    wreg      void 
  2610 ;; Registers used:
  2611 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2612 ;; Tracked objects:
  2613 ;;		On entry : B1F/0
  2614 ;;		On exit  : 0/0
  2615 ;;		Unchanged: 0/0
  2616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2617 ;;      Params:         0       0       0       0       0       0
  2618 ;;      Locals:         0       9       0       0       0       0
  2619 ;;      Temps:          0       3       0       0       0       0
  2620 ;;      Totals:         0      12       0       0       0       0
  2621 ;;Total ram usage:       12 bytes
  2622 ;; Hardware stack levels required when called: 4
  2623 ;; This function calls:
  2624 ;;		_SYSTEM_Initialize
  2625 ;;		___awdiv
  2626 ;;		_ai_getInputField
  2627 ;;		_ai_initiate
  2628 ;;		_ai_propagate
  2629 ;;		_ai_run
  2630 ;;		_deactivateElevator
  2631 ;;		_initMAX7219
  2632 ;;		_ledClear
  2633 ;;		_ledSet
  2634 ;;		_sendMatrix
  2635 ;;		_snake_getField
  2636 ;;		_snake_getFoodPosition
  2637 ;;		_snake_getSurroundings
  2638 ;;		_snake_initiate
  2639 ;;		_snake_move
  2640 ;; This function is called by:
  2641 ;;		Startup code after reset
  2642 ;; This function uses a non-reentrant model
  2643 ;;
  2644                           
  2645     0357                     _main:	
  2646                           ;psect for function _main
  2647                           
  2648     0357                     l3139:	
  2649                           ;incstack = 0
  2650                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2651                           
  2652                           
  2653                           ;main.c: 70:     SYSTEM_Initialize();
  2654     0357  318D  25E7  3183   	fcall	_SYSTEM_Initialize
  2655     035A                     l3141:
  2656                           
  2657                           ;main.c: 87:     deactivateElevator();
  2658     035A  318D  25DA  3183   	fcall	_deactivateElevator
  2659     035D                     l3143:
  2660                           
  2661                           ;main.c: 88:     snake_initiate();
  2662     035D  318E  26CB  3183   	fcall	_snake_initiate
  2663     0360                     l3145:
  2664                           
  2665                           ;main.c: 89:     ai_initiate();
  2666     0360  3180  2018  3183   	fcall	_ai_initiate
  2667     0363                     l3147:
  2668                           
  2669                           ;main.c: 90:     initMAX7219();
  2670     0363  318F  2763  3183   	fcall	_initMAX7219
  2671     0366                     l3149:
  2672                           
  2673                           ;main.c: 103:     uint8_t* field = snake_getField();
  2674     0366  3180  2004  3183   	fcall	_snake_getField
  2675     0369  0020               	movlb	0	; select bank0
  2676     036A  00C0               	movwf	main@field
  2677     036B                     l3151:
  2678                           
  2679                           ;main.c: 105:     for(uint8_t i = 0; i < 4; i++){
  2680     036B  01C5               	clrf	main@i
  2681     036C                     l3157:
  2682                           
  2683                           ;main.c: 106:         for(uint8_t j = 0; j < 4; j++){
  2684     036C  01C6               	clrf	main@j
  2685     036D                     l3163:
  2686                           
  2687                           ;main.c: 107:             if(field[i+j*4]>0){
  2688     036D  0846               	movf	main@j,w
  2689     036E  00BD               	movwf	??_main
  2690     036F  3001               	movlw	1
  2691     0370                     u2165:
  2692     0370  35BD               	lslf	??_main,f
  2693     0371  3EFF               	addlw	-1
  2694     0372  1D03               	skipz
  2695     0373  2B70               	goto	u2165
  2696     0374  353D               	lslf	??_main,w
  2697     0375  0740               	addwf	main@field,w
  2698     0376  00BE               	movwf	??_main+1
  2699     0377  0845               	movf	main@i,w
  2700     0378  073E               	addwf	??_main+1,w
  2701     0379  00BF               	movwf	??_main+2
  2702     037A  083F               	movf	??_main+2,w
  2703     037B  0086               	movwf	6
  2704     037C  0187               	clrf	7
  2705     037D  0801               	movf	1,w
  2706     037E  1903               	btfsc	3,2
  2707     037F  2B81               	goto	u2171
  2708     0380  2B82               	goto	u2170
  2709     0381                     u2171:
  2710     0381  2B89               	goto	l3167
  2711     0382                     u2170:
  2712     0382                     l3165:
  2713                           
  2714                           ;main.c: 108:                 ledSet(i,j);
  2715     0382  0846               	movf	main@j,w
  2716     0383  00FB               	movwf	ledSet@c
  2717     0384  0845               	movf	main@i,w
  2718     0385  3180  2006  3183   	fcall	_ledSet
  2719                           
  2720                           ;main.c: 109:             } else{
  2721     0388  2B8F               	goto	l3169
  2722     0389                     l3167:
  2723                           
  2724                           ;main.c: 110:                 ledClear(i,j);
  2725     0389  0846               	movf	main@j,w
  2726     038A  00F0               	movwf	ledClear@c
  2727     038B  0845               	movf	main@i,w
  2728     038C  318E  2617  3183   	fcall	_ledClear
  2729     038F                     l3169:
  2730                           
  2731                           ;main.c: 112:         }
  2732     038F  3001               	movlw	1
  2733     0390  0020               	movlb	0	; select bank0
  2734     0391  00BD               	movwf	??_main
  2735     0392  083D               	movf	??_main,w
  2736     0393  07C6               	addwf	main@j,f
  2737     0394                     l3171:
  2738     0394  3004               	movlw	4
  2739     0395  0246               	subwf	main@j,w
  2740     0396  1C03               	skipc
  2741     0397  2B99               	goto	u2181
  2742     0398  2B9A               	goto	u2180
  2743     0399                     u2181:
  2744     0399  2B6D               	goto	l3163
  2745     039A                     u2180:
  2746     039A                     l3173:
  2747                           
  2748                           ;main.c: 113:     }
  2749     039A  3001               	movlw	1
  2750     039B  00BD               	movwf	??_main
  2751     039C  083D               	movf	??_main,w
  2752     039D  07C5               	addwf	main@i,f
  2753     039E                     l3175:
  2754     039E  3004               	movlw	4
  2755     039F  0245               	subwf	main@i,w
  2756     03A0  1C03               	skipc
  2757     03A1  2BA3               	goto	u2191
  2758     03A2  2BA4               	goto	u2190
  2759     03A3                     u2191:
  2760     03A3  2B6C               	goto	l3157
  2761     03A4                     u2190:
  2762     03A4                     l3177:
  2763                           
  2764                           ;main.c: 115:     uint8_t foodPosition = snake_getFoodPosition();
  2765     03A4  318D  258B  3183   	fcall	_snake_getFoodPosition
  2766     03A7  0020               	movlb	0	; select bank0
  2767     03A8  00C1               	movwf	main@foodPosition
  2768     03A9                     l3179:
  2769                           
  2770                           ;main.c: 116:     ledSet(foodPosition%4, foodPosition/4);
  2771     03A9  3004               	movlw	4
  2772     03AA  00F2               	movwf	___awdiv@divisor
  2773     03AB  3000               	movlw	0
  2774     03AC  00F3               	movwf	___awdiv@divisor+1
  2775     03AD  0841               	movf	main@foodPosition,w
  2776     03AE  00BD               	movwf	??_main
  2777     03AF  01BE               	clrf	??_main+1
  2778     03B0  083D               	movf	??_main,w
  2779     03B1  00F4               	movwf	___awdiv@dividend
  2780     03B2  083E               	movf	??_main+1,w
  2781     03B3  00F5               	movwf	___awdiv@dividend+1
  2782     03B4  318F  27A1  3183   	fcall	___awdiv
  2783     03B7  0872               	movf	?___awdiv,w
  2784     03B8  00FB               	movwf	ledSet@c
  2785     03B9  0020               	movlb	0	; select bank0
  2786     03BA  0841               	movf	main@foodPosition,w
  2787     03BB  3903               	andlw	3
  2788     03BC  3180  2006  3183   	fcall	_ledSet
  2789     03BF                     l3181:
  2790                           
  2791                           ;main.c: 117:     sendMatrix();
  2792     03BF  318E  269D  3183   	fcall	_sendMatrix
  2793     03C2                     l3183:
  2794                           
  2795                           ;main.c: 120:     {;main.c: 122:         _delay((unsigned long)((500)*(8000000/4000.0)))
      +                          ;
  2796     03C2  3006               	movlw	6
  2797     03C3  0020               	movlb	0	; select bank0
  2798     03C4  00BE               	movwf	??_main+1
  2799     03C5  3013               	movlw	19
  2800     03C6  00BD               	movwf	??_main
  2801     03C7  30AD               	movlw	173
  2802     03C8                     u2367:
  2803     03C8  0B89               	decfsz	9,f
  2804     03C9  2BC8               	goto	u2367
  2805     03CA  0BBD               	decfsz	??_main,f
  2806     03CB  2BC8               	goto	u2367
  2807     03CC  0BBE               	decfsz	??_main+1,f
  2808     03CD  2BC8               	goto	u2367
  2809     03CE  3200               	nop2
  2810     03CF                     l3185:
  2811                           
  2812                           ;main.c: 123:         snake_getSurroundings(ai_getInputField());
  2813     03CF  318D  2589  3183   	fcall	_ai_getInputField
  2814     03D2  3180  2086  3183   	fcall	_snake_getSurroundings
  2815     03D5                     l3187:
  2816                           
  2817                           ;main.c: 124:         uint8_t choice = ai_run();
  2818     03D5  3182  2219  3183   	fcall	_ai_run
  2819     03D8  0020               	movlb	0	; select bank0
  2820     03D9  00C2               	movwf	main@choice
  2821     03DA                     l3189:
  2822                           
  2823                           ;main.c: 125:         int8_t incentive = snake_move(choice);
  2824     03DA  0842               	movf	main@choice,w
  2825     03DB  3181  2147  3183   	fcall	_snake_move
  2826     03DE  0020               	movlb	0	; select bank0
  2827     03DF  00C4               	movwf	main@incentive
  2828     03E0                     l3191:
  2829                           
  2830                           ;main.c: 126:         ai_propagate(incentive);
  2831     03E0  0844               	movf	main@incentive,w
  2832     03E1  3185  2548  3183   	fcall	_ai_propagate
  2833     03E4                     l3193:
  2834                           
  2835                           ;main.c: 127:         for(uint8_t i = 0; i < 4; i++){
  2836     03E4  0020               	movlb	0	; select bank0
  2837     03E5  01C7               	clrf	main@i_670
  2838     03E6                     l3199:
  2839                           
  2840                           ;main.c: 128:             for(uint8_t j = 0; j < 4; j++){
  2841     03E6  01C8               	clrf	main@j_671
  2842     03E7                     l3205:
  2843                           
  2844                           ;main.c: 129:                 if(field[i+j*4]>0){
  2845     03E7  0848               	movf	main@j_671,w
  2846     03E8  00BD               	movwf	??_main
  2847     03E9  3001               	movlw	1
  2848     03EA                     u2205:
  2849     03EA  35BD               	lslf	??_main,f
  2850     03EB  3EFF               	addlw	-1
  2851     03EC  1D03               	skipz
  2852     03ED  2BEA               	goto	u2205
  2853     03EE  353D               	lslf	??_main,w
  2854     03EF  0740               	addwf	main@field,w
  2855     03F0  00BE               	movwf	??_main+1
  2856     03F1  0847               	movf	main@i_670,w
  2857     03F2  073E               	addwf	??_main+1,w
  2858     03F3  00BF               	movwf	??_main+2
  2859     03F4  083F               	movf	??_main+2,w
  2860     03F5  0086               	movwf	6
  2861     03F6  0187               	clrf	7
  2862     03F7  0801               	movf	1,w
  2863     03F8  1903               	btfsc	3,2
  2864     03F9  2BFB               	goto	u2211
  2865     03FA  2BFC               	goto	u2210
  2866     03FB                     u2211:
  2867     03FB  2C03               	goto	l3209
  2868     03FC                     u2210:
  2869     03FC                     l3207:
  2870                           
  2871                           ;main.c: 130:                     ledSet(i,j);
  2872     03FC  0848               	movf	main@j_671,w
  2873     03FD  00FB               	movwf	ledSet@c
  2874     03FE  0847               	movf	main@i_670,w
  2875     03FF  3180  2006  3183   	fcall	_ledSet
  2876                           
  2877                           ;main.c: 131:                 } else{
  2878     0402  2C09               	goto	l3211
  2879     0403                     l3209:
  2880                           
  2881                           ;main.c: 132:                     ledClear(i,j);
  2882     0403  0848               	movf	main@j_671,w
  2883     0404  00F0               	movwf	ledClear@c
  2884     0405  0847               	movf	main@i_670,w
  2885     0406  318E  2617  3183   	fcall	_ledClear
  2886     0409                     l3211:
  2887                           
  2888                           ;main.c: 134:             }
  2889     0409  3001               	movlw	1
  2890     040A  0020               	movlb	0	; select bank0
  2891     040B  00BD               	movwf	??_main
  2892     040C  083D               	movf	??_main,w
  2893     040D  07C8               	addwf	main@j_671,f
  2894     040E                     l3213:
  2895     040E  3004               	movlw	4
  2896     040F  0248               	subwf	main@j_671,w
  2897     0410  1C03               	skipc
  2898     0411  2C13               	goto	u2221
  2899     0412  2C14               	goto	u2220
  2900     0413                     u2221:
  2901     0413  2BE7               	goto	l3205
  2902     0414                     u2220:
  2903     0414                     l3215:
  2904                           
  2905                           ;main.c: 135:         }
  2906     0414  3001               	movlw	1
  2907     0415  00BD               	movwf	??_main
  2908     0416  083D               	movf	??_main,w
  2909     0417  07C7               	addwf	main@i_670,f
  2910     0418                     l3217:
  2911     0418  3004               	movlw	4
  2912     0419  0247               	subwf	main@i_670,w
  2913     041A  1C03               	skipc
  2914     041B  2C1D               	goto	u2231
  2915     041C  2C1E               	goto	u2230
  2916     041D                     u2231:
  2917     041D  2BE6               	goto	l3199
  2918     041E                     u2230:
  2919     041E                     l3219:
  2920                           
  2921                           ;main.c: 136:         ledClear(0,6);
  2922     041E  3006               	movlw	6
  2923     041F  00F0               	movwf	ledClear@c
  2924     0420  3000               	movlw	0
  2925     0421  318E  2617  3183   	fcall	_ledClear
  2926                           
  2927                           ;main.c: 137:         ledClear(2,6);
  2928     0424  3006               	movlw	6
  2929     0425  00F0               	movwf	ledClear@c
  2930     0426  3002               	movlw	2
  2931     0427  318E  2617  3183   	fcall	_ledClear
  2932                           
  2933                           ;main.c: 138:         ledClear(1,5);
  2934     042A  3005               	movlw	5
  2935     042B  00F0               	movwf	ledClear@c
  2936     042C  3001               	movlw	1
  2937     042D  318E  2617  3183   	fcall	_ledClear
  2938                           
  2939                           ;main.c: 139:         ledClear(1,7);
  2940     0430  3007               	movlw	7
  2941     0431  00F0               	movwf	ledClear@c
  2942     0432  3001               	movlw	1
  2943     0433  318E  2617  3183   	fcall	_ledClear
  2944                           
  2945                           ;main.c: 140:         ledClear(4,6);
  2946     0436  3006               	movlw	6
  2947     0437  00F0               	movwf	ledClear@c
  2948     0438  3004               	movlw	4
  2949     0439  318E  2617  3183   	fcall	_ledClear
  2950                           
  2951                           ;main.c: 141:         ledClear(6,6);
  2952     043C  3006               	movlw	6
  2953     043D  00F0               	movwf	ledClear@c
  2954     043E  3006               	movlw	6
  2955     043F  318E  2617  3183   	fcall	_ledClear
  2956                           
  2957                           ;main.c: 142:         ledClear(5,5);
  2958     0442  3005               	movlw	5
  2959     0443  00F0               	movwf	ledClear@c
  2960     0444  3005               	movlw	5
  2961     0445  318E  2617  3183   	fcall	_ledClear
  2962                           
  2963                           ;main.c: 143:         ledClear(5,7);
  2964     0448  3007               	movlw	7
  2965     0449  00F0               	movwf	ledClear@c
  2966     044A  3005               	movlw	5
  2967     044B  318E  2617  3183   	fcall	_ledClear
  2968                           
  2969                           ;main.c: 144:         ledClear(4,1);
  2970     044E  01F0               	clrf	ledClear@c
  2971     044F  0AF0               	incf	ledClear@c,f
  2972     0450  3004               	movlw	4
  2973     0451  318E  2617  3183   	fcall	_ledClear
  2974                           
  2975                           ;main.c: 145:         ledClear(6,1);
  2976     0454  01F0               	clrf	ledClear@c
  2977     0455  0AF0               	incf	ledClear@c,f
  2978     0456  3006               	movlw	6
  2979     0457  318E  2617  3183   	fcall	_ledClear
  2980                           
  2981                           ;main.c: 146:         ledClear(5,0);
  2982     045A  01F0               	clrf	ledClear@c
  2983     045B  3005               	movlw	5
  2984     045C  318E  2617  3183   	fcall	_ledClear
  2985                           
  2986                           ;main.c: 147:         ledClear(5,2);
  2987     045F  3002               	movlw	2
  2988     0460  00F0               	movwf	ledClear@c
  2989     0461  3005               	movlw	5
  2990     0462  318E  2617  3183   	fcall	_ledClear
  2991     0465                     l3221:
  2992                           
  2993                           ;main.c: 148:         if(Y0[0]>0){
  2994     0465  0020               	movlb	0	; select bank0
  2995     0466  0863               	movf	_Y0,w
  2996     0467  3A80               	xorlw	128
  2997     0468  3E7F               	addlw	-129
  2998     0469  1C03               	skipc
  2999     046A  2C6C               	goto	u2241
  3000     046B  2C6D               	goto	u2240
  3001     046C                     u2241:
  3002     046C  2C74               	goto	l3225
  3003     046D                     u2240:
  3004     046D                     l3223:
  3005                           
  3006                           ;main.c: 149:             ledSet(0,6);
  3007     046D  3006               	movlw	6
  3008     046E  00FB               	movwf	ledSet@c
  3009     046F  3000               	movlw	0
  3010     0470  3180  2006  3183   	fcall	_ledSet
  3011                           
  3012                           ;main.c: 150:         } else if(Y0[1]>0){
  3013     0473  2C81               	goto	l3229
  3014     0474                     l3225:
  3015     0474  0864               	movf	_Y0+1,w
  3016     0475  3A80               	xorlw	128
  3017     0476  3E7F               	addlw	-129
  3018     0477  1C03               	skipc
  3019     0478  2C7A               	goto	u2251
  3020     0479  2C7B               	goto	u2250
  3021     047A                     u2251:
  3022     047A  2C81               	goto	l3229
  3023     047B                     u2250:
  3024     047B                     l3227:
  3025                           
  3026                           ;main.c: 151:             ledSet(2,6);
  3027     047B  3006               	movlw	6
  3028     047C  00FB               	movwf	ledSet@c
  3029     047D  3002               	movlw	2
  3030     047E  3180  2006  3183   	fcall	_ledSet
  3031     0481                     l3229:
  3032                           
  3033                           ;main.c: 153:         if(Y0[2]>0){
  3034     0481  0020               	movlb	0	; select bank0
  3035     0482  0865               	movf	_Y0+2,w
  3036     0483  3A80               	xorlw	128
  3037     0484  3E7F               	addlw	-129
  3038     0485  1C03               	skipc
  3039     0486  2C88               	goto	u2261
  3040     0487  2C89               	goto	u2260
  3041     0488                     u2261:
  3042     0488  2C90               	goto	l3233
  3043     0489                     u2260:
  3044     0489                     l3231:
  3045                           
  3046                           ;main.c: 154:             ledSet(1,5);
  3047     0489  3005               	movlw	5
  3048     048A  00FB               	movwf	ledSet@c
  3049     048B  3001               	movlw	1
  3050     048C  3180  2006  3183   	fcall	_ledSet
  3051                           
  3052                           ;main.c: 155:         } else if(Y0[3]>0){
  3053     048F  2C9D               	goto	l3237
  3054     0490                     l3233:
  3055     0490  0866               	movf	_Y0+3,w
  3056     0491  3A80               	xorlw	128
  3057     0492  3E7F               	addlw	-129
  3058     0493  1C03               	skipc
  3059     0494  2C96               	goto	u2271
  3060     0495  2C97               	goto	u2270
  3061     0496                     u2271:
  3062     0496  2C9D               	goto	l3237
  3063     0497                     u2270:
  3064     0497                     l3235:
  3065                           
  3066                           ;main.c: 156:             ledSet(1,7);
  3067     0497  3007               	movlw	7
  3068     0498  00FB               	movwf	ledSet@c
  3069     0499  3001               	movlw	1
  3070     049A  3180  2006  3183   	fcall	_ledSet
  3071     049D                     l3237:
  3072                           
  3073                           ;main.c: 158:         if(Y0[4]>0){
  3074     049D  0020               	movlb	0	; select bank0
  3075     049E  0867               	movf	_Y0+4,w
  3076     049F  3A80               	xorlw	128
  3077     04A0  3E7F               	addlw	-129
  3078     04A1  1C03               	skipc
  3079     04A2  2CA4               	goto	u2281
  3080     04A3  2CA5               	goto	u2280
  3081     04A4                     u2281:
  3082     04A4  2CAC               	goto	l3241
  3083     04A5                     u2280:
  3084     04A5                     l3239:
  3085                           
  3086                           ;main.c: 159:             ledSet(4,6);
  3087     04A5  3006               	movlw	6
  3088     04A6  00FB               	movwf	ledSet@c
  3089     04A7  3004               	movlw	4
  3090     04A8  3180  2006  3183   	fcall	_ledSet
  3091                           
  3092                           ;main.c: 160:         } else if(Y0[5]>0){
  3093     04AB  2CB9               	goto	l3245
  3094     04AC                     l3241:
  3095     04AC  0868               	movf	_Y0+5,w
  3096     04AD  3A80               	xorlw	128
  3097     04AE  3E7F               	addlw	-129
  3098     04AF  1C03               	skipc
  3099     04B0  2CB2               	goto	u2291
  3100     04B1  2CB3               	goto	u2290
  3101     04B2                     u2291:
  3102     04B2  2CB9               	goto	l3245
  3103     04B3                     u2290:
  3104     04B3                     l3243:
  3105                           
  3106                           ;main.c: 161:             ledSet(6,6);
  3107     04B3  3006               	movlw	6
  3108     04B4  00FB               	movwf	ledSet@c
  3109     04B5  3006               	movlw	6
  3110     04B6  3180  2006  3183   	fcall	_ledSet
  3111     04B9                     l3245:
  3112                           
  3113                           ;main.c: 163:         if(Y0[6]>0){
  3114     04B9  0020               	movlb	0	; select bank0
  3115     04BA  0869               	movf	_Y0+6,w
  3116     04BB  3A80               	xorlw	128
  3117     04BC  3E7F               	addlw	-129
  3118     04BD  1C03               	skipc
  3119     04BE  2CC0               	goto	u2301
  3120     04BF  2CC1               	goto	u2300
  3121     04C0                     u2301:
  3122     04C0  2CC8               	goto	l3249
  3123     04C1                     u2300:
  3124     04C1                     l3247:
  3125                           
  3126                           ;main.c: 164:             ledSet(5,5);
  3127     04C1  3005               	movlw	5
  3128     04C2  00FB               	movwf	ledSet@c
  3129     04C3  3005               	movlw	5
  3130     04C4  3180  2006  3183   	fcall	_ledSet
  3131                           
  3132                           ;main.c: 165:         } else if(Y0[7]>0){
  3133     04C7  2CF1               	goto	l3263
  3134     04C8                     l3249:
  3135     04C8  086A               	movf	_Y0+7,w
  3136     04C9  3A80               	xorlw	128
  3137     04CA  3E7F               	addlw	-129
  3138     04CB  1C03               	skipc
  3139     04CC  2CCE               	goto	u2311
  3140     04CD  2CCF               	goto	u2310
  3141     04CE                     u2311:
  3142     04CE  2CF1               	goto	l3263
  3143     04CF                     u2310:
  3144     04CF                     l3251:
  3145                           
  3146                           ;main.c: 166:             ledSet(5,7);
  3147     04CF  3007               	movlw	7
  3148     04D0  00FB               	movwf	ledSet@c
  3149     04D1  3005               	movlw	5
  3150     04D2  3180  2006  3183   	fcall	_ledSet
  3151     04D5  2CF1               	goto	l3263
  3152     04D6                     l3253:
  3153                           
  3154                           ;main.c: 170:                 ledSet(4,1);
  3155     04D6  01FB               	clrf	ledSet@c
  3156     04D7  0AFB               	incf	ledSet@c,f
  3157     04D8  3004               	movlw	4
  3158     04D9  3180  2006  3183   	fcall	_ledSet
  3159                           
  3160                           ;main.c: 171:                 break;
  3161     04DC  2D08               	goto	l3265
  3162     04DD                     l3255:
  3163                           
  3164                           ;main.c: 173:                 ledSet(6,1);
  3165     04DD  01FB               	clrf	ledSet@c
  3166     04DE  0AFB               	incf	ledSet@c,f
  3167     04DF  3006               	movlw	6
  3168     04E0  3180  2006  3183   	fcall	_ledSet
  3169                           
  3170                           ;main.c: 174:                 break;
  3171     04E3  2D08               	goto	l3265
  3172     04E4                     l3257:
  3173                           
  3174                           ;main.c: 176:                 ledSet(5,0);
  3175     04E4  01FB               	clrf	ledSet@c
  3176     04E5  3005               	movlw	5
  3177     04E6  3180  2006  3183   	fcall	_ledSet
  3178                           
  3179                           ;main.c: 177:                 break;
  3180     04E9  2D08               	goto	l3265
  3181     04EA                     l3259:
  3182                           
  3183                           ;main.c: 179:                 ledSet(5,2);
  3184     04EA  3002               	movlw	2
  3185     04EB  00FB               	movwf	ledSet@c
  3186     04EC  3005               	movlw	5
  3187     04ED  3180  2006  3183   	fcall	_ledSet
  3188                           
  3189                           ;main.c: 180:                 break;
  3190     04F0  2D08               	goto	l3265
  3191     04F1                     l3263:
  3192     04F1  0020               	movlb	0	; select bank0
  3193     04F2  0842               	movf	main@choice,w
  3194     04F3  00BD               	movwf	??_main
  3195     04F4  01BE               	clrf	??_main+1
  3196                           
  3197                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3198                           ; Switch size 1, requested type "simple"
  3199                           ; Number of cases is 1, Range of values is 0 to 0
  3200                           ; switch strategies available:
  3201                           ; Name         Instructions Cycles
  3202                           ; simple_byte            4     3 (average)
  3203                           ; direct_byte            8     6 (fixed)
  3204                           ; jumptable            260     6 (fixed)
  3205                           ;	Chosen strategy is simple_byte
  3206     04F5  083E               	movf	??_main+1,w
  3207     04F6  3A00               	xorlw	0	; case 0
  3208     04F7  1903               	skipnz
  3209     04F8  2CFA               	goto	l3351
  3210     04F9  2D08               	goto	l3265
  3211     04FA                     l3351:
  3212                           
  3213                           ; Switch size 1, requested type "simple"
  3214                           ; Number of cases is 4, Range of values is 0 to 3
  3215                           ; switch strategies available:
  3216                           ; Name         Instructions Cycles
  3217                           ; simple_byte           13     7 (average)
  3218                           ; direct_byte           14     6 (fixed)
  3219                           ; jumptable            260     6 (fixed)
  3220                           ;	Chosen strategy is simple_byte
  3221     04FA  083D               	movf	??_main,w
  3222     04FB  3A00               	xorlw	0	; case 0
  3223     04FC  1903               	skipnz
  3224     04FD  2CD6               	goto	l3253
  3225     04FE  3A01               	xorlw	1	; case 1
  3226     04FF  1903               	skipnz
  3227     0500  2CDD               	goto	l3255
  3228     0501  3A03               	xorlw	3	; case 2
  3229     0502  1903               	skipnz
  3230     0503  2CE4               	goto	l3257
  3231     0504  3A01               	xorlw	1	; case 3
  3232     0505  1903               	skipnz
  3233     0506  2CEA               	goto	l3259
  3234     0507  2D08               	goto	l3265
  3235     0508                     l3265:
  3236                           
  3237                           ;main.c: 182:         ledClear(7,0);
  3238     0508  01F0               	clrf	ledClear@c
  3239     0509  3007               	movlw	7
  3240     050A  318E  2617  3183   	fcall	_ledClear
  3241                           
  3242                           ;main.c: 183:         ledClear(7,1);
  3243     050D  01F0               	clrf	ledClear@c
  3244     050E  0AF0               	incf	ledClear@c,f
  3245     050F  3007               	movlw	7
  3246     0510  318E  2617  3183   	fcall	_ledClear
  3247     0513                     l3267:
  3248                           
  3249                           ;main.c: 184:         if(incentive == -1){
  3250     0513  0020               	movlb	0	; select bank0
  3251     0514  0A44               	incf	main@incentive,w
  3252     0515  1D03               	btfss	3,2
  3253     0516  2D18               	goto	u2321
  3254     0517  2D19               	goto	u2320
  3255     0518                     u2321:
  3256     0518  2D1F               	goto	l3271
  3257     0519                     u2320:
  3258     0519                     l3269:
  3259                           
  3260                           ;main.c: 185:             ledSet(7,0);
  3261     0519  01FB               	clrf	ledSet@c
  3262     051A  3007               	movlw	7
  3263     051B  3180  2006  3183   	fcall	_ledSet
  3264                           
  3265                           ;main.c: 186:         } else if(incentive == 1){
  3266     051E  2D2A               	goto	l3275
  3267     051F                     l3271:
  3268     051F  0344               	decf	main@incentive,w
  3269     0520  1D03               	btfss	3,2
  3270     0521  2D23               	goto	u2331
  3271     0522  2D24               	goto	u2330
  3272     0523                     u2331:
  3273     0523  2D2A               	goto	l3275
  3274     0524                     u2330:
  3275     0524                     l3273:
  3276                           
  3277                           ;main.c: 187:             ledSet(7,1);
  3278     0524  01FB               	clrf	ledSet@c
  3279     0525  0AFB               	incf	ledSet@c,f
  3280     0526  3007               	movlw	7
  3281     0527  3180  2006  3183   	fcall	_ledSet
  3282     052A                     l3275:
  3283                           
  3284                           ;main.c: 189:         uint8_t foodPosition = snake_getFoodPosition();
  3285     052A  318D  258B  3183   	fcall	_snake_getFoodPosition
  3286     052D  0020               	movlb	0	; select bank0
  3287     052E  00C3               	movwf	main@foodPosition_672
  3288     052F                     l3277:
  3289                           
  3290                           ;main.c: 190:         ledSet(foodPosition%4, foodPosition/4);
  3291     052F  3004               	movlw	4
  3292     0530  00F2               	movwf	___awdiv@divisor
  3293     0531  3000               	movlw	0
  3294     0532  00F3               	movwf	___awdiv@divisor+1
  3295     0533  0843               	movf	main@foodPosition_672,w
  3296     0534  00BD               	movwf	??_main
  3297     0535  01BE               	clrf	??_main+1
  3298     0536  083D               	movf	??_main,w
  3299     0537  00F4               	movwf	___awdiv@dividend
  3300     0538  083E               	movf	??_main+1,w
  3301     0539  00F5               	movwf	___awdiv@dividend+1
  3302     053A  318F  27A1  3183   	fcall	___awdiv
  3303     053D  0872               	movf	?___awdiv,w
  3304     053E  00FB               	movwf	ledSet@c
  3305     053F  0020               	movlb	0	; select bank0
  3306     0540  0843               	movf	main@foodPosition_672,w
  3307     0541  3903               	andlw	3
  3308     0542  3180  2006  3183   	fcall	_ledSet
  3309     0545  2BBF               	goto	l3181
  3310     0546  3180  2802         	ljmp	start
  3311     0548                     __end_of_main:
  3312                           
  3313                           	psect	text1
  3314     0147                     __ptext1:	
  3315 ;; *************** function _snake_move *****************
  3316 ;; Defined at:
  3317 ;;		line 33 in file "snake.c"
  3318 ;; Parameters:    Size  Location     Type
  3319 ;;  direction       1    wreg     unsigned char 
  3320 ;; Auto vars:     Size  Location     Type
  3321 ;;  direction       1    8[BANK0 ] unsigned char 
  3322 ;;  i               1   10[BANK0 ] unsigned char 
  3323 ;;  incentive       1    9[BANK0 ] char 
  3324 ;; Return value:  Size  Location     Type
  3325 ;;                  1    wreg      char 
  3326 ;; Registers used:
  3327 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3328 ;; Tracked objects:
  3329 ;;		On entry : 0/0
  3330 ;;		On exit  : 0/0
  3331 ;;		Unchanged: 0/0
  3332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3333 ;;      Params:         0       0       0       0       0       0
  3334 ;;      Locals:         0       3       0       0       0       0
  3335 ;;      Temps:          0       2       0       0       0       0
  3336 ;;      Totals:         0       5       0       0       0       0
  3337 ;;Total ram usage:        5 bytes
  3338 ;; Hardware stack levels used: 1
  3339 ;; Hardware stack levels required when called: 3
  3340 ;; This function calls:
  3341 ;;		___awdiv
  3342 ;;		_rand
  3343 ;;		_snake_initiate
  3344 ;; This function is called by:
  3345 ;;		_main
  3346 ;; This function uses a non-reentrant model
  3347 ;;
  3348                           
  3349     0147                     _snake_move:	
  3350                           ;psect for function _snake_move
  3351                           
  3352                           
  3353                           ;incstack = 0
  3354                           ; Regs used in _snake_move: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3355                           ;snake_move@direction stored from wreg
  3356     0147  0020               	movlb	0	; select bank0
  3357     0148  00A8               	movwf	snake_move@direction
  3358     0149                     l2875:
  3359                           
  3360                           ;snake.c: 34:     remainingMoves--;
  3361     0149  3001               	movlw	1
  3362     014A  02DD               	subwf	_remainingMoves,f
  3363     014B                     l2877:
  3364                           
  3365                           ;snake.c: 35:     for(uint8_t i = 0; i < (4*4); i++){
  3366     014B  01AA               	clrf	snake_move@i
  3367     014C                     l2883:
  3368                           
  3369                           ;snake.c: 36:         if(field[i] > 0){
  3370     014C  082A               	movf	snake_move@i,w
  3371     014D  3ED0               	addlw	(low (_field| 0))& (0+255)
  3372     014E  0086               	movwf	6
  3373     014F  0187               	clrf	7
  3374     0150  0801               	movf	1,w
  3375     0151  1903               	btfsc	3,2
  3376     0152  2954               	goto	u1811
  3377     0153  2955               	goto	u1810
  3378     0154                     u1811:
  3379     0154  295B               	goto	l2887
  3380     0155                     u1810:
  3381     0155                     l2885:
  3382                           
  3383                           ;snake.c: 37:             field[i]--;
  3384     0155  082A               	movf	snake_move@i,w
  3385     0156  3ED0               	addlw	(low (_field| 0))& (0+255)
  3386     0157  0086               	movwf	6
  3387     0158  0187               	clrf	7
  3388     0159  3001               	movlw	1
  3389     015A  0281               	subwf	1,f
  3390     015B                     l2887:
  3391                           
  3392                           ;snake.c: 39:     }
  3393     015B  3001               	movlw	1
  3394     015C  00A6               	movwf	??_snake_move
  3395     015D  0826               	movf	??_snake_move,w
  3396     015E  07AA               	addwf	snake_move@i,f
  3397     015F                     l2889:
  3398     015F  3010               	movlw	16
  3399     0160  022A               	subwf	snake_move@i,w
  3400     0161  1C03               	skipc
  3401     0162  2964               	goto	u1821
  3402     0163  2965               	goto	u1820
  3403     0164                     u1821:
  3404     0164  294C               	goto	l2883
  3405     0165                     u1820:
  3406     0165                     l2891:
  3407                           
  3408                           ;snake.c: 40:     int8_t incentive = 0;
  3409     0165  01A9               	clrf	snake_move@incentive
  3410     0166                     l2893:
  3411                           
  3412                           ;snake.c: 41:     direction &= 0x03;
  3413     0166  3003               	movlw	3
  3414     0167  00A6               	movwf	??_snake_move
  3415     0168  0826               	movf	??_snake_move,w
  3416     0169  05A8               	andwf	snake_move@direction,f
  3417                           
  3418                           ;snake.c: 42:     switch(direction){
  3419     016A  29BC               	goto	l2921
  3420     016B                     l2895:
  3421                           
  3422                           ;snake.c: 44:             if((headPosition%4) == 0){
  3423     016B  085F               	movf	_headPosition,w
  3424     016C  3903               	andlw	3
  3425     016D  1D03               	btfss	3,2
  3426     016E  2970               	goto	u1831
  3427     016F  2971               	goto	u1830
  3428     0170                     u1831:
  3429     0170  2975               	goto	l2899
  3430     0171                     u1830:
  3431     0171                     l2897:
  3432                           
  3433                           ;snake.c: 45:                 incentive = -1;
  3434     0171  0020               	movlb	0	; select bank0
  3435     0172  01A9               	clrf	snake_move@incentive
  3436     0173  03A9               	decf	snake_move@incentive,f
  3437                           
  3438                           ;snake.c: 46:             } else{
  3439     0174  29D2               	goto	l2923
  3440     0175                     l2899:
  3441                           
  3442                           ;snake.c: 47:                 headPosition--;
  3443     0175  3001               	movlw	1
  3444     0176  02DF               	subwf	_headPosition,f
  3445     0177  29D2               	goto	l2923
  3446     0178                     l2901:
  3447                           
  3448                           ;snake.c: 51:             if((headPosition%4) == (4 -1)){
  3449     0178  3003               	movlw	3
  3450     0179  055F               	andwf	_headPosition,w
  3451     017A  00A6               	movwf	??_snake_move
  3452     017B  3003               	movlw	3
  3453     017C  0626               	xorwf	??_snake_move,w
  3454     017D  1D03               	btfss	3,2
  3455     017E  2980               	goto	u1841
  3456     017F  2981               	goto	u1840
  3457     0180                     u1841:
  3458     0180  2982               	goto	l2905
  3459     0181                     u1840:
  3460     0181  2971               	goto	l2897
  3461     0182                     l2905:
  3462                           
  3463                           ;snake.c: 54:                 headPosition++;
  3464     0182  3001               	movlw	1
  3465     0183  00A6               	movwf	??_snake_move
  3466     0184  0826               	movf	??_snake_move,w
  3467     0185  07DF               	addwf	_headPosition,f
  3468     0186  29D2               	goto	l2923
  3469     0187                     l2907:
  3470                           
  3471                           ;snake.c: 58:             if((headPosition/4) == 0){
  3472     0187  3004               	movlw	4
  3473     0188  00F2               	movwf	___awdiv@divisor
  3474     0189  3000               	movlw	0
  3475     018A  00F3               	movwf	___awdiv@divisor+1
  3476     018B  085F               	movf	_headPosition,w
  3477     018C  00A6               	movwf	??_snake_move
  3478     018D  01A7               	clrf	??_snake_move+1
  3479     018E  0826               	movf	??_snake_move,w
  3480     018F  00F4               	movwf	___awdiv@dividend
  3481     0190  0827               	movf	??_snake_move+1,w
  3482     0191  00F5               	movwf	___awdiv@dividend+1
  3483     0192  318F  27A1  3181   	fcall	___awdiv
  3484     0195  0872               	movf	?___awdiv,w
  3485     0196  0473               	iorwf	?___awdiv+1,w
  3486     0197  1D03               	btfss	3,2
  3487     0198  299A               	goto	u1851
  3488     0199  299B               	goto	u1850
  3489     019A                     u1851:
  3490     019A  299C               	goto	l2911
  3491     019B                     u1850:
  3492     019B  2971               	goto	l2897
  3493     019C                     l2911:
  3494                           
  3495                           ;snake.c: 61:                 headPosition -= 4;
  3496     019C  3004               	movlw	4
  3497     019D  0020               	movlb	0	; select bank0
  3498     019E  02DF               	subwf	_headPosition,f
  3499     019F  29D2               	goto	l2923
  3500     01A0                     l2913:
  3501                           
  3502                           ;snake.c: 65:             if((headPosition/4) == (4 -1)){
  3503     01A0  3004               	movlw	4
  3504     01A1  00F2               	movwf	___awdiv@divisor
  3505     01A2  3000               	movlw	0
  3506     01A3  00F3               	movwf	___awdiv@divisor+1
  3507     01A4  085F               	movf	_headPosition,w
  3508     01A5  00A6               	movwf	??_snake_move
  3509     01A6  01A7               	clrf	??_snake_move+1
  3510     01A7  0826               	movf	??_snake_move,w
  3511     01A8  00F4               	movwf	___awdiv@dividend
  3512     01A9  0827               	movf	??_snake_move+1,w
  3513     01AA  00F5               	movwf	___awdiv@dividend+1
  3514     01AB  318F  27A1  3181   	fcall	___awdiv
  3515     01AE  3003               	movlw	3
  3516     01AF  0672               	xorwf	?___awdiv,w
  3517     01B0  0473               	iorwf	?___awdiv+1,w
  3518     01B1  1D03               	btfss	3,2
  3519     01B2  29B4               	goto	u1861
  3520     01B3  29B5               	goto	u1860
  3521     01B4                     u1861:
  3522     01B4  29B6               	goto	l2917
  3523     01B5                     u1860:
  3524     01B5  2971               	goto	l2897
  3525     01B6                     l2917:
  3526                           
  3527                           ;snake.c: 68:                 headPosition += 4;
  3528     01B6  3004               	movlw	4
  3529     01B7  0020               	movlb	0	; select bank0
  3530     01B8  00A6               	movwf	??_snake_move
  3531     01B9  0826               	movf	??_snake_move,w
  3532     01BA  07DF               	addwf	_headPosition,f
  3533     01BB  29D2               	goto	l2923
  3534     01BC                     l2921:
  3535     01BC  0828               	movf	snake_move@direction,w
  3536     01BD  00A6               	movwf	??_snake_move
  3537     01BE  01A7               	clrf	??_snake_move+1
  3538                           
  3539                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3540                           ; Switch size 1, requested type "simple"
  3541                           ; Number of cases is 1, Range of values is 0 to 0
  3542                           ; switch strategies available:
  3543                           ; Name         Instructions Cycles
  3544                           ; simple_byte            4     3 (average)
  3545                           ; direct_byte            8     6 (fixed)
  3546                           ; jumptable            260     6 (fixed)
  3547                           ;	Chosen strategy is simple_byte
  3548     01BF  0827               	movf	??_snake_move+1,w
  3549     01C0  3A00               	xorlw	0	; case 0
  3550     01C1  1903               	skipnz
  3551     01C2  29C4               	goto	l3353
  3552     01C3  29D2               	goto	l2923
  3553     01C4                     l3353:
  3554                           
  3555                           ; Switch size 1, requested type "simple"
  3556                           ; Number of cases is 4, Range of values is 0 to 3
  3557                           ; switch strategies available:
  3558                           ; Name         Instructions Cycles
  3559                           ; simple_byte           13     7 (average)
  3560                           ; direct_byte           14     6 (fixed)
  3561                           ; jumptable            260     6 (fixed)
  3562                           ;	Chosen strategy is simple_byte
  3563     01C4  0826               	movf	??_snake_move,w
  3564     01C5  3A00               	xorlw	0	; case 0
  3565     01C6  1903               	skipnz
  3566     01C7  296B               	goto	l2895
  3567     01C8  3A01               	xorlw	1	; case 1
  3568     01C9  1903               	skipnz
  3569     01CA  2978               	goto	l2901
  3570     01CB  3A03               	xorlw	3	; case 2
  3571     01CC  1903               	skipnz
  3572     01CD  2987               	goto	l2907
  3573     01CE  3A01               	xorlw	1	; case 3
  3574     01CF  1903               	skipnz
  3575     01D0  29A0               	goto	l2913
  3576     01D1  29D2               	goto	l2923
  3577     01D2                     l2923:
  3578                           
  3579                           ;snake.c: 72:     if(incentive == -1){
  3580     01D2  0A29               	incf	snake_move@incentive,w
  3581     01D3  1D03               	btfss	3,2
  3582     01D4  29D6               	goto	u1871
  3583     01D5  29D7               	goto	u1870
  3584     01D6                     u1871:
  3585     01D6  29DB               	goto	l2927
  3586     01D7                     u1870:
  3587     01D7                     l2925:
  3588                           
  3589                           ;snake.c: 73:         snake_initiate();
  3590     01D7  318E  26CB  3181   	fcall	_snake_initiate
  3591                           
  3592                           ;snake.c: 74:     } else if(field[headPosition] > 0){
  3593     01DA  2A0B               	goto	l2947
  3594     01DB                     l2927:
  3595     01DB  085F               	movf	_headPosition,w
  3596     01DC  3ED0               	addlw	(low (_field| 0))& (0+255)
  3597     01DD  0086               	movwf	6
  3598     01DE  0187               	clrf	7
  3599     01DF  0801               	movf	1,w
  3600     01E0  1903               	btfsc	3,2
  3601     01E1  29E3               	goto	u1881
  3602     01E2  29E4               	goto	u1880
  3603     01E3                     u1881:
  3604     01E3  29E7               	goto	l2933
  3605     01E4                     u1880:
  3606     01E4                     l2929:
  3607                           
  3608                           ;snake.c: 75:         incentive = -1;
  3609     01E4  01A9               	clrf	snake_move@incentive
  3610     01E5  03A9               	decf	snake_move@incentive,f
  3611     01E6  29D7               	goto	l2925
  3612     01E7                     l2933:
  3613                           
  3614                           ;snake.c: 78:         if(headPosition == foodPosition){
  3615     01E7  085F               	movf	_headPosition,w
  3616     01E8  065E               	xorwf	_foodPosition,w
  3617     01E9  1D03               	skipz
  3618     01EA  29EC               	goto	u1891
  3619     01EB  29ED               	goto	u1890
  3620     01EC                     u1891:
  3621     01EC  2A05               	goto	l2945
  3622     01ED                     u1890:
  3623     01ED                     l2935:
  3624                           
  3625                           ;snake.c: 79:             remainingMoves = 40;
  3626     01ED  3028               	movlw	40
  3627     01EE  00DD               	movwf	_remainingMoves
  3628     01EF                     l2937:
  3629                           
  3630                           ;snake.c: 80:             incentive = 1;
  3631     01EF  01A9               	clrf	snake_move@incentive
  3632     01F0  0AA9               	incf	snake_move@incentive,f
  3633     01F1                     l2939:
  3634                           
  3635                           ;snake.c: 81:             snakeSize++;
  3636     01F1  3001               	movlw	1
  3637     01F2  00A6               	movwf	??_snake_move
  3638     01F3  0826               	movf	??_snake_move,w
  3639     01F4  07E1               	addwf	_snakeSize,f
  3640     01F5                     l2941:
  3641                           
  3642                           ;snake.c: 83:                 foodPosition = rand()%(4*4);
  3643     01F5  318F  272E  3181   	fcall	_rand
  3644     01F8  087C               	movf	?_rand,w
  3645     01F9  390F               	andlw	15
  3646     01FA  0020               	movlb	0	; select bank0
  3647     01FB  00DE               	movwf	_foodPosition
  3648     01FC                     l2943:
  3649                           
  3650                           ;snake.c: 84:             }while(field[foodPosition] > 0);
  3651     01FC  085E               	movf	_foodPosition,w
  3652     01FD  3ED0               	addlw	(low (_field| 0))& (0+255)
  3653     01FE  0086               	movwf	6
  3654     01FF  0187               	clrf	7
  3655     0200  0801               	movf	1,w
  3656     0201  1D03               	btfss	3,2
  3657     0202  2A04               	goto	u1901
  3658     0203  2A05               	goto	u1900
  3659     0204                     u1901:
  3660     0204  29F5               	goto	l2941
  3661     0205                     u1900:
  3662     0205                     l2945:
  3663                           
  3664                           ;snake.c: 86:         field[headPosition] = snakeSize;
  3665     0205  085F               	movf	_headPosition,w
  3666     0206  3ED0               	addlw	(low (_field| 0))& (0+255)
  3667     0207  0086               	movwf	6
  3668     0208  0187               	clrf	7
  3669     0209  0861               	movf	_snakeSize,w
  3670     020A  0081               	movwf	1
  3671     020B                     l2947:
  3672                           
  3673                           ;snake.c: 88:     if(remainingMoves == 0){
  3674     020B  0020               	movlb	0	; select bank0
  3675     020C  085D               	movf	_remainingMoves,w
  3676     020D  1D03               	btfss	3,2
  3677     020E  2A10               	goto	u1911
  3678     020F  2A11               	goto	u1910
  3679     0210                     u1911:
  3680     0210  2A16               	goto	l2953
  3681     0211                     u1910:
  3682     0211                     l2949:
  3683                           
  3684                           ;snake.c: 89:         incentive = -1;
  3685     0211  01A9               	clrf	snake_move@incentive
  3686     0212  03A9               	decf	snake_move@incentive,f
  3687     0213                     l2951:
  3688                           
  3689                           ;snake.c: 90:         snake_initiate();
  3690     0213  318E  26CB  3181   	fcall	_snake_initiate
  3691     0216                     l2953:
  3692                           
  3693                           ;snake.c: 92:     return incentive;
  3694     0216  0020               	movlb	0	; select bank0
  3695     0217  0829               	movf	snake_move@incentive,w
  3696     0218                     l480:
  3697     0218  0008               	return
  3698     0219                     __end_of_snake_move:
  3699                           
  3700                           	psect	text2
  3701     0ECB                     __ptext2:	
  3702 ;; *************** function _snake_initiate *****************
  3703 ;; Defined at:
  3704 ;;		line 21 in file "snake.c"
  3705 ;; Parameters:    Size  Location     Type
  3706 ;;		None
  3707 ;; Auto vars:     Size  Location     Type
  3708 ;;  i               1    5[BANK0 ] unsigned char 
  3709 ;; Return value:  Size  Location     Type
  3710 ;;                  1    wreg      void 
  3711 ;; Registers used:
  3712 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3713 ;; Tracked objects:
  3714 ;;		On entry : 0/0
  3715 ;;		On exit  : 0/0
  3716 ;;		Unchanged: 0/0
  3717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3718 ;;      Params:         0       0       0       0       0       0
  3719 ;;      Locals:         0       1       0       0       0       0
  3720 ;;      Temps:          0       1       0       0       0       0
  3721 ;;      Totals:         0       2       0       0       0       0
  3722 ;;Total ram usage:        2 bytes
  3723 ;; Hardware stack levels used: 1
  3724 ;; Hardware stack levels required when called: 2
  3725 ;; This function calls:
  3726 ;;		_rand
  3727 ;;		_srand
  3728 ;; This function is called by:
  3729 ;;		_main
  3730 ;;		_snake_move
  3731 ;; This function uses a non-reentrant model
  3732 ;;
  3733                           
  3734     0ECB                     _snake_initiate:	
  3735                           ;psect for function _snake_initiate
  3736                           
  3737     0ECB                     l2513:	
  3738                           ;incstack = 0
  3739                           ; Regs used in _snake_initiate: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3740                           
  3741                           
  3742                           ;snake.c: 22:     for(uint8_t i = 0; i < (4*4); i++){
  3743     0ECB  0020               	movlb	0	; select bank0
  3744     0ECC  01A5               	clrf	snake_initiate@i
  3745     0ECD                     l2519:
  3746                           
  3747                           ;snake.c: 23:         field[i] = 0;
  3748     0ECD  0825               	movf	snake_initiate@i,w
  3749     0ECE  3ED0               	addlw	(low (_field| 0))& (0+255)
  3750     0ECF  0086               	movwf	6
  3751     0ED0  0187               	clrf	7
  3752     0ED1  0181               	clrf	1
  3753     0ED2                     l2521:
  3754                           
  3755                           ;snake.c: 24:     }
  3756     0ED2  3001               	movlw	1
  3757     0ED3  00A4               	movwf	??_snake_initiate
  3758     0ED4  0824               	movf	??_snake_initiate,w
  3759     0ED5  07A5               	addwf	snake_initiate@i,f
  3760     0ED6                     l2523:
  3761     0ED6  3010               	movlw	16
  3762     0ED7  0225               	subwf	snake_initiate@i,w
  3763     0ED8  1C03               	skipc
  3764     0ED9  2EDB               	goto	u1311
  3765     0EDA  2EDC               	goto	u1310
  3766     0EDB                     u1311:
  3767     0EDB  2ECD               	goto	l2519
  3768     0EDC                     u1310:
  3769     0EDC                     l2525:
  3770                           
  3771                           ;snake.c: 25:     srand(0);
  3772     0EDC  3000               	movlw	0
  3773     0EDD  00F0               	movwf	srand@s
  3774     0EDE  00F1               	movwf	srand@s+1
  3775     0EDF  318D  25C4  318E   	fcall	_srand
  3776                           
  3777                           ;snake.c: 26:     headPosition = rand()%(4*4);
  3778     0EE2  318F  272E  318E   	fcall	_rand
  3779     0EE5  087C               	movf	?_rand,w
  3780     0EE6  390F               	andlw	15
  3781     0EE7  0020               	movlb	0	; select bank0
  3782     0EE8  00DF               	movwf	_headPosition
  3783                           
  3784                           ;snake.c: 27:     foodPosition = rand()%(4*4);
  3785     0EE9  318F  272E  318E   	fcall	_rand
  3786     0EEC  087C               	movf	?_rand,w
  3787     0EED  390F               	andlw	15
  3788     0EEE  0020               	movlb	0	; select bank0
  3789     0EEF  00DE               	movwf	_foodPosition
  3790     0EF0                     l2527:
  3791                           
  3792                           ;snake.c: 28:     snakeSize = 3;
  3793     0EF0  3003               	movlw	3
  3794     0EF1  00E1               	movwf	_snakeSize
  3795     0EF2                     l2529:
  3796                           
  3797                           ;snake.c: 29:     remainingMoves = 40;
  3798     0EF2  3028               	movlw	40
  3799     0EF3  00DD               	movwf	_remainingMoves
  3800     0EF4                     l2531:
  3801                           
  3802                           ;snake.c: 30:     field[headPosition] = snakeSize;
  3803     0EF4  085F               	movf	_headPosition,w
  3804     0EF5  3ED0               	addlw	(low (_field| 0))& (0+255)
  3805     0EF6  0086               	movwf	6
  3806     0EF7  0187               	clrf	7
  3807     0EF8  0861               	movf	_snakeSize,w
  3808     0EF9  0081               	movwf	1
  3809     0EFA                     l452:
  3810     0EFA  0008               	return
  3811     0EFB                     __end_of_snake_initiate:
  3812                           
  3813                           	psect	text3
  3814     0DC4                     __ptext3:	
  3815 ;; *************** function _srand *****************
  3816 ;; Defined at:
  3817 ;;		line 6 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\common\rand.c"
  3818 ;; Parameters:    Size  Location     Type
  3819 ;;  s               2    0[COMMON] unsigned int 
  3820 ;; Auto vars:     Size  Location     Type
  3821 ;;		None
  3822 ;; Return value:  Size  Location     Type
  3823 ;;                  1    wreg      void 
  3824 ;; Registers used:
  3825 ;;		wreg, status,2, status,0
  3826 ;; Tracked objects:
  3827 ;;		On entry : 0/0
  3828 ;;		On exit  : 0/0
  3829 ;;		Unchanged: 0/0
  3830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3831 ;;      Params:         2       0       0       0       0       0
  3832 ;;      Locals:         0       0       0       0       0       0
  3833 ;;      Temps:          0       0       0       0       0       0
  3834 ;;      Totals:         2       0       0       0       0       0
  3835 ;;Total ram usage:        2 bytes
  3836 ;; Hardware stack levels used: 1
  3837 ;; This function calls:
  3838 ;;		Nothing
  3839 ;; This function is called by:
  3840 ;;		_snake_initiate
  3841 ;; This function uses a non-reentrant model
  3842 ;;
  3843                           
  3844     0DC4                     _srand:	
  3845                           ;psect for function _srand
  3846                           
  3847     0DC4                     l2463:	
  3848                           ;incstack = 0
  3849                           ; Regs used in _srand: [wreg+status,2+status,0]
  3850                           
  3851     0DC4  0870               	movf	srand@s,w
  3852     0DC5  3EFF               	addlw	255
  3853     0DC6  0020               	movlb	0	; select bank0
  3854     0DC7  00EB               	movwf	_seed
  3855     0DC8  30FF               	movlw	255
  3856     0DC9  3D71               	addwfc	srand@s+1,w
  3857     0DCA  00EC               	movwf	_seed+1
  3858     0DCB  01ED               	clrf	_seed+2
  3859     0DCC  01EE               	clrf	_seed+3
  3860     0DCD                     l1280:
  3861     0DCD  0008               	return
  3862     0DCE                     __end_of_srand:
  3863                           
  3864                           	psect	text4
  3865     0086                     __ptext4:	
  3866 ;; *************** function _snake_getSurroundings *****************
  3867 ;; Defined at:
  3868 ;;		line 99 in file "snake.c"
  3869 ;; Parameters:    Size  Location     Type
  3870 ;;  surroundings    1    wreg     PTR char 
  3871 ;;		 -> Y0(8), 
  3872 ;; Auto vars:     Size  Location     Type
  3873 ;;  surroundings    1    7[BANK0 ] PTR char 
  3874 ;;		 -> Y0(8), 
  3875 ;;  i               1    6[BANK0 ] unsigned char 
  3876 ;;  i               1    3[BANK0 ] unsigned char 
  3877 ;;  ch              1    5[BANK0 ] unsigned char 
  3878 ;;  lh              1    4[BANK0 ] unsigned char 
  3879 ;;  cf              1    2[BANK0 ] unsigned char 
  3880 ;;  lf              1    1[BANK0 ] unsigned char 
  3881 ;;  p               1    0[BANK0 ] unsigned char 
  3882 ;; Return value:  Size  Location     Type
  3883 ;;                  1    wreg      void 
  3884 ;; Registers used:
  3885 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3886 ;; Tracked objects:
  3887 ;;		On entry : 0/0
  3888 ;;		On exit  : 0/0
  3889 ;;		Unchanged: 0/0
  3890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3891 ;;      Params:         0       0       0       0       0       0
  3892 ;;      Locals:         0       8       0       0       0       0
  3893 ;;      Temps:          2       0       0       0       0       0
  3894 ;;      Totals:         2       8       0       0       0       0
  3895 ;;Total ram usage:       10 bytes
  3896 ;; Hardware stack levels used: 1
  3897 ;; Hardware stack levels required when called: 1
  3898 ;; This function calls:
  3899 ;;		___awdiv
  3900 ;; This function is called by:
  3901 ;;		_main
  3902 ;; This function uses a non-reentrant model
  3903 ;;
  3904                           
  3905     0086                     _snake_getSurroundings:	
  3906                           ;psect for function _snake_getSurroundings
  3907                           
  3908                           
  3909                           ;incstack = 0
  3910                           ; Regs used in _snake_getSurroundings: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  3911                           ;snake_getSurroundings@surroundings stored from wreg
  3912     0086  0020               	movlb	0	; select bank0
  3913     0087  00A7               	movwf	snake_getSurroundings@surroundings
  3914     0088                     l2713:
  3915                           
  3916                           ;snake.c: 100:     for(uint8_t i = 0; i < 8; i++){
  3917     0088  01A3               	clrf	snake_getSurroundings@i
  3918     0089                     l2719:
  3919                           
  3920                           ;snake.c: 101:         surroundings[i] = 0;
  3921     0089  0823               	movf	snake_getSurroundings@i,w
  3922     008A  0727               	addwf	snake_getSurroundings@surroundings,w
  3923     008B  00FB               	movwf	??_snake_getSurroundings
  3924     008C  087B               	movf	??_snake_getSurroundings,w
  3925     008D  0086               	movwf	6
  3926     008E  0187               	clrf	7
  3927     008F  0181               	clrf	1
  3928     0090                     l2721:
  3929                           
  3930                           ;snake.c: 102:     }
  3931     0090  3001               	movlw	1
  3932     0091  00FB               	movwf	??_snake_getSurroundings
  3933     0092  087B               	movf	??_snake_getSurroundings,w
  3934     0093  07A3               	addwf	snake_getSurroundings@i,f
  3935     0094                     l2723:
  3936     0094  3008               	movlw	8
  3937     0095  0223               	subwf	snake_getSurroundings@i,w
  3938     0096  1C03               	skipc
  3939     0097  2899               	goto	u1601
  3940     0098  289A               	goto	u1600
  3941     0099                     u1601:
  3942     0099  2889               	goto	l2719
  3943     009A                     u1600:
  3944     009A                     l2725:
  3945                           
  3946                           ;snake.c: 103:     uint8_t lh = headPosition%4;
  3947     009A  085F               	movf	_headPosition,w
  3948     009B  3903               	andlw	3
  3949     009C  00A4               	movwf	snake_getSurroundings@lh
  3950     009D                     l2727:
  3951                           
  3952                           ;snake.c: 104:     uint8_t ch = headPosition/4;
  3953     009D  3004               	movlw	4
  3954     009E  00F2               	movwf	___awdiv@divisor
  3955     009F  3000               	movlw	0
  3956     00A0  00F3               	movwf	___awdiv@divisor+1
  3957     00A1  085F               	movf	_headPosition,w
  3958     00A2  00FB               	movwf	??_snake_getSurroundings
  3959     00A3  01FC               	clrf	??_snake_getSurroundings+1
  3960     00A4  087B               	movf	??_snake_getSurroundings,w
  3961     00A5  00F4               	movwf	___awdiv@dividend
  3962     00A6  087C               	movf	??_snake_getSurroundings+1,w
  3963     00A7  00F5               	movwf	___awdiv@dividend+1
  3964     00A8  318F  27A1  3180   	fcall	___awdiv
  3965     00AB  0872               	movf	?___awdiv,w
  3966     00AC  0020               	movlb	0	; select bank0
  3967     00AD  00A5               	movwf	snake_getSurroundings@ch
  3968     00AE                     l2729:
  3969                           
  3970                           ;snake.c: 105:     uint8_t lf = foodPosition%4;
  3971     00AE  085E               	movf	_foodPosition,w
  3972     00AF  3903               	andlw	3
  3973     00B0  00A1               	movwf	snake_getSurroundings@lf
  3974                           
  3975                           ;snake.c: 106:     uint8_t cf = foodPosition/4;
  3976     00B1  3004               	movlw	4
  3977     00B2  00F2               	movwf	___awdiv@divisor
  3978     00B3  3000               	movlw	0
  3979     00B4  00F3               	movwf	___awdiv@divisor+1
  3980     00B5  085E               	movf	_foodPosition,w
  3981     00B6  00FB               	movwf	??_snake_getSurroundings
  3982     00B7  01FC               	clrf	??_snake_getSurroundings+1
  3983     00B8  087B               	movf	??_snake_getSurroundings,w
  3984     00B9  00F4               	movwf	___awdiv@dividend
  3985     00BA  087C               	movf	??_snake_getSurroundings+1,w
  3986     00BB  00F5               	movwf	___awdiv@dividend+1
  3987     00BC  318F  27A1  3180   	fcall	___awdiv
  3988     00BF  0872               	movf	?___awdiv,w
  3989     00C0  0020               	movlb	0	; select bank0
  3990     00C1  00A2               	movwf	snake_getSurroundings@cf
  3991     00C2                     l2731:
  3992                           
  3993                           ;snake.c: 107:     if(lh == 0){
  3994     00C2  0824               	movf	snake_getSurroundings@lh,w
  3995     00C3  1D03               	btfss	3,2
  3996     00C4  28C6               	goto	u1611
  3997     00C5  28C7               	goto	u1610
  3998     00C6                     u1611:
  3999     00C6  28CD               	goto	l2735
  4000     00C7                     u1610:
  4001     00C7                     l2733:
  4002                           
  4003                           ;snake.c: 108:         surroundings[0] = 1;
  4004     00C7  0827               	movf	snake_getSurroundings@surroundings,w
  4005     00C8  0086               	movwf	6
  4006     00C9  0187               	clrf	7
  4007     00CA  0181               	clrf	1
  4008     00CB  0A81               	incf	1,f
  4009                           
  4010                           ;snake.c: 109:     } else if(lh == (4 -1)){
  4011     00CC  28D8               	goto	l2739
  4012     00CD                     l2735:
  4013     00CD  3003               	movlw	3
  4014     00CE  0624               	xorwf	snake_getSurroundings@lh,w
  4015     00CF  1D03               	btfss	3,2
  4016     00D0  28D2               	goto	u1621
  4017     00D1  28D3               	goto	u1620
  4018     00D2                     u1621:
  4019     00D2  28D8               	goto	l2739
  4020     00D3                     u1620:
  4021     00D3                     l2737:
  4022                           
  4023                           ;snake.c: 110:         surroundings[1] = 1;
  4024     00D3  0A27               	incf	snake_getSurroundings@surroundings,w
  4025     00D4  0086               	movwf	6
  4026     00D5  0187               	clrf	7
  4027     00D6  0181               	clrf	1
  4028     00D7  0A81               	incf	1,f
  4029     00D8                     l2739:
  4030                           
  4031                           ;snake.c: 112:     if(ch == 0){
  4032     00D8  0825               	movf	snake_getSurroundings@ch,w
  4033     00D9  1D03               	btfss	3,2
  4034     00DA  28DC               	goto	u1631
  4035     00DB  28DD               	goto	u1630
  4036     00DC                     u1631:
  4037     00DC  28E4               	goto	l2743
  4038     00DD                     u1630:
  4039     00DD                     l2741:
  4040                           
  4041                           ;snake.c: 113:         surroundings[2] = 1;
  4042     00DD  0827               	movf	snake_getSurroundings@surroundings,w
  4043     00DE  3E02               	addlw	2
  4044     00DF  0086               	movwf	6
  4045     00E0  0187               	clrf	7
  4046     00E1  0181               	clrf	1
  4047     00E2  0A81               	incf	1,f
  4048                           
  4049                           ;snake.c: 114:     } else if(ch == (4 -1)){
  4050     00E3  28F0               	goto	l2747
  4051     00E4                     l2743:
  4052     00E4  3003               	movlw	3
  4053     00E5  0625               	xorwf	snake_getSurroundings@ch,w
  4054     00E6  1D03               	btfss	3,2
  4055     00E7  28E9               	goto	u1641
  4056     00E8  28EA               	goto	u1640
  4057     00E9                     u1641:
  4058     00E9  28F0               	goto	l2747
  4059     00EA                     u1640:
  4060     00EA                     l2745:
  4061                           
  4062                           ;snake.c: 115:         surroundings[3] = 1;
  4063     00EA  0827               	movf	snake_getSurroundings@surroundings,w
  4064     00EB  3E03               	addlw	3
  4065     00EC  0086               	movwf	6
  4066     00ED  0187               	clrf	7
  4067     00EE  0181               	clrf	1
  4068     00EF  0A81               	incf	1,f
  4069     00F0                     l2747:
  4070                           
  4071                           ;snake.c: 117:     uint8_t p;;snake.c: 118:     for(uint8_t i = 0; i < 4; i++){
  4072     00F0  01A6               	clrf	snake_getSurroundings@i_804
  4073     00F1                     l2753:
  4074                           
  4075                           ;snake.c: 119:         p = (headPosition+mapping[i])%(4*4);
  4076     00F1  0826               	movf	snake_getSurroundings@i_804,w
  4077     00F2  3EE0               	addlw	(low (_mapping| 0))& (0+255)
  4078     00F3  0086               	movwf	6
  4079     00F4  0187               	clrf	7
  4080     00F5  0801               	movf	1,w
  4081     00F6  075F               	addwf	_headPosition,w
  4082     00F7  390F               	andlw	15
  4083     00F8  00A0               	movwf	snake_getSurroundings@p
  4084                           
  4085                           ;snake.c: 120:         if(field[p] > 0){
  4086     00F9  0820               	movf	snake_getSurroundings@p,w
  4087     00FA  3ED0               	addlw	(low (_field| 0))& (0+255)
  4088     00FB  0086               	movwf	6
  4089     00FC  0187               	clrf	7
  4090     00FD  0801               	movf	1,w
  4091     00FE  1903               	btfsc	3,2
  4092     00FF  2901               	goto	u1651
  4093     0100  2902               	goto	u1650
  4094     0101                     u1651:
  4095     0101  290A               	goto	l2757
  4096     0102                     u1650:
  4097     0102                     l2755:
  4098                           
  4099                           ;snake.c: 121:             surroundings[i] = 1;
  4100     0102  0826               	movf	snake_getSurroundings@i_804,w
  4101     0103  0727               	addwf	snake_getSurroundings@surroundings,w
  4102     0104  00FB               	movwf	??_snake_getSurroundings
  4103     0105  087B               	movf	??_snake_getSurroundings,w
  4104     0106  0086               	movwf	6
  4105     0107  0187               	clrf	7
  4106     0108  0181               	clrf	1
  4107     0109  0A81               	incf	1,f
  4108     010A                     l2757:
  4109                           
  4110                           ;snake.c: 123:     }
  4111     010A  3001               	movlw	1
  4112     010B  00FB               	movwf	??_snake_getSurroundings
  4113     010C  087B               	movf	??_snake_getSurroundings,w
  4114     010D  07A6               	addwf	snake_getSurroundings@i_804,f
  4115     010E                     l2759:
  4116     010E  3004               	movlw	4
  4117     010F  0226               	subwf	snake_getSurroundings@i_804,w
  4118     0110  1C03               	skipc
  4119     0111  2913               	goto	u1661
  4120     0112  2914               	goto	u1660
  4121     0113                     u1661:
  4122     0113  28F1               	goto	l2753
  4123     0114                     u1660:
  4124     0114                     l2761:
  4125                           
  4126                           ;snake.c: 124:     if(lf<lh){
  4127     0114  0824               	movf	snake_getSurroundings@lh,w
  4128     0115  0221               	subwf	snake_getSurroundings@lf,w
  4129     0116  1803               	skipnc
  4130     0117  2919               	goto	u1671
  4131     0118  291A               	goto	u1670
  4132     0119                     u1671:
  4133     0119  2921               	goto	l2765
  4134     011A                     u1670:
  4135     011A                     l2763:
  4136                           
  4137                           ;snake.c: 125:         surroundings[4] = 1;
  4138     011A  0827               	movf	snake_getSurroundings@surroundings,w
  4139     011B  3E04               	addlw	4
  4140     011C  0086               	movwf	6
  4141     011D  0187               	clrf	7
  4142     011E  0181               	clrf	1
  4143     011F  0A81               	incf	1,f
  4144                           
  4145                           ;snake.c: 126:     } else if(lf>lh){
  4146     0120  292D               	goto	l2769
  4147     0121                     l2765:
  4148     0121  0821               	movf	snake_getSurroundings@lf,w
  4149     0122  0224               	subwf	snake_getSurroundings@lh,w
  4150     0123  1803               	skipnc
  4151     0124  2926               	goto	u1681
  4152     0125  2927               	goto	u1680
  4153     0126                     u1681:
  4154     0126  292D               	goto	l2769
  4155     0127                     u1680:
  4156     0127                     l2767:
  4157                           
  4158                           ;snake.c: 127:         surroundings[5] = 1;
  4159     0127  0827               	movf	snake_getSurroundings@surroundings,w
  4160     0128  3E05               	addlw	5
  4161     0129  0086               	movwf	6
  4162     012A  0187               	clrf	7
  4163     012B  0181               	clrf	1
  4164     012C  0A81               	incf	1,f
  4165     012D                     l2769:
  4166                           
  4167                           ;snake.c: 129:     if(cf<ch){
  4168     012D  0825               	movf	snake_getSurroundings@ch,w
  4169     012E  0222               	subwf	snake_getSurroundings@cf,w
  4170     012F  1803               	skipnc
  4171     0130  2932               	goto	u1691
  4172     0131  2933               	goto	u1690
  4173     0132                     u1691:
  4174     0132  293A               	goto	l2773
  4175     0133                     u1690:
  4176     0133                     l2771:
  4177                           
  4178                           ;snake.c: 130:         surroundings[6] = 1;
  4179     0133  0827               	movf	snake_getSurroundings@surroundings,w
  4180     0134  3E06               	addlw	6
  4181     0135  0086               	movwf	6
  4182     0136  0187               	clrf	7
  4183     0137  0181               	clrf	1
  4184     0138  0A81               	incf	1,f
  4185                           
  4186                           ;snake.c: 131:     } else if(cf>ch){
  4187     0139  2946               	goto	l503
  4188     013A                     l2773:
  4189     013A  0822               	movf	snake_getSurroundings@cf,w
  4190     013B  0225               	subwf	snake_getSurroundings@ch,w
  4191     013C  1803               	skipnc
  4192     013D  293F               	goto	u1701
  4193     013E  2940               	goto	u1700
  4194     013F                     u1701:
  4195     013F  2946               	goto	l503
  4196     0140                     u1700:
  4197     0140                     l2775:
  4198                           
  4199                           ;snake.c: 132:         surroundings[7] = 1;
  4200     0140  0827               	movf	snake_getSurroundings@surroundings,w
  4201     0141  3E07               	addlw	7
  4202     0142  0086               	movwf	6
  4203     0143  0187               	clrf	7
  4204     0144  0181               	clrf	1
  4205     0145  0A81               	incf	1,f
  4206     0146                     l503:
  4207     0146  0008               	return
  4208     0147                     __end_of_snake_getSurroundings:
  4209                           
  4210                           	psect	text5
  4211     0D8B                     __ptext5:	
  4212 ;; *************** function _snake_getFoodPosition *****************
  4213 ;; Defined at:
  4214 ;;		line 143 in file "snake.c"
  4215 ;; Parameters:    Size  Location     Type
  4216 ;;		None
  4217 ;; Auto vars:     Size  Location     Type
  4218 ;;		None
  4219 ;; Return value:  Size  Location     Type
  4220 ;;                  1    wreg      unsigned char 
  4221 ;; Registers used:
  4222 ;;		wreg
  4223 ;; Tracked objects:
  4224 ;;		On entry : 0/0
  4225 ;;		On exit  : 0/0
  4226 ;;		Unchanged: 0/0
  4227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4228 ;;      Params:         0       0       0       0       0       0
  4229 ;;      Locals:         0       0       0       0       0       0
  4230 ;;      Temps:          0       0       0       0       0       0
  4231 ;;      Totals:         0       0       0       0       0       0
  4232 ;;Total ram usage:        0 bytes
  4233 ;; Hardware stack levels used: 1
  4234 ;; This function calls:
  4235 ;;		Nothing
  4236 ;; This function is called by:
  4237 ;;		_main
  4238 ;; This function uses a non-reentrant model
  4239 ;;
  4240                           
  4241     0D8B                     _snake_getFoodPosition:	
  4242                           ;psect for function _snake_getFoodPosition
  4243                           
  4244     0D8B                     l2675:	
  4245                           ;incstack = 0
  4246                           ; Regs used in _snake_getFoodPosition: [wreg]
  4247                           
  4248                           
  4249                           ;snake.c: 144:     return foodPosition;
  4250     0D8B  0020               	movlb	0	; select bank0
  4251     0D8C  085E               	movf	_foodPosition,w
  4252     0D8D                     l512:
  4253     0D8D  0008               	return
  4254     0D8E                     __end_of_snake_getFoodPosition:
  4255                           
  4256                           	psect	text6
  4257     0004                     __ptext6:	
  4258 ;; *************** function _snake_getField *****************
  4259 ;; Defined at:
  4260 ;;		line 95 in file "snake.c"
  4261 ;; Parameters:    Size  Location     Type
  4262 ;;		None
  4263 ;; Auto vars:     Size  Location     Type
  4264 ;;		None
  4265 ;; Return value:  Size  Location     Type
  4266 ;;                  1    wreg      PTR unsigned char 
  4267 ;; Registers used:
  4268 ;;		wreg
  4269 ;; Tracked objects:
  4270 ;;		On entry : 0/0
  4271 ;;		On exit  : 0/0
  4272 ;;		Unchanged: 0/0
  4273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4274 ;;      Params:         0       0       0       0       0       0
  4275 ;;      Locals:         0       0       0       0       0       0
  4276 ;;      Temps:          0       0       0       0       0       0
  4277 ;;      Totals:         0       0       0       0       0       0
  4278 ;;Total ram usage:        0 bytes
  4279 ;; Hardware stack levels used: 1
  4280 ;; This function calls:
  4281 ;;		Nothing
  4282 ;; This function is called by:
  4283 ;;		_main
  4284 ;; This function uses a non-reentrant model
  4285 ;;
  4286                           
  4287     0004                     _snake_getField:	
  4288                           ;psect for function _snake_getField
  4289                           
  4290     0004                     l2667:	
  4291                           ;incstack = 0
  4292                           ; Regs used in _snake_getField: [wreg]
  4293                           
  4294                           
  4295                           ;snake.c: 96:     return field;
  4296     0004  30D0               	movlw	(low (_field| 0))& (0+255)
  4297     0005                     l483:
  4298     0005  0008               	return
  4299     0006                     __end_of_snake_getField:
  4300                           
  4301                           	psect	text7
  4302     0E9D                     __ptext7:	
  4303 ;; *************** function _sendMatrix *****************
  4304 ;; Defined at:
  4305 ;;		line 55 in file "ledMatrix.c"
  4306 ;; Parameters:    Size  Location     Type
  4307 ;;		None
  4308 ;; Auto vars:     Size  Location     Type
  4309 ;;  j               1    6[COMMON] unsigned char 
  4310 ;;  i               1    7[COMMON] unsigned char 
  4311 ;;  nb              1    5[COMMON] unsigned char 
  4312 ;;  b               1    4[COMMON] unsigned char 
  4313 ;; Return value:  Size  Location     Type
  4314 ;;                  1    wreg      void 
  4315 ;; Registers used:
  4316 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4317 ;; Tracked objects:
  4318 ;;		On entry : 0/0
  4319 ;;		On exit  : 0/0
  4320 ;;		Unchanged: 0/0
  4321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4322 ;;      Params:         0       0       0       0       0       0
  4323 ;;      Locals:         4       0       0       0       0       0
  4324 ;;      Temps:          1       0       0       0       0       0
  4325 ;;      Totals:         5       0       0       0       0       0
  4326 ;;Total ram usage:        5 bytes
  4327 ;; Hardware stack levels used: 1
  4328 ;; Hardware stack levels required when called: 2
  4329 ;; This function calls:
  4330 ;;		_txMAX7219
  4331 ;; This function is called by:
  4332 ;;		_main
  4333 ;; This function uses a non-reentrant model
  4334 ;;
  4335                           
  4336     0E9D                     _sendMatrix:	
  4337                           ;psect for function _sendMatrix
  4338                           
  4339     0E9D                     l2679:	
  4340                           ;incstack = 0
  4341                           ; Regs used in _sendMatrix: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4342                           
  4343                           
  4344                           ;ledMatrix.c: 56:     uint8_t b;;ledMatrix.c: 57:     uint8_t nb;;ledMatrix.c: 58:     f
      +                          or(uint8_t i=0;i<8;i++){
  4345     0E9D  01F7               	clrf	sendMatrix@i
  4346     0E9E                     l2685:
  4347                           
  4348                           ;ledMatrix.c: 62:         b = matrix[i];
  4349     0E9E  0877               	movf	sendMatrix@i,w
  4350     0E9F  3EA0               	addlw	(low (_matrix| 0))& (0+255)
  4351     0EA0  0086               	movwf	6
  4352     0EA1  0187               	clrf	7
  4353     0EA2  0801               	movf	1,w
  4354     0EA3  00F4               	movwf	sendMatrix@b
  4355     0EA4                     l2687:
  4356                           
  4357                           ;ledMatrix.c: 65:         nb = 0x00;
  4358     0EA4  01F5               	clrf	sendMatrix@nb
  4359     0EA5                     l2689:
  4360                           
  4361                           ;ledMatrix.c: 66:         for(uint8_t j = 0; j < 8; j++){
  4362     0EA5  01F6               	clrf	sendMatrix@j
  4363     0EA6                     l2695:
  4364                           
  4365                           ;ledMatrix.c: 67:             nb <<= 1;
  4366     0EA6  1003               	clrc
  4367     0EA7  0DF5               	rlf	sendMatrix@nb,f
  4368     0EA8                     l2697:
  4369                           
  4370                           ;ledMatrix.c: 68:             nb |= b&0x01;
  4371     0EA8  0874               	movf	sendMatrix@b,w
  4372     0EA9  3901               	andlw	1
  4373     0EAA  00F3               	movwf	??_sendMatrix
  4374     0EAB  0873               	movf	??_sendMatrix,w
  4375     0EAC  04F5               	iorwf	sendMatrix@nb,f
  4376     0EAD                     l2699:
  4377                           
  4378                           ;ledMatrix.c: 69:             b >>= 1;
  4379     0EAD  1003               	clrc
  4380     0EAE  0CF4               	rrf	sendMatrix@b,f
  4381                           
  4382                           ;ledMatrix.c: 70:         }
  4383     0EAF  3001               	movlw	1
  4384     0EB0  00F3               	movwf	??_sendMatrix
  4385     0EB1  0873               	movf	??_sendMatrix,w
  4386     0EB2  07F6               	addwf	sendMatrix@j,f
  4387     0EB3                     l2701:
  4388     0EB3  3008               	movlw	8
  4389     0EB4  0276               	subwf	sendMatrix@j,w
  4390     0EB5  1C03               	skipc
  4391     0EB6  2EB8               	goto	u1581
  4392     0EB7  2EB9               	goto	u1580
  4393     0EB8                     u1581:
  4394     0EB8  2EA6               	goto	l2695
  4395     0EB9                     u1580:
  4396     0EB9                     l2703:
  4397                           
  4398                           ;ledMatrix.c: 71:         txMAX7219(i+1,nb);
  4399     0EB9  0875               	movf	sendMatrix@nb,w
  4400     0EBA  00F1               	movwf	txMAX7219@dat0
  4401     0EBB  0877               	movf	sendMatrix@i,w
  4402     0EBC  3E01               	addlw	1
  4403     0EBD  318E  2641  318E   	fcall	_txMAX7219
  4404     0EC0                     l2705:
  4405                           
  4406                           ;ledMatrix.c: 75:     }
  4407     0EC0  3001               	movlw	1
  4408     0EC1  00F3               	movwf	??_sendMatrix
  4409     0EC2  0873               	movf	??_sendMatrix,w
  4410     0EC3  07F7               	addwf	sendMatrix@i,f
  4411     0EC4                     l2707:
  4412     0EC4  3008               	movlw	8
  4413     0EC5  0277               	subwf	sendMatrix@i,w
  4414     0EC6  1C03               	skipc
  4415     0EC7  2EC9               	goto	u1591
  4416     0EC8  2ECA               	goto	u1590
  4417     0EC9                     u1591:
  4418     0EC9  2E9E               	goto	l2685
  4419     0ECA                     u1590:
  4420     0ECA                     l423:
  4421     0ECA  0008               	return
  4422     0ECB                     __end_of_sendMatrix:
  4423                           
  4424                           	psect	text8
  4425     0006                     __ptext8:	
  4426 ;; *************** function _ledSet *****************
  4427 ;; Defined at:
  4428 ;;		line 31 in file "ledMatrix.c"
  4429 ;; Parameters:    Size  Location     Type
  4430 ;;  l               1    wreg     unsigned char 
  4431 ;;  c               1   11[COMMON] unsigned char 
  4432 ;; Auto vars:     Size  Location     Type
  4433 ;;  l               1    0[BANK0 ] unsigned char 
  4434 ;; Return value:  Size  Location     Type
  4435 ;;                  1    wreg      void 
  4436 ;; Registers used:
  4437 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4438 ;; Tracked objects:
  4439 ;;		On entry : 0/0
  4440 ;;		On exit  : 0/0
  4441 ;;		Unchanged: 0/0
  4442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4443 ;;      Params:         1       0       0       0       0       0
  4444 ;;      Locals:         0       1       0       0       0       0
  4445 ;;      Temps:          2       0       0       0       0       0
  4446 ;;      Totals:         3       1       0       0       0       0
  4447 ;;Total ram usage:        4 bytes
  4448 ;; Hardware stack levels used: 1
  4449 ;; This function calls:
  4450 ;;		Nothing
  4451 ;; This function is called by:
  4452 ;;		_main
  4453 ;;		_setLine
  4454 ;; This function uses a non-reentrant model
  4455 ;;
  4456                           
  4457     0006                     _ledSet:	
  4458                           ;psect for function _ledSet
  4459                           
  4460                           
  4461                           ;incstack = 0
  4462                           ; Regs used in _ledSet: [wreg+fsr1l+fsr1h+status,2+status,0]
  4463                           ;ledSet@l stored from wreg
  4464     0006  0020               	movlb	0	; select bank0
  4465     0007  00A0               	movwf	ledSet@l
  4466     0008                     l2671:
  4467                           
  4468                           ;ledMatrix.c: 32:     (matrix[c]) |= 1UL << (l);
  4469     0008  3001               	movlw	1
  4470     0009  00FC               	movwf	??_ledSet
  4471     000A  0A20               	incf	ledSet@l,w
  4472     000B  280D               	goto	u1564
  4473     000C                     u1565:
  4474     000C  35FC               	lslf	??_ledSet,f
  4475     000D                     u1564:
  4476     000D  0B89               	decfsz	9,f
  4477     000E  280C               	goto	u1565
  4478     000F  087C               	movf	??_ledSet,w
  4479     0010  00FD               	movwf	??_ledSet+1
  4480     0011  087B               	movf	ledSet@c,w
  4481     0012  3EA0               	addlw	(low (_matrix| 0))& (0+255)
  4482     0013  0086               	movwf	6
  4483     0014  0187               	clrf	7
  4484     0015  087D               	movf	??_ledSet+1,w
  4485     0016  0481               	iorwf	1,f
  4486     0017                     l403:
  4487     0017  0008               	return
  4488     0018                     __end_of_ledSet:
  4489                           
  4490                           	psect	text9
  4491     0E17                     __ptext9:	
  4492 ;; *************** function _ledClear *****************
  4493 ;; Defined at:
  4494 ;;		line 35 in file "ledMatrix.c"
  4495 ;; Parameters:    Size  Location     Type
  4496 ;;  l               1    wreg     unsigned char 
  4497 ;;  c               1    0[COMMON] unsigned char 
  4498 ;; Auto vars:     Size  Location     Type
  4499 ;;  l               1    3[COMMON] unsigned char 
  4500 ;; Return value:  Size  Location     Type
  4501 ;;                  1    wreg      void 
  4502 ;; Registers used:
  4503 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4504 ;; Tracked objects:
  4505 ;;		On entry : 0/0
  4506 ;;		On exit  : 0/0
  4507 ;;		Unchanged: 0/0
  4508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4509 ;;      Params:         1       0       0       0       0       0
  4510 ;;      Locals:         1       0       0       0       0       0
  4511 ;;      Temps:          2       0       0       0       0       0
  4512 ;;      Totals:         4       0       0       0       0       0
  4513 ;;Total ram usage:        4 bytes
  4514 ;; Hardware stack levels used: 1
  4515 ;; This function calls:
  4516 ;;		Nothing
  4517 ;; This function is called by:
  4518 ;;		_main
  4519 ;;		_setLine
  4520 ;; This function uses a non-reentrant model
  4521 ;;
  4522                           
  4523     0E17                     _ledClear:	
  4524                           ;psect for function _ledClear
  4525                           
  4526                           
  4527                           ;incstack = 0
  4528                           ; Regs used in _ledClear: [wreg+fsr1l+fsr1h+status,2+status,0]
  4529                           ;ledClear@l stored from wreg
  4530     0E17  00F3               	movwf	ledClear@l
  4531     0E18                     l2673:
  4532                           
  4533                           ;ledMatrix.c: 36:     (matrix[c]) &= ~(1UL << (l));
  4534     0E18  3001               	movlw	1
  4535     0E19  00F1               	movwf	??_ledClear
  4536     0E1A  0A73               	incf	ledClear@l,w
  4537     0E1B  2E1D               	goto	u1574
  4538     0E1C                     u1575:
  4539     0E1C  35F1               	lslf	??_ledClear,f
  4540     0E1D                     u1574:
  4541     0E1D  0B89               	decfsz	9,f
  4542     0E1E  2E1C               	goto	u1575
  4543     0E1F  0871               	movf	??_ledClear,w
  4544     0E20  3AFF               	xorlw	255
  4545     0E21  00F2               	movwf	??_ledClear+1
  4546     0E22  0870               	movf	ledClear@c,w
  4547     0E23  3EA0               	addlw	(low (_matrix| 0))& (0+255)
  4548     0E24  0086               	movwf	6
  4549     0E25  0187               	clrf	7
  4550     0E26  0872               	movf	??_ledClear+1,w
  4551     0E27  0581               	andwf	1,f
  4552     0E28                     l406:
  4553     0E28  0008               	return
  4554     0E29                     __end_of_ledClear:
  4555                           
  4556                           	psect	text10
  4557     0F63                     __ptext10:	
  4558 ;; *************** function _initMAX7219 *****************
  4559 ;; Defined at:
  4560 ;;		line 16 in file "ledMatrix.c"
  4561 ;; Parameters:    Size  Location     Type
  4562 ;;		None
  4563 ;; Auto vars:     Size  Location     Type
  4564 ;;		None
  4565 ;; Return value:  Size  Location     Type
  4566 ;;                  1    wreg      void 
  4567 ;; Registers used:
  4568 ;;		wreg, status,2, status,0, pclath, cstack
  4569 ;; Tracked objects:
  4570 ;;		On entry : 0/0
  4571 ;;		On exit  : 0/0
  4572 ;;		Unchanged: 0/0
  4573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4574 ;;      Params:         0       0       0       0       0       0
  4575 ;;      Locals:         0       0       0       0       0       0
  4576 ;;      Temps:          2       0       0       0       0       0
  4577 ;;      Totals:         2       0       0       0       0       0
  4578 ;;Total ram usage:        2 bytes
  4579 ;; Hardware stack levels used: 1
  4580 ;; Hardware stack levels required when called: 2
  4581 ;; This function calls:
  4582 ;;		_txMAX7219
  4583 ;; This function is called by:
  4584 ;;		_main
  4585 ;; This function uses a non-reentrant model
  4586 ;;
  4587                           
  4588     0F63                     _initMAX7219:	
  4589                           ;psect for function _initMAX7219
  4590                           
  4591     0F63                     l2657:	
  4592                           ;incstack = 0
  4593                           ; Regs used in _initMAX7219: [wreg+status,2+status,0+pclath+cstack]
  4594                           
  4595                           
  4596                           ;ledMatrix.c: 17:     LATBbits.LATB1 = 1;
  4597     0F63  0022               	movlb	2	; select bank2
  4598     0F64  148D               	bsf	13,1	;volatile
  4599                           
  4600                           ;ledMatrix.c: 18:     TRISBbits.TRISB1 = 0;
  4601     0F65  0021               	movlb	1	; select bank1
  4602     0F66  108D               	bcf	13,1	;volatile
  4603                           
  4604                           ;ledMatrix.c: 19:     SSP1CON1bits.SSPEN = 1;
  4605     0F67  0024               	movlb	4	; select bank4
  4606     0F68  1695               	bsf	21,5	;volatile
  4607     0F69                     l2659:
  4608                           
  4609                           ;ledMatrix.c: 20:     txMAX7219(0x09,0x00);
  4610     0F69  01F1               	clrf	txMAX7219@dat0
  4611     0F6A  3009               	movlw	9
  4612     0F6B  318E  2641  318F   	fcall	_txMAX7219
  4613                           
  4614                           ;ledMatrix.c: 21:     txMAX7219(0x0A,0x00);
  4615     0F6E  01F1               	clrf	txMAX7219@dat0
  4616     0F6F  300A               	movlw	10
  4617     0F70  318E  2641  318F   	fcall	_txMAX7219
  4618                           
  4619                           ;ledMatrix.c: 22:     txMAX7219(0x0C,0x00);
  4620     0F73  01F1               	clrf	txMAX7219@dat0
  4621     0F74  300C               	movlw	12
  4622     0F75  318E  2641  318F   	fcall	_txMAX7219
  4623                           
  4624                           ;ledMatrix.c: 23:     txMAX7219(0x0B,0x07);
  4625     0F78  3007               	movlw	7
  4626     0F79  00F1               	movwf	txMAX7219@dat0
  4627     0F7A  300B               	movlw	11
  4628     0F7B  318E  2641  318F   	fcall	_txMAX7219
  4629                           
  4630                           ;ledMatrix.c: 24:     txMAX7219(0x0C,0x01);
  4631     0F7E  01F1               	clrf	txMAX7219@dat0
  4632     0F7F  0AF1               	incf	txMAX7219@dat0,f
  4633     0F80  300C               	movlw	12
  4634     0F81  318E  2641  318F   	fcall	_txMAX7219
  4635                           
  4636                           ;ledMatrix.c: 25:     txMAX7219(0x0F,0x01);
  4637     0F84  01F1               	clrf	txMAX7219@dat0
  4638     0F85  0AF1               	incf	txMAX7219@dat0,f
  4639     0F86  300F               	movlw	15
  4640     0F87  318E  2641  318F   	fcall	_txMAX7219
  4641     0F8A                     l2661:
  4642                           
  4643                           ;ledMatrix.c: 26:     _delay((unsigned long)((1000)*(8000000/4000.0)));
  4644     0F8A  300B               	movlw	11
  4645     0F8B  00F4               	movwf	??_initMAX7219+1
  4646     0F8C  3026               	movlw	38
  4647     0F8D  00F3               	movwf	??_initMAX7219
  4648     0F8E  305E               	movlw	94
  4649     0F8F                     u2377:
  4650     0F8F  0B89               	decfsz	9,f
  4651     0F90  2F8F               	goto	u2377
  4652     0F91  0BF3               	decfsz	??_initMAX7219,f
  4653     0F92  2F8F               	goto	u2377
  4654     0F93  0BF4               	decfsz	??_initMAX7219+1,f
  4655     0F94  2F8F               	goto	u2377
  4656     0F95                     l2663:
  4657                           
  4658                           ;ledMatrix.c: 27:     txMAX7219(0x0F,0x00);
  4659     0F95  01F1               	clrf	txMAX7219@dat0
  4660     0F96  300F               	movlw	15
  4661     0F97  318E  2641  318F   	fcall	_txMAX7219
  4662     0F9A                     l2665:
  4663                           
  4664                           ;ledMatrix.c: 28:     txMAX7219(0x0C,0x01);
  4665     0F9A  01F1               	clrf	txMAX7219@dat0
  4666     0F9B  0AF1               	incf	txMAX7219@dat0,f
  4667     0F9C  300C               	movlw	12
  4668     0F9D  318E  2641  318F   	fcall	_txMAX7219
  4669     0FA0                     l400:
  4670     0FA0  0008               	return
  4671     0FA1                     __end_of_initMAX7219:
  4672                           
  4673                           	psect	text11
  4674     0E41                     __ptext11:	
  4675 ;; *************** function _txMAX7219 *****************
  4676 ;; Defined at:
  4677 ;;		line 5 in file "ledMatrix.c"
  4678 ;; Parameters:    Size  Location     Type
  4679 ;;  addr0           1    wreg     unsigned char 
  4680 ;;  dat0            1    1[COMMON] unsigned char 
  4681 ;; Auto vars:     Size  Location     Type
  4682 ;;  addr0           1    2[COMMON] unsigned char 
  4683 ;; Return value:  Size  Location     Type
  4684 ;;                  1    wreg      void 
  4685 ;; Registers used:
  4686 ;;		wreg, status,2, status,0, pclath, cstack
  4687 ;; Tracked objects:
  4688 ;;		On entry : 0/0
  4689 ;;		On exit  : 0/0
  4690 ;;		Unchanged: 0/0
  4691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4692 ;;      Params:         1       0       0       0       0       0
  4693 ;;      Locals:         1       0       0       0       0       0
  4694 ;;      Temps:          0       0       0       0       0       0
  4695 ;;      Totals:         2       0       0       0       0       0
  4696 ;;Total ram usage:        2 bytes
  4697 ;; Hardware stack levels used: 1
  4698 ;; Hardware stack levels required when called: 1
  4699 ;; This function calls:
  4700 ;;		_SPI1_WriteByte
  4701 ;; This function is called by:
  4702 ;;		_initMAX7219
  4703 ;;		_sendMatrix
  4704 ;; This function uses a non-reentrant model
  4705 ;;
  4706                           
  4707     0E41                     _txMAX7219:	
  4708                           ;psect for function _txMAX7219
  4709                           
  4710                           
  4711                           ;incstack = 0
  4712                           ; Regs used in _txMAX7219: [wreg+status,2+status,0+pclath+cstack]
  4713                           ;txMAX7219@addr0 stored from wreg
  4714     0E41  00F2               	movwf	txMAX7219@addr0
  4715     0E42                     l2533:
  4716                           
  4717                           ;ledMatrix.c: 6:     LATBbits.LATB1 = 0;
  4718     0E42  0022               	movlb	2	; select bank2
  4719     0E43  108D               	bcf	13,1	;volatile
  4720     0E44                     l2535:
  4721                           
  4722                           ;ledMatrix.c: 7:     SPI1_WriteByte(addr0);
  4723     0E44  0872               	movf	txMAX7219@addr0,w
  4724     0E45  318D  2592  318E   	fcall	_SPI1_WriteByte
  4725     0E48                     l391:	
  4726                           ;ledMatrix.c: 8:     while(!PIR1bits.SSP1IF);
  4727                           
  4728     0E48  0020               	movlb	0	; select bank0
  4729     0E49  1D91               	btfss	17,3	;volatile
  4730     0E4A  2E4C               	goto	u1321
  4731     0E4B  2E4D               	goto	u1320
  4732     0E4C                     u1321:
  4733     0E4C  2E48               	goto	l391
  4734     0E4D                     u1320:
  4735     0E4D                     l393:
  4736                           
  4737                           ;ledMatrix.c: 9:     PIR1bits.SSP1IF = 0;
  4738     0E4D  1191               	bcf	17,3	;volatile
  4739     0E4E                     l2537:
  4740                           
  4741                           ;ledMatrix.c: 10:     SPI1_WriteByte(dat0);
  4742     0E4E  0871               	movf	txMAX7219@dat0,w
  4743     0E4F  318D  2592  318E   	fcall	_SPI1_WriteByte
  4744     0E52                     l394:	
  4745                           ;ledMatrix.c: 11:     while(!PIR1bits.SSP1IF);
  4746                           
  4747     0E52  0020               	movlb	0	; select bank0
  4748     0E53  1D91               	btfss	17,3	;volatile
  4749     0E54  2E56               	goto	u1331
  4750     0E55  2E57               	goto	u1330
  4751     0E56                     u1331:
  4752     0E56  2E52               	goto	l394
  4753     0E57                     u1330:
  4754     0E57                     l396:
  4755                           
  4756                           ;ledMatrix.c: 12:     PIR1bits.SSP1IF = 0;
  4757     0E57  1191               	bcf	17,3	;volatile
  4758                           
  4759                           ;ledMatrix.c: 13:     LATBbits.LATB1 = 1;
  4760     0E58  0022               	movlb	2	; select bank2
  4761     0E59  148D               	bsf	13,1	;volatile
  4762     0E5A                     l397:
  4763     0E5A  0008               	return
  4764     0E5B                     __end_of_txMAX7219:
  4765                           
  4766                           	psect	text12
  4767     0D92                     __ptext12:	
  4768 ;; *************** function _SPI1_WriteByte *****************
  4769 ;; Defined at:
  4770 ;;		line 131 in file "mcc_generated_files/spi1.c"
  4771 ;; Parameters:    Size  Location     Type
  4772 ;;  byte            1    wreg     unsigned char 
  4773 ;; Auto vars:     Size  Location     Type
  4774 ;;  byte            1    0[COMMON] unsigned char 
  4775 ;; Return value:  Size  Location     Type
  4776 ;;                  1    wreg      void 
  4777 ;; Registers used:
  4778 ;;		wreg
  4779 ;; Tracked objects:
  4780 ;;		On entry : 0/0
  4781 ;;		On exit  : 0/0
  4782 ;;		Unchanged: 0/0
  4783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4784 ;;      Params:         0       0       0       0       0       0
  4785 ;;      Locals:         1       0       0       0       0       0
  4786 ;;      Temps:          0       0       0       0       0       0
  4787 ;;      Totals:         1       0       0       0       0       0
  4788 ;;Total ram usage:        1 bytes
  4789 ;; Hardware stack levels used: 1
  4790 ;; This function calls:
  4791 ;;		Nothing
  4792 ;; This function is called by:
  4793 ;;		_txMAX7219
  4794 ;; This function uses a non-reentrant model
  4795 ;;
  4796                           
  4797     0D92                     _SPI1_WriteByte:	
  4798                           ;psect for function _SPI1_WriteByte
  4799                           
  4800                           
  4801                           ;incstack = 0
  4802                           ; Regs used in _SPI1_WriteByte: [wreg]
  4803                           ;SPI1_WriteByte@byte stored from wreg
  4804     0D92  00F0               	movwf	SPI1_WriteByte@byte
  4805     0D93                     l2461:
  4806                           
  4807                           ;mcc_generated_files/spi1.c: 131: void SPI1_WriteByte(uint8_t byte);mcc_generated_files/
      +                          spi1.c: 132: {;mcc_generated_files/spi1.c: 133:     SSP1BUF = byte;
  4808     0D93  0870               	movf	SPI1_WriteByte@byte,w
  4809     0D94  0024               	movlb	4	; select bank4
  4810     0D95  0091               	movwf	17	;volatile
  4811     0D96                     l224:
  4812     0D96  0008               	return
  4813     0D97                     __end_of_SPI1_WriteByte:
  4814                           
  4815                           	psect	text13
  4816     0DDA                     __ptext13:	
  4817 ;; *************** function _deactivateElevator *****************
  4818 ;; Defined at:
  4819 ;;		line 50 in file "main.c"
  4820 ;; Parameters:    Size  Location     Type
  4821 ;;		None
  4822 ;; Auto vars:     Size  Location     Type
  4823 ;;		None
  4824 ;; Return value:  Size  Location     Type
  4825 ;;                  1    wreg      void 
  4826 ;; Registers used:
  4827 ;;		None
  4828 ;; Tracked objects:
  4829 ;;		On entry : 0/0
  4830 ;;		On exit  : 0/0
  4831 ;;		Unchanged: 0/0
  4832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4833 ;;      Params:         0       0       0       0       0       0
  4834 ;;      Locals:         0       0       0       0       0       0
  4835 ;;      Temps:          0       0       0       0       0       0
  4836 ;;      Totals:         0       0       0       0       0       0
  4837 ;;Total ram usage:        0 bytes
  4838 ;; Hardware stack levels used: 1
  4839 ;; This function calls:
  4840 ;;		Nothing
  4841 ;; This function is called by:
  4842 ;;		_main
  4843 ;; This function uses a non-reentrant model
  4844 ;;
  4845                           
  4846     0DDA                     _deactivateElevator:	
  4847                           ;psect for function _deactivateElevator
  4848                           
  4849     0DDA                     l2607:	
  4850                           ;incstack = 0
  4851                           ; Regs used in _deactivateElevator: []
  4852                           
  4853                           
  4854                           ;main.c: 51:     LATAbits.LATA3 = 0;
  4855     0DDA  0022               	movlb	2	; select bank2
  4856     0DDB  118C               	bcf	12,3	;volatile
  4857                           
  4858                           ;main.c: 52:     LATAbits.LATA7 = 0;
  4859     0DDC  138C               	bcf	12,7	;volatile
  4860                           
  4861                           ;main.c: 54:     TRISAbits.TRISA0 = 1;
  4862     0DDD  0021               	movlb	1	; select bank1
  4863     0DDE  140C               	bsf	12,0	;volatile
  4864                           
  4865                           ;main.c: 55:     TRISAbits.TRISA1 = 1;
  4866     0DDF  148C               	bsf	12,1	;volatile
  4867                           
  4868                           ;main.c: 56:     TRISAbits.TRISA2 = 1;
  4869     0DE0  150C               	bsf	12,2	;volatile
  4870                           
  4871                           ;main.c: 57:     TRISAbits.TRISA3 = 0;
  4872     0DE1  118C               	bcf	12,3	;volatile
  4873                           
  4874                           ;main.c: 58:     TRISAbits.TRISA4 = 1;
  4875     0DE2  160C               	bsf	12,4	;volatile
  4876                           
  4877                           ;main.c: 59:     TRISAbits.TRISA7 = 0;
  4878     0DE3  138C               	bcf	12,7	;volatile
  4879                           
  4880                           ;main.c: 60:     TRISBbits.TRISB0 = 1;
  4881     0DE4  140D               	bsf	13,0	;volatile
  4882                           
  4883                           ;main.c: 61:     TRISBbits.TRISB3 = 1;
  4884     0DE5  158D               	bsf	13,3	;volatile
  4885     0DE6                     l333:
  4886     0DE6  0008               	return
  4887     0DE7                     __end_of_deactivateElevator:
  4888                           
  4889                           	psect	text14
  4890     0219                     __ptext14:	
  4891 ;; *************** function _ai_run *****************
  4892 ;; Defined at:
  4893 ;;		line 117 in file "ai.c"
  4894 ;; Parameters:    Size  Location     Type
  4895 ;;		None
  4896 ;; Auto vars:     Size  Location     Type
  4897 ;;  i               1    9[BANK0 ] unsigned char 
  4898 ;;  i               1    8[BANK0 ] unsigned char 
  4899 ;;  i               1   10[BANK0 ] unsigned char 
  4900 ;;  j               1   14[BANK0 ] unsigned char 
  4901 ;;  j               1   13[BANK0 ] unsigned char 
  4902 ;;  i               1    7[BANK0 ] unsigned char 
  4903 ;;  z               2   11[BANK0 ] int 
  4904 ;; Return value:  Size  Location     Type
  4905 ;;                  1    wreg      unsigned char 
  4906 ;; Registers used:
  4907 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4908 ;; Tracked objects:
  4909 ;;		On entry : 0/0
  4910 ;;		On exit  : 0/0
  4911 ;;		Unchanged: 0/0
  4912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4913 ;;      Params:         0       0       0       0       0       0
  4914 ;;      Locals:         0       8       0       0       0       0
  4915 ;;      Temps:          0       3       0       0       0       0
  4916 ;;      Totals:         0      11       0       0       0       0
  4917 ;;Total ram usage:       11 bytes
  4918 ;; Hardware stack levels used: 1
  4919 ;; Hardware stack levels required when called: 1
  4920 ;; This function calls:
  4921 ;;		___awdiv
  4922 ;;		___wmul
  4923 ;;		_sigmoid
  4924 ;; This function is called by:
  4925 ;;		_main
  4926 ;; This function uses a non-reentrant model
  4927 ;;
  4928                           
  4929     0219                     _ai_run:	
  4930                           ;psect for function _ai_run
  4931                           
  4932     0219                     l2777:	
  4933                           ;incstack = 0
  4934                           ; Regs used in _ai_run: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4935                           
  4936                           
  4937                           ;ai.c: 118:     for(uint8_t i = 0; i < 8; i++){
  4938     0219  0020               	movlb	0	; select bank0
  4939     021A  01A7               	clrf	ai_run@i
  4940     021B                     l2783:
  4941                           
  4942                           ;ai.c: 119:         if(Y0[i] > 0){
  4943     021B  0827               	movf	ai_run@i,w
  4944     021C  3E63               	addlw	(low (_Y0| 0))& (0+255)
  4945     021D  0086               	movwf	6
  4946     021E  0187               	clrf	7
  4947     021F  0801               	movf	1,w
  4948     0220  3A80               	xorlw	128
  4949     0221  3E7F               	addlw	-129
  4950     0222  1C03               	skipc
  4951     0223  2A25               	goto	u1711
  4952     0224  2A26               	goto	u1710
  4953     0225                     u1711:
  4954     0225  2A2C               	goto	l2787
  4955     0226                     u1710:
  4956     0226                     l2785:
  4957                           
  4958                           ;ai.c: 120:             Y0[i] = 127;
  4959     0226  0827               	movf	ai_run@i,w
  4960     0227  3E63               	addlw	(low (_Y0| 0))& (0+255)
  4961     0228  0086               	movwf	6
  4962     0229  0187               	clrf	7
  4963     022A  307F               	movlw	127
  4964     022B  0081               	movwf	1
  4965     022C                     l2787:
  4966                           
  4967                           ;ai.c: 122:     }
  4968     022C  3001               	movlw	1
  4969     022D  00A4               	movwf	??_ai_run
  4970     022E  0824               	movf	??_ai_run,w
  4971     022F  07A7               	addwf	ai_run@i,f
  4972     0230                     l2789:
  4973     0230  3008               	movlw	8
  4974     0231  0227               	subwf	ai_run@i,w
  4975     0232  1C03               	skipc
  4976     0233  2A35               	goto	u1721
  4977     0234  2A36               	goto	u1720
  4978     0235                     u1721:
  4979     0235  2A1B               	goto	l2783
  4980     0236                     u1720:
  4981     0236                     l2791:
  4982                           
  4983                           ;ai.c: 124:     int z;;ai.c: 125:     for(uint8_t j = 0; j < 4; j++){
  4984     0236  01AD               	clrf	ai_run@j
  4985     0237                     l2797:
  4986                           
  4987                           ;ai.c: 126:         Z1[j] = B1[j];
  4988     0237  082D               	movf	ai_run@j,w
  4989     0238  3E51               	addlw	(low (_Z1| 0))& (0+255)
  4990     0239  0086               	movwf	6
  4991     023A  0187               	clrf	7
  4992     023B  082D               	movf	ai_run@j,w
  4993     023C  3ECC               	addlw	(low (_B1| 0))& (0+255)
  4994     023D  0084               	movwf	4
  4995     023E  0185               	clrf	5
  4996     023F  0800               	movf	0,w
  4997     0240  0081               	movwf	1
  4998     0241                     l2799:
  4999                           
  5000                           ;ai.c: 127:         for(uint8_t i = 0; i < 8; i++){
  5001     0241  01A8               	clrf	ai_run@i_876
  5002     0242                     l2805:
  5003                           
  5004                           ;ai.c: 128:             z = Y0[i];
  5005     0242  0828               	movf	ai_run@i_876,w
  5006     0243  3E63               	addlw	(low (_Y0| 0))& (0+255)
  5007     0244  0086               	movwf	6
  5008     0245  0187               	clrf	7
  5009     0246  0801               	movf	1,w
  5010     0247  00AB               	movwf	ai_run@z
  5011     0248  01AC               	clrf	ai_run@z+1
  5012     0249  1BAB               	btfsc	ai_run@z,7
  5013     024A  03AC               	decf	ai_run@z+1,f
  5014     024B                     l2807:
  5015                           
  5016                           ;ai.c: 129:             z *= W1[i][j];
  5017     024B  0828               	movf	ai_run@i_876,w
  5018     024C  00A4               	movwf	??_ai_run
  5019     024D  3002               	movlw	2
  5020     024E                     u1735:
  5021     024E  35A4               	lslf	??_ai_run,f
  5022     024F  0B89               	decfsz	9,f
  5023     0250  2A4E               	goto	u1735
  5024     0251  3020               	movlw	(low (_W1| (0+256)))& (0+255)
  5025     0252  0724               	addwf	??_ai_run,w
  5026     0253  00A5               	movwf	??_ai_run+1
  5027     0254  082D               	movf	ai_run@j,w
  5028     0255  0725               	addwf	??_ai_run+1,w
  5029     0256  00A6               	movwf	??_ai_run+2
  5030     0257  0826               	movf	??_ai_run+2,w
  5031     0258  0086               	movwf	6
  5032     0259  3001               	movlw	1	; select bank2/3
  5033     025A  0087               	movwf	7
  5034     025B  0801               	movf	1,w
  5035     025C  00A0               	movwf	___wmul@multiplier
  5036     025D  01A1               	clrf	___wmul@multiplier+1
  5037     025E  1BA0               	btfsc	___wmul@multiplier,7
  5038     025F  03A1               	decf	___wmul@multiplier+1,f
  5039     0260  082C               	movf	ai_run@z+1,w
  5040     0261  00A3               	movwf	___wmul@multiplicand+1
  5041     0262  082B               	movf	ai_run@z,w
  5042     0263  00A2               	movwf	___wmul@multiplicand
  5043     0264  318E  265B  3182   	fcall	___wmul
  5044     0267  0020               	movlb	0	; select bank0
  5045     0268  0821               	movf	?___wmul+1,w
  5046     0269  00AC               	movwf	ai_run@z+1
  5047     026A  0820               	movf	?___wmul,w
  5048     026B  00AB               	movwf	ai_run@z
  5049     026C                     l2809:
  5050                           
  5051                           ;ai.c: 130:             z /= 127;
  5052     026C  307F               	movlw	127
  5053     026D  00F2               	movwf	___awdiv@divisor
  5054     026E  3000               	movlw	0
  5055     026F  00F3               	movwf	___awdiv@divisor+1
  5056     0270  082C               	movf	ai_run@z+1,w
  5057     0271  00F5               	movwf	___awdiv@dividend+1
  5058     0272  082B               	movf	ai_run@z,w
  5059     0273  00F4               	movwf	___awdiv@dividend
  5060     0274  318F  27A1  3182   	fcall	___awdiv
  5061     0277  0873               	movf	?___awdiv+1,w
  5062     0278  0020               	movlb	0	; select bank0
  5063     0279  00AC               	movwf	ai_run@z+1
  5064     027A  0872               	movf	?___awdiv,w
  5065     027B  00AB               	movwf	ai_run@z
  5066     027C                     l2811:
  5067                           
  5068                           ;ai.c: 131:             Z1[j] += z;
  5069     027C  082B               	movf	ai_run@z,w
  5070     027D  00A4               	movwf	??_ai_run
  5071     027E  082D               	movf	ai_run@j,w
  5072     027F  3E51               	addlw	(low (_Z1| 0))& (0+255)
  5073     0280  0086               	movwf	6
  5074     0281  0187               	clrf	7
  5075     0282  0824               	movf	??_ai_run,w
  5076     0283  0781               	addwf	1,f
  5077     0284                     l2813:
  5078                           
  5079                           ;ai.c: 132:         }
  5080     0284  3001               	movlw	1
  5081     0285  00A4               	movwf	??_ai_run
  5082     0286  0824               	movf	??_ai_run,w
  5083     0287  07A8               	addwf	ai_run@i_876,f
  5084     0288                     l2815:
  5085     0288  3008               	movlw	8
  5086     0289  0228               	subwf	ai_run@i_876,w
  5087     028A  1C03               	skipc
  5088     028B  2A8D               	goto	u1741
  5089     028C  2A8E               	goto	u1740
  5090     028D                     u1741:
  5091     028D  2A42               	goto	l2805
  5092     028E                     u1740:
  5093     028E                     l2817:
  5094                           
  5095                           ;ai.c: 133:         Y1[j] = sigmoid(Z1[j])/2;
  5096     028E  082D               	movf	ai_run@j,w
  5097     028F  3E59               	addlw	(low (_Y1| 0))& (0+255)
  5098     0290  0086               	movwf	6
  5099     0291  0187               	clrf	7
  5100     0292  3002               	movlw	2
  5101     0293  00F2               	movwf	___awdiv@divisor
  5102     0294  3000               	movlw	0
  5103     0295  00F3               	movwf	___awdiv@divisor+1
  5104     0296  082D               	movf	ai_run@j,w
  5105     0297  3E51               	addlw	(low (_Z1| 0))& (0+255)
  5106     0298  0084               	movwf	4
  5107     0299  0185               	clrf	5
  5108     029A  0800               	movf	0,w
  5109     029B  318E  2607  3182   	fcall	_sigmoid
  5110     029E  0020               	movlb	0	; select bank0
  5111     029F  00A4               	movwf	??_ai_run
  5112     02A0  01A5               	clrf	??_ai_run+1
  5113     02A1  0824               	movf	??_ai_run,w
  5114     02A2  00F4               	movwf	___awdiv@dividend
  5115     02A3  0825               	movf	??_ai_run+1,w
  5116     02A4  00F5               	movwf	___awdiv@dividend+1
  5117     02A5  318F  27A1  3182   	fcall	___awdiv
  5118     02A8  0872               	movf	?___awdiv,w
  5119     02A9  0081               	movwf	1
  5120     02AA                     l2819:
  5121                           
  5122                           ;ai.c: 134:     }
  5123     02AA  3001               	movlw	1
  5124     02AB  0020               	movlb	0	; select bank0
  5125     02AC  00A4               	movwf	??_ai_run
  5126     02AD  0824               	movf	??_ai_run,w
  5127     02AE  07AD               	addwf	ai_run@j,f
  5128     02AF                     l2821:
  5129     02AF  3004               	movlw	4
  5130     02B0  022D               	subwf	ai_run@j,w
  5131     02B1  1C03               	skipc
  5132     02B2  2AB4               	goto	u1751
  5133     02B3  2AB5               	goto	u1750
  5134     02B4                     u1751:
  5135     02B4  2A37               	goto	l2797
  5136     02B5                     u1750:
  5137     02B5                     l2823:
  5138                           
  5139                           ;ai.c: 135:     for(uint8_t j = 0; j < 4; j++){
  5140     02B5  01AE               	clrf	ai_run@j_877
  5141     02B6                     l2829:
  5142                           
  5143                           ;ai.c: 136:         Z2[j] = B2[j];
  5144     02B6  082E               	movf	ai_run@j_877,w
  5145     02B7  3E4D               	addlw	(low (_Z2| 0))& (0+255)
  5146     02B8  0086               	movwf	6
  5147     02B9  0187               	clrf	7
  5148     02BA  082E               	movf	ai_run@j_877,w
  5149     02BB  3EC8               	addlw	(low (_B2| 0))& (0+255)
  5150     02BC  0084               	movwf	4
  5151     02BD  0185               	clrf	5
  5152     02BE  0800               	movf	0,w
  5153     02BF  0081               	movwf	1
  5154     02C0                     l2831:
  5155                           
  5156                           ;ai.c: 137:         for(uint8_t i = 0; i < 4; i++){
  5157     02C0  01A9               	clrf	ai_run@i_878
  5158     02C1                     l2837:
  5159                           
  5160                           ;ai.c: 138:             z = Y1[i];
  5161     02C1  0829               	movf	ai_run@i_878,w
  5162     02C2  3E59               	addlw	(low (_Y1| 0))& (0+255)
  5163     02C3  0086               	movwf	6
  5164     02C4  0187               	clrf	7
  5165     02C5  0801               	movf	1,w
  5166     02C6  00AB               	movwf	ai_run@z
  5167     02C7  01AC               	clrf	ai_run@z+1
  5168     02C8  1BAB               	btfsc	ai_run@z,7
  5169     02C9  03AC               	decf	ai_run@z+1,f
  5170     02CA                     l2839:
  5171                           
  5172                           ;ai.c: 139:             z *= W2[i][j];
  5173     02CA  0829               	movf	ai_run@i_878,w
  5174     02CB  00A4               	movwf	??_ai_run
  5175     02CC  3002               	movlw	2
  5176     02CD                     u1765:
  5177     02CD  35A4               	lslf	??_ai_run,f
  5178     02CE  0B89               	decfsz	9,f
  5179     02CF  2ACD               	goto	u1765
  5180     02D0  3060               	movlw	(low (_W2| (0+256)))& (0+255)
  5181     02D1  0724               	addwf	??_ai_run,w
  5182     02D2  00A5               	movwf	??_ai_run+1
  5183     02D3  082E               	movf	ai_run@j_877,w
  5184     02D4  0725               	addwf	??_ai_run+1,w
  5185     02D5  00A6               	movwf	??_ai_run+2
  5186     02D6  0826               	movf	??_ai_run+2,w
  5187     02D7  0086               	movwf	6
  5188     02D8  3001               	movlw	1	; select bank2/3
  5189     02D9  0087               	movwf	7
  5190     02DA  0801               	movf	1,w
  5191     02DB  00A0               	movwf	___wmul@multiplier
  5192     02DC  01A1               	clrf	___wmul@multiplier+1
  5193     02DD  1BA0               	btfsc	___wmul@multiplier,7
  5194     02DE  03A1               	decf	___wmul@multiplier+1,f
  5195     02DF  082C               	movf	ai_run@z+1,w
  5196     02E0  00A3               	movwf	___wmul@multiplicand+1
  5197     02E1  082B               	movf	ai_run@z,w
  5198     02E2  00A2               	movwf	___wmul@multiplicand
  5199     02E3  318E  265B  3182   	fcall	___wmul
  5200     02E6  0020               	movlb	0	; select bank0
  5201     02E7  0821               	movf	?___wmul+1,w
  5202     02E8  00AC               	movwf	ai_run@z+1
  5203     02E9  0820               	movf	?___wmul,w
  5204     02EA  00AB               	movwf	ai_run@z
  5205     02EB                     l2841:
  5206                           
  5207                           ;ai.c: 140:             z /= 127;
  5208     02EB  307F               	movlw	127
  5209     02EC  00F2               	movwf	___awdiv@divisor
  5210     02ED  3000               	movlw	0
  5211     02EE  00F3               	movwf	___awdiv@divisor+1
  5212     02EF  082C               	movf	ai_run@z+1,w
  5213     02F0  00F5               	movwf	___awdiv@dividend+1
  5214     02F1  082B               	movf	ai_run@z,w
  5215     02F2  00F4               	movwf	___awdiv@dividend
  5216     02F3  318F  27A1  3182   	fcall	___awdiv
  5217     02F6  0873               	movf	?___awdiv+1,w
  5218     02F7  0020               	movlb	0	; select bank0
  5219     02F8  00AC               	movwf	ai_run@z+1
  5220     02F9  0872               	movf	?___awdiv,w
  5221     02FA  00AB               	movwf	ai_run@z
  5222     02FB                     l2843:
  5223                           
  5224                           ;ai.c: 141:             Z2[j] += z;
  5225     02FB  082B               	movf	ai_run@z,w
  5226     02FC  00A4               	movwf	??_ai_run
  5227     02FD  082E               	movf	ai_run@j_877,w
  5228     02FE  3E4D               	addlw	(low (_Z2| 0))& (0+255)
  5229     02FF  0086               	movwf	6
  5230     0300  0187               	clrf	7
  5231     0301  0824               	movf	??_ai_run,w
  5232     0302  0781               	addwf	1,f
  5233     0303                     l2845:
  5234                           
  5235                           ;ai.c: 142:         }
  5236     0303  3001               	movlw	1
  5237     0304  00A4               	movwf	??_ai_run
  5238     0305  0824               	movf	??_ai_run,w
  5239     0306  07A9               	addwf	ai_run@i_878,f
  5240     0307                     l2847:
  5241     0307  3004               	movlw	4
  5242     0308  0229               	subwf	ai_run@i_878,w
  5243     0309  1C03               	skipc
  5244     030A  2B0C               	goto	u1771
  5245     030B  2B0D               	goto	u1770
  5246     030C                     u1771:
  5247     030C  2AC1               	goto	l2837
  5248     030D                     u1770:
  5249     030D                     l2849:
  5250                           
  5251                           ;ai.c: 143:         Y2[j] = sigmoid(Z2[j])/2;
  5252     030D  082E               	movf	ai_run@j_877,w
  5253     030E  3E55               	addlw	(low (_Y2| 0))& (0+255)
  5254     030F  0086               	movwf	6
  5255     0310  0187               	clrf	7
  5256     0311  3002               	movlw	2
  5257     0312  00F2               	movwf	___awdiv@divisor
  5258     0313  3000               	movlw	0
  5259     0314  00F3               	movwf	___awdiv@divisor+1
  5260     0315  082E               	movf	ai_run@j_877,w
  5261     0316  3E4D               	addlw	(low (_Z2| 0))& (0+255)
  5262     0317  0084               	movwf	4
  5263     0318  0185               	clrf	5
  5264     0319  0800               	movf	0,w
  5265     031A  318E  2607  3182   	fcall	_sigmoid
  5266     031D  0020               	movlb	0	; select bank0
  5267     031E  00A4               	movwf	??_ai_run
  5268     031F  01A5               	clrf	??_ai_run+1
  5269     0320  0824               	movf	??_ai_run,w
  5270     0321  00F4               	movwf	___awdiv@dividend
  5271     0322  0825               	movf	??_ai_run+1,w
  5272     0323  00F5               	movwf	___awdiv@dividend+1
  5273     0324  318F  27A1  3182   	fcall	___awdiv
  5274     0327  0872               	movf	?___awdiv,w
  5275     0328  0081               	movwf	1
  5276     0329                     l2851:
  5277                           
  5278                           ;ai.c: 144:     }
  5279     0329  3001               	movlw	1
  5280     032A  0020               	movlb	0	; select bank0
  5281     032B  00A4               	movwf	??_ai_run
  5282     032C  0824               	movf	??_ai_run,w
  5283     032D  07AE               	addwf	ai_run@j_877,f
  5284     032E                     l2853:
  5285     032E  3004               	movlw	4
  5286     032F  022E               	subwf	ai_run@j_877,w
  5287     0330  1C03               	skipc
  5288     0331  2B33               	goto	u1781
  5289     0332  2B34               	goto	u1780
  5290     0333                     u1781:
  5291     0333  2AB6               	goto	l2829
  5292     0334                     u1780:
  5293     0334                     l2855:
  5294                           
  5295                           ;ai.c: 146:     choice = 0;
  5296     0334  01E0               	clrf	_choice
  5297     0335                     l2857:
  5298                           
  5299                           ;ai.c: 147:     for(uint8_t i = 1; i < 4; i++){
  5300     0335  01AA               	clrf	ai_run@i_879
  5301     0336  0AAA               	incf	ai_run@i_879,f
  5302     0337                     l2863:
  5303                           
  5304                           ;ai.c: 148:         if(Y2[i]>Y2[choice]){
  5305     0337  0860               	movf	_choice,w
  5306     0338  3E55               	addlw	(low (_Y2| 0))& (0+255)
  5307     0339  0086               	movwf	6
  5308     033A  0187               	clrf	7
  5309     033B  0801               	movf	1,w
  5310     033C  3A80               	xorlw	128
  5311     033D  00A4               	movwf	??_ai_run
  5312     033E  082A               	movf	ai_run@i_879,w
  5313     033F  3E55               	addlw	(low (_Y2| 0))& (0+255)
  5314     0340  0086               	movwf	6
  5315     0341  0187               	clrf	7
  5316     0342  0801               	movf	1,w
  5317     0343  3A80               	xorlw	128
  5318     0344  02A4               	subwf	??_ai_run,f
  5319     0345  1803               	skipnc
  5320     0346  2B48               	goto	u1791
  5321     0347  2B49               	goto	u1790
  5322     0348                     u1791:
  5323     0348  2B4B               	goto	l2867
  5324     0349                     u1790:
  5325     0349                     l2865:
  5326                           
  5327                           ;ai.c: 149:             choice = i;
  5328     0349  082A               	movf	ai_run@i_879,w
  5329     034A  00E0               	movwf	_choice
  5330     034B                     l2867:
  5331                           
  5332                           ;ai.c: 151:     }
  5333     034B  3001               	movlw	1
  5334     034C  00A4               	movwf	??_ai_run
  5335     034D  0824               	movf	??_ai_run,w
  5336     034E  07AA               	addwf	ai_run@i_879,f
  5337     034F                     l2869:
  5338     034F  3004               	movlw	4
  5339     0350  022A               	subwf	ai_run@i_879,w
  5340     0351  1C03               	skipc
  5341     0352  2B54               	goto	u1801
  5342     0353  2B55               	goto	u1800
  5343     0354                     u1801:
  5344     0354  2B37               	goto	l2863
  5345     0355                     u1800:
  5346     0355                     l2871:
  5347                           
  5348                           ;ai.c: 152:     return choice;
  5349     0355  0860               	movf	_choice,w
  5350     0356                     l624:
  5351     0356  0008               	return
  5352     0357                     __end_of_ai_run:
  5353                           
  5354                           	psect	text15
  5355     0E07                     __ptext15:	
  5356 ;; *************** function _sigmoid *****************
  5357 ;; Defined at:
  5358 ;;		line 8 in file "sigmoid.c"
  5359 ;; Parameters:    Size  Location     Type
  5360 ;;  z               1    wreg     char 
  5361 ;; Auto vars:     Size  Location     Type
  5362 ;;  z               1    1[COMMON] char 
  5363 ;; Return value:  Size  Location     Type
  5364 ;;                  1    wreg      unsigned char 
  5365 ;; Registers used:
  5366 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  5367 ;; Tracked objects:
  5368 ;;		On entry : 0/0
  5369 ;;		On exit  : 0/0
  5370 ;;		Unchanged: 0/0
  5371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5372 ;;      Params:         0       0       0       0       0       0
  5373 ;;      Locals:         1       0       0       0       0       0
  5374 ;;      Temps:          1       0       0       0       0       0
  5375 ;;      Totals:         2       0       0       0       0       0
  5376 ;;Total ram usage:        2 bytes
  5377 ;; Hardware stack levels used: 1
  5378 ;; This function calls:
  5379 ;;		Nothing
  5380 ;; This function is called by:
  5381 ;;		_ai_run
  5382 ;; This function uses a non-reentrant model
  5383 ;;
  5384                           
  5385     0E07                     _sigmoid:	
  5386                           ;psect for function _sigmoid
  5387                           
  5388                           
  5389                           ;incstack = 0
  5390                           ; Regs used in _sigmoid: [wreg-fsr0h+status,2+status,0+pclath]
  5391                           ;sigmoid@z stored from wreg
  5392     0E07  00F1               	movwf	sigmoid@z
  5393     0E08                     l2539:
  5394                           
  5395                           ;sigmoid.c: 9:     return sigmoidValues[((uint8_t)z)>>4];
  5396     0E08  0871               	movf	sigmoid@z,w
  5397     0E09  00F0               	movwf	??_sigmoid
  5398     0E0A  3004               	movlw	4
  5399     0E0B                     u1345:
  5400     0E0B  36F0               	lsrf	??_sigmoid,f
  5401     0E0C  0B89               	decfsz	9,f
  5402     0E0D  2E0B               	goto	u1345
  5403     0E0E  0870               	movf	??_sigmoid,w
  5404     0E0F  3E10               	addlw	low (_sigmoidValues| (0+32768))
  5405     0E10  0084               	movwf	4
  5406     0E11  3088               	movlw	high (_sigmoidValues| (0+32768))
  5407     0E12  1803               	skipnc
  5408     0E13  3E01               	addlw	1
  5409     0E14  0085               	movwf	5
  5410     0E15  0800               	movf	0,w	;code access
  5411     0E16                     l666:
  5412     0E16  0008               	return
  5413     0E17                     __end_of_sigmoid:
  5414                           
  5415                           	psect	text16
  5416     0548                     __ptext16:	
  5417 ;; *************** function _ai_propagate *****************
  5418 ;; Defined at:
  5419 ;;		line 155 in file "ai.c"
  5420 ;; Parameters:    Size  Location     Type
  5421 ;;  incentive       1    wreg     char 
  5422 ;; Auto vars:     Size  Location     Type
  5423 ;;  incentive       1   14[BANK0 ] char 
  5424 ;;  i               1   20[BANK0 ] unsigned char 
  5425 ;;  i               1   19[BANK0 ] unsigned char 
  5426 ;;  i               1   18[BANK0 ] unsigned char 
  5427 ;;  i               1   24[BANK0 ] unsigned char 
  5428 ;;  i               1   16[BANK0 ] unsigned char 
  5429 ;;  i               1   15[BANK0 ] unsigned char 
  5430 ;;  j               1   26[BANK0 ] unsigned char 
  5431 ;;  j               1   25[BANK0 ] unsigned char 
  5432 ;;  j               1   27[BANK0 ] unsigned char 
  5433 ;;  j               1   28[BANK0 ] unsigned char 
  5434 ;;  j               1   17[BANK0 ] unsigned char 
  5435 ;;  j               1   23[BANK0 ] unsigned char 
  5436 ;;  S               4   10[BANK0 ] char [4]
  5437 ;;  dz              2    0        int 
  5438 ;; Return value:  Size  Location     Type
  5439 ;;                  1    wreg      void 
  5440 ;; Registers used:
  5441 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5442 ;; Tracked objects:
  5443 ;;		On entry : 0/0
  5444 ;;		On exit  : 0/0
  5445 ;;		Unchanged: 0/0
  5446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5447 ;;      Params:         0       0       0       0       0       0
  5448 ;;      Locals:         0      19       0       0       0       0
  5449 ;;      Temps:          0       6       0       0       0       0
  5450 ;;      Totals:         0      25       0       0       0       0
  5451 ;;Total ram usage:       25 bytes
  5452 ;; Hardware stack levels used: 1
  5453 ;; Hardware stack levels required when called: 1
  5454 ;; This function calls:
  5455 ;;		___awdiv
  5456 ;;		___wmul
  5457 ;;		_de_sigmoid
  5458 ;; This function is called by:
  5459 ;;		_main
  5460 ;; This function uses a non-reentrant model
  5461 ;;
  5462                           
  5463     0548                     _ai_propagate:	
  5464                           ;psect for function _ai_propagate
  5465                           
  5466                           
  5467                           ;incstack = 0
  5468                           ; Regs used in _ai_propagate: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5469                           ;ai_propagate@incentive stored from wreg
  5470     0548  0020               	movlb	0	; select bank0
  5471     0549  00AE               	movwf	ai_propagate@incentive
  5472     054A                     l2961:
  5473                           
  5474                           ;ai.c: 156:     if(incentive == 0){
  5475     054A  082E               	movf	ai_propagate@incentive,w
  5476     054B  1D03               	btfss	3,2
  5477     054C  2D4E               	goto	u1921
  5478     054D  2D4F               	goto	u1920
  5479     054E                     u1921:
  5480     054E  2D50               	goto	l2965
  5481     054F                     u1920:
  5482     054F  2FD0               	goto	l628
  5483     0550                     l2965:
  5484                           
  5485                           ;ai.c: 160:     if(incentive == -1){
  5486     0550  0A2E               	incf	ai_propagate@incentive,w
  5487     0551  1D03               	btfss	3,2
  5488     0552  2D54               	goto	u1931
  5489     0553  2D55               	goto	u1930
  5490     0554                     u1931:
  5491     0554  2D56               	goto	l2969
  5492     0555                     u1930:
  5493     0555                     l2967:
  5494                           
  5495                           ;ai.c: 161:         incentive = 0;
  5496     0555  01AE               	clrf	ai_propagate@incentive
  5497     0556                     l2969:
  5498                           
  5499                           ;ai.c: 164:     int8_t S[4];;ai.c: 165:     if(incentive == 0){
  5500     0556  082E               	movf	ai_propagate@incentive,w
  5501     0557  1D03               	btfss	3,2
  5502     0558  2D5A               	goto	u1941
  5503     0559  2D5B               	goto	u1940
  5504     055A                     u1941:
  5505     055A  2D72               	goto	l2985
  5506     055B                     u1940:
  5507     055B                     l2971:
  5508                           
  5509                           ;ai.c: 166:         for(uint8_t i = 0; i < 4; i++){
  5510     055B  01AF               	clrf	ai_propagate@i
  5511     055C                     l2977:
  5512                           
  5513                           ;ai.c: 167:             S[i] = 127;
  5514     055C  082F               	movf	ai_propagate@i,w
  5515     055D  3E2A               	addlw	(low (ai_propagate@S| 0))& (0+255)
  5516     055E  0086               	movwf	6
  5517     055F  0187               	clrf	7
  5518     0560  307F               	movlw	127
  5519     0561  0081               	movwf	1
  5520     0562                     l2979:
  5521                           
  5522                           ;ai.c: 168:         }
  5523     0562  3001               	movlw	1
  5524     0563  00A4               	movwf	??_ai_propagate
  5525     0564  0824               	movf	??_ai_propagate,w
  5526     0565  07AF               	addwf	ai_propagate@i,f
  5527     0566                     l2981:
  5528     0566  3004               	movlw	4
  5529     0567  022F               	subwf	ai_propagate@i,w
  5530     0568  1C03               	skipc
  5531     0569  2D6B               	goto	u1951
  5532     056A  2D6C               	goto	u1950
  5533     056B                     u1951:
  5534     056B  2D5C               	goto	l2977
  5535     056C                     u1950:
  5536     056C                     l2983:
  5537                           
  5538                           ;ai.c: 169:         S[choice] = 0;
  5539     056C  0860               	movf	_choice,w
  5540     056D  3E2A               	addlw	(low (ai_propagate@S| 0))& (0+255)
  5541     056E  0086               	movwf	6
  5542     056F  0187               	clrf	7
  5543     0570  0181               	clrf	1
  5544                           
  5545                           ;ai.c: 170:     } else{
  5546     0571  2D88               	goto	l2999
  5547     0572                     l2985:
  5548                           
  5549                           ;ai.c: 171:         for(uint8_t i = 0; i < 4; i++){
  5550     0572  01B0               	clrf	ai_propagate@i_884
  5551     0573                     l2991:
  5552                           
  5553                           ;ai.c: 172:             S[i] = 0;
  5554     0573  0830               	movf	ai_propagate@i_884,w
  5555     0574  3E2A               	addlw	(low (ai_propagate@S| 0))& (0+255)
  5556     0575  0086               	movwf	6
  5557     0576  0187               	clrf	7
  5558     0577  0181               	clrf	1
  5559     0578                     l2993:
  5560                           
  5561                           ;ai.c: 173:         }
  5562     0578  3001               	movlw	1
  5563     0579  00A4               	movwf	??_ai_propagate
  5564     057A  0824               	movf	??_ai_propagate,w
  5565     057B  07B0               	addwf	ai_propagate@i_884,f
  5566     057C                     l2995:
  5567     057C  3004               	movlw	4
  5568     057D  0230               	subwf	ai_propagate@i_884,w
  5569     057E  1C03               	skipc
  5570     057F  2D81               	goto	u1961
  5571     0580  2D82               	goto	u1960
  5572     0581                     u1961:
  5573     0581  2D73               	goto	l2991
  5574     0582                     u1960:
  5575     0582                     l2997:
  5576                           
  5577                           ;ai.c: 174:         S[choice] = 127;
  5578     0582  0860               	movf	_choice,w
  5579     0583  3E2A               	addlw	(low (ai_propagate@S| 0))& (0+255)
  5580     0584  0086               	movwf	6
  5581     0585  0187               	clrf	7
  5582     0586  307F               	movlw	127
  5583     0587  0081               	movwf	1
  5584     0588                     l2999:
  5585                           
  5586                           ;ai.c: 177:     for(uint8_t j = 0; j < 4; j++){
  5587     0588  01B7               	clrf	ai_propagate@j
  5588     0589                     l3005:
  5589                           
  5590                           ;ai.c: 178:         DC_DY2[j] = Y2[j] - S[j];
  5591     0589  0837               	movf	ai_propagate@j,w
  5592     058A  3EC4               	addlw	(low (_DC_DY2| 0))& (0+255)
  5593     058B  0086               	movwf	6
  5594     058C  0187               	clrf	7
  5595     058D  0837               	movf	ai_propagate@j,w
  5596     058E  3E2A               	addlw	(low (ai_propagate@S| 0))& (0+255)
  5597     058F  0084               	movwf	4
  5598     0590  0185               	clrf	5
  5599     0591  0800               	movf	0,w
  5600     0592  00A4               	movwf	??_ai_propagate
  5601     0593  0837               	movf	ai_propagate@j,w
  5602     0594  3E55               	addlw	(low (_Y2| 0))& (0+255)
  5603     0595  0084               	movwf	4
  5604     0596  0185               	clrf	5
  5605     0597  0800               	movf	0,w
  5606     0598  00A5               	movwf	??_ai_propagate+1
  5607     0599  0824               	movf	??_ai_propagate,w
  5608     059A  0225               	subwf	??_ai_propagate+1,w
  5609     059B  0081               	movwf	1
  5610     059C                     l3007:
  5611                           
  5612                           ;ai.c: 179:     }
  5613     059C  3001               	movlw	1
  5614     059D  00A4               	movwf	??_ai_propagate
  5615     059E  0824               	movf	??_ai_propagate,w
  5616     059F  07B7               	addwf	ai_propagate@j,f
  5617     05A0                     l3009:
  5618     05A0  3004               	movlw	4
  5619     05A1  0237               	subwf	ai_propagate@j,w
  5620     05A2  1C03               	skipc
  5621     05A3  2DA5               	goto	u1971
  5622     05A4  2DA6               	goto	u1970
  5623     05A5                     u1971:
  5624     05A5  2D89               	goto	l3005
  5625     05A6                     u1970:
  5626     05A6                     l3011:
  5627                           
  5628                           ;ai.c: 181:     for(uint8_t j = 0; j < 4; j++){
  5629     05A6  01B1               	clrf	ai_propagate@j_886
  5630     05A7                     l3017:
  5631                           
  5632                           ;ai.c: 182:         DC_DY1[j] = 0;
  5633     05A7  0831               	movf	ai_propagate@j_886,w
  5634     05A8  3EB0               	addlw	(low (_DC_DY1| 0))& (0+255)
  5635     05A9  0086               	movwf	6
  5636     05AA  0187               	clrf	7
  5637     05AB  0181               	clrf	1
  5638     05AC                     l3019:
  5639                           
  5640                           ;ai.c: 183:     }
  5641     05AC  3001               	movlw	1
  5642     05AD  00A4               	movwf	??_ai_propagate
  5643     05AE  0824               	movf	??_ai_propagate,w
  5644     05AF  07B1               	addwf	ai_propagate@j_886,f
  5645     05B0                     l3021:
  5646     05B0  3004               	movlw	4
  5647     05B1  0231               	subwf	ai_propagate@j_886,w
  5648     05B2  1C03               	skipc
  5649     05B3  2DB5               	goto	u1981
  5650     05B4  2DB6               	goto	u1980
  5651     05B5                     u1981:
  5652     05B5  2DA7               	goto	l3017
  5653     05B6                     u1980:
  5654     05B6                     l3023:
  5655                           
  5656                           ;ai.c: 185:     int dz;;ai.c: 186:     for(uint8_t j = 0; j < 4; j++){
  5657     05B6  01BC               	clrf	ai_propagate@j_888
  5658     05B7                     l3029:
  5659                           
  5660                           ;ai.c: 187:         DC_DZ2[j] = ((int)DC_DY2[j]*(int)(de_sigmoid(Z2[j])/2))/127;
  5661     05B7  083C               	movf	ai_propagate@j_888,w
  5662     05B8  3EC4               	addlw	(low (_DC_DY2| 0))& (0+255)
  5663     05B9  0086               	movwf	6
  5664     05BA  0187               	clrf	7
  5665     05BB  0801               	movf	1,w
  5666     05BC  00A0               	movwf	___wmul@multiplier
  5667     05BD  01A1               	clrf	___wmul@multiplier+1
  5668     05BE  1BA0               	btfsc	___wmul@multiplier,7
  5669     05BF  03A1               	decf	___wmul@multiplier+1,f
  5670     05C0  3002               	movlw	2
  5671     05C1  00F2               	movwf	___awdiv@divisor
  5672     05C2  3000               	movlw	0
  5673     05C3  00F3               	movwf	___awdiv@divisor+1
  5674     05C4  083C               	movf	ai_propagate@j_888,w
  5675     05C5  3E4D               	addlw	(low (_Z2| 0))& (0+255)
  5676     05C6  0086               	movwf	6
  5677     05C7  0187               	clrf	7
  5678     05C8  0801               	movf	1,w
  5679     05C9  318D  25F7  3185   	fcall	_de_sigmoid
  5680     05CC  0020               	movlb	0	; select bank0
  5681     05CD  00A4               	movwf	??_ai_propagate
  5682     05CE  01A5               	clrf	??_ai_propagate+1
  5683     05CF  0824               	movf	??_ai_propagate,w
  5684     05D0  00F4               	movwf	___awdiv@dividend
  5685     05D1  0825               	movf	??_ai_propagate+1,w
  5686     05D2  00F5               	movwf	___awdiv@dividend+1
  5687     05D3  318F  27A1  3185   	fcall	___awdiv
  5688     05D6  0873               	movf	?___awdiv+1,w
  5689     05D7  0020               	movlb	0	; select bank0
  5690     05D8  00A3               	movwf	___wmul@multiplicand+1
  5691     05D9  0872               	movf	?___awdiv,w
  5692     05DA  00A2               	movwf	___wmul@multiplicand
  5693     05DB  318E  265B  3185   	fcall	___wmul
  5694     05DE  0020               	movlb	0	; select bank0
  5695     05DF  0821               	movf	?___wmul+1,w
  5696     05E0  00B6               	movwf	_ai_propagate$1579+1
  5697     05E1  0820               	movf	?___wmul,w
  5698     05E2  00B5               	movwf	_ai_propagate$1579
  5699     05E3                     l3031:
  5700                           
  5701                           ;ai.c: 187:         DC_DZ2[j] = ((int)DC_DY2[j]*(int)(de_sigmoid(Z2[j])/2))/127;
  5702     05E3  083C               	movf	ai_propagate@j_888,w
  5703     05E4  3E49               	addlw	(low (_DC_DZ2| 0))& (0+255)
  5704     05E5  0086               	movwf	6
  5705     05E6  0187               	clrf	7
  5706     05E7  307F               	movlw	127
  5707     05E8  00F2               	movwf	___awdiv@divisor
  5708     05E9  3000               	movlw	0
  5709     05EA  00F3               	movwf	___awdiv@divisor+1
  5710     05EB  0836               	movf	_ai_propagate$1579+1,w
  5711     05EC  00F5               	movwf	___awdiv@dividend+1
  5712     05ED  0835               	movf	_ai_propagate$1579,w
  5713     05EE  00F4               	movwf	___awdiv@dividend
  5714     05EF  318F  27A1  3185   	fcall	___awdiv
  5715     05F2  0872               	movf	?___awdiv,w
  5716     05F3  0081               	movwf	1
  5717     05F4                     l3033:
  5718                           
  5719                           ;ai.c: 188:         DC_DB2[j] = DC_DZ2[j]/64;
  5720     05F4  0020               	movlb	0	; select bank0
  5721     05F5  083C               	movf	ai_propagate@j_888,w
  5722     05F6  3EB4               	addlw	(low (_DC_DB2| 0))& (0+255)
  5723     05F7  0086               	movwf	6
  5724     05F8  0187               	clrf	7
  5725     05F9  3040               	movlw	64
  5726     05FA  00F2               	movwf	___awdiv@divisor
  5727     05FB  3000               	movlw	0
  5728     05FC  00F3               	movwf	___awdiv@divisor+1
  5729     05FD  083C               	movf	ai_propagate@j_888,w
  5730     05FE  3E49               	addlw	(low (_DC_DZ2| 0))& (0+255)
  5731     05FF  0084               	movwf	4
  5732     0600  0185               	clrf	5
  5733     0601  0800               	movf	0,w
  5734     0602  00F4               	movwf	___awdiv@dividend
  5735     0603  01F5               	clrf	___awdiv@dividend+1
  5736     0604  1BF4               	btfsc	___awdiv@dividend,7
  5737     0605  03F5               	decf	___awdiv@dividend+1,f
  5738     0606  318F  27A1  3185   	fcall	___awdiv
  5739     0609  0872               	movf	?___awdiv,w
  5740     060A  0081               	movwf	1
  5741     060B                     l3035:
  5742                           
  5743                           ;ai.c: 189:         for(uint8_t i = 0; i < 4; i++){
  5744     060B  0020               	movlb	0	; select bank0
  5745     060C  01B8               	clrf	ai_propagate@i_889
  5746     060D                     l3041:
  5747                           
  5748                           ;ai.c: 190:             DC_DW2[i][j] = (((int)DC_DZ2[j]*(int)Y1[i])/127)/64;
  5749     060D  307F               	movlw	127
  5750     060E  00F2               	movwf	___awdiv@divisor
  5751     060F  3000               	movlw	0
  5752     0610  00F3               	movwf	___awdiv@divisor+1
  5753     0611  083C               	movf	ai_propagate@j_888,w
  5754     0612  3E49               	addlw	(low (_DC_DZ2| 0))& (0+255)
  5755     0613  0086               	movwf	6
  5756     0614  0187               	clrf	7
  5757     0615  0801               	movf	1,w
  5758     0616  00A0               	movwf	___wmul@multiplier
  5759     0617  01A1               	clrf	___wmul@multiplier+1
  5760     0618  1BA0               	btfsc	___wmul@multiplier,7
  5761     0619  03A1               	decf	___wmul@multiplier+1,f
  5762     061A  0838               	movf	ai_propagate@i_889,w
  5763     061B  3E59               	addlw	(low (_Y1| 0))& (0+255)
  5764     061C  0086               	movwf	6
  5765     061D  0187               	clrf	7
  5766     061E  0801               	movf	1,w
  5767     061F  00A2               	movwf	___wmul@multiplicand
  5768     0620  01A3               	clrf	___wmul@multiplicand+1
  5769     0621  1BA2               	btfsc	___wmul@multiplicand,7
  5770     0622  03A3               	decf	___wmul@multiplicand+1,f
  5771     0623  318E  265B  3185   	fcall	___wmul
  5772     0626  0020               	movlb	0	; select bank0
  5773     0627  0821               	movf	?___wmul+1,w
  5774     0628  00F5               	movwf	___awdiv@dividend+1
  5775     0629  0820               	movf	?___wmul,w
  5776     062A  00F4               	movwf	___awdiv@dividend
  5777     062B  318F  27A1  3185   	fcall	___awdiv
  5778     062E  0873               	movf	?___awdiv+1,w
  5779     062F  0020               	movlb	0	; select bank0
  5780     0630  00B6               	movwf	_ai_propagate$1579+1
  5781     0631  0872               	movf	?___awdiv,w
  5782     0632  00B5               	movwf	_ai_propagate$1579
  5783                           
  5784                           ;ai.c: 190:             DC_DW2[i][j] = (((int)DC_DZ2[j]*(int)Y1[i])/127)/64;
  5785     0633  0838               	movf	ai_propagate@i_889,w
  5786     0634  00A4               	movwf	??_ai_propagate
  5787     0635  3002               	movlw	2
  5788     0636                     u1995:
  5789     0636  35A4               	lslf	??_ai_propagate,f
  5790     0637  0B89               	decfsz	9,f
  5791     0638  2E36               	goto	u1995
  5792     0639  3040               	movlw	(low (_DC_DW2| (0+256)))& (0+255)
  5793     063A  0724               	addwf	??_ai_propagate,w
  5794     063B  00A5               	movwf	??_ai_propagate+1
  5795     063C  083C               	movf	ai_propagate@j_888,w
  5796     063D  0725               	addwf	??_ai_propagate+1,w
  5797     063E  00A6               	movwf	??_ai_propagate+2
  5798     063F  0826               	movf	??_ai_propagate+2,w
  5799     0640  0086               	movwf	6
  5800     0641  3001               	movlw	1	; select bank2/3
  5801     0642  0087               	movwf	7
  5802     0643  3040               	movlw	64
  5803     0644  00F2               	movwf	___awdiv@divisor
  5804     0645  3000               	movlw	0
  5805     0646  00F3               	movwf	___awdiv@divisor+1
  5806     0647  0836               	movf	_ai_propagate$1579+1,w
  5807     0648  00F5               	movwf	___awdiv@dividend+1
  5808     0649  0835               	movf	_ai_propagate$1579,w
  5809     064A  00F4               	movwf	___awdiv@dividend
  5810     064B  318F  27A1  3185   	fcall	___awdiv
  5811     064E  0872               	movf	?___awdiv,w
  5812     064F  0081               	movwf	1
  5813                           
  5814                           ;ai.c: 191:             DC_DY1[i] += ((int)DC_DZ2[j]*(int)W2[i][j])/127;
  5815     0650  307F               	movlw	127
  5816     0651  00F2               	movwf	___awdiv@divisor
  5817     0652  3000               	movlw	0
  5818     0653  00F3               	movwf	___awdiv@divisor+1
  5819     0654  0020               	movlb	0	; select bank0
  5820     0655  083C               	movf	ai_propagate@j_888,w
  5821     0656  3E49               	addlw	(low (_DC_DZ2| 0))& (0+255)
  5822     0657  0086               	movwf	6
  5823     0658  0187               	clrf	7
  5824     0659  0801               	movf	1,w
  5825     065A  00A0               	movwf	___wmul@multiplier
  5826     065B  01A1               	clrf	___wmul@multiplier+1
  5827     065C  1BA0               	btfsc	___wmul@multiplier,7
  5828     065D  03A1               	decf	___wmul@multiplier+1,f
  5829     065E  0838               	movf	ai_propagate@i_889,w
  5830     065F  00A4               	movwf	??_ai_propagate
  5831     0660  3002               	movlw	2
  5832     0661                     u2005:
  5833     0661  35A4               	lslf	??_ai_propagate,f
  5834     0662  0B89               	decfsz	9,f
  5835     0663  2E61               	goto	u2005
  5836     0664  3060               	movlw	(low (_W2| (0+256)))& (0+255)
  5837     0665  0724               	addwf	??_ai_propagate,w
  5838     0666  00A5               	movwf	??_ai_propagate+1
  5839     0667  083C               	movf	ai_propagate@j_888,w
  5840     0668  0725               	addwf	??_ai_propagate+1,w
  5841     0669  00A6               	movwf	??_ai_propagate+2
  5842     066A  0826               	movf	??_ai_propagate+2,w
  5843     066B  0086               	movwf	6
  5844     066C  3001               	movlw	1	; select bank2/3
  5845     066D  0087               	movwf	7
  5846     066E  0801               	movf	1,w
  5847     066F  00A2               	movwf	___wmul@multiplicand
  5848     0670  01A3               	clrf	___wmul@multiplicand+1
  5849     0671  1BA2               	btfsc	___wmul@multiplicand,7
  5850     0672  03A3               	decf	___wmul@multiplicand+1,f
  5851     0673  318E  265B  3185   	fcall	___wmul
  5852     0676  0020               	movlb	0	; select bank0
  5853     0677  0821               	movf	?___wmul+1,w
  5854     0678  00F5               	movwf	___awdiv@dividend+1
  5855     0679  0820               	movf	?___wmul,w
  5856     067A  00F4               	movwf	___awdiv@dividend
  5857     067B  318F  27A1  3185   	fcall	___awdiv
  5858     067E  0872               	movf	?___awdiv,w
  5859     067F  0020               	movlb	0	; select bank0
  5860     0680  00A7               	movwf	??_ai_propagate+3
  5861     0681  0838               	movf	ai_propagate@i_889,w
  5862     0682  3EB0               	addlw	(low (_DC_DY1| 0))& (0+255)
  5863     0683  0086               	movwf	6
  5864     0684  0187               	clrf	7
  5865     0685  0827               	movf	??_ai_propagate+3,w
  5866     0686  0781               	addwf	1,f
  5867     0687                     l3043:
  5868                           
  5869                           ;ai.c: 193:         }
  5870     0687  3001               	movlw	1
  5871     0688  00A4               	movwf	??_ai_propagate
  5872     0689  0824               	movf	??_ai_propagate,w
  5873     068A  07B8               	addwf	ai_propagate@i_889,f
  5874     068B                     l3045:
  5875     068B  3004               	movlw	4
  5876     068C  0238               	subwf	ai_propagate@i_889,w
  5877     068D  1C03               	skipc
  5878     068E  2E90               	goto	u2011
  5879     068F  2E91               	goto	u2010
  5880     0690                     u2011:
  5881     0690  2E0D               	goto	l3041
  5882     0691                     u2010:
  5883     0691                     l3047:
  5884                           
  5885                           ;ai.c: 194:     }
  5886     0691  3001               	movlw	1
  5887     0692  00A4               	movwf	??_ai_propagate
  5888     0693  0824               	movf	??_ai_propagate,w
  5889     0694  07BC               	addwf	ai_propagate@j_888,f
  5890     0695                     l3049:
  5891     0695  3004               	movlw	4
  5892     0696  023C               	subwf	ai_propagate@j_888,w
  5893     0697  1C03               	skipc
  5894     0698  2E9A               	goto	u2021
  5895     0699  2E9B               	goto	u2020
  5896     069A                     u2021:
  5897     069A  2DB7               	goto	l3029
  5898     069B                     u2020:
  5899     069B                     l3051:
  5900                           
  5901                           ;ai.c: 195:     for(uint8_t j = 0; j < 4; j++){
  5902     069B  01BB               	clrf	ai_propagate@j_890
  5903     069C                     l3057:
  5904                           
  5905                           ;ai.c: 196:         DC_DZ1[j] = ((int)DC_DY1[j]*(int)(de_sigmoid(Z1[j])/2))/127;
  5906     069C  083B               	movf	ai_propagate@j_890,w
  5907     069D  3EB0               	addlw	(low (_DC_DY1| 0))& (0+255)
  5908     069E  0086               	movwf	6
  5909     069F  0187               	clrf	7
  5910     06A0  0801               	movf	1,w
  5911     06A1  00A0               	movwf	___wmul@multiplier
  5912     06A2  01A1               	clrf	___wmul@multiplier+1
  5913     06A3  1BA0               	btfsc	___wmul@multiplier,7
  5914     06A4  03A1               	decf	___wmul@multiplier+1,f
  5915     06A5  3002               	movlw	2
  5916     06A6  00F2               	movwf	___awdiv@divisor
  5917     06A7  3000               	movlw	0
  5918     06A8  00F3               	movwf	___awdiv@divisor+1
  5919     06A9  083B               	movf	ai_propagate@j_890,w
  5920     06AA  3E51               	addlw	(low (_Z1| 0))& (0+255)
  5921     06AB  0086               	movwf	6
  5922     06AC  0187               	clrf	7
  5923     06AD  0801               	movf	1,w
  5924     06AE  318D  25F7  3185   	fcall	_de_sigmoid
  5925     06B1  0020               	movlb	0	; select bank0
  5926     06B2  00A4               	movwf	??_ai_propagate
  5927     06B3  01A5               	clrf	??_ai_propagate+1
  5928     06B4  0824               	movf	??_ai_propagate,w
  5929     06B5  00F4               	movwf	___awdiv@dividend
  5930     06B6  0825               	movf	??_ai_propagate+1,w
  5931     06B7  00F5               	movwf	___awdiv@dividend+1
  5932     06B8  318F  27A1  3185   	fcall	___awdiv
  5933     06BB  0873               	movf	?___awdiv+1,w
  5934     06BC  0020               	movlb	0	; select bank0
  5935     06BD  00A3               	movwf	___wmul@multiplicand+1
  5936     06BE  0872               	movf	?___awdiv,w
  5937     06BF  00A2               	movwf	___wmul@multiplicand
  5938     06C0  318E  265B  3185   	fcall	___wmul
  5939     06C3  0020               	movlb	0	; select bank0
  5940     06C4  0821               	movf	?___wmul+1,w
  5941     06C5  00B6               	movwf	_ai_propagate$1579+1
  5942     06C6  0820               	movf	?___wmul,w
  5943     06C7  00B5               	movwf	_ai_propagate$1579
  5944     06C8                     l3059:
  5945                           
  5946                           ;ai.c: 196:         DC_DZ1[j] = ((int)DC_DY1[j]*(int)(de_sigmoid(Z1[j])/2))/127;
  5947     06C8  083B               	movf	ai_propagate@j_890,w
  5948     06C9  3EAC               	addlw	(low (_DC_DZ1| 0))& (0+255)
  5949     06CA  0086               	movwf	6
  5950     06CB  0187               	clrf	7
  5951     06CC  307F               	movlw	127
  5952     06CD  00F2               	movwf	___awdiv@divisor
  5953     06CE  3000               	movlw	0
  5954     06CF  00F3               	movwf	___awdiv@divisor+1
  5955     06D0  0836               	movf	_ai_propagate$1579+1,w
  5956     06D1  00F5               	movwf	___awdiv@dividend+1
  5957     06D2  0835               	movf	_ai_propagate$1579,w
  5958     06D3  00F4               	movwf	___awdiv@dividend
  5959     06D4  318F  27A1  3185   	fcall	___awdiv
  5960     06D7  0872               	movf	?___awdiv,w
  5961     06D8  0081               	movwf	1
  5962     06D9                     l3061:
  5963                           
  5964                           ;ai.c: 197:         DC_DB1[j] = DC_DZ1[j]/64;
  5965     06D9  0020               	movlb	0	; select bank0
  5966     06DA  083B               	movf	ai_propagate@j_890,w
  5967     06DB  3EA8               	addlw	(low (_DC_DB1| 0))& (0+255)
  5968     06DC  0086               	movwf	6
  5969     06DD  0187               	clrf	7
  5970     06DE  3040               	movlw	64
  5971     06DF  00F2               	movwf	___awdiv@divisor
  5972     06E0  3000               	movlw	0
  5973     06E1  00F3               	movwf	___awdiv@divisor+1
  5974     06E2  083B               	movf	ai_propagate@j_890,w
  5975     06E3  3EAC               	addlw	(low (_DC_DZ1| 0))& (0+255)
  5976     06E4  0084               	movwf	4
  5977     06E5  0185               	clrf	5
  5978     06E6  0800               	movf	0,w
  5979     06E7  00F4               	movwf	___awdiv@dividend
  5980     06E8  01F5               	clrf	___awdiv@dividend+1
  5981     06E9  1BF4               	btfsc	___awdiv@dividend,7
  5982     06EA  03F5               	decf	___awdiv@dividend+1,f
  5983     06EB  318F  27A1  3185   	fcall	___awdiv
  5984     06EE  0872               	movf	?___awdiv,w
  5985     06EF  0081               	movwf	1
  5986     06F0                     l3063:
  5987                           
  5988                           ;ai.c: 198:         for(uint8_t i = 0; i < 8; i++){
  5989     06F0  0020               	movlb	0	; select bank0
  5990     06F1  01B2               	clrf	ai_propagate@i_891
  5991     06F2                     l3069:
  5992                           
  5993                           ;ai.c: 199:             DC_DW2[i][j] = (((int)DC_DZ2[j]*(int)Y0[i])/127)/64;
  5994     06F2  307F               	movlw	127
  5995     06F3  00F2               	movwf	___awdiv@divisor
  5996     06F4  3000               	movlw	0
  5997     06F5  00F3               	movwf	___awdiv@divisor+1
  5998     06F6  083B               	movf	ai_propagate@j_890,w
  5999     06F7  3E49               	addlw	(low (_DC_DZ2| 0))& (0+255)
  6000     06F8  0086               	movwf	6
  6001     06F9  0187               	clrf	7
  6002     06FA  0801               	movf	1,w
  6003     06FB  00A0               	movwf	___wmul@multiplier
  6004     06FC  01A1               	clrf	___wmul@multiplier+1
  6005     06FD  1BA0               	btfsc	___wmul@multiplier,7
  6006     06FE  03A1               	decf	___wmul@multiplier+1,f
  6007     06FF  0832               	movf	ai_propagate@i_891,w
  6008     0700  3E63               	addlw	(low (_Y0| 0))& (0+255)
  6009     0701  0086               	movwf	6
  6010     0702  0187               	clrf	7
  6011     0703  0801               	movf	1,w
  6012     0704  00A2               	movwf	___wmul@multiplicand
  6013     0705  01A3               	clrf	___wmul@multiplicand+1
  6014     0706  1BA2               	btfsc	___wmul@multiplicand,7
  6015     0707  03A3               	decf	___wmul@multiplicand+1,f
  6016     0708  318E  265B  3185   	fcall	___wmul
  6017     070B  0020               	movlb	0	; select bank0
  6018     070C  0821               	movf	?___wmul+1,w
  6019     070D  00F5               	movwf	___awdiv@dividend+1
  6020     070E  0820               	movf	?___wmul,w
  6021     070F  00F4               	movwf	___awdiv@dividend
  6022     0710  318F  27A1  3185   	fcall	___awdiv
  6023     0713  0873               	movf	?___awdiv+1,w
  6024     0714  0020               	movlb	0	; select bank0
  6025     0715  00B6               	movwf	_ai_propagate$1579+1
  6026     0716  0872               	movf	?___awdiv,w
  6027     0717  00B5               	movwf	_ai_propagate$1579
  6028                           
  6029                           ;ai.c: 199:             DC_DW2[i][j] = (((int)DC_DZ2[j]*(int)Y0[i])/127)/64;
  6030     0718  0832               	movf	ai_propagate@i_891,w
  6031     0719  00A4               	movwf	??_ai_propagate
  6032     071A  3002               	movlw	2
  6033     071B                     u2035:
  6034     071B  35A4               	lslf	??_ai_propagate,f
  6035     071C  0B89               	decfsz	9,f
  6036     071D  2F1B               	goto	u2035
  6037     071E  3040               	movlw	(low (_DC_DW2| (0+256)))& (0+255)
  6038     071F  0724               	addwf	??_ai_propagate,w
  6039     0720  00A5               	movwf	??_ai_propagate+1
  6040     0721  083B               	movf	ai_propagate@j_890,w
  6041     0722  0725               	addwf	??_ai_propagate+1,w
  6042     0723  00A6               	movwf	??_ai_propagate+2
  6043     0724  0826               	movf	??_ai_propagate+2,w
  6044     0725  0086               	movwf	6
  6045     0726  3001               	movlw	1	; select bank2/3
  6046     0727  0087               	movwf	7
  6047     0728  3040               	movlw	64
  6048     0729  00F2               	movwf	___awdiv@divisor
  6049     072A  3000               	movlw	0
  6050     072B  00F3               	movwf	___awdiv@divisor+1
  6051     072C  0836               	movf	_ai_propagate$1579+1,w
  6052     072D  00F5               	movwf	___awdiv@dividend+1
  6053     072E  0835               	movf	_ai_propagate$1579,w
  6054     072F  00F4               	movwf	___awdiv@dividend
  6055     0730  318F  27A1  3185   	fcall	___awdiv
  6056     0733  0872               	movf	?___awdiv,w
  6057     0734  0081               	movwf	1
  6058     0735                     l3071:
  6059                           
  6060                           ;ai.c: 200:         }
  6061     0735  3001               	movlw	1
  6062     0736  0020               	movlb	0	; select bank0
  6063     0737  00A4               	movwf	??_ai_propagate
  6064     0738  0824               	movf	??_ai_propagate,w
  6065     0739  07B2               	addwf	ai_propagate@i_891,f
  6066     073A                     l3073:
  6067     073A  3008               	movlw	8
  6068     073B  0232               	subwf	ai_propagate@i_891,w
  6069     073C  1C03               	skipc
  6070     073D  2F3F               	goto	u2041
  6071     073E  2F40               	goto	u2040
  6072     073F                     u2041:
  6073     073F  2EF2               	goto	l3069
  6074     0740                     u2040:
  6075     0740                     l3075:
  6076                           
  6077                           ;ai.c: 201:     }
  6078     0740  3001               	movlw	1
  6079     0741  00A4               	movwf	??_ai_propagate
  6080     0742  0824               	movf	??_ai_propagate,w
  6081     0743  07BB               	addwf	ai_propagate@j_890,f
  6082     0744                     l3077:
  6083     0744  3004               	movlw	4
  6084     0745  023B               	subwf	ai_propagate@j_890,w
  6085     0746  1C03               	skipc
  6086     0747  2F49               	goto	u2051
  6087     0748  2F4A               	goto	u2050
  6088     0749                     u2051:
  6089     0749  2E9C               	goto	l3057
  6090     074A                     u2050:
  6091     074A                     l3079:
  6092                           
  6093                           ;ai.c: 203:     for(uint8_t j = 0; j < 4; j++){
  6094     074A  01B9               	clrf	ai_propagate@j_892
  6095     074B                     l3085:
  6096                           
  6097                           ;ai.c: 204:         B2[j] -= DC_DB2[j];
  6098     074B  0839               	movf	ai_propagate@j_892,w
  6099     074C  3EB4               	addlw	(low (_DC_DB2| 0))& (0+255)
  6100     074D  0086               	movwf	6
  6101     074E  0187               	clrf	7
  6102     074F  0839               	movf	ai_propagate@j_892,w
  6103     0750  3EC8               	addlw	(low (_B2| 0))& (0+255)
  6104     0751  0084               	movwf	4
  6105     0752  0185               	clrf	5
  6106     0753  0801               	movf	1,w
  6107     0754  0280               	subwf	0,f
  6108     0755                     l3087:
  6109                           
  6110                           ;ai.c: 205:         for(uint8_t i = 0; i < 4; i++){
  6111     0755  01B3               	clrf	ai_propagate@i_893
  6112     0756                     l3093:
  6113                           
  6114                           ;ai.c: 206:             W2[i][j] -= DC_DW2[i][j];
  6115     0756  0833               	movf	ai_propagate@i_893,w
  6116     0757  00A4               	movwf	??_ai_propagate
  6117     0758  3002               	movlw	2
  6118     0759                     u2065:
  6119     0759  35A4               	lslf	??_ai_propagate,f
  6120     075A  0B89               	decfsz	9,f
  6121     075B  2F59               	goto	u2065
  6122     075C  3040               	movlw	(low (_DC_DW2| (0+256)))& (0+255)
  6123     075D  0724               	addwf	??_ai_propagate,w
  6124     075E  00A5               	movwf	??_ai_propagate+1
  6125     075F  0839               	movf	ai_propagate@j_892,w
  6126     0760  0725               	addwf	??_ai_propagate+1,w
  6127     0761  00A6               	movwf	??_ai_propagate+2
  6128     0762  0826               	movf	??_ai_propagate+2,w
  6129     0763  0086               	movwf	6
  6130     0764  3001               	movlw	1	; select bank2/3
  6131     0765  0087               	movwf	7
  6132     0766  0833               	movf	ai_propagate@i_893,w
  6133     0767  00A7               	movwf	??_ai_propagate+3
  6134     0768  3002               	movlw	2
  6135     0769                     u2075:
  6136     0769  35A7               	lslf	??_ai_propagate+3,f
  6137     076A  0B89               	decfsz	9,f
  6138     076B  2F69               	goto	u2075
  6139     076C  3060               	movlw	(low (_W2| (0+256)))& (0+255)
  6140     076D  0727               	addwf	??_ai_propagate+3,w
  6141     076E  00A8               	movwf	??_ai_propagate+4
  6142     076F  0839               	movf	ai_propagate@j_892,w
  6143     0770  0728               	addwf	??_ai_propagate+4,w
  6144     0771  00A9               	movwf	??_ai_propagate+5
  6145     0772  0829               	movf	??_ai_propagate+5,w
  6146     0773  0084               	movwf	4
  6147     0774  3001               	movlw	1	; select bank2/3
  6148     0775  0085               	movwf	5
  6149     0776  0801               	movf	1,w
  6150     0777  0280               	subwf	0,f
  6151     0778                     l3095:
  6152                           
  6153                           ;ai.c: 207:         }
  6154     0778  3001               	movlw	1
  6155     0779  00A4               	movwf	??_ai_propagate
  6156     077A  0824               	movf	??_ai_propagate,w
  6157     077B  07B3               	addwf	ai_propagate@i_893,f
  6158     077C                     l3097:
  6159     077C  3004               	movlw	4
  6160     077D  0233               	subwf	ai_propagate@i_893,w
  6161     077E  1C03               	skipc
  6162     077F  2F81               	goto	u2081
  6163     0780  2F82               	goto	u2080
  6164     0781                     u2081:
  6165     0781  2F56               	goto	l3093
  6166     0782                     u2080:
  6167     0782                     l3099:
  6168                           
  6169                           ;ai.c: 208:     }
  6170     0782  3001               	movlw	1
  6171     0783  00A4               	movwf	??_ai_propagate
  6172     0784  0824               	movf	??_ai_propagate,w
  6173     0785  07B9               	addwf	ai_propagate@j_892,f
  6174     0786                     l3101:
  6175     0786  3004               	movlw	4
  6176     0787  0239               	subwf	ai_propagate@j_892,w
  6177     0788  1C03               	skipc
  6178     0789  2F8B               	goto	u2091
  6179     078A  2F8C               	goto	u2090
  6180     078B                     u2091:
  6181     078B  2F4B               	goto	l3085
  6182     078C                     u2090:
  6183     078C                     l3103:
  6184                           
  6185                           ;ai.c: 209:     for(uint8_t j = 0; j < 4; j++){
  6186     078C  01BA               	clrf	ai_propagate@j_894
  6187     078D                     l3109:
  6188                           
  6189                           ;ai.c: 210:         B1[j] -= DC_DB1[j];
  6190     078D  083A               	movf	ai_propagate@j_894,w
  6191     078E  3EA8               	addlw	(low (_DC_DB1| 0))& (0+255)
  6192     078F  0086               	movwf	6
  6193     0790  0187               	clrf	7
  6194     0791  083A               	movf	ai_propagate@j_894,w
  6195     0792  3ECC               	addlw	(low (_B1| 0))& (0+255)
  6196     0793  0084               	movwf	4
  6197     0794  0185               	clrf	5
  6198     0795  0801               	movf	1,w
  6199     0796  0280               	subwf	0,f
  6200     0797                     l3111:
  6201                           
  6202                           ;ai.c: 211:         for(uint8_t i = 0; i < 8; i++){
  6203     0797  01B4               	clrf	ai_propagate@i_895
  6204     0798                     l3113:
  6205     0798  3008               	movlw	8
  6206     0799  0234               	subwf	ai_propagate@i_895,w
  6207     079A  1C03               	skipc
  6208     079B  2F9D               	goto	u2101
  6209     079C  2F9E               	goto	u2100
  6210     079D                     u2101:
  6211     079D  2F9F               	goto	l3117
  6212     079E                     u2100:
  6213     079E  2FC6               	goto	l3123
  6214     079F                     l3117:
  6215                           
  6216                           ;ai.c: 212:             W1[i][j] -= DC_DW1[i][j];
  6217     079F  0834               	movf	ai_propagate@i_895,w
  6218     07A0  00A4               	movwf	??_ai_propagate
  6219     07A1  3002               	movlw	2
  6220     07A2                     u2115:
  6221     07A2  35A4               	lslf	??_ai_propagate,f
  6222     07A3  0B89               	decfsz	9,f
  6223     07A4  2FA2               	goto	u2115
  6224     07A5  30A0               	movlw	(low (_DC_DW1| (0+256)))& (0+255)
  6225     07A6  0724               	addwf	??_ai_propagate,w
  6226     07A7  00A5               	movwf	??_ai_propagate+1
  6227     07A8  083A               	movf	ai_propagate@j_894,w
  6228     07A9  0725               	addwf	??_ai_propagate+1,w
  6229     07AA  00A6               	movwf	??_ai_propagate+2
  6230     07AB  0826               	movf	??_ai_propagate+2,w
  6231     07AC  0086               	movwf	6
  6232     07AD  3001               	movlw	1	; select bank3/4
  6233     07AE  0087               	movwf	7
  6234     07AF  0834               	movf	ai_propagate@i_895,w
  6235     07B0  00A7               	movwf	??_ai_propagate+3
  6236     07B1  3002               	movlw	2
  6237     07B2                     u2125:
  6238     07B2  35A7               	lslf	??_ai_propagate+3,f
  6239     07B3  0B89               	decfsz	9,f
  6240     07B4  2FB2               	goto	u2125
  6241     07B5  3020               	movlw	(low (_W1| (0+256)))& (0+255)
  6242     07B6  0727               	addwf	??_ai_propagate+3,w
  6243     07B7  00A8               	movwf	??_ai_propagate+4
  6244     07B8  083A               	movf	ai_propagate@j_894,w
  6245     07B9  0728               	addwf	??_ai_propagate+4,w
  6246     07BA  00A9               	movwf	??_ai_propagate+5
  6247     07BB  0829               	movf	??_ai_propagate+5,w
  6248     07BC  0084               	movwf	4
  6249     07BD  3001               	movlw	1	; select bank2/3
  6250     07BE  0085               	movwf	5
  6251     07BF  0801               	movf	1,w
  6252     07C0  0280               	subwf	0,f
  6253     07C1                     l3119:
  6254                           
  6255                           ;ai.c: 213:         }
  6256     07C1  3001               	movlw	1
  6257     07C2  00A4               	movwf	??_ai_propagate
  6258     07C3  0824               	movf	??_ai_propagate,w
  6259     07C4  07B4               	addwf	ai_propagate@i_895,f
  6260     07C5  2F98               	goto	l3113
  6261     07C6                     l3123:
  6262                           
  6263                           ;ai.c: 214:     }
  6264     07C6  3001               	movlw	1
  6265     07C7  00A4               	movwf	??_ai_propagate
  6266     07C8  0824               	movf	??_ai_propagate,w
  6267     07C9  07BA               	addwf	ai_propagate@j_894,f
  6268     07CA                     l3125:
  6269     07CA  3004               	movlw	4
  6270     07CB  023A               	subwf	ai_propagate@j_894,w
  6271     07CC  1C03               	skipc
  6272     07CD  2FCF               	goto	u2131
  6273     07CE  2FD0               	goto	u2130
  6274     07CF                     u2131:
  6275     07CF  2F8D               	goto	l3109
  6276     07D0                     u2130:
  6277     07D0                     l628:
  6278     07D0  0008               	return
  6279     07D1                     __end_of_ai_propagate:
  6280                           
  6281                           	psect	text17
  6282     0DF7                     __ptext17:	
  6283 ;; *************** function _de_sigmoid *****************
  6284 ;; Defined at:
  6285 ;;		line 12 in file "sigmoid.c"
  6286 ;; Parameters:    Size  Location     Type
  6287 ;;  z               1    wreg     char 
  6288 ;; Auto vars:     Size  Location     Type
  6289 ;;  z               1    1[COMMON] char 
  6290 ;; Return value:  Size  Location     Type
  6291 ;;                  1    wreg      unsigned char 
  6292 ;; Registers used:
  6293 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  6294 ;; Tracked objects:
  6295 ;;		On entry : 0/0
  6296 ;;		On exit  : 0/0
  6297 ;;		Unchanged: 0/0
  6298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6299 ;;      Params:         0       0       0       0       0       0
  6300 ;;      Locals:         1       0       0       0       0       0
  6301 ;;      Temps:          1       0       0       0       0       0
  6302 ;;      Totals:         2       0       0       0       0       0
  6303 ;;Total ram usage:        2 bytes
  6304 ;; Hardware stack levels used: 1
  6305 ;; This function calls:
  6306 ;;		Nothing
  6307 ;; This function is called by:
  6308 ;;		_ai_propagate
  6309 ;; This function uses a non-reentrant model
  6310 ;;
  6311                           
  6312     0DF7                     _de_sigmoid:	
  6313                           ;psect for function _de_sigmoid
  6314                           
  6315                           
  6316                           ;incstack = 0
  6317                           ; Regs used in _de_sigmoid: [wreg-fsr0h+status,2+status,0+pclath]
  6318                           ;de_sigmoid@z stored from wreg
  6319     0DF7  00F1               	movwf	de_sigmoid@z
  6320     0DF8                     l2543:
  6321                           
  6322                           ;sigmoid.c: 13:     return de_sigmoidValues[((uint8_t)z)>>4];
  6323     0DF8  0871               	movf	de_sigmoid@z,w
  6324     0DF9  00F0               	movwf	??_de_sigmoid
  6325     0DFA  3004               	movlw	4
  6326     0DFB                     u1355:
  6327     0DFB  36F0               	lsrf	??_de_sigmoid,f
  6328     0DFC  0B89               	decfsz	9,f
  6329     0DFD  2DFB               	goto	u1355
  6330     0DFE  0870               	movf	??_de_sigmoid,w
  6331     0DFF  3E00               	addlw	low (_de_sigmoidValues| (0+32768))
  6332     0E00  0084               	movwf	4
  6333     0E01  3088               	movlw	high (_de_sigmoidValues| (0+32768))
  6334     0E02  1803               	skipnc
  6335     0E03  3E01               	addlw	1
  6336     0E04  0085               	movwf	5
  6337     0E05  0800               	movf	0,w	;code access
  6338     0E06                     l669:
  6339     0E06  0008               	return
  6340     0E07                     __end_of_de_sigmoid:
  6341                           
  6342                           	psect	text18
  6343     0E5B                     __ptext18:	
  6344 ;; *************** function ___wmul *****************
  6345 ;; Defined at:
  6346 ;;		line 15 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  6347 ;; Parameters:    Size  Location     Type
  6348 ;;  multiplier      2    0[BANK0 ] unsigned int 
  6349 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  6350 ;; Auto vars:     Size  Location     Type
  6351 ;;  product         2   11[COMMON] unsigned int 
  6352 ;; Return value:  Size  Location     Type
  6353 ;;                  2    0[BANK0 ] unsigned int 
  6354 ;; Registers used:
  6355 ;;		wreg, status,2, status,0
  6356 ;; Tracked objects:
  6357 ;;		On entry : 0/0
  6358 ;;		On exit  : 0/0
  6359 ;;		Unchanged: 0/0
  6360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6361 ;;      Params:         0       4       0       0       0       0
  6362 ;;      Locals:         2       0       0       0       0       0
  6363 ;;      Temps:          0       0       0       0       0       0
  6364 ;;      Totals:         2       4       0       0       0       0
  6365 ;;Total ram usage:        6 bytes
  6366 ;; Hardware stack levels used: 1
  6367 ;; This function calls:
  6368 ;;		Nothing
  6369 ;; This function is called by:
  6370 ;;		_ai_run
  6371 ;;		_ai_propagate
  6372 ;; This function uses a non-reentrant model
  6373 ;;
  6374                           
  6375     0E5B                     ___wmul:	
  6376                           ;psect for function ___wmul
  6377                           
  6378     0E5B                     l2547:	
  6379                           ;incstack = 0
  6380                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6381                           
  6382     0E5B  01FB               	clrf	___wmul@product
  6383     0E5C  01FC               	clrf	___wmul@product+1
  6384     0E5D                     l2549:
  6385     0E5D  0020               	movlb	0	; select bank0
  6386     0E5E  1C20               	btfss	___wmul@multiplier,0
  6387     0E5F  2E61               	goto	u1361
  6388     0E60  2E62               	goto	u1360
  6389     0E61                     u1361:
  6390     0E61  2E66               	goto	l819
  6391     0E62                     u1360:
  6392     0E62                     l2551:
  6393     0E62  0822               	movf	___wmul@multiplicand,w
  6394     0E63  07FB               	addwf	___wmul@product,f
  6395     0E64  0823               	movf	___wmul@multiplicand+1,w
  6396     0E65  3DFC               	addwfc	___wmul@product+1,f
  6397     0E66                     l819:
  6398     0E66  3001               	movlw	1
  6399     0E67                     u1375:
  6400     0E67  35A2               	lslf	___wmul@multiplicand,f
  6401     0E68  0DA3               	rlf	___wmul@multiplicand+1,f
  6402     0E69  0B89               	decfsz	9,f
  6403     0E6A  2E67               	goto	u1375
  6404     0E6B                     l2553:
  6405     0E6B  3001               	movlw	1
  6406     0E6C                     u1385:
  6407     0E6C  36A1               	lsrf	___wmul@multiplier+1,f
  6408     0E6D  0CA0               	rrf	___wmul@multiplier,f
  6409     0E6E  0B89               	decfsz	9,f
  6410     0E6F  2E6C               	goto	u1385
  6411     0E70                     l2555:
  6412     0E70  0820               	movf	___wmul@multiplier,w
  6413     0E71  0421               	iorwf	___wmul@multiplier+1,w
  6414     0E72  1D03               	btfss	3,2
  6415     0E73  2E75               	goto	u1391
  6416     0E74  2E76               	goto	u1390
  6417     0E75                     u1391:
  6418     0E75  2E5D               	goto	l2549
  6419     0E76                     u1390:
  6420     0E76                     l2557:
  6421     0E76  087C               	movf	___wmul@product+1,w
  6422     0E77  00A1               	movwf	?___wmul+1
  6423     0E78  087B               	movf	___wmul@product,w
  6424     0E79  00A0               	movwf	?___wmul
  6425     0E7A                     l821:
  6426     0E7A  0008               	return
  6427     0E7B                     __end_of___wmul:
  6428                           
  6429                           	psect	text19
  6430     0FA1                     __ptext19:	
  6431 ;; *************** function ___awdiv *****************
  6432 ;; Defined at:
  6433 ;;		line 5 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
  6434 ;; Parameters:    Size  Location     Type
  6435 ;;  divisor         2    2[COMMON] int 
  6436 ;;  dividend        2    4[COMMON] int 
  6437 ;; Auto vars:     Size  Location     Type
  6438 ;;  quotient        2    9[COMMON] int 
  6439 ;;  sign            1    8[COMMON] unsigned char 
  6440 ;;  counter         1    7[COMMON] unsigned char 
  6441 ;; Return value:  Size  Location     Type
  6442 ;;                  2    2[COMMON] int 
  6443 ;; Registers used:
  6444 ;;		wreg, status,2, status,0
  6445 ;; Tracked objects:
  6446 ;;		On entry : 0/0
  6447 ;;		On exit  : 0/0
  6448 ;;		Unchanged: 0/0
  6449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6450 ;;      Params:         4       0       0       0       0       0
  6451 ;;      Locals:         4       0       0       0       0       0
  6452 ;;      Temps:          1       0       0       0       0       0
  6453 ;;      Totals:         9       0       0       0       0       0
  6454 ;;Total ram usage:        9 bytes
  6455 ;; Hardware stack levels used: 1
  6456 ;; This function calls:
  6457 ;;		Nothing
  6458 ;; This function is called by:
  6459 ;;		_main
  6460 ;;		_snake_move
  6461 ;;		_snake_getSurroundings
  6462 ;;		_ai_run
  6463 ;;		_ai_propagate
  6464 ;; This function uses a non-reentrant model
  6465 ;;
  6466                           
  6467     0FA1                     ___awdiv:	
  6468                           ;psect for function ___awdiv
  6469                           
  6470     0FA1                     l2561:	
  6471                           ;incstack = 0
  6472                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  6473                           
  6474     0FA1  01F8               	clrf	___awdiv@sign
  6475     0FA2                     l2563:
  6476     0FA2  1FF3               	btfss	___awdiv@divisor+1,7
  6477     0FA3  2FA5               	goto	u1401
  6478     0FA4  2FA6               	goto	u1400
  6479     0FA5                     u1401:
  6480     0FA5  2FAD               	goto	l2569
  6481     0FA6                     u1400:
  6482     0FA6                     l2565:
  6483     0FA6  09F2               	comf	___awdiv@divisor,f
  6484     0FA7  09F3               	comf	___awdiv@divisor+1,f
  6485     0FA8  0AF2               	incf	___awdiv@divisor,f
  6486     0FA9  1903               	skipnz
  6487     0FAA  0AF3               	incf	___awdiv@divisor+1,f
  6488     0FAB                     l2567:
  6489     0FAB  01F8               	clrf	___awdiv@sign
  6490     0FAC  0AF8               	incf	___awdiv@sign,f
  6491     0FAD                     l2569:
  6492     0FAD  1FF5               	btfss	___awdiv@dividend+1,7
  6493     0FAE  2FB0               	goto	u1411
  6494     0FAF  2FB1               	goto	u1410
  6495     0FB0                     u1411:
  6496     0FB0  2FBA               	goto	l2575
  6497     0FB1                     u1410:
  6498     0FB1                     l2571:
  6499     0FB1  09F4               	comf	___awdiv@dividend,f
  6500     0FB2  09F5               	comf	___awdiv@dividend+1,f
  6501     0FB3  0AF4               	incf	___awdiv@dividend,f
  6502     0FB4  1903               	skipnz
  6503     0FB5  0AF5               	incf	___awdiv@dividend+1,f
  6504     0FB6                     l2573:
  6505     0FB6  3001               	movlw	1
  6506     0FB7  00F6               	movwf	??___awdiv
  6507     0FB8  0876               	movf	??___awdiv,w
  6508     0FB9  06F8               	xorwf	___awdiv@sign,f
  6509     0FBA                     l2575:
  6510     0FBA  01F9               	clrf	___awdiv@quotient
  6511     0FBB  01FA               	clrf	___awdiv@quotient+1
  6512     0FBC                     l2577:
  6513     0FBC  0872               	movf	___awdiv@divisor,w
  6514     0FBD  0473               	iorwf	___awdiv@divisor+1,w
  6515     0FBE  1903               	btfsc	3,2
  6516     0FBF  2FC1               	goto	u1421
  6517     0FC0  2FC2               	goto	u1420
  6518     0FC1                     u1421:
  6519     0FC1  2FF1               	goto	l2597
  6520     0FC2                     u1420:
  6521     0FC2                     l2579:
  6522     0FC2  01F7               	clrf	___awdiv@counter
  6523     0FC3  0AF7               	incf	___awdiv@counter,f
  6524     0FC4  2FCE               	goto	l2585
  6525     0FC5                     l2581:
  6526     0FC5  3001               	movlw	1
  6527     0FC6                     u1435:
  6528     0FC6  35F2               	lslf	___awdiv@divisor,f
  6529     0FC7  0DF3               	rlf	___awdiv@divisor+1,f
  6530     0FC8  0B89               	decfsz	9,f
  6531     0FC9  2FC6               	goto	u1435
  6532     0FCA                     l2583:
  6533     0FCA  3001               	movlw	1
  6534     0FCB  00F6               	movwf	??___awdiv
  6535     0FCC  0876               	movf	??___awdiv,w
  6536     0FCD  07F7               	addwf	___awdiv@counter,f
  6537     0FCE                     l2585:
  6538     0FCE  1FF3               	btfss	___awdiv@divisor+1,7
  6539     0FCF  2FD1               	goto	u1441
  6540     0FD0  2FD2               	goto	u1440
  6541     0FD1                     u1441:
  6542     0FD1  2FC5               	goto	l2581
  6543     0FD2                     u1440:
  6544     0FD2                     l2587:
  6545     0FD2  3001               	movlw	1
  6546     0FD3                     u1455:
  6547     0FD3  35F9               	lslf	___awdiv@quotient,f
  6548     0FD4  0DFA               	rlf	___awdiv@quotient+1,f
  6549     0FD5  0B89               	decfsz	9,f
  6550     0FD6  2FD3               	goto	u1455
  6551     0FD7  0873               	movf	___awdiv@divisor+1,w
  6552     0FD8  0275               	subwf	___awdiv@dividend+1,w
  6553     0FD9  1D03               	skipz
  6554     0FDA  2FDD               	goto	u1465
  6555     0FDB  0872               	movf	___awdiv@divisor,w
  6556     0FDC  0274               	subwf	___awdiv@dividend,w
  6557     0FDD                     u1465:
  6558     0FDD  1C03               	skipc
  6559     0FDE  2FE0               	goto	u1461
  6560     0FDF  2FE1               	goto	u1460
  6561     0FE0                     u1461:
  6562     0FE0  2FE6               	goto	l2593
  6563     0FE1                     u1460:
  6564     0FE1                     l2589:
  6565     0FE1  0872               	movf	___awdiv@divisor,w
  6566     0FE2  02F4               	subwf	___awdiv@dividend,f
  6567     0FE3  0873               	movf	___awdiv@divisor+1,w
  6568     0FE4  3BF5               	subwfb	___awdiv@dividend+1,f
  6569     0FE5                     l2591:
  6570     0FE5  1479               	bsf	___awdiv@quotient,0
  6571     0FE6                     l2593:
  6572     0FE6  3001               	movlw	1
  6573     0FE7                     u1475:
  6574     0FE7  36F3               	lsrf	___awdiv@divisor+1,f
  6575     0FE8  0CF2               	rrf	___awdiv@divisor,f
  6576     0FE9  0B89               	decfsz	9,f
  6577     0FEA  2FE7               	goto	u1475
  6578     0FEB                     l2595:
  6579     0FEB  3001               	movlw	1
  6580     0FEC  02F7               	subwf	___awdiv@counter,f
  6581     0FED  1D03               	btfss	3,2
  6582     0FEE  2FF0               	goto	u1481
  6583     0FEF  2FF1               	goto	u1480
  6584     0FF0                     u1481:
  6585     0FF0  2FD2               	goto	l2587
  6586     0FF1                     u1480:
  6587     0FF1                     l2597:
  6588     0FF1  0878               	movf	___awdiv@sign,w
  6589     0FF2  1903               	btfsc	3,2
  6590     0FF3  2FF5               	goto	u1491
  6591     0FF4  2FF6               	goto	u1490
  6592     0FF5                     u1491:
  6593     0FF5  2FFB               	goto	l2601
  6594     0FF6                     u1490:
  6595     0FF6                     l2599:
  6596     0FF6  09F9               	comf	___awdiv@quotient,f
  6597     0FF7  09FA               	comf	___awdiv@quotient+1,f
  6598     0FF8  0AF9               	incf	___awdiv@quotient,f
  6599     0FF9  1903               	skipnz
  6600     0FFA  0AFA               	incf	___awdiv@quotient+1,f
  6601     0FFB                     l2601:
  6602     0FFB  087A               	movf	___awdiv@quotient+1,w
  6603     0FFC  00F3               	movwf	?___awdiv+1
  6604     0FFD  0879               	movf	___awdiv@quotient,w
  6605     0FFE  00F2               	movwf	?___awdiv
  6606     0FFF                     l972:
  6607     0FFF  0008               	return
  6608     1000                     __end_of___awdiv:
  6609                           
  6610                           	psect	text20
  6611     0018                     __ptext20:	
  6612 ;; *************** function _ai_initiate *****************
  6613 ;; Defined at:
  6614 ;;		line 94 in file "ai.c"
  6615 ;; Parameters:    Size  Location     Type
  6616 ;;		None
  6617 ;; Auto vars:     Size  Location     Type
  6618 ;;  i               1    8[BANK0 ] unsigned char 
  6619 ;;  i               1    7[BANK0 ] unsigned char 
  6620 ;;  j               1   10[BANK0 ] unsigned char 
  6621 ;;  j               1    9[BANK0 ] unsigned char 
  6622 ;; Return value:  Size  Location     Type
  6623 ;;                  1    wreg      void 
  6624 ;; Registers used:
  6625 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6626 ;; Tracked objects:
  6627 ;;		On entry : 0/0
  6628 ;;		On exit  : 0/0
  6629 ;;		Unchanged: 0/0
  6630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6631 ;;      Params:         0       0       0       0       0       0
  6632 ;;      Locals:         0       4       0       0       0       0
  6633 ;;      Temps:          0       3       0       0       0       0
  6634 ;;      Totals:         0       7       0       0       0       0
  6635 ;;Total ram usage:        7 bytes
  6636 ;; Hardware stack levels used: 1
  6637 ;; Hardware stack levels required when called: 2
  6638 ;; This function calls:
  6639 ;;		_rand
  6640 ;; This function is called by:
  6641 ;;		_main
  6642 ;; This function uses a non-reentrant model
  6643 ;;
  6644                           
  6645     0018                     _ai_initiate:	
  6646                           ;psect for function _ai_initiate
  6647                           
  6648     0018                     l2609:	
  6649                           ;incstack = 0
  6650                           ; Regs used in _ai_initiate: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6651                           
  6652                           
  6653                           ;ai.c: 98:     for(uint8_t j = 0; j < 4; j++){
  6654     0018  0020               	movlb	0	; select bank0
  6655     0019  01A9               	clrf	ai_initiate@j
  6656     001A                     l2615:
  6657                           
  6658                           ;ai.c: 99:         B1[j] = rand();
  6659     001A  0829               	movf	ai_initiate@j,w
  6660     001B  3ECC               	addlw	(low (_B1| 0))& (0+255)
  6661     001C  0086               	movwf	6
  6662     001D  0187               	clrf	7
  6663     001E  318F  272E  3180   	fcall	_rand
  6664     0021  087C               	movf	?_rand,w
  6665     0022  0081               	movwf	1
  6666     0023                     l2617:
  6667                           
  6668                           ;ai.c: 100:         for(uint8_t i = 0; i < 8; i++){
  6669     0023  0020               	movlb	0	; select bank0
  6670     0024  01A7               	clrf	ai_initiate@i
  6671     0025                     l2623:
  6672                           
  6673                           ;ai.c: 101:             W1[i][j] = rand();
  6674     0025  0827               	movf	ai_initiate@i,w
  6675     0026  00A4               	movwf	??_ai_initiate
  6676     0027  3002               	movlw	2
  6677     0028                     u1505:
  6678     0028  35A4               	lslf	??_ai_initiate,f
  6679     0029  0B89               	decfsz	9,f
  6680     002A  2828               	goto	u1505
  6681     002B  3020               	movlw	(low (_W1| (0+256)))& (0+255)
  6682     002C  0724               	addwf	??_ai_initiate,w
  6683     002D  00A5               	movwf	??_ai_initiate+1
  6684     002E  0829               	movf	ai_initiate@j,w
  6685     002F  0725               	addwf	??_ai_initiate+1,w
  6686     0030  00A6               	movwf	??_ai_initiate+2
  6687     0031  0826               	movf	??_ai_initiate+2,w
  6688     0032  0086               	movwf	6
  6689     0033  3001               	movlw	1	; select bank2/3
  6690     0034  0087               	movwf	7
  6691     0035  318F  272E  3180   	fcall	_rand
  6692     0038  087C               	movf	?_rand,w
  6693     0039  0081               	movwf	1
  6694     003A                     l2625:
  6695                           
  6696                           ;ai.c: 102:         }
  6697     003A  3001               	movlw	1
  6698     003B  0020               	movlb	0	; select bank0
  6699     003C  00A4               	movwf	??_ai_initiate
  6700     003D  0824               	movf	??_ai_initiate,w
  6701     003E  07A7               	addwf	ai_initiate@i,f
  6702     003F                     l2627:
  6703     003F  3008               	movlw	8
  6704     0040  0227               	subwf	ai_initiate@i,w
  6705     0041  1C03               	skipc
  6706     0042  2844               	goto	u1511
  6707     0043  2845               	goto	u1510
  6708     0044                     u1511:
  6709     0044  2825               	goto	l2623
  6710     0045                     u1510:
  6711     0045                     l2629:
  6712                           
  6713                           ;ai.c: 103:     }
  6714     0045  3001               	movlw	1
  6715     0046  00A4               	movwf	??_ai_initiate
  6716     0047  0824               	movf	??_ai_initiate,w
  6717     0048  07A9               	addwf	ai_initiate@j,f
  6718     0049                     l2631:
  6719     0049  3004               	movlw	4
  6720     004A  0229               	subwf	ai_initiate@j,w
  6721     004B  1C03               	skipc
  6722     004C  284E               	goto	u1521
  6723     004D  284F               	goto	u1520
  6724     004E                     u1521:
  6725     004E  281A               	goto	l2615
  6726     004F                     u1520:
  6727     004F                     l2633:
  6728                           
  6729                           ;ai.c: 104:     for(uint8_t j = 0; j < 4; j++){
  6730     004F  01AA               	clrf	ai_initiate@j_869
  6731     0050                     l2639:
  6732                           
  6733                           ;ai.c: 105:         B2[j] = rand();
  6734     0050  082A               	movf	ai_initiate@j_869,w
  6735     0051  3EC8               	addlw	(low (_B2| 0))& (0+255)
  6736     0052  0086               	movwf	6
  6737     0053  0187               	clrf	7
  6738     0054  318F  272E  3180   	fcall	_rand
  6739     0057  087C               	movf	?_rand,w
  6740     0058  0081               	movwf	1
  6741     0059                     l2641:
  6742                           
  6743                           ;ai.c: 106:         for(uint8_t i = 0; i < 4; i++){
  6744     0059  0020               	movlb	0	; select bank0
  6745     005A  01A8               	clrf	ai_initiate@i_870
  6746     005B                     l2647:
  6747                           
  6748                           ;ai.c: 107:             W2[i][j] = rand();
  6749     005B  0828               	movf	ai_initiate@i_870,w
  6750     005C  00A4               	movwf	??_ai_initiate
  6751     005D  3002               	movlw	2
  6752     005E                     u1535:
  6753     005E  35A4               	lslf	??_ai_initiate,f
  6754     005F  0B89               	decfsz	9,f
  6755     0060  285E               	goto	u1535
  6756     0061  3060               	movlw	(low (_W2| (0+256)))& (0+255)
  6757     0062  0724               	addwf	??_ai_initiate,w
  6758     0063  00A5               	movwf	??_ai_initiate+1
  6759     0064  082A               	movf	ai_initiate@j_869,w
  6760     0065  0725               	addwf	??_ai_initiate+1,w
  6761     0066  00A6               	movwf	??_ai_initiate+2
  6762     0067  0826               	movf	??_ai_initiate+2,w
  6763     0068  0086               	movwf	6
  6764     0069  3001               	movlw	1	; select bank2/3
  6765     006A  0087               	movwf	7
  6766     006B  318F  272E  3180   	fcall	_rand
  6767     006E  087C               	movf	?_rand,w
  6768     006F  0081               	movwf	1
  6769     0070                     l2649:
  6770                           
  6771                           ;ai.c: 108:         }
  6772     0070  3001               	movlw	1
  6773     0071  0020               	movlb	0	; select bank0
  6774     0072  00A4               	movwf	??_ai_initiate
  6775     0073  0824               	movf	??_ai_initiate,w
  6776     0074  07A8               	addwf	ai_initiate@i_870,f
  6777     0075                     l2651:
  6778     0075  3004               	movlw	4
  6779     0076  0228               	subwf	ai_initiate@i_870,w
  6780     0077  1C03               	skipc
  6781     0078  287A               	goto	u1541
  6782     0079  287B               	goto	u1540
  6783     007A                     u1541:
  6784     007A  285B               	goto	l2647
  6785     007B                     u1540:
  6786     007B                     l2653:
  6787                           
  6788                           ;ai.c: 109:     }
  6789     007B  3001               	movlw	1
  6790     007C  00A4               	movwf	??_ai_initiate
  6791     007D  0824               	movf	??_ai_initiate,w
  6792     007E  07AA               	addwf	ai_initiate@j_869,f
  6793     007F                     l2655:
  6794     007F  3004               	movlw	4
  6795     0080  022A               	subwf	ai_initiate@j_869,w
  6796     0081  1C03               	skipc
  6797     0082  2884               	goto	u1551
  6798     0083  2885               	goto	u1550
  6799     0084                     u1551:
  6800     0084  2850               	goto	l2639
  6801     0085                     u1550:
  6802     0085                     l604:
  6803     0085  0008               	return
  6804     0086                     __end_of_ai_initiate:
  6805                           
  6806                           	psect	text21
  6807     0F2E                     __ptext21:	
  6808 ;; *************** function _rand *****************
  6809 ;; Defined at:
  6810 ;;		line 11 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\common\rand.c"
  6811 ;; Parameters:    Size  Location     Type
  6812 ;;		None
  6813 ;; Auto vars:     Size  Location     Type
  6814 ;;		None
  6815 ;; Return value:  Size  Location     Type
  6816 ;;                  2   12[COMMON] int 
  6817 ;; Registers used:
  6818 ;;		wreg, status,2, status,0, pclath, cstack
  6819 ;; Tracked objects:
  6820 ;;		On entry : 0/0
  6821 ;;		On exit  : 0/0
  6822 ;;		Unchanged: 0/0
  6823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6824 ;;      Params:         2       0       0       0       0       0
  6825 ;;      Locals:         0       0       0       0       0       0
  6826 ;;      Temps:          0       4       0       0       0       0
  6827 ;;      Totals:         2       4       0       0       0       0
  6828 ;;Total ram usage:        6 bytes
  6829 ;; Hardware stack levels used: 1
  6830 ;; Hardware stack levels required when called: 1
  6831 ;; This function calls:
  6832 ;;		___lmul
  6833 ;; This function is called by:
  6834 ;;		_snake_initiate
  6835 ;;		_snake_move
  6836 ;;		_ai_initiate
  6837 ;; This function uses a non-reentrant model
  6838 ;;
  6839                           
  6840     0F2E                     _rand:	
  6841                           ;psect for function _rand
  6842                           
  6843     0F2E                     l2465:	
  6844                           ;incstack = 0
  6845                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
  6846                           
  6847     0F2E  0020               	movlb	0	; select bank0
  6848     0F2F  086E               	movf	_seed+3,w
  6849     0F30  00F3               	movwf	___lmul@multiplier+3
  6850     0F31  086D               	movf	_seed+2,w
  6851     0F32  00F2               	movwf	___lmul@multiplier+2
  6852     0F33  086C               	movf	_seed+1,w
  6853     0F34  00F1               	movwf	___lmul@multiplier+1
  6854     0F35  086B               	movf	_seed,w
  6855     0F36  00F0               	movwf	___lmul@multiplier
  6856     0F37  304C               	movlw	76
  6857     0F38  00F7               	movwf	___lmul@multiplicand+3
  6858     0F39  3095               	movlw	149
  6859     0F3A  00F6               	movwf	___lmul@multiplicand+2
  6860     0F3B  307F               	movlw	127
  6861     0F3C  00F5               	movwf	___lmul@multiplicand+1
  6862     0F3D  302D               	movlw	45
  6863     0F3E  00F4               	movwf	___lmul@multiplicand
  6864     0F3F  318E  26FB  318F   	fcall	___lmul
  6865     0F42  3001               	movlw	1
  6866     0F43  0770               	addwf	?___lmul,w
  6867     0F44  0020               	movlb	0	; select bank0
  6868     0F45  00EB               	movwf	_seed
  6869     0F46  3000               	movlw	0
  6870     0F47  3D71               	addwfc	?___lmul+1,w
  6871     0F48  00EC               	movwf	_seed+1
  6872     0F49  3000               	movlw	0
  6873     0F4A  3D72               	addwfc	?___lmul+2,w
  6874     0F4B  00ED               	movwf	_seed+2
  6875     0F4C  3000               	movlw	0
  6876     0F4D  3D73               	addwfc	?___lmul+3,w
  6877     0F4E  00EE               	movwf	_seed+3
  6878     0F4F                     l2467:
  6879     0F4F  086B               	movf	_seed,w
  6880     0F50  00A0               	movwf	??_rand
  6881     0F51  086C               	movf	_seed+1,w
  6882     0F52  00A1               	movwf	??_rand+1
  6883     0F53  086D               	movf	_seed+2,w
  6884     0F54  00A2               	movwf	??_rand+2
  6885     0F55  086E               	movf	_seed+3,w
  6886     0F56  00A3               	movwf	??_rand+3
  6887     0F57  3011               	movlw	17
  6888     0F58                     u1305:
  6889     0F58  36A3               	lsrf	??_rand+3,f
  6890     0F59  0CA2               	rrf	??_rand+2,f
  6891     0F5A  0CA1               	rrf	??_rand+1,f
  6892     0F5B  0CA0               	rrf	??_rand,f
  6893     0F5C                     u1300:
  6894     0F5C  0B89               	decfsz	9,f
  6895     0F5D  2F58               	goto	u1305
  6896     0F5E  0821               	movf	??_rand+1,w
  6897     0F5F  00FD               	movwf	?_rand+1
  6898     0F60  0820               	movf	??_rand,w
  6899     0F61  00FC               	movwf	?_rand
  6900     0F62                     l1283:
  6901     0F62  0008               	return
  6902     0F63                     __end_of_rand:
  6903                           
  6904                           	psect	text22
  6905     0EFB                     __ptext22:	
  6906 ;; *************** function ___lmul *****************
  6907 ;; Defined at:
  6908 ;;		line 15 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\common\Umul32.c"
  6909 ;; Parameters:    Size  Location     Type
  6910 ;;  multiplier      4    0[COMMON] unsigned long 
  6911 ;;  multiplicand    4    4[COMMON] unsigned long 
  6912 ;; Auto vars:     Size  Location     Type
  6913 ;;  product         4    8[COMMON] unsigned long 
  6914 ;; Return value:  Size  Location     Type
  6915 ;;                  4    0[COMMON] unsigned long 
  6916 ;; Registers used:
  6917 ;;		wreg, status,2, status,0
  6918 ;; Tracked objects:
  6919 ;;		On entry : 0/0
  6920 ;;		On exit  : 0/0
  6921 ;;		Unchanged: 0/0
  6922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6923 ;;      Params:         8       0       0       0       0       0
  6924 ;;      Locals:         4       0       0       0       0       0
  6925 ;;      Temps:          0       0       0       0       0       0
  6926 ;;      Totals:        12       0       0       0       0       0
  6927 ;;Total ram usage:       12 bytes
  6928 ;; Hardware stack levels used: 1
  6929 ;; This function calls:
  6930 ;;		Nothing
  6931 ;; This function is called by:
  6932 ;;		_rand
  6933 ;; This function uses a non-reentrant model
  6934 ;;
  6935                           
  6936     0EFB                     ___lmul:	
  6937                           ;psect for function ___lmul
  6938                           
  6939     0EFB                     l2441:	
  6940                           ;incstack = 0
  6941                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  6942                           
  6943     0EFB  3000               	movlw	0
  6944     0EFC  00FB               	movwf	___lmul@product+3
  6945     0EFD  3000               	movlw	0
  6946     0EFE  00FA               	movwf	___lmul@product+2
  6947     0EFF  3000               	movlw	0
  6948     0F00  00F9               	movwf	___lmul@product+1
  6949     0F01  3000               	movlw	0
  6950     0F02  00F8               	movwf	___lmul@product
  6951     0F03                     l2443:
  6952     0F03  1C70               	btfss	___lmul@multiplier,0
  6953     0F04  2F06               	goto	u1261
  6954     0F05  2F07               	goto	u1260
  6955     0F06                     u1261:
  6956     0F06  2F0F               	goto	l2447
  6957     0F07                     u1260:
  6958     0F07                     l2445:
  6959     0F07  0874               	movf	___lmul@multiplicand,w
  6960     0F08  07F8               	addwf	___lmul@product,f
  6961     0F09  0875               	movf	___lmul@multiplicand+1,w
  6962     0F0A  3DF9               	addwfc	___lmul@product+1,f
  6963     0F0B  0876               	movf	___lmul@multiplicand+2,w
  6964     0F0C  3DFA               	addwfc	___lmul@product+2,f
  6965     0F0D  0877               	movf	___lmul@multiplicand+3,w
  6966     0F0E  3DFB               	addwfc	___lmul@product+3,f
  6967     0F0F                     l2447:
  6968     0F0F  3001               	movlw	1
  6969     0F10                     u1275:
  6970     0F10  35F4               	lslf	___lmul@multiplicand,f
  6971     0F11  0DF5               	rlf	___lmul@multiplicand+1,f
  6972     0F12  0DF6               	rlf	___lmul@multiplicand+2,f
  6973     0F13  0DF7               	rlf	___lmul@multiplicand+3,f
  6974     0F14  0B89               	decfsz	9,f
  6975     0F15  2F10               	goto	u1275
  6976     0F16                     l2449:
  6977     0F16  3001               	movlw	1
  6978     0F17                     u1285:
  6979     0F17  36F3               	lsrf	___lmul@multiplier+3,f
  6980     0F18  0CF2               	rrf	___lmul@multiplier+2,f
  6981     0F19  0CF1               	rrf	___lmul@multiplier+1,f
  6982     0F1A  0CF0               	rrf	___lmul@multiplier,f
  6983     0F1B  0B89               	decfsz	9,f
  6984     0F1C  2F17               	goto	u1285
  6985     0F1D  0873               	movf	___lmul@multiplier+3,w
  6986     0F1E  0472               	iorwf	___lmul@multiplier+2,w
  6987     0F1F  0471               	iorwf	___lmul@multiplier+1,w
  6988     0F20  0470               	iorwf	___lmul@multiplier,w
  6989     0F21  1D03               	skipz
  6990     0F22  2F24               	goto	u1291
  6991     0F23  2F25               	goto	u1290
  6992     0F24                     u1291:
  6993     0F24  2F03               	goto	l2443
  6994     0F25                     u1290:
  6995     0F25                     l2451:
  6996     0F25  087B               	movf	___lmul@product+3,w
  6997     0F26  00F3               	movwf	?___lmul+3
  6998     0F27  087A               	movf	___lmul@product+2,w
  6999     0F28  00F2               	movwf	?___lmul+2
  7000     0F29  0879               	movf	___lmul@product+1,w
  7001     0F2A  00F1               	movwf	?___lmul+1
  7002     0F2B  0878               	movf	___lmul@product,w
  7003     0F2C  00F0               	movwf	?___lmul
  7004     0F2D                     l833:
  7005     0F2D  0008               	return
  7006     0F2E                     __end_of___lmul:
  7007                           
  7008                           	psect	text23
  7009     0D89                     __ptext23:	
  7010 ;; *************** function _ai_getInputField *****************
  7011 ;; Defined at:
  7012 ;;		line 113 in file "ai.c"
  7013 ;; Parameters:    Size  Location     Type
  7014 ;;		None
  7015 ;; Auto vars:     Size  Location     Type
  7016 ;;		None
  7017 ;; Return value:  Size  Location     Type
  7018 ;;                  1    wreg      PTR char 
  7019 ;; Registers used:
  7020 ;;		wreg
  7021 ;; Tracked objects:
  7022 ;;		On entry : 0/0
  7023 ;;		On exit  : 0/0
  7024 ;;		Unchanged: 0/0
  7025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7026 ;;      Params:         0       0       0       0       0       0
  7027 ;;      Locals:         0       0       0       0       0       0
  7028 ;;      Temps:          0       0       0       0       0       0
  7029 ;;      Totals:         0       0       0       0       0       0
  7030 ;;Total ram usage:        0 bytes
  7031 ;; Hardware stack levels used: 1
  7032 ;; This function calls:
  7033 ;;		Nothing
  7034 ;; This function is called by:
  7035 ;;		_main
  7036 ;; This function uses a non-reentrant model
  7037 ;;
  7038                           
  7039     0D89                     _ai_getInputField:	
  7040                           ;psect for function _ai_getInputField
  7041                           
  7042     0D89                     l2709:	
  7043                           ;incstack = 0
  7044                           ; Regs used in _ai_getInputField: [wreg]
  7045                           
  7046                           
  7047                           ;ai.c: 114:     return Y0;
  7048     0D89  3063               	movlw	(low (_Y0| 0))& (0+255)
  7049     0D8A                     l607:
  7050     0D8A  0008               	return
  7051     0D8B                     __end_of_ai_getInputField:
  7052                           
  7053                           	psect	text24
  7054     0DE7                     __ptext24:	
  7055 ;; *************** function _SYSTEM_Initialize *****************
  7056 ;; Defined at:
  7057 ;;		line 50 in file "mcc_generated_files/mcc.c"
  7058 ;; Parameters:    Size  Location     Type
  7059 ;;		None
  7060 ;; Auto vars:     Size  Location     Type
  7061 ;;		None
  7062 ;; Return value:  Size  Location     Type
  7063 ;;                  1    wreg      void 
  7064 ;; Registers used:
  7065 ;;		wreg, status,2, status,0, pclath, cstack
  7066 ;; Tracked objects:
  7067 ;;		On entry : 0/0
  7068 ;;		On exit  : 0/0
  7069 ;;		Unchanged: 0/0
  7070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7071 ;;      Params:         0       0       0       0       0       0
  7072 ;;      Locals:         0       0       0       0       0       0
  7073 ;;      Temps:          0       0       0       0       0       0
  7074 ;;      Totals:         0       0       0       0       0       0
  7075 ;;Total ram usage:        0 bytes
  7076 ;; Hardware stack levels used: 1
  7077 ;; Hardware stack levels required when called: 2
  7078 ;; This function calls:
  7079 ;;		_EUSART_Initialize
  7080 ;;		_OSCILLATOR_Initialize
  7081 ;;		_PIN_MANAGER_Initialize
  7082 ;;		_SPI1_Initialize
  7083 ;;		_WDT_Initialize
  7084 ;; This function is called by:
  7085 ;;		_main
  7086 ;; This function uses a non-reentrant model
  7087 ;;
  7088                           
  7089     0DE7                     _SYSTEM_Initialize:	
  7090                           ;psect for function _SYSTEM_Initialize
  7091                           
  7092     0DE7                     l2605:	
  7093                           ;incstack = 0
  7094                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7095                           
  7096                           
  7097                           ;mcc_generated_files/mcc.c: 53:     SPI1_Initialize();
  7098     0DE7  318D  25CE  318D   	fcall	_SPI1_Initialize
  7099                           
  7100                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  7101     0DEA  318E  2629  318D   	fcall	_PIN_MANAGER_Initialize
  7102                           
  7103                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  7104     0DED  318D  25B5  318D   	fcall	_OSCILLATOR_Initialize
  7105                           
  7106                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  7107     0DF0  318D  258E  318D   	fcall	_WDT_Initialize
  7108                           
  7109                           ;mcc_generated_files/mcc.c: 57:     EUSART_Initialize();
  7110     0DF3  318E  267B  318D   	fcall	_EUSART_Initialize
  7111     0DF6                     l248:
  7112     0DF6  0008               	return
  7113     0DF7                     __end_of_SYSTEM_Initialize:
  7114                           
  7115                           	psect	text25
  7116     0D8E                     __ptext25:	
  7117 ;; *************** function _WDT_Initialize *****************
  7118 ;; Defined at:
  7119 ;;		line 70 in file "mcc_generated_files/mcc.c"
  7120 ;; Parameters:    Size  Location     Type
  7121 ;;		None
  7122 ;; Auto vars:     Size  Location     Type
  7123 ;;		None
  7124 ;; Return value:  Size  Location     Type
  7125 ;;                  1    wreg      void 
  7126 ;; Registers used:
  7127 ;;		wreg
  7128 ;; Tracked objects:
  7129 ;;		On entry : 0/0
  7130 ;;		On exit  : 0/0
  7131 ;;		Unchanged: 0/0
  7132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7133 ;;      Params:         0       0       0       0       0       0
  7134 ;;      Locals:         0       0       0       0       0       0
  7135 ;;      Temps:          0       0       0       0       0       0
  7136 ;;      Totals:         0       0       0       0       0       0
  7137 ;;Total ram usage:        0 bytes
  7138 ;; Hardware stack levels used: 1
  7139 ;; This function calls:
  7140 ;;		Nothing
  7141 ;; This function is called by:
  7142 ;;		_SYSTEM_Initialize
  7143 ;; This function uses a non-reentrant model
  7144 ;;
  7145                           
  7146     0D8E                     _WDT_Initialize:	
  7147                           ;psect for function _WDT_Initialize
  7148                           
  7149     0D8E                     l2511:	
  7150                           ;incstack = 0
  7151                           ; Regs used in _WDT_Initialize: [wreg]
  7152                           
  7153                           
  7154                           ;mcc_generated_files/mcc.c: 73:     WDTCON = 0x16;
  7155     0D8E  3016               	movlw	22
  7156     0D8F  0021               	movlb	1	; select bank1
  7157     0D90  0097               	movwf	23	;volatile
  7158     0D91                     l254:
  7159     0D91  0008               	return
  7160     0D92                     __end_of_WDT_Initialize:
  7161                           
  7162                           	psect	text26
  7163     0DCE                     __ptext26:	
  7164 ;; *************** function _SPI1_Initialize *****************
  7165 ;; Defined at:
  7166 ;;		line 62 in file "mcc_generated_files/spi1.c"
  7167 ;; Parameters:    Size  Location     Type
  7168 ;;		None
  7169 ;; Auto vars:     Size  Location     Type
  7170 ;;		None
  7171 ;; Return value:  Size  Location     Type
  7172 ;;                  1    wreg      void 
  7173 ;; Registers used:
  7174 ;;		wreg
  7175 ;; Tracked objects:
  7176 ;;		On entry : 0/0
  7177 ;;		On exit  : 0/0
  7178 ;;		Unchanged: 0/0
  7179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7180 ;;      Params:         0       0       0       0       0       0
  7181 ;;      Locals:         0       0       0       0       0       0
  7182 ;;      Temps:          0       0       0       0       0       0
  7183 ;;      Totals:         0       0       0       0       0       0
  7184 ;;Total ram usage:        0 bytes
  7185 ;; Hardware stack levels used: 1
  7186 ;; This function calls:
  7187 ;;		Nothing
  7188 ;; This function is called by:
  7189 ;;		_SYSTEM_Initialize
  7190 ;; This function uses a non-reentrant model
  7191 ;;
  7192                           
  7193     0DCE                     _SPI1_Initialize:	
  7194                           ;psect for function _SPI1_Initialize
  7195                           
  7196     0DCE                     l2499:	
  7197                           ;incstack = 0
  7198                           ; Regs used in _SPI1_Initialize: [wreg]
  7199                           
  7200                           
  7201                           ;mcc_generated_files/spi1.c: 65:     SSP1STAT = 0x40;
  7202     0DCE  3040               	movlw	64
  7203     0DCF  0024               	movlb	4	; select bank4
  7204     0DD0  0094               	movwf	20	;volatile
  7205                           
  7206                           ;mcc_generated_files/spi1.c: 66:     SSP1CON1 = 0x02;
  7207     0DD1  3002               	movlw	2
  7208     0DD2  0095               	movwf	21	;volatile
  7209                           
  7210                           ;mcc_generated_files/spi1.c: 67:     SSP1ADD = 0x01;
  7211     0DD3  3001               	movlw	1
  7212     0DD4  0092               	movwf	18	;volatile
  7213     0DD5                     l2501:
  7214                           
  7215                           ;mcc_generated_files/spi1.c: 68:     TRISBbits.TRISB4 = 0;
  7216     0DD5  0021               	movlb	1	; select bank1
  7217     0DD6  120D               	bcf	13,4	;volatile
  7218     0DD7                     l2503:
  7219                           
  7220                           ;mcc_generated_files/spi1.c: 69:     SSP1CON1bits.SSPEN = 0;
  7221     0DD7  0024               	movlb	4	; select bank4
  7222     0DD8  1295               	bcf	21,5	;volatile
  7223     0DD9                     l187:
  7224     0DD9  0008               	return
  7225     0DDA                     __end_of_SPI1_Initialize:
  7226                           
  7227                           	psect	text27
  7228     0E29                     __ptext27:	
  7229 ;; *************** function _PIN_MANAGER_Initialize *****************
  7230 ;; Defined at:
  7231 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  7232 ;; Parameters:    Size  Location     Type
  7233 ;;		None
  7234 ;; Auto vars:     Size  Location     Type
  7235 ;;		None
  7236 ;; Return value:  Size  Location     Type
  7237 ;;                  1    wreg      void 
  7238 ;; Registers used:
  7239 ;;		wreg, status,2
  7240 ;; Tracked objects:
  7241 ;;		On entry : 0/0
  7242 ;;		On exit  : 0/0
  7243 ;;		Unchanged: 0/0
  7244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7245 ;;      Params:         0       0       0       0       0       0
  7246 ;;      Locals:         0       0       0       0       0       0
  7247 ;;      Temps:          0       0       0       0       0       0
  7248 ;;      Totals:         0       0       0       0       0       0
  7249 ;;Total ram usage:        0 bytes
  7250 ;; Hardware stack levels used: 1
  7251 ;; This function calls:
  7252 ;;		Nothing
  7253 ;; This function is called by:
  7254 ;;		_SYSTEM_Initialize
  7255 ;; This function uses a non-reentrant model
  7256 ;;
  7257                           
  7258     0E29                     _PIN_MANAGER_Initialize:	
  7259                           ;psect for function _PIN_MANAGER_Initialize
  7260                           
  7261     0E29                     l2483:	
  7262                           ;incstack = 0
  7263                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  7264                           
  7265                           
  7266                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  7267     0E29  0022               	movlb	2	; select bank2
  7268     0E2A  018C               	clrf	12	;volatile
  7269                           
  7270                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  7271     0E2B  018D               	clrf	13	;volatile
  7272     0E2C                     l2485:
  7273                           
  7274                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x37;
  7275     0E2C  3037               	movlw	55
  7276     0E2D  0021               	movlb	1	; select bank1
  7277     0E2E  008C               	movwf	12	;volatile
  7278     0E2F                     l2487:
  7279                           
  7280                           ;mcc_generated_files/pin_manager.c: 67:     TRISB = 0xEF;
  7281     0E2F  30EF               	movlw	239
  7282     0E30  008D               	movwf	13	;volatile
  7283     0E31                     l2489:
  7284                           
  7285                           ;mcc_generated_files/pin_manager.c: 72:     ANSELB = 0xC8;
  7286     0E31  30C8               	movlw	200
  7287     0E32  0023               	movlb	3	; select bank3
  7288     0E33  008D               	movwf	13	;volatile
  7289     0E34                     l2491:
  7290                           
  7291                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x1F;
  7292     0E34  301F               	movlw	31
  7293     0E35  008C               	movwf	12	;volatile
  7294                           
  7295                           ;mcc_generated_files/pin_manager.c: 78:     WPUB = 0x00;
  7296     0E36  0024               	movlb	4	; select bank4
  7297     0E37  018D               	clrf	13	;volatile
  7298                           
  7299                           ;mcc_generated_files/pin_manager.c: 79:     WPUA = 0x00;
  7300     0E38  018C               	clrf	12	;volatile
  7301     0E39                     l2493:
  7302                           
  7303                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  7304     0E39  0021               	movlb	1	; select bank1
  7305     0E3A  1795               	bsf	21,7	;volatile
  7306     0E3B                     l2495:
  7307                           
  7308                           ;mcc_generated_files/pin_manager.c: 86:     APFCON0 = 0xC0;
  7309     0E3B  30C0               	movlw	192
  7310     0E3C  0022               	movlb	2	; select bank2
  7311     0E3D  009D               	movwf	29	;volatile
  7312     0E3E                     l2497:
  7313                           
  7314                           ;mcc_generated_files/pin_manager.c: 87:     APFCON1 = 0x01;
  7315     0E3E  3001               	movlw	1
  7316     0E3F  009E               	movwf	30	;volatile
  7317     0E40                     l163:
  7318     0E40  0008               	return
  7319     0E41                     __end_of_PIN_MANAGER_Initialize:
  7320                           
  7321                           	psect	text28
  7322     0DB5                     __ptext28:	
  7323 ;; *************** function _OSCILLATOR_Initialize *****************
  7324 ;; Defined at:
  7325 ;;		line 60 in file "mcc_generated_files/mcc.c"
  7326 ;; Parameters:    Size  Location     Type
  7327 ;;		None
  7328 ;; Auto vars:     Size  Location     Type
  7329 ;;		None
  7330 ;; Return value:  Size  Location     Type
  7331 ;;                  1    wreg      void 
  7332 ;; Registers used:
  7333 ;;		wreg, status,2
  7334 ;; Tracked objects:
  7335 ;;		On entry : 0/0
  7336 ;;		On exit  : 0/0
  7337 ;;		Unchanged: 0/0
  7338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7339 ;;      Params:         0       0       0       0       0       0
  7340 ;;      Locals:         0       0       0       0       0       0
  7341 ;;      Temps:          0       0       0       0       0       0
  7342 ;;      Totals:         0       0       0       0       0       0
  7343 ;;Total ram usage:        0 bytes
  7344 ;; Hardware stack levels used: 1
  7345 ;; This function calls:
  7346 ;;		Nothing
  7347 ;; This function is called by:
  7348 ;;		_SYSTEM_Initialize
  7349 ;; This function uses a non-reentrant model
  7350 ;;
  7351                           
  7352     0DB5                     _OSCILLATOR_Initialize:	
  7353                           ;psect for function _OSCILLATOR_Initialize
  7354                           
  7355     0DB5                     l2505:	
  7356                           ;incstack = 0
  7357                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  7358                           
  7359                           
  7360                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x70;
  7361     0DB5  3070               	movlw	112
  7362     0DB6  0021               	movlb	1	; select bank1
  7363     0DB7  0099               	movwf	25	;volatile
  7364     0DB8                     l2507:
  7365                           
  7366                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x00;
  7367     0DB8  0198               	clrf	24	;volatile
  7368     0DB9                     l2509:
  7369                           
  7370                           ;mcc_generated_files/mcc.c: 67:     BORCON = 0x00;
  7371     0DB9  0022               	movlb	2	; select bank2
  7372     0DBA  0196               	clrf	22	;volatile
  7373     0DBB                     l251:
  7374     0DBB  0008               	return
  7375     0DBC                     __end_of_OSCILLATOR_Initialize:
  7376                           
  7377                           	psect	text29
  7378     0E7B                     __ptext29:	
  7379 ;; *************** function _EUSART_Initialize *****************
  7380 ;; Defined at:
  7381 ;;		line 66 in file "mcc_generated_files/eusart.c"
  7382 ;; Parameters:    Size  Location     Type
  7383 ;;		None
  7384 ;; Auto vars:     Size  Location     Type
  7385 ;;		None
  7386 ;; Return value:  Size  Location     Type
  7387 ;;                  1    wreg      void 
  7388 ;; Registers used:
  7389 ;;		wreg, status,2, status,0, pclath, cstack
  7390 ;; Tracked objects:
  7391 ;;		On entry : 0/0
  7392 ;;		On exit  : 0/0
  7393 ;;		Unchanged: 0/0
  7394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7395 ;;      Params:         0       0       0       0       0       0
  7396 ;;      Locals:         0       0       0       0       0       0
  7397 ;;      Temps:          0       0       0       0       0       0
  7398 ;;      Totals:         0       0       0       0       0       0
  7399 ;;Total ram usage:        0 bytes
  7400 ;; Hardware stack levels used: 1
  7401 ;; Hardware stack levels required when called: 1
  7402 ;; This function calls:
  7403 ;;		_EUSART_SetErrorHandler
  7404 ;;		_EUSART_SetFramingErrorHandler
  7405 ;;		_EUSART_SetOverrunErrorHandler
  7406 ;; This function is called by:
  7407 ;;		_SYSTEM_Initialize
  7408 ;; This function uses a non-reentrant model
  7409 ;;
  7410                           
  7411     0E7B                     _EUSART_Initialize:	
  7412                           ;psect for function _EUSART_Initialize
  7413                           
  7414     0E7B                     l2471:	
  7415                           ;incstack = 0
  7416                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7417                           
  7418                           
  7419                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  7420     0E7B  3008               	movlw	8
  7421     0E7C  0023               	movlb	3	; select bank3
  7422     0E7D  009F               	movwf	31	;volatile
  7423                           
  7424                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
  7425     0E7E  3090               	movlw	144
  7426     0E7F  009D               	movwf	29	;volatile
  7427                           
  7428                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  7429     0E80  3024               	movlw	36
  7430     0E81  009E               	movwf	30	;volatile
  7431                           
  7432                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0x67;
  7433     0E82  3067               	movlw	103
  7434     0E83  009B               	movwf	27	;volatile
  7435     0E84                     l2473:
  7436                           
  7437                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x00;
  7438     0E84  019C               	clrf	28	;volatile
  7439     0E85                     l2475:
  7440                           
  7441                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  7442     0E85  3000               	movlw	0
  7443     0E86  00F0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  7444     0E87  3000               	movlw	0
  7445     0E88  00F1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  7446     0E89  318D  259D  318E   	fcall	_EUSART_SetFramingErrorHandler
  7447     0E8C                     l2477:
  7448                           
  7449                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  7450     0E8C  3000               	movlw	0
  7451     0E8D  00F0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  7452     0E8E  3000               	movlw	0
  7453     0E8F  00F1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  7454     0E90  318D  25A3  318E   	fcall	_EUSART_SetOverrunErrorHandler
  7455     0E93                     l2479:
  7456                           
  7457                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  7458     0E93  3000               	movlw	0
  7459     0E94  00F0               	movwf	EUSART_SetErrorHandler@interruptHandler
  7460     0E95  3000               	movlw	0
  7461     0E96  00F1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  7462     0E97  318D  2597  318E   	fcall	_EUSART_SetErrorHandler
  7463     0E9A                     l2481:
  7464                           
  7465                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  7466     0E9A  0020               	movlb	0	; select bank0
  7467     0E9B  01E2               	clrf	_eusartRxLastError	;volatile
  7468     0E9C                     l93:
  7469     0E9C  0008               	return
  7470     0E9D                     __end_of_EUSART_Initialize:
  7471                           
  7472                           	psect	text30
  7473     0DA3                     __ptext30:	
  7474 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  7475 ;; Defined at:
  7476 ;;		line 161 in file "mcc_generated_files/eusart.c"
  7477 ;; Parameters:    Size  Location     Type
  7478 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  7479 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  7480 ;; Auto vars:     Size  Location     Type
  7481 ;;		None
  7482 ;; Return value:  Size  Location     Type
  7483 ;;                  1    wreg      void 
  7484 ;; Registers used:
  7485 ;;		wreg
  7486 ;; Tracked objects:
  7487 ;;		On entry : 0/0
  7488 ;;		On exit  : 0/0
  7489 ;;		Unchanged: 0/0
  7490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7491 ;;      Params:         2       0       0       0       0       0
  7492 ;;      Locals:         0       0       0       0       0       0
  7493 ;;      Temps:          0       0       0       0       0       0
  7494 ;;      Totals:         2       0       0       0       0       0
  7495 ;;Total ram usage:        2 bytes
  7496 ;; Hardware stack levels used: 1
  7497 ;; This function calls:
  7498 ;;		Nothing
  7499 ;; This function is called by:
  7500 ;;		_EUSART_Initialize
  7501 ;; This function uses a non-reentrant model
  7502 ;;
  7503                           
  7504     0DA3                     _EUSART_SetOverrunErrorHandler:	
  7505                           ;psect for function _EUSART_SetOverrunErrorHandler
  7506                           
  7507     0DA3                     l2457:	
  7508                           ;incstack = 0
  7509                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  7510                           
  7511                           
  7512                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  7513     0DA3  0871               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  7514     0DA4  0021               	movlb	1	; select bank1
  7515     0DA5  00EB               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  7516     0DA6  0870               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  7517     0DA7  00EA               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  7518     0DA8                     l135:
  7519     0DA8  0008               	return
  7520     0DA9                     __end_of_EUSART_SetOverrunErrorHandler:
  7521                           
  7522                           	psect	text31
  7523     0D9D                     __ptext31:	
  7524 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  7525 ;; Defined at:
  7526 ;;		line 157 in file "mcc_generated_files/eusart.c"
  7527 ;; Parameters:    Size  Location     Type
  7528 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  7529 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  7530 ;; Auto vars:     Size  Location     Type
  7531 ;;		None
  7532 ;; Return value:  Size  Location     Type
  7533 ;;                  1    wreg      void 
  7534 ;; Registers used:
  7535 ;;		wreg
  7536 ;; Tracked objects:
  7537 ;;		On entry : 0/0
  7538 ;;		On exit  : 0/0
  7539 ;;		Unchanged: 0/0
  7540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7541 ;;      Params:         2       0       0       0       0       0
  7542 ;;      Locals:         0       0       0       0       0       0
  7543 ;;      Temps:          0       0       0       0       0       0
  7544 ;;      Totals:         2       0       0       0       0       0
  7545 ;;Total ram usage:        2 bytes
  7546 ;; Hardware stack levels used: 1
  7547 ;; This function calls:
  7548 ;;		Nothing
  7549 ;; This function is called by:
  7550 ;;		_EUSART_Initialize
  7551 ;; This function uses a non-reentrant model
  7552 ;;
  7553                           
  7554     0D9D                     _EUSART_SetFramingErrorHandler:	
  7555                           ;psect for function _EUSART_SetFramingErrorHandler
  7556                           
  7557     0D9D                     l2455:	
  7558                           ;incstack = 0
  7559                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  7560                           
  7561                           
  7562                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  7563     0D9D  0871               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  7564     0D9E  0021               	movlb	1	; select bank1
  7565     0D9F  00ED               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
  7566     0DA0  0870               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  7567     0DA1  00EC               	movwf	_EUSART_FramingErrorHandler^(0+128)
  7568     0DA2                     l132:
  7569     0DA2  0008               	return
  7570     0DA3                     __end_of_EUSART_SetFramingErrorHandler:
  7571                           
  7572                           	psect	text32
  7573     0D97                     __ptext32:	
  7574 ;; *************** function _EUSART_SetErrorHandler *****************
  7575 ;; Defined at:
  7576 ;;		line 165 in file "mcc_generated_files/eusart.c"
  7577 ;; Parameters:    Size  Location     Type
  7578 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  7579 ;;		 -> EUSART_DefaultErrorHandler(1), 
  7580 ;; Auto vars:     Size  Location     Type
  7581 ;;		None
  7582 ;; Return value:  Size  Location     Type
  7583 ;;                  1    wreg      void 
  7584 ;; Registers used:
  7585 ;;		wreg
  7586 ;; Tracked objects:
  7587 ;;		On entry : 0/0
  7588 ;;		On exit  : 0/0
  7589 ;;		Unchanged: 0/0
  7590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7591 ;;      Params:         2       0       0       0       0       0
  7592 ;;      Locals:         0       0       0       0       0       0
  7593 ;;      Temps:          0       0       0       0       0       0
  7594 ;;      Totals:         2       0       0       0       0       0
  7595 ;;Total ram usage:        2 bytes
  7596 ;; Hardware stack levels used: 1
  7597 ;; This function calls:
  7598 ;;		Nothing
  7599 ;; This function is called by:
  7600 ;;		_EUSART_Initialize
  7601 ;; This function uses a non-reentrant model
  7602 ;;
  7603                           
  7604     0D97                     _EUSART_SetErrorHandler:	
  7605                           ;psect for function _EUSART_SetErrorHandler
  7606                           
  7607     0D97                     l2459:	
  7608                           ;incstack = 0
  7609                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  7610                           
  7611                           
  7612                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  7613     0D97  0871               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  7614     0D98  0021               	movlb	1	; select bank1
  7615     0D99  00E9               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
  7616     0D9A  0870               	movf	EUSART_SetErrorHandler@interruptHandler,w
  7617     0D9B  00E8               	movwf	_EUSART_ErrorHandler^(0+128)
  7618     0D9C                     l138:
  7619     0D9C  0008               	return
  7620     0D9D                     __end_of_EUSART_SetErrorHandler:
  7621     007E                     btemp	set	126	;btemp
  7622     007E                     wtemp0	set	126
  7623                           
  7624                           	psect	idloc
  7625                           
  7626                           ;Config register IDLOC0 @ 0x8000
  7627                           ;	unspecified, using default values
  7628     8000                     	org	32768
  7629     8000  3FFF               	dw	16383
  7630                           
  7631                           ;Config register IDLOC1 @ 0x8001
  7632                           ;	unspecified, using default values
  7633     8001                     	org	32769
  7634     8001  3FFF               	dw	16383
  7635                           
  7636                           ;Config register IDLOC2 @ 0x8002
  7637                           ;	unspecified, using default values
  7638     8002                     	org	32770
  7639     8002  3FFF               	dw	16383
  7640                           
  7641                           ;Config register IDLOC3 @ 0x8003
  7642                           ;	unspecified, using default values
  7643     8003                     	org	32771
  7644     8003  3FFF               	dw	16383
  7645                           
  7646                           	psect	config
  7647                           
  7648                           ;Config register CONFIG1 @ 0x8007
  7649                           ;	Oscillator Selection
  7650                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  7651                           ;	Watchdog Timer Enable
  7652                           ;	WDTE = OFF, WDT disabled
  7653                           ;	Power-up Timer Enable
  7654                           ;	PWRTE = OFF, PWRT disabled
  7655                           ;	MCLR Pin Function Select
  7656                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  7657                           ;	Flash Program Memory Code Protection
  7658                           ;	CP = OFF, Program memory code protection is disabled
  7659                           ;	Data Memory Code Protection
  7660                           ;	CPD = OFF, Data memory code protection is disabled
  7661                           ;	Brown-out Reset Enable
  7662                           ;	BOREN = ON, Brown-out Reset enabled
  7663                           ;	Clock Out Enable
  7664                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  7665                           ;	Internal/External Switchover
  7666                           ;	IESO = ON, Internal/External Switchover mode is enabled
  7667                           ;	Fail-Safe Clock Monitor Enable
  7668                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  7669     8007                     	org	32775
  7670     8007  3FE4               	dw	16356
  7671                           
  7672                           ;Config register CONFIG2 @ 0x8008
  7673                           ;	Flash Memory Self-Write Protection
  7674                           ;	WRT = OFF, Write protection off
  7675                           ;	PLL Enable
  7676                           ;	PLLEN = OFF, 4x PLL disabled
  7677                           ;	Stack Overflow/Underflow Reset Enable
  7678                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  7679                           ;	Brown-out Reset Voltage Selection
  7680                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  7681                           ;	Low-Voltage Programming Enable
  7682                           ;	LVP = ON, Low-voltage programming enabled
  7683     8008                     	org	32776
  7684     8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    36
    Data        8
    BSS         246
    Persistent  38
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     41      79
    BANK1            80      0      78
    BANK2            80      0      80
    BANK3            80      0      64
    BANK4            48      0       0

Pointer List with Targets:

    snake_getSurroundings@surroundings	PTR char  size(1) Largest target is 8
		 -> Y0(BANK0[8]), 

    sp__ai_getInputField	PTR char  size(1) Largest target is 8
		 -> Y0(BANK0[8]), 

    sp__snake_getField	PTR unsigned char  size(1) Largest target is 16
		 -> field(BANK1[16]), 

    main@field	PTR unsigned char  size(1) Largest target is 16
		 -> field(BANK1[16]), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    _main->_ledSet
    _snake_move->_rand
    _snake_initiate->_rand
    _snake_getSurroundings->___awdiv
    _sendMatrix->_txMAX7219
    _ledSet->___awdiv
    _initMAX7219->_txMAX7219
    _txMAX7219->_SPI1_WriteByte
    _ai_run->___wmul
    _ai_propagate->___wmul
    ___wmul->___awdiv
    ___awdiv->_de_sigmoid
    ___awdiv->_sigmoid
    _ai_initiate->_rand
    _rand->___lmul
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _main in BANK0

    _main->_ai_propagate
    _snake_move->_snake_initiate
    _snake_initiate->_rand
    _ai_run->___wmul
    _ai_propagate->___wmul
    _ai_initiate->_rand

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0   30369
                                             29 BANK0     12    12      0
                  _SYSTEM_Initialize
                            ___awdiv
                   _ai_getInputField
                        _ai_initiate
                       _ai_propagate
                             _ai_run
                 _deactivateElevator
                        _initMAX7219
                           _ledClear
                             _ledSet
                         _sendMatrix
                     _snake_getField
              _snake_getFoodPosition
              _snake_getSurroundings
                     _snake_initiate
                         _snake_move
 ---------------------------------------------------------------------------------
 (1) _snake_move                                           5     5      0    4311
                                              6 BANK0      5     5      0
                            ___awdiv
                               _rand
                     _snake_initiate
 ---------------------------------------------------------------------------------
 (2) _snake_initiate                                       2     2      0     410
                                              4 BANK0      2     2      0
                               _rand
                              _srand
 ---------------------------------------------------------------------------------
 (3) _srand                                                2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _snake_getSurroundings                               10    10      0    4194
                                             11 COMMON     2     2      0
                                              0 BANK0      8     8      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) _snake_getFoodPosition                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _snake_getField                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sendMatrix                                           5     5      0     935
                                              3 COMMON     5     5      0
                          _txMAX7219
 ---------------------------------------------------------------------------------
 (1) _ledSet                                               4     3      1    1488
                                             11 COMMON     3     2      1
                                              0 BANK0      1     1      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _ledClear                                             4     3      1    1336
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _initMAX7219                                          2     2      0     750
                                              3 COMMON     2     2      0
                          _txMAX7219
 ---------------------------------------------------------------------------------
 (2) _txMAX7219                                            2     1      1     750
                                              1 COMMON     2     1      1
                     _SPI1_WriteByte
 ---------------------------------------------------------------------------------
 (3) _SPI1_WriteByte                                       1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _deactivateElevator                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ai_run                                              11    11      0    5524
                                              4 BANK0     11    11      0
                            ___awdiv
                             ___wmul
                            _sigmoid
 ---------------------------------------------------------------------------------
 (2) _sigmoid                                              2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ai_propagate                                        27    27      0    6380
                                              4 BANK0     25    25      0
                            ___awdiv
                             ___wmul
                         _de_sigmoid
 ---------------------------------------------------------------------------------
 (2) _de_sigmoid                                           2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1156
                                             11 COMMON     2     2      0
                                              0 BANK0      4     0      4
                            ___awdiv (ARG)
                         _de_sigmoid (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    3492
                                              2 COMMON     9     5      4
                         _de_sigmoid (ARG)
                            _sigmoid (ARG)
 ---------------------------------------------------------------------------------
 (1) _ai_initiate                                          7     7      0     560
                                              4 BANK0      7     7      0
                               _rand
 ---------------------------------------------------------------------------------
 (3) _rand                                                 6     4      2     244
                                             12 COMMON     2     0      2
                                              0 BANK0      4     4      0
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     244
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _ai_getInputField                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI1_Initialize
     _WDT_Initialize
   ___awdiv
     _de_sigmoid (ARG)
     _sigmoid (ARG)
   _ai_getInputField
   _ai_initiate
     _rand
       ___lmul
   _ai_propagate
     ___awdiv
     ___wmul
       ___awdiv (ARG)
       _de_sigmoid (ARG)
     _de_sigmoid
   _ai_run
     ___awdiv
     ___wmul
     _sigmoid
   _deactivateElevator
   _initMAX7219
     _txMAX7219
       _SPI1_WriteByte
   _ledClear
   _ledSet
     ___awdiv (ARG)
   _sendMatrix
     _txMAX7219
   _snake_getField
   _snake_getFoodPosition
   _snake_getSurroundings
     ___awdiv
   _snake_initiate
     _rand
     _srand
   _snake_move
     ___awdiv
     _rand
     _snake_initiate

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0     13B       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     29      4F       6       98.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      4E       8       97.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      50      10      100.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      40      12       80.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0     13B      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Oct 09 02:17:53 2022

                           SPI1_WriteByte@byte 0070                           __end_of_ai_propagate 07D1  
                                           _B1 00CC                                             _B2 00C8  
                                           l93 0E9C                                             _W1 0120  
                                           _W2 0160                                             _Y0 0063  
                                           _Y1 0059                                             _Y2 0055  
                                           _Z1 0051                                             _Z2 004D  
                                 ___awdiv@sign 0078                            ___wmul@multiplicand 0022  
                                          l132 0DA2                                            l135 0DA8  
                                          l224 0D96                                            l400 0FA0  
                                          l138 0D9C                                            l251 0DBB  
                                          l163 0E40                                            l403 0017  
                                          l333 0DE6                                            l254 0D91  
                                          l406 0E28                                            l423 0ECA  
                                          l503 0146                                            l248 0DF6  
                                          l512 0D8D                                            l187 0DD9  
                                          l604 0085                                            l452 0EFA  
                                          l607 0D8A                                            l391 0E48  
                                          l624 0356                                            l480 0218  
                                          l393 0E4D                                            l394 0E52  
                                          l483 0005                                            l628 07D0  
                                          l396 0E57                                            l821 0E7A  
                                          l397 0E5A                                            l833 0F2D  
                                          l666 0E16                                            l819 0E66  
                                          l669 0E06                                            l972 0FFF  
               ?_EUSART_SetFramingErrorHandler 0070                                            wreg 0009  
                                 ?_initMAX7219 0070                                           l3011 05A6  
                                         l3101 0786                                           l3021 05B0  
                                         l3005 0589                                           l3111 0797  
                                         l3103 078C                                           l3031 05E3  
                                         l3023 05B6                                           l3007 059C  
                                         l1280 0DCD                                           l3113 0798  
                                         l3041 060D                                           l3033 05F4  
                                         l3017 05A7                                           l3009 05A0  
                                         l1283 0F62                                           l3123 07C6  
                                         l3051 069B                                           l3043 0687  
                                         l3035 060B                                           l3019 05AC  
                                         l3211 0409                                           l2501 0DD5  
                                         l3125 07CA                                           l3117 079F  
                                         l3109 078D                                           l3061 06D9  
                                         l3045 068B                                           l3029 05B7  
                                         l3221 0465                                           l3213 040E  
                                         l3205 03E7                                           l3141 035A  
                                         l2503 0DD7                                           l2511 0D8E  
                                         l3119 07C1                                           l3071 0735  
                                         l3063 06F0                                           l3047 0691  
                                         l3231 0489                                           l3223 046D  
                                         l3215 0414                                           l3207 03FC  
                                         l3151 036B                                           l3143 035D  
                                         l2505 0DB5                                           l2441 0EFB  
                                         l2601 0FFB                                           l3073 073A  
                                         l3057 069C                                           l3049 0695  
                                         l2521 0ED2                                           l2513 0ECB  
                                         l3241 04AC                                           l3233 0490  
                                         l3225 0474                                           l3217 0418  
                                         l3209 0403                                           l3145 0360  
                                         l2507 0DB8                                           l2451 0F25  
                                         l2443 0F03                                           l3075 0740  
                                         l3059 06C8                                           l2531 0EF4  
                                         l2523 0ED6                                           l3251 04CF  
                                         l3243 04B3                                           l3235 0497  
                                         l3227 047B                                           l3219 041E  
                                         l3171 0394                                           l3163 036D  
                                         l3147 0363                                           l3139 0357  
                                         l2509 0DB9                                           l2605 0DE7  
                                         l2445 0F07                                           l3093 0756  
                                         l3085 074B                                           l3077 0744  
                                         l3069 06F2                                           l2461 0D93  
                                         l2533 0E42                                           l2701 0EB3  
                                         l2525 0EDC                                           l3253 04D6  
                                         l3245 04B9                                           l3237 049D  
                                         l3229 0481                                           l3181 03BF  
                                         l3173 039A                                           l3165 0382  
                                         l3157 036C                                           l3149 0366  
                                         l2455 0D9D                                           l2471 0E7B  
                                         l2447 0F0F                                           l2631 0049  
                                         l2623 0025                                           l2615 001A  
                                         l2551 0E62                                           l2543 0DF8  
                                         l3095 0778                                           l3087 0755  
                                         l3079 074A                                           l2607 0DDA  
                                         l2535 0E44                                           l2703 0EB9  
                                         l2463 0DC4                                           l2527 0EF0  
                                         l2519 0ECD                                           l3271 051F  
                                         l3351 04FA                                           l3255 04DD  
                                         l3263 04F1                                           l3247 04C1  
                                         l3239 04A5                                           l3191 03E0  
                                         l3183 03C2                                           l3175 039E  
                                         l3167 0389                                           l2457 0DA3  
                                         l2481 0E9A                                           l2473 0E84  
                                         l2449 0F16                                           l2465 0F2E  
                                         l2641 0059                                           l2633 004F  
                                         l2625 003A                                           l2617 0023  
                                         l2609 0018                                           l2561 0FA1  
                                         l2553 0E6B                                           l3097 077C  
                                         l2537 0E4E                                           l2705 0EC0  
                                         l2721 0090                                           l2713 0088  
                                         l2529 0EF2                                           l3353 01C4  
                                         l3273 0524                                           l3257 04E4  
                                         l3265 0508                                           l3249 04C8  
                                         l3193 03E4                                           l3185 03CF  
                                         l3177 03A4                                           l3169 038F  
                                         l2459 0D97                                           l2475 0E85  
                                         l2491 0E34                                           l2483 0E29  
                                         l2467 0F4F                                           l2651 0075  
                                         l2627 003F                                           l2571 0FB1  
                                         l2563 0FA2                                           l2555 0E70  
                                         l2547 0E5B                                           l3099 0782  
                                         l2539 0E08                                           l2811 027C  
                                         l2707 0EC4                                           l2731 00C2  
                                         l2723 0094                                           l3275 052A  
                                         l3267 0513                                           l3259 04EA  
                                         l3187 03D5                                           l3179 03A9  
                                         l2477 0E8C                                           l2493 0E39  
                                         l2485 0E2C                                           l2709 0D89  
                                         l2653 007B                                           l2629 0045  
                                         l2581 0FC5                                           l2573 0FB6  
                                         l2565 0FA6                                           l2557 0E76  
                                         l2549 0E5D                                           l2821 02AF  
                                         l2813 0284                                           l2805 0242  
                                         l2661 0F8A                                           l2741 00DD  
                                         l2733 00C7                                           l2725 009A  
                                         l2901 0178                                           l3277 052F  
                                         l3269 0519                                           l3189 03DA  
                                         l2479 0E93                                           l2495 0E3B  
                                         l2487 0E2F                                           l2655 007F  
                                         l2647 005B                                           l2639 0050  
                                         l2591 0FE5                                           l2583 0FCA  
                                         l2575 0FBA                                           l2567 0FAB  
                                         l2831 02C0                                           l2823 02B5  
                                         l2815 0288                                           l2807 024B  
                                         l2663 0F95                                           l2671 0008  
                                         l2743 00E4                                           l2735 00CD  
                                         l2727 009D                                           l2719 0089  
                                         l2911 019C                                           l3199 03E6  
                                         l2497 0E3E                                           l2489 0E31  
                                         l2649 0070                                           l2593 0FE6  
                                         l2585 0FCE                                           l2577 0FBC  
                                         l2569 0FAD                                           l2841 02EB  
                                         l2817 028E                                           l2809 026C  
                                         l2665 0F9A                                           l2657 0F63  
                                         l2673 0E18                                           l2761 0114  
                                         l2753 00F1                                           l2745 00EA  
                                         l2737 00D3                                           l2729 00AE  
                                         l2913 01A0                                           l2905 0182  
                                         l2921 01BC                                           l2499 0DCE  
                                         l2595 0FEB                                           l2587 0FD2  
                                         l2579 0FC2                                           l2851 0329  
                                         l2843 02FB                                           l2819 02AA  
                                         l2659 0F69                                           l2667 0004  
                                         l2675 0D8B                                           l2771 0133  
                                         l2763 011A                                           l2755 0102  
                                         l2747 00F0                                           l2739 00D8  
                                         l2907 0187                                           l2923 01D2  
                                         l2589 0FE1                                           l2597 0FF1  
                                         l2853 032E                                           l2845 0303  
                                         l2837 02C1                                           l2829 02B6  
                                         l2685 0E9E                                           l2773 013A  
                                         l2765 0121                                           l2757 010A  
                                         l2941 01F5                                           l2933 01E7  
                                         l2925 01D7                                           l2917 01B6  
                                         l2599 0FF6                                           l2871 0355  
                                         l2863 0337                                           l2855 0334  
                                         l2847 0307                                           l2839 02CA  
                                         l2791 0236                                           l2783 021B  
                                         l2695 0EA6                                           l2687 0EA4  
                                         l2679 0E9D                                           l2775 0140  
                                         l2767 0127                                           l2759 010E  
                                         l2951 0213                                           l2943 01FC  
                                         l2935 01ED                                           l2927 01DB  
                                         l2961 054A                                           l2865 0349  
                                         l2857 0335                                           l2849 030D  
                                         l2785 0226                                           l2777 0219  
                                         l2697 0EA8                                           l2689 0EA5  
                                         l2769 012D                                           l2953 0216  
                                         l2937 01EF                                           l2945 0205  
                                         l2929 01E4                                           l2971 055B  
                                         l2867 034B                                           l2787 022C  
                                         l2699 0EAD                                           l2939 01F1  
                                         l2947 020B                                           l2891 0165  
                                         l2883 014C                                           l2875 0149  
                                         l2981 0566                                           l2965 0550  
                                         l2869 034F                                           l2797 0237  
                                         l2789 0230                                           l2949 0211  
                                         l2893 0166                                           l2885 0155  
                                         l2877 014B                                           l2991 0573  
                                         l2983 056C                                           l2967 0555  
                                         l2799 0241                                           l2895 016B  
                                         l2887 015B                                           l2993 0578  
                                         l2977 055C                                           l2985 0572  
                                         l2969 0556                                           l2897 0171  
                                         l2889 015F                                           l2995 057C  
                                         l2979 0562                                           l2899 0175  
                                         l2997 0582                                           l2999 0588  
                __end_of_snake_getSurroundings 0147                                           u2010 0691  
                                         u2011 0690                                           u1300 0F5C  
                                         u2100 079E                                           u2020 069B  
                                         u2101 079D                                           u2021 069A  
                                         u2005 0661                                           u1310 0EDC  
                                         u1311 0EDB                                           u1400 0FA6  
                                         u2040 0740                                           u1320 0E4D  
                                         u1305 0F58                                           u1401 0FA5  
                                         u2041 073F                                           u1321 0E4C  
                                         u1410 0FB1                                           u2130 07D0  
                                         u2050 074A                                           u1330 0E57  
                                         u2210 03FC                                           u1411 0FB0  
                                         u2131 07CF                                           u2115 07A2  
                                         u2051 0749                                           u2035 071B  
                                         u1331 0E56                                           u2211 03FB  
                                         u1260 0F07                                           u1420 0FC2  
                                         u2300 04C1                                           u2220 0414  
                                         u1261 0F06                                           u1421 0FC1  
                                         u2125 07B2                                           u2301 04C0  
                                         u2221 0413                                           u2205 03EA  
                                         _LATA 010C                                           u1510 0045  
                                         u2310 04CF                                           u2230 041E  
                                         _LATB 010D                                           u1511 0044  
                                         u2311 04CE                                           u2231 041D  
                                         u1520 004F                                           u1440 0FD2  
                                         u1360 0E62                                           u2080 0782  
                                         u1600 009A                                           u2320 0519  
                                         u2240 046D                                           u1521 004E  
                                         u1505 0028                                           u1441 0FD1  
                                         u1361 0E61                                           u2081 0781  
                                         u2065 0759                                           u1345 0E0B  
                                         u1601 0099                                           u2321 0518  
                                         u2241 046C                                           u1290 0F25  
                                         u2090 078C                                           u1610 00C7  
                                         u2330 0524                                           u2250 047B  
                                         u2170 0382                                           u1291 0F24  
                                         u1275 0F10                                           u1435 0FC6  
                                         u1355 0DFB                                           u2091 078B  
                                         u2075 0769                                           u1611 00C6  
                                         u2331 0523                                           u2251 047A  
                                         u2171 0381                                           u1540 007B  
                                         u1460 0FE1                                           u1700 0140  
                                         u1620 00D3                                           u2260 0489  
                                         u2180 039A                                           u1285 0F17  
                                         u1541 007A                                           u1461 0FE0  
                                         u1701 013F                                           u1621 00D2  
                                         u2261 0488                                           u2181 0399  
                                         u2165 0370                                           u1550 0085  
                                         u1390 0E76                                           u1710 0226  
                                         u1630 00DD                                           u2270 0497  
                                         u2190 03A4                                           u1551 0084  
                                         u1535 005E                                           u1455 0FD3  
                                         u1391 0E75                                           u1375 0E67  
                                         u1711 0225                                           u1631 00DC  
                                         u2271 0496                                           u2191 03A3  
                                         u1480 0FF1                                           u1800 0355  
                                         u1720 0236                                           u1640 00EA  
                                         u2280 04A5                                           u1481 0FF0  
                                         u1465 0FDD                                           u1385 0E6C  
                                         u1801 0354                                           u1721 0235  
                                         u1641 00E9                                           u2281 04A4  
                                         u1490 0FF6                                           u1650 0102  
                                         u1810 0155                                           u2290 04B3  
                                         u1491 0FF5                                           u1475 0FE7  
                                         u1651 0101                                           u1811 0154  
                                         u2291 04B2                                           u1740 028E  
                                         u1564 000D                                           u1580 0EB9  
                                         u1660 0114                                           u1900 0205  
                                         u1820 0165                                           u1741 028D  
                                         u1565 000C                                           u1581 0EB8  
                                         u1661 0113                                           u1901 0204  
                                         u1821 0164                                           u1750 02B5  
                                         u1574 0E1D                                           u1590 0ECA  
                                         u1670 011A                                           u1910 0211  
                                         u1830 0171                                           u1751 02B4  
                                         u1735 024E                                           u1575 0E1C  
                                         u1591 0EC9                                           u1671 0119  
                                         u1911 0210                                           u1831 0170  
                                         u2367 03C8                                           u1920 054F  
                                         u1680 0127                                           u1840 0181  
                                         u1921 054E                                           u2377 0F8F  
                                         u1681 0126                                           u1841 0180  
                                         u1930 0555                                           u1770 030D  
                                         u1690 0133                                           u1850 019B  
                                         u1931 0554                                           u1771 030C  
                                         u1691 0132                                           u1851 019A  
                                         u1940 055B                                           u1780 0334  
                                         u1860 01B5                                           u1941 055A  
                                         u1781 0333                                           u1765 02CD  
                                         u1861 01B4                                           u1950 056C  
                                         u1790 0349                                           u1870 01D7  
                                         u1951 056B                                           u1791 0348  
                                         u1871 01D6                                           u1960 0582  
                                         u1880 01E4                                           u1961 0581  
                                         u1881 01E3                                           u1970 05A6  
                                         u1890 01ED                                           u1971 05A5  
                                         u1891 01EC                                           u1980 05B6  
                                         u1981 05B5                                           u1995 0636  
                                         _WPUA 020C                                           _WPUB 020D  
                                         _main 0357                                           _rand 0F2E  
                                         _seed 006B                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           btemp 007E  
                                         start 0002                     __end_of_deactivateElevator 0DE7  
                      ??_snake_getFoodPosition 0070                  __end_of_OSCILLATOR_Initialize 0DBC  
                                        ?_main 0070                                          ?_rand 007C  
                              __end_of___awdiv 1000                                ___awdiv@divisor 0072  
                              ___awdiv@counter 0077                                          _RCREG 0199  
                                        _RCSTA 019D                                          _TRISA 008C  
                                        _TRISB 008D                                          _TXREG 019A  
                                        _TXSTA 019E                            ___lmul@multiplicand 0074  
                                        _field 00D0                                 _WDT_Initialize 0D8E  
                                        _srand 0DC4                                          main@i 0045  
                                        main@j 0046                                __end_of_sigmoid 0E17  
                                        status 0003                                          wtemp0 007E  
                              __initialization 07D1                                 _remainingMoves 005D  
                                 __end_of_main 0548                                   __end_of_rand 0F63  
                                       ??_main 003D                                         ??_rand 0020  
                       __end_of_WDT_Initialize 0D92              _EUSART_DefaultFramingErrorHandler 0000  
                   _EUSART_OverrunErrorHandler 00EA                                         _EEADRH 0192  
                                       _EEADRL 0191                                         _EEDATH 0194  
                                       _EEDATL 0193                                         _EECON2 0196  
                             ___awdiv@dividend 0074                                         ?_srand 0070  
                                       _DC_DB1 00A8                                         _DC_DB2 00B4  
                                       _ANSELA 018C                                         _ANSELB 018D  
                                       _DC_DW1 01A0                                         _DC_DW2 0140  
                                       _DC_DY1 00B0                                         _DC_DY2 00C4  
                                       _DC_DZ1 00AC                                         _DC_DZ2 0049  
                                       _BORCON 0116                              ?_ai_getInputField 0070  
                                main@incentive 0044                                         _OSCCON 0099  
                                       _SPBRGH 019C                                         _SPBRGL 019B  
                                       _WDTCON 0097                             ??_ai_getInputField 0070  
                             __end_of_ledClear 0E29              snake_getSurroundings@surroundings 0027  
                                       ___lmul 0EFB                                         ___wmul 0E5B  
                                    ??___awdiv 0076                                         _ai_run 0219  
                                       _choice 0060                                         _ledSet 0006  
                             _de_sigmoidValues 0800                                         _matrix 00A0  
                             ___awdiv@quotient 0079                                ?_WDT_Initialize 0070  
                                    ??_sigmoid 0070                                         srand@s 0070  
                                ai_propagate@S 002A                                  ai_propagate@i 002F  
                                ai_propagate@j 0037                                   _ai_propagate 0548  
                            _SYSTEM_Initialize 0DE7                        __end_of__initialization 07FD  
                           ?_SYSTEM_Initialize 0070                                 __pcstackCOMMON 0070  
                                 __pidataBANK1 0DBC                            ??_SYSTEM_Initialize 0072  
                            ??_SPI1_Initialize 0070                                  __end_of_srand 0DCE  
                           _spi1_configuration 0820                                 _OPTION_REGbits 0095  
                        __end_of_sigmoidValues 0820                ??_EUSART_SetOverrunErrorHandler 0072  
                              snake_initiate@i 0025                      __end_of_SYSTEM_Initialize 0DF7  
                          snake_move@direction 0028                                        ??_srand 0072  
                                 _headPosition 005F                                     __pbssBANK0 0049  
                                   __pbssBANK1 00A0                                     __pbssBANK2 0120  
                                   __pbssBANK3 01A0                          ai_propagate@incentive 002E  
                                   _de_sigmoid 0DF7                                 _SPI1_WriteByte 0D92  
                          snake_move@incentive 0029                                     __pmaintext 0357  
                                      ?___lmul 0070                                        ?___wmul 0020  
                                      ?_ai_run 0070                                    sendMatrix@b 0074  
                                  sendMatrix@i 0077                                    sendMatrix@j 0076  
                                      ?_ledSet 007B                                        _BAUDCON 019F  
                               ___lmul@product 0078                                        _APFCON0 011D  
                                      _APFCON1 011E                  __end_of_snake_getFoodPosition 0D8E  
                                      _DZ1_DB1 00BC                                        _DZ2_DB2 00B8  
                                      _DZ1_DW1 01C0                                        _DZ2_DW2 0150  
                                      _DZ2_DY1 00C0                           main@foodPosition_672 0043  
                           _deactivateElevator 0DDA                                        _OSCTUNE 0098  
                                    ?_ledClear 0070                                        _SSP1ADD 0212  
                                      _SSP1BUF 0211                       ??_EUSART_SetErrorHandler 0072  
                          ?_deactivateElevator 0070                         __end_of_SPI1_WriteByte 0D97  
                        _snake_getSurroundings 0086                               main@foodPosition 0041  
                                ??_ai_initiate 0024                                        ___awdiv 0FA1  
                         ??_deactivateElevator 0070                                        __ptext1 0147  
                                      __ptext2 0ECB                                        __ptext3 0DC4  
                                      __ptext4 0086                                        __ptext5 0D8B  
                                      __ptext6 0004                                        __ptext7 0E9D  
                                      __ptext8 0006                                        __ptext9 0E17  
                            __end_of_txMAX7219 0E5B                                        ai_run@i 0027  
                                      ai_run@j 002D                                        ai_run@z 002B  
                        _OSCILLATOR_Initialize 0DB5                                        _mapping 00E0  
                     ??_PIN_MANAGER_Initialize 0070                                        _sigmoid 0E07  
                                   ??_ledClear 0071                                        ledSet@c 007B  
                                      ledSet@l 0020                                        clrloop0 0DAA  
                         end_of_initialization 07FD                                     _sendMatrix 0E9D  
                     __end_of_de_sigmoidValues 0810                                    ?_de_sigmoid 0070  
        __end_of_EUSART_SetOverrunErrorHandler 0DA9                  _EUSART_SetOverrunErrorHandler 0DA3  
                              ?_SPI1_WriteByte 0070                                        init_ram 0DAF  
                                      initloop 0DB0                                    snake_move@i 002A  
                            _EUSART_Initialize 0E7B                             ?_EUSART_Initialize 0070  
                                    _RCSTAbits 019D                                     _snake_move 0147  
                          ??_EUSART_Initialize 0072                            __end_of_ai_initiate 0086  
                             ??_WDT_Initialize 0070                                 txMAX7219@addr0 0072  
                                    _TRISAbits 008C                                      _TRISBbits 008D  
                       ?_snake_getSurroundings 0070                      __end_of_EUSART_Initialize 0E9D  
                                   main@choice 0042                                _SPI1_Initialize 0DCE  
                                    _TXSTAbits 019E                                   _foodPosition 005E  
                               _snake_getField 0004                                   ai_initiate@i 0027  
                                 ai_initiate@j 0029                                 __end_of___lmul 0F2E  
                   _EUSART_DefaultErrorHandler 0000                                 __end_of___wmul 0E7B  
                               __end_of_ai_run 0357                                 __end_of_ledSet 0018  
                       ?_OSCILLATOR_Initialize 0070                                 _snake_initiate 0ECB  
                          start_initialization 07D1                                  ??_initMAX7219 0073  
                                  ?_sendMatrix 0070                         __end_of_snake_getField 0006  
               ?_EUSART_SetOverrunErrorHandler 0070                                    _ai_initiate 0018  
                   _EUSART_FramingErrorHandler 00EC                                       ??___lmul 0078  
                                  ?_snake_move 0070                                       ??___wmul 007B  
                       _EUSART_SetErrorHandler 0D97                                       ??_ai_run 0024  
                                     ??_ledSet 007C                                    __pdataBANK1 00E0  
                             ai_initiate@i_870 0028                               ai_initiate@j_869 002A  
                       __end_of_snake_initiate 0EFB                                      ___latbits 0001  
                                __pcstackBANK0 0020                        __end_of_SPI1_Initialize 0DDA  
                      snake_getSurroundings@cf 0022                        snake_getSurroundings@ch 0025  
                      snake_getSurroundings@lf 0021                        snake_getSurroundings@lh 0024  
                          __end_of_initMAX7219 0FA1                                      __pnvBANK1 00E8  
                              ?_snake_getField 0070                         _PIN_MANAGER_Initialize 0E29  
                                     ?___awdiv 0072                               _ai_getInputField 0D89  
                              ?_snake_initiate 0070                                   sendMatrix@nb 0075  
                        _snake_getFoodPosition 0D8B                                       ?_sigmoid 0070  
                             ??_SPI1_WriteByte 0070                                      _txMAX7219 0E41  
                                 ??_de_sigmoid 0070                                 ___wmul@product 007B  
                                     _LATAbits 010C         EUSART_SetErrorHandler@interruptHandler 0070  
                                     _LATBbits 010D                                      clear_ram0 0DA9  
                            _eusartRxLastError 0062                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 0072                                      ledClear@c 0070  
                                    ledClear@l 0073                              _ai_propagate$1579 0035  
                                    _snakeSize 0061                                       _SSP1CON1 0215  
                                     _SSP1CON2 0216              _EUSART_DefaultOverrunErrorHandler 0000  
                                     _SSP1STAT 0214                                  txMAX7219@dat0 0071  
                                    main@i_670 0047                              ___wmul@multiplier 0020  
                                    main@j_671 0048                             __end_of_de_sigmoid 0E07  
                                    main@field 0040                                    _initMAX7219 0F63  
                      ??_snake_getSurroundings 007B                                     ?_txMAX7219 0071  
                                _sigmoidValues 0810                               ?_SPI1_Initialize 0070  
                                ?_ai_propagate 0070                              ___lmul@multiplier 0070  
                                   _EECON1bits 0195                                    ai_run@i_876 0028  
                                  ai_run@i_878 0029                                    ai_run@i_879 002A  
                                  ai_run@j_877 002E                        ??_OSCILLATOR_Initialize 0070  
                          _EUSART_ErrorHandler 00E8                         ?_snake_getFoodPosition 0070  
                       snake_getSurroundings@i 0023                         snake_getSurroundings@p 0020  
                            ai_propagate@i_891 0032                              ai_propagate@i_884 0030  
                            ai_propagate@i_893 0033                              ai_propagate@i_895 0034  
                            ai_propagate@i_889 0038                              ai_propagate@j_890 003B  
                            ai_propagate@j_892 0039                              ai_propagate@j_894 003A  
                            ai_propagate@j_886 0031                              ai_propagate@j_888 003C  
                                  de_sigmoid@z 0071                                       _ledClear 0E17  
                               ??_ai_propagate 0024                                       __ptext10 0F63  
                                     __ptext11 0E41                                       __ptext20 0018  
                                     __ptext12 0D92                                       __ptext21 0F2E  
                                     __ptext13 0DDA                                       __ptext30 0DA3  
                                     __ptext22 0EFB                                       __ptext14 0219  
                                     __ptext31 0D9D                                       __ptext23 0D89  
                                     __ptext15 0E07                                       __ptext32 0D97  
                                     __ptext24 0DE7                                       __ptext16 0548  
                                     __ptext25 0D8E                                       __ptext17 0DF7  
                                     __ptext26 0DCE                                       __ptext18 0E5B  
                                     __ptext27 0E29                                       __ptext19 0FA1  
                                     __ptext28 0DB5                                       __ptext29 0E7B  
                                 _SSP1CON1bits 0215                                   ??_sendMatrix 0073  
                      ?_EUSART_SetErrorHandler 0070                                   ?_ai_initiate 0070  
EUSART_SetOverrunErrorHandler@interruptHandler 0070                                   ??_snake_move 0026  
        __end_of_EUSART_SetFramingErrorHandler 0DA3                  _EUSART_SetFramingErrorHandler 0D9D  
                           __end_of_sendMatrix 0ECB                                     _INTCONbits 000B  
                                  ??_txMAX7219 0072                       __end_of_ai_getInputField 0D8B  
                             ??_snake_getField 0070                             __end_of_snake_move 0219  
                      ?_PIN_MANAGER_Initialize 0070                 __end_of_EUSART_SetErrorHandler 0D9D  
                                     sigmoid@z 0071                     snake_getSurroundings@i_804 0026  
                             ??_snake_initiate 0024  EUSART_SetFramingErrorHandler@interruptHandler 0070  
                                __pstringtext1 0800                                  __pstringtext2 0810  
                                __pstringtext3 0820                 __end_of_PIN_MANAGER_Initialize 0E41  
                   __end_of_spi1_configuration 0824  
