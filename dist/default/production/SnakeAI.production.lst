

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Oct 08 18:03:38 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,noexec
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    14                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2,group=1
    49                           	psect	text31,local,class=CODE,merge=1,delta=2,group=1
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2
    58                           	psect	text40,local,class=CODE,merge=1,delta=2
    59                           	psect	text41,local,class=CODE,merge=1,delta=2
    60                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    61                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    62                           	dabs	1,0x220,48
    63                           	dabs	1,0x1B0,64
    64                           	dabs	1,0x2100,0,_DW1
    65                           	dabs	1,0x7E,2
    66     0000                     
    67                           ; Version 2.40
    68                           ; Generated 17/11/2021 GMT
    69                           ; 
    70                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    71                           ; All rights reserved.
    72                           ; 
    73                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    74                           ; 
    75                           ; Redistribution and use in source and binary forms, with or without modification, are
    76                           ; permitted provided that the following conditions are met:
    77                           ; 
    78                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    79                           ;        conditions and the following disclaimer.
    80                           ; 
    81                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    82                           ;        of conditions and the following disclaimer in the documentation and/or other
    83                           ;        materials provided with the distribution. Publication is not required when
    84                           ;        this file is used in an embedded application.
    85                           ; 
    86                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    87                           ;        software without specific prior written permission.
    88                           ; 
    89                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    90                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    91                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    92                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    93                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    94                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    95                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    96                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    97                           ; 
    98                           ; 
    99                           ; Code-generator required, PIC16F1827 Definitions
   100                           ; 
   101                           ; SFR Addresses
   102     0000                     	;# 
   103     0001                     	;# 
   104     0002                     	;# 
   105     0003                     	;# 
   106     0004                     	;# 
   107     0005                     	;# 
   108     0006                     	;# 
   109     0007                     	;# 
   110     0008                     	;# 
   111     0009                     	;# 
   112     000A                     	;# 
   113     000B                     	;# 
   114     000C                     	;# 
   115     000D                     	;# 
   116     0011                     	;# 
   117     0012                     	;# 
   118     0013                     	;# 
   119     0014                     	;# 
   120     0015                     	;# 
   121     0016                     	;# 
   122     0016                     	;# 
   123     0017                     	;# 
   124     0018                     	;# 
   125     0019                     	;# 
   126     001A                     	;# 
   127     001B                     	;# 
   128     001C                     	;# 
   129     001E                     	;# 
   130     001F                     	;# 
   131     008C                     	;# 
   132     008D                     	;# 
   133     0091                     	;# 
   134     0092                     	;# 
   135     0093                     	;# 
   136     0094                     	;# 
   137     0095                     	;# 
   138     0096                     	;# 
   139     0097                     	;# 
   140     0098                     	;# 
   141     0099                     	;# 
   142     009A                     	;# 
   143     009B                     	;# 
   144     009B                     	;# 
   145     009C                     	;# 
   146     009D                     	;# 
   147     009E                     	;# 
   148     010C                     	;# 
   149     010D                     	;# 
   150     0111                     	;# 
   151     0112                     	;# 
   152     0113                     	;# 
   153     0114                     	;# 
   154     0115                     	;# 
   155     0116                     	;# 
   156     0117                     	;# 
   157     0118                     	;# 
   158     0119                     	;# 
   159     011A                     	;# 
   160     011B                     	;# 
   161     011D                     	;# 
   162     011E                     	;# 
   163     018C                     	;# 
   164     018D                     	;# 
   165     0191                     	;# 
   166     0191                     	;# 
   167     0192                     	;# 
   168     0193                     	;# 
   169     0193                     	;# 
   170     0193                     	;# 
   171     0194                     	;# 
   172     0195                     	;# 
   173     0196                     	;# 
   174     0199                     	;# 
   175     019A                     	;# 
   176     019B                     	;# 
   177     019B                     	;# 
   178     019B                     	;# 
   179     019B                     	;# 
   180     019C                     	;# 
   181     019C                     	;# 
   182     019D                     	;# 
   183     019E                     	;# 
   184     019F                     	;# 
   185     020C                     	;# 
   186     020D                     	;# 
   187     0211                     	;# 
   188     0211                     	;# 
   189     0212                     	;# 
   190     0212                     	;# 
   191     0213                     	;# 
   192     0213                     	;# 
   193     0214                     	;# 
   194     0214                     	;# 
   195     0215                     	;# 
   196     0215                     	;# 
   197     0215                     	;# 
   198     0216                     	;# 
   199     0216                     	;# 
   200     0217                     	;# 
   201     0217                     	;# 
   202     0219                     	;# 
   203     021A                     	;# 
   204     021B                     	;# 
   205     021C                     	;# 
   206     021D                     	;# 
   207     021E                     	;# 
   208     021F                     	;# 
   209     0291                     	;# 
   210     0291                     	;# 
   211     0292                     	;# 
   212     0293                     	;# 
   213     0294                     	;# 
   214     0295                     	;# 
   215     0295                     	;# 
   216     0296                     	;# 
   217     0298                     	;# 
   218     0298                     	;# 
   219     0299                     	;# 
   220     029A                     	;# 
   221     029B                     	;# 
   222     029C                     	;# 
   223     029C                     	;# 
   224     029D                     	;# 
   225     029E                     	;# 
   226     029E                     	;# 
   227     0311                     	;# 
   228     0311                     	;# 
   229     0312                     	;# 
   230     0313                     	;# 
   231     0318                     	;# 
   232     0318                     	;# 
   233     0319                     	;# 
   234     031A                     	;# 
   235     0394                     	;# 
   236     0395                     	;# 
   237     0396                     	;# 
   238     039A                     	;# 
   239     039C                     	;# 
   240     039D                     	;# 
   241     039E                     	;# 
   242     039F                     	;# 
   243     0415                     	;# 
   244     0416                     	;# 
   245     0417                     	;# 
   246     041C                     	;# 
   247     041D                     	;# 
   248     041E                     	;# 
   249     0FE4                     	;# 
   250     0FE5                     	;# 
   251     0FE6                     	;# 
   252     0FE7                     	;# 
   253     0FE8                     	;# 
   254     0FE9                     	;# 
   255     0FEA                     	;# 
   256     0FEB                     	;# 
   257     0FED                     	;# 
   258     0FEE                     	;# 
   259     0FEF                     	;# 
   260     0000                     	;# 
   261     0001                     	;# 
   262     0002                     	;# 
   263     0003                     	;# 
   264     0004                     	;# 
   265     0005                     	;# 
   266     0006                     	;# 
   267     0007                     	;# 
   268     0008                     	;# 
   269     0009                     	;# 
   270     000A                     	;# 
   271     000B                     	;# 
   272     000C                     	;# 
   273     000D                     	;# 
   274     0011                     	;# 
   275     0012                     	;# 
   276     0013                     	;# 
   277     0014                     	;# 
   278     0015                     	;# 
   279     0016                     	;# 
   280     0016                     	;# 
   281     0017                     	;# 
   282     0018                     	;# 
   283     0019                     	;# 
   284     001A                     	;# 
   285     001B                     	;# 
   286     001C                     	;# 
   287     001E                     	;# 
   288     001F                     	;# 
   289     008C                     	;# 
   290     008D                     	;# 
   291     0091                     	;# 
   292     0092                     	;# 
   293     0093                     	;# 
   294     0094                     	;# 
   295     0095                     	;# 
   296     0096                     	;# 
   297     0097                     	;# 
   298     0098                     	;# 
   299     0099                     	;# 
   300     009A                     	;# 
   301     009B                     	;# 
   302     009B                     	;# 
   303     009C                     	;# 
   304     009D                     	;# 
   305     009E                     	;# 
   306     010C                     	;# 
   307     010D                     	;# 
   308     0111                     	;# 
   309     0112                     	;# 
   310     0113                     	;# 
   311     0114                     	;# 
   312     0115                     	;# 
   313     0116                     	;# 
   314     0117                     	;# 
   315     0118                     	;# 
   316     0119                     	;# 
   317     011A                     	;# 
   318     011B                     	;# 
   319     011D                     	;# 
   320     011E                     	;# 
   321     018C                     	;# 
   322     018D                     	;# 
   323     0191                     	;# 
   324     0191                     	;# 
   325     0192                     	;# 
   326     0193                     	;# 
   327     0193                     	;# 
   328     0193                     	;# 
   329     0194                     	;# 
   330     0195                     	;# 
   331     0196                     	;# 
   332     0199                     	;# 
   333     019A                     	;# 
   334     019B                     	;# 
   335     019B                     	;# 
   336     019B                     	;# 
   337     019B                     	;# 
   338     019C                     	;# 
   339     019C                     	;# 
   340     019D                     	;# 
   341     019E                     	;# 
   342     019F                     	;# 
   343     020C                     	;# 
   344     020D                     	;# 
   345     0211                     	;# 
   346     0211                     	;# 
   347     0212                     	;# 
   348     0212                     	;# 
   349     0213                     	;# 
   350     0213                     	;# 
   351     0214                     	;# 
   352     0214                     	;# 
   353     0215                     	;# 
   354     0215                     	;# 
   355     0215                     	;# 
   356     0216                     	;# 
   357     0216                     	;# 
   358     0217                     	;# 
   359     0217                     	;# 
   360     0219                     	;# 
   361     021A                     	;# 
   362     021B                     	;# 
   363     021C                     	;# 
   364     021D                     	;# 
   365     021E                     	;# 
   366     021F                     	;# 
   367     0291                     	;# 
   368     0291                     	;# 
   369     0292                     	;# 
   370     0293                     	;# 
   371     0294                     	;# 
   372     0295                     	;# 
   373     0295                     	;# 
   374     0296                     	;# 
   375     0298                     	;# 
   376     0298                     	;# 
   377     0299                     	;# 
   378     029A                     	;# 
   379     029B                     	;# 
   380     029C                     	;# 
   381     029C                     	;# 
   382     029D                     	;# 
   383     029E                     	;# 
   384     029E                     	;# 
   385     0311                     	;# 
   386     0311                     	;# 
   387     0312                     	;# 
   388     0313                     	;# 
   389     0318                     	;# 
   390     0318                     	;# 
   391     0319                     	;# 
   392     031A                     	;# 
   393     0394                     	;# 
   394     0395                     	;# 
   395     0396                     	;# 
   396     039A                     	;# 
   397     039C                     	;# 
   398     039D                     	;# 
   399     039E                     	;# 
   400     039F                     	;# 
   401     0415                     	;# 
   402     0416                     	;# 
   403     0417                     	;# 
   404     041C                     	;# 
   405     041D                     	;# 
   406     041E                     	;# 
   407     0FE4                     	;# 
   408     0FE5                     	;# 
   409     0FE6                     	;# 
   410     0FE7                     	;# 
   411     0FE8                     	;# 
   412     0FE9                     	;# 
   413     0FEA                     	;# 
   414     0FEB                     	;# 
   415     0FED                     	;# 
   416     0FEE                     	;# 
   417     0FEF                     	;# 
   418     0000                     	;# 
   419     0001                     	;# 
   420     0002                     	;# 
   421     0003                     	;# 
   422     0004                     	;# 
   423     0005                     	;# 
   424     0006                     	;# 
   425     0007                     	;# 
   426     0008                     	;# 
   427     0009                     	;# 
   428     000A                     	;# 
   429     000B                     	;# 
   430     000C                     	;# 
   431     000D                     	;# 
   432     0011                     	;# 
   433     0012                     	;# 
   434     0013                     	;# 
   435     0014                     	;# 
   436     0015                     	;# 
   437     0016                     	;# 
   438     0016                     	;# 
   439     0017                     	;# 
   440     0018                     	;# 
   441     0019                     	;# 
   442     001A                     	;# 
   443     001B                     	;# 
   444     001C                     	;# 
   445     001E                     	;# 
   446     001F                     	;# 
   447     008C                     	;# 
   448     008D                     	;# 
   449     0091                     	;# 
   450     0092                     	;# 
   451     0093                     	;# 
   452     0094                     	;# 
   453     0095                     	;# 
   454     0096                     	;# 
   455     0097                     	;# 
   456     0098                     	;# 
   457     0099                     	;# 
   458     009A                     	;# 
   459     009B                     	;# 
   460     009B                     	;# 
   461     009C                     	;# 
   462     009D                     	;# 
   463     009E                     	;# 
   464     010C                     	;# 
   465     010D                     	;# 
   466     0111                     	;# 
   467     0112                     	;# 
   468     0113                     	;# 
   469     0114                     	;# 
   470     0115                     	;# 
   471     0116                     	;# 
   472     0117                     	;# 
   473     0118                     	;# 
   474     0119                     	;# 
   475     011A                     	;# 
   476     011B                     	;# 
   477     011D                     	;# 
   478     011E                     	;# 
   479     018C                     	;# 
   480     018D                     	;# 
   481     0191                     	;# 
   482     0191                     	;# 
   483     0192                     	;# 
   484     0193                     	;# 
   485     0193                     	;# 
   486     0193                     	;# 
   487     0194                     	;# 
   488     0195                     	;# 
   489     0196                     	;# 
   490     0199                     	;# 
   491     019A                     	;# 
   492     019B                     	;# 
   493     019B                     	;# 
   494     019B                     	;# 
   495     019B                     	;# 
   496     019C                     	;# 
   497     019C                     	;# 
   498     019D                     	;# 
   499     019E                     	;# 
   500     019F                     	;# 
   501     020C                     	;# 
   502     020D                     	;# 
   503     0211                     	;# 
   504     0211                     	;# 
   505     0212                     	;# 
   506     0212                     	;# 
   507     0213                     	;# 
   508     0213                     	;# 
   509     0214                     	;# 
   510     0214                     	;# 
   511     0215                     	;# 
   512     0215                     	;# 
   513     0215                     	;# 
   514     0216                     	;# 
   515     0216                     	;# 
   516     0217                     	;# 
   517     0217                     	;# 
   518     0219                     	;# 
   519     021A                     	;# 
   520     021B                     	;# 
   521     021C                     	;# 
   522     021D                     	;# 
   523     021E                     	;# 
   524     021F                     	;# 
   525     0291                     	;# 
   526     0291                     	;# 
   527     0292                     	;# 
   528     0293                     	;# 
   529     0294                     	;# 
   530     0295                     	;# 
   531     0295                     	;# 
   532     0296                     	;# 
   533     0298                     	;# 
   534     0298                     	;# 
   535     0299                     	;# 
   536     029A                     	;# 
   537     029B                     	;# 
   538     029C                     	;# 
   539     029C                     	;# 
   540     029D                     	;# 
   541     029E                     	;# 
   542     029E                     	;# 
   543     0311                     	;# 
   544     0311                     	;# 
   545     0312                     	;# 
   546     0313                     	;# 
   547     0318                     	;# 
   548     0318                     	;# 
   549     0319                     	;# 
   550     031A                     	;# 
   551     0394                     	;# 
   552     0395                     	;# 
   553     0396                     	;# 
   554     039A                     	;# 
   555     039C                     	;# 
   556     039D                     	;# 
   557     039E                     	;# 
   558     039F                     	;# 
   559     0415                     	;# 
   560     0416                     	;# 
   561     0417                     	;# 
   562     041C                     	;# 
   563     041D                     	;# 
   564     041E                     	;# 
   565     0FE4                     	;# 
   566     0FE5                     	;# 
   567     0FE6                     	;# 
   568     0FE7                     	;# 
   569     0FE8                     	;# 
   570     0FE9                     	;# 
   571     0FEA                     	;# 
   572     0FEB                     	;# 
   573     0FED                     	;# 
   574     0FEE                     	;# 
   575     0FEF                     	;# 
   576     0000                     	;# 
   577     0001                     	;# 
   578     0002                     	;# 
   579     0003                     	;# 
   580     0004                     	;# 
   581     0005                     	;# 
   582     0006                     	;# 
   583     0007                     	;# 
   584     0008                     	;# 
   585     0009                     	;# 
   586     000A                     	;# 
   587     000B                     	;# 
   588     000C                     	;# 
   589     000D                     	;# 
   590     0011                     	;# 
   591     0012                     	;# 
   592     0013                     	;# 
   593     0014                     	;# 
   594     0015                     	;# 
   595     0016                     	;# 
   596     0016                     	;# 
   597     0017                     	;# 
   598     0018                     	;# 
   599     0019                     	;# 
   600     001A                     	;# 
   601     001B                     	;# 
   602     001C                     	;# 
   603     001E                     	;# 
   604     001F                     	;# 
   605     008C                     	;# 
   606     008D                     	;# 
   607     0091                     	;# 
   608     0092                     	;# 
   609     0093                     	;# 
   610     0094                     	;# 
   611     0095                     	;# 
   612     0096                     	;# 
   613     0097                     	;# 
   614     0098                     	;# 
   615     0099                     	;# 
   616     009A                     	;# 
   617     009B                     	;# 
   618     009B                     	;# 
   619     009C                     	;# 
   620     009D                     	;# 
   621     009E                     	;# 
   622     010C                     	;# 
   623     010D                     	;# 
   624     0111                     	;# 
   625     0112                     	;# 
   626     0113                     	;# 
   627     0114                     	;# 
   628     0115                     	;# 
   629     0116                     	;# 
   630     0117                     	;# 
   631     0118                     	;# 
   632     0119                     	;# 
   633     011A                     	;# 
   634     011B                     	;# 
   635     011D                     	;# 
   636     011E                     	;# 
   637     018C                     	;# 
   638     018D                     	;# 
   639     0191                     	;# 
   640     0191                     	;# 
   641     0192                     	;# 
   642     0193                     	;# 
   643     0193                     	;# 
   644     0193                     	;# 
   645     0194                     	;# 
   646     0195                     	;# 
   647     0196                     	;# 
   648     0199                     	;# 
   649     019A                     	;# 
   650     019B                     	;# 
   651     019B                     	;# 
   652     019B                     	;# 
   653     019B                     	;# 
   654     019C                     	;# 
   655     019C                     	;# 
   656     019D                     	;# 
   657     019E                     	;# 
   658     019F                     	;# 
   659     020C                     	;# 
   660     020D                     	;# 
   661     0211                     	;# 
   662     0211                     	;# 
   663     0212                     	;# 
   664     0212                     	;# 
   665     0213                     	;# 
   666     0213                     	;# 
   667     0214                     	;# 
   668     0214                     	;# 
   669     0215                     	;# 
   670     0215                     	;# 
   671     0215                     	;# 
   672     0216                     	;# 
   673     0216                     	;# 
   674     0217                     	;# 
   675     0217                     	;# 
   676     0219                     	;# 
   677     021A                     	;# 
   678     021B                     	;# 
   679     021C                     	;# 
   680     021D                     	;# 
   681     021E                     	;# 
   682     021F                     	;# 
   683     0291                     	;# 
   684     0291                     	;# 
   685     0292                     	;# 
   686     0293                     	;# 
   687     0294                     	;# 
   688     0295                     	;# 
   689     0295                     	;# 
   690     0296                     	;# 
   691     0298                     	;# 
   692     0298                     	;# 
   693     0299                     	;# 
   694     029A                     	;# 
   695     029B                     	;# 
   696     029C                     	;# 
   697     029C                     	;# 
   698     029D                     	;# 
   699     029E                     	;# 
   700     029E                     	;# 
   701     0311                     	;# 
   702     0311                     	;# 
   703     0312                     	;# 
   704     0313                     	;# 
   705     0318                     	;# 
   706     0318                     	;# 
   707     0319                     	;# 
   708     031A                     	;# 
   709     0394                     	;# 
   710     0395                     	;# 
   711     0396                     	;# 
   712     039A                     	;# 
   713     039C                     	;# 
   714     039D                     	;# 
   715     039E                     	;# 
   716     039F                     	;# 
   717     0415                     	;# 
   718     0416                     	;# 
   719     0417                     	;# 
   720     041C                     	;# 
   721     041D                     	;# 
   722     041E                     	;# 
   723     0FE4                     	;# 
   724     0FE5                     	;# 
   725     0FE6                     	;# 
   726     0FE7                     	;# 
   727     0FE8                     	;# 
   728     0FE9                     	;# 
   729     0FEA                     	;# 
   730     0FEB                     	;# 
   731     0FED                     	;# 
   732     0FEE                     	;# 
   733     0FEF                     	;# 
   734     0000                     	;# 
   735     0001                     	;# 
   736     0002                     	;# 
   737     0003                     	;# 
   738     0004                     	;# 
   739     0005                     	;# 
   740     0006                     	;# 
   741     0007                     	;# 
   742     0008                     	;# 
   743     0009                     	;# 
   744     000A                     	;# 
   745     000B                     	;# 
   746     000C                     	;# 
   747     000D                     	;# 
   748     0011                     	;# 
   749     0012                     	;# 
   750     0013                     	;# 
   751     0014                     	;# 
   752     0015                     	;# 
   753     0016                     	;# 
   754     0016                     	;# 
   755     0017                     	;# 
   756     0018                     	;# 
   757     0019                     	;# 
   758     001A                     	;# 
   759     001B                     	;# 
   760     001C                     	;# 
   761     001E                     	;# 
   762     001F                     	;# 
   763     008C                     	;# 
   764     008D                     	;# 
   765     0091                     	;# 
   766     0092                     	;# 
   767     0093                     	;# 
   768     0094                     	;# 
   769     0095                     	;# 
   770     0096                     	;# 
   771     0097                     	;# 
   772     0098                     	;# 
   773     0099                     	;# 
   774     009A                     	;# 
   775     009B                     	;# 
   776     009B                     	;# 
   777     009C                     	;# 
   778     009D                     	;# 
   779     009E                     	;# 
   780     010C                     	;# 
   781     010D                     	;# 
   782     0111                     	;# 
   783     0112                     	;# 
   784     0113                     	;# 
   785     0114                     	;# 
   786     0115                     	;# 
   787     0116                     	;# 
   788     0117                     	;# 
   789     0118                     	;# 
   790     0119                     	;# 
   791     011A                     	;# 
   792     011B                     	;# 
   793     011D                     	;# 
   794     011E                     	;# 
   795     018C                     	;# 
   796     018D                     	;# 
   797     0191                     	;# 
   798     0191                     	;# 
   799     0192                     	;# 
   800     0193                     	;# 
   801     0193                     	;# 
   802     0193                     	;# 
   803     0194                     	;# 
   804     0195                     	;# 
   805     0196                     	;# 
   806     0199                     	;# 
   807     019A                     	;# 
   808     019B                     	;# 
   809     019B                     	;# 
   810     019B                     	;# 
   811     019B                     	;# 
   812     019C                     	;# 
   813     019C                     	;# 
   814     019D                     	;# 
   815     019E                     	;# 
   816     019F                     	;# 
   817     020C                     	;# 
   818     020D                     	;# 
   819     0211                     	;# 
   820     0211                     	;# 
   821     0212                     	;# 
   822     0212                     	;# 
   823     0213                     	;# 
   824     0213                     	;# 
   825     0214                     	;# 
   826     0214                     	;# 
   827     0215                     	;# 
   828     0215                     	;# 
   829     0215                     	;# 
   830     0216                     	;# 
   831     0216                     	;# 
   832     0217                     	;# 
   833     0217                     	;# 
   834     0219                     	;# 
   835     021A                     	;# 
   836     021B                     	;# 
   837     021C                     	;# 
   838     021D                     	;# 
   839     021E                     	;# 
   840     021F                     	;# 
   841     0291                     	;# 
   842     0291                     	;# 
   843     0292                     	;# 
   844     0293                     	;# 
   845     0294                     	;# 
   846     0295                     	;# 
   847     0295                     	;# 
   848     0296                     	;# 
   849     0298                     	;# 
   850     0298                     	;# 
   851     0299                     	;# 
   852     029A                     	;# 
   853     029B                     	;# 
   854     029C                     	;# 
   855     029C                     	;# 
   856     029D                     	;# 
   857     029E                     	;# 
   858     029E                     	;# 
   859     0311                     	;# 
   860     0311                     	;# 
   861     0312                     	;# 
   862     0313                     	;# 
   863     0318                     	;# 
   864     0318                     	;# 
   865     0319                     	;# 
   866     031A                     	;# 
   867     0394                     	;# 
   868     0395                     	;# 
   869     0396                     	;# 
   870     039A                     	;# 
   871     039C                     	;# 
   872     039D                     	;# 
   873     039E                     	;# 
   874     039F                     	;# 
   875     0415                     	;# 
   876     0416                     	;# 
   877     0417                     	;# 
   878     041C                     	;# 
   879     041D                     	;# 
   880     041E                     	;# 
   881     0FE4                     	;# 
   882     0FE5                     	;# 
   883     0FE6                     	;# 
   884     0FE7                     	;# 
   885     0FE8                     	;# 
   886     0FE9                     	;# 
   887     0FEA                     	;# 
   888     0FEB                     	;# 
   889     0FED                     	;# 
   890     0FEE                     	;# 
   891     0FEF                     	;# 
   892     0000                     	;# 
   893     0001                     	;# 
   894     0002                     	;# 
   895     0003                     	;# 
   896     0004                     	;# 
   897     0005                     	;# 
   898     0006                     	;# 
   899     0007                     	;# 
   900     0008                     	;# 
   901     0009                     	;# 
   902     000A                     	;# 
   903     000B                     	;# 
   904     000C                     	;# 
   905     000D                     	;# 
   906     0011                     	;# 
   907     0012                     	;# 
   908     0013                     	;# 
   909     0014                     	;# 
   910     0015                     	;# 
   911     0016                     	;# 
   912     0016                     	;# 
   913     0017                     	;# 
   914     0018                     	;# 
   915     0019                     	;# 
   916     001A                     	;# 
   917     001B                     	;# 
   918     001C                     	;# 
   919     001E                     	;# 
   920     001F                     	;# 
   921     008C                     	;# 
   922     008D                     	;# 
   923     0091                     	;# 
   924     0092                     	;# 
   925     0093                     	;# 
   926     0094                     	;# 
   927     0095                     	;# 
   928     0096                     	;# 
   929     0097                     	;# 
   930     0098                     	;# 
   931     0099                     	;# 
   932     009A                     	;# 
   933     009B                     	;# 
   934     009B                     	;# 
   935     009C                     	;# 
   936     009D                     	;# 
   937     009E                     	;# 
   938     010C                     	;# 
   939     010D                     	;# 
   940     0111                     	;# 
   941     0112                     	;# 
   942     0113                     	;# 
   943     0114                     	;# 
   944     0115                     	;# 
   945     0116                     	;# 
   946     0117                     	;# 
   947     0118                     	;# 
   948     0119                     	;# 
   949     011A                     	;# 
   950     011B                     	;# 
   951     011D                     	;# 
   952     011E                     	;# 
   953     018C                     	;# 
   954     018D                     	;# 
   955     0191                     	;# 
   956     0191                     	;# 
   957     0192                     	;# 
   958     0193                     	;# 
   959     0193                     	;# 
   960     0193                     	;# 
   961     0194                     	;# 
   962     0195                     	;# 
   963     0196                     	;# 
   964     0199                     	;# 
   965     019A                     	;# 
   966     019B                     	;# 
   967     019B                     	;# 
   968     019B                     	;# 
   969     019B                     	;# 
   970     019C                     	;# 
   971     019C                     	;# 
   972     019D                     	;# 
   973     019E                     	;# 
   974     019F                     	;# 
   975     020C                     	;# 
   976     020D                     	;# 
   977     0211                     	;# 
   978     0211                     	;# 
   979     0212                     	;# 
   980     0212                     	;# 
   981     0213                     	;# 
   982     0213                     	;# 
   983     0214                     	;# 
   984     0214                     	;# 
   985     0215                     	;# 
   986     0215                     	;# 
   987     0215                     	;# 
   988     0216                     	;# 
   989     0216                     	;# 
   990     0217                     	;# 
   991     0217                     	;# 
   992     0219                     	;# 
   993     021A                     	;# 
   994     021B                     	;# 
   995     021C                     	;# 
   996     021D                     	;# 
   997     021E                     	;# 
   998     021F                     	;# 
   999     0291                     	;# 
  1000     0291                     	;# 
  1001     0292                     	;# 
  1002     0293                     	;# 
  1003     0294                     	;# 
  1004     0295                     	;# 
  1005     0295                     	;# 
  1006     0296                     	;# 
  1007     0298                     	;# 
  1008     0298                     	;# 
  1009     0299                     	;# 
  1010     029A                     	;# 
  1011     029B                     	;# 
  1012     029C                     	;# 
  1013     029C                     	;# 
  1014     029D                     	;# 
  1015     029E                     	;# 
  1016     029E                     	;# 
  1017     0311                     	;# 
  1018     0311                     	;# 
  1019     0312                     	;# 
  1020     0313                     	;# 
  1021     0318                     	;# 
  1022     0318                     	;# 
  1023     0319                     	;# 
  1024     031A                     	;# 
  1025     0394                     	;# 
  1026     0395                     	;# 
  1027     0396                     	;# 
  1028     039A                     	;# 
  1029     039C                     	;# 
  1030     039D                     	;# 
  1031     039E                     	;# 
  1032     039F                     	;# 
  1033     0415                     	;# 
  1034     0416                     	;# 
  1035     0417                     	;# 
  1036     041C                     	;# 
  1037     041D                     	;# 
  1038     041E                     	;# 
  1039     0FE4                     	;# 
  1040     0FE5                     	;# 
  1041     0FE6                     	;# 
  1042     0FE7                     	;# 
  1043     0FE8                     	;# 
  1044     0FE9                     	;# 
  1045     0FEA                     	;# 
  1046     0FEB                     	;# 
  1047     0FED                     	;# 
  1048     0FEE                     	;# 
  1049     0FEF                     	;# 
  1050     0000                     	;# 
  1051     0001                     	;# 
  1052     0002                     	;# 
  1053     0003                     	;# 
  1054     0004                     	;# 
  1055     0005                     	;# 
  1056     0006                     	;# 
  1057     0007                     	;# 
  1058     0008                     	;# 
  1059     0009                     	;# 
  1060     000A                     	;# 
  1061     000B                     	;# 
  1062     000C                     	;# 
  1063     000D                     	;# 
  1064     0011                     	;# 
  1065     0012                     	;# 
  1066     0013                     	;# 
  1067     0014                     	;# 
  1068     0015                     	;# 
  1069     0016                     	;# 
  1070     0016                     	;# 
  1071     0017                     	;# 
  1072     0018                     	;# 
  1073     0019                     	;# 
  1074     001A                     	;# 
  1075     001B                     	;# 
  1076     001C                     	;# 
  1077     001E                     	;# 
  1078     001F                     	;# 
  1079     008C                     	;# 
  1080     008D                     	;# 
  1081     0091                     	;# 
  1082     0092                     	;# 
  1083     0093                     	;# 
  1084     0094                     	;# 
  1085     0095                     	;# 
  1086     0096                     	;# 
  1087     0097                     	;# 
  1088     0098                     	;# 
  1089     0099                     	;# 
  1090     009A                     	;# 
  1091     009B                     	;# 
  1092     009B                     	;# 
  1093     009C                     	;# 
  1094     009D                     	;# 
  1095     009E                     	;# 
  1096     010C                     	;# 
  1097     010D                     	;# 
  1098     0111                     	;# 
  1099     0112                     	;# 
  1100     0113                     	;# 
  1101     0114                     	;# 
  1102     0115                     	;# 
  1103     0116                     	;# 
  1104     0117                     	;# 
  1105     0118                     	;# 
  1106     0119                     	;# 
  1107     011A                     	;# 
  1108     011B                     	;# 
  1109     011D                     	;# 
  1110     011E                     	;# 
  1111     018C                     	;# 
  1112     018D                     	;# 
  1113     0191                     	;# 
  1114     0191                     	;# 
  1115     0192                     	;# 
  1116     0193                     	;# 
  1117     0193                     	;# 
  1118     0193                     	;# 
  1119     0194                     	;# 
  1120     0195                     	;# 
  1121     0196                     	;# 
  1122     0199                     	;# 
  1123     019A                     	;# 
  1124     019B                     	;# 
  1125     019B                     	;# 
  1126     019B                     	;# 
  1127     019B                     	;# 
  1128     019C                     	;# 
  1129     019C                     	;# 
  1130     019D                     	;# 
  1131     019E                     	;# 
  1132     019F                     	;# 
  1133     020C                     	;# 
  1134     020D                     	;# 
  1135     0211                     	;# 
  1136     0211                     	;# 
  1137     0212                     	;# 
  1138     0212                     	;# 
  1139     0213                     	;# 
  1140     0213                     	;# 
  1141     0214                     	;# 
  1142     0214                     	;# 
  1143     0215                     	;# 
  1144     0215                     	;# 
  1145     0215                     	;# 
  1146     0216                     	;# 
  1147     0216                     	;# 
  1148     0217                     	;# 
  1149     0217                     	;# 
  1150     0219                     	;# 
  1151     021A                     	;# 
  1152     021B                     	;# 
  1153     021C                     	;# 
  1154     021D                     	;# 
  1155     021E                     	;# 
  1156     021F                     	;# 
  1157     0291                     	;# 
  1158     0291                     	;# 
  1159     0292                     	;# 
  1160     0293                     	;# 
  1161     0294                     	;# 
  1162     0295                     	;# 
  1163     0295                     	;# 
  1164     0296                     	;# 
  1165     0298                     	;# 
  1166     0298                     	;# 
  1167     0299                     	;# 
  1168     029A                     	;# 
  1169     029B                     	;# 
  1170     029C                     	;# 
  1171     029C                     	;# 
  1172     029D                     	;# 
  1173     029E                     	;# 
  1174     029E                     	;# 
  1175     0311                     	;# 
  1176     0311                     	;# 
  1177     0312                     	;# 
  1178     0313                     	;# 
  1179     0318                     	;# 
  1180     0318                     	;# 
  1181     0319                     	;# 
  1182     031A                     	;# 
  1183     0394                     	;# 
  1184     0395                     	;# 
  1185     0396                     	;# 
  1186     039A                     	;# 
  1187     039C                     	;# 
  1188     039D                     	;# 
  1189     039E                     	;# 
  1190     039F                     	;# 
  1191     0415                     	;# 
  1192     0416                     	;# 
  1193     0417                     	;# 
  1194     041C                     	;# 
  1195     041D                     	;# 
  1196     041E                     	;# 
  1197     0FE4                     	;# 
  1198     0FE5                     	;# 
  1199     0FE6                     	;# 
  1200     0FE7                     	;# 
  1201     0FE8                     	;# 
  1202     0FE9                     	;# 
  1203     0FEA                     	;# 
  1204     0FEB                     	;# 
  1205     0FED                     	;# 
  1206     0FEE                     	;# 
  1207     0FEF                     	;# 
  1208     0000                     	;# 
  1209     0001                     	;# 
  1210     0002                     	;# 
  1211     0003                     	;# 
  1212     0004                     	;# 
  1213     0005                     	;# 
  1214     0006                     	;# 
  1215     0007                     	;# 
  1216     0008                     	;# 
  1217     0009                     	;# 
  1218     000A                     	;# 
  1219     000B                     	;# 
  1220     000C                     	;# 
  1221     000D                     	;# 
  1222     0011                     	;# 
  1223     0012                     	;# 
  1224     0013                     	;# 
  1225     0014                     	;# 
  1226     0015                     	;# 
  1227     0016                     	;# 
  1228     0016                     	;# 
  1229     0017                     	;# 
  1230     0018                     	;# 
  1231     0019                     	;# 
  1232     001A                     	;# 
  1233     001B                     	;# 
  1234     001C                     	;# 
  1235     001E                     	;# 
  1236     001F                     	;# 
  1237     008C                     	;# 
  1238     008D                     	;# 
  1239     0091                     	;# 
  1240     0092                     	;# 
  1241     0093                     	;# 
  1242     0094                     	;# 
  1243     0095                     	;# 
  1244     0096                     	;# 
  1245     0097                     	;# 
  1246     0098                     	;# 
  1247     0099                     	;# 
  1248     009A                     	;# 
  1249     009B                     	;# 
  1250     009B                     	;# 
  1251     009C                     	;# 
  1252     009D                     	;# 
  1253     009E                     	;# 
  1254     010C                     	;# 
  1255     010D                     	;# 
  1256     0111                     	;# 
  1257     0112                     	;# 
  1258     0113                     	;# 
  1259     0114                     	;# 
  1260     0115                     	;# 
  1261     0116                     	;# 
  1262     0117                     	;# 
  1263     0118                     	;# 
  1264     0119                     	;# 
  1265     011A                     	;# 
  1266     011B                     	;# 
  1267     011D                     	;# 
  1268     011E                     	;# 
  1269     018C                     	;# 
  1270     018D                     	;# 
  1271     0191                     	;# 
  1272     0191                     	;# 
  1273     0192                     	;# 
  1274     0193                     	;# 
  1275     0193                     	;# 
  1276     0193                     	;# 
  1277     0194                     	;# 
  1278     0195                     	;# 
  1279     0196                     	;# 
  1280     0199                     	;# 
  1281     019A                     	;# 
  1282     019B                     	;# 
  1283     019B                     	;# 
  1284     019B                     	;# 
  1285     019B                     	;# 
  1286     019C                     	;# 
  1287     019C                     	;# 
  1288     019D                     	;# 
  1289     019E                     	;# 
  1290     019F                     	;# 
  1291     020C                     	;# 
  1292     020D                     	;# 
  1293     0211                     	;# 
  1294     0211                     	;# 
  1295     0212                     	;# 
  1296     0212                     	;# 
  1297     0213                     	;# 
  1298     0213                     	;# 
  1299     0214                     	;# 
  1300     0214                     	;# 
  1301     0215                     	;# 
  1302     0215                     	;# 
  1303     0215                     	;# 
  1304     0216                     	;# 
  1305     0216                     	;# 
  1306     0217                     	;# 
  1307     0217                     	;# 
  1308     0219                     	;# 
  1309     021A                     	;# 
  1310     021B                     	;# 
  1311     021C                     	;# 
  1312     021D                     	;# 
  1313     021E                     	;# 
  1314     021F                     	;# 
  1315     0291                     	;# 
  1316     0291                     	;# 
  1317     0292                     	;# 
  1318     0293                     	;# 
  1319     0294                     	;# 
  1320     0295                     	;# 
  1321     0295                     	;# 
  1322     0296                     	;# 
  1323     0298                     	;# 
  1324     0298                     	;# 
  1325     0299                     	;# 
  1326     029A                     	;# 
  1327     029B                     	;# 
  1328     029C                     	;# 
  1329     029C                     	;# 
  1330     029D                     	;# 
  1331     029E                     	;# 
  1332     029E                     	;# 
  1333     0311                     	;# 
  1334     0311                     	;# 
  1335     0312                     	;# 
  1336     0313                     	;# 
  1337     0318                     	;# 
  1338     0318                     	;# 
  1339     0319                     	;# 
  1340     031A                     	;# 
  1341     0394                     	;# 
  1342     0395                     	;# 
  1343     0396                     	;# 
  1344     039A                     	;# 
  1345     039C                     	;# 
  1346     039D                     	;# 
  1347     039E                     	;# 
  1348     039F                     	;# 
  1349     0415                     	;# 
  1350     0416                     	;# 
  1351     0417                     	;# 
  1352     041C                     	;# 
  1353     041D                     	;# 
  1354     041E                     	;# 
  1355     0FE4                     	;# 
  1356     0FE5                     	;# 
  1357     0FE6                     	;# 
  1358     0FE7                     	;# 
  1359     0FE8                     	;# 
  1360     0FE9                     	;# 
  1361     0FEA                     	;# 
  1362     0FEB                     	;# 
  1363     0FED                     	;# 
  1364     0FEE                     	;# 
  1365     0FEF                     	;# 
  1366     0000                     	;# 
  1367     0001                     	;# 
  1368     0002                     	;# 
  1369     0003                     	;# 
  1370     0004                     	;# 
  1371     0005                     	;# 
  1372     0006                     	;# 
  1373     0007                     	;# 
  1374     0008                     	;# 
  1375     0009                     	;# 
  1376     000A                     	;# 
  1377     000B                     	;# 
  1378     000C                     	;# 
  1379     000D                     	;# 
  1380     0011                     	;# 
  1381     0012                     	;# 
  1382     0013                     	;# 
  1383     0014                     	;# 
  1384     0015                     	;# 
  1385     0016                     	;# 
  1386     0016                     	;# 
  1387     0017                     	;# 
  1388     0018                     	;# 
  1389     0019                     	;# 
  1390     001A                     	;# 
  1391     001B                     	;# 
  1392     001C                     	;# 
  1393     001E                     	;# 
  1394     001F                     	;# 
  1395     008C                     	;# 
  1396     008D                     	;# 
  1397     0091                     	;# 
  1398     0092                     	;# 
  1399     0093                     	;# 
  1400     0094                     	;# 
  1401     0095                     	;# 
  1402     0096                     	;# 
  1403     0097                     	;# 
  1404     0098                     	;# 
  1405     0099                     	;# 
  1406     009A                     	;# 
  1407     009B                     	;# 
  1408     009B                     	;# 
  1409     009C                     	;# 
  1410     009D                     	;# 
  1411     009E                     	;# 
  1412     010C                     	;# 
  1413     010D                     	;# 
  1414     0111                     	;# 
  1415     0112                     	;# 
  1416     0113                     	;# 
  1417     0114                     	;# 
  1418     0115                     	;# 
  1419     0116                     	;# 
  1420     0117                     	;# 
  1421     0118                     	;# 
  1422     0119                     	;# 
  1423     011A                     	;# 
  1424     011B                     	;# 
  1425     011D                     	;# 
  1426     011E                     	;# 
  1427     018C                     	;# 
  1428     018D                     	;# 
  1429     0191                     	;# 
  1430     0191                     	;# 
  1431     0192                     	;# 
  1432     0193                     	;# 
  1433     0193                     	;# 
  1434     0193                     	;# 
  1435     0194                     	;# 
  1436     0195                     	;# 
  1437     0196                     	;# 
  1438     0199                     	;# 
  1439     019A                     	;# 
  1440     019B                     	;# 
  1441     019B                     	;# 
  1442     019B                     	;# 
  1443     019B                     	;# 
  1444     019C                     	;# 
  1445     019C                     	;# 
  1446     019D                     	;# 
  1447     019E                     	;# 
  1448     019F                     	;# 
  1449     020C                     	;# 
  1450     020D                     	;# 
  1451     0211                     	;# 
  1452     0211                     	;# 
  1453     0212                     	;# 
  1454     0212                     	;# 
  1455     0213                     	;# 
  1456     0213                     	;# 
  1457     0214                     	;# 
  1458     0214                     	;# 
  1459     0215                     	;# 
  1460     0215                     	;# 
  1461     0215                     	;# 
  1462     0216                     	;# 
  1463     0216                     	;# 
  1464     0217                     	;# 
  1465     0217                     	;# 
  1466     0219                     	;# 
  1467     021A                     	;# 
  1468     021B                     	;# 
  1469     021C                     	;# 
  1470     021D                     	;# 
  1471     021E                     	;# 
  1472     021F                     	;# 
  1473     0291                     	;# 
  1474     0291                     	;# 
  1475     0292                     	;# 
  1476     0293                     	;# 
  1477     0294                     	;# 
  1478     0295                     	;# 
  1479     0295                     	;# 
  1480     0296                     	;# 
  1481     0298                     	;# 
  1482     0298                     	;# 
  1483     0299                     	;# 
  1484     029A                     	;# 
  1485     029B                     	;# 
  1486     029C                     	;# 
  1487     029C                     	;# 
  1488     029D                     	;# 
  1489     029E                     	;# 
  1490     029E                     	;# 
  1491     0311                     	;# 
  1492     0311                     	;# 
  1493     0312                     	;# 
  1494     0313                     	;# 
  1495     0318                     	;# 
  1496     0318                     	;# 
  1497     0319                     	;# 
  1498     031A                     	;# 
  1499     0394                     	;# 
  1500     0395                     	;# 
  1501     0396                     	;# 
  1502     039A                     	;# 
  1503     039C                     	;# 
  1504     039D                     	;# 
  1505     039E                     	;# 
  1506     039F                     	;# 
  1507     0415                     	;# 
  1508     0416                     	;# 
  1509     0417                     	;# 
  1510     041C                     	;# 
  1511     041D                     	;# 
  1512     041E                     	;# 
  1513     0FE4                     	;# 
  1514     0FE5                     	;# 
  1515     0FE6                     	;# 
  1516     0FE7                     	;# 
  1517     0FE8                     	;# 
  1518     0FE9                     	;# 
  1519     0FEA                     	;# 
  1520     0FEB                     	;# 
  1521     0FED                     	;# 
  1522     0FEE                     	;# 
  1523     0FEF                     	;# 
  1524     0000                     	;# 
  1525     0001                     	;# 
  1526     0002                     	;# 
  1527     0003                     	;# 
  1528     0004                     	;# 
  1529     0005                     	;# 
  1530     0006                     	;# 
  1531     0007                     	;# 
  1532     0008                     	;# 
  1533     0009                     	;# 
  1534     000A                     	;# 
  1535     000B                     	;# 
  1536     000C                     	;# 
  1537     000D                     	;# 
  1538     0011                     	;# 
  1539     0012                     	;# 
  1540     0013                     	;# 
  1541     0014                     	;# 
  1542     0015                     	;# 
  1543     0016                     	;# 
  1544     0016                     	;# 
  1545     0017                     	;# 
  1546     0018                     	;# 
  1547     0019                     	;# 
  1548     001A                     	;# 
  1549     001B                     	;# 
  1550     001C                     	;# 
  1551     001E                     	;# 
  1552     001F                     	;# 
  1553     008C                     	;# 
  1554     008D                     	;# 
  1555     0091                     	;# 
  1556     0092                     	;# 
  1557     0093                     	;# 
  1558     0094                     	;# 
  1559     0095                     	;# 
  1560     0096                     	;# 
  1561     0097                     	;# 
  1562     0098                     	;# 
  1563     0099                     	;# 
  1564     009A                     	;# 
  1565     009B                     	;# 
  1566     009B                     	;# 
  1567     009C                     	;# 
  1568     009D                     	;# 
  1569     009E                     	;# 
  1570     010C                     	;# 
  1571     010D                     	;# 
  1572     0111                     	;# 
  1573     0112                     	;# 
  1574     0113                     	;# 
  1575     0114                     	;# 
  1576     0115                     	;# 
  1577     0116                     	;# 
  1578     0117                     	;# 
  1579     0118                     	;# 
  1580     0119                     	;# 
  1581     011A                     	;# 
  1582     011B                     	;# 
  1583     011D                     	;# 
  1584     011E                     	;# 
  1585     018C                     	;# 
  1586     018D                     	;# 
  1587     0191                     	;# 
  1588     0191                     	;# 
  1589     0192                     	;# 
  1590     0193                     	;# 
  1591     0193                     	;# 
  1592     0193                     	;# 
  1593     0194                     	;# 
  1594     0195                     	;# 
  1595     0196                     	;# 
  1596     0199                     	;# 
  1597     019A                     	;# 
  1598     019B                     	;# 
  1599     019B                     	;# 
  1600     019B                     	;# 
  1601     019B                     	;# 
  1602     019C                     	;# 
  1603     019C                     	;# 
  1604     019D                     	;# 
  1605     019E                     	;# 
  1606     019F                     	;# 
  1607     020C                     	;# 
  1608     020D                     	;# 
  1609     0211                     	;# 
  1610     0211                     	;# 
  1611     0212                     	;# 
  1612     0212                     	;# 
  1613     0213                     	;# 
  1614     0213                     	;# 
  1615     0214                     	;# 
  1616     0214                     	;# 
  1617     0215                     	;# 
  1618     0215                     	;# 
  1619     0215                     	;# 
  1620     0216                     	;# 
  1621     0216                     	;# 
  1622     0217                     	;# 
  1623     0217                     	;# 
  1624     0219                     	;# 
  1625     021A                     	;# 
  1626     021B                     	;# 
  1627     021C                     	;# 
  1628     021D                     	;# 
  1629     021E                     	;# 
  1630     021F                     	;# 
  1631     0291                     	;# 
  1632     0291                     	;# 
  1633     0292                     	;# 
  1634     0293                     	;# 
  1635     0294                     	;# 
  1636     0295                     	;# 
  1637     0295                     	;# 
  1638     0296                     	;# 
  1639     0298                     	;# 
  1640     0298                     	;# 
  1641     0299                     	;# 
  1642     029A                     	;# 
  1643     029B                     	;# 
  1644     029C                     	;# 
  1645     029C                     	;# 
  1646     029D                     	;# 
  1647     029E                     	;# 
  1648     029E                     	;# 
  1649     0311                     	;# 
  1650     0311                     	;# 
  1651     0312                     	;# 
  1652     0313                     	;# 
  1653     0318                     	;# 
  1654     0318                     	;# 
  1655     0319                     	;# 
  1656     031A                     	;# 
  1657     0394                     	;# 
  1658     0395                     	;# 
  1659     0396                     	;# 
  1660     039A                     	;# 
  1661     039C                     	;# 
  1662     039D                     	;# 
  1663     039E                     	;# 
  1664     039F                     	;# 
  1665     0415                     	;# 
  1666     0416                     	;# 
  1667     0417                     	;# 
  1668     041C                     	;# 
  1669     041D                     	;# 
  1670     041E                     	;# 
  1671     0FE4                     	;# 
  1672     0FE5                     	;# 
  1673     0FE6                     	;# 
  1674     0FE7                     	;# 
  1675     0FE8                     	;# 
  1676     0FE9                     	;# 
  1677     0FEA                     	;# 
  1678     0FEB                     	;# 
  1679     0FED                     	;# 
  1680     0FEE                     	;# 
  1681     0FEF                     	;# 
  1682     0000                     	;# 
  1683     0001                     	;# 
  1684     0002                     	;# 
  1685     0003                     	;# 
  1686     0004                     	;# 
  1687     0005                     	;# 
  1688     0006                     	;# 
  1689     0007                     	;# 
  1690     0008                     	;# 
  1691     0009                     	;# 
  1692     000A                     	;# 
  1693     000B                     	;# 
  1694     000C                     	;# 
  1695     000D                     	;# 
  1696     0011                     	;# 
  1697     0012                     	;# 
  1698     0013                     	;# 
  1699     0014                     	;# 
  1700     0015                     	;# 
  1701     0016                     	;# 
  1702     0016                     	;# 
  1703     0017                     	;# 
  1704     0018                     	;# 
  1705     0019                     	;# 
  1706     001A                     	;# 
  1707     001B                     	;# 
  1708     001C                     	;# 
  1709     001E                     	;# 
  1710     001F                     	;# 
  1711     008C                     	;# 
  1712     008D                     	;# 
  1713     0091                     	;# 
  1714     0092                     	;# 
  1715     0093                     	;# 
  1716     0094                     	;# 
  1717     0095                     	;# 
  1718     0096                     	;# 
  1719     0097                     	;# 
  1720     0098                     	;# 
  1721     0099                     	;# 
  1722     009A                     	;# 
  1723     009B                     	;# 
  1724     009B                     	;# 
  1725     009C                     	;# 
  1726     009D                     	;# 
  1727     009E                     	;# 
  1728     010C                     	;# 
  1729     010D                     	;# 
  1730     0111                     	;# 
  1731     0112                     	;# 
  1732     0113                     	;# 
  1733     0114                     	;# 
  1734     0115                     	;# 
  1735     0116                     	;# 
  1736     0117                     	;# 
  1737     0118                     	;# 
  1738     0119                     	;# 
  1739     011A                     	;# 
  1740     011B                     	;# 
  1741     011D                     	;# 
  1742     011E                     	;# 
  1743     018C                     	;# 
  1744     018D                     	;# 
  1745     0191                     	;# 
  1746     0191                     	;# 
  1747     0192                     	;# 
  1748     0193                     	;# 
  1749     0193                     	;# 
  1750     0193                     	;# 
  1751     0194                     	;# 
  1752     0195                     	;# 
  1753     0196                     	;# 
  1754     0199                     	;# 
  1755     019A                     	;# 
  1756     019B                     	;# 
  1757     019B                     	;# 
  1758     019B                     	;# 
  1759     019B                     	;# 
  1760     019C                     	;# 
  1761     019C                     	;# 
  1762     019D                     	;# 
  1763     019E                     	;# 
  1764     019F                     	;# 
  1765     020C                     	;# 
  1766     020D                     	;# 
  1767     0211                     	;# 
  1768     0211                     	;# 
  1769     0212                     	;# 
  1770     0212                     	;# 
  1771     0213                     	;# 
  1772     0213                     	;# 
  1773     0214                     	;# 
  1774     0214                     	;# 
  1775     0215                     	;# 
  1776     0215                     	;# 
  1777     0215                     	;# 
  1778     0216                     	;# 
  1779     0216                     	;# 
  1780     0217                     	;# 
  1781     0217                     	;# 
  1782     0219                     	;# 
  1783     021A                     	;# 
  1784     021B                     	;# 
  1785     021C                     	;# 
  1786     021D                     	;# 
  1787     021E                     	;# 
  1788     021F                     	;# 
  1789     0291                     	;# 
  1790     0291                     	;# 
  1791     0292                     	;# 
  1792     0293                     	;# 
  1793     0294                     	;# 
  1794     0295                     	;# 
  1795     0295                     	;# 
  1796     0296                     	;# 
  1797     0298                     	;# 
  1798     0298                     	;# 
  1799     0299                     	;# 
  1800     029A                     	;# 
  1801     029B                     	;# 
  1802     029C                     	;# 
  1803     029C                     	;# 
  1804     029D                     	;# 
  1805     029E                     	;# 
  1806     029E                     	;# 
  1807     0311                     	;# 
  1808     0311                     	;# 
  1809     0312                     	;# 
  1810     0313                     	;# 
  1811     0318                     	;# 
  1812     0318                     	;# 
  1813     0319                     	;# 
  1814     031A                     	;# 
  1815     0394                     	;# 
  1816     0395                     	;# 
  1817     0396                     	;# 
  1818     039A                     	;# 
  1819     039C                     	;# 
  1820     039D                     	;# 
  1821     039E                     	;# 
  1822     039F                     	;# 
  1823     0415                     	;# 
  1824     0416                     	;# 
  1825     0417                     	;# 
  1826     041C                     	;# 
  1827     041D                     	;# 
  1828     041E                     	;# 
  1829     0FE4                     	;# 
  1830     0FE5                     	;# 
  1831     0FE6                     	;# 
  1832     0FE7                     	;# 
  1833     0FE8                     	;# 
  1834     0FE9                     	;# 
  1835     0FEA                     	;# 
  1836     0FEB                     	;# 
  1837     0FED                     	;# 
  1838     0FEE                     	;# 
  1839     0FEF                     	;# 
  1840     0000                     	;# 
  1841     0001                     	;# 
  1842     0002                     	;# 
  1843     0003                     	;# 
  1844     0004                     	;# 
  1845     0005                     	;# 
  1846     0006                     	;# 
  1847     0007                     	;# 
  1848     0008                     	;# 
  1849     0009                     	;# 
  1850     000A                     	;# 
  1851     000B                     	;# 
  1852     000C                     	;# 
  1853     000D                     	;# 
  1854     0011                     	;# 
  1855     0012                     	;# 
  1856     0013                     	;# 
  1857     0014                     	;# 
  1858     0015                     	;# 
  1859     0016                     	;# 
  1860     0016                     	;# 
  1861     0017                     	;# 
  1862     0018                     	;# 
  1863     0019                     	;# 
  1864     001A                     	;# 
  1865     001B                     	;# 
  1866     001C                     	;# 
  1867     001E                     	;# 
  1868     001F                     	;# 
  1869     008C                     	;# 
  1870     008D                     	;# 
  1871     0091                     	;# 
  1872     0092                     	;# 
  1873     0093                     	;# 
  1874     0094                     	;# 
  1875     0095                     	;# 
  1876     0096                     	;# 
  1877     0097                     	;# 
  1878     0098                     	;# 
  1879     0099                     	;# 
  1880     009A                     	;# 
  1881     009B                     	;# 
  1882     009B                     	;# 
  1883     009C                     	;# 
  1884     009D                     	;# 
  1885     009E                     	;# 
  1886     010C                     	;# 
  1887     010D                     	;# 
  1888     0111                     	;# 
  1889     0112                     	;# 
  1890     0113                     	;# 
  1891     0114                     	;# 
  1892     0115                     	;# 
  1893     0116                     	;# 
  1894     0117                     	;# 
  1895     0118                     	;# 
  1896     0119                     	;# 
  1897     011A                     	;# 
  1898     011B                     	;# 
  1899     011D                     	;# 
  1900     011E                     	;# 
  1901     018C                     	;# 
  1902     018D                     	;# 
  1903     0191                     	;# 
  1904     0191                     	;# 
  1905     0192                     	;# 
  1906     0193                     	;# 
  1907     0193                     	;# 
  1908     0193                     	;# 
  1909     0194                     	;# 
  1910     0195                     	;# 
  1911     0196                     	;# 
  1912     0199                     	;# 
  1913     019A                     	;# 
  1914     019B                     	;# 
  1915     019B                     	;# 
  1916     019B                     	;# 
  1917     019B                     	;# 
  1918     019C                     	;# 
  1919     019C                     	;# 
  1920     019D                     	;# 
  1921     019E                     	;# 
  1922     019F                     	;# 
  1923     020C                     	;# 
  1924     020D                     	;# 
  1925     0211                     	;# 
  1926     0211                     	;# 
  1927     0212                     	;# 
  1928     0212                     	;# 
  1929     0213                     	;# 
  1930     0213                     	;# 
  1931     0214                     	;# 
  1932     0214                     	;# 
  1933     0215                     	;# 
  1934     0215                     	;# 
  1935     0215                     	;# 
  1936     0216                     	;# 
  1937     0216                     	;# 
  1938     0217                     	;# 
  1939     0217                     	;# 
  1940     0219                     	;# 
  1941     021A                     	;# 
  1942     021B                     	;# 
  1943     021C                     	;# 
  1944     021D                     	;# 
  1945     021E                     	;# 
  1946     021F                     	;# 
  1947     0291                     	;# 
  1948     0291                     	;# 
  1949     0292                     	;# 
  1950     0293                     	;# 
  1951     0294                     	;# 
  1952     0295                     	;# 
  1953     0295                     	;# 
  1954     0296                     	;# 
  1955     0298                     	;# 
  1956     0298                     	;# 
  1957     0299                     	;# 
  1958     029A                     	;# 
  1959     029B                     	;# 
  1960     029C                     	;# 
  1961     029C                     	;# 
  1962     029D                     	;# 
  1963     029E                     	;# 
  1964     029E                     	;# 
  1965     0311                     	;# 
  1966     0311                     	;# 
  1967     0312                     	;# 
  1968     0313                     	;# 
  1969     0318                     	;# 
  1970     0318                     	;# 
  1971     0319                     	;# 
  1972     031A                     	;# 
  1973     0394                     	;# 
  1974     0395                     	;# 
  1975     0396                     	;# 
  1976     039A                     	;# 
  1977     039C                     	;# 
  1978     039D                     	;# 
  1979     039E                     	;# 
  1980     039F                     	;# 
  1981     0415                     	;# 
  1982     0416                     	;# 
  1983     0417                     	;# 
  1984     041C                     	;# 
  1985     041D                     	;# 
  1986     041E                     	;# 
  1987     0FE4                     	;# 
  1988     0FE5                     	;# 
  1989     0FE6                     	;# 
  1990     0FE7                     	;# 
  1991     0FE8                     	;# 
  1992     0FE9                     	;# 
  1993     0FEA                     	;# 
  1994     0FEB                     	;# 
  1995     0FED                     	;# 
  1996     0FEE                     	;# 
  1997     0FEF                     	;# 
  1998     0000                     	;# 
  1999     0001                     	;# 
  2000     0002                     	;# 
  2001     0003                     	;# 
  2002     0004                     	;# 
  2003     0005                     	;# 
  2004     0006                     	;# 
  2005     0007                     	;# 
  2006     0008                     	;# 
  2007     0009                     	;# 
  2008     000A                     	;# 
  2009     000B                     	;# 
  2010     000C                     	;# 
  2011     000D                     	;# 
  2012     0011                     	;# 
  2013     0012                     	;# 
  2014     0013                     	;# 
  2015     0014                     	;# 
  2016     0015                     	;# 
  2017     0016                     	;# 
  2018     0016                     	;# 
  2019     0017                     	;# 
  2020     0018                     	;# 
  2021     0019                     	;# 
  2022     001A                     	;# 
  2023     001B                     	;# 
  2024     001C                     	;# 
  2025     001E                     	;# 
  2026     001F                     	;# 
  2027     008C                     	;# 
  2028     008D                     	;# 
  2029     0091                     	;# 
  2030     0092                     	;# 
  2031     0093                     	;# 
  2032     0094                     	;# 
  2033     0095                     	;# 
  2034     0096                     	;# 
  2035     0097                     	;# 
  2036     0098                     	;# 
  2037     0099                     	;# 
  2038     009A                     	;# 
  2039     009B                     	;# 
  2040     009B                     	;# 
  2041     009C                     	;# 
  2042     009D                     	;# 
  2043     009E                     	;# 
  2044     010C                     	;# 
  2045     010D                     	;# 
  2046     0111                     	;# 
  2047     0112                     	;# 
  2048     0113                     	;# 
  2049     0114                     	;# 
  2050     0115                     	;# 
  2051     0116                     	;# 
  2052     0117                     	;# 
  2053     0118                     	;# 
  2054     0119                     	;# 
  2055     011A                     	;# 
  2056     011B                     	;# 
  2057     011D                     	;# 
  2058     011E                     	;# 
  2059     018C                     	;# 
  2060     018D                     	;# 
  2061     0191                     	;# 
  2062     0191                     	;# 
  2063     0192                     	;# 
  2064     0193                     	;# 
  2065     0193                     	;# 
  2066     0193                     	;# 
  2067     0194                     	;# 
  2068     0195                     	;# 
  2069     0196                     	;# 
  2070     0199                     	;# 
  2071     019A                     	;# 
  2072     019B                     	;# 
  2073     019B                     	;# 
  2074     019B                     	;# 
  2075     019B                     	;# 
  2076     019C                     	;# 
  2077     019C                     	;# 
  2078     019D                     	;# 
  2079     019E                     	;# 
  2080     019F                     	;# 
  2081     020C                     	;# 
  2082     020D                     	;# 
  2083     0211                     	;# 
  2084     0211                     	;# 
  2085     0212                     	;# 
  2086     0212                     	;# 
  2087     0213                     	;# 
  2088     0213                     	;# 
  2089     0214                     	;# 
  2090     0214                     	;# 
  2091     0215                     	;# 
  2092     0215                     	;# 
  2093     0215                     	;# 
  2094     0216                     	;# 
  2095     0216                     	;# 
  2096     0217                     	;# 
  2097     0217                     	;# 
  2098     0219                     	;# 
  2099     021A                     	;# 
  2100     021B                     	;# 
  2101     021C                     	;# 
  2102     021D                     	;# 
  2103     021E                     	;# 
  2104     021F                     	;# 
  2105     0291                     	;# 
  2106     0291                     	;# 
  2107     0292                     	;# 
  2108     0293                     	;# 
  2109     0294                     	;# 
  2110     0295                     	;# 
  2111     0295                     	;# 
  2112     0296                     	;# 
  2113     0298                     	;# 
  2114     0298                     	;# 
  2115     0299                     	;# 
  2116     029A                     	;# 
  2117     029B                     	;# 
  2118     029C                     	;# 
  2119     029C                     	;# 
  2120     029D                     	;# 
  2121     029E                     	;# 
  2122     029E                     	;# 
  2123     0311                     	;# 
  2124     0311                     	;# 
  2125     0312                     	;# 
  2126     0313                     	;# 
  2127     0318                     	;# 
  2128     0318                     	;# 
  2129     0319                     	;# 
  2130     031A                     	;# 
  2131     0394                     	;# 
  2132     0395                     	;# 
  2133     0396                     	;# 
  2134     039A                     	;# 
  2135     039C                     	;# 
  2136     039D                     	;# 
  2137     039E                     	;# 
  2138     039F                     	;# 
  2139     0415                     	;# 
  2140     0416                     	;# 
  2141     0417                     	;# 
  2142     041C                     	;# 
  2143     041D                     	;# 
  2144     041E                     	;# 
  2145     0FE4                     	;# 
  2146     0FE5                     	;# 
  2147     0FE6                     	;# 
  2148     0FE7                     	;# 
  2149     0FE8                     	;# 
  2150     0FE9                     	;# 
  2151     0FEA                     	;# 
  2152     0FEB                     	;# 
  2153     0FED                     	;# 
  2154     0FEE                     	;# 
  2155     0FEF                     	;_DW1
  2156                           
  2157 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  2158     0000                     
  2159 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  2160     0000                     
  2161 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  2162     0000                     
  2163                           	psect	idataBANK2
  2164     0E94                     __pidataBANK2:
  2165                           
  2166                           ;initializer for _mapping
  2167     0E94  3437               	retlw	55
  2168     0E95  343F               	retlw	63
  2169     0E96  3407               	retlw	7
  2170     0E97  3408               	retlw	8
  2171     0E98  3409               	retlw	9
  2172     0E99  3401               	retlw	1
  2173     0E9A  3439               	retlw	57
  2174     0E9B  3438               	retlw	56
  2175                           
  2176                           	psect	stringtext1
  2177     0800                     __pstringtext1:
  2178     0800                     _de_sigmoidValues:
  2179     0800  3440               	retlw	64
  2180     0801  3432               	retlw	50
  2181     0802  341B               	retlw	27
  2182     0803  340C               	retlw	12
  2183     0804  3405               	retlw	5
  2184     0805  3402               	retlw	2
  2185     0806  3401               	retlw	1
  2186     0807  3400               	retlw	0
  2187     0808  3400               	retlw	0
  2188     0809  3400               	retlw	0
  2189     080A  3401               	retlw	1
  2190     080B  3402               	retlw	2
  2191     080C  3405               	retlw	5
  2192     080D  340C               	retlw	12
  2193     080E  341B               	retlw	27
  2194     080F  3432               	retlw	50
  2195     0810                     __end_of_de_sigmoidValues:
  2196                           
  2197                           	psect	stringtext2
  2198     0810                     __pstringtext2:
  2199     0810                     _sigmoidValues:
  2200     0810  3480               	retlw	128
  2201     0811  34BA               	retlw	186
  2202     0812  34E1               	retlw	225
  2203     0813  34F3               	retlw	243
  2204     0814  34FA               	retlw	250
  2205     0815  34FD               	retlw	253
  2206     0816  34FE               	retlw	254
  2207     0817  34FF               	retlw	255
  2208     0818  3400               	retlw	0
  2209     0819  3400               	retlw	0
  2210     081A  3401               	retlw	1
  2211     081B  3402               	retlw	2
  2212     081C  3405               	retlw	5
  2213     081D  340C               	retlw	12
  2214     081E  341E               	retlw	30
  2215     081F  3445               	retlw	69
  2216     0820                     __end_of_sigmoidValues:
  2217                           
  2218                           	psect	stringtext3
  2219     0820                     __pstringtext3:
  2220     0820                     _spi1_configuration:
  2221     0820  3402               	retlw	2
  2222     0821  3440               	retlw	64
  2223     0822  3401               	retlw	1
  2224     0823  3400               	retlw	0
  2225     0824                     __end_of_spi1_configuration:
  2226                           
  2227                           	psect	nvBANK0
  2228     006D                     __pnvBANK0:
  2229     006D                     _EUSART_FramingErrorHandler:
  2230     006D                     	ds	2
  2231                           
  2232                           	psect	nvBANK2
  2233     0168                     __pnvBANK2:
  2234     0168                     _EUSART_ErrorHandler:
  2235     0168                     	ds	2
  2236     016A                     _EUSART_OverrunErrorHandler:
  2237     016A                     	ds	2
  2238     0003                     _STATUSbits	set	3
  2239     0011                     _PIR1bits	set	17
  2240     000B                     _INTCONbits	set	11
  2241     008C                     _TRISAbits	set	140
  2242     0097                     _WDTCON	set	151
  2243     0098                     _OSCTUNE	set	152
  2244     0099                     _OSCCON	set	153
  2245     008D                     _TRISBbits	set	141
  2246     0095                     _OPTION_REGbits	set	149
  2247     008D                     _TRISB	set	141
  2248     008C                     _TRISA	set	140
  2249     010D                     _LATBbits	set	269
  2250     010C                     _LATAbits	set	268
  2251     0116                     _BORCON	set	278
  2252     011E                     _APFCON1	set	286
  2253     011D                     _APFCON0	set	285
  2254     010D                     _LATB	set	269
  2255     010C                     _LATA	set	268
  2256     0191                     _EEADR	set	401
  2257     0193                     _EEDATA	set	403
  2258     0195                     _EECON1	set	405
  2259     018C                     _ANSELA	set	396
  2260     018D                     _ANSELB	set	397
  2261     019A                     _TXREG	set	410
  2262     0199                     _RCREG	set	409
  2263     019D                     _RCSTAbits	set	413
  2264     019E                     _TXSTAbits	set	414
  2265     019C                     _SPBRGH	set	412
  2266     019B                     _SPBRGL	set	411
  2267     019E                     _TXSTA	set	414
  2268     019D                     _RCSTA	set	413
  2269     019F                     _BAUDCON	set	415
  2270     0196                     _EECON2	set	406
  2271     0193                     _EEDATL	set	403
  2272     0194                     _EEDATH	set	404
  2273     0195                     _EECON1bits	set	405
  2274     0192                     _EEADRH	set	402
  2275     0191                     _EEADRL	set	401
  2276     0211                     _SSP1BUF	set	529
  2277     0216                     _SSP1CON2	set	534
  2278     0215                     _SSP1CON1bits	set	533
  2279     0212                     _SSP1ADD	set	530
  2280     0215                     _SSP1CON1	set	533
  2281     0214                     _SSP1STAT	set	532
  2282     020C                     _WPUA	set	524
  2283     020D                     _WPUB	set	525
  2284                           
  2285                           	psect	cinit
  2286     07BC                     start_initialization:	
  2287                           ; #config settings
  2288                           
  2289     07BC                     __initialization:	;BIGRAM
  2290                           
  2291                           ; Initialize objects allocated to BANK2
  2292     07BC  3094               	movlw	low __pidataBANK2
  2293     07BD  0084               	movwf	4
  2294     07BE  308E               	movlw	(high __pidataBANK2)| (0+128)
  2295     07BF  0085               	movwf	5
  2296     07C0  0022               	movlb	2	; select bank2
  2297     07C1  0012               	moviw fsr0++
  2298     07C2  00E0               	movwf	__pdataBANK2& (0+127)
  2299     07C3  0012               	moviw fsr0++
  2300     07C4  00E1               	movwf	(__pdataBANK2+1)& (0+127)
  2301     07C5  0012               	moviw fsr0++
  2302     07C6  00E2               	movwf	(__pdataBANK2+2)& (0+127)
  2303     07C7  0012               	moviw fsr0++
  2304     07C8  00E3               	movwf	(__pdataBANK2+3)& (0+127)
  2305     07C9  0012               	moviw fsr0++
  2306     07CA  00E4               	movwf	(__pdataBANK2+4)& (0+127)
  2307     07CB  0012               	moviw fsr0++
  2308     07CC  00E5               	movwf	(__pdataBANK2+5)& (0+127)
  2309     07CD  0012               	moviw fsr0++
  2310     07CE  00E6               	movwf	(__pdataBANK2+6)& (0+127)
  2311     07CF  0012               	moviw fsr0++
  2312     07D0  00E7               	movwf	(__pdataBANK2+7)& (0+127)
  2313                           
  2314                           ; Clear objects allocated to BIGRAM
  2315     07D1  3000               	movlw	low (0+8448)
  2316     07D2  0084               	movwf	4
  2317     07D3  3021               	movlw	high (0+8448)
  2318     07D4  0085               	movwf	5
  2319     07D5  3070               	movlw	112
  2320     07D6  00FE               	movwf	btemp
  2321     07D7  3000               	movlw	0
  2322     07D8  00FF               	movwf	btemp+1
  2323     07D9  318E  26BA  3187   	fcall	clear_ram0
  2324                           
  2325                           ; Clear objects allocated to BANK0
  2326     07DC  3054               	movlw	low __pbssBANK0
  2327     07DD  0084               	movwf	4
  2328     07DE  3000               	movlw	high __pbssBANK0
  2329     07DF  0085               	movwf	5
  2330     07E0  3019               	movlw	25
  2331     07E1  00FE               	movwf	btemp
  2332     07E2  3000               	movlw	0
  2333     07E3  00FF               	movwf	btemp+1
  2334     07E4  318E  26BA  3187   	fcall	clear_ram0
  2335                           
  2336                           ; Clear objects allocated to BANK1
  2337     07E7  30A0               	movlw	low __pbssBANK1
  2338     07E8  0084               	movwf	4
  2339     07E9  3000               	movlw	high __pbssBANK1
  2340     07EA  0085               	movwf	5
  2341     07EB  3050               	movlw	80
  2342     07EC  00FE               	movwf	btemp
  2343     07ED  3000               	movlw	0
  2344     07EE  00FF               	movwf	btemp+1
  2345     07EF  318E  26BA  3187   	fcall	clear_ram0
  2346                           
  2347                           ; Clear objects allocated to BANK2
  2348     07F2  3020               	movlw	low __pbssBANK2
  2349     07F3  0084               	movwf	4
  2350     07F4  3001               	movlw	high __pbssBANK2
  2351     07F5  0085               	movwf	5
  2352     07F6  3040               	movlw	64
  2353     07F7  00FE               	movwf	btemp
  2354     07F8  3000               	movlw	0
  2355     07F9  00FF               	movwf	btemp+1
  2356     07FA  318E  26BA  3187   	fcall	clear_ram0
  2357     07FD                     end_of_initialization:	
  2358                           ;End of C runtime variable initialization code
  2359                           
  2360     07FD                     __end_of__initialization:
  2361     07FD  0020               	movlb	0
  2362     07FE  3182  2AF5         	ljmp	_main	;jump to C main() function
  2363                           
  2364                           	psect	bssBANK0
  2365     0054                     __pbssBANK0:
  2366     0054                     _DB2:
  2367     0054                     	ds	4
  2368     0058                     _DY2:
  2369     0058                     	ds	4
  2370     005C                     _Z2:
  2371     005C                     	ds	4
  2372     0060                     _Y2:
  2373     0060                     	ds	4
  2374     0064                     _foodPosition:
  2375     0064                     	ds	1
  2376     0065                     _headPosition:
  2377     0065                     	ds	1
  2378     0066                     _choice:
  2379     0066                     	ds	1
  2380     0067                     _snakeSize:
  2381     0067                     	ds	1
  2382     0068                     _eusartRxLastError:
  2383     0068                     	ds	1
  2384     0069                     _seed:
  2385     0069                     	ds	4
  2386                           
  2387                           	psect	bssBANK1
  2388     00A0                     __pbssBANK1:
  2389     00A0                     _field:
  2390     00A0                     	ds	64
  2391     00E0                     _Y0:
  2392     00E0                     	ds	16
  2393                           
  2394                           	psect	bssBANK2
  2395     0120                     __pbssBANK2:
  2396     0120                     _DW2:
  2397     0120                     	ds	28
  2398     013C                     _matrix:
  2399     013C                     	ds	8
  2400     0144                     _DB1:
  2401     0144                     	ds	7
  2402     014B                     _DY1:
  2403     014B                     	ds	7
  2404     0152                     _Z1:
  2405     0152                     	ds	7
  2406     0159                     _Y1:
  2407     0159                     	ds	7
  2408                           
  2409                           	psect	dataBANK2
  2410     0160                     __pdataBANK2:
  2411     0160                     _mapping:
  2412     0160                     	ds	8
  2413                           
  2414                           	psect	clrtext
  2415     0EBA                     clear_ram0:	
  2416                           ;	Called with FSR0 containing the base address, and
  2417                           ;	btemp/btemp+1 has the size to clear
  2418                           
  2419     0EBA  0064               	clrwdt	;clear the watchdog before getting into this loop
  2420     0EBB                     clrloop0:
  2421     0EBB  0180               	clrf	0	;clear RAM location pointed to by FSR
  2422     0EBC  3101               	addfsr 0,1
  2423     0EBD  3001               	movlw	1
  2424     0EBE  02FE               	subwf	btemp,f
  2425     0EBF  3000               	movlw	0
  2426     0EC0  3BFF               	subwfb	btemp+1,f
  2427     0EC1  087F               	movf	btemp+1,w
  2428     0EC2  047E               	iorwf	btemp,w
  2429     0EC3  1D03               	skipz
  2430     0EC4  2EBB               	goto	clrloop0	;have we reached the end yet?
  2431     0EC5  3400               	retlw	0	;all done for this memory range, return
  2432                           
  2433                           	psect	cstackCOMMON
  2434     0070                     __pcstackCOMMON:
  2435     0070                     ?_EUSART_SetFramingErrorHandler:
  2436     0070                     ?_EUSART_SetOverrunErrorHandler:	
  2437                           ; 1 bytes @ 0x0
  2438                           
  2439     0070                     ?_EUSART_SetErrorHandler:	
  2440                           ; 1 bytes @ 0x0
  2441                           
  2442     0070                     ?_OSCILLATOR_Initialize:	
  2443                           ; 1 bytes @ 0x0
  2444                           
  2445     0070                     ??_OSCILLATOR_Initialize:	
  2446                           ; 1 bytes @ 0x0
  2447                           
  2448     0070                     ?_WDT_Initialize:	
  2449                           ; 1 bytes @ 0x0
  2450                           
  2451     0070                     ??_WDT_Initialize:	
  2452                           ; 1 bytes @ 0x0
  2453                           
  2454     0070                     ?_snake_initiate:	
  2455                           ; 1 bytes @ 0x0
  2456                           
  2457     0070                     ?_initMAX7219:	
  2458                           ; 1 bytes @ 0x0
  2459                           
  2460     0070                     ?_snake_getField:	
  2461                           ; 1 bytes @ 0x0
  2462                           
  2463     0070                     ??_snake_getField:	
  2464                           ; 1 bytes @ 0x0
  2465                           
  2466     0070                     ?_ledSet:	
  2467                           ; 1 bytes @ 0x0
  2468                           
  2469     0070                     ?_ledClear:	
  2470                           ; 1 bytes @ 0x0
  2471                           
  2472     0070                     ?_snake_getFoodPosition:	
  2473                           ; 1 bytes @ 0x0
  2474                           
  2475     0070                     ??_snake_getFoodPosition:	
  2476                           ; 1 bytes @ 0x0
  2477                           
  2478     0070                     ?_sendMatrix:	
  2479                           ; 1 bytes @ 0x0
  2480                           
  2481     0070                     ?_snake_getSurroundings:	
  2482                           ; 1 bytes @ 0x0
  2483                           
  2484     0070                     ??_snake_getSurroundings:	
  2485                           ; 1 bytes @ 0x0
  2486                           
  2487     0070                     ?_ai_getInputField:	
  2488                           ; 1 bytes @ 0x0
  2489                           
  2490     0070                     ??_ai_getInputField:	
  2491                           ; 1 bytes @ 0x0
  2492                           
  2493     0070                     ?_ai_propagate:	
  2494                           ; 1 bytes @ 0x0
  2495                           
  2496     0070                     ?_snake_move:	
  2497                           ; 1 bytes @ 0x0
  2498                           
  2499     0070                     ?_ai_run:	
  2500                           ; 1 bytes @ 0x0
  2501                           
  2502     0070                     ?_eeprom_read:	
  2503                           ; 1 bytes @ 0x0
  2504                           
  2505     0070                     ??_eeprom_read:	
  2506                           ; 1 bytes @ 0x0
  2507                           
  2508     0070                     ?_sigmoid:	
  2509                           ; 1 bytes @ 0x0
  2510                           
  2511     0070                     ??_sigmoid:	
  2512                           ; 1 bytes @ 0x0
  2513                           
  2514     0070                     ?_de_sigmoid:	
  2515                           ; 1 bytes @ 0x0
  2516                           
  2517     0070                     ??_de_sigmoid:	
  2518                           ; 1 bytes @ 0x0
  2519                           
  2520     0070                     ?_EUSART_Initialize:	
  2521                           ; 1 bytes @ 0x0
  2522                           
  2523     0070                     ?_PIN_MANAGER_Initialize:	
  2524                           ; 1 bytes @ 0x0
  2525                           
  2526     0070                     ??_PIN_MANAGER_Initialize:	
  2527                           ; 1 bytes @ 0x0
  2528                           
  2529     0070                     ?_SPI1_Initialize:	
  2530                           ; 1 bytes @ 0x0
  2531                           
  2532     0070                     ??_SPI1_Initialize:	
  2533                           ; 1 bytes @ 0x0
  2534                           
  2535     0070                     ?_SPI1_WriteByte:	
  2536                           ; 1 bytes @ 0x0
  2537                           
  2538     0070                     ??_SPI1_WriteByte:	
  2539                           ; 1 bytes @ 0x0
  2540                           
  2541     0070                     ?_SYSTEM_Initialize:	
  2542                           ; 1 bytes @ 0x0
  2543                           
  2544     0070                     ?_deactivateElevator:	
  2545                           ; 1 bytes @ 0x0
  2546                           
  2547     0070                     ??_deactivateElevator:	
  2548                           ; 1 bytes @ 0x0
  2549                           
  2550     0070                     ?_main:	
  2551                           ; 1 bytes @ 0x0
  2552                           
  2553     0070                     ?_biases1_read:	
  2554                           ; 1 bytes @ 0x0
  2555                           
  2556     0070                     ?_biases2_read:	
  2557                           ; 1 bytes @ 0x0
  2558                           
  2559     0070                     ?___bmul:	
  2560                           ; 1 bytes @ 0x0
  2561                           
  2562     0070                     ?___lmul:	
  2563                           ; 1 bytes @ 0x0
  2564                           
  2565     0070                     SPI1_WriteByte@byte:	
  2566                           ; 4 bytes @ 0x0
  2567                           
  2568     0070                     ledSet@c:	
  2569                           ; 1 bytes @ 0x0
  2570                           
  2571     0070                     ledClear@c:	
  2572                           ; 1 bytes @ 0x0
  2573                           
  2574     0070                     ___bmul@multiplicand:	
  2575                           ; 1 bytes @ 0x0
  2576                           
  2577     0070                     EUSART_SetFramingErrorHandler@interruptHandler:	
  2578                           ; 1 bytes @ 0x0
  2579                           
  2580     0070                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  2581                           ; 2 bytes @ 0x0
  2582                           
  2583     0070                     EUSART_SetErrorHandler@interruptHandler:	
  2584                           ; 2 bytes @ 0x0
  2585                           
  2586     0070                     ___lmul@multiplier:	
  2587                           ; 2 bytes @ 0x0
  2588                           
  2589                           
  2590                           ; 4 bytes @ 0x0
  2591     0070                     	ds	1
  2592     0071                     ??_ledSet:
  2593     0071                     ??_ledClear:	
  2594                           ; 1 bytes @ 0x1
  2595                           
  2596     0071                     ?_txMAX7219:	
  2597                           ; 1 bytes @ 0x1
  2598                           
  2599     0071                     ??___bmul:	
  2600                           ; 1 bytes @ 0x1
  2601                           
  2602     0071                     txMAX7219@dat0:	
  2603                           ; 1 bytes @ 0x1
  2604                           
  2605     0071                     snake_getSurroundings@p:	
  2606                           ; 1 bytes @ 0x1
  2607                           
  2608     0071                     sigmoid@z:	
  2609                           ; 1 bytes @ 0x1
  2610                           
  2611     0071                     de_sigmoid@z:	
  2612                           ; 1 bytes @ 0x1
  2613                           
  2614                           
  2615                           ; 1 bytes @ 0x1
  2616     0071                     	ds	1
  2617     0072                     ??_EUSART_SetFramingErrorHandler:
  2618     0072                     ??_EUSART_SetOverrunErrorHandler:	
  2619                           ; 1 bytes @ 0x2
  2620                           
  2621     0072                     ??_EUSART_SetErrorHandler:	
  2622                           ; 1 bytes @ 0x2
  2623                           
  2624     0072                     ??_EUSART_Initialize:	
  2625                           ; 1 bytes @ 0x2
  2626                           
  2627     0072                     ??_SYSTEM_Initialize:	
  2628                           ; 1 bytes @ 0x2
  2629                           
  2630     0072                     ??_txMAX7219:	
  2631                           ; 1 bytes @ 0x2
  2632                           
  2633     0072                     txMAX7219@addr0:	
  2634                           ; 1 bytes @ 0x2
  2635                           
  2636     0072                     snake_getSurroundings@i:	
  2637                           ; 1 bytes @ 0x2
  2638                           
  2639     0072                     ___bmul@product:	
  2640                           ; 1 bytes @ 0x2
  2641                           
  2642                           
  2643                           ; 1 bytes @ 0x2
  2644     0072                     	ds	1
  2645     0073                     ??_initMAX7219:
  2646     0073                     ??_sendMatrix:	
  2647                           ; 1 bytes @ 0x3
  2648                           
  2649     0073                     ledSet@l:	
  2650                           ; 1 bytes @ 0x3
  2651                           
  2652     0073                     ledClear@l:	
  2653                           ; 1 bytes @ 0x3
  2654                           
  2655     0073                     snake_getSurroundings@i_783:	
  2656                           ; 1 bytes @ 0x3
  2657                           
  2658     0073                     eeprom_read@addr:	
  2659                           ; 1 bytes @ 0x3
  2660                           
  2661     0073                     ___bmul@multiplier:	
  2662                           ; 1 bytes @ 0x3
  2663                           
  2664                           
  2665                           ; 1 bytes @ 0x3
  2666     0073                     	ds	1
  2667     0074                     ?_eeprom_write:
  2668     0074                     ?_weights1_read:	
  2669                           ; 1 bytes @ 0x4
  2670                           
  2671     0074                     ??_biases1_read:	
  2672                           ; 1 bytes @ 0x4
  2673                           
  2674     0074                     ?_weights2_read:	
  2675                           ; 1 bytes @ 0x4
  2676                           
  2677     0074                     ??_biases2_read:	
  2678                           ; 1 bytes @ 0x4
  2679                           
  2680     0074                     sendMatrix@b:	
  2681                           ; 1 bytes @ 0x4
  2682                           
  2683     0074                     snake_getSurroundings@surroundings:	
  2684                           ; 1 bytes @ 0x4
  2685                           
  2686     0074                     weights1_read@add2:	
  2687                           ; 1 bytes @ 0x4
  2688                           
  2689     0074                     biases1_read@add:	
  2690                           ; 1 bytes @ 0x4
  2691                           
  2692     0074                     weights2_read@add2:	
  2693                           ; 1 bytes @ 0x4
  2694                           
  2695     0074                     biases2_read@add:	
  2696                           ; 1 bytes @ 0x4
  2697                           
  2698     0074                     eeprom_write@value:	
  2699                           ; 1 bytes @ 0x4
  2700                           
  2701     0074                     ___lmul@multiplicand:	
  2702                           ; 1 bytes @ 0x4
  2703                           
  2704                           
  2705                           ; 4 bytes @ 0x4
  2706     0074                     	ds	1
  2707     0075                     ??_eeprom_write:
  2708     0075                     ??_weights1_read:	
  2709                           ; 1 bytes @ 0x5
  2710                           
  2711     0075                     ??_weights2_read:	
  2712                           ; 1 bytes @ 0x5
  2713                           
  2714     0075                     sendMatrix@nb:	
  2715                           ; 1 bytes @ 0x5
  2716                           
  2717     0075                     weights2_read@add1:	
  2718                           ; 1 bytes @ 0x5
  2719                           
  2720                           
  2721                           ; 1 bytes @ 0x5
  2722     0075                     	ds	1
  2723     0076                     sendMatrix@j:
  2724     0076                     weights1_read@add1:	
  2725                           ; 1 bytes @ 0x6
  2726                           
  2727                           
  2728                           ; 1 bytes @ 0x6
  2729     0076                     	ds	1
  2730     0077                     ?___wmul:
  2731     0077                     sendMatrix@i:	
  2732                           ; 2 bytes @ 0x7
  2733                           
  2734     0077                     eeprom_write@addr:	
  2735                           ; 1 bytes @ 0x7
  2736                           
  2737     0077                     ___wmul@multiplier:	
  2738                           ; 1 bytes @ 0x7
  2739                           
  2740                           
  2741                           ; 2 bytes @ 0x7
  2742     0077                     	ds	1
  2743     0078                     ?_biases1_write:
  2744     0078                     ?_weights2_write:	
  2745                           ; 1 bytes @ 0x8
  2746                           
  2747     0078                     ?_biases2_write:	
  2748                           ; 1 bytes @ 0x8
  2749                           
  2750     0078                     ??___lmul:	
  2751                           ; 1 bytes @ 0x8
  2752                           
  2753     0078                     biases1_write@val:	
  2754                           ; 1 bytes @ 0x8
  2755                           
  2756     0078                     weights2_write@add2:	
  2757                           ; 1 bytes @ 0x8
  2758                           
  2759     0078                     biases2_write@val:	
  2760                           ; 1 bytes @ 0x8
  2761                           
  2762     0078                     ___lmul@product:	
  2763                           ; 1 bytes @ 0x8
  2764                           
  2765                           
  2766                           ; 4 bytes @ 0x8
  2767     0078                     	ds	1
  2768     0079                     ??_biases1_write:
  2769     0079                     ??_biases2_write:	
  2770                           ; 1 bytes @ 0x9
  2771                           
  2772     0079                     biases1_write@add:	
  2773                           ; 1 bytes @ 0x9
  2774                           
  2775     0079                     weights2_write@val:	
  2776                           ; 1 bytes @ 0x9
  2777                           
  2778     0079                     biases2_write@add:	
  2779                           ; 1 bytes @ 0x9
  2780                           
  2781     0079                     ___wmul@multiplicand:	
  2782                           ; 1 bytes @ 0x9
  2783                           
  2784                           
  2785                           ; 2 bytes @ 0x9
  2786     0079                     	ds	1
  2787     007A                     ??_weights2_write:
  2788     007A                     weights2_write@add1:	
  2789                           ; 1 bytes @ 0xA
  2790                           
  2791                           
  2792                           ; 1 bytes @ 0xA
  2793     007A                     	ds	1
  2794     007B                     ??___wmul:
  2795     007B                     ___wmul@product:	
  2796                           ; 1 bytes @ 0xB
  2797                           
  2798                           
  2799                           ; 2 bytes @ 0xB
  2800     007B                     	ds	1
  2801     007C                     ?_rand:
  2802                           
  2803                           ; 2 bytes @ 0xC
  2804     007C                     	ds	1
  2805     007D                     ??_weights1_write:
  2806     007D                     ??___awdiv:	
  2807                           ; 1 bytes @ 0xD
  2808                           
  2809                           
  2810                           ; 1 bytes @ 0xD
  2811     007D                     	ds	1
  2812                           
  2813                           	psect	cstackBANK0
  2814     0020                     __pcstackBANK0:
  2815     0020                     ??_rand:
  2816     0020                     ?_weights1_write:	
  2817                           ; 1 bytes @ 0x0
  2818                           
  2819     0020                     ?___awdiv:	
  2820                           ; 1 bytes @ 0x0
  2821                           
  2822     0020                     weights1_write@add2:	
  2823                           ; 2 bytes @ 0x0
  2824                           
  2825     0020                     ___awdiv@divisor:	
  2826                           ; 1 bytes @ 0x0
  2827                           
  2828                           
  2829                           ; 2 bytes @ 0x0
  2830     0020                     	ds	1
  2831     0021                     weights1_write@val:
  2832                           
  2833                           ; 1 bytes @ 0x1
  2834     0021                     	ds	1
  2835     0022                     weights1_write@add1:
  2836     0022                     ___awdiv@dividend:	
  2837                           ; 1 bytes @ 0x2
  2838                           
  2839                           
  2840                           ; 2 bytes @ 0x2
  2841     0022                     	ds	2
  2842     0024                     ??_snake_initiate:
  2843     0024                     ___awdiv@counter:	
  2844                           ; 1 bytes @ 0x4
  2845                           
  2846                           
  2847                           ; 1 bytes @ 0x4
  2848     0024                     	ds	1
  2849     0025                     snake_initiate@i:
  2850     0025                     ___awdiv@sign:	
  2851                           ; 1 bytes @ 0x5
  2852                           
  2853                           
  2854                           ; 1 bytes @ 0x5
  2855     0025                     	ds	1
  2856     0026                     ??_snake_move:
  2857     0026                     ___awdiv@quotient:	
  2858                           ; 1 bytes @ 0x6
  2859                           
  2860                           
  2861                           ; 2 bytes @ 0x6
  2862     0026                     	ds	2
  2863     0028                     ??_ai_propagate:
  2864     0028                     ??_ai_run:	
  2865                           ; 1 bytes @ 0x8
  2866                           
  2867     0028                     snake_move@direction:	
  2868                           ; 1 bytes @ 0x8
  2869                           
  2870                           
  2871                           ; 1 bytes @ 0x8
  2872     0028                     	ds	1
  2873     0029                     snake_move@incentive:
  2874                           
  2875                           ; 1 bytes @ 0x9
  2876     0029                     	ds	1
  2877     002A                     snake_move@i:
  2878     002A                     ai_run@i:	
  2879                           ; 1 bytes @ 0xA
  2880                           
  2881                           
  2882                           ; 1 bytes @ 0xA
  2883     002A                     	ds	1
  2884     002B                     ai_run@i_899:
  2885                           
  2886                           ; 1 bytes @ 0xB
  2887     002B                     	ds	1
  2888     002C                     ai_run@i_903:
  2889                           
  2890                           ; 1 bytes @ 0xC
  2891     002C                     	ds	1
  2892     002D                     ai_run@i_905:
  2893                           
  2894                           ; 1 bytes @ 0xD
  2895     002D                     	ds	1
  2896     002E                     ai_run@z:
  2897                           
  2898                           ; 2 bytes @ 0xE
  2899     002E                     	ds	2
  2900     0030                     ai_run@j:
  2901                           
  2902                           ; 1 bytes @ 0x10
  2903     0030                     	ds	1
  2904     0031                     ai_run@j_901:
  2905                           
  2906                           ; 1 bytes @ 0x11
  2907     0031                     	ds	4
  2908     0035                     ai_propagate@S:
  2909                           
  2910                           ; 4 bytes @ 0x15
  2911     0035                     	ds	4
  2912     0039                     ai_propagate@incentive:
  2913                           
  2914                           ; 1 bytes @ 0x19
  2915     0039                     	ds	1
  2916     003A                     ai_propagate@i:
  2917                           
  2918                           ; 1 bytes @ 0x1A
  2919     003A                     	ds	1
  2920     003B                     ai_propagate@i_910:
  2921                           
  2922                           ; 1 bytes @ 0x1B
  2923     003B                     	ds	1
  2924     003C                     ai_propagate@i_912:
  2925                           
  2926                           ; 1 bytes @ 0x1C
  2927     003C                     	ds	1
  2928     003D                     ai_propagate@i_914:
  2929                           
  2930                           ; 1 bytes @ 0x1D
  2931     003D                     	ds	1
  2932     003E                     ai_propagate@j_919:
  2933                           
  2934                           ; 1 bytes @ 0x1E
  2935     003E                     	ds	1
  2936     003F                     ai_propagate@j:
  2937                           
  2938                           ; 1 bytes @ 0x1F
  2939     003F                     	ds	1
  2940     0040                     ai_propagate@i_921:
  2941                           
  2942                           ; 1 bytes @ 0x20
  2943     0040                     	ds	1
  2944     0041                     ai_propagate@i_923:
  2945                           
  2946                           ; 1 bytes @ 0x21
  2947     0041                     	ds	1
  2948     0042                     ai_propagate@j_917:
  2949                           
  2950                           ; 1 bytes @ 0x22
  2951     0042                     	ds	1
  2952     0043                     ai_propagate@k_918:
  2953                           
  2954                           ; 1 bytes @ 0x23
  2955     0043                     	ds	1
  2956     0044                     ai_propagate@j_913:
  2957                           
  2958                           ; 1 bytes @ 0x24
  2959     0044                     	ds	1
  2960     0045                     ai_propagate@k:
  2961                           
  2962                           ; 1 bytes @ 0x25
  2963     0045                     	ds	1
  2964     0046                     ai_propagate@j_920:
  2965                           
  2966                           ; 1 bytes @ 0x26
  2967     0046                     	ds	1
  2968     0047                     ai_propagate@j_922:
  2969                           
  2970                           ; 1 bytes @ 0x27
  2971     0047                     	ds	1
  2972     0048                     ai_propagate@dz:
  2973                           
  2974                           ; 2 bytes @ 0x28
  2975     0048                     	ds	2
  2976     004A                     ??_main:
  2977                           
  2978                           ; 1 bytes @ 0x2A
  2979     004A                     	ds	3
  2980     004D                     main@field:
  2981                           
  2982                           ; 1 bytes @ 0x2D
  2983     004D                     	ds	1
  2984     004E                     main@foodPosition:
  2985                           
  2986                           ; 1 bytes @ 0x2E
  2987     004E                     	ds	1
  2988     004F                     main@foodPosition_661:
  2989                           
  2990                           ; 1 bytes @ 0x2F
  2991     004F                     	ds	1
  2992     0050                     main@i:
  2993                           
  2994                           ; 1 bytes @ 0x30
  2995     0050                     	ds	1
  2996     0051                     main@j:
  2997                           
  2998                           ; 1 bytes @ 0x31
  2999     0051                     	ds	1
  3000     0052                     main@i_659:
  3001                           
  3002                           ; 1 bytes @ 0x32
  3003     0052                     	ds	1
  3004     0053                     main@j_660:
  3005                           
  3006                           ; 1 bytes @ 0x33
  3007     0053                     	ds	1
  3008                           
  3009                           	psect	maintext
  3010     02F5                     __pmaintext:	
  3011 ;;
  3012 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  3013 ;;
  3014 ;; *************** function _main *****************
  3015 ;; Defined at:
  3016 ;;		line 85 in file "main.c"
  3017 ;; Parameters:    Size  Location     Type
  3018 ;;		None
  3019 ;; Auto vars:     Size  Location     Type
  3020 ;;  j               1   51[BANK0 ] unsigned char 
  3021 ;;  j               1   49[BANK0 ] unsigned char 
  3022 ;;  i               1   50[BANK0 ] unsigned char 
  3023 ;;  foodPosition    1   47[BANK0 ] unsigned char 
  3024 ;;  i               1   48[BANK0 ] unsigned char 
  3025 ;;  foodPosition    1   46[BANK0 ] unsigned char 
  3026 ;;  field           1   45[BANK0 ] PTR unsigned char 
  3027 ;;		 -> field(64), 
  3028 ;;  d               1    0        unsigned char 
  3029 ;; Return value:  Size  Location     Type
  3030 ;;                  1    wreg      void 
  3031 ;; Registers used:
  3032 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3033 ;; Tracked objects:
  3034 ;;		On entry : B1F/0
  3035 ;;		On exit  : 0/0
  3036 ;;		Unchanged: 0/0
  3037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3038 ;;      Params:         0       0       0       0       0       0
  3039 ;;      Locals:         0       7       0       0       0       0
  3040 ;;      Temps:          0       3       0       0       0       0
  3041 ;;      Totals:         0      10       0       0       0       0
  3042 ;;Total ram usage:       10 bytes
  3043 ;; Hardware stack levels required when called: 4
  3044 ;; This function calls:
  3045 ;;		_SYSTEM_Initialize
  3046 ;;		_ai_getInputField
  3047 ;;		_ai_propagate
  3048 ;;		_ai_run
  3049 ;;		_deactivateElevator
  3050 ;;		_initMAX7219
  3051 ;;		_ledClear
  3052 ;;		_ledSet
  3053 ;;		_sendMatrix
  3054 ;;		_snake_getField
  3055 ;;		_snake_getFoodPosition
  3056 ;;		_snake_getSurroundings
  3057 ;;		_snake_initiate
  3058 ;;		_snake_move
  3059 ;; This function is called by:
  3060 ;;		Startup code after reset
  3061 ;; This function uses a non-reentrant model
  3062 ;;
  3063                           
  3064     02F5                     _main:	
  3065                           ;psect for function _main
  3066                           
  3067     02F5                     l3206:	
  3068                           ;incstack = 0
  3069                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3070                           
  3071                           
  3072                           ;main.c: 88:     SYSTEM_Initialize();
  3073     02F5  318E  26FD  3182   	fcall	_SYSTEM_Initialize
  3074     02F8                     l3208:
  3075                           
  3076                           ;main.c: 105:     deactivateElevator();
  3077     02F8  318E  26D3  3182   	fcall	_deactivateElevator
  3078     02FB                     l3210:
  3079                           
  3080                           ;main.c: 106:     snake_initiate();
  3081     02FB  3180  200A  3182   	fcall	_snake_initiate
  3082     02FE                     l3212:
  3083                           
  3084                           ;main.c: 108:     initMAX7219();
  3085     02FE  3180  20F3  3182   	fcall	_initMAX7219
  3086     0301                     l3214:
  3087                           
  3088                           ;main.c: 158:     uint8_t* field = snake_getField();
  3089     0301  318E  2665  3182   	fcall	_snake_getField
  3090     0304  0020               	movlb	0	; select bank0
  3091     0305  00CD               	movwf	main@field
  3092     0306                     l3216:
  3093                           
  3094                           ;main.c: 160:     for(uint8_t i = 0; i < 8; i++){
  3095     0306  01D0               	clrf	main@i
  3096     0307                     l3222:
  3097                           
  3098                           ;main.c: 161:         for(uint8_t j = 0; j < 8; j++){
  3099     0307  01D1               	clrf	main@j
  3100     0308                     l3228:
  3101                           
  3102                           ;main.c: 162:             if(field[i+j*8]>0){
  3103     0308  0851               	movf	main@j,w
  3104     0309  00CA               	movwf	??_main
  3105     030A  3002               	movlw	2
  3106     030B                     u2115:
  3107     030B  35CA               	lslf	??_main,f
  3108     030C  3EFF               	addlw	-1
  3109     030D  1D03               	skipz
  3110     030E  2B0B               	goto	u2115
  3111     030F  354A               	lslf	??_main,w
  3112     0310  074D               	addwf	main@field,w
  3113     0311  00CB               	movwf	??_main+1
  3114     0312  0850               	movf	main@i,w
  3115     0313  074B               	addwf	??_main+1,w
  3116     0314  00CC               	movwf	??_main+2
  3117     0315  084C               	movf	??_main+2,w
  3118     0316  0086               	movwf	6
  3119     0317  0187               	clrf	7
  3120     0318  0801               	movf	1,w
  3121     0319  1903               	btfsc	3,2
  3122     031A  2B1C               	goto	u2121
  3123     031B  2B1D               	goto	u2120
  3124     031C                     u2121:
  3125     031C  2B24               	goto	l3232
  3126     031D                     u2120:
  3127     031D                     l3230:
  3128                           
  3129                           ;main.c: 163:                 ledSet(i,j);
  3130     031D  0851               	movf	main@j,w
  3131     031E  00F0               	movwf	ledSet@c
  3132     031F  0850               	movf	main@i,w
  3133     0320  318F  273E  3182   	fcall	_ledSet
  3134                           
  3135                           ;main.c: 164:             } else{
  3136     0323  2B2A               	goto	l3234
  3137     0324                     l3232:
  3138                           
  3139                           ;main.c: 165:                 ledClear(i,j);
  3140     0324  0851               	movf	main@j,w
  3141     0325  00F0               	movwf	ledClear@c
  3142     0326  0850               	movf	main@i,w
  3143     0327  318F  2750  3182   	fcall	_ledClear
  3144     032A                     l3234:
  3145                           
  3146                           ;main.c: 167:         }
  3147     032A  3001               	movlw	1
  3148     032B  0020               	movlb	0	; select bank0
  3149     032C  00CA               	movwf	??_main
  3150     032D  084A               	movf	??_main,w
  3151     032E  07D1               	addwf	main@j,f
  3152     032F                     l3236:
  3153     032F  3008               	movlw	8
  3154     0330  0251               	subwf	main@j,w
  3155     0331  1C03               	skipc
  3156     0332  2B34               	goto	u2131
  3157     0333  2B35               	goto	u2130
  3158     0334                     u2131:
  3159     0334  2B08               	goto	l3228
  3160     0335                     u2130:
  3161     0335                     l3238:
  3162                           
  3163                           ;main.c: 168:     }
  3164     0335  3001               	movlw	1
  3165     0336  00CA               	movwf	??_main
  3166     0337  084A               	movf	??_main,w
  3167     0338  07D0               	addwf	main@i,f
  3168     0339                     l3240:
  3169     0339  3008               	movlw	8
  3170     033A  0250               	subwf	main@i,w
  3171     033B  1C03               	skipc
  3172     033C  2B3E               	goto	u2141
  3173     033D  2B3F               	goto	u2140
  3174     033E                     u2141:
  3175     033E  2B07               	goto	l3222
  3176     033F                     u2140:
  3177     033F                     l3242:
  3178                           
  3179                           ;main.c: 169:     uint8_t foodPosition = snake_getFoodPosition();
  3180     033F  318E  2667  3182   	fcall	_snake_getFoodPosition
  3181     0342  0020               	movlb	0	; select bank0
  3182     0343  00CE               	movwf	main@foodPosition
  3183     0344                     l3244:
  3184                           
  3185                           ;main.c: 170:     ledSet(foodPosition&0x03, foodPosition>>3);
  3186     0344  084E               	movf	main@foodPosition,w
  3187     0345  00CA               	movwf	??_main
  3188     0346  3003               	movlw	3
  3189     0347                     u2155:
  3190     0347  36CA               	lsrf	??_main,f
  3191     0348  0B89               	decfsz	9,f
  3192     0349  2B47               	goto	u2155
  3193     034A  084A               	movf	??_main,w
  3194     034B  00F0               	movwf	ledSet@c
  3195     034C  084E               	movf	main@foodPosition,w
  3196     034D  3903               	andlw	3
  3197     034E  318F  273E  3182   	fcall	_ledSet
  3198     0351                     l3246:
  3199                           
  3200                           ;main.c: 171:     sendMatrix();
  3201     0351  3180  205C  3182   	fcall	_sendMatrix
  3202     0354                     l3248:
  3203     0354                     l3250:
  3204                           
  3205                           ;main.c: 184:     {;main.c: 186:         _delay((unsigned long)((100)*(8000000/4000.0)))
      +                          ;
  3206     0354  3002               	movlw	2
  3207     0355  0020               	movlb	0	; select bank0
  3208     0356  00CB               	movwf	??_main+1
  3209     0357  3004               	movlw	4
  3210     0358  00CA               	movwf	??_main
  3211     0359  30BA               	movlw	186
  3212     035A                     u2287:
  3213     035A  0B89               	decfsz	9,f
  3214     035B  2B5A               	goto	u2287
  3215     035C  0BCA               	decfsz	??_main,f
  3216     035D  2B5A               	goto	u2287
  3217     035E  0BCB               	decfsz	??_main+1,f
  3218     035F  2B5A               	goto	u2287
  3219     0360  0000               	nop
  3220     0361                     l3252:
  3221                           
  3222                           ;main.c: 187:         snake_getSurroundings(ai_getInputField());
  3223     0361  318E  2663  3182   	fcall	_ai_getInputField
  3224     0364  3182  223F  3182   	fcall	_snake_getSurroundings
  3225     0367                     l3254:
  3226                           
  3227                           ;main.c: 188:         ai_propagate(snake_move(ai_run()));
  3228     0367  3183  23C2  3182   	fcall	_ai_run
  3229     036A  3181  2191  3182   	fcall	_snake_move
  3230     036D  3184  24D1  3182   	fcall	_ai_propagate
  3231     0370                     l3256:
  3232                           
  3233                           ;main.c: 189:         for(uint8_t i = 0; i < 8; i++){
  3234     0370  0020               	movlb	0	; select bank0
  3235     0371  01D2               	clrf	main@i_659
  3236     0372                     l3262:
  3237                           
  3238                           ;main.c: 190:             for(uint8_t j = 0; j < 8; j++){
  3239     0372  01D3               	clrf	main@j_660
  3240     0373                     l3268:
  3241                           
  3242                           ;main.c: 191:                 if(field[i+j*8]>0){
  3243     0373  0853               	movf	main@j_660,w
  3244     0374  00CA               	movwf	??_main
  3245     0375  3002               	movlw	2
  3246     0376                     u2165:
  3247     0376  35CA               	lslf	??_main,f
  3248     0377  3EFF               	addlw	-1
  3249     0378  1D03               	skipz
  3250     0379  2B76               	goto	u2165
  3251     037A  354A               	lslf	??_main,w
  3252     037B  074D               	addwf	main@field,w
  3253     037C  00CB               	movwf	??_main+1
  3254     037D  0852               	movf	main@i_659,w
  3255     037E  074B               	addwf	??_main+1,w
  3256     037F  00CC               	movwf	??_main+2
  3257     0380  084C               	movf	??_main+2,w
  3258     0381  0086               	movwf	6
  3259     0382  0187               	clrf	7
  3260     0383  0801               	movf	1,w
  3261     0384  1903               	btfsc	3,2
  3262     0385  2B87               	goto	u2171
  3263     0386  2B88               	goto	u2170
  3264     0387                     u2171:
  3265     0387  2B8F               	goto	l3272
  3266     0388                     u2170:
  3267     0388                     l3270:
  3268                           
  3269                           ;main.c: 192:                     ledSet(i,j);
  3270     0388  0853               	movf	main@j_660,w
  3271     0389  00F0               	movwf	ledSet@c
  3272     038A  0852               	movf	main@i_659,w
  3273     038B  318F  273E  3182   	fcall	_ledSet
  3274                           
  3275                           ;main.c: 193:                 } else{
  3276     038E  2B95               	goto	l3274
  3277     038F                     l3272:
  3278                           
  3279                           ;main.c: 194:                     ledClear(i,j);
  3280     038F  0853               	movf	main@j_660,w
  3281     0390  00F0               	movwf	ledClear@c
  3282     0391  0852               	movf	main@i_659,w
  3283     0392  318F  2750  3182   	fcall	_ledClear
  3284     0395                     l3274:
  3285                           
  3286                           ;main.c: 196:             }
  3287     0395  3001               	movlw	1
  3288     0396  0020               	movlb	0	; select bank0
  3289     0397  00CA               	movwf	??_main
  3290     0398  084A               	movf	??_main,w
  3291     0399  07D3               	addwf	main@j_660,f
  3292     039A                     l3276:
  3293     039A  3008               	movlw	8
  3294     039B  0253               	subwf	main@j_660,w
  3295     039C  1C03               	skipc
  3296     039D  2B9F               	goto	u2181
  3297     039E  2BA0               	goto	u2180
  3298     039F                     u2181:
  3299     039F  2B73               	goto	l3268
  3300     03A0                     u2180:
  3301     03A0                     l3278:
  3302                           
  3303                           ;main.c: 197:         }
  3304     03A0  3001               	movlw	1
  3305     03A1  00CA               	movwf	??_main
  3306     03A2  084A               	movf	??_main,w
  3307     03A3  07D2               	addwf	main@i_659,f
  3308     03A4                     l3280:
  3309     03A4  3008               	movlw	8
  3310     03A5  0252               	subwf	main@i_659,w
  3311     03A6  1C03               	skipc
  3312     03A7  2BA9               	goto	u2191
  3313     03A8  2BAA               	goto	u2190
  3314     03A9                     u2191:
  3315     03A9  2B72               	goto	l3262
  3316     03AA                     u2190:
  3317     03AA                     l3282:
  3318                           
  3319                           ;main.c: 198:         uint8_t foodPosition = snake_getFoodPosition();
  3320     03AA  318E  2667  3182   	fcall	_snake_getFoodPosition
  3321     03AD  0020               	movlb	0	; select bank0
  3322     03AE  00CF               	movwf	main@foodPosition_661
  3323     03AF                     l3284:
  3324                           
  3325                           ;main.c: 199:         ledSet(foodPosition&0x03, foodPosition>>3);
  3326     03AF  084F               	movf	main@foodPosition_661,w
  3327     03B0  00CA               	movwf	??_main
  3328     03B1  3003               	movlw	3
  3329     03B2                     u2205:
  3330     03B2  36CA               	lsrf	??_main,f
  3331     03B3  0B89               	decfsz	9,f
  3332     03B4  2BB2               	goto	u2205
  3333     03B5  084A               	movf	??_main,w
  3334     03B6  00F0               	movwf	ledSet@c
  3335     03B7  084F               	movf	main@foodPosition_661,w
  3336     03B8  3903               	andlw	3
  3337     03B9  318F  273E  3182   	fcall	_ledSet
  3338     03BC                     l3286:
  3339                           
  3340                           ;main.c: 200:         sendMatrix();
  3341     03BC  3180  205C  3182   	fcall	_sendMatrix
  3342     03BF  2B54               	goto	l3250
  3343     03C0  3180  2802         	ljmp	start
  3344     03C2                     __end_of_main:
  3345                           
  3346                           	psect	text1
  3347     0191                     __ptext1:	
  3348 ;; *************** function _snake_move *****************
  3349 ;; Defined at:
  3350 ;;		line 27 in file "snake.c"
  3351 ;; Parameters:    Size  Location     Type
  3352 ;;  direction       1    wreg     unsigned char 
  3353 ;; Auto vars:     Size  Location     Type
  3354 ;;  direction       1    8[BANK0 ] unsigned char 
  3355 ;;  i               1   10[BANK0 ] unsigned char 
  3356 ;;  incentive       1    9[BANK0 ] char 
  3357 ;; Return value:  Size  Location     Type
  3358 ;;                  1    wreg      char 
  3359 ;; Registers used:
  3360 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3361 ;; Tracked objects:
  3362 ;;		On entry : 0/0
  3363 ;;		On exit  : 0/0
  3364 ;;		Unchanged: 0/0
  3365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3366 ;;      Params:         0       0       0       0       0       0
  3367 ;;      Locals:         0       3       0       0       0       0
  3368 ;;      Temps:          0       2       0       0       0       0
  3369 ;;      Totals:         0       5       0       0       0       0
  3370 ;;Total ram usage:        5 bytes
  3371 ;; Hardware stack levels used: 1
  3372 ;; Hardware stack levels required when called: 3
  3373 ;; This function calls:
  3374 ;;		_rand
  3375 ;;		_snake_initiate
  3376 ;; This function is called by:
  3377 ;;		_main
  3378 ;; This function uses a non-reentrant model
  3379 ;;
  3380                           
  3381     0191                     _snake_move:	
  3382                           ;psect for function _snake_move
  3383                           
  3384                           
  3385                           ;incstack = 0
  3386                           ; Regs used in _snake_move: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3387                           ;snake_move@direction stored from wreg
  3388     0191  0020               	movlb	0	; select bank0
  3389     0192  00A8               	movwf	snake_move@direction
  3390     0193                     l2908:
  3391                           
  3392                           ;snake.c: 28:     for(uint8_t i = 0; i < 64; i++){
  3393     0193  01AA               	clrf	snake_move@i
  3394     0194                     l2914:
  3395                           
  3396                           ;snake.c: 29:         if(field[i] > 0){
  3397     0194  082A               	movf	snake_move@i,w
  3398     0195  3EA0               	addlw	(low (_field| 0))& (0+255)
  3399     0196  0086               	movwf	6
  3400     0197  0187               	clrf	7
  3401     0198  0801               	movf	1,w
  3402     0199  1903               	btfsc	3,2
  3403     019A  299C               	goto	u1761
  3404     019B  299D               	goto	u1760
  3405     019C                     u1761:
  3406     019C  29A3               	goto	l2918
  3407     019D                     u1760:
  3408     019D                     l2916:
  3409                           
  3410                           ;snake.c: 30:             field[i]--;
  3411     019D  082A               	movf	snake_move@i,w
  3412     019E  3EA0               	addlw	(low (_field| 0))& (0+255)
  3413     019F  0086               	movwf	6
  3414     01A0  0187               	clrf	7
  3415     01A1  3001               	movlw	1
  3416     01A2  0281               	subwf	1,f
  3417     01A3                     l2918:
  3418                           
  3419                           ;snake.c: 32:     }
  3420     01A3  3001               	movlw	1
  3421     01A4  00A6               	movwf	??_snake_move
  3422     01A5  0826               	movf	??_snake_move,w
  3423     01A6  07AA               	addwf	snake_move@i,f
  3424     01A7                     l2920:
  3425     01A7  3040               	movlw	64
  3426     01A8  022A               	subwf	snake_move@i,w
  3427     01A9  1C03               	skipc
  3428     01AA  29AC               	goto	u1771
  3429     01AB  29AD               	goto	u1770
  3430     01AC                     u1771:
  3431     01AC  2994               	goto	l2914
  3432     01AD                     u1770:
  3433     01AD                     l2922:
  3434                           
  3435                           ;snake.c: 33:     int8_t incentive = 0;
  3436     01AD  01A9               	clrf	snake_move@incentive
  3437     01AE                     l2924:
  3438                           
  3439                           ;snake.c: 34:     direction &= 0x03;
  3440     01AE  3003               	movlw	3
  3441     01AF  00A6               	movwf	??_snake_move
  3442     01B0  0826               	movf	??_snake_move,w
  3443     01B1  05A8               	andwf	snake_move@direction,f
  3444                           
  3445                           ;snake.c: 35:     switch(direction){
  3446     01B2  29EF               	goto	l2952
  3447     01B3                     l2926:
  3448                           
  3449                           ;snake.c: 37:             if((headPosition&0x07) == 0){
  3450     01B3  0865               	movf	_headPosition,w
  3451     01B4  3907               	andlw	7
  3452     01B5  1D03               	btfss	3,2
  3453     01B6  29B8               	goto	u1781
  3454     01B7  29B9               	goto	u1780
  3455     01B8                     u1781:
  3456     01B8  29BC               	goto	l2930
  3457     01B9                     u1780:
  3458     01B9                     l2928:
  3459                           
  3460                           ;snake.c: 38:                 incentive = -1;
  3461     01B9  01A9               	clrf	snake_move@incentive
  3462     01BA  03A9               	decf	snake_move@incentive,f
  3463                           
  3464                           ;snake.c: 39:             } else{
  3465     01BB  2A05               	goto	l2954
  3466     01BC                     l2930:
  3467                           
  3468                           ;snake.c: 40:                 headPosition--;
  3469     01BC  3001               	movlw	1
  3470     01BD  02E5               	subwf	_headPosition,f
  3471     01BE  2A05               	goto	l2954
  3472     01BF                     l2932:
  3473                           
  3474                           ;snake.c: 44:             if((headPosition&0x07) == 7){
  3475     01BF  3007               	movlw	7
  3476     01C0  0565               	andwf	_headPosition,w
  3477     01C1  00A6               	movwf	??_snake_move
  3478     01C2  3007               	movlw	7
  3479     01C3  0626               	xorwf	??_snake_move,w
  3480     01C4  1D03               	btfss	3,2
  3481     01C5  29C7               	goto	u1791
  3482     01C6  29C8               	goto	u1790
  3483     01C7                     u1791:
  3484     01C7  29C9               	goto	l2936
  3485     01C8                     u1790:
  3486     01C8  29B9               	goto	l2928
  3487     01C9                     l2936:
  3488                           
  3489                           ;snake.c: 47:                 headPosition++;
  3490     01C9  3001               	movlw	1
  3491     01CA  00A6               	movwf	??_snake_move
  3492     01CB  0826               	movf	??_snake_move,w
  3493     01CC  07E5               	addwf	_headPosition,f
  3494     01CD  2A05               	goto	l2954
  3495     01CE                     l2938:
  3496                           
  3497                           ;snake.c: 51:             if((headPosition>>3) == 0){
  3498     01CE  0865               	movf	_headPosition,w
  3499     01CF  00A6               	movwf	??_snake_move
  3500     01D0  3003               	movlw	3
  3501     01D1                     u1805:
  3502     01D1  36A6               	lsrf	??_snake_move,f
  3503     01D2  0B89               	decfsz	9,f
  3504     01D3  29D1               	goto	u1805
  3505     01D4  0826               	movf	??_snake_move,w
  3506     01D5  1D03               	btfss	3,2
  3507     01D6  29D8               	goto	u1811
  3508     01D7  29D9               	goto	u1810
  3509     01D8                     u1811:
  3510     01D8  29DA               	goto	l2942
  3511     01D9                     u1810:
  3512     01D9  29B9               	goto	l2928
  3513     01DA                     l2942:
  3514                           
  3515                           ;snake.c: 54:                 headPosition -= 8;
  3516     01DA  3008               	movlw	8
  3517     01DB  02E5               	subwf	_headPosition,f
  3518     01DC  2A05               	goto	l2954
  3519     01DD                     l2944:
  3520                           
  3521                           ;snake.c: 58:             if((headPosition>>3) == 7){
  3522     01DD  0865               	movf	_headPosition,w
  3523     01DE  00A6               	movwf	??_snake_move
  3524     01DF  3003               	movlw	3
  3525     01E0                     u1825:
  3526     01E0  36A6               	lsrf	??_snake_move,f
  3527     01E1  0B89               	decfsz	9,f
  3528     01E2  29E0               	goto	u1825
  3529     01E3  3007               	movlw	7
  3530     01E4  0626               	xorwf	??_snake_move,w
  3531     01E5  1D03               	btfss	3,2
  3532     01E6  29E8               	goto	u1831
  3533     01E7  29E9               	goto	u1830
  3534     01E8                     u1831:
  3535     01E8  29EA               	goto	l2948
  3536     01E9                     u1830:
  3537     01E9  29B9               	goto	l2928
  3538     01EA                     l2948:
  3539                           
  3540                           ;snake.c: 61:                 headPosition += 8;
  3541     01EA  3008               	movlw	8
  3542     01EB  00A6               	movwf	??_snake_move
  3543     01EC  0826               	movf	??_snake_move,w
  3544     01ED  07E5               	addwf	_headPosition,f
  3545     01EE  2A05               	goto	l2954
  3546     01EF                     l2952:
  3547     01EF  0828               	movf	snake_move@direction,w
  3548     01F0  00A6               	movwf	??_snake_move
  3549     01F1  01A7               	clrf	??_snake_move+1
  3550                           
  3551                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3552                           ; Switch size 1, requested type "simple"
  3553                           ; Number of cases is 1, Range of values is 0 to 0
  3554                           ; switch strategies available:
  3555                           ; Name         Instructions Cycles
  3556                           ; simple_byte            4     3 (average)
  3557                           ; direct_byte            8     6 (fixed)
  3558                           ; jumptable            260     6 (fixed)
  3559                           ;	Chosen strategy is simple_byte
  3560     01F2  0827               	movf	??_snake_move+1,w
  3561     01F3  3A00               	xorlw	0	; case 0
  3562     01F4  1903               	skipnz
  3563     01F5  29F7               	goto	l3410
  3564     01F6  2A05               	goto	l2954
  3565     01F7                     l3410:
  3566                           
  3567                           ; Switch size 1, requested type "simple"
  3568                           ; Number of cases is 4, Range of values is 0 to 3
  3569                           ; switch strategies available:
  3570                           ; Name         Instructions Cycles
  3571                           ; simple_byte           13     7 (average)
  3572                           ; direct_byte           14     6 (fixed)
  3573                           ; jumptable            260     6 (fixed)
  3574                           ;	Chosen strategy is simple_byte
  3575     01F7  0826               	movf	??_snake_move,w
  3576     01F8  3A00               	xorlw	0	; case 0
  3577     01F9  1903               	skipnz
  3578     01FA  29B3               	goto	l2926
  3579     01FB  3A01               	xorlw	1	; case 1
  3580     01FC  1903               	skipnz
  3581     01FD  29BF               	goto	l2932
  3582     01FE  3A03               	xorlw	3	; case 2
  3583     01FF  1903               	skipnz
  3584     0200  29CE               	goto	l2938
  3585     0201  3A01               	xorlw	1	; case 3
  3586     0202  1903               	skipnz
  3587     0203  29DD               	goto	l2944
  3588     0204  2A05               	goto	l2954
  3589     0205                     l2954:
  3590                           
  3591                           ;snake.c: 65:     if(incentive == -1){
  3592     0205  0A29               	incf	snake_move@incentive,w
  3593     0206  1D03               	btfss	3,2
  3594     0207  2A09               	goto	u1841
  3595     0208  2A0A               	goto	u1840
  3596     0209                     u1841:
  3597     0209  2A0E               	goto	l2958
  3598     020A                     u1840:
  3599     020A                     l2956:
  3600                           
  3601                           ;snake.c: 66:         snake_initiate();
  3602     020A  3180  200A  3181   	fcall	_snake_initiate
  3603                           
  3604                           ;snake.c: 67:     } else if(field[headPosition] > 0){
  3605     020D  2A3C               	goto	l2976
  3606     020E                     l2958:
  3607     020E  0865               	movf	_headPosition,w
  3608     020F  3EA0               	addlw	(low (_field| 0))& (0+255)
  3609     0210  0086               	movwf	6
  3610     0211  0187               	clrf	7
  3611     0212  0801               	movf	1,w
  3612     0213  1903               	btfsc	3,2
  3613     0214  2A16               	goto	u1851
  3614     0215  2A17               	goto	u1850
  3615     0216                     u1851:
  3616     0216  2A1A               	goto	l2964
  3617     0217                     u1850:
  3618     0217                     l2960:
  3619                           
  3620                           ;snake.c: 68:         incentive = -1;
  3621     0217  01A9               	clrf	snake_move@incentive
  3622     0218  03A9               	decf	snake_move@incentive,f
  3623     0219  2A0A               	goto	l2956
  3624     021A                     l2964:
  3625                           
  3626                           ;snake.c: 71:         if(headPosition == foodPosition){
  3627     021A  0865               	movf	_headPosition,w
  3628     021B  0664               	xorwf	_foodPosition,w
  3629     021C  1D03               	skipz
  3630     021D  2A1F               	goto	u1861
  3631     021E  2A20               	goto	u1860
  3632     021F                     u1861:
  3633     021F  2A36               	goto	l2974
  3634     0220                     u1860:
  3635     0220                     l2966:
  3636                           
  3637                           ;snake.c: 72:             incentive = 1;
  3638     0220  01A9               	clrf	snake_move@incentive
  3639     0221  0AA9               	incf	snake_move@incentive,f
  3640     0222                     l2968:
  3641                           
  3642                           ;snake.c: 73:             snakeSize++;
  3643     0222  3001               	movlw	1
  3644     0223  00A6               	movwf	??_snake_move
  3645     0224  0826               	movf	??_snake_move,w
  3646     0225  07E7               	addwf	_snakeSize,f
  3647     0226                     l2970:
  3648                           
  3649                           ;snake.c: 75:                 foodPosition = ((uint8_t)rand())&0x1f;
  3650     0226  3180  20BE  3181   	fcall	_rand
  3651     0229  087C               	movf	?_rand,w
  3652     022A  391F               	andlw	31
  3653     022B  0020               	movlb	0	; select bank0
  3654     022C  00E4               	movwf	_foodPosition
  3655     022D                     l2972:
  3656                           
  3657                           ;snake.c: 76:             }while(field[foodPosition] > 0);
  3658     022D  0864               	movf	_foodPosition,w
  3659     022E  3EA0               	addlw	(low (_field| 0))& (0+255)
  3660     022F  0086               	movwf	6
  3661     0230  0187               	clrf	7
  3662     0231  0801               	movf	1,w
  3663     0232  1D03               	btfss	3,2
  3664     0233  2A35               	goto	u1871
  3665     0234  2A36               	goto	u1870
  3666     0235                     u1871:
  3667     0235  2A26               	goto	l2970
  3668     0236                     u1870:
  3669     0236                     l2974:
  3670                           
  3671                           ;snake.c: 78:         field[headPosition] = snakeSize;
  3672     0236  0865               	movf	_headPosition,w
  3673     0237  3EA0               	addlw	(low (_field| 0))& (0+255)
  3674     0238  0086               	movwf	6
  3675     0239  0187               	clrf	7
  3676     023A  0867               	movf	_snakeSize,w
  3677     023B  0081               	movwf	1
  3678     023C                     l2976:
  3679                           
  3680                           ;snake.c: 80:     return incentive;
  3681     023C  0020               	movlb	0	; select bank0
  3682     023D  0829               	movf	snake_move@incentive,w
  3683     023E                     l442:
  3684     023E  0008               	return
  3685     023F                     __end_of_snake_move:
  3686                           
  3687                           	psect	text2
  3688     000A                     __ptext2:	
  3689 ;; *************** function _snake_initiate *****************
  3690 ;; Defined at:
  3691 ;;		line 17 in file "snake.c"
  3692 ;; Parameters:    Size  Location     Type
  3693 ;;		None
  3694 ;; Auto vars:     Size  Location     Type
  3695 ;;  i               1    5[BANK0 ] unsigned char 
  3696 ;; Return value:  Size  Location     Type
  3697 ;;                  1    wreg      void 
  3698 ;; Registers used:
  3699 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3700 ;; Tracked objects:
  3701 ;;		On entry : 0/0
  3702 ;;		On exit  : 0/0
  3703 ;;		Unchanged: 0/0
  3704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3705 ;;      Params:         0       0       0       0       0       0
  3706 ;;      Locals:         0       1       0       0       0       0
  3707 ;;      Temps:          0       1       0       0       0       0
  3708 ;;      Totals:         0       2       0       0       0       0
  3709 ;;Total ram usage:        2 bytes
  3710 ;; Hardware stack levels used: 1
  3711 ;; Hardware stack levels required when called: 2
  3712 ;; This function calls:
  3713 ;;		_rand
  3714 ;; This function is called by:
  3715 ;;		_main
  3716 ;;		_snake_move
  3717 ;; This function uses a non-reentrant model
  3718 ;;
  3719                           
  3720     000A                     _snake_initiate:	
  3721                           ;psect for function _snake_initiate
  3722                           
  3723     000A                     l2590:	
  3724                           ;incstack = 0
  3725                           ; Regs used in _snake_initiate: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3726                           
  3727                           
  3728                           ;snake.c: 18:     for(uint8_t i = 0; i < 64; i++){
  3729     000A  0020               	movlb	0	; select bank0
  3730     000B  01A5               	clrf	snake_initiate@i
  3731     000C                     l2596:
  3732                           
  3733                           ;snake.c: 19:         field[i] = 0;
  3734     000C  0825               	movf	snake_initiate@i,w
  3735     000D  3EA0               	addlw	(low (_field| 0))& (0+255)
  3736     000E  0086               	movwf	6
  3737     000F  0187               	clrf	7
  3738     0010  0181               	clrf	1
  3739     0011                     l2598:
  3740                           
  3741                           ;snake.c: 20:     }
  3742     0011  3001               	movlw	1
  3743     0012  00A4               	movwf	??_snake_initiate
  3744     0013  0824               	movf	??_snake_initiate,w
  3745     0014  07A5               	addwf	snake_initiate@i,f
  3746     0015                     l2600:
  3747     0015  3040               	movlw	64
  3748     0016  0225               	subwf	snake_initiate@i,w
  3749     0017  1C03               	skipc
  3750     0018  281A               	goto	u1331
  3751     0019  281B               	goto	u1330
  3752     001A                     u1331:
  3753     001A  280C               	goto	l2596
  3754     001B                     u1330:
  3755     001B                     l2602:
  3756                           
  3757                           ;snake.c: 21:     headPosition = ((uint8_t)rand())&0x3f;
  3758     001B  3180  20BE  3180   	fcall	_rand
  3759     001E  087C               	movf	?_rand,w
  3760     001F  393F               	andlw	63
  3761     0020  0020               	movlb	0	; select bank0
  3762     0021  00E5               	movwf	_headPosition
  3763                           
  3764                           ;snake.c: 22:     foodPosition = ((uint8_t)rand())&0x3f;
  3765     0022  3180  20BE  3180   	fcall	_rand
  3766     0025  087C               	movf	?_rand,w
  3767     0026  393F               	andlw	63
  3768     0027  0020               	movlb	0	; select bank0
  3769     0028  00E4               	movwf	_foodPosition
  3770     0029                     l2604:
  3771                           
  3772                           ;snake.c: 23:     snakeSize = 1;
  3773     0029  01E7               	clrf	_snakeSize
  3774     002A  0AE7               	incf	_snakeSize,f
  3775     002B                     l2606:
  3776                           
  3777                           ;snake.c: 24:     field[headPosition] = snakeSize;
  3778     002B  0865               	movf	_headPosition,w
  3779     002C  3EA0               	addlw	(low (_field| 0))& (0+255)
  3780     002D  0086               	movwf	6
  3781     002E  0187               	clrf	7
  3782     002F  0867               	movf	_snakeSize,w
  3783     0030  0081               	movwf	1
  3784     0031                     l415:
  3785     0031  0008               	return
  3786     0032                     __end_of_snake_initiate:
  3787                           
  3788                           	psect	text3
  3789     00BE                     __ptext3:	
  3790 ;; *************** function _rand *****************
  3791 ;; Defined at:
  3792 ;;		line 11 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\common\rand.c"
  3793 ;; Parameters:    Size  Location     Type
  3794 ;;		None
  3795 ;; Auto vars:     Size  Location     Type
  3796 ;;		None
  3797 ;; Return value:  Size  Location     Type
  3798 ;;                  2   12[COMMON] int 
  3799 ;; Registers used:
  3800 ;;		wreg, status,2, status,0, pclath, cstack
  3801 ;; Tracked objects:
  3802 ;;		On entry : 0/0
  3803 ;;		On exit  : 0/0
  3804 ;;		Unchanged: 0/0
  3805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3806 ;;      Params:         2       0       0       0       0       0
  3807 ;;      Locals:         0       0       0       0       0       0
  3808 ;;      Temps:          0       4       0       0       0       0
  3809 ;;      Totals:         2       4       0       0       0       0
  3810 ;;Total ram usage:        6 bytes
  3811 ;; Hardware stack levels used: 1
  3812 ;; Hardware stack levels required when called: 1
  3813 ;; This function calls:
  3814 ;;		___lmul
  3815 ;; This function is called by:
  3816 ;;		_snake_initiate
  3817 ;;		_snake_move
  3818 ;;		_ai_initiate
  3819 ;; This function uses a non-reentrant model
  3820 ;;
  3821                           
  3822     00BE                     _rand:	
  3823                           ;psect for function _rand
  3824                           
  3825     00BE                     l2504:	
  3826                           ;incstack = 0
  3827                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
  3828                           
  3829     00BE  0020               	movlb	0	; select bank0
  3830     00BF  086C               	movf	_seed+3,w
  3831     00C0  00F3               	movwf	___lmul@multiplier+3
  3832     00C1  086B               	movf	_seed+2,w
  3833     00C2  00F2               	movwf	___lmul@multiplier+2
  3834     00C3  086A               	movf	_seed+1,w
  3835     00C4  00F1               	movwf	___lmul@multiplier+1
  3836     00C5  0869               	movf	_seed,w
  3837     00C6  00F0               	movwf	___lmul@multiplier
  3838     00C7  304C               	movlw	76
  3839     00C8  00F7               	movwf	___lmul@multiplicand+3
  3840     00C9  3095               	movlw	149
  3841     00CA  00F6               	movwf	___lmul@multiplicand+2
  3842     00CB  307F               	movlw	127
  3843     00CC  00F5               	movwf	___lmul@multiplicand+1
  3844     00CD  302D               	movlw	45
  3845     00CE  00F4               	movwf	___lmul@multiplicand
  3846     00CF  3180  208B  3180   	fcall	___lmul
  3847     00D2  3001               	movlw	1
  3848     00D3  0770               	addwf	?___lmul,w
  3849     00D4  0020               	movlb	0	; select bank0
  3850     00D5  00E9               	movwf	_seed
  3851     00D6  3000               	movlw	0
  3852     00D7  3D71               	addwfc	?___lmul+1,w
  3853     00D8  00EA               	movwf	_seed+1
  3854     00D9  3000               	movlw	0
  3855     00DA  3D72               	addwfc	?___lmul+2,w
  3856     00DB  00EB               	movwf	_seed+2
  3857     00DC  3000               	movlw	0
  3858     00DD  3D73               	addwfc	?___lmul+3,w
  3859     00DE  00EC               	movwf	_seed+3
  3860     00DF                     l2506:
  3861     00DF  0869               	movf	_seed,w
  3862     00E0  00A0               	movwf	??_rand
  3863     00E1  086A               	movf	_seed+1,w
  3864     00E2  00A1               	movwf	??_rand+1
  3865     00E3  086B               	movf	_seed+2,w
  3866     00E4  00A2               	movwf	??_rand+2
  3867     00E5  086C               	movf	_seed+3,w
  3868     00E6  00A3               	movwf	??_rand+3
  3869     00E7  3011               	movlw	17
  3870     00E8                     u1265:
  3871     00E8  36A3               	lsrf	??_rand+3,f
  3872     00E9  0CA2               	rrf	??_rand+2,f
  3873     00EA  0CA1               	rrf	??_rand+1,f
  3874     00EB  0CA0               	rrf	??_rand,f
  3875     00EC                     u1260:
  3876     00EC  0B89               	decfsz	9,f
  3877     00ED  28E8               	goto	u1265
  3878     00EE  0821               	movf	??_rand+1,w
  3879     00EF  00FD               	movwf	?_rand+1
  3880     00F0  0820               	movf	??_rand,w
  3881     00F1  00FC               	movwf	?_rand
  3882     00F2                     l1318:
  3883     00F2  0008               	return
  3884     00F3                     __end_of_rand:
  3885                           
  3886                           	psect	text4
  3887     008B                     __ptext4:	
  3888 ;; *************** function ___lmul *****************
  3889 ;; Defined at:
  3890 ;;		line 15 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\common\Umul32.c"
  3891 ;; Parameters:    Size  Location     Type
  3892 ;;  multiplier      4    0[COMMON] unsigned long 
  3893 ;;  multiplicand    4    4[COMMON] unsigned long 
  3894 ;; Auto vars:     Size  Location     Type
  3895 ;;  product         4    8[COMMON] unsigned long 
  3896 ;; Return value:  Size  Location     Type
  3897 ;;                  4    0[COMMON] unsigned long 
  3898 ;; Registers used:
  3899 ;;		wreg, status,2, status,0
  3900 ;; Tracked objects:
  3901 ;;		On entry : 0/0
  3902 ;;		On exit  : 0/0
  3903 ;;		Unchanged: 0/0
  3904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3905 ;;      Params:         8       0       0       0       0       0
  3906 ;;      Locals:         4       0       0       0       0       0
  3907 ;;      Temps:          0       0       0       0       0       0
  3908 ;;      Totals:        12       0       0       0       0       0
  3909 ;;Total ram usage:       12 bytes
  3910 ;; Hardware stack levels used: 1
  3911 ;; This function calls:
  3912 ;;		Nothing
  3913 ;; This function is called by:
  3914 ;;		_rand
  3915 ;; This function uses a non-reentrant model
  3916 ;;
  3917                           
  3918     008B                     ___lmul:	
  3919                           ;psect for function ___lmul
  3920                           
  3921     008B                     l2482:	
  3922                           ;incstack = 0
  3923                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  3924                           
  3925     008B  3000               	movlw	0
  3926     008C  00FB               	movwf	___lmul@product+3
  3927     008D  3000               	movlw	0
  3928     008E  00FA               	movwf	___lmul@product+2
  3929     008F  3000               	movlw	0
  3930     0090  00F9               	movwf	___lmul@product+1
  3931     0091  3000               	movlw	0
  3932     0092  00F8               	movwf	___lmul@product
  3933     0093                     l2484:
  3934     0093  1C70               	btfss	___lmul@multiplier,0
  3935     0094  2896               	goto	u1221
  3936     0095  2897               	goto	u1220
  3937     0096                     u1221:
  3938     0096  289F               	goto	l2488
  3939     0097                     u1220:
  3940     0097                     l2486:
  3941     0097  0874               	movf	___lmul@multiplicand,w
  3942     0098  07F8               	addwf	___lmul@product,f
  3943     0099  0875               	movf	___lmul@multiplicand+1,w
  3944     009A  3DF9               	addwfc	___lmul@product+1,f
  3945     009B  0876               	movf	___lmul@multiplicand+2,w
  3946     009C  3DFA               	addwfc	___lmul@product+2,f
  3947     009D  0877               	movf	___lmul@multiplicand+3,w
  3948     009E  3DFB               	addwfc	___lmul@product+3,f
  3949     009F                     l2488:
  3950     009F  3001               	movlw	1
  3951     00A0                     u1235:
  3952     00A0  35F4               	lslf	___lmul@multiplicand,f
  3953     00A1  0DF5               	rlf	___lmul@multiplicand+1,f
  3954     00A2  0DF6               	rlf	___lmul@multiplicand+2,f
  3955     00A3  0DF7               	rlf	___lmul@multiplicand+3,f
  3956     00A4  0B89               	decfsz	9,f
  3957     00A5  28A0               	goto	u1235
  3958     00A6                     l2490:
  3959     00A6  3001               	movlw	1
  3960     00A7                     u1245:
  3961     00A7  36F3               	lsrf	___lmul@multiplier+3,f
  3962     00A8  0CF2               	rrf	___lmul@multiplier+2,f
  3963     00A9  0CF1               	rrf	___lmul@multiplier+1,f
  3964     00AA  0CF0               	rrf	___lmul@multiplier,f
  3965     00AB  0B89               	decfsz	9,f
  3966     00AC  28A7               	goto	u1245
  3967     00AD  0873               	movf	___lmul@multiplier+3,w
  3968     00AE  0472               	iorwf	___lmul@multiplier+2,w
  3969     00AF  0471               	iorwf	___lmul@multiplier+1,w
  3970     00B0  0470               	iorwf	___lmul@multiplier,w
  3971     00B1  1D03               	skipz
  3972     00B2  28B4               	goto	u1251
  3973     00B3  28B5               	goto	u1250
  3974     00B4                     u1251:
  3975     00B4  2893               	goto	l2484
  3976     00B5                     u1250:
  3977     00B5                     l2492:
  3978     00B5  087B               	movf	___lmul@product+3,w
  3979     00B6  00F3               	movwf	?___lmul+3
  3980     00B7  087A               	movf	___lmul@product+2,w
  3981     00B8  00F2               	movwf	?___lmul+2
  3982     00B9  0879               	movf	___lmul@product+1,w
  3983     00BA  00F1               	movwf	?___lmul+1
  3984     00BB  0878               	movf	___lmul@product,w
  3985     00BC  00F0               	movwf	?___lmul
  3986     00BD                     l868:
  3987     00BD  0008               	return
  3988     00BE                     __end_of___lmul:
  3989                           
  3990                           	psect	text5
  3991     023F                     __ptext5:	
  3992 ;; *************** function _snake_getSurroundings *****************
  3993 ;; Defined at:
  3994 ;;		line 87 in file "snake.c"
  3995 ;; Parameters:    Size  Location     Type
  3996 ;;  surroundings    1    wreg     PTR unsigned char 
  3997 ;;		 -> Y0(16), 
  3998 ;; Auto vars:     Size  Location     Type
  3999 ;;  surroundings    1    4[COMMON] PTR unsigned char 
  4000 ;;		 -> Y0(16), 
  4001 ;;  i               1    3[COMMON] unsigned char 
  4002 ;;  i               1    2[COMMON] unsigned char 
  4003 ;;  p               1    1[COMMON] unsigned char 
  4004 ;; Return value:  Size  Location     Type
  4005 ;;                  1    wreg      void 
  4006 ;; Registers used:
  4007 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4008 ;; Tracked objects:
  4009 ;;		On entry : 0/0
  4010 ;;		On exit  : 0/0
  4011 ;;		Unchanged: 0/0
  4012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4013 ;;      Params:         0       0       0       0       0       0
  4014 ;;      Locals:         4       0       0       0       0       0
  4015 ;;      Temps:          1       0       0       0       0       0
  4016 ;;      Totals:         5       0       0       0       0       0
  4017 ;;Total ram usage:        5 bytes
  4018 ;; Hardware stack levels used: 1
  4019 ;; This function calls:
  4020 ;;		Nothing
  4021 ;; This function is called by:
  4022 ;;		_main
  4023 ;; This function uses a non-reentrant model
  4024 ;;
  4025                           
  4026     023F                     _snake_getSurroundings:	
  4027                           ;psect for function _snake_getSurroundings
  4028                           
  4029                           
  4030                           ;incstack = 0
  4031                           ; Regs used in _snake_getSurroundings: [wreg+fsr1l+fsr1h+status,2+status,0]
  4032                           ;snake_getSurroundings@surroundings stored from wreg
  4033     023F  00F4               	movwf	snake_getSurroundings@surroundings
  4034     0240                     l2764:
  4035                           
  4036                           ;snake.c: 88:     for(uint8_t i = 0; i < 16; i++){
  4037     0240  01F2               	clrf	snake_getSurroundings@i
  4038     0241                     l2770:
  4039                           
  4040                           ;snake.c: 89:         surroundings[i] = 0;
  4041     0241  0872               	movf	snake_getSurroundings@i,w
  4042     0242  0774               	addwf	snake_getSurroundings@surroundings,w
  4043     0243  00F0               	movwf	??_snake_getSurroundings
  4044     0244  0870               	movf	??_snake_getSurroundings,w
  4045     0245  0086               	movwf	6
  4046     0246  0187               	clrf	7
  4047     0247  0181               	clrf	1
  4048     0248                     l2772:
  4049                           
  4050                           ;snake.c: 90:     }
  4051     0248  3001               	movlw	1
  4052     0249  00F0               	movwf	??_snake_getSurroundings
  4053     024A  0870               	movf	??_snake_getSurroundings,w
  4054     024B  07F2               	addwf	snake_getSurroundings@i,f
  4055     024C                     l2774:
  4056     024C  3010               	movlw	16
  4057     024D  0272               	subwf	snake_getSurroundings@i,w
  4058     024E  1C03               	skipc
  4059     024F  2A51               	goto	u1581
  4060     0250  2A52               	goto	u1580
  4061     0251                     u1581:
  4062     0251  2A41               	goto	l2770
  4063     0252                     u1580:
  4064     0252                     l2776:
  4065                           
  4066                           ;snake.c: 91:     if((headPosition&0x07) == 0){
  4067     0252  0020               	movlb	0	; select bank0
  4068     0253  0865               	movf	_headPosition,w
  4069     0254  3907               	andlw	7
  4070     0255  1D03               	btfss	3,2
  4071     0256  2A58               	goto	u1591
  4072     0257  2A59               	goto	u1590
  4073     0258                     u1591:
  4074     0258  2A6A               	goto	l2782
  4075     0259                     u1590:
  4076     0259                     l2778:
  4077                           
  4078                           ;snake.c: 92:         surroundings[0] = 1;
  4079     0259  0874               	movf	snake_getSurroundings@surroundings,w
  4080     025A  0086               	movwf	6
  4081     025B  0187               	clrf	7
  4082     025C  0181               	clrf	1
  4083     025D  0A81               	incf	1,f
  4084                           
  4085                           ;snake.c: 93:         surroundings[1] = 1;
  4086     025E  0A74               	incf	snake_getSurroundings@surroundings,w
  4087     025F  0086               	movwf	6
  4088     0260  0187               	clrf	7
  4089     0261  0181               	clrf	1
  4090     0262  0A81               	incf	1,f
  4091     0263                     l2780:
  4092                           
  4093                           ;snake.c: 94:         surroundings[2] = 1;
  4094     0263  0874               	movf	snake_getSurroundings@surroundings,w
  4095     0264  3E02               	addlw	2
  4096     0265  0086               	movwf	6
  4097     0266  0187               	clrf	7
  4098     0267  0181               	clrf	1
  4099     0268  0A81               	incf	1,f
  4100                           
  4101                           ;snake.c: 95:     } else if((headPosition&0x07) == 7){
  4102     0269  2A85               	goto	l2786
  4103     026A                     l2782:
  4104     026A  3007               	movlw	7
  4105     026B  0565               	andwf	_headPosition,w
  4106     026C  00F0               	movwf	??_snake_getSurroundings
  4107     026D  3007               	movlw	7
  4108     026E  0670               	xorwf	??_snake_getSurroundings,w
  4109     026F  1D03               	btfss	3,2
  4110     0270  2A72               	goto	u1601
  4111     0271  2A73               	goto	u1600
  4112     0272                     u1601:
  4113     0272  2A85               	goto	l2786
  4114     0273                     u1600:
  4115     0273                     l2784:
  4116                           
  4117                           ;snake.c: 96:         surroundings[4] = 1;
  4118     0273  0874               	movf	snake_getSurroundings@surroundings,w
  4119     0274  3E04               	addlw	4
  4120     0275  0086               	movwf	6
  4121     0276  0187               	clrf	7
  4122     0277  0181               	clrf	1
  4123     0278  0A81               	incf	1,f
  4124                           
  4125                           ;snake.c: 97:         surroundings[5] = 1;
  4126     0279  0874               	movf	snake_getSurroundings@surroundings,w
  4127     027A  3E05               	addlw	5
  4128     027B  0086               	movwf	6
  4129     027C  0187               	clrf	7
  4130     027D  0181               	clrf	1
  4131     027E  0A81               	incf	1,f
  4132                           
  4133                           ;snake.c: 98:         surroundings[6] = 1;
  4134     027F  0874               	movf	snake_getSurroundings@surroundings,w
  4135     0280  3E06               	addlw	6
  4136     0281  0086               	movwf	6
  4137     0282  0187               	clrf	7
  4138     0283  0181               	clrf	1
  4139     0284  0A81               	incf	1,f
  4140     0285                     l2786:
  4141                           
  4142                           ;snake.c: 100:     if((headPosition>>3) == 0){
  4143     0285  0865               	movf	_headPosition,w
  4144     0286  00F0               	movwf	??_snake_getSurroundings
  4145     0287  3003               	movlw	3
  4146     0288                     u1615:
  4147     0288  36F0               	lsrf	??_snake_getSurroundings,f
  4148     0289  0B89               	decfsz	9,f
  4149     028A  2A88               	goto	u1615
  4150     028B  0870               	movf	??_snake_getSurroundings,w
  4151     028C  1D03               	btfss	3,2
  4152     028D  2A8F               	goto	u1621
  4153     028E  2A90               	goto	u1620
  4154     028F                     u1621:
  4155     028F  2AA2               	goto	l2792
  4156     0290                     u1620:
  4157     0290                     l2788:
  4158                           
  4159                           ;snake.c: 101:         surroundings[6] = 1;
  4160     0290  0874               	movf	snake_getSurroundings@surroundings,w
  4161     0291  3E06               	addlw	6
  4162     0292  0086               	movwf	6
  4163     0293  0187               	clrf	7
  4164     0294  0181               	clrf	1
  4165     0295  0A81               	incf	1,f
  4166                           
  4167                           ;snake.c: 102:         surroundings[7] = 1;
  4168     0296  0874               	movf	snake_getSurroundings@surroundings,w
  4169     0297  3E07               	addlw	7
  4170     0298  0086               	movwf	6
  4171     0299  0187               	clrf	7
  4172     029A  0181               	clrf	1
  4173     029B  0A81               	incf	1,f
  4174     029C                     l2790:
  4175                           
  4176                           ;snake.c: 103:         surroundings[0] = 1;
  4177     029C  0874               	movf	snake_getSurroundings@surroundings,w
  4178     029D  0086               	movwf	6
  4179     029E  0187               	clrf	7
  4180     029F  0181               	clrf	1
  4181     02A0  0A81               	incf	1,f
  4182                           
  4183                           ;snake.c: 104:     } else if((headPosition>>3) == 7){
  4184     02A1  2AC0               	goto	l2796
  4185     02A2                     l2792:
  4186     02A2  0865               	movf	_headPosition,w
  4187     02A3  00F0               	movwf	??_snake_getSurroundings
  4188     02A4  3003               	movlw	3
  4189     02A5                     u1635:
  4190     02A5  36F0               	lsrf	??_snake_getSurroundings,f
  4191     02A6  0B89               	decfsz	9,f
  4192     02A7  2AA5               	goto	u1635
  4193     02A8  3007               	movlw	7
  4194     02A9  0670               	xorwf	??_snake_getSurroundings,w
  4195     02AA  1D03               	btfss	3,2
  4196     02AB  2AAD               	goto	u1641
  4197     02AC  2AAE               	goto	u1640
  4198     02AD                     u1641:
  4199     02AD  2AC0               	goto	l2796
  4200     02AE                     u1640:
  4201     02AE                     l2794:
  4202                           
  4203                           ;snake.c: 105:         surroundings[2] = 1;
  4204     02AE  0874               	movf	snake_getSurroundings@surroundings,w
  4205     02AF  3E02               	addlw	2
  4206     02B0  0086               	movwf	6
  4207     02B1  0187               	clrf	7
  4208     02B2  0181               	clrf	1
  4209     02B3  0A81               	incf	1,f
  4210                           
  4211                           ;snake.c: 106:         surroundings[3] = 1;
  4212     02B4  0874               	movf	snake_getSurroundings@surroundings,w
  4213     02B5  3E03               	addlw	3
  4214     02B6  0086               	movwf	6
  4215     02B7  0187               	clrf	7
  4216     02B8  0181               	clrf	1
  4217     02B9  0A81               	incf	1,f
  4218                           
  4219                           ;snake.c: 107:         surroundings[4] = 1;
  4220     02BA  0874               	movf	snake_getSurroundings@surroundings,w
  4221     02BB  3E04               	addlw	4
  4222     02BC  0086               	movwf	6
  4223     02BD  0187               	clrf	7
  4224     02BE  0181               	clrf	1
  4225     02BF  0A81               	incf	1,f
  4226     02C0                     l2796:
  4227                           
  4228                           ;snake.c: 109:     uint8_t p;;snake.c: 110:     for(uint8_t i = 0; i < 8; i++){
  4229     02C0  01F3               	clrf	snake_getSurroundings@i_783
  4230     02C1                     l2802:
  4231                           
  4232                           ;snake.c: 111:         p = (headPosition+mapping[i])&0x3f;
  4233     02C1  0873               	movf	snake_getSurroundings@i_783,w
  4234     02C2  3E60               	addlw	(low (_mapping| (0+256)))& (0+255)
  4235     02C3  0086               	movwf	6
  4236     02C4  3001               	movlw	1	; select bank2/3
  4237     02C5  0087               	movwf	7
  4238     02C6  0801               	movf	1,w
  4239     02C7  0765               	addwf	_headPosition,w
  4240     02C8  393F               	andlw	63
  4241     02C9  00F1               	movwf	snake_getSurroundings@p
  4242     02CA                     l2804:
  4243                           
  4244                           ;snake.c: 112:         if(p==foodPosition){
  4245     02CA  0871               	movf	snake_getSurroundings@p,w
  4246     02CB  0664               	xorwf	_foodPosition,w
  4247     02CC  1D03               	skipz
  4248     02CD  2ACF               	goto	u1651
  4249     02CE  2AD0               	goto	u1650
  4250     02CF                     u1651:
  4251     02CF  2AD9               	goto	l458
  4252     02D0                     u1650:
  4253     02D0                     l2806:
  4254                           
  4255                           ;snake.c: 113:             surroundings[i+8] = 1;
  4256     02D0  0873               	movf	snake_getSurroundings@i_783,w
  4257     02D1  0774               	addwf	snake_getSurroundings@surroundings,w
  4258     02D2  00F0               	movwf	??_snake_getSurroundings
  4259     02D3  0870               	movf	??_snake_getSurroundings,w
  4260     02D4  3E08               	addlw	8
  4261     02D5  0086               	movwf	6
  4262     02D6  0187               	clrf	7
  4263     02D7  0181               	clrf	1
  4264     02D8  0A81               	incf	1,f
  4265     02D9                     l458:	
  4266                           ;snake.c: 114:         }
  4267                           
  4268                           
  4269                           ;snake.c: 115:         if(field[p] > 0){
  4270     02D9  0871               	movf	snake_getSurroundings@p,w
  4271     02DA  3EA0               	addlw	(low (_field| 0))& (0+255)
  4272     02DB  0086               	movwf	6
  4273     02DC  0187               	clrf	7
  4274     02DD  0801               	movf	1,w
  4275     02DE  1903               	btfsc	3,2
  4276     02DF  2AE1               	goto	u1661
  4277     02E0  2AE2               	goto	u1660
  4278     02E1                     u1661:
  4279     02E1  2AEA               	goto	l2810
  4280     02E2                     u1660:
  4281     02E2                     l2808:
  4282                           
  4283                           ;snake.c: 116:             surroundings[i] = 1;
  4284     02E2  0873               	movf	snake_getSurroundings@i_783,w
  4285     02E3  0774               	addwf	snake_getSurroundings@surroundings,w
  4286     02E4  00F0               	movwf	??_snake_getSurroundings
  4287     02E5  0870               	movf	??_snake_getSurroundings,w
  4288     02E6  0086               	movwf	6
  4289     02E7  0187               	clrf	7
  4290     02E8  0181               	clrf	1
  4291     02E9  0A81               	incf	1,f
  4292     02EA                     l2810:
  4293                           
  4294                           ;snake.c: 118:     }
  4295     02EA  3001               	movlw	1
  4296     02EB  00F0               	movwf	??_snake_getSurroundings
  4297     02EC  0870               	movf	??_snake_getSurroundings,w
  4298     02ED  07F3               	addwf	snake_getSurroundings@i_783,f
  4299     02EE                     l2812:
  4300     02EE  3008               	movlw	8
  4301     02EF  0273               	subwf	snake_getSurroundings@i_783,w
  4302     02F0  1C03               	skipc
  4303     02F1  2AF3               	goto	u1671
  4304     02F2  2AF4               	goto	u1670
  4305     02F3                     u1671:
  4306     02F3  2AC1               	goto	l2802
  4307     02F4                     u1670:
  4308     02F4                     l460:
  4309     02F4  0008               	return
  4310     02F5                     __end_of_snake_getSurroundings:
  4311                           
  4312                           	psect	text6
  4313     0E67                     __ptext6:	
  4314 ;; *************** function _snake_getFoodPosition *****************
  4315 ;; Defined at:
  4316 ;;		line 128 in file "snake.c"
  4317 ;; Parameters:    Size  Location     Type
  4318 ;;		None
  4319 ;; Auto vars:     Size  Location     Type
  4320 ;;		None
  4321 ;; Return value:  Size  Location     Type
  4322 ;;                  1    wreg      unsigned char 
  4323 ;; Registers used:
  4324 ;;		wreg
  4325 ;; Tracked objects:
  4326 ;;		On entry : 0/0
  4327 ;;		On exit  : 0/0
  4328 ;;		Unchanged: 0/0
  4329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4330 ;;      Params:         0       0       0       0       0       0
  4331 ;;      Locals:         0       0       0       0       0       0
  4332 ;;      Temps:          0       0       0       0       0       0
  4333 ;;      Totals:         0       0       0       0       0       0
  4334 ;;Total ram usage:        0 bytes
  4335 ;; Hardware stack levels used: 1
  4336 ;; This function calls:
  4337 ;;		Nothing
  4338 ;; This function is called by:
  4339 ;;		_main
  4340 ;; This function uses a non-reentrant model
  4341 ;;
  4342                           
  4343     0E67                     _snake_getFoodPosition:	
  4344                           ;psect for function _snake_getFoodPosition
  4345                           
  4346     0E67                     l2726:	
  4347                           ;incstack = 0
  4348                           ; Regs used in _snake_getFoodPosition: [wreg]
  4349                           
  4350                           
  4351                           ;snake.c: 129:     return foodPosition;
  4352     0E67  0020               	movlb	0	; select bank0
  4353     0E68  0864               	movf	_foodPosition,w
  4354     0E69                     l469:
  4355     0E69  0008               	return
  4356     0E6A                     __end_of_snake_getFoodPosition:
  4357                           
  4358                           	psect	text7
  4359     0E65                     __ptext7:	
  4360 ;; *************** function _snake_getField *****************
  4361 ;; Defined at:
  4362 ;;		line 83 in file "snake.c"
  4363 ;; Parameters:    Size  Location     Type
  4364 ;;		None
  4365 ;; Auto vars:     Size  Location     Type
  4366 ;;		None
  4367 ;; Return value:  Size  Location     Type
  4368 ;;                  1    wreg      PTR unsigned char 
  4369 ;; Registers used:
  4370 ;;		wreg
  4371 ;; Tracked objects:
  4372 ;;		On entry : 0/0
  4373 ;;		On exit  : 0/0
  4374 ;;		Unchanged: 0/0
  4375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4376 ;;      Params:         0       0       0       0       0       0
  4377 ;;      Locals:         0       0       0       0       0       0
  4378 ;;      Temps:          0       0       0       0       0       0
  4379 ;;      Totals:         0       0       0       0       0       0
  4380 ;;Total ram usage:        0 bytes
  4381 ;; Hardware stack levels used: 1
  4382 ;; This function calls:
  4383 ;;		Nothing
  4384 ;; This function is called by:
  4385 ;;		_main
  4386 ;; This function uses a non-reentrant model
  4387 ;;
  4388                           
  4389     0E65                     _snake_getField:	
  4390                           ;psect for function _snake_getField
  4391                           
  4392     0E65                     l2718:	
  4393                           ;incstack = 0
  4394                           ; Regs used in _snake_getField: [wreg]
  4395                           
  4396                           
  4397                           ;snake.c: 84:     return field;
  4398     0E65  30A0               	movlw	(low (_field| 0))& (0+255)
  4399     0E66                     l445:
  4400     0E66  0008               	return
  4401     0E67                     __end_of_snake_getField:
  4402                           
  4403                           	psect	text8
  4404     005C                     __ptext8:	
  4405 ;; *************** function _sendMatrix *****************
  4406 ;; Defined at:
  4407 ;;		line 51 in file "ledMatrix.c"
  4408 ;; Parameters:    Size  Location     Type
  4409 ;;		None
  4410 ;; Auto vars:     Size  Location     Type
  4411 ;;  j               1    6[COMMON] unsigned char 
  4412 ;;  i               1    7[COMMON] unsigned char 
  4413 ;;  nb              1    5[COMMON] unsigned char 
  4414 ;;  b               1    4[COMMON] unsigned char 
  4415 ;; Return value:  Size  Location     Type
  4416 ;;                  1    wreg      void 
  4417 ;; Registers used:
  4418 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4419 ;; Tracked objects:
  4420 ;;		On entry : 0/0
  4421 ;;		On exit  : 0/0
  4422 ;;		Unchanged: 0/0
  4423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4424 ;;      Params:         0       0       0       0       0       0
  4425 ;;      Locals:         4       0       0       0       0       0
  4426 ;;      Temps:          1       0       0       0       0       0
  4427 ;;      Totals:         5       0       0       0       0       0
  4428 ;;Total ram usage:        5 bytes
  4429 ;; Hardware stack levels used: 1
  4430 ;; Hardware stack levels required when called: 2
  4431 ;; This function calls:
  4432 ;;		_txMAX7219
  4433 ;; This function is called by:
  4434 ;;		_main
  4435 ;; This function uses a non-reentrant model
  4436 ;;
  4437                           
  4438     005C                     _sendMatrix:	
  4439                           ;psect for function _sendMatrix
  4440                           
  4441     005C                     l2730:	
  4442                           ;incstack = 0
  4443                           ; Regs used in _sendMatrix: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4444                           
  4445                           
  4446                           ;ledMatrix.c: 52:     uint8_t b;;ledMatrix.c: 53:     uint8_t nb;;ledMatrix.c: 54:     f
      +                          or(uint8_t i=0;i<8;i++){
  4447     005C  01F7               	clrf	sendMatrix@i
  4448     005D                     l2736:
  4449                           
  4450                           ;ledMatrix.c: 58:         b = matrix[i];
  4451     005D  0877               	movf	sendMatrix@i,w
  4452     005E  3E3C               	addlw	(low (_matrix| (0+256)))& (0+255)
  4453     005F  0086               	movwf	6
  4454     0060  3001               	movlw	1	; select bank2/3
  4455     0061  0087               	movwf	7
  4456     0062  0801               	movf	1,w
  4457     0063  00F4               	movwf	sendMatrix@b
  4458     0064                     l2738:
  4459                           
  4460                           ;ledMatrix.c: 61:         nb = 0x00;
  4461     0064  01F5               	clrf	sendMatrix@nb
  4462     0065                     l2740:
  4463                           
  4464                           ;ledMatrix.c: 62:         for(uint8_t j = 0; j < 8; j++){
  4465     0065  01F6               	clrf	sendMatrix@j
  4466     0066                     l2746:
  4467                           
  4468                           ;ledMatrix.c: 63:             nb <<= 1;
  4469     0066  1003               	clrc
  4470     0067  0DF5               	rlf	sendMatrix@nb,f
  4471     0068                     l2748:
  4472                           
  4473                           ;ledMatrix.c: 64:             nb |= b&0x01;
  4474     0068  0874               	movf	sendMatrix@b,w
  4475     0069  3901               	andlw	1
  4476     006A  00F3               	movwf	??_sendMatrix
  4477     006B  0873               	movf	??_sendMatrix,w
  4478     006C  04F5               	iorwf	sendMatrix@nb,f
  4479     006D                     l2750:
  4480                           
  4481                           ;ledMatrix.c: 65:             b >>= 1;
  4482     006D  1003               	clrc
  4483     006E  0CF4               	rrf	sendMatrix@b,f
  4484                           
  4485                           ;ledMatrix.c: 66:         }
  4486     006F  3001               	movlw	1
  4487     0070  00F3               	movwf	??_sendMatrix
  4488     0071  0873               	movf	??_sendMatrix,w
  4489     0072  07F6               	addwf	sendMatrix@j,f
  4490     0073                     l2752:
  4491     0073  3008               	movlw	8
  4492     0074  0276               	subwf	sendMatrix@j,w
  4493     0075  1C03               	skipc
  4494     0076  2878               	goto	u1561
  4495     0077  2879               	goto	u1560
  4496     0078                     u1561:
  4497     0078  2866               	goto	l2746
  4498     0079                     u1560:
  4499     0079                     l2754:
  4500                           
  4501                           ;ledMatrix.c: 67:         txMAX7219(i+1,nb);
  4502     0079  0875               	movf	sendMatrix@nb,w
  4503     007A  00F1               	movwf	txMAX7219@dat0
  4504     007B  0877               	movf	sendMatrix@i,w
  4505     007C  3E01               	addlw	1
  4506     007D  318F  27A5  3180   	fcall	_txMAX7219
  4507     0080                     l2756:
  4508                           
  4509                           ;ledMatrix.c: 71:     }
  4510     0080  3001               	movlw	1
  4511     0081  00F3               	movwf	??_sendMatrix
  4512     0082  0873               	movf	??_sendMatrix,w
  4513     0083  07F7               	addwf	sendMatrix@i,f
  4514     0084                     l2758:
  4515     0084  3008               	movlw	8
  4516     0085  0277               	subwf	sendMatrix@i,w
  4517     0086  1C03               	skipc
  4518     0087  2889               	goto	u1571
  4519     0088  288A               	goto	u1570
  4520     0089                     u1571:
  4521     0089  285D               	goto	l2736
  4522     008A                     u1570:
  4523     008A                     l390:
  4524     008A  0008               	return
  4525     008B                     __end_of_sendMatrix:
  4526                           
  4527                           	psect	text9
  4528     0F3E                     __ptext9:	
  4529 ;; *************** function _ledSet *****************
  4530 ;; Defined at:
  4531 ;;		line 31 in file "ledMatrix.c"
  4532 ;; Parameters:    Size  Location     Type
  4533 ;;  l               1    wreg     unsigned char 
  4534 ;;  c               1    0[COMMON] unsigned char 
  4535 ;; Auto vars:     Size  Location     Type
  4536 ;;  l               1    3[COMMON] unsigned char 
  4537 ;; Return value:  Size  Location     Type
  4538 ;;                  1    wreg      void 
  4539 ;; Registers used:
  4540 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4541 ;; Tracked objects:
  4542 ;;		On entry : 0/0
  4543 ;;		On exit  : 0/0
  4544 ;;		Unchanged: 0/0
  4545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4546 ;;      Params:         1       0       0       0       0       0
  4547 ;;      Locals:         1       0       0       0       0       0
  4548 ;;      Temps:          2       0       0       0       0       0
  4549 ;;      Totals:         4       0       0       0       0       0
  4550 ;;Total ram usage:        4 bytes
  4551 ;; Hardware stack levels used: 1
  4552 ;; This function calls:
  4553 ;;		Nothing
  4554 ;; This function is called by:
  4555 ;;		_main
  4556 ;; This function uses a non-reentrant model
  4557 ;;
  4558                           
  4559     0F3E                     _ledSet:	
  4560                           ;psect for function _ledSet
  4561                           
  4562                           
  4563                           ;incstack = 0
  4564                           ; Regs used in _ledSet: [wreg+fsr1l+fsr1h+status,2+status,0]
  4565                           ;ledSet@l stored from wreg
  4566     0F3E  00F3               	movwf	ledSet@l
  4567     0F3F                     l2722:
  4568                           
  4569                           ;ledMatrix.c: 32:     (matrix[c]) |= 1UL << (l);
  4570     0F3F  3001               	movlw	1
  4571     0F40  00F1               	movwf	??_ledSet
  4572     0F41  0A73               	incf	ledSet@l,w
  4573     0F42  2F44               	goto	u1544
  4574     0F43                     u1545:
  4575     0F43  35F1               	lslf	??_ledSet,f
  4576     0F44                     u1544:
  4577     0F44  0B89               	decfsz	9,f
  4578     0F45  2F43               	goto	u1545
  4579     0F46  0871               	movf	??_ledSet,w
  4580     0F47  00F2               	movwf	??_ledSet+1
  4581     0F48  0870               	movf	ledSet@c,w
  4582     0F49  3E3C               	addlw	(low (_matrix| (0+256)))& (0+255)
  4583     0F4A  0086               	movwf	6
  4584     0F4B  3001               	movlw	1	; select bank2/3
  4585     0F4C  0087               	movwf	7
  4586     0F4D  0872               	movf	??_ledSet+1,w
  4587     0F4E  0481               	iorwf	1,f
  4588     0F4F                     l372:
  4589     0F4F  0008               	return
  4590     0F50                     __end_of_ledSet:
  4591                           
  4592                           	psect	text10
  4593     0F50                     __ptext10:	
  4594 ;; *************** function _ledClear *****************
  4595 ;; Defined at:
  4596 ;;		line 35 in file "ledMatrix.c"
  4597 ;; Parameters:    Size  Location     Type
  4598 ;;  l               1    wreg     unsigned char 
  4599 ;;  c               1    0[COMMON] unsigned char 
  4600 ;; Auto vars:     Size  Location     Type
  4601 ;;  l               1    3[COMMON] unsigned char 
  4602 ;; Return value:  Size  Location     Type
  4603 ;;                  1    wreg      void 
  4604 ;; Registers used:
  4605 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4606 ;; Tracked objects:
  4607 ;;		On entry : 0/0
  4608 ;;		On exit  : 0/0
  4609 ;;		Unchanged: 0/0
  4610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4611 ;;      Params:         1       0       0       0       0       0
  4612 ;;      Locals:         1       0       0       0       0       0
  4613 ;;      Temps:          2       0       0       0       0       0
  4614 ;;      Totals:         4       0       0       0       0       0
  4615 ;;Total ram usage:        4 bytes
  4616 ;; Hardware stack levels used: 1
  4617 ;; This function calls:
  4618 ;;		Nothing
  4619 ;; This function is called by:
  4620 ;;		_main
  4621 ;; This function uses a non-reentrant model
  4622 ;;
  4623                           
  4624     0F50                     _ledClear:	
  4625                           ;psect for function _ledClear
  4626                           
  4627                           
  4628                           ;incstack = 0
  4629                           ; Regs used in _ledClear: [wreg+fsr1l+fsr1h+status,2+status,0]
  4630                           ;ledClear@l stored from wreg
  4631     0F50  00F3               	movwf	ledClear@l
  4632     0F51                     l2724:
  4633                           
  4634                           ;ledMatrix.c: 36:     (matrix[c]) &= ~(1UL << (l));
  4635     0F51  3001               	movlw	1
  4636     0F52  00F1               	movwf	??_ledClear
  4637     0F53  0A73               	incf	ledClear@l,w
  4638     0F54  2F56               	goto	u1554
  4639     0F55                     u1555:
  4640     0F55  35F1               	lslf	??_ledClear,f
  4641     0F56                     u1554:
  4642     0F56  0B89               	decfsz	9,f
  4643     0F57  2F55               	goto	u1555
  4644     0F58  0871               	movf	??_ledClear,w
  4645     0F59  3AFF               	xorlw	255
  4646     0F5A  00F2               	movwf	??_ledClear+1
  4647     0F5B  0870               	movf	ledClear@c,w
  4648     0F5C  3E3C               	addlw	(low (_matrix| (0+256)))& (0+255)
  4649     0F5D  0086               	movwf	6
  4650     0F5E  3001               	movlw	1	; select bank2/3
  4651     0F5F  0087               	movwf	7
  4652     0F60  0872               	movf	??_ledClear+1,w
  4653     0F61  0581               	andwf	1,f
  4654     0F62                     l375:
  4655     0F62  0008               	return
  4656     0F63                     __end_of_ledClear:
  4657                           
  4658                           	psect	text11
  4659     00F3                     __ptext11:	
  4660 ;; *************** function _initMAX7219 *****************
  4661 ;; Defined at:
  4662 ;;		line 16 in file "ledMatrix.c"
  4663 ;; Parameters:    Size  Location     Type
  4664 ;;		None
  4665 ;; Auto vars:     Size  Location     Type
  4666 ;;		None
  4667 ;; Return value:  Size  Location     Type
  4668 ;;                  1    wreg      void 
  4669 ;; Registers used:
  4670 ;;		wreg, status,2, status,0, pclath, cstack
  4671 ;; Tracked objects:
  4672 ;;		On entry : 0/0
  4673 ;;		On exit  : 0/0
  4674 ;;		Unchanged: 0/0
  4675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4676 ;;      Params:         0       0       0       0       0       0
  4677 ;;      Locals:         0       0       0       0       0       0
  4678 ;;      Temps:          2       0       0       0       0       0
  4679 ;;      Totals:         2       0       0       0       0       0
  4680 ;;Total ram usage:        2 bytes
  4681 ;; Hardware stack levels used: 1
  4682 ;; Hardware stack levels required when called: 2
  4683 ;; This function calls:
  4684 ;;		_txMAX7219
  4685 ;; This function is called by:
  4686 ;;		_main
  4687 ;; This function uses a non-reentrant model
  4688 ;;
  4689                           
  4690     00F3                     _initMAX7219:	
  4691                           ;psect for function _initMAX7219
  4692                           
  4693     00F3                     l2708:	
  4694                           ;incstack = 0
  4695                           ; Regs used in _initMAX7219: [wreg+status,2+status,0+pclath+cstack]
  4696                           
  4697                           
  4698                           ;ledMatrix.c: 17:     LATBbits.LATB1 = 1;
  4699     00F3  0022               	movlb	2	; select bank2
  4700     00F4  148D               	bsf	13,1	;volatile
  4701                           
  4702                           ;ledMatrix.c: 18:     TRISBbits.TRISB1 = 0;
  4703     00F5  0021               	movlb	1	; select bank1
  4704     00F6  108D               	bcf	13,1	;volatile
  4705                           
  4706                           ;ledMatrix.c: 19:     SSP1CON1bits.SSPEN = 1;
  4707     00F7  0024               	movlb	4	; select bank4
  4708     00F8  1695               	bsf	21,5	;volatile
  4709     00F9                     l2710:
  4710                           
  4711                           ;ledMatrix.c: 20:     txMAX7219(0x09,0x00);
  4712     00F9  01F1               	clrf	txMAX7219@dat0
  4713     00FA  3009               	movlw	9
  4714     00FB  318F  27A5  3180   	fcall	_txMAX7219
  4715                           
  4716                           ;ledMatrix.c: 21:     txMAX7219(0x0A,0x00);
  4717     00FE  01F1               	clrf	txMAX7219@dat0
  4718     00FF  300A               	movlw	10
  4719     0100  318F  27A5  3180   	fcall	_txMAX7219
  4720                           
  4721                           ;ledMatrix.c: 22:     txMAX7219(0x0C,0x00);
  4722     0103  01F1               	clrf	txMAX7219@dat0
  4723     0104  300C               	movlw	12
  4724     0105  318F  27A5  3180   	fcall	_txMAX7219
  4725                           
  4726                           ;ledMatrix.c: 23:     txMAX7219(0x0B,0x07);
  4727     0108  3007               	movlw	7
  4728     0109  00F1               	movwf	txMAX7219@dat0
  4729     010A  300B               	movlw	11
  4730     010B  318F  27A5  3180   	fcall	_txMAX7219
  4731                           
  4732                           ;ledMatrix.c: 24:     txMAX7219(0x0C,0x01);
  4733     010E  01F1               	clrf	txMAX7219@dat0
  4734     010F  0AF1               	incf	txMAX7219@dat0,f
  4735     0110  300C               	movlw	12
  4736     0111  318F  27A5  3180   	fcall	_txMAX7219
  4737                           
  4738                           ;ledMatrix.c: 25:     txMAX7219(0x0F,0x01);
  4739     0114  01F1               	clrf	txMAX7219@dat0
  4740     0115  0AF1               	incf	txMAX7219@dat0,f
  4741     0116  300F               	movlw	15
  4742     0117  318F  27A5  3180   	fcall	_txMAX7219
  4743     011A                     l2712:
  4744                           
  4745                           ;ledMatrix.c: 26:     _delay((unsigned long)((1000)*(8000000/4000.0)));
  4746     011A  300B               	movlw	11
  4747     011B  00F4               	movwf	??_initMAX7219+1
  4748     011C  3026               	movlw	38
  4749     011D  00F3               	movwf	??_initMAX7219
  4750     011E  305E               	movlw	94
  4751     011F                     u2297:
  4752     011F  0B89               	decfsz	9,f
  4753     0120  291F               	goto	u2297
  4754     0121  0BF3               	decfsz	??_initMAX7219,f
  4755     0122  291F               	goto	u2297
  4756     0123  0BF4               	decfsz	??_initMAX7219+1,f
  4757     0124  291F               	goto	u2297
  4758     0125                     l2714:
  4759                           
  4760                           ;ledMatrix.c: 27:     txMAX7219(0x0F,0x00);
  4761     0125  01F1               	clrf	txMAX7219@dat0
  4762     0126  300F               	movlw	15
  4763     0127  318F  27A5  3180   	fcall	_txMAX7219
  4764     012A                     l2716:
  4765                           
  4766                           ;ledMatrix.c: 28:     txMAX7219(0x0C,0x01);
  4767     012A  01F1               	clrf	txMAX7219@dat0
  4768     012B  0AF1               	incf	txMAX7219@dat0,f
  4769     012C  300C               	movlw	12
  4770     012D  318F  27A5  3180   	fcall	_txMAX7219
  4771     0130                     l369:
  4772     0130  0008               	return
  4773     0131                     __end_of_initMAX7219:
  4774                           
  4775                           	psect	text12
  4776     0FA5                     __ptext12:	
  4777 ;; *************** function _txMAX7219 *****************
  4778 ;; Defined at:
  4779 ;;		line 5 in file "ledMatrix.c"
  4780 ;; Parameters:    Size  Location     Type
  4781 ;;  addr0           1    wreg     unsigned char 
  4782 ;;  dat0            1    1[COMMON] unsigned char 
  4783 ;; Auto vars:     Size  Location     Type
  4784 ;;  addr0           1    2[COMMON] unsigned char 
  4785 ;; Return value:  Size  Location     Type
  4786 ;;                  1    wreg      void 
  4787 ;; Registers used:
  4788 ;;		wreg, status,2, status,0, pclath, cstack
  4789 ;; Tracked objects:
  4790 ;;		On entry : 0/0
  4791 ;;		On exit  : 0/0
  4792 ;;		Unchanged: 0/0
  4793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4794 ;;      Params:         1       0       0       0       0       0
  4795 ;;      Locals:         1       0       0       0       0       0
  4796 ;;      Temps:          0       0       0       0       0       0
  4797 ;;      Totals:         2       0       0       0       0       0
  4798 ;;Total ram usage:        2 bytes
  4799 ;; Hardware stack levels used: 1
  4800 ;; Hardware stack levels required when called: 1
  4801 ;; This function calls:
  4802 ;;		_SPI1_WriteByte
  4803 ;; This function is called by:
  4804 ;;		_initMAX7219
  4805 ;;		_sendMatrix
  4806 ;; This function uses a non-reentrant model
  4807 ;;
  4808                           
  4809     0FA5                     _txMAX7219:	
  4810                           ;psect for function _txMAX7219
  4811                           
  4812                           
  4813                           ;incstack = 0
  4814                           ; Regs used in _txMAX7219: [wreg+status,2+status,0+pclath+cstack]
  4815                           ;txMAX7219@addr0 stored from wreg
  4816     0FA5  00F2               	movwf	txMAX7219@addr0
  4817     0FA6                     l2608:
  4818                           
  4819                           ;ledMatrix.c: 6:     LATBbits.LATB1 = 0;
  4820     0FA6  0022               	movlb	2	; select bank2
  4821     0FA7  108D               	bcf	13,1	;volatile
  4822     0FA8                     l2610:
  4823                           
  4824                           ;ledMatrix.c: 7:     SPI1_WriteByte(addr0);
  4825     0FA8  0872               	movf	txMAX7219@addr0,w
  4826     0FA9  318E  266E  318F   	fcall	_SPI1_WriteByte
  4827     0FAC                     l360:	
  4828                           ;ledMatrix.c: 8:     while(!PIR1bits.SSP1IF);
  4829                           
  4830     0FAC  0020               	movlb	0	; select bank0
  4831     0FAD  1D91               	btfss	17,3	;volatile
  4832     0FAE  2FB0               	goto	u1341
  4833     0FAF  2FB1               	goto	u1340
  4834     0FB0                     u1341:
  4835     0FB0  2FAC               	goto	l360
  4836     0FB1                     u1340:
  4837     0FB1                     l362:
  4838                           
  4839                           ;ledMatrix.c: 9:     PIR1bits.SSP1IF = 0;
  4840     0FB1  1191               	bcf	17,3	;volatile
  4841     0FB2                     l2612:
  4842                           
  4843                           ;ledMatrix.c: 10:     SPI1_WriteByte(dat0);
  4844     0FB2  0871               	movf	txMAX7219@dat0,w
  4845     0FB3  318E  266E  318F   	fcall	_SPI1_WriteByte
  4846     0FB6                     l363:	
  4847                           ;ledMatrix.c: 11:     while(!PIR1bits.SSP1IF);
  4848                           
  4849     0FB6  0020               	movlb	0	; select bank0
  4850     0FB7  1D91               	btfss	17,3	;volatile
  4851     0FB8  2FBA               	goto	u1351
  4852     0FB9  2FBB               	goto	u1350
  4853     0FBA                     u1351:
  4854     0FBA  2FB6               	goto	l363
  4855     0FBB                     u1350:
  4856     0FBB                     l365:
  4857                           
  4858                           ;ledMatrix.c: 12:     PIR1bits.SSP1IF = 0;
  4859     0FBB  1191               	bcf	17,3	;volatile
  4860                           
  4861                           ;ledMatrix.c: 13:     LATBbits.LATB1 = 1;
  4862     0FBC  0022               	movlb	2	; select bank2
  4863     0FBD  148D               	bsf	13,1	;volatile
  4864     0FBE                     l366:
  4865     0FBE  0008               	return
  4866     0FBF                     __end_of_txMAX7219:
  4867                           
  4868                           	psect	text13
  4869     0E6E                     __ptext13:	
  4870 ;; *************** function _SPI1_WriteByte *****************
  4871 ;; Defined at:
  4872 ;;		line 131 in file "mcc_generated_files/spi1.c"
  4873 ;; Parameters:    Size  Location     Type
  4874 ;;  byte            1    wreg     unsigned char 
  4875 ;; Auto vars:     Size  Location     Type
  4876 ;;  byte            1    0[COMMON] unsigned char 
  4877 ;; Return value:  Size  Location     Type
  4878 ;;                  1    wreg      void 
  4879 ;; Registers used:
  4880 ;;		wreg
  4881 ;; Tracked objects:
  4882 ;;		On entry : 0/0
  4883 ;;		On exit  : 0/0
  4884 ;;		Unchanged: 0/0
  4885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4886 ;;      Params:         0       0       0       0       0       0
  4887 ;;      Locals:         1       0       0       0       0       0
  4888 ;;      Temps:          0       0       0       0       0       0
  4889 ;;      Totals:         1       0       0       0       0       0
  4890 ;;Total ram usage:        1 bytes
  4891 ;; Hardware stack levels used: 1
  4892 ;; This function calls:
  4893 ;;		Nothing
  4894 ;; This function is called by:
  4895 ;;		_txMAX7219
  4896 ;; This function uses a non-reentrant model
  4897 ;;
  4898                           
  4899     0E6E                     _SPI1_WriteByte:	
  4900                           ;psect for function _SPI1_WriteByte
  4901                           
  4902                           
  4903                           ;incstack = 0
  4904                           ; Regs used in _SPI1_WriteByte: [wreg]
  4905                           ;SPI1_WriteByte@byte stored from wreg
  4906     0E6E  00F0               	movwf	SPI1_WriteByte@byte
  4907     0E6F                     l2502:
  4908                           
  4909                           ;mcc_generated_files/spi1.c: 131: void SPI1_WriteByte(uint8_t byte);mcc_generated_files/
      +                          spi1.c: 132: {;mcc_generated_files/spi1.c: 133:     SSP1BUF = byte;
  4910     0E6F  0870               	movf	SPI1_WriteByte@byte,w
  4911     0E70  0024               	movlb	4	; select bank4
  4912     0E71  0091               	movwf	17	;volatile
  4913     0E72                     l224:
  4914     0E72  0008               	return
  4915     0E73                     __end_of_SPI1_WriteByte:
  4916                           
  4917                           	psect	text14
  4918     0ED3                     __ptext14:	
  4919 ;; *************** function _deactivateElevator *****************
  4920 ;; Defined at:
  4921 ;;		line 50 in file "main.c"
  4922 ;; Parameters:    Size  Location     Type
  4923 ;;		None
  4924 ;; Auto vars:     Size  Location     Type
  4925 ;;		None
  4926 ;; Return value:  Size  Location     Type
  4927 ;;                  1    wreg      void 
  4928 ;; Registers used:
  4929 ;;		None
  4930 ;; Tracked objects:
  4931 ;;		On entry : 0/0
  4932 ;;		On exit  : 0/0
  4933 ;;		Unchanged: 0/0
  4934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4935 ;;      Params:         0       0       0       0       0       0
  4936 ;;      Locals:         0       0       0       0       0       0
  4937 ;;      Temps:          0       0       0       0       0       0
  4938 ;;      Totals:         0       0       0       0       0       0
  4939 ;;Total ram usage:        0 bytes
  4940 ;; Hardware stack levels used: 1
  4941 ;; This function calls:
  4942 ;;		Nothing
  4943 ;; This function is called by:
  4944 ;;		_main
  4945 ;; This function uses a non-reentrant model
  4946 ;;
  4947                           
  4948     0ED3                     _deactivateElevator:	
  4949                           ;psect for function _deactivateElevator
  4950                           
  4951     0ED3                     l2706:	
  4952                           ;incstack = 0
  4953                           ; Regs used in _deactivateElevator: []
  4954                           
  4955                           
  4956                           ;main.c: 51:     LATAbits.LATA3 = 0;
  4957     0ED3  0022               	movlb	2	; select bank2
  4958     0ED4  118C               	bcf	12,3	;volatile
  4959                           
  4960                           ;main.c: 52:     LATAbits.LATA7 = 0;
  4961     0ED5  138C               	bcf	12,7	;volatile
  4962                           
  4963                           ;main.c: 54:     TRISAbits.TRISA0 = 1;
  4964     0ED6  0021               	movlb	1	; select bank1
  4965     0ED7  140C               	bsf	12,0	;volatile
  4966                           
  4967                           ;main.c: 55:     TRISAbits.TRISA1 = 1;
  4968     0ED8  148C               	bsf	12,1	;volatile
  4969                           
  4970                           ;main.c: 56:     TRISAbits.TRISA2 = 1;
  4971     0ED9  150C               	bsf	12,2	;volatile
  4972                           
  4973                           ;main.c: 57:     TRISAbits.TRISA3 = 0;
  4974     0EDA  118C               	bcf	12,3	;volatile
  4975                           
  4976                           ;main.c: 58:     TRISAbits.TRISA4 = 1;
  4977     0EDB  160C               	bsf	12,4	;volatile
  4978                           
  4979                           ;main.c: 59:     TRISAbits.TRISA7 = 0;
  4980     0EDC  138C               	bcf	12,7	;volatile
  4981                           
  4982                           ;main.c: 60:     TRISBbits.TRISB0 = 1;
  4983     0EDD  140D               	bsf	13,0	;volatile
  4984                           
  4985                           ;main.c: 61:     TRISBbits.TRISB3 = 1;
  4986     0EDE  158D               	bsf	13,3	;volatile
  4987     0EDF                     l323:
  4988     0EDF  0008               	return
  4989     0EE0                     __end_of_deactivateElevator:
  4990                           
  4991                           	psect	text15
  4992     03C2                     __ptext15:	
  4993 ;; *************** function _ai_run *****************
  4994 ;; Defined at:
  4995 ;;		line 106 in file "ai.c"
  4996 ;; Parameters:    Size  Location     Type
  4997 ;;		None
  4998 ;; Auto vars:     Size  Location     Type
  4999 ;;  i               1   12[BANK0 ] unsigned char 
  5000 ;;  i               1   11[BANK0 ] unsigned char 
  5001 ;;  i               1   13[BANK0 ] unsigned char 
  5002 ;;  j               1   17[BANK0 ] unsigned char 
  5003 ;;  j               1   16[BANK0 ] unsigned char 
  5004 ;;  i               1   10[BANK0 ] unsigned char 
  5005 ;;  z               2   14[BANK0 ] short 
  5006 ;; Return value:  Size  Location     Type
  5007 ;;                  1    wreg      unsigned char 
  5008 ;; Registers used:
  5009 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5010 ;; Tracked objects:
  5011 ;;		On entry : 0/0
  5012 ;;		On exit  : 0/0
  5013 ;;		Unchanged: 0/0
  5014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5015 ;;      Params:         0       0       0       0       0       0
  5016 ;;      Locals:         0       8       0       0       0       0
  5017 ;;      Temps:          0       2       0       0       0       0
  5018 ;;      Totals:         0      10       0       0       0       0
  5019 ;;Total ram usage:       10 bytes
  5020 ;; Hardware stack levels used: 1
  5021 ;; Hardware stack levels required when called: 2
  5022 ;; This function calls:
  5023 ;;		___awdiv
  5024 ;;		___wmul
  5025 ;;		_biases1_read
  5026 ;;		_biases2_read
  5027 ;;		_sigmoid
  5028 ;;		_weights1_read
  5029 ;;		_weights2_read
  5030 ;; This function is called by:
  5031 ;;		_main
  5032 ;; This function uses a non-reentrant model
  5033 ;;
  5034                           
  5035     03C2                     _ai_run:	
  5036                           ;psect for function _ai_run
  5037                           
  5038     03C2                     l2814:	
  5039                           ;incstack = 0
  5040                           ; Regs used in _ai_run: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5041                           
  5042                           
  5043                           ;ai.c: 107:     for(uint8_t i = 0; i < 16; i++){
  5044     03C2  0020               	movlb	0	; select bank0
  5045     03C3  01AA               	clrf	ai_run@i
  5046     03C4                     l2820:
  5047                           
  5048                           ;ai.c: 108:         if(Y0[i]> 0){
  5049     03C4  082A               	movf	ai_run@i,w
  5050     03C5  3EE0               	addlw	(low (_Y0| 0))& (0+255)
  5051     03C6  0086               	movwf	6
  5052     03C7  0187               	clrf	7
  5053     03C8  0801               	movf	1,w
  5054     03C9  1903               	btfsc	3,2
  5055     03CA  2BCC               	goto	u1681
  5056     03CB  2BCD               	goto	u1680
  5057     03CC                     u1681:
  5058     03CC  2BD3               	goto	l2824
  5059     03CD                     u1680:
  5060     03CD                     l2822:
  5061                           
  5062                           ;ai.c: 109:             Y0[i] = 255u;
  5063     03CD  082A               	movf	ai_run@i,w
  5064     03CE  3EE0               	addlw	(low (_Y0| 0))& (0+255)
  5065     03CF  0086               	movwf	6
  5066     03D0  0187               	clrf	7
  5067     03D1  30FF               	movlw	255
  5068     03D2  0081               	movwf	1
  5069     03D3                     l2824:
  5070                           
  5071                           ;ai.c: 111:     }
  5072     03D3  3001               	movlw	1
  5073     03D4  00A8               	movwf	??_ai_run
  5074     03D5  0828               	movf	??_ai_run,w
  5075     03D6  07AA               	addwf	ai_run@i,f
  5076     03D7                     l2826:
  5077     03D7  3010               	movlw	16
  5078     03D8  022A               	subwf	ai_run@i,w
  5079     03D9  1C03               	skipc
  5080     03DA  2BDC               	goto	u1691
  5081     03DB  2BDD               	goto	u1690
  5082     03DC                     u1691:
  5083     03DC  2BC4               	goto	l2820
  5084     03DD                     u1690:
  5085     03DD                     l2828:
  5086                           
  5087                           ;ai.c: 113:     int16_t z;;ai.c: 114:     for(uint8_t j = 0; j < 7; j++){
  5088     03DD  01B0               	clrf	ai_run@j
  5089     03DE                     l2834:
  5090                           
  5091                           ;ai.c: 115:         Z1[j] = biases1_read(j);
  5092     03DE  0830               	movf	ai_run@j,w
  5093     03DF  3E52               	addlw	(low (_Z1| (0+256)))& (0+255)
  5094     03E0  0086               	movwf	6
  5095     03E1  3001               	movlw	1	; select bank2/3
  5096     03E2  0087               	movwf	7
  5097     03E3  0830               	movf	ai_run@j,w
  5098     03E4  318E  2686  3183   	fcall	_biases1_read
  5099     03E7  0081               	movwf	1
  5100     03E8                     l2836:
  5101                           
  5102                           ;ai.c: 116:         for(uint8_t i = 0; i < 16; i++){
  5103     03E8  0020               	movlb	0	; select bank0
  5104     03E9  01AB               	clrf	ai_run@i_899
  5105     03EA                     l2842:
  5106                           
  5107                           ;ai.c: 117:             z = (int16_t)Y0[i];
  5108     03EA  082B               	movf	ai_run@i_899,w
  5109     03EB  3EE0               	addlw	(low (_Y0| 0))& (0+255)
  5110     03EC  0086               	movwf	6
  5111     03ED  0187               	clrf	7
  5112     03EE  0801               	movf	1,w
  5113     03EF  00A8               	movwf	??_ai_run
  5114     03F0  01A9               	clrf	??_ai_run+1
  5115     03F1  0828               	movf	??_ai_run,w
  5116     03F2  00AE               	movwf	ai_run@z
  5117     03F3  0829               	movf	??_ai_run+1,w
  5118     03F4  00AF               	movwf	ai_run@z+1
  5119     03F5                     l2844:
  5120                           
  5121                           ;ai.c: 118:             z *= weights1_read(i,j);
  5122     03F5  0830               	movf	ai_run@j,w
  5123     03F6  00F4               	movwf	weights1_read@add2
  5124     03F7  082B               	movf	ai_run@i_899,w
  5125     03F8  318E  26E0  3183   	fcall	_weights1_read
  5126     03FB  00F7               	movwf	___wmul@multiplier
  5127     03FC  01F8               	clrf	___wmul@multiplier+1
  5128     03FD  1BF7               	btfsc	___wmul@multiplier,7
  5129     03FE  03F8               	decf	___wmul@multiplier+1,f
  5130     03FF  0020               	movlb	0	; select bank0
  5131     0400  082F               	movf	ai_run@z+1,w
  5132     0401  00FA               	movwf	___wmul@multiplicand+1
  5133     0402  082E               	movf	ai_run@z,w
  5134     0403  00F9               	movwf	___wmul@multiplicand
  5135     0404  318F  27BF  3183   	fcall	___wmul
  5136     0407  0878               	movf	?___wmul+1,w
  5137     0408  0020               	movlb	0	; select bank0
  5138     0409  00AF               	movwf	ai_run@z+1
  5139     040A  0877               	movf	?___wmul,w
  5140     040B  00AE               	movwf	ai_run@z
  5141     040C                     l2846:
  5142                           
  5143                           ;ai.c: 119:             z /= 255;
  5144     040C  30FF               	movlw	255
  5145     040D  00A0               	movwf	___awdiv@divisor
  5146     040E  3000               	movlw	0
  5147     040F  00A1               	movwf	___awdiv@divisor+1
  5148     0410  082F               	movf	ai_run@z+1,w
  5149     0411  00A3               	movwf	___awdiv@dividend+1
  5150     0412  082E               	movf	ai_run@z,w
  5151     0413  00A2               	movwf	___awdiv@dividend
  5152     0414  3181  2131  3183   	fcall	___awdiv
  5153     0417  0020               	movlb	0	; select bank0
  5154     0418  0821               	movf	?___awdiv+1,w
  5155     0419  00AF               	movwf	ai_run@z+1
  5156     041A  0820               	movf	?___awdiv,w
  5157     041B  00AE               	movwf	ai_run@z
  5158                           
  5159                           ;ai.c: 120:             Z1[j] += z;
  5160     041C  082E               	movf	ai_run@z,w
  5161     041D  00A8               	movwf	??_ai_run
  5162     041E  0830               	movf	ai_run@j,w
  5163     041F  3E52               	addlw	(low (_Z1| (0+256)))& (0+255)
  5164     0420  0086               	movwf	6
  5165     0421  3001               	movlw	1	; select bank2/3
  5166     0422  0087               	movwf	7
  5167     0423  0828               	movf	??_ai_run,w
  5168     0424  0781               	addwf	1,f
  5169     0425                     l2848:
  5170                           
  5171                           ;ai.c: 121:         }
  5172     0425  3001               	movlw	1
  5173     0426  00A8               	movwf	??_ai_run
  5174     0427  0828               	movf	??_ai_run,w
  5175     0428  07AB               	addwf	ai_run@i_899,f
  5176     0429                     l2850:
  5177     0429  3010               	movlw	16
  5178     042A  022B               	subwf	ai_run@i_899,w
  5179     042B  1C03               	skipc
  5180     042C  2C2E               	goto	u1701
  5181     042D  2C2F               	goto	u1700
  5182     042E                     u1701:
  5183     042E  2BEA               	goto	l2842
  5184     042F                     u1700:
  5185     042F                     l2852:
  5186                           
  5187                           ;ai.c: 122:         Y1[j] = sigmoid(Z1[j]);
  5188     042F  0830               	movf	ai_run@j,w
  5189     0430  3E59               	addlw	(low (_Y1| (0+256)))& (0+255)
  5190     0431  0086               	movwf	6
  5191     0432  3001               	movlw	1	; select bank2/3
  5192     0433  0087               	movwf	7
  5193     0434  0830               	movf	ai_run@j,w
  5194     0435  3E52               	addlw	(low (_Z1| (0+256)))& (0+255)
  5195     0436  0084               	movwf	4
  5196     0437  3001               	movlw	1	; select bank2/3
  5197     0438  0085               	movwf	5
  5198     0439  0800               	movf	0,w
  5199     043A  318F  271D  3183   	fcall	_sigmoid
  5200     043D  0081               	movwf	1
  5201     043E                     l2854:
  5202                           
  5203                           ;ai.c: 123:     }
  5204     043E  3001               	movlw	1
  5205     043F  0020               	movlb	0	; select bank0
  5206     0440  00A8               	movwf	??_ai_run
  5207     0441  0828               	movf	??_ai_run,w
  5208     0442  07B0               	addwf	ai_run@j,f
  5209     0443                     l2856:
  5210     0443  3007               	movlw	7
  5211     0444  0230               	subwf	ai_run@j,w
  5212     0445  1C03               	skipc
  5213     0446  2C48               	goto	u1711
  5214     0447  2C49               	goto	u1710
  5215     0448                     u1711:
  5216     0448  2BDE               	goto	l2834
  5217     0449                     u1710:
  5218     0449                     l2858:
  5219                           
  5220                           ;ai.c: 124:     for(uint8_t j = 0; j < 4; j++){
  5221     0449  01B1               	clrf	ai_run@j_901
  5222     044A                     l2864:
  5223                           
  5224                           ;ai.c: 125:         Z2[j] = biases2_read(j);
  5225     044A  0831               	movf	ai_run@j_901,w
  5226     044B  3E5C               	addlw	(low (_Z2| 0))& (0+255)
  5227     044C  0086               	movwf	6
  5228     044D  0187               	clrf	7
  5229     044E  0831               	movf	ai_run@j_901,w
  5230     044F  318E  268D  3183   	fcall	_biases2_read
  5231     0452  0081               	movwf	1
  5232     0453                     l2866:
  5233                           
  5234                           ;ai.c: 126:         for(uint8_t i = 0; i < 7; i++){
  5235     0453  0020               	movlb	0	; select bank0
  5236     0454  01AC               	clrf	ai_run@i_903
  5237     0455                     l2872:
  5238                           
  5239                           ;ai.c: 127:             z = (int16_t)Y1[i];
  5240     0455  082C               	movf	ai_run@i_903,w
  5241     0456  3E59               	addlw	(low (_Y1| (0+256)))& (0+255)
  5242     0457  0086               	movwf	6
  5243     0458  3001               	movlw	1	; select bank2/3
  5244     0459  0087               	movwf	7
  5245     045A  0801               	movf	1,w
  5246     045B  00A8               	movwf	??_ai_run
  5247     045C  01A9               	clrf	??_ai_run+1
  5248     045D  0828               	movf	??_ai_run,w
  5249     045E  00AE               	movwf	ai_run@z
  5250     045F  0829               	movf	??_ai_run+1,w
  5251     0460  00AF               	movwf	ai_run@z+1
  5252     0461                     l2874:
  5253                           
  5254                           ;ai.c: 128:             z *= weights2_read(i,j);
  5255     0461  0831               	movf	ai_run@j_901,w
  5256     0462  00F4               	movwf	weights2_read@add2
  5257     0463  082C               	movf	ai_run@i_903,w
  5258     0464  318E  26C6  3183   	fcall	_weights2_read
  5259     0467  00F7               	movwf	___wmul@multiplier
  5260     0468  01F8               	clrf	___wmul@multiplier+1
  5261     0469  1BF7               	btfsc	___wmul@multiplier,7
  5262     046A  03F8               	decf	___wmul@multiplier+1,f
  5263     046B  0020               	movlb	0	; select bank0
  5264     046C  082F               	movf	ai_run@z+1,w
  5265     046D  00FA               	movwf	___wmul@multiplicand+1
  5266     046E  082E               	movf	ai_run@z,w
  5267     046F  00F9               	movwf	___wmul@multiplicand
  5268     0470  318F  27BF  3183   	fcall	___wmul
  5269     0473  0878               	movf	?___wmul+1,w
  5270     0474  0020               	movlb	0	; select bank0
  5271     0475  00AF               	movwf	ai_run@z+1
  5272     0476  0877               	movf	?___wmul,w
  5273     0477  00AE               	movwf	ai_run@z
  5274     0478                     l2876:
  5275                           
  5276                           ;ai.c: 129:             z /= 255;
  5277     0478  30FF               	movlw	255
  5278     0479  00A0               	movwf	___awdiv@divisor
  5279     047A  3000               	movlw	0
  5280     047B  00A1               	movwf	___awdiv@divisor+1
  5281     047C  082F               	movf	ai_run@z+1,w
  5282     047D  00A3               	movwf	___awdiv@dividend+1
  5283     047E  082E               	movf	ai_run@z,w
  5284     047F  00A2               	movwf	___awdiv@dividend
  5285     0480  3181  2131  3183   	fcall	___awdiv
  5286     0483  0020               	movlb	0	; select bank0
  5287     0484  0821               	movf	?___awdiv+1,w
  5288     0485  00AF               	movwf	ai_run@z+1
  5289     0486  0820               	movf	?___awdiv,w
  5290     0487  00AE               	movwf	ai_run@z
  5291                           
  5292                           ;ai.c: 130:             Z2[j] += z;
  5293     0488  082E               	movf	ai_run@z,w
  5294     0489  00A8               	movwf	??_ai_run
  5295     048A  0831               	movf	ai_run@j_901,w
  5296     048B  3E5C               	addlw	(low (_Z2| 0))& (0+255)
  5297     048C  0086               	movwf	6
  5298     048D  0187               	clrf	7
  5299     048E  0828               	movf	??_ai_run,w
  5300     048F  0781               	addwf	1,f
  5301     0490                     l2878:
  5302                           
  5303                           ;ai.c: 131:         }
  5304     0490  3001               	movlw	1
  5305     0491  00A8               	movwf	??_ai_run
  5306     0492  0828               	movf	??_ai_run,w
  5307     0493  07AC               	addwf	ai_run@i_903,f
  5308     0494                     l2880:
  5309     0494  3007               	movlw	7
  5310     0495  022C               	subwf	ai_run@i_903,w
  5311     0496  1C03               	skipc
  5312     0497  2C99               	goto	u1721
  5313     0498  2C9A               	goto	u1720
  5314     0499                     u1721:
  5315     0499  2C55               	goto	l2872
  5316     049A                     u1720:
  5317     049A                     l2882:
  5318                           
  5319                           ;ai.c: 132:         Y2[j] = sigmoid(Z2[j]);
  5320     049A  0831               	movf	ai_run@j_901,w
  5321     049B  3E60               	addlw	(low (_Y2| 0))& (0+255)
  5322     049C  0086               	movwf	6
  5323     049D  0187               	clrf	7
  5324     049E  0831               	movf	ai_run@j_901,w
  5325     049F  3E5C               	addlw	(low (_Z2| 0))& (0+255)
  5326     04A0  0084               	movwf	4
  5327     04A1  0185               	clrf	5
  5328     04A2  0800               	movf	0,w
  5329     04A3  318F  271D  3183   	fcall	_sigmoid
  5330     04A6  0081               	movwf	1
  5331     04A7                     l2884:
  5332                           
  5333                           ;ai.c: 133:     }
  5334     04A7  3001               	movlw	1
  5335     04A8  0020               	movlb	0	; select bank0
  5336     04A9  00A8               	movwf	??_ai_run
  5337     04AA  0828               	movf	??_ai_run,w
  5338     04AB  07B1               	addwf	ai_run@j_901,f
  5339     04AC                     l2886:
  5340     04AC  3004               	movlw	4
  5341     04AD  0231               	subwf	ai_run@j_901,w
  5342     04AE  1C03               	skipc
  5343     04AF  2CB1               	goto	u1731
  5344     04B0  2CB2               	goto	u1730
  5345     04B1                     u1731:
  5346     04B1  2C4A               	goto	l2864
  5347     04B2                     u1730:
  5348     04B2                     l2888:
  5349                           
  5350                           ;ai.c: 135:     choice = 0;
  5351     04B2  01E6               	clrf	_choice
  5352     04B3                     l2890:
  5353                           
  5354                           ;ai.c: 136:     for(uint8_t i = 1; i < 4; i++){
  5355     04B3  01AD               	clrf	ai_run@i_905
  5356     04B4  0AAD               	incf	ai_run@i_905,f
  5357     04B5                     l2896:
  5358                           
  5359                           ;ai.c: 137:         if(Y2[i]>Y2[choice]){
  5360     04B5  0866               	movf	_choice,w
  5361     04B6  3E60               	addlw	(low (_Y2| 0))& (0+255)
  5362     04B7  0086               	movwf	6
  5363     04B8  0187               	clrf	7
  5364     04B9  082D               	movf	ai_run@i_905,w
  5365     04BA  3E60               	addlw	(low (_Y2| 0))& (0+255)
  5366     04BB  0084               	movwf	4
  5367     04BC  0185               	clrf	5
  5368     04BD  0800               	movf	0,w
  5369     04BE  0201               	subwf	1,w
  5370     04BF  1803               	skipnc
  5371     04C0  2CC2               	goto	u1741
  5372     04C1  2CC3               	goto	u1740
  5373     04C2                     u1741:
  5374     04C2  2CC5               	goto	l2900
  5375     04C3                     u1740:
  5376     04C3                     l2898:
  5377                           
  5378                           ;ai.c: 138:             choice = i;
  5379     04C3  082D               	movf	ai_run@i_905,w
  5380     04C4  00E6               	movwf	_choice
  5381     04C5                     l2900:
  5382                           
  5383                           ;ai.c: 140:     }
  5384     04C5  3001               	movlw	1
  5385     04C6  00A8               	movwf	??_ai_run
  5386     04C7  0828               	movf	??_ai_run,w
  5387     04C8  07AD               	addwf	ai_run@i_905,f
  5388     04C9                     l2902:
  5389     04C9  3004               	movlw	4
  5390     04CA  022D               	subwf	ai_run@i_905,w
  5391     04CB  1C03               	skipc
  5392     04CC  2CCE               	goto	u1751
  5393     04CD  2CCF               	goto	u1750
  5394     04CE                     u1751:
  5395     04CE  2CB5               	goto	l2896
  5396     04CF                     u1750:
  5397     04CF                     l2904:
  5398                           
  5399                           ;ai.c: 141:     return choice;
  5400     04CF  0866               	movf	_choice,w
  5401     04D0                     l618:
  5402     04D0  0008               	return
  5403     04D1                     __end_of_ai_run:
  5404                           
  5405                           	psect	text16
  5406     0F1D                     __ptext16:	
  5407 ;; *************** function _sigmoid *****************
  5408 ;; Defined at:
  5409 ;;		line 8 in file "sigmoid.c"
  5410 ;; Parameters:    Size  Location     Type
  5411 ;;  z               1    wreg     char 
  5412 ;; Auto vars:     Size  Location     Type
  5413 ;;  z               1    1[COMMON] char 
  5414 ;; Return value:  Size  Location     Type
  5415 ;;                  1    wreg      unsigned char 
  5416 ;; Registers used:
  5417 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  5418 ;; Tracked objects:
  5419 ;;		On entry : 0/0
  5420 ;;		On exit  : 0/0
  5421 ;;		Unchanged: 0/0
  5422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5423 ;;      Params:         0       0       0       0       0       0
  5424 ;;      Locals:         1       0       0       0       0       0
  5425 ;;      Temps:          1       0       0       0       0       0
  5426 ;;      Totals:         2       0       0       0       0       0
  5427 ;;Total ram usage:        2 bytes
  5428 ;; Hardware stack levels used: 1
  5429 ;; This function calls:
  5430 ;;		Nothing
  5431 ;; This function is called by:
  5432 ;;		_ai_run
  5433 ;; This function uses a non-reentrant model
  5434 ;;
  5435                           
  5436     0F1D                     _sigmoid:	
  5437                           ;psect for function _sigmoid
  5438                           
  5439                           
  5440                           ;incstack = 0
  5441                           ; Regs used in _sigmoid: [wreg-fsr0h+status,2+status,0+pclath]
  5442                           ;sigmoid@z stored from wreg
  5443     0F1D  00F1               	movwf	sigmoid@z
  5444     0F1E                     l2638:
  5445                           
  5446                           ;sigmoid.c: 9:     return sigmoidValues[((uint8_t)z)>>4];
  5447     0F1E  0871               	movf	sigmoid@z,w
  5448     0F1F  00F0               	movwf	??_sigmoid
  5449     0F20  3004               	movlw	4
  5450     0F21                     u1385:
  5451     0F21  36F0               	lsrf	??_sigmoid,f
  5452     0F22  0B89               	decfsz	9,f
  5453     0F23  2F21               	goto	u1385
  5454     0F24  0870               	movf	??_sigmoid,w
  5455     0F25  3E10               	addlw	low (_sigmoidValues| (0+32768))
  5456     0F26  0084               	movwf	4
  5457     0F27  3088               	movlw	high (_sigmoidValues| (0+32768))
  5458     0F28  1803               	skipnc
  5459     0F29  3E01               	addlw	1
  5460     0F2A  0085               	movwf	5
  5461     0F2B  0800               	movf	0,w	;code access
  5462     0F2C                     l664:
  5463     0F2C  0008               	return
  5464     0F2D                     __end_of_sigmoid:
  5465                           
  5466                           	psect	text17
  5467     04D1                     __ptext17:	
  5468 ;; *************** function _ai_propagate *****************
  5469 ;; Defined at:
  5470 ;;		line 144 in file "ai.c"
  5471 ;; Parameters:    Size  Location     Type
  5472 ;;  incentive       1    wreg     char 
  5473 ;; Auto vars:     Size  Location     Type
  5474 ;;  incentive       1   25[BANK0 ] char 
  5475 ;;  i               1   33[BANK0 ] unsigned char 
  5476 ;;  i               1   32[BANK0 ] unsigned char 
  5477 ;;  j               1   30[BANK0 ] unsigned char 
  5478 ;;  j               1   34[BANK0 ] unsigned char 
  5479 ;;  i               1   29[BANK0 ] unsigned char 
  5480 ;;  i               1   28[BANK0 ] unsigned char 
  5481 ;;  i               1   27[BANK0 ] unsigned char 
  5482 ;;  i               1   26[BANK0 ] unsigned char 
  5483 ;;  j               1   39[BANK0 ] unsigned char 
  5484 ;;  j               1   38[BANK0 ] unsigned char 
  5485 ;;  k               1   35[BANK0 ] unsigned char 
  5486 ;;  k               1   37[BANK0 ] unsigned char 
  5487 ;;  j               1   36[BANK0 ] unsigned char 
  5488 ;;  j               1   31[BANK0 ] unsigned char 
  5489 ;;  S               4   21[BANK0 ] unsigned char [4]
  5490 ;;  dz              2   40[BANK0 ] short 
  5491 ;; Return value:  Size  Location     Type
  5492 ;;                  1    wreg      void 
  5493 ;; Registers used:
  5494 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5495 ;; Tracked objects:
  5496 ;;		On entry : 0/0
  5497 ;;		On exit  : 0/0
  5498 ;;		Unchanged: 0/0
  5499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5500 ;;      Params:         0       0       0       0       0       0
  5501 ;;      Locals:         0      21       0       0       0       0
  5502 ;;      Temps:          0      13       0       0       0       0
  5503 ;;      Totals:         0      34       0       0       0       0
  5504 ;;Total ram usage:       34 bytes
  5505 ;; Hardware stack levels used: 1
  5506 ;; Hardware stack levels required when called: 2
  5507 ;; This function calls:
  5508 ;;		___awdiv
  5509 ;;		___wmul
  5510 ;;		_biases1_read
  5511 ;;		_biases1_write
  5512 ;;		_biases2_read
  5513 ;;		_biases2_write
  5514 ;;		_de_sigmoid
  5515 ;;		_weights1_read
  5516 ;;		_weights1_write
  5517 ;;		_weights2_read
  5518 ;;		_weights2_write
  5519 ;; This function is called by:
  5520 ;;		_main
  5521 ;; This function uses a non-reentrant model
  5522 ;;
  5523                           
  5524     04D1                     _ai_propagate:	
  5525                           ;psect for function _ai_propagate
  5526                           
  5527                           
  5528                           ;incstack = 0
  5529                           ; Regs used in _ai_propagate: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5530                           ;ai_propagate@incentive stored from wreg
  5531     04D1  0020               	movlb	0	; select bank0
  5532     04D2  00B9               	movwf	ai_propagate@incentive
  5533     04D3                     l2984:
  5534                           
  5535                           ;ai.c: 145:     if(incentive == 0){
  5536     04D3  0839               	movf	ai_propagate@incentive,w
  5537     04D4  1D03               	btfss	3,2
  5538     04D5  2CD7               	goto	u1881
  5539     04D6  2CD8               	goto	u1880
  5540     04D7                     u1881:
  5541     04D7  2CD9               	goto	l2988
  5542     04D8                     u1880:
  5543     04D8  2FBB               	goto	l622
  5544     04D9                     l2988:
  5545                           
  5546                           ;ai.c: 149:     if(incentive == -1){
  5547     04D9  0A39               	incf	ai_propagate@incentive,w
  5548     04DA  1D03               	btfss	3,2
  5549     04DB  2CDD               	goto	u1891
  5550     04DC  2CDE               	goto	u1890
  5551     04DD                     u1891:
  5552     04DD  2CDF               	goto	l2992
  5553     04DE                     u1890:
  5554     04DE                     l2990:
  5555                           
  5556                           ;ai.c: 150:         incentive = 0;
  5557     04DE  01B9               	clrf	ai_propagate@incentive
  5558     04DF                     l2992:
  5559                           
  5560                           ;ai.c: 153:     uint8_t S[4];;ai.c: 154:     if(incentive == 0){
  5561     04DF  0839               	movf	ai_propagate@incentive,w
  5562     04E0  1D03               	btfss	3,2
  5563     04E1  2CE3               	goto	u1901
  5564     04E2  2CE4               	goto	u1900
  5565     04E3                     u1901:
  5566     04E3  2CFB               	goto	l3008
  5567     04E4                     u1900:
  5568     04E4                     l2994:
  5569                           
  5570                           ;ai.c: 155:         for(uint8_t i = 0; i < 4; i++){
  5571     04E4  01BA               	clrf	ai_propagate@i
  5572     04E5                     l3000:
  5573                           
  5574                           ;ai.c: 156:             S[i] = 255u;
  5575     04E5  083A               	movf	ai_propagate@i,w
  5576     04E6  3E35               	addlw	(low (ai_propagate@S| 0))& (0+255)
  5577     04E7  0086               	movwf	6
  5578     04E8  0187               	clrf	7
  5579     04E9  30FF               	movlw	255
  5580     04EA  0081               	movwf	1
  5581     04EB                     l3002:
  5582                           
  5583                           ;ai.c: 157:         }
  5584     04EB  3001               	movlw	1
  5585     04EC  00A8               	movwf	??_ai_propagate
  5586     04ED  0828               	movf	??_ai_propagate,w
  5587     04EE  07BA               	addwf	ai_propagate@i,f
  5588     04EF                     l3004:
  5589     04EF  3004               	movlw	4
  5590     04F0  023A               	subwf	ai_propagate@i,w
  5591     04F1  1C03               	skipc
  5592     04F2  2CF4               	goto	u1911
  5593     04F3  2CF5               	goto	u1910
  5594     04F4                     u1911:
  5595     04F4  2CE5               	goto	l3000
  5596     04F5                     u1910:
  5597     04F5                     l3006:
  5598                           
  5599                           ;ai.c: 158:         S[choice] = 0;
  5600     04F5  0866               	movf	_choice,w
  5601     04F6  3E35               	addlw	(low (ai_propagate@S| 0))& (0+255)
  5602     04F7  0086               	movwf	6
  5603     04F8  0187               	clrf	7
  5604     04F9  0181               	clrf	1
  5605                           
  5606                           ;ai.c: 159:     } else{
  5607     04FA  2D11               	goto	l3022
  5608     04FB                     l3008:
  5609                           
  5610                           ;ai.c: 160:         for(uint8_t i = 0; i < 4; i++){
  5611     04FB  01BB               	clrf	ai_propagate@i_910
  5612     04FC                     l3014:
  5613                           
  5614                           ;ai.c: 161:             S[i] = 0;
  5615     04FC  083B               	movf	ai_propagate@i_910,w
  5616     04FD  3E35               	addlw	(low (ai_propagate@S| 0))& (0+255)
  5617     04FE  0086               	movwf	6
  5618     04FF  0187               	clrf	7
  5619     0500  0181               	clrf	1
  5620     0501                     l3016:
  5621                           
  5622                           ;ai.c: 162:         }
  5623     0501  3001               	movlw	1
  5624     0502  00A8               	movwf	??_ai_propagate
  5625     0503  0828               	movf	??_ai_propagate,w
  5626     0504  07BB               	addwf	ai_propagate@i_910,f
  5627     0505                     l3018:
  5628     0505  3004               	movlw	4
  5629     0506  023B               	subwf	ai_propagate@i_910,w
  5630     0507  1C03               	skipc
  5631     0508  2D0A               	goto	u1921
  5632     0509  2D0B               	goto	u1920
  5633     050A                     u1921:
  5634     050A  2CFC               	goto	l3014
  5635     050B                     u1920:
  5636     050B                     l3020:
  5637                           
  5638                           ;ai.c: 163:         S[choice] = 255u;
  5639     050B  0866               	movf	_choice,w
  5640     050C  3E35               	addlw	(low (ai_propagate@S| 0))& (0+255)
  5641     050D  0086               	movwf	6
  5642     050E  0187               	clrf	7
  5643     050F  30FF               	movlw	255
  5644     0510  0081               	movwf	1
  5645     0511                     l3022:
  5646                           
  5647                           ;ai.c: 166:     for(uint8_t j = 0; j < 7; j++){
  5648     0511  01BF               	clrf	ai_propagate@j
  5649     0512                     l3028:
  5650                           
  5651                           ;ai.c: 167:         DY1[j] = 0;
  5652     0512  083F               	movf	ai_propagate@j,w
  5653     0513  3E4B               	addlw	(low (_DY1| (0+256)))& (0+255)
  5654     0514  0086               	movwf	6
  5655     0515  3001               	movlw	1	; select bank2/3
  5656     0516  0087               	movwf	7
  5657     0517  0181               	clrf	1
  5658                           
  5659                           ;ai.c: 168:         DB1[j] = 0;
  5660     0518  083F               	movf	ai_propagate@j,w
  5661     0519  3E44               	addlw	(low (_DB1| (0+256)))& (0+255)
  5662     051A  0086               	movwf	6
  5663     051B  3001               	movlw	1	; select bank2/3
  5664     051C  0087               	movwf	7
  5665     051D  0181               	clrf	1
  5666     051E                     l3030:
  5667                           
  5668                           ;ai.c: 169:         for(uint8_t i = 0; i < 16; i++){
  5669     051E  01BC               	clrf	ai_propagate@i_912
  5670     051F                     l3036:
  5671                           
  5672                           ;ai.c: 170:             DW1[i][j] = 0;
  5673     051F  083F               	movf	ai_propagate@j,w
  5674     0520  00A8               	movwf	??_ai_propagate
  5675     0521  01A9               	clrf	??_ai_propagate+1
  5676     0522  083C               	movf	ai_propagate@i_912,w
  5677     0523  00AA               	movwf	??_ai_propagate+2
  5678     0524  01AB               	clrf	??_ai_propagate+3
  5679     0525  082A               	movf	??_ai_propagate+2,w
  5680     0526  00F7               	movwf	___wmul@multiplier
  5681     0527  082B               	movf	??_ai_propagate+3,w
  5682     0528  00F8               	movwf	___wmul@multiplier+1
  5683     0529  3007               	movlw	7
  5684     052A  00F9               	movwf	___wmul@multiplicand
  5685     052B  3000               	movlw	0
  5686     052C  00FA               	movwf	___wmul@multiplicand+1
  5687     052D  318F  27BF  3184   	fcall	___wmul
  5688     0530  3000               	movlw	0
  5689     0531  0020               	movlb	0	; select bank0
  5690     0532  00AC               	movwf	??_ai_propagate+4
  5691     0533  3021               	movlw	33
  5692     0534  00AD               	movwf	??_ai_propagate+5
  5693     0535  0877               	movf	?___wmul,w
  5694     0536  072C               	addwf	??_ai_propagate+4,w
  5695     0537  00AE               	movwf	??_ai_propagate+6
  5696     0538  0878               	movf	?___wmul+1,w
  5697     0539  3D2D               	addwfc	??_ai_propagate+5,w
  5698     053A  00AF               	movwf	??_ai_propagate+7
  5699     053B  0828               	movf	??_ai_propagate,w
  5700     053C  072E               	addwf	??_ai_propagate+6,w
  5701     053D  0086               	movwf	6
  5702     053E  0829               	movf	??_ai_propagate+1,w
  5703     053F  3D2F               	addwfc	??_ai_propagate+7,w
  5704     0540  0087               	movwf	7
  5705     0541  0181               	clrf	1
  5706     0542                     l3038:
  5707                           
  5708                           ;ai.c: 171:         }
  5709     0542  3001               	movlw	1
  5710     0543  00A8               	movwf	??_ai_propagate
  5711     0544  0828               	movf	??_ai_propagate,w
  5712     0545  07BC               	addwf	ai_propagate@i_912,f
  5713     0546                     l3040:
  5714     0546  3010               	movlw	16
  5715     0547  023C               	subwf	ai_propagate@i_912,w
  5716     0548  1C03               	skipc
  5717     0549  2D4B               	goto	u1931
  5718     054A  2D4C               	goto	u1930
  5719     054B                     u1931:
  5720     054B  2D1F               	goto	l3036
  5721     054C                     u1930:
  5722     054C                     l3042:
  5723                           
  5724                           ;ai.c: 172:     }
  5725     054C  3001               	movlw	1
  5726     054D  00A8               	movwf	??_ai_propagate
  5727     054E  0828               	movf	??_ai_propagate,w
  5728     054F  07BF               	addwf	ai_propagate@j,f
  5729     0550                     l3044:
  5730     0550  3007               	movlw	7
  5731     0551  023F               	subwf	ai_propagate@j,w
  5732     0552  1C03               	skipc
  5733     0553  2D55               	goto	u1941
  5734     0554  2D56               	goto	u1940
  5735     0555                     u1941:
  5736     0555  2D12               	goto	l3028
  5737     0556                     u1940:
  5738     0556                     l3046:
  5739                           
  5740                           ;ai.c: 173:     for(uint8_t j = 0; j < 4; j++){
  5741     0556  01C4               	clrf	ai_propagate@j_913
  5742     0557                     l3052:
  5743                           
  5744                           ;ai.c: 174:         DY2[j] = (int8_t)(((int16_t)Y2[j] - (int16_t)S[j])>>1);
  5745     0557  0844               	movf	ai_propagate@j_913,w
  5746     0558  3E58               	addlw	(low (_DY2| 0))& (0+255)
  5747     0559  0086               	movwf	6
  5748     055A  0187               	clrf	7
  5749     055B  0844               	movf	ai_propagate@j_913,w
  5750     055C  3E60               	addlw	(low (_Y2| 0))& (0+255)
  5751     055D  0084               	movwf	4
  5752     055E  0185               	clrf	5
  5753     055F  0800               	movf	0,w
  5754     0560  00A8               	movwf	??_ai_propagate
  5755     0561  01A9               	clrf	??_ai_propagate+1
  5756     0562  0844               	movf	ai_propagate@j_913,w
  5757     0563  3E35               	addlw	(low (ai_propagate@S| 0))& (0+255)
  5758     0564  0084               	movwf	4
  5759     0565  0185               	clrf	5
  5760     0566  0829               	movf	??_ai_propagate+1,w
  5761     0567  00AB               	movwf	??_ai_propagate+3
  5762     0568  0800               	movf	0,w
  5763     0569  0228               	subwf	??_ai_propagate,w
  5764     056A  00AA               	movwf	??_ai_propagate+2
  5765     056B  1C03               	skipc
  5766     056C  03AB               	decf	??_ai_propagate+3,f
  5767     056D  0D2B               	rlf	??_ai_propagate+3,w
  5768     056E  0CAB               	rrf	??_ai_propagate+3,f
  5769     056F  0CAA               	rrf	??_ai_propagate+2,f
  5770     0570  082A               	movf	??_ai_propagate+2,w
  5771     0571  0081               	movwf	1
  5772     0572                     l3054:
  5773                           
  5774                           ;ai.c: 175:         DB2[j] = 0;
  5775     0572  0844               	movf	ai_propagate@j_913,w
  5776     0573  3E54               	addlw	(low (_DB2| 0))& (0+255)
  5777     0574  0086               	movwf	6
  5778     0575  0187               	clrf	7
  5779     0576  0181               	clrf	1
  5780     0577                     l3056:
  5781                           
  5782                           ;ai.c: 176:         for(uint8_t i = 0; i < 7; i++){
  5783     0577  01BD               	clrf	ai_propagate@i_914
  5784     0578                     l3062:
  5785                           
  5786                           ;ai.c: 177:             DW2[i][j] = 0;
  5787     0578  083D               	movf	ai_propagate@i_914,w
  5788     0579  00A8               	movwf	??_ai_propagate
  5789     057A  3002               	movlw	2
  5790     057B                     u1955:
  5791     057B  35A8               	lslf	??_ai_propagate,f
  5792     057C  0B89               	decfsz	9,f
  5793     057D  2D7B               	goto	u1955
  5794     057E  3020               	movlw	(low (_DW2| (0+256)))& (0+255)
  5795     057F  0728               	addwf	??_ai_propagate,w
  5796     0580  00A9               	movwf	??_ai_propagate+1
  5797     0581  0844               	movf	ai_propagate@j_913,w
  5798     0582  0729               	addwf	??_ai_propagate+1,w
  5799     0583  00AA               	movwf	??_ai_propagate+2
  5800     0584  082A               	movf	??_ai_propagate+2,w
  5801     0585  0086               	movwf	6
  5802     0586  3001               	movlw	1	; select bank2/3
  5803     0587  0087               	movwf	7
  5804     0588  0181               	clrf	1
  5805     0589                     l3064:
  5806                           
  5807                           ;ai.c: 178:         }
  5808     0589  3001               	movlw	1
  5809     058A  00A8               	movwf	??_ai_propagate
  5810     058B  0828               	movf	??_ai_propagate,w
  5811     058C  07BD               	addwf	ai_propagate@i_914,f
  5812     058D                     l3066:
  5813     058D  3007               	movlw	7
  5814     058E  023D               	subwf	ai_propagate@i_914,w
  5815     058F  1C03               	skipc
  5816     0590  2D92               	goto	u1961
  5817     0591  2D93               	goto	u1960
  5818     0592                     u1961:
  5819     0592  2D78               	goto	l3062
  5820     0593                     u1960:
  5821     0593                     l3068:
  5822                           
  5823                           ;ai.c: 179:     }
  5824     0593  3001               	movlw	1
  5825     0594  00A8               	movwf	??_ai_propagate
  5826     0595  0828               	movf	??_ai_propagate,w
  5827     0596  07C4               	addwf	ai_propagate@j_913,f
  5828     0597                     l3070:
  5829     0597  3004               	movlw	4
  5830     0598  0244               	subwf	ai_propagate@j_913,w
  5831     0599  1C03               	skipc
  5832     059A  2D9C               	goto	u1971
  5833     059B  2D9D               	goto	u1970
  5834     059C                     u1971:
  5835     059C  2D57               	goto	l3052
  5836     059D                     u1970:
  5837     059D                     l3072:
  5838                           
  5839                           ;ai.c: 181:     int16_t dz;;ai.c: 182:     for(uint8_t k = 0; k < 4; k++){
  5840     059D  01C5               	clrf	ai_propagate@k
  5841     059E                     l3078:
  5842                           
  5843                           ;ai.c: 183:         dz = (int16_t)de_sigmoid(Z2[k]);
  5844     059E  0845               	movf	ai_propagate@k,w
  5845     059F  3E5C               	addlw	(low (_Z2| 0))& (0+255)
  5846     05A0  0086               	movwf	6
  5847     05A1  0187               	clrf	7
  5848     05A2  0801               	movf	1,w
  5849     05A3  318F  270D  3184   	fcall	_de_sigmoid
  5850     05A6  0020               	movlb	0	; select bank0
  5851     05A7  00A8               	movwf	??_ai_propagate
  5852     05A8  01A9               	clrf	??_ai_propagate+1
  5853     05A9  0828               	movf	??_ai_propagate,w
  5854     05AA  00C8               	movwf	ai_propagate@dz
  5855     05AB  0829               	movf	??_ai_propagate+1,w
  5856     05AC  00C9               	movwf	ai_propagate@dz+1
  5857     05AD                     l3080:
  5858                           
  5859                           ;ai.c: 184:         dz *= (int16_t)DY2[k];
  5860     05AD  0845               	movf	ai_propagate@k,w
  5861     05AE  3E58               	addlw	(low (_DY2| 0))& (0+255)
  5862     05AF  0086               	movwf	6
  5863     05B0  0187               	clrf	7
  5864     05B1  0801               	movf	1,w
  5865     05B2  00F7               	movwf	___wmul@multiplier
  5866     05B3  01F8               	clrf	___wmul@multiplier+1
  5867     05B4  1BF7               	btfsc	___wmul@multiplier,7
  5868     05B5  03F8               	decf	___wmul@multiplier+1,f
  5869     05B6  0849               	movf	ai_propagate@dz+1,w
  5870     05B7  00FA               	movwf	___wmul@multiplicand+1
  5871     05B8  0848               	movf	ai_propagate@dz,w
  5872     05B9  00F9               	movwf	___wmul@multiplicand
  5873     05BA  318F  27BF  3184   	fcall	___wmul
  5874     05BD  0878               	movf	?___wmul+1,w
  5875     05BE  0020               	movlb	0	; select bank0
  5876     05BF  00C9               	movwf	ai_propagate@dz+1
  5877     05C0  0877               	movf	?___wmul,w
  5878     05C1  00C8               	movwf	ai_propagate@dz
  5879     05C2                     l3082:
  5880                           
  5881                           ;ai.c: 185:         dz /= 255;
  5882     05C2  30FF               	movlw	255
  5883     05C3  00A0               	movwf	___awdiv@divisor
  5884     05C4  3000               	movlw	0
  5885     05C5  00A1               	movwf	___awdiv@divisor+1
  5886     05C6  0849               	movf	ai_propagate@dz+1,w
  5887     05C7  00A3               	movwf	___awdiv@dividend+1
  5888     05C8  0848               	movf	ai_propagate@dz,w
  5889     05C9  00A2               	movwf	___awdiv@dividend
  5890     05CA  3181  2131  3184   	fcall	___awdiv
  5891     05CD  0020               	movlb	0	; select bank0
  5892     05CE  0821               	movf	?___awdiv+1,w
  5893     05CF  00C9               	movwf	ai_propagate@dz+1
  5894     05D0  0820               	movf	?___awdiv,w
  5895     05D1  00C8               	movwf	ai_propagate@dz
  5896     05D2                     l3084:
  5897                           
  5898                           ;ai.c: 187:         DB2[k] += (int8_t)(dz>>1);
  5899     05D2  0849               	movf	ai_propagate@dz+1,w
  5900     05D3  00A9               	movwf	??_ai_propagate+1
  5901     05D4  0848               	movf	ai_propagate@dz,w
  5902     05D5  00A8               	movwf	??_ai_propagate
  5903     05D6  0D29               	rlf	??_ai_propagate+1,w
  5904     05D7  0CA9               	rrf	??_ai_propagate+1,f
  5905     05D8  0CA8               	rrf	??_ai_propagate,f
  5906     05D9  0828               	movf	??_ai_propagate,w
  5907     05DA  00AA               	movwf	??_ai_propagate+2
  5908     05DB  0845               	movf	ai_propagate@k,w
  5909     05DC  3E54               	addlw	(low (_DB2| 0))& (0+255)
  5910     05DD  0086               	movwf	6
  5911     05DE  0187               	clrf	7
  5912     05DF  082A               	movf	??_ai_propagate+2,w
  5913     05E0  0781               	addwf	1,f
  5914     05E1                     l3086:
  5915                           
  5916                           ;ai.c: 188:         for(uint8_t j = 0; j < 7; j++){
  5917     05E1  01C2               	clrf	ai_propagate@j_917
  5918     05E2                     l3092:
  5919                           
  5920                           ;ai.c: 189:             DY1[j] += (int8_t)(((dz*(int16_t)weights2_read(j, k))/127)>>1);
  5921     05E2  307F               	movlw	127
  5922     05E3  00A0               	movwf	___awdiv@divisor
  5923     05E4  3000               	movlw	0
  5924     05E5  00A1               	movwf	___awdiv@divisor+1
  5925     05E6  0845               	movf	ai_propagate@k,w
  5926     05E7  00F4               	movwf	weights2_read@add2
  5927     05E8  0842               	movf	ai_propagate@j_917,w
  5928     05E9  318E  26C6  3184   	fcall	_weights2_read
  5929     05EC  00F7               	movwf	___wmul@multiplier
  5930     05ED  01F8               	clrf	___wmul@multiplier+1
  5931     05EE  1BF7               	btfsc	___wmul@multiplier,7
  5932     05EF  03F8               	decf	___wmul@multiplier+1,f
  5933     05F0  0020               	movlb	0	; select bank0
  5934     05F1  0849               	movf	ai_propagate@dz+1,w
  5935     05F2  00FA               	movwf	___wmul@multiplicand+1
  5936     05F3  0848               	movf	ai_propagate@dz,w
  5937     05F4  00F9               	movwf	___wmul@multiplicand
  5938     05F5  318F  27BF  3184   	fcall	___wmul
  5939     05F8  0878               	movf	?___wmul+1,w
  5940     05F9  0020               	movlb	0	; select bank0
  5941     05FA  00A3               	movwf	___awdiv@dividend+1
  5942     05FB  0877               	movf	?___wmul,w
  5943     05FC  00A2               	movwf	___awdiv@dividend
  5944     05FD  3181  2131  3184   	fcall	___awdiv
  5945     0600  0020               	movlb	0	; select bank0
  5946     0601  0820               	movf	?___awdiv,w
  5947     0602  00A8               	movwf	??_ai_propagate
  5948     0603  0821               	movf	?___awdiv+1,w
  5949     0604  00A9               	movwf	??_ai_propagate+1
  5950     0605  0D29               	rlf	??_ai_propagate+1,w
  5951     0606  0CA9               	rrf	??_ai_propagate+1,f
  5952     0607  0CA8               	rrf	??_ai_propagate,f
  5953     0608  0828               	movf	??_ai_propagate,w
  5954     0609  00AA               	movwf	??_ai_propagate+2
  5955     060A  0842               	movf	ai_propagate@j_917,w
  5956     060B  3E4B               	addlw	(low (_DY1| (0+256)))& (0+255)
  5957     060C  0086               	movwf	6
  5958     060D  3001               	movlw	1	; select bank2/3
  5959     060E  0087               	movwf	7
  5960     060F  082A               	movf	??_ai_propagate+2,w
  5961     0610  0781               	addwf	1,f
  5962                           
  5963                           ;ai.c: 190:             DW2[j][k] += (int8_t)(((dz*(int16_t)Y1[j])/127)>>1);
  5964     0611  307F               	movlw	127
  5965     0612  00A0               	movwf	___awdiv@divisor
  5966     0613  3000               	movlw	0
  5967     0614  00A1               	movwf	___awdiv@divisor+1
  5968     0615  0842               	movf	ai_propagate@j_917,w
  5969     0616  3E59               	addlw	(low (_Y1| (0+256)))& (0+255)
  5970     0617  0086               	movwf	6
  5971     0618  3001               	movlw	1	; select bank2/3
  5972     0619  0087               	movwf	7
  5973     061A  0801               	movf	1,w
  5974     061B  00A8               	movwf	??_ai_propagate
  5975     061C  01A9               	clrf	??_ai_propagate+1
  5976     061D  0828               	movf	??_ai_propagate,w
  5977     061E  00F7               	movwf	___wmul@multiplier
  5978     061F  0829               	movf	??_ai_propagate+1,w
  5979     0620  00F8               	movwf	___wmul@multiplier+1
  5980     0621  0849               	movf	ai_propagate@dz+1,w
  5981     0622  00FA               	movwf	___wmul@multiplicand+1
  5982     0623  0848               	movf	ai_propagate@dz,w
  5983     0624  00F9               	movwf	___wmul@multiplicand
  5984     0625  318F  27BF  3184   	fcall	___wmul
  5985     0628  0878               	movf	?___wmul+1,w
  5986     0629  0020               	movlb	0	; select bank0
  5987     062A  00A3               	movwf	___awdiv@dividend+1
  5988     062B  0877               	movf	?___wmul,w
  5989     062C  00A2               	movwf	___awdiv@dividend
  5990     062D  3181  2131  3184   	fcall	___awdiv
  5991     0630  0020               	movlb	0	; select bank0
  5992     0631  0820               	movf	?___awdiv,w
  5993     0632  00AA               	movwf	??_ai_propagate+2
  5994     0633  0821               	movf	?___awdiv+1,w
  5995     0634  00AB               	movwf	??_ai_propagate+3
  5996     0635  0D2B               	rlf	??_ai_propagate+3,w
  5997     0636  0CAB               	rrf	??_ai_propagate+3,f
  5998     0637  0CAA               	rrf	??_ai_propagate+2,f
  5999     0638  082A               	movf	??_ai_propagate+2,w
  6000     0639  00AC               	movwf	??_ai_propagate+4
  6001     063A  0842               	movf	ai_propagate@j_917,w
  6002     063B  00AD               	movwf	??_ai_propagate+5
  6003     063C  3002               	movlw	2
  6004     063D                     u1985:
  6005     063D  35AD               	lslf	??_ai_propagate+5,f
  6006     063E  0B89               	decfsz	9,f
  6007     063F  2E3D               	goto	u1985
  6008     0640  3020               	movlw	(low (_DW2| (0+256)))& (0+255)
  6009     0641  072D               	addwf	??_ai_propagate+5,w
  6010     0642  00AE               	movwf	??_ai_propagate+6
  6011     0643  0845               	movf	ai_propagate@k,w
  6012     0644  072E               	addwf	??_ai_propagate+6,w
  6013     0645  00AF               	movwf	??_ai_propagate+7
  6014     0646  082F               	movf	??_ai_propagate+7,w
  6015     0647  0086               	movwf	6
  6016     0648  3001               	movlw	1	; select bank2/3
  6017     0649  0087               	movwf	7
  6018     064A  082C               	movf	??_ai_propagate+4,w
  6019     064B  0781               	addwf	1,f
  6020     064C                     l3094:
  6021                           
  6022                           ;ai.c: 191:         }
  6023     064C  3001               	movlw	1
  6024     064D  00A8               	movwf	??_ai_propagate
  6025     064E  0828               	movf	??_ai_propagate,w
  6026     064F  07C2               	addwf	ai_propagate@j_917,f
  6027     0650                     l3096:
  6028     0650  3007               	movlw	7
  6029     0651  0242               	subwf	ai_propagate@j_917,w
  6030     0652  1C03               	skipc
  6031     0653  2E55               	goto	u1991
  6032     0654  2E56               	goto	u1990
  6033     0655                     u1991:
  6034     0655  2DE2               	goto	l3092
  6035     0656                     u1990:
  6036     0656                     l3098:
  6037                           
  6038                           ;ai.c: 192:     }
  6039     0656  3001               	movlw	1
  6040     0657  00A8               	movwf	??_ai_propagate
  6041     0658  0828               	movf	??_ai_propagate,w
  6042     0659  07C5               	addwf	ai_propagate@k,f
  6043     065A                     l3100:
  6044     065A  3004               	movlw	4
  6045     065B  0245               	subwf	ai_propagate@k,w
  6046     065C  1C03               	skipc
  6047     065D  2E5F               	goto	u2001
  6048     065E  2E60               	goto	u2000
  6049     065F                     u2001:
  6050     065F  2D9E               	goto	l3078
  6051     0660                     u2000:
  6052     0660                     l3102:
  6053                           
  6054                           ;ai.c: 193:     for(uint8_t k = 0; k < 7; k++){
  6055     0660  01C3               	clrf	ai_propagate@k_918
  6056     0661                     l3104:
  6057     0661  3007               	movlw	7
  6058     0662  0243               	subwf	ai_propagate@k_918,w
  6059     0663  1C03               	skipc
  6060     0664  2E66               	goto	u2011
  6061     0665  2E67               	goto	u2010
  6062     0666                     u2011:
  6063     0666  2E68               	goto	l3108
  6064     0667                     u2010:
  6065     0667  2F0C               	goto	l3132
  6066     0668                     l3108:
  6067                           
  6068                           ;ai.c: 194:         dz = (int16_t)de_sigmoid(Z1[k]);
  6069     0668  0843               	movf	ai_propagate@k_918,w
  6070     0669  3E52               	addlw	(low (_Z1| (0+256)))& (0+255)
  6071     066A  0086               	movwf	6
  6072     066B  3001               	movlw	1	; select bank2/3
  6073     066C  0087               	movwf	7
  6074     066D  0801               	movf	1,w
  6075     066E  318F  270D  3184   	fcall	_de_sigmoid
  6076     0671  0020               	movlb	0	; select bank0
  6077     0672  00A8               	movwf	??_ai_propagate
  6078     0673  01A9               	clrf	??_ai_propagate+1
  6079     0674  0828               	movf	??_ai_propagate,w
  6080     0675  00C8               	movwf	ai_propagate@dz
  6081     0676  0829               	movf	??_ai_propagate+1,w
  6082     0677  00C9               	movwf	ai_propagate@dz+1
  6083     0678                     l3110:
  6084                           
  6085                           ;ai.c: 195:         dz *= (int16_t)DY1[k];
  6086     0678  0843               	movf	ai_propagate@k_918,w
  6087     0679  3E4B               	addlw	(low (_DY1| (0+256)))& (0+255)
  6088     067A  0086               	movwf	6
  6089     067B  3001               	movlw	1	; select bank2/3
  6090     067C  0087               	movwf	7
  6091     067D  0801               	movf	1,w
  6092     067E  00F7               	movwf	___wmul@multiplier
  6093     067F  01F8               	clrf	___wmul@multiplier+1
  6094     0680  1BF7               	btfsc	___wmul@multiplier,7
  6095     0681  03F8               	decf	___wmul@multiplier+1,f
  6096     0682  0849               	movf	ai_propagate@dz+1,w
  6097     0683  00FA               	movwf	___wmul@multiplicand+1
  6098     0684  0848               	movf	ai_propagate@dz,w
  6099     0685  00F9               	movwf	___wmul@multiplicand
  6100     0686  318F  27BF  3184   	fcall	___wmul
  6101     0689  0878               	movf	?___wmul+1,w
  6102     068A  0020               	movlb	0	; select bank0
  6103     068B  00C9               	movwf	ai_propagate@dz+1
  6104     068C  0877               	movf	?___wmul,w
  6105     068D  00C8               	movwf	ai_propagate@dz
  6106     068E                     l3112:
  6107                           
  6108                           ;ai.c: 196:         dz /= 255;
  6109     068E  30FF               	movlw	255
  6110     068F  00A0               	movwf	___awdiv@divisor
  6111     0690  3000               	movlw	0
  6112     0691  00A1               	movwf	___awdiv@divisor+1
  6113     0692  0849               	movf	ai_propagate@dz+1,w
  6114     0693  00A3               	movwf	___awdiv@dividend+1
  6115     0694  0848               	movf	ai_propagate@dz,w
  6116     0695  00A2               	movwf	___awdiv@dividend
  6117     0696  3181  2131  3184   	fcall	___awdiv
  6118     0699  0020               	movlb	0	; select bank0
  6119     069A  0821               	movf	?___awdiv+1,w
  6120     069B  00C9               	movwf	ai_propagate@dz+1
  6121     069C  0820               	movf	?___awdiv,w
  6122     069D  00C8               	movwf	ai_propagate@dz
  6123     069E                     l3114:
  6124                           
  6125                           ;ai.c: 198:         DB1[k] += (int8_t)(dz>>1);
  6126     069E  0849               	movf	ai_propagate@dz+1,w
  6127     069F  00A9               	movwf	??_ai_propagate+1
  6128     06A0  0848               	movf	ai_propagate@dz,w
  6129     06A1  00A8               	movwf	??_ai_propagate
  6130     06A2  0D29               	rlf	??_ai_propagate+1,w
  6131     06A3  0CA9               	rrf	??_ai_propagate+1,f
  6132     06A4  0CA8               	rrf	??_ai_propagate,f
  6133     06A5  0828               	movf	??_ai_propagate,w
  6134     06A6  00AA               	movwf	??_ai_propagate+2
  6135     06A7  0843               	movf	ai_propagate@k_918,w
  6136     06A8  3E44               	addlw	(low (_DB1| (0+256)))& (0+255)
  6137     06A9  0086               	movwf	6
  6138     06AA  3001               	movlw	1	; select bank2/3
  6139     06AB  0087               	movwf	7
  6140     06AC  082A               	movf	??_ai_propagate+2,w
  6141     06AD  0781               	addwf	1,f
  6142     06AE                     l3116:
  6143                           
  6144                           ;ai.c: 199:         for(uint8_t j = 0; j < 16; j++){
  6145     06AE  01BE               	clrf	ai_propagate@j_919
  6146     06AF                     l3118:
  6147     06AF  3010               	movlw	16
  6148     06B0  023E               	subwf	ai_propagate@j_919,w
  6149     06B1  1C03               	skipc
  6150     06B2  2EB4               	goto	u2021
  6151     06B3  2EB5               	goto	u2020
  6152     06B4                     u2021:
  6153     06B4  2EB6               	goto	l3122
  6154     06B5                     u2020:
  6155     06B5  2F07               	goto	l3128
  6156     06B6                     l3122:
  6157                           
  6158                           ;ai.c: 200:             DW1[j][k] += (int8_t)(((dz*(int16_t)Y0[j])/127)>>1);
  6159     06B6  307F               	movlw	127
  6160     06B7  00A0               	movwf	___awdiv@divisor
  6161     06B8  3000               	movlw	0
  6162     06B9  00A1               	movwf	___awdiv@divisor+1
  6163     06BA  083E               	movf	ai_propagate@j_919,w
  6164     06BB  3EE0               	addlw	(low (_Y0| 0))& (0+255)
  6165     06BC  0086               	movwf	6
  6166     06BD  0187               	clrf	7
  6167     06BE  0801               	movf	1,w
  6168     06BF  00A8               	movwf	??_ai_propagate
  6169     06C0  01A9               	clrf	??_ai_propagate+1
  6170     06C1  0828               	movf	??_ai_propagate,w
  6171     06C2  00F7               	movwf	___wmul@multiplier
  6172     06C3  0829               	movf	??_ai_propagate+1,w
  6173     06C4  00F8               	movwf	___wmul@multiplier+1
  6174     06C5  0849               	movf	ai_propagate@dz+1,w
  6175     06C6  00FA               	movwf	___wmul@multiplicand+1
  6176     06C7  0848               	movf	ai_propagate@dz,w
  6177     06C8  00F9               	movwf	___wmul@multiplicand
  6178     06C9  318F  27BF  3184   	fcall	___wmul
  6179     06CC  0878               	movf	?___wmul+1,w
  6180     06CD  0020               	movlb	0	; select bank0
  6181     06CE  00A3               	movwf	___awdiv@dividend+1
  6182     06CF  0877               	movf	?___wmul,w
  6183     06D0  00A2               	movwf	___awdiv@dividend
  6184     06D1  3181  2131  3184   	fcall	___awdiv
  6185     06D4  0020               	movlb	0	; select bank0
  6186     06D5  0820               	movf	?___awdiv,w
  6187     06D6  00AA               	movwf	??_ai_propagate+2
  6188     06D7  0821               	movf	?___awdiv+1,w
  6189     06D8  00AB               	movwf	??_ai_propagate+3
  6190     06D9  0D2B               	rlf	??_ai_propagate+3,w
  6191     06DA  0CAB               	rrf	??_ai_propagate+3,f
  6192     06DB  0CAA               	rrf	??_ai_propagate+2,f
  6193     06DC  082A               	movf	??_ai_propagate+2,w
  6194     06DD  00AC               	movwf	??_ai_propagate+4
  6195     06DE  0843               	movf	ai_propagate@k_918,w
  6196     06DF  00AD               	movwf	??_ai_propagate+5
  6197     06E0  01AE               	clrf	??_ai_propagate+6
  6198     06E1  083E               	movf	ai_propagate@j_919,w
  6199     06E2  00AF               	movwf	??_ai_propagate+7
  6200     06E3  01B0               	clrf	??_ai_propagate+8
  6201     06E4  082F               	movf	??_ai_propagate+7,w
  6202     06E5  00F7               	movwf	___wmul@multiplier
  6203     06E6  0830               	movf	??_ai_propagate+8,w
  6204     06E7  00F8               	movwf	___wmul@multiplier+1
  6205     06E8  3007               	movlw	7
  6206     06E9  00F9               	movwf	___wmul@multiplicand
  6207     06EA  3000               	movlw	0
  6208     06EB  00FA               	movwf	___wmul@multiplicand+1
  6209     06EC  318F  27BF  3184   	fcall	___wmul
  6210     06EF  3000               	movlw	0
  6211     06F0  0020               	movlb	0	; select bank0
  6212     06F1  00B1               	movwf	??_ai_propagate+9
  6213     06F2  3021               	movlw	33
  6214     06F3  00B2               	movwf	??_ai_propagate+10
  6215     06F4  0877               	movf	?___wmul,w
  6216     06F5  0731               	addwf	??_ai_propagate+9,w
  6217     06F6  00B3               	movwf	??_ai_propagate+11
  6218     06F7  0878               	movf	?___wmul+1,w
  6219     06F8  3D32               	addwfc	??_ai_propagate+10,w
  6220     06F9  00B4               	movwf	??_ai_propagate+12
  6221     06FA  082D               	movf	??_ai_propagate+5,w
  6222     06FB  0733               	addwf	??_ai_propagate+11,w
  6223     06FC  0086               	movwf	6
  6224     06FD  082E               	movf	??_ai_propagate+6,w
  6225     06FE  3D34               	addwfc	??_ai_propagate+12,w
  6226     06FF  0087               	movwf	7
  6227     0700  082C               	movf	??_ai_propagate+4,w
  6228     0701  0781               	addwf	1,f
  6229     0702                     l3124:
  6230                           
  6231                           ;ai.c: 201:         }
  6232     0702  3001               	movlw	1
  6233     0703  00A8               	movwf	??_ai_propagate
  6234     0704  0828               	movf	??_ai_propagate,w
  6235     0705  07BE               	addwf	ai_propagate@j_919,f
  6236     0706  2EAF               	goto	l3118
  6237     0707                     l3128:
  6238                           
  6239                           ;ai.c: 202:     }
  6240     0707  3001               	movlw	1
  6241     0708  00A8               	movwf	??_ai_propagate
  6242     0709  0828               	movf	??_ai_propagate,w
  6243     070A  07C3               	addwf	ai_propagate@k_918,f
  6244     070B  2E61               	goto	l3104
  6245     070C                     l3132:
  6246                           
  6247                           ;ai.c: 204:     for(uint8_t j = 0; j < 4; j++){
  6248     070C  01C6               	clrf	ai_propagate@j_920
  6249     070D                     l3134:
  6250     070D  3004               	movlw	4
  6251     070E  0246               	subwf	ai_propagate@j_920,w
  6252     070F  1C03               	skipc
  6253     0710  2F12               	goto	u2031
  6254     0711  2F13               	goto	u2030
  6255     0712                     u2031:
  6256     0712  2F14               	goto	l3138
  6257     0713                     u2030:
  6258     0713  2F5A               	goto	l3156
  6259     0714                     l3138:
  6260                           
  6261                           ;ai.c: 205:         biases2_write(j, biases2_read(j) - DB2[j]);
  6262     0714  0846               	movf	ai_propagate@j_920,w
  6263     0715  3E54               	addlw	(low (_DB2| 0))& (0+255)
  6264     0716  0086               	movwf	6
  6265     0717  0187               	clrf	7
  6266     0718  0846               	movf	ai_propagate@j_920,w
  6267     0719  318E  268D  3184   	fcall	_biases2_read
  6268     071C  0020               	movlb	0	; select bank0
  6269     071D  00A8               	movwf	??_ai_propagate
  6270     071E  0801               	movf	1,w
  6271     071F  0228               	subwf	??_ai_propagate,w
  6272     0720  00F8               	movwf	biases2_write@val
  6273     0721  0846               	movf	ai_propagate@j_920,w
  6274     0722  318E  26A5  3184   	fcall	_biases2_write
  6275     0725                     l3140:
  6276                           
  6277                           ;ai.c: 206:         for(uint8_t i = 0; i < 7; i++){
  6278     0725  0020               	movlb	0	; select bank0
  6279     0726  01C0               	clrf	ai_propagate@i_921
  6280     0727                     l3142:
  6281     0727  3007               	movlw	7
  6282     0728  0240               	subwf	ai_propagate@i_921,w
  6283     0729  1C03               	skipc
  6284     072A  2F2C               	goto	u2041
  6285     072B  2F2D               	goto	u2040
  6286     072C                     u2041:
  6287     072C  2F2E               	goto	l3146
  6288     072D                     u2040:
  6289     072D  2F55               	goto	l3152
  6290     072E                     l3146:
  6291                           
  6292                           ;ai.c: 207:             weights2_write(i,j, weights2_read(i,j) - DW2[i][j]);
  6293     072E  0846               	movf	ai_propagate@j_920,w
  6294     072F  00F8               	movwf	weights2_write@add2
  6295     0730  0840               	movf	ai_propagate@i_921,w
  6296     0731  00A8               	movwf	??_ai_propagate
  6297     0732  3002               	movlw	2
  6298     0733                     u2055:
  6299     0733  35A8               	lslf	??_ai_propagate,f
  6300     0734  0B89               	decfsz	9,f
  6301     0735  2F33               	goto	u2055
  6302     0736  3020               	movlw	(low (_DW2| (0+256)))& (0+255)
  6303     0737  0728               	addwf	??_ai_propagate,w
  6304     0738  00A9               	movwf	??_ai_propagate+1
  6305     0739  0846               	movf	ai_propagate@j_920,w
  6306     073A  0729               	addwf	??_ai_propagate+1,w
  6307     073B  00AA               	movwf	??_ai_propagate+2
  6308     073C  082A               	movf	??_ai_propagate+2,w
  6309     073D  0086               	movwf	6
  6310     073E  3001               	movlw	1	; select bank2/3
  6311     073F  0087               	movwf	7
  6312     0740  0846               	movf	ai_propagate@j_920,w
  6313     0741  00F4               	movwf	weights2_read@add2
  6314     0742  0840               	movf	ai_propagate@i_921,w
  6315     0743  318E  26C6  3184   	fcall	_weights2_read
  6316     0746  0020               	movlb	0	; select bank0
  6317     0747  00AB               	movwf	??_ai_propagate+3
  6318     0748  0801               	movf	1,w
  6319     0749  022B               	subwf	??_ai_propagate+3,w
  6320     074A  00F9               	movwf	weights2_write@val
  6321     074B  0840               	movf	ai_propagate@i_921,w
  6322     074C  318E  26EE  3184   	fcall	_weights2_write
  6323     074F                     l3148:
  6324                           
  6325                           ;ai.c: 208:         }
  6326     074F  3001               	movlw	1
  6327     0750  0020               	movlb	0	; select bank0
  6328     0751  00A8               	movwf	??_ai_propagate
  6329     0752  0828               	movf	??_ai_propagate,w
  6330     0753  07C0               	addwf	ai_propagate@i_921,f
  6331     0754  2F27               	goto	l3142
  6332     0755                     l3152:
  6333                           
  6334                           ;ai.c: 209:     }
  6335     0755  3001               	movlw	1
  6336     0756  00A8               	movwf	??_ai_propagate
  6337     0757  0828               	movf	??_ai_propagate,w
  6338     0758  07C6               	addwf	ai_propagate@j_920,f
  6339     0759  2F0D               	goto	l3134
  6340     075A                     l3156:
  6341                           
  6342                           ;ai.c: 210:     for(uint8_t j = 0; j < 7; j++){
  6343     075A  01C7               	clrf	ai_propagate@j_922
  6344     075B                     l3158:
  6345     075B  3007               	movlw	7
  6346     075C  0247               	subwf	ai_propagate@j_922,w
  6347     075D  1C03               	skipc
  6348     075E  2F60               	goto	u2061
  6349     075F  2F61               	goto	u2060
  6350     0760                     u2061:
  6351     0760  2F62               	goto	l3162
  6352     0761                     u2060:
  6353     0761  2FBB               	goto	l622
  6354     0762                     l3162:
  6355                           
  6356                           ;ai.c: 211:         biases1_write(j, biases1_read(j) - DB1[j]);
  6357     0762  0847               	movf	ai_propagate@j_922,w
  6358     0763  3E44               	addlw	(low (_DB1| (0+256)))& (0+255)
  6359     0764  0086               	movwf	6
  6360     0765  3001               	movlw	1	; select bank2/3
  6361     0766  0087               	movwf	7
  6362     0767  0847               	movf	ai_propagate@j_922,w
  6363     0768  318E  2686  3184   	fcall	_biases1_read
  6364     076B  0020               	movlb	0	; select bank0
  6365     076C  00A8               	movwf	??_ai_propagate
  6366     076D  0801               	movf	1,w
  6367     076E  0228               	subwf	??_ai_propagate,w
  6368     076F  00F8               	movwf	biases1_write@val
  6369     0770  0847               	movf	ai_propagate@j_922,w
  6370     0771  318E  269C  3184   	fcall	_biases1_write
  6371     0774                     l3164:
  6372                           
  6373                           ;ai.c: 212:         for(uint8_t i = 0; i < 16; i++){
  6374     0774  0020               	movlb	0	; select bank0
  6375     0775  01C1               	clrf	ai_propagate@i_923
  6376     0776                     l3166:
  6377     0776  3010               	movlw	16
  6378     0777  0241               	subwf	ai_propagate@i_923,w
  6379     0778  1C03               	skipc
  6380     0779  2F7B               	goto	u2071
  6381     077A  2F7C               	goto	u2070
  6382     077B                     u2071:
  6383     077B  2F7D               	goto	l3170
  6384     077C                     u2070:
  6385     077C  2FB6               	goto	l3176
  6386     077D                     l3170:
  6387                           
  6388                           ;ai.c: 213:             weights1_write(i,j, weights1_read(i,j) - DW1[i][j]);
  6389     077D  0847               	movf	ai_propagate@j_922,w
  6390     077E  00A0               	movwf	weights1_write@add2
  6391     077F  0847               	movf	ai_propagate@j_922,w
  6392     0780  00A8               	movwf	??_ai_propagate
  6393     0781  01A9               	clrf	??_ai_propagate+1
  6394     0782  0841               	movf	ai_propagate@i_923,w
  6395     0783  00AA               	movwf	??_ai_propagate+2
  6396     0784  01AB               	clrf	??_ai_propagate+3
  6397     0785  082A               	movf	??_ai_propagate+2,w
  6398     0786  00F7               	movwf	___wmul@multiplier
  6399     0787  082B               	movf	??_ai_propagate+3,w
  6400     0788  00F8               	movwf	___wmul@multiplier+1
  6401     0789  3007               	movlw	7
  6402     078A  00F9               	movwf	___wmul@multiplicand
  6403     078B  3000               	movlw	0
  6404     078C  00FA               	movwf	___wmul@multiplicand+1
  6405     078D  318F  27BF  3184   	fcall	___wmul
  6406     0790  3000               	movlw	0
  6407     0791  0020               	movlb	0	; select bank0
  6408     0792  00AC               	movwf	??_ai_propagate+4
  6409     0793  3021               	movlw	33
  6410     0794  00AD               	movwf	??_ai_propagate+5
  6411     0795  0877               	movf	?___wmul,w
  6412     0796  072C               	addwf	??_ai_propagate+4,w
  6413     0797  00AE               	movwf	??_ai_propagate+6
  6414     0798  0878               	movf	?___wmul+1,w
  6415     0799  3D2D               	addwfc	??_ai_propagate+5,w
  6416     079A  00AF               	movwf	??_ai_propagate+7
  6417     079B  0828               	movf	??_ai_propagate,w
  6418     079C  072E               	addwf	??_ai_propagate+6,w
  6419     079D  0086               	movwf	6
  6420     079E  0829               	movf	??_ai_propagate+1,w
  6421     079F  3D2F               	addwfc	??_ai_propagate+7,w
  6422     07A0  0087               	movwf	7
  6423     07A1  0847               	movf	ai_propagate@j_922,w
  6424     07A2  00F4               	movwf	weights1_read@add2
  6425     07A3  0841               	movf	ai_propagate@i_923,w
  6426     07A4  318E  26E0  3184   	fcall	_weights1_read
  6427     07A7  0020               	movlb	0	; select bank0
  6428     07A8  00B0               	movwf	??_ai_propagate+8
  6429     07A9  0801               	movf	1,w
  6430     07AA  0230               	subwf	??_ai_propagate+8,w
  6431     07AB  00A1               	movwf	weights1_write@val
  6432     07AC  0841               	movf	ai_propagate@i_923,w
  6433     07AD  318F  272D  3184   	fcall	_weights1_write
  6434     07B0                     l3172:
  6435                           
  6436                           ;ai.c: 214:         }
  6437     07B0  3001               	movlw	1
  6438     07B1  0020               	movlb	0	; select bank0
  6439     07B2  00A8               	movwf	??_ai_propagate
  6440     07B3  0828               	movf	??_ai_propagate,w
  6441     07B4  07C1               	addwf	ai_propagate@i_923,f
  6442     07B5  2F76               	goto	l3166
  6443     07B6                     l3176:
  6444                           
  6445                           ;ai.c: 215:     }
  6446     07B6  3001               	movlw	1
  6447     07B7  00A8               	movwf	??_ai_propagate
  6448     07B8  0828               	movf	??_ai_propagate,w
  6449     07B9  07C7               	addwf	ai_propagate@j_922,f
  6450     07BA  2F5B               	goto	l3158
  6451     07BB                     l622:
  6452     07BB  0008               	return
  6453     07BC                     __end_of_ai_propagate:
  6454                           
  6455                           	psect	text18
  6456     0EEE                     __ptext18:	
  6457 ;; *************** function _weights2_write *****************
  6458 ;; Defined at:
  6459 ;;		line 26 in file "ai.c"
  6460 ;; Parameters:    Size  Location     Type
  6461 ;;  add1            1    wreg     unsigned char 
  6462 ;;  add2            1    8[COMMON] unsigned char 
  6463 ;;  val             1    9[COMMON] char 
  6464 ;; Auto vars:     Size  Location     Type
  6465 ;;  add1            1   10[COMMON] unsigned char 
  6466 ;; Return value:  Size  Location     Type
  6467 ;;                  1    wreg      void 
  6468 ;; Registers used:
  6469 ;;		wreg, status,2, status,0, pclath, cstack
  6470 ;; Tracked objects:
  6471 ;;		On entry : 0/0
  6472 ;;		On exit  : 0/0
  6473 ;;		Unchanged: 0/0
  6474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6475 ;;      Params:         2       0       0       0       0       0
  6476 ;;      Locals:         1       0       0       0       0       0
  6477 ;;      Temps:          0       0       0       0       0       0
  6478 ;;      Totals:         3       0       0       0       0       0
  6479 ;;Total ram usage:        3 bytes
  6480 ;; Hardware stack levels used: 1
  6481 ;; Hardware stack levels required when called: 1
  6482 ;; This function calls:
  6483 ;;		___bmul
  6484 ;;		_eeprom_write
  6485 ;; This function is called by:
  6486 ;;		_ai_propagate
  6487 ;;		_ai_initiate
  6488 ;; This function uses a non-reentrant model
  6489 ;;
  6490                           
  6491     0EEE                     _weights2_write:	
  6492                           ;psect for function _weights2_write
  6493                           
  6494                           
  6495                           ;incstack = 0
  6496                           ; Regs used in _weights2_write: [wreg+status,2+status,0+pclath+cstack]
  6497                           ;weights2_write@add1 stored from wreg
  6498     0EEE  00FA               	movwf	weights2_write@add1
  6499     0EEF                     l2618:
  6500                           
  6501                           ;ai.c: 27:     eeprom_write(0 +16*7 +7 + 7*add1 + add2, (unsigned char)val);
  6502     0EEF  0879               	movf	weights2_write@val,w
  6503     0EF0  00F4               	movwf	eeprom_write@value
  6504     0EF1  3007               	movlw	7
  6505     0EF2  00F0               	movwf	___bmul@multiplicand
  6506     0EF3  087A               	movf	weights2_write@add1,w
  6507     0EF4  318F  2778  318E   	fcall	___bmul
  6508     0EF7  0778               	addwf	weights2_write@add2,w
  6509     0EF8  3E77               	addlw	119
  6510     0EF9  3180  2032  318E   	fcall	_eeprom_write
  6511     0EFC                     l543:
  6512     0EFC  0008               	return
  6513     0EFD                     __end_of_weights2_write:
  6514                           
  6515                           	psect	text19
  6516     0EC6                     __ptext19:	
  6517 ;; *************** function _weights2_read *****************
  6518 ;; Defined at:
  6519 ;;		line 38 in file "ai.c"
  6520 ;; Parameters:    Size  Location     Type
  6521 ;;  add1            1    wreg     unsigned char 
  6522 ;;  add2            1    4[COMMON] unsigned char 
  6523 ;; Auto vars:     Size  Location     Type
  6524 ;;  add1            1    5[COMMON] unsigned char 
  6525 ;; Return value:  Size  Location     Type
  6526 ;;                  1    wreg      char 
  6527 ;; Registers used:
  6528 ;;		wreg, status,2, status,0, pclath, cstack
  6529 ;; Tracked objects:
  6530 ;;		On entry : 0/0
  6531 ;;		On exit  : 0/0
  6532 ;;		Unchanged: 0/0
  6533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6534 ;;      Params:         1       0       0       0       0       0
  6535 ;;      Locals:         1       0       0       0       0       0
  6536 ;;      Temps:          0       0       0       0       0       0
  6537 ;;      Totals:         2       0       0       0       0       0
  6538 ;;Total ram usage:        2 bytes
  6539 ;; Hardware stack levels used: 1
  6540 ;; Hardware stack levels required when called: 1
  6541 ;; This function calls:
  6542 ;;		___bmul
  6543 ;;		_eeprom_read
  6544 ;; This function is called by:
  6545 ;;		_ai_run
  6546 ;;		_ai_propagate
  6547 ;; This function uses a non-reentrant model
  6548 ;;
  6549                           
  6550     0EC6                     _weights2_read:	
  6551                           ;psect for function _weights2_read
  6552                           
  6553                           
  6554                           ;incstack = 0
  6555                           ; Regs used in _weights2_read: [wreg+status,2+status,0+pclath+cstack]
  6556                           ;weights2_read@add1 stored from wreg
  6557     0EC6  00F5               	movwf	weights2_read@add1
  6558     0EC7                     l2630:
  6559                           
  6560                           ;ai.c: 39:     return (int8_t)eeprom_read(0 +16*7 +7 + add1*7 + add2);
  6561     0EC7  3007               	movlw	7
  6562     0EC8  00F0               	movwf	___bmul@multiplicand
  6563     0EC9  0875               	movf	weights2_read@add1,w
  6564     0ECA  318F  2778  318E   	fcall	___bmul
  6565     0ECD  0774               	addwf	weights2_read@add2,w
  6566     0ECE  3E77               	addlw	119
  6567     0ECF  318F  2763  318E   	fcall	_eeprom_read
  6568     0ED2                     l555:
  6569     0ED2  0008               	return
  6570     0ED3                     __end_of_weights2_read:
  6571                           
  6572                           	psect	text20
  6573     0F78                     __ptext20:	
  6574 ;; *************** function ___bmul *****************
  6575 ;; Defined at:
  6576 ;;		line 4 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\common\Umul8.c"
  6577 ;; Parameters:    Size  Location     Type
  6578 ;;  multiplier      1    wreg     unsigned char 
  6579 ;;  multiplicand    1    0[COMMON] unsigned char 
  6580 ;; Auto vars:     Size  Location     Type
  6581 ;;  multiplier      1    3[COMMON] unsigned char 
  6582 ;;  product         1    2[COMMON] unsigned char 
  6583 ;; Return value:  Size  Location     Type
  6584 ;;                  1    wreg      unsigned char 
  6585 ;; Registers used:
  6586 ;;		wreg, status,2, status,0
  6587 ;; Tracked objects:
  6588 ;;		On entry : 0/0
  6589 ;;		On exit  : 0/0
  6590 ;;		Unchanged: 0/0
  6591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6592 ;;      Params:         1       0       0       0       0       0
  6593 ;;      Locals:         2       0       0       0       0       0
  6594 ;;      Temps:          1       0       0       0       0       0
  6595 ;;      Totals:         4       0       0       0       0       0
  6596 ;;Total ram usage:        4 bytes
  6597 ;; Hardware stack levels used: 1
  6598 ;; This function calls:
  6599 ;;		Nothing
  6600 ;; This function is called by:
  6601 ;;		_weights2_write
  6602 ;;		_weights2_read
  6603 ;; This function uses a non-reentrant model
  6604 ;;
  6605                           
  6606     0F78                     ___bmul:	
  6607                           ;psect for function ___bmul
  6608                           
  6609                           
  6610                           ;incstack = 0
  6611                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  6612                           ;___bmul@multiplier stored from wreg
  6613     0F78  00F3               	movwf	___bmul@multiplier
  6614     0F79                     l2534:
  6615     0F79  01F2               	clrf	___bmul@product
  6616     0F7A                     l2536:
  6617     0F7A  1C73               	btfss	___bmul@multiplier,0
  6618     0F7B  2F7D               	goto	u1311
  6619     0F7C  2F7E               	goto	u1310
  6620     0F7D                     u1311:
  6621     0F7D  2F82               	goto	l2540
  6622     0F7E                     u1310:
  6623     0F7E                     l2538:
  6624     0F7E  0870               	movf	___bmul@multiplicand,w
  6625     0F7F  00F1               	movwf	??___bmul
  6626     0F80  0871               	movf	??___bmul,w
  6627     0F81  07F2               	addwf	___bmul@product,f
  6628     0F82                     l2540:
  6629     0F82  1003               	clrc
  6630     0F83  0DF0               	rlf	___bmul@multiplicand,f
  6631     0F84                     l2542:
  6632     0F84  1003               	clrc
  6633     0F85  0CF3               	rrf	___bmul@multiplier,f
  6634     0F86  0873               	movf	___bmul@multiplier,w
  6635     0F87  1D03               	btfss	3,2
  6636     0F88  2F8A               	goto	u1321
  6637     0F89  2F8B               	goto	u1320
  6638     0F8A                     u1321:
  6639     0F8A  2F7A               	goto	l2536
  6640     0F8B                     u1320:
  6641     0F8B                     l2544:
  6642     0F8B  0872               	movf	___bmul@product,w
  6643     0F8C                     l880:
  6644     0F8C  0008               	return
  6645     0F8D                     __end_of___bmul:
  6646                           
  6647                           	psect	text21
  6648     0F2D                     __ptext21:	
  6649 ;; *************** function _weights1_write *****************
  6650 ;; Defined at:
  6651 ;;		line 20 in file "ai.c"
  6652 ;; Parameters:    Size  Location     Type
  6653 ;;  add1            1    wreg     unsigned char 
  6654 ;;  add2            1    0[BANK0 ] unsigned char 
  6655 ;;  val             1    1[BANK0 ] char 
  6656 ;; Auto vars:     Size  Location     Type
  6657 ;;  add1            1    2[BANK0 ] unsigned char 
  6658 ;; Return value:  Size  Location     Type
  6659 ;;                  1    wreg      void 
  6660 ;; Registers used:
  6661 ;;		wreg, status,2, status,0, pclath, cstack
  6662 ;; Tracked objects:
  6663 ;;		On entry : 0/0
  6664 ;;		On exit  : 0/0
  6665 ;;		Unchanged: 0/0
  6666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6667 ;;      Params:         0       2       0       0       0       0
  6668 ;;      Locals:         0       1       0       0       0       0
  6669 ;;      Temps:          1       0       0       0       0       0
  6670 ;;      Totals:         1       3       0       0       0       0
  6671 ;;Total ram usage:        4 bytes
  6672 ;; Hardware stack levels used: 1
  6673 ;; Hardware stack levels required when called: 1
  6674 ;; This function calls:
  6675 ;;		_eeprom_write
  6676 ;; This function is called by:
  6677 ;;		_ai_propagate
  6678 ;;		_ai_initiate
  6679 ;; This function uses a non-reentrant model
  6680 ;;
  6681                           
  6682     0F2D                     _weights1_write:	
  6683                           ;psect for function _weights1_write
  6684                           
  6685                           
  6686                           ;incstack = 0
  6687                           ; Regs used in _weights1_write: [wreg+status,2+status,0+pclath+cstack]
  6688                           ;weights1_write@add1 stored from wreg
  6689     0F2D  0020               	movlb	0	; select bank0
  6690     0F2E  00A2               	movwf	weights1_write@add1
  6691     0F2F                     l2614:
  6692                           
  6693                           ;ai.c: 21:     eeprom_write(0 + 16*add1 + add2, (unsigned char)val);
  6694     0F2F  0821               	movf	weights1_write@val,w
  6695     0F30  00F4               	movwf	eeprom_write@value
  6696     0F31  0822               	movf	weights1_write@add1,w
  6697     0F32  00FD               	movwf	??_weights1_write
  6698     0F33  3003               	movlw	3
  6699     0F34                     u1365:
  6700     0F34  35FD               	lslf	??_weights1_write,f
  6701     0F35  3EFF               	addlw	-1
  6702     0F36  1D03               	skipz
  6703     0F37  2F34               	goto	u1365
  6704     0F38  357D               	lslf	??_weights1_write,w
  6705     0F39  0720               	addwf	weights1_write@add2,w
  6706     0F3A  3180  2032  318F   	fcall	_eeprom_write
  6707     0F3D                     l537:
  6708     0F3D  0008               	return
  6709     0F3E                     __end_of_weights1_write:
  6710                           
  6711                           	psect	text22
  6712     0EE0                     __ptext22:	
  6713 ;; *************** function _weights1_read *****************
  6714 ;; Defined at:
  6715 ;;		line 32 in file "ai.c"
  6716 ;; Parameters:    Size  Location     Type
  6717 ;;  add1            1    wreg     unsigned char 
  6718 ;;  add2            1    4[COMMON] unsigned char 
  6719 ;; Auto vars:     Size  Location     Type
  6720 ;;  add1            1    6[COMMON] unsigned char 
  6721 ;; Return value:  Size  Location     Type
  6722 ;;                  1    wreg      char 
  6723 ;; Registers used:
  6724 ;;		wreg, status,2, status,0, pclath, cstack
  6725 ;; Tracked objects:
  6726 ;;		On entry : 0/0
  6727 ;;		On exit  : 0/0
  6728 ;;		Unchanged: 0/0
  6729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6730 ;;      Params:         1       0       0       0       0       0
  6731 ;;      Locals:         1       0       0       0       0       0
  6732 ;;      Temps:          1       0       0       0       0       0
  6733 ;;      Totals:         3       0       0       0       0       0
  6734 ;;Total ram usage:        3 bytes
  6735 ;; Hardware stack levels used: 1
  6736 ;; Hardware stack levels required when called: 1
  6737 ;; This function calls:
  6738 ;;		_eeprom_read
  6739 ;; This function is called by:
  6740 ;;		_ai_run
  6741 ;;		_ai_propagate
  6742 ;; This function uses a non-reentrant model
  6743 ;;
  6744                           
  6745     0EE0                     _weights1_read:	
  6746                           ;psect for function _weights1_read
  6747                           
  6748                           
  6749                           ;incstack = 0
  6750                           ; Regs used in _weights1_read: [wreg+status,2+status,0+pclath+cstack]
  6751                           ;weights1_read@add1 stored from wreg
  6752     0EE0  00F6               	movwf	weights1_read@add1
  6753     0EE1                     l2622:
  6754                           
  6755                           ;ai.c: 33:     return (int8_t)eeprom_read(0 + add1*16 + add2);
  6756     0EE1  0876               	movf	weights1_read@add1,w
  6757     0EE2  00F5               	movwf	??_weights1_read
  6758     0EE3  3003               	movlw	3
  6759     0EE4                     u1375:
  6760     0EE4  35F5               	lslf	??_weights1_read,f
  6761     0EE5  3EFF               	addlw	-1
  6762     0EE6  1D03               	skipz
  6763     0EE7  2EE4               	goto	u1375
  6764     0EE8  3575               	lslf	??_weights1_read,w
  6765     0EE9  0774               	addwf	weights1_read@add2,w
  6766     0EEA  318F  2763  318E   	fcall	_eeprom_read
  6767     0EED                     l549:
  6768     0EED  0008               	return
  6769     0EEE                     __end_of_weights1_read:
  6770                           
  6771                           	psect	text23
  6772     0F0D                     __ptext23:	
  6773 ;; *************** function _de_sigmoid *****************
  6774 ;; Defined at:
  6775 ;;		line 12 in file "sigmoid.c"
  6776 ;; Parameters:    Size  Location     Type
  6777 ;;  z               1    wreg     char 
  6778 ;; Auto vars:     Size  Location     Type
  6779 ;;  z               1    1[COMMON] char 
  6780 ;; Return value:  Size  Location     Type
  6781 ;;                  1    wreg      unsigned char 
  6782 ;; Registers used:
  6783 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  6784 ;; Tracked objects:
  6785 ;;		On entry : 0/0
  6786 ;;		On exit  : 0/0
  6787 ;;		Unchanged: 0/0
  6788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6789 ;;      Params:         0       0       0       0       0       0
  6790 ;;      Locals:         1       0       0       0       0       0
  6791 ;;      Temps:          1       0       0       0       0       0
  6792 ;;      Totals:         2       0       0       0       0       0
  6793 ;;Total ram usage:        2 bytes
  6794 ;; Hardware stack levels used: 1
  6795 ;; This function calls:
  6796 ;;		Nothing
  6797 ;; This function is called by:
  6798 ;;		_ai_propagate
  6799 ;; This function uses a non-reentrant model
  6800 ;;
  6801                           
  6802     0F0D                     _de_sigmoid:	
  6803                           ;psect for function _de_sigmoid
  6804                           
  6805                           
  6806                           ;incstack = 0
  6807                           ; Regs used in _de_sigmoid: [wreg-fsr0h+status,2+status,0+pclath]
  6808                           ;de_sigmoid@z stored from wreg
  6809     0F0D  00F1               	movwf	de_sigmoid@z
  6810     0F0E                     l2642:
  6811                           
  6812                           ;sigmoid.c: 13:     return de_sigmoidValues[((uint8_t)z)>>4];
  6813     0F0E  0871               	movf	de_sigmoid@z,w
  6814     0F0F  00F0               	movwf	??_de_sigmoid
  6815     0F10  3004               	movlw	4
  6816     0F11                     u1395:
  6817     0F11  36F0               	lsrf	??_de_sigmoid,f
  6818     0F12  0B89               	decfsz	9,f
  6819     0F13  2F11               	goto	u1395
  6820     0F14  0870               	movf	??_de_sigmoid,w
  6821     0F15  3E00               	addlw	low (_de_sigmoidValues| (0+32768))
  6822     0F16  0084               	movwf	4
  6823     0F17  3088               	movlw	high (_de_sigmoidValues| (0+32768))
  6824     0F18  1803               	skipnc
  6825     0F19  3E01               	addlw	1
  6826     0F1A  0085               	movwf	5
  6827     0F1B  0800               	movf	0,w	;code access
  6828     0F1C                     l667:
  6829     0F1C  0008               	return
  6830     0F1D                     __end_of_de_sigmoid:
  6831                           
  6832                           	psect	text24
  6833     0EA5                     __ptext24:	
  6834 ;; *************** function _biases2_write *****************
  6835 ;; Defined at:
  6836 ;;		line 29 in file "ai.c"
  6837 ;; Parameters:    Size  Location     Type
  6838 ;;  add             1    wreg     unsigned char 
  6839 ;;  val             1    8[COMMON] char 
  6840 ;; Auto vars:     Size  Location     Type
  6841 ;;  add             1    9[COMMON] unsigned char 
  6842 ;; Return value:  Size  Location     Type
  6843 ;;                  1    wreg      void 
  6844 ;; Registers used:
  6845 ;;		wreg, status,2, status,0, pclath, cstack
  6846 ;; Tracked objects:
  6847 ;;		On entry : 0/0
  6848 ;;		On exit  : 0/0
  6849 ;;		Unchanged: 0/0
  6850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6851 ;;      Params:         1       0       0       0       0       0
  6852 ;;      Locals:         1       0       0       0       0       0
  6853 ;;      Temps:          0       0       0       0       0       0
  6854 ;;      Totals:         2       0       0       0       0       0
  6855 ;;Total ram usage:        2 bytes
  6856 ;; Hardware stack levels used: 1
  6857 ;; Hardware stack levels required when called: 1
  6858 ;; This function calls:
  6859 ;;		_eeprom_write
  6860 ;; This function is called by:
  6861 ;;		_ai_propagate
  6862 ;;		_ai_initiate
  6863 ;; This function uses a non-reentrant model
  6864 ;;
  6865                           
  6866     0EA5                     _biases2_write:	
  6867                           ;psect for function _biases2_write
  6868                           
  6869                           
  6870                           ;incstack = 0
  6871                           ; Regs used in _biases2_write: [wreg+status,2+status,0+pclath+cstack]
  6872                           ;biases2_write@add stored from wreg
  6873     0EA5  00F9               	movwf	biases2_write@add
  6874     0EA6                     l2620:
  6875                           
  6876                           ;ai.c: 30:     eeprom_write(0 +16*7 +7 +4*7 + add, (unsigned char)val);
  6877     0EA6  0878               	movf	biases2_write@val,w
  6878     0EA7  00F4               	movwf	eeprom_write@value
  6879     0EA8  0879               	movf	biases2_write@add,w
  6880     0EA9  3E93               	addlw	147
  6881     0EAA  3180  2032  318E   	fcall	_eeprom_write
  6882     0EAD                     l546:
  6883     0EAD  0008               	return
  6884     0EAE                     __end_of_biases2_write:
  6885                           
  6886                           	psect	text25
  6887     0E8D                     __ptext25:	
  6888 ;; *************** function _biases2_read *****************
  6889 ;; Defined at:
  6890 ;;		line 41 in file "ai.c"
  6891 ;; Parameters:    Size  Location     Type
  6892 ;;  add             1    wreg     unsigned char 
  6893 ;; Auto vars:     Size  Location     Type
  6894 ;;  add             1    4[COMMON] unsigned char 
  6895 ;; Return value:  Size  Location     Type
  6896 ;;                  1    wreg      char 
  6897 ;; Registers used:
  6898 ;;		wreg, status,2, status,0, pclath, cstack
  6899 ;; Tracked objects:
  6900 ;;		On entry : 0/0
  6901 ;;		On exit  : 0/0
  6902 ;;		Unchanged: 0/0
  6903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6904 ;;      Params:         0       0       0       0       0       0
  6905 ;;      Locals:         1       0       0       0       0       0
  6906 ;;      Temps:          0       0       0       0       0       0
  6907 ;;      Totals:         1       0       0       0       0       0
  6908 ;;Total ram usage:        1 bytes
  6909 ;; Hardware stack levels used: 1
  6910 ;; Hardware stack levels required when called: 1
  6911 ;; This function calls:
  6912 ;;		_eeprom_read
  6913 ;; This function is called by:
  6914 ;;		_ai_run
  6915 ;;		_ai_propagate
  6916 ;; This function uses a non-reentrant model
  6917 ;;
  6918                           
  6919     0E8D                     _biases2_read:	
  6920                           ;psect for function _biases2_read
  6921                           
  6922                           
  6923                           ;incstack = 0
  6924                           ; Regs used in _biases2_read: [wreg+status,2+status,0+pclath+cstack]
  6925                           ;biases2_read@add stored from wreg
  6926     0E8D  00F4               	movwf	biases2_read@add
  6927     0E8E                     l2634:
  6928                           
  6929                           ;ai.c: 42:     return (int8_t)eeprom_read(0 +16*7 +7 +4*7 + add);
  6930     0E8E  0874               	movf	biases2_read@add,w
  6931     0E8F  3E93               	addlw	147
  6932     0E90  318F  2763  318E   	fcall	_eeprom_read
  6933     0E93                     l558:
  6934     0E93  0008               	return
  6935     0E94                     __end_of_biases2_read:
  6936                           
  6937                           	psect	text26
  6938     0E9C                     __ptext26:	
  6939 ;; *************** function _biases1_write *****************
  6940 ;; Defined at:
  6941 ;;		line 23 in file "ai.c"
  6942 ;; Parameters:    Size  Location     Type
  6943 ;;  add             1    wreg     unsigned char 
  6944 ;;  val             1    8[COMMON] char 
  6945 ;; Auto vars:     Size  Location     Type
  6946 ;;  add             1    9[COMMON] unsigned char 
  6947 ;; Return value:  Size  Location     Type
  6948 ;;                  1    wreg      void 
  6949 ;; Registers used:
  6950 ;;		wreg, status,2, status,0, pclath, cstack
  6951 ;; Tracked objects:
  6952 ;;		On entry : 0/0
  6953 ;;		On exit  : 0/0
  6954 ;;		Unchanged: 0/0
  6955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6956 ;;      Params:         1       0       0       0       0       0
  6957 ;;      Locals:         1       0       0       0       0       0
  6958 ;;      Temps:          0       0       0       0       0       0
  6959 ;;      Totals:         2       0       0       0       0       0
  6960 ;;Total ram usage:        2 bytes
  6961 ;; Hardware stack levels used: 1
  6962 ;; Hardware stack levels required when called: 1
  6963 ;; This function calls:
  6964 ;;		_eeprom_write
  6965 ;; This function is called by:
  6966 ;;		_ai_propagate
  6967 ;;		_ai_initiate
  6968 ;; This function uses a non-reentrant model
  6969 ;;
  6970                           
  6971     0E9C                     _biases1_write:	
  6972                           ;psect for function _biases1_write
  6973                           
  6974                           
  6975                           ;incstack = 0
  6976                           ; Regs used in _biases1_write: [wreg+status,2+status,0+pclath+cstack]
  6977                           ;biases1_write@add stored from wreg
  6978     0E9C  00F9               	movwf	biases1_write@add
  6979     0E9D                     l2616:
  6980                           
  6981                           ;ai.c: 24:     eeprom_write(0 +16*7 + add, (unsigned char)val);
  6982     0E9D  0878               	movf	biases1_write@val,w
  6983     0E9E  00F4               	movwf	eeprom_write@value
  6984     0E9F  0879               	movf	biases1_write@add,w
  6985     0EA0  3E70               	addlw	112
  6986     0EA1  3180  2032  318E   	fcall	_eeprom_write
  6987     0EA4                     l540:
  6988     0EA4  0008               	return
  6989     0EA5                     __end_of_biases1_write:
  6990                           
  6991                           	psect	text27
  6992     0032                     __ptext27:	
  6993 ;; *************** function _eeprom_write *****************
  6994 ;; Defined at:
  6995 ;;		line 6 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\pic\__eewrite.c"
  6996 ;; Parameters:    Size  Location     Type
  6997 ;;  addr            1    wreg     unsigned char 
  6998 ;;  value           1    4[COMMON] unsigned char 
  6999 ;; Auto vars:     Size  Location     Type
  7000 ;;  addr            1    7[COMMON] unsigned char 
  7001 ;; Return value:  Size  Location     Type
  7002 ;;                  1    wreg      void 
  7003 ;; Registers used:
  7004 ;;		wreg, status,2, status,0
  7005 ;; Tracked objects:
  7006 ;;		On entry : 0/0
  7007 ;;		On exit  : 0/0
  7008 ;;		Unchanged: 0/0
  7009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7010 ;;      Params:         1       0       0       0       0       0
  7011 ;;      Locals:         1       0       0       0       0       0
  7012 ;;      Temps:          2       0       0       0       0       0
  7013 ;;      Totals:         4       0       0       0       0       0
  7014 ;;Total ram usage:        4 bytes
  7015 ;; Hardware stack levels used: 1
  7016 ;; This function calls:
  7017 ;;		Nothing
  7018 ;; This function is called by:
  7019 ;;		_weights1_write
  7020 ;;		_biases1_write
  7021 ;;		_weights2_write
  7022 ;;		_biases2_write
  7023 ;;		_ai_is_ai_initiated_write
  7024 ;;		_ai_is_ai_trained_write
  7025 ;;		_ai_maxScore_write
  7026 ;;		_ai_scores_write
  7027 ;; This function uses a non-reentrant model
  7028 ;;
  7029                           
  7030     0032                     _eeprom_write:	
  7031                           ;psect for function _eeprom_write
  7032                           
  7033                           
  7034                           ;incstack = 0
  7035                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  7036                           ;eeprom_write@addr stored from wreg
  7037     0032  00F7               	movwf	eeprom_write@addr
  7038     0033                     l843:	
  7039                           ;D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\pic\__eewrite.c: 6: eeprom_write(uns
      +                          igned char addr, unsigned char value);D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99
      +                          \pic\__eewrite.c: 7: {;D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\pic\__eewrite.
      +                          c: 8:  do{ while (EECON1bits.WR) { continue; } EEADR = (addr); EEDATA = (value); EECON1 
      +                          &= 0x3F; STATUSbits.CARRY = 0; if (INTCONbits.GIE) { STATUSbits.CARRY = 1; } INTCONbits.
      +                          GIE = 0; EECON1bits.WREN = 1; EECON2 = 0x55; EECON2 = 0xAA; EECON1bits.WR = 1; EECON1bit
      +                          s.WREN = 0; if (STATUSbits.CARRY) { INTCONbits.GIE = 1; } } while (0);
  7040                           
  7041     0033                     l844:
  7042     0033  0023               	movlb	3	; select bank3
  7043     0034  1895               	btfsc	21,1	;volsfr
  7044     0035  2837               	goto	u1271
  7045     0036  2838               	goto	u1270
  7046     0037                     u1271:
  7047     0037  2833               	goto	l844
  7048     0038                     u1270:
  7049     0038                     l2510:
  7050     0038  0877               	movf	eeprom_write@addr,w
  7051     0039  00F5               	movwf	??_eeprom_write
  7052     003A  01F6               	clrf	??_eeprom_write+1
  7053     003B  0875               	movf	??_eeprom_write,w
  7054     003C  0091               	movwf	17	;volatile
  7055     003D  0876               	movf	??_eeprom_write+1,w
  7056     003E  0092               	movwf	18	;volatile
  7057     003F  0874               	movf	eeprom_write@value,w
  7058     0040  0093               	movwf	19	;volatile
  7059     0041                     l2512:
  7060     0041  303F               	movlw	63
  7061     0042  00F5               	movwf	??_eeprom_write
  7062     0043  0875               	movf	??_eeprom_write,w
  7063     0044  0595               	andwf	21,f	;volsfr
  7064     0045                     l2514:
  7065     0045  0020               	movlb	0	; select bank0
  7066     0046  1003               	bcf	3,0	;volatile
  7067     0047                     l2516:
  7068     0047  1F8B               	btfss	11,7	;volatile
  7069     0048  284A               	goto	u1281
  7070     0049  284B               	goto	u1280
  7071     004A                     u1281:
  7072     004A  284C               	goto	l847
  7073     004B                     u1280:
  7074     004B                     l2518:
  7075     004B  1403               	bsf	3,0	;volatile
  7076     004C                     l847:
  7077     004C  138B               	bcf	11,7	;volatile
  7078     004D  0023               	movlb	3	; select bank3
  7079     004E  1515               	bsf	21,2	;volsfr
  7080     004F                     l2520:
  7081     004F  3055               	movlw	85
  7082     0050  0096               	movwf	22	;volsfr
  7083     0051  30AA               	movlw	170
  7084     0052  0096               	movwf	22	;volsfr
  7085     0053                     l2522:
  7086     0053  1495               	bsf	21,1	;volsfr
  7087     0054                     l2524:
  7088     0054  1115               	bcf	21,2	;volsfr
  7089     0055                     l2526:
  7090     0055  0020               	movlb	0	; select bank0
  7091     0056  1C03               	btfss	3,0	;volatile
  7092     0057  2859               	goto	u1291
  7093     0058  285A               	goto	u1290
  7094     0059                     u1291:
  7095     0059  285B               	goto	l850
  7096     005A                     u1290:
  7097     005A                     l2528:
  7098     005A  178B               	bsf	11,7	;volatile
  7099     005B                     l850:
  7100     005B  0008               	return
  7101     005C                     __end_of_eeprom_write:
  7102                           
  7103                           	psect	text28
  7104     0E86                     __ptext28:	
  7105 ;; *************** function _biases1_read *****************
  7106 ;; Defined at:
  7107 ;;		line 35 in file "ai.c"
  7108 ;; Parameters:    Size  Location     Type
  7109 ;;  add             1    wreg     unsigned char 
  7110 ;; Auto vars:     Size  Location     Type
  7111 ;;  add             1    4[COMMON] unsigned char 
  7112 ;; Return value:  Size  Location     Type
  7113 ;;                  1    wreg      char 
  7114 ;; Registers used:
  7115 ;;		wreg, status,2, status,0, pclath, cstack
  7116 ;; Tracked objects:
  7117 ;;		On entry : 0/0
  7118 ;;		On exit  : 0/0
  7119 ;;		Unchanged: 0/0
  7120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7121 ;;      Params:         0       0       0       0       0       0
  7122 ;;      Locals:         1       0       0       0       0       0
  7123 ;;      Temps:          0       0       0       0       0       0
  7124 ;;      Totals:         1       0       0       0       0       0
  7125 ;;Total ram usage:        1 bytes
  7126 ;; Hardware stack levels used: 1
  7127 ;; Hardware stack levels required when called: 1
  7128 ;; This function calls:
  7129 ;;		_eeprom_read
  7130 ;; This function is called by:
  7131 ;;		_ai_run
  7132 ;;		_ai_propagate
  7133 ;; This function uses a non-reentrant model
  7134 ;;
  7135                           
  7136     0E86                     _biases1_read:	
  7137                           ;psect for function _biases1_read
  7138                           
  7139                           
  7140                           ;incstack = 0
  7141                           ; Regs used in _biases1_read: [wreg+status,2+status,0+pclath+cstack]
  7142                           ;biases1_read@add stored from wreg
  7143     0E86  00F4               	movwf	biases1_read@add
  7144     0E87                     l2626:
  7145                           
  7146                           ;ai.c: 36:     return (int8_t)eeprom_read(0 +16*7 + add);
  7147     0E87  0874               	movf	biases1_read@add,w
  7148     0E88  3E70               	addlw	112
  7149     0E89  318F  2763  318E   	fcall	_eeprom_read
  7150     0E8C                     l552:
  7151     0E8C  0008               	return
  7152     0E8D                     __end_of_biases1_read:
  7153                           
  7154                           	psect	text29
  7155     0F63                     __ptext29:	
  7156 ;; *************** function _eeprom_read *****************
  7157 ;; Defined at:
  7158 ;;		line 6 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\pic\__eeread.c"
  7159 ;; Parameters:    Size  Location     Type
  7160 ;;  addr            1    wreg     unsigned char 
  7161 ;; Auto vars:     Size  Location     Type
  7162 ;;  addr            1    3[COMMON] unsigned char 
  7163 ;; Return value:  Size  Location     Type
  7164 ;;                  1    wreg      unsigned char 
  7165 ;; Registers used:
  7166 ;;		wreg, status,2, status,0
  7167 ;; Tracked objects:
  7168 ;;		On entry : 0/0
  7169 ;;		On exit  : 0/0
  7170 ;;		Unchanged: 0/0
  7171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7172 ;;      Params:         0       0       0       0       0       0
  7173 ;;      Locals:         1       0       0       0       0       0
  7174 ;;      Temps:          3       0       0       0       0       0
  7175 ;;      Totals:         4       0       0       0       0       0
  7176 ;;Total ram usage:        4 bytes
  7177 ;; Hardware stack levels used: 1
  7178 ;; This function calls:
  7179 ;;		Nothing
  7180 ;; This function is called by:
  7181 ;;		_weights1_read
  7182 ;;		_biases1_read
  7183 ;;		_weights2_read
  7184 ;;		_biases2_read
  7185 ;;		_ai_is_ai_initiated_write
  7186 ;;		_ai_is_ai_initiated_read
  7187 ;;		_ai_is_ai_trained_write
  7188 ;;		_ai_is_ai_trained_read
  7189 ;;		_ai_maxScore_read
  7190 ;;		_ai_scores_read
  7191 ;; This function uses a non-reentrant model
  7192 ;;
  7193                           
  7194     0F63                     _eeprom_read:	
  7195                           ;psect for function _eeprom_read
  7196                           
  7197                           
  7198                           ;incstack = 0
  7199                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  7200                           ;eeprom_read@addr stored from wreg
  7201     0F63  00F3               	movwf	eeprom_read@addr
  7202     0F64                     l824:	
  7203                           ;D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\pic\__eeread.c: 6: eeprom_read(unsig
      +                          ned char addr);D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\pic\__eeread.c: 7: {;D
      +                          :\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\pic\__eeread.c: 8:  do
  7204                           
  7205     0F64  0064               	clrwdt	;# 
  7206     0F65  0023               	movlb	3	; select bank3
  7207     0F66  1895               	btfsc	21,1	;volsfr
  7208     0F67  2F69               	goto	u1301
  7209     0F68  2F6A               	goto	u1300
  7210     0F69                     u1301:
  7211     0F69  2F64               	goto	l824
  7212     0F6A                     u1300:
  7213     0F6A                     l2530:
  7214                           
  7215                           ;D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\pic\__eeread.c: 18:  return ( EEADR 
      +                          = addr, EECON1 &= 0x3F, EECON1bits.RD = 1, EEDATA);
  7216     0F6A  0873               	movf	eeprom_read@addr,w
  7217     0F6B  00F0               	movwf	??_eeprom_read
  7218     0F6C  01F1               	clrf	??_eeprom_read+1
  7219     0F6D  0870               	movf	??_eeprom_read,w
  7220     0F6E  0091               	movwf	17	;volatile
  7221     0F6F  0871               	movf	??_eeprom_read+1,w
  7222     0F70  0092               	movwf	18	;volatile
  7223     0F71  303F               	movlw	63
  7224     0F72  00F2               	movwf	??_eeprom_read+2
  7225     0F73  0872               	movf	??_eeprom_read+2,w
  7226     0F74  0595               	andwf	21,f	;volsfr
  7227     0F75  1415               	bsf	21,0	;volsfr
  7228     0F76  0813               	movf	19,w	;volatile
  7229     0F77                     l826:
  7230     0F77  0008               	return
  7231     0F78                     __end_of_eeprom_read:
  7232                           
  7233                           	psect	text30
  7234     0FBF                     __ptext30:	
  7235 ;; *************** function ___wmul *****************
  7236 ;; Defined at:
  7237 ;;		line 15 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  7238 ;; Parameters:    Size  Location     Type
  7239 ;;  multiplier      2    7[COMMON] unsigned int 
  7240 ;;  multiplicand    2    9[COMMON] unsigned int 
  7241 ;; Auto vars:     Size  Location     Type
  7242 ;;  product         2   11[COMMON] unsigned int 
  7243 ;; Return value:  Size  Location     Type
  7244 ;;                  2    7[COMMON] unsigned int 
  7245 ;; Registers used:
  7246 ;;		wreg, status,2, status,0
  7247 ;; Tracked objects:
  7248 ;;		On entry : 0/0
  7249 ;;		On exit  : 0/0
  7250 ;;		Unchanged: 0/0
  7251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7252 ;;      Params:         4       0       0       0       0       0
  7253 ;;      Locals:         2       0       0       0       0       0
  7254 ;;      Temps:          0       0       0       0       0       0
  7255 ;;      Totals:         6       0       0       0       0       0
  7256 ;;Total ram usage:        6 bytes
  7257 ;; Hardware stack levels used: 1
  7258 ;; This function calls:
  7259 ;;		Nothing
  7260 ;; This function is called by:
  7261 ;;		_ai_run
  7262 ;;		_ai_propagate
  7263 ;; This function uses a non-reentrant model
  7264 ;;
  7265                           
  7266     0FBF                     ___wmul:	
  7267                           ;psect for function ___wmul
  7268                           
  7269     0FBF                     l2646:	
  7270                           ;incstack = 0
  7271                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7272                           
  7273     0FBF  01FB               	clrf	___wmul@product
  7274     0FC0  01FC               	clrf	___wmul@product+1
  7275     0FC1                     l2648:
  7276     0FC1  1C77               	btfss	___wmul@multiplier,0
  7277     0FC2  2FC4               	goto	u1401
  7278     0FC3  2FC5               	goto	u1400
  7279     0FC4                     u1401:
  7280     0FC4  2FC9               	goto	l854
  7281     0FC5                     u1400:
  7282     0FC5                     l2650:
  7283     0FC5  0879               	movf	___wmul@multiplicand,w
  7284     0FC6  07FB               	addwf	___wmul@product,f
  7285     0FC7  087A               	movf	___wmul@multiplicand+1,w
  7286     0FC8  3DFC               	addwfc	___wmul@product+1,f
  7287     0FC9                     l854:
  7288     0FC9  3001               	movlw	1
  7289     0FCA                     u1415:
  7290     0FCA  35F9               	lslf	___wmul@multiplicand,f
  7291     0FCB  0DFA               	rlf	___wmul@multiplicand+1,f
  7292     0FCC  0B89               	decfsz	9,f
  7293     0FCD  2FCA               	goto	u1415
  7294     0FCE                     l2652:
  7295     0FCE  3001               	movlw	1
  7296     0FCF                     u1425:
  7297     0FCF  36F8               	lsrf	___wmul@multiplier+1,f
  7298     0FD0  0CF7               	rrf	___wmul@multiplier,f
  7299     0FD1  0B89               	decfsz	9,f
  7300     0FD2  2FCF               	goto	u1425
  7301     0FD3                     l2654:
  7302     0FD3  0877               	movf	___wmul@multiplier,w
  7303     0FD4  0478               	iorwf	___wmul@multiplier+1,w
  7304     0FD5  1D03               	btfss	3,2
  7305     0FD6  2FD8               	goto	u1431
  7306     0FD7  2FD9               	goto	u1430
  7307     0FD8                     u1431:
  7308     0FD8  2FC1               	goto	l2648
  7309     0FD9                     u1430:
  7310     0FD9                     l2656:
  7311     0FD9  087C               	movf	___wmul@product+1,w
  7312     0FDA  00F8               	movwf	?___wmul+1
  7313     0FDB  087B               	movf	___wmul@product,w
  7314     0FDC  00F7               	movwf	?___wmul
  7315     0FDD                     l856:
  7316     0FDD  0008               	return
  7317     0FDE                     __end_of___wmul:
  7318                           
  7319                           	psect	text31
  7320     0131                     __ptext31:	
  7321 ;; *************** function ___awdiv *****************
  7322 ;; Defined at:
  7323 ;;		line 5 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
  7324 ;; Parameters:    Size  Location     Type
  7325 ;;  divisor         2    0[BANK0 ] int 
  7326 ;;  dividend        2    2[BANK0 ] int 
  7327 ;; Auto vars:     Size  Location     Type
  7328 ;;  quotient        2    6[BANK0 ] int 
  7329 ;;  sign            1    5[BANK0 ] unsigned char 
  7330 ;;  counter         1    4[BANK0 ] unsigned char 
  7331 ;; Return value:  Size  Location     Type
  7332 ;;                  2    0[BANK0 ] int 
  7333 ;; Registers used:
  7334 ;;		wreg, status,2, status,0
  7335 ;; Tracked objects:
  7336 ;;		On entry : 0/0
  7337 ;;		On exit  : 0/0
  7338 ;;		Unchanged: 0/0
  7339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7340 ;;      Params:         0       4       0       0       0       0
  7341 ;;      Locals:         0       4       0       0       0       0
  7342 ;;      Temps:          1       0       0       0       0       0
  7343 ;;      Totals:         1       8       0       0       0       0
  7344 ;;Total ram usage:        9 bytes
  7345 ;; Hardware stack levels used: 1
  7346 ;; This function calls:
  7347 ;;		Nothing
  7348 ;; This function is called by:
  7349 ;;		_ai_run
  7350 ;;		_ai_propagate
  7351 ;; This function uses a non-reentrant model
  7352 ;;
  7353                           
  7354     0131                     ___awdiv:	
  7355                           ;psect for function ___awdiv
  7356                           
  7357     0131                     l2660:	
  7358                           ;incstack = 0
  7359                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  7360                           
  7361     0131  0020               	movlb	0	; select bank0
  7362     0132  01A5               	clrf	___awdiv@sign
  7363     0133                     l2662:
  7364     0133  1FA1               	btfss	___awdiv@divisor+1,7
  7365     0134  2936               	goto	u1441
  7366     0135  2937               	goto	u1440
  7367     0136                     u1441:
  7368     0136  293E               	goto	l2668
  7369     0137                     u1440:
  7370     0137                     l2664:
  7371     0137  09A0               	comf	___awdiv@divisor,f
  7372     0138  09A1               	comf	___awdiv@divisor+1,f
  7373     0139  0AA0               	incf	___awdiv@divisor,f
  7374     013A  1903               	skipnz
  7375     013B  0AA1               	incf	___awdiv@divisor+1,f
  7376     013C                     l2666:
  7377     013C  01A5               	clrf	___awdiv@sign
  7378     013D  0AA5               	incf	___awdiv@sign,f
  7379     013E                     l2668:
  7380     013E  1FA3               	btfss	___awdiv@dividend+1,7
  7381     013F  2941               	goto	u1451
  7382     0140  2942               	goto	u1450
  7383     0141                     u1451:
  7384     0141  294B               	goto	l2674
  7385     0142                     u1450:
  7386     0142                     l2670:
  7387     0142  09A2               	comf	___awdiv@dividend,f
  7388     0143  09A3               	comf	___awdiv@dividend+1,f
  7389     0144  0AA2               	incf	___awdiv@dividend,f
  7390     0145  1903               	skipnz
  7391     0146  0AA3               	incf	___awdiv@dividend+1,f
  7392     0147                     l2672:
  7393     0147  3001               	movlw	1
  7394     0148  00FD               	movwf	??___awdiv
  7395     0149  087D               	movf	??___awdiv,w
  7396     014A  06A5               	xorwf	___awdiv@sign,f
  7397     014B                     l2674:
  7398     014B  01A6               	clrf	___awdiv@quotient
  7399     014C  01A7               	clrf	___awdiv@quotient+1
  7400     014D                     l2676:
  7401     014D  0820               	movf	___awdiv@divisor,w
  7402     014E  0421               	iorwf	___awdiv@divisor+1,w
  7403     014F  1903               	btfsc	3,2
  7404     0150  2952               	goto	u1461
  7405     0151  2953               	goto	u1460
  7406     0152                     u1461:
  7407     0152  2982               	goto	l2696
  7408     0153                     u1460:
  7409     0153                     l2678:
  7410     0153  01A4               	clrf	___awdiv@counter
  7411     0154  0AA4               	incf	___awdiv@counter,f
  7412     0155  295F               	goto	l2684
  7413     0156                     l2680:
  7414     0156  3001               	movlw	1
  7415     0157                     u1475:
  7416     0157  35A0               	lslf	___awdiv@divisor,f
  7417     0158  0DA1               	rlf	___awdiv@divisor+1,f
  7418     0159  0B89               	decfsz	9,f
  7419     015A  2957               	goto	u1475
  7420     015B                     l2682:
  7421     015B  3001               	movlw	1
  7422     015C  00FD               	movwf	??___awdiv
  7423     015D  087D               	movf	??___awdiv,w
  7424     015E  07A4               	addwf	___awdiv@counter,f
  7425     015F                     l2684:
  7426     015F  1FA1               	btfss	___awdiv@divisor+1,7
  7427     0160  2962               	goto	u1481
  7428     0161  2963               	goto	u1480
  7429     0162                     u1481:
  7430     0162  2956               	goto	l2680
  7431     0163                     u1480:
  7432     0163                     l2686:
  7433     0163  3001               	movlw	1
  7434     0164                     u1495:
  7435     0164  35A6               	lslf	___awdiv@quotient,f
  7436     0165  0DA7               	rlf	___awdiv@quotient+1,f
  7437     0166  0B89               	decfsz	9,f
  7438     0167  2964               	goto	u1495
  7439     0168  0821               	movf	___awdiv@divisor+1,w
  7440     0169  0223               	subwf	___awdiv@dividend+1,w
  7441     016A  1D03               	skipz
  7442     016B  296E               	goto	u1505
  7443     016C  0820               	movf	___awdiv@divisor,w
  7444     016D  0222               	subwf	___awdiv@dividend,w
  7445     016E                     u1505:
  7446     016E  1C03               	skipc
  7447     016F  2971               	goto	u1501
  7448     0170  2972               	goto	u1500
  7449     0171                     u1501:
  7450     0171  2977               	goto	l2692
  7451     0172                     u1500:
  7452     0172                     l2688:
  7453     0172  0820               	movf	___awdiv@divisor,w
  7454     0173  02A2               	subwf	___awdiv@dividend,f
  7455     0174  0821               	movf	___awdiv@divisor+1,w
  7456     0175  3BA3               	subwfb	___awdiv@dividend+1,f
  7457     0176                     l2690:
  7458     0176  1426               	bsf	___awdiv@quotient,0
  7459     0177                     l2692:
  7460     0177  3001               	movlw	1
  7461     0178                     u1515:
  7462     0178  36A1               	lsrf	___awdiv@divisor+1,f
  7463     0179  0CA0               	rrf	___awdiv@divisor,f
  7464     017A  0B89               	decfsz	9,f
  7465     017B  2978               	goto	u1515
  7466     017C                     l2694:
  7467     017C  3001               	movlw	1
  7468     017D  02A4               	subwf	___awdiv@counter,f
  7469     017E  1D03               	btfss	3,2
  7470     017F  2981               	goto	u1521
  7471     0180  2982               	goto	u1520
  7472     0181                     u1521:
  7473     0181  2963               	goto	l2686
  7474     0182                     u1520:
  7475     0182                     l2696:
  7476     0182  0825               	movf	___awdiv@sign,w
  7477     0183  1903               	btfsc	3,2
  7478     0184  2986               	goto	u1531
  7479     0185  2987               	goto	u1530
  7480     0186                     u1531:
  7481     0186  298C               	goto	l2700
  7482     0187                     u1530:
  7483     0187                     l2698:
  7484     0187  09A6               	comf	___awdiv@quotient,f
  7485     0188  09A7               	comf	___awdiv@quotient+1,f
  7486     0189  0AA6               	incf	___awdiv@quotient,f
  7487     018A  1903               	skipnz
  7488     018B  0AA7               	incf	___awdiv@quotient+1,f
  7489     018C                     l2700:
  7490     018C  0827               	movf	___awdiv@quotient+1,w
  7491     018D  00A1               	movwf	?___awdiv+1
  7492     018E  0826               	movf	___awdiv@quotient,w
  7493     018F  00A0               	movwf	?___awdiv
  7494     0190                     l1007:
  7495     0190  0008               	return
  7496     0191                     __end_of___awdiv:
  7497                           
  7498                           	psect	text32
  7499     0E63                     __ptext32:	
  7500 ;; *************** function _ai_getInputField *****************
  7501 ;; Defined at:
  7502 ;;		line 102 in file "ai.c"
  7503 ;; Parameters:    Size  Location     Type
  7504 ;;		None
  7505 ;; Auto vars:     Size  Location     Type
  7506 ;;		None
  7507 ;; Return value:  Size  Location     Type
  7508 ;;                  1    wreg      PTR unsigned char 
  7509 ;; Registers used:
  7510 ;;		wreg
  7511 ;; Tracked objects:
  7512 ;;		On entry : 0/0
  7513 ;;		On exit  : 0/0
  7514 ;;		Unchanged: 0/0
  7515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7516 ;;      Params:         0       0       0       0       0       0
  7517 ;;      Locals:         0       0       0       0       0       0
  7518 ;;      Temps:          0       0       0       0       0       0
  7519 ;;      Totals:         0       0       0       0       0       0
  7520 ;;Total ram usage:        0 bytes
  7521 ;; Hardware stack levels used: 1
  7522 ;; This function calls:
  7523 ;;		Nothing
  7524 ;; This function is called by:
  7525 ;;		_main
  7526 ;; This function uses a non-reentrant model
  7527 ;;
  7528                           
  7529     0E63                     _ai_getInputField:	
  7530                           ;psect for function _ai_getInputField
  7531                           
  7532     0E63                     l2760:	
  7533                           ;incstack = 0
  7534                           ; Regs used in _ai_getInputField: [wreg]
  7535                           
  7536                           
  7537                           ;ai.c: 103:     return Y0;
  7538     0E63  30E0               	movlw	(low (_Y0| 0))& (0+255)
  7539     0E64                     l601:
  7540     0E64  0008               	return
  7541     0E65                     __end_of_ai_getInputField:
  7542                           
  7543                           	psect	text33
  7544     0EFD                     __ptext33:	
  7545 ;; *************** function _SYSTEM_Initialize *****************
  7546 ;; Defined at:
  7547 ;;		line 50 in file "mcc_generated_files/mcc.c"
  7548 ;; Parameters:    Size  Location     Type
  7549 ;;		None
  7550 ;; Auto vars:     Size  Location     Type
  7551 ;;		None
  7552 ;; Return value:  Size  Location     Type
  7553 ;;                  1    wreg      void 
  7554 ;; Registers used:
  7555 ;;		wreg, status,2, status,0, pclath, cstack
  7556 ;; Tracked objects:
  7557 ;;		On entry : 0/0
  7558 ;;		On exit  : 0/0
  7559 ;;		Unchanged: 0/0
  7560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7561 ;;      Params:         0       0       0       0       0       0
  7562 ;;      Locals:         0       0       0       0       0       0
  7563 ;;      Temps:          0       0       0       0       0       0
  7564 ;;      Totals:         0       0       0       0       0       0
  7565 ;;Total ram usage:        0 bytes
  7566 ;; Hardware stack levels used: 1
  7567 ;; Hardware stack levels required when called: 2
  7568 ;; This function calls:
  7569 ;;		_EUSART_Initialize
  7570 ;;		_OSCILLATOR_Initialize
  7571 ;;		_PIN_MANAGER_Initialize
  7572 ;;		_SPI1_Initialize
  7573 ;;		_WDT_Initialize
  7574 ;; This function is called by:
  7575 ;;		_main
  7576 ;; This function uses a non-reentrant model
  7577 ;;
  7578                           
  7579     0EFD                     _SYSTEM_Initialize:	
  7580                           ;psect for function _SYSTEM_Initialize
  7581                           
  7582     0EFD                     l2704:	
  7583                           ;incstack = 0
  7584                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7585                           
  7586                           
  7587                           ;mcc_generated_files/mcc.c: 53:     SPI1_Initialize();
  7588     0EFD  318E  26AE  318E   	fcall	_SPI1_Initialize
  7589                           
  7590                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  7591     0F00  318F  278D  318E   	fcall	_PIN_MANAGER_Initialize
  7592                           
  7593                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  7594     0F03  318E  267F  318E   	fcall	_OSCILLATOR_Initialize
  7595                           
  7596                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  7597     0F06  318E  266A  318E   	fcall	_WDT_Initialize
  7598                           
  7599                           ;mcc_generated_files/mcc.c: 57:     EUSART_Initialize();
  7600     0F09  318F  27DE  318E   	fcall	_EUSART_Initialize
  7601     0F0C                     l248:
  7602     0F0C  0008               	return
  7603     0F0D                     __end_of_SYSTEM_Initialize:
  7604                           
  7605                           	psect	text34
  7606     0E6A                     __ptext34:	
  7607 ;; *************** function _WDT_Initialize *****************
  7608 ;; Defined at:
  7609 ;;		line 70 in file "mcc_generated_files/mcc.c"
  7610 ;; Parameters:    Size  Location     Type
  7611 ;;		None
  7612 ;; Auto vars:     Size  Location     Type
  7613 ;;		None
  7614 ;; Return value:  Size  Location     Type
  7615 ;;                  1    wreg      void 
  7616 ;; Registers used:
  7617 ;;		wreg
  7618 ;; Tracked objects:
  7619 ;;		On entry : 0/0
  7620 ;;		On exit  : 0/0
  7621 ;;		Unchanged: 0/0
  7622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7623 ;;      Params:         0       0       0       0       0       0
  7624 ;;      Locals:         0       0       0       0       0       0
  7625 ;;      Temps:          0       0       0       0       0       0
  7626 ;;      Totals:         0       0       0       0       0       0
  7627 ;;Total ram usage:        0 bytes
  7628 ;; Hardware stack levels used: 1
  7629 ;; This function calls:
  7630 ;;		Nothing
  7631 ;; This function is called by:
  7632 ;;		_SYSTEM_Initialize
  7633 ;; This function uses a non-reentrant model
  7634 ;;
  7635                           
  7636     0E6A                     _WDT_Initialize:	
  7637                           ;psect for function _WDT_Initialize
  7638                           
  7639     0E6A                     l2588:	
  7640                           ;incstack = 0
  7641                           ; Regs used in _WDT_Initialize: [wreg]
  7642                           
  7643                           
  7644                           ;mcc_generated_files/mcc.c: 73:     WDTCON = 0x16;
  7645     0E6A  3016               	movlw	22
  7646     0E6B  0021               	movlb	1	; select bank1
  7647     0E6C  0097               	movwf	23	;volatile
  7648     0E6D                     l254:
  7649     0E6D  0008               	return
  7650     0E6E                     __end_of_WDT_Initialize:
  7651                           
  7652                           	psect	text35
  7653     0EAE                     __ptext35:	
  7654 ;; *************** function _SPI1_Initialize *****************
  7655 ;; Defined at:
  7656 ;;		line 62 in file "mcc_generated_files/spi1.c"
  7657 ;; Parameters:    Size  Location     Type
  7658 ;;		None
  7659 ;; Auto vars:     Size  Location     Type
  7660 ;;		None
  7661 ;; Return value:  Size  Location     Type
  7662 ;;                  1    wreg      void 
  7663 ;; Registers used:
  7664 ;;		wreg
  7665 ;; Tracked objects:
  7666 ;;		On entry : 0/0
  7667 ;;		On exit  : 0/0
  7668 ;;		Unchanged: 0/0
  7669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7670 ;;      Params:         0       0       0       0       0       0
  7671 ;;      Locals:         0       0       0       0       0       0
  7672 ;;      Temps:          0       0       0       0       0       0
  7673 ;;      Totals:         0       0       0       0       0       0
  7674 ;;Total ram usage:        0 bytes
  7675 ;; Hardware stack levels used: 1
  7676 ;; This function calls:
  7677 ;;		Nothing
  7678 ;; This function is called by:
  7679 ;;		_SYSTEM_Initialize
  7680 ;; This function uses a non-reentrant model
  7681 ;;
  7682                           
  7683     0EAE                     _SPI1_Initialize:	
  7684                           ;psect for function _SPI1_Initialize
  7685                           
  7686     0EAE                     l2576:	
  7687                           ;incstack = 0
  7688                           ; Regs used in _SPI1_Initialize: [wreg]
  7689                           
  7690                           
  7691                           ;mcc_generated_files/spi1.c: 65:     SSP1STAT = 0x40;
  7692     0EAE  3040               	movlw	64
  7693     0EAF  0024               	movlb	4	; select bank4
  7694     0EB0  0094               	movwf	20	;volatile
  7695                           
  7696                           ;mcc_generated_files/spi1.c: 66:     SSP1CON1 = 0x02;
  7697     0EB1  3002               	movlw	2
  7698     0EB2  0095               	movwf	21	;volatile
  7699                           
  7700                           ;mcc_generated_files/spi1.c: 67:     SSP1ADD = 0x01;
  7701     0EB3  3001               	movlw	1
  7702     0EB4  0092               	movwf	18	;volatile
  7703     0EB5                     l2578:
  7704                           
  7705                           ;mcc_generated_files/spi1.c: 68:     TRISBbits.TRISB4 = 0;
  7706     0EB5  0021               	movlb	1	; select bank1
  7707     0EB6  120D               	bcf	13,4	;volatile
  7708     0EB7                     l2580:
  7709                           
  7710                           ;mcc_generated_files/spi1.c: 69:     SSP1CON1bits.SSPEN = 0;
  7711     0EB7  0024               	movlb	4	; select bank4
  7712     0EB8  1295               	bcf	21,5	;volatile
  7713     0EB9                     l187:
  7714     0EB9  0008               	return
  7715     0EBA                     __end_of_SPI1_Initialize:
  7716                           
  7717                           	psect	text36
  7718     0F8D                     __ptext36:	
  7719 ;; *************** function _PIN_MANAGER_Initialize *****************
  7720 ;; Defined at:
  7721 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  7722 ;; Parameters:    Size  Location     Type
  7723 ;;		None
  7724 ;; Auto vars:     Size  Location     Type
  7725 ;;		None
  7726 ;; Return value:  Size  Location     Type
  7727 ;;                  1    wreg      void 
  7728 ;; Registers used:
  7729 ;;		wreg, status,2
  7730 ;; Tracked objects:
  7731 ;;		On entry : 0/0
  7732 ;;		On exit  : 0/0
  7733 ;;		Unchanged: 0/0
  7734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7735 ;;      Params:         0       0       0       0       0       0
  7736 ;;      Locals:         0       0       0       0       0       0
  7737 ;;      Temps:          0       0       0       0       0       0
  7738 ;;      Totals:         0       0       0       0       0       0
  7739 ;;Total ram usage:        0 bytes
  7740 ;; Hardware stack levels used: 1
  7741 ;; This function calls:
  7742 ;;		Nothing
  7743 ;; This function is called by:
  7744 ;;		_SYSTEM_Initialize
  7745 ;; This function uses a non-reentrant model
  7746 ;;
  7747                           
  7748     0F8D                     _PIN_MANAGER_Initialize:	
  7749                           ;psect for function _PIN_MANAGER_Initialize
  7750                           
  7751     0F8D                     l2560:	
  7752                           ;incstack = 0
  7753                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  7754                           
  7755                           
  7756                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  7757     0F8D  0022               	movlb	2	; select bank2
  7758     0F8E  018C               	clrf	12	;volatile
  7759                           
  7760                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  7761     0F8F  018D               	clrf	13	;volatile
  7762     0F90                     l2562:
  7763                           
  7764                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x37;
  7765     0F90  3037               	movlw	55
  7766     0F91  0021               	movlb	1	; select bank1
  7767     0F92  008C               	movwf	12	;volatile
  7768     0F93                     l2564:
  7769                           
  7770                           ;mcc_generated_files/pin_manager.c: 67:     TRISB = 0xEF;
  7771     0F93  30EF               	movlw	239
  7772     0F94  008D               	movwf	13	;volatile
  7773     0F95                     l2566:
  7774                           
  7775                           ;mcc_generated_files/pin_manager.c: 72:     ANSELB = 0xC8;
  7776     0F95  30C8               	movlw	200
  7777     0F96  0023               	movlb	3	; select bank3
  7778     0F97  008D               	movwf	13	;volatile
  7779     0F98                     l2568:
  7780                           
  7781                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x1F;
  7782     0F98  301F               	movlw	31
  7783     0F99  008C               	movwf	12	;volatile
  7784                           
  7785                           ;mcc_generated_files/pin_manager.c: 78:     WPUB = 0x00;
  7786     0F9A  0024               	movlb	4	; select bank4
  7787     0F9B  018D               	clrf	13	;volatile
  7788                           
  7789                           ;mcc_generated_files/pin_manager.c: 79:     WPUA = 0x00;
  7790     0F9C  018C               	clrf	12	;volatile
  7791     0F9D                     l2570:
  7792                           
  7793                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  7794     0F9D  0021               	movlb	1	; select bank1
  7795     0F9E  1795               	bsf	21,7	;volatile
  7796     0F9F                     l2572:
  7797                           
  7798                           ;mcc_generated_files/pin_manager.c: 86:     APFCON0 = 0xC0;
  7799     0F9F  30C0               	movlw	192
  7800     0FA0  0022               	movlb	2	; select bank2
  7801     0FA1  009D               	movwf	29	;volatile
  7802     0FA2                     l2574:
  7803                           
  7804                           ;mcc_generated_files/pin_manager.c: 87:     APFCON1 = 0x01;
  7805     0FA2  3001               	movlw	1
  7806     0FA3  009E               	movwf	30	;volatile
  7807     0FA4                     l163:
  7808     0FA4  0008               	return
  7809     0FA5                     __end_of_PIN_MANAGER_Initialize:
  7810                           
  7811                           	psect	text37
  7812     0E7F                     __ptext37:	
  7813 ;; *************** function _OSCILLATOR_Initialize *****************
  7814 ;; Defined at:
  7815 ;;		line 60 in file "mcc_generated_files/mcc.c"
  7816 ;; Parameters:    Size  Location     Type
  7817 ;;		None
  7818 ;; Auto vars:     Size  Location     Type
  7819 ;;		None
  7820 ;; Return value:  Size  Location     Type
  7821 ;;                  1    wreg      void 
  7822 ;; Registers used:
  7823 ;;		wreg, status,2
  7824 ;; Tracked objects:
  7825 ;;		On entry : 0/0
  7826 ;;		On exit  : 0/0
  7827 ;;		Unchanged: 0/0
  7828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7829 ;;      Params:         0       0       0       0       0       0
  7830 ;;      Locals:         0       0       0       0       0       0
  7831 ;;      Temps:          0       0       0       0       0       0
  7832 ;;      Totals:         0       0       0       0       0       0
  7833 ;;Total ram usage:        0 bytes
  7834 ;; Hardware stack levels used: 1
  7835 ;; This function calls:
  7836 ;;		Nothing
  7837 ;; This function is called by:
  7838 ;;		_SYSTEM_Initialize
  7839 ;; This function uses a non-reentrant model
  7840 ;;
  7841                           
  7842     0E7F                     _OSCILLATOR_Initialize:	
  7843                           ;psect for function _OSCILLATOR_Initialize
  7844                           
  7845     0E7F                     l2582:	
  7846                           ;incstack = 0
  7847                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  7848                           
  7849                           
  7850                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x70;
  7851     0E7F  3070               	movlw	112
  7852     0E80  0021               	movlb	1	; select bank1
  7853     0E81  0099               	movwf	25	;volatile
  7854     0E82                     l2584:
  7855                           
  7856                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x00;
  7857     0E82  0198               	clrf	24	;volatile
  7858     0E83                     l2586:
  7859                           
  7860                           ;mcc_generated_files/mcc.c: 67:     BORCON = 0x00;
  7861     0E83  0022               	movlb	2	; select bank2
  7862     0E84  0196               	clrf	22	;volatile
  7863     0E85                     l251:
  7864     0E85  0008               	return
  7865     0E86                     __end_of_OSCILLATOR_Initialize:
  7866                           
  7867                           	psect	text38
  7868     0FDE                     __ptext38:	
  7869 ;; *************** function _EUSART_Initialize *****************
  7870 ;; Defined at:
  7871 ;;		line 66 in file "mcc_generated_files/eusart.c"
  7872 ;; Parameters:    Size  Location     Type
  7873 ;;		None
  7874 ;; Auto vars:     Size  Location     Type
  7875 ;;		None
  7876 ;; Return value:  Size  Location     Type
  7877 ;;                  1    wreg      void 
  7878 ;; Registers used:
  7879 ;;		wreg, status,2, status,0, pclath, cstack
  7880 ;; Tracked objects:
  7881 ;;		On entry : 0/0
  7882 ;;		On exit  : 0/0
  7883 ;;		Unchanged: 0/0
  7884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7885 ;;      Params:         0       0       0       0       0       0
  7886 ;;      Locals:         0       0       0       0       0       0
  7887 ;;      Temps:          0       0       0       0       0       0
  7888 ;;      Totals:         0       0       0       0       0       0
  7889 ;;Total ram usage:        0 bytes
  7890 ;; Hardware stack levels used: 1
  7891 ;; Hardware stack levels required when called: 1
  7892 ;; This function calls:
  7893 ;;		_EUSART_SetErrorHandler
  7894 ;;		_EUSART_SetFramingErrorHandler
  7895 ;;		_EUSART_SetOverrunErrorHandler
  7896 ;; This function is called by:
  7897 ;;		_SYSTEM_Initialize
  7898 ;; This function uses a non-reentrant model
  7899 ;;
  7900                           
  7901     0FDE                     _EUSART_Initialize:	
  7902                           ;psect for function _EUSART_Initialize
  7903                           
  7904     0FDE                     l2548:	
  7905                           ;incstack = 0
  7906                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7907                           
  7908                           
  7909                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  7910     0FDE  3008               	movlw	8
  7911     0FDF  0023               	movlb	3	; select bank3
  7912     0FE0  009F               	movwf	31	;volatile
  7913                           
  7914                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
  7915     0FE1  3090               	movlw	144
  7916     0FE2  009D               	movwf	29	;volatile
  7917                           
  7918                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  7919     0FE3  3024               	movlw	36
  7920     0FE4  009E               	movwf	30	;volatile
  7921                           
  7922                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0x67;
  7923     0FE5  3067               	movlw	103
  7924     0FE6  009B               	movwf	27	;volatile
  7925     0FE7                     l2550:
  7926                           
  7927                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x00;
  7928     0FE7  019C               	clrf	28	;volatile
  7929     0FE8                     l2552:
  7930                           
  7931                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  7932     0FE8  3000               	movlw	0
  7933     0FE9  00F0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  7934     0FEA  3000               	movlw	0
  7935     0FEB  00F1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  7936     0FEC  318E  2679  318F   	fcall	_EUSART_SetFramingErrorHandler
  7937     0FEF                     l2554:
  7938                           
  7939                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  7940     0FEF  3000               	movlw	0
  7941     0FF0  00F0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  7942     0FF1  3000               	movlw	0
  7943     0FF2  00F1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  7944     0FF3  3180  2004  318F   	fcall	_EUSART_SetOverrunErrorHandler
  7945     0FF6                     l2556:
  7946                           
  7947                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  7948     0FF6  3000               	movlw	0
  7949     0FF7  00F0               	movwf	EUSART_SetErrorHandler@interruptHandler
  7950     0FF8  3000               	movlw	0
  7951     0FF9  00F1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  7952     0FFA  318E  2673  318F   	fcall	_EUSART_SetErrorHandler
  7953     0FFD                     l2558:
  7954                           
  7955                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  7956     0FFD  0020               	movlb	0	; select bank0
  7957     0FFE  01E8               	clrf	_eusartRxLastError	;volatile
  7958     0FFF                     l93:
  7959     0FFF  0008               	return
  7960     1000                     __end_of_EUSART_Initialize:
  7961                           
  7962                           	psect	text39
  7963     0004                     __ptext39:	
  7964 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  7965 ;; Defined at:
  7966 ;;		line 161 in file "mcc_generated_files/eusart.c"
  7967 ;; Parameters:    Size  Location     Type
  7968 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  7969 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  7970 ;; Auto vars:     Size  Location     Type
  7971 ;;		None
  7972 ;; Return value:  Size  Location     Type
  7973 ;;                  1    wreg      void 
  7974 ;; Registers used:
  7975 ;;		wreg
  7976 ;; Tracked objects:
  7977 ;;		On entry : 0/0
  7978 ;;		On exit  : 0/0
  7979 ;;		Unchanged: 0/0
  7980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7981 ;;      Params:         2       0       0       0       0       0
  7982 ;;      Locals:         0       0       0       0       0       0
  7983 ;;      Temps:          0       0       0       0       0       0
  7984 ;;      Totals:         2       0       0       0       0       0
  7985 ;;Total ram usage:        2 bytes
  7986 ;; Hardware stack levels used: 1
  7987 ;; This function calls:
  7988 ;;		Nothing
  7989 ;; This function is called by:
  7990 ;;		_EUSART_Initialize
  7991 ;; This function uses a non-reentrant model
  7992 ;;
  7993                           
  7994     0004                     _EUSART_SetOverrunErrorHandler:	
  7995                           ;psect for function _EUSART_SetOverrunErrorHandler
  7996                           
  7997     0004                     l2498:	
  7998                           ;incstack = 0
  7999                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  8000                           
  8001                           
  8002                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  8003     0004  0871               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  8004     0005  0022               	movlb	2	; select bank2
  8005     0006  00EB               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+256)
  8006     0007  0870               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  8007     0008  00EA               	movwf	_EUSART_OverrunErrorHandler^(0+256)
  8008     0009                     l135:
  8009     0009  0008               	return
  8010     000A                     __end_of_EUSART_SetOverrunErrorHandler:
  8011                           
  8012                           	psect	text40
  8013     0E79                     __ptext40:	
  8014 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  8015 ;; Defined at:
  8016 ;;		line 157 in file "mcc_generated_files/eusart.c"
  8017 ;; Parameters:    Size  Location     Type
  8018 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  8019 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  8020 ;; Auto vars:     Size  Location     Type
  8021 ;;		None
  8022 ;; Return value:  Size  Location     Type
  8023 ;;                  1    wreg      void 
  8024 ;; Registers used:
  8025 ;;		wreg
  8026 ;; Tracked objects:
  8027 ;;		On entry : 0/0
  8028 ;;		On exit  : 0/0
  8029 ;;		Unchanged: 0/0
  8030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8031 ;;      Params:         2       0       0       0       0       0
  8032 ;;      Locals:         0       0       0       0       0       0
  8033 ;;      Temps:          0       0       0       0       0       0
  8034 ;;      Totals:         2       0       0       0       0       0
  8035 ;;Total ram usage:        2 bytes
  8036 ;; Hardware stack levels used: 1
  8037 ;; This function calls:
  8038 ;;		Nothing
  8039 ;; This function is called by:
  8040 ;;		_EUSART_Initialize
  8041 ;; This function uses a non-reentrant model
  8042 ;;
  8043                           
  8044     0E79                     _EUSART_SetFramingErrorHandler:	
  8045                           ;psect for function _EUSART_SetFramingErrorHandler
  8046                           
  8047     0E79                     l2496:	
  8048                           ;incstack = 0
  8049                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  8050                           
  8051                           
  8052                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  8053     0E79  0871               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  8054     0E7A  0020               	movlb	0	; select bank0
  8055     0E7B  00EE               	movwf	_EUSART_FramingErrorHandler+1
  8056     0E7C  0870               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  8057     0E7D  00ED               	movwf	_EUSART_FramingErrorHandler
  8058     0E7E                     l132:
  8059     0E7E  0008               	return
  8060     0E7F                     __end_of_EUSART_SetFramingErrorHandler:
  8061                           
  8062                           	psect	text41
  8063     0E73                     __ptext41:	
  8064 ;; *************** function _EUSART_SetErrorHandler *****************
  8065 ;; Defined at:
  8066 ;;		line 165 in file "mcc_generated_files/eusart.c"
  8067 ;; Parameters:    Size  Location     Type
  8068 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  8069 ;;		 -> EUSART_DefaultErrorHandler(1), 
  8070 ;; Auto vars:     Size  Location     Type
  8071 ;;		None
  8072 ;; Return value:  Size  Location     Type
  8073 ;;                  1    wreg      void 
  8074 ;; Registers used:
  8075 ;;		wreg
  8076 ;; Tracked objects:
  8077 ;;		On entry : 0/0
  8078 ;;		On exit  : 0/0
  8079 ;;		Unchanged: 0/0
  8080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8081 ;;      Params:         2       0       0       0       0       0
  8082 ;;      Locals:         0       0       0       0       0       0
  8083 ;;      Temps:          0       0       0       0       0       0
  8084 ;;      Totals:         2       0       0       0       0       0
  8085 ;;Total ram usage:        2 bytes
  8086 ;; Hardware stack levels used: 1
  8087 ;; This function calls:
  8088 ;;		Nothing
  8089 ;; This function is called by:
  8090 ;;		_EUSART_Initialize
  8091 ;; This function uses a non-reentrant model
  8092 ;;
  8093                           
  8094     0E73                     _EUSART_SetErrorHandler:	
  8095                           ;psect for function _EUSART_SetErrorHandler
  8096                           
  8097     0E73                     l2500:	
  8098                           ;incstack = 0
  8099                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  8100                           
  8101                           
  8102                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  8103     0E73  0871               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  8104     0E74  0022               	movlb	2	; select bank2
  8105     0E75  00E9               	movwf	(_EUSART_ErrorHandler+1)^(0+256)
  8106     0E76  0870               	movf	EUSART_SetErrorHandler@interruptHandler,w
  8107     0E77  00E8               	movwf	_EUSART_ErrorHandler^(0+256)
  8108     0E78                     l138:
  8109     0E78  0008               	return
  8110     0E79                     __end_of_EUSART_SetErrorHandler:
  8111     007E                     btemp	set	126	;btemp
  8112     007E                     wtemp0	set	126
  8113     2100                     
  8114                           	psect	idloc
  8115                           
  8116                           ;Config register IDLOC0 @ 0x8000
  8117                           ;	unspecified, using default values
  8118     8000                     	org	32768
  8119     8000  3FFF               	dw	16383
  8120                           
  8121                           ;Config register IDLOC1 @ 0x8001
  8122                           ;	unspecified, using default values
  8123     8001                     	org	32769
  8124     8001  3FFF               	dw	16383
  8125                           
  8126                           ;Config register IDLOC2 @ 0x8002
  8127                           ;	unspecified, using default values
  8128     8002                     	org	32770
  8129     8002  3FFF               	dw	16383
  8130                           
  8131                           ;Config register IDLOC3 @ 0x8003
  8132                           ;	unspecified, using default values
  8133     8003                     	org	32771
  8134     8003  3FFF               	dw	16383
  8135                           
  8136                           	psect	config
  8137                           
  8138                           ;Config register CONFIG1 @ 0x8007
  8139                           ;	Oscillator Selection
  8140                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  8141                           ;	Watchdog Timer Enable
  8142                           ;	WDTE = OFF, WDT disabled
  8143                           ;	Power-up Timer Enable
  8144                           ;	PWRTE = OFF, PWRT disabled
  8145                           ;	MCLR Pin Function Select
  8146                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  8147                           ;	Flash Program Memory Code Protection
  8148                           ;	CP = OFF, Program memory code protection is disabled
  8149                           ;	Data Memory Code Protection
  8150                           ;	CPD = OFF, Data memory code protection is disabled
  8151                           ;	Brown-out Reset Enable
  8152                           ;	BOREN = ON, Brown-out Reset enabled
  8153                           ;	Clock Out Enable
  8154                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  8155                           ;	Internal/External Switchover
  8156                           ;	IESO = ON, Internal/External Switchover mode is enabled
  8157                           ;	Fail-Safe Clock Monitor Enable
  8158                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  8159     8007                     	org	32775
  8160     8007  3FE4               	dw	16356
  8161                           
  8162                           ;Config register CONFIG2 @ 0x8008
  8163                           ;	Flash Memory Self-Write Protection
  8164                           ;	WRT = OFF, Write protection off
  8165                           ;	PLL Enable
  8166                           ;	PLLEN = OFF, 4x PLL disabled
  8167                           ;	Stack Overflow/Underflow Reset Enable
  8168                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  8169                           ;	Brown-out Reset Voltage Selection
  8170                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  8171                           ;	Low-Voltage Programming Enable
  8172                           ;	LVP = ON, Low-voltage programming enabled
  8173     8008                     	org	32776
  8174     8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    36
    Data        8
    BSS         169
    Persistent  38
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     52      79
    BANK1            80      0      80
    BANK2            80      0      76
    BANK3            16      0       0
    BANK4             0      0       0

Pointer List with Targets:

    snake_getSurroundings@surroundings	PTR unsigned char  size(1) Largest target is 16
		 -> Y0(BANK1[16]), 

    sp__ai_getInputField	PTR unsigned char  size(1) Largest target is 16
		 -> Y0(BANK1[16]), 

    sp__snake_getField	PTR unsigned char  size(1) Largest target is 64
		 -> field(BANK1[64]), 

    main@field	PTR unsigned char  size(1) Largest target is 64
		 -> field(BANK1[64]), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    _snake_move->_rand
    _snake_initiate->_rand
    _rand->___lmul
    _sendMatrix->_txMAX7219
    _initMAX7219->_txMAX7219
    _txMAX7219->_SPI1_WriteByte
    _ai_run->___awdiv
    _ai_propagate->___awdiv
    _ai_propagate->_weights1_write
    _weights2_write->_eeprom_write
    _weights2_read->___bmul
    _weights2_read->_eeprom_read
    _weights1_write->___wmul
    _weights1_read->_eeprom_read
    _biases2_write->_eeprom_write
    _biases2_read->_eeprom_read
    _biases1_write->_eeprom_write
    _eeprom_write->___bmul
    _biases1_read->_eeprom_read
    ___wmul->_weights1_read
    ___awdiv->___wmul
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _main in BANK0

    _main->_ai_propagate
    _snake_move->_snake_initiate
    _snake_initiate->_rand
    _ai_run->___awdiv
    _ai_propagate->___awdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0   19273
                                             42 BANK0     10    10      0
                  _SYSTEM_Initialize
                   _ai_getInputField
                       _ai_propagate
                             _ai_run
                 _deactivateElevator
                        _initMAX7219
                           _ledClear
                             _ledSet
                         _sendMatrix
                     _snake_getField
              _snake_getFoodPosition
              _snake_getSurroundings
                     _snake_initiate
                         _snake_move
 ---------------------------------------------------------------------------------
 (1) _snake_move                                           5     5      0     720
                                              6 BANK0      5     5      0
                               _rand
                     _snake_initiate
 ---------------------------------------------------------------------------------
 (2) _snake_initiate                                       2     2      0     312
                                              4 BANK0      2     2      0
                               _rand
 ---------------------------------------------------------------------------------
 (3) _rand                                                 6     4      2     244
                                             12 COMMON     2     0      2
                                              0 BANK0      4     4      0
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     244
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _snake_getSurroundings                                5     5      0     588
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (1) _snake_getFoodPosition                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _snake_getField                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sendMatrix                                           5     5      0     935
                                              3 COMMON     5     5      0
                          _txMAX7219
 ---------------------------------------------------------------------------------
 (1) _ledSet                                               4     3      1     348
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _ledClear                                             4     3      1     196
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _initMAX7219                                          2     2      0     750
                                              3 COMMON     2     2      0
                          _txMAX7219
 ---------------------------------------------------------------------------------
 (2) _txMAX7219                                            2     1      1     750
                                              1 COMMON     2     1      1
                     _SPI1_WriteByte
 ---------------------------------------------------------------------------------
 (3) _SPI1_WriteByte                                       1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _deactivateElevator                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ai_run                                              10    10      0    4696
                                              8 BANK0     10    10      0
                            ___awdiv
                             ___wmul
                       _biases1_read
                       _biases2_read
                            _sigmoid
                      _weights1_read
                      _weights2_read
 ---------------------------------------------------------------------------------
 (2) _sigmoid                                              2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ai_propagate                                        34    34      0    9850
                                              8 BANK0     34    34      0
                            ___awdiv
                             ___wmul
                       _biases1_read
                      _biases1_write
                       _biases2_read
                      _biases2_write
                         _de_sigmoid
                      _weights1_read
                     _weights1_write
                      _weights2_read
                     _weights2_write
 ---------------------------------------------------------------------------------
 (2) _weights2_write                                       3     1      2    1266
                                              8 COMMON     3     1      2
                             ___bmul
                       _eeprom_write
                      _weights2_read (ARG)
 ---------------------------------------------------------------------------------
 (2) _weights2_read                                        2     1      1     538
                                              4 COMMON     2     1      1
                             ___bmul
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     244
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _weights1_write                                       4     2      2    1022
                                             13 COMMON     1     1      0
                                              0 BANK0      3     1      2
                             ___wmul (ARG)
                       _eeprom_write
                      _weights1_read (ARG)
 ---------------------------------------------------------------------------------
 (2) _weights1_read                                        3     2      1     218
                                              4 COMMON     3     2      1
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (2) _de_sigmoid                                           2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _biases2_write                                        2     1      1     848
                                              8 COMMON     2     1      1
                       _biases2_read (ARG)
                       _eeprom_write
 ---------------------------------------------------------------------------------
 (2) _biases2_read                                         1     1      0      44
                                              4 COMMON     1     1      0
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (2) _biases1_write                                        2     1      1     848
                                              8 COMMON     2     1      1
                       _biases1_read (ARG)
                       _eeprom_write
 ---------------------------------------------------------------------------------
 (3) _eeprom_write                                         4     3      1     652
                                              4 COMMON     4     3      1
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _biases1_read                                         1     1      0      44
                                              4 COMMON     1     1      0
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (3) _eeprom_read                                          4     4      0      22
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1612
                                              7 COMMON     6     2      4
                      _weights1_read (ARG)
                      _weights2_read (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1364
                                             13 COMMON     1     1      0
                                              0 BANK0      8     4      4
                             ___wmul (ARG)
                      _weights2_read (ARG)
 ---------------------------------------------------------------------------------
 (1) _ai_getInputField                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI1_Initialize
     _WDT_Initialize
   _ai_getInputField
   _ai_propagate
     ___awdiv
       ___wmul (ARG)
         _weights1_read (ARG)
           _eeprom_read
         _weights2_read (ARG)
           ___bmul
           _eeprom_read
       _weights2_read (ARG)
     ___wmul
     _biases1_read
       _eeprom_read
     _biases1_write
       _biases1_read (ARG)
       _eeprom_write (ARG)
         ___bmul (ARG)
     _biases2_read
       _eeprom_read
     _biases2_write
       _biases2_read (ARG)
       _eeprom_write (ARG)
     _de_sigmoid
     _weights1_read
     _weights1_write
       ___wmul (ARG)
       _eeprom_write (ARG)
       _weights1_read (ARG)
     _weights2_read
     _weights2_write
       ___bmul
       _eeprom_write
       _weights2_read (ARG)
   _ai_run
     ___awdiv
     ___wmul
     _biases1_read
     _biases2_read
     _sigmoid
     _weights1_read
     _weights2_read
   _deactivateElevator
   _initMAX7219
     _txMAX7219
       _SPI1_WriteByte
   _ledClear
   _ledSet
   _sendMatrix
     _txMAX7219
   _snake_getField
   _snake_getFoodPosition
   _snake_getSurroundings
   _snake_initiate
     _rand
       ___lmul
   _snake_move
     _rand
     _snake_initiate

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      F9       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     34      4F       6       98.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      4C      10       95.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               10      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK4                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      F9      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Oct 08 18:03:38 2022

                           SPI1_WriteByte@byte 0070                           __end_of_ai_propagate 07BC  
                               ___bmul@product 0072                                             l93 0FFF  
                                           _Y0 00E0                                             _Y1 0159  
                                           _Y2 0060                                             _Z1 0152  
                                           _Z2 005C                                   ___awdiv@sign 0025  
                          ___wmul@multiplicand 0079                           __end_of_biases1_read 0E8D  
                         __end_of_biases2_read 0E94                                            l132 0E7E  
                                          _DB1 0144                                            _DB2 0054  
                                          l135 0009                                            l224 0E72  
                                          l138 0E78                                            l251 0E85  
                                          l163 0FA4                                            l323 0EDF  
                                          l254 0E6D                                            l415 0031  
                                          l248 0F0C                                            l360 0FAC  
                                          l601 0E64                                            l362 0FB1  
                                          l442 023E                                            l187 0EB9  
                                          l363 0FB6                                            l540 0EA4  
                                          l372 0F4F                                            l460 02F4  
                                          l365 0FBB                                            l445 0E66  
                                          l622 07BB                                            l366 0FBE  
                                          l390 008A                                            l543 0EFC  
                                          l375 0F62                                            l552 0E8C  
                                          l537 0F3D                                            l369 0130  
                                          l546 0EAD                                            l618 04D0  
                                          l458 02D9                                            l555 0ED2  
                                          l549 0EED                                            l469 0E69  
                                          l558 0E93                                            l824 0F64  
                                          l664 0F2C                                            l826 0F77  
                                          l850 005B                                            l843 0033  
                                          l667 0F1C                                            l844 0033  
                                          l854 0FC9                                            l847 004C  
                                          l856 0FDD                                            l880 0F8C  
                                          l868 00BD                                            _DW1 2100  
                                          _DW2 0120                                            _DY1 014B  
                                          _DY2 0058                 ?_EUSART_SetFramingErrorHandler 0070  
                                          wreg 0009                          __end_of_biases1_write 0EA5  
                                 ?_initMAX7219 0070                          __end_of_biases2_write 0EAE  
                                         l1007 0190                                           l3000 04E5  
                                         l3002 04EB                                           l3100 065A  
                                         l3020 050B                                           l3004 04EF  
                                         l3110 0678                                           l3102 0660  
                                         l3030 051E                                           l3014 04FC  
                                         l3022 0511                                           l3006 04F5  
                                         l1318 00F2                                           l3112 068E  
                                         l3104 0661                                           l3040 0546  
                                         l3016 0501                                           l3008 04FB  
                                         l3122 06B6                                           l3114 069E  
                                         l3042 054C                                           l3018 0505  
                                         l3210 02FB                                           l2500 0E73  
                                         l3140 0725                                           l3124 0702  
                                         l3116 06AE                                           l3132 070C  
                                         l3108 0668                                           l3052 0557  
                                         l3044 0550                                           l3036 051F  
                                         l3028 0512                                           l3212 02FE  
                                         l2510 0038                                           l3142 0727  
                                         l3134 070D                                           l3118 06AF  
                                         l3070 0597                                           l3062 0578  
                                         l3054 0572                                           l3046 0556  
                                         l3038 0542                                           l2502 0E6F  
                                         l3230 031D                                           l3222 0307  
                                         l3214 0301                                           l3206 02F5  
                                         l2520 004F                                           l2512 0041  
                                         l3152 0755                                           l3128 0707  
                                         l3080 05AD                                           l3072 059D  
                                         l3064 0589                                           l3056 0577  
                                         l2504 00BE                                           l2600 0015  
                                         l3240 0339                                           l3232 0324  
                                         l3216 0306                                           l3208 02F8  
                                         l2530 0F6A                                           l2522 0053  
                                         l2514 0045                                           l3170 077D  
                                         l3162 0762                                           l3146 072E  
                                         l3138 0714                                           l3082 05C2  
                                         l3066 058D                                           l2610 0FA8  
                                         l2506 00DF                                           l2602 001B  
                                         l3410 01F7                                           l3250 0354  
                                         l3242 033F                                           l3234 032A  
                                         l2700 018C                                           l2524 0054  
                                         l2516 0047                                           l2620 0EA6  
                                         l2540 0F82                                           l3172 07B0  
                                         l3164 0774                                           l3148 074F  
                                         l3156 075A                                           l3092 05E2  
                                         l3084 05D2                                           l3068 0593  
                                         l2612 0FB2                                           l2604 0029  
                                         l3252 0361                                           l3244 0344  
                                         l3236 032F                                           l3228 0308  
                                         l2550 0FE7                                           l2526 0055  
                                         l2518 004B                                           l2622 0EE1  
                                         l2614 0F2F                                           l2542 0F84  
                                         l2534 0F79                                           l2630 0EC7  
                                         l3166 0776                                           l3158 075B  
                                         l3094 064C                                           l3086 05E1  
                                         l3078 059E                                           l2710 00F9  
                                         l2606 002B                                           l3270 0388  
                                         l3262 0372                                           l3254 0367  
                                         l3246 0351                                           l3238 0335  
                                         l2552 0FE8                                           l2560 0F8D  
                                         l2704 0EFD                                           l2528 005A  
                                         l2616 0E9D                                           l2544 0F8B  
                                         l2536 0F7A                                           l3176 07B6  
                                         l3096 0650                                           l2608 0FA6  
                                         l2712 011A                                           l3280 03A4  
                                         l3272 038F                                           l3256 0370  
                                         l3248 0354                                           l2554 0FEF  
                                         l2570 0F9D                                           l2562 0F90  
                                         l2650 0FC5                                           l2626 0E87  
                                         l2634 0E8E                                           l2642 0F0E  
                                         l2538 0F7E                                           l2618 0EEF  
                                         l3098 0656                                           l2706 0ED3  
                                         l2714 0125                                           l2722 0F3F  
                                         l2730 005C                                           l2810 02EA  
                                         l2802 02C1                                           l2490 00A6  
                                         l2482 008B                                           l3282 03AA  
                                         l3274 0395                                           l2556 0FF6  
                                         l2548 0FDE                                           l2572 0F9F  
                                         l2564 0F93                                           l2580 0EB7  
                                         l2660 0131                                           l2652 0FCE  
                                         l2900 04C5                                           l2820 03C4  
                                         l2716 012A                                           l2708 00F3  
                                         l2724 0F51                                           l2740 0065  
                                         l2812 02EE                                           l2804 02CA  
                                         l2492 00B5                                           l2484 0093  
                                         l3284 03AF                                           l3276 039A  
                                         l3268 0373                                           l2558 0FFD  
                                         l2582 0E7F                                           l2574 0FA2  
                                         l2566 0F95                                           l2670 0142  
                                         l2662 0133                                           l2654 0FD3  
                                         l2646 0FBF                                           l2638 0F1E  
                                         l2902 04C9                                           l2822 03CD  
                                         l2814 03C2                                           l2750 006D  
                                         l2718 0E65                                           l2726 0E67  
                                         l2806 02D0                                           l2486 0097  
                                         l2590 000A                                           l3286 03BC  
                                         l3278 03A0                                           l2496 0E79  
                                         l2584 0E82                                           l2568 0F98  
                                         l2576 0EAE                                           l2760 0E63  
                                         l2680 0156                                           l2672 0147  
                                         l2664 0137                                           l2656 0FD9  
                                         l2648 0FC1                                           l2904 04CF  
                                         l2824 03D3                                           l2752 0073  
                                         l2736 005D                                           l2808 02E2  
                                         l2488 009F                                           l2920 01A7  
                                         l2498 0004                                           l2586 0E83  
                                         l2578 0EB5                                           l2690 0176  
                                         l2682 015B                                           l2674 014B  
                                         l2666 013C                                           l2850 0429  
                                         l2842 03EA                                           l2834 03DE  
                                         l2826 03D7                                           l2754 0079  
                                         l2746 0066                                           l2738 0064  
                                         l2770 0241                                           l2930 01BC  
                                         l2922 01AD                                           l2914 0194  
                                         l2588 0E6A                                           l2692 0177  
                                         l2684 015F                                           l2676 014D  
                                         l2668 013E                                           l2852 042F  
                                         l2844 03F5                                           l2836 03E8  
                                         l2828 03DD                                           l2756 0080  
                                         l2748 0068                                           l2780 0263  
                                         l2772 0248                                           l2764 0240  
                                         l2596 000C                                           l2932 01BF  
                                         l2924 01AE                                           l2916 019D  
                                         l2908 0193                                           l2694 017C  
                                         l2686 0163                                           l2678 0153  
                                         l2854 043E                                           l2846 040C  
                                         l2758 0084                                           l2790 029C  
                                         l2782 026A                                           l2774 024C  
                                         l2598 0011                                           l2942 01DA  
                                         l2926 01B3                                           l2918 01A3  
                                         l2688 0172                                           l2696 0182  
                                         l2880 0494                                           l2872 0455  
                                         l2864 044A                                           l2856 0443  
                                         l2848 0425                                           l2792 02A2  
                                         l2784 0273                                           l2776 0252  
                                         l2960 0217                                           l2944 01DD  
                                         l2936 01C9                                           l2928 01B9  
                                         l2952 01EF                                           l2698 0187  
                                         l2890 04B3                                           l2882 049A  
                                         l2874 0461                                           l2866 0453  
                                         l2858 0449                                           l2794 02AE  
                                         l2786 0285                                           l2778 0259  
                                         l2970 0226                                           l2938 01CE  
                                         l2954 0205                                           l2884 04A7  
                                         l2876 0478                                           l2796 02C0  
                                         l2788 0290                                           l2972 022D  
                                         l2964 021A                                           l2956 020A  
                                         l2948 01EA                                           l2990 04DE  
                                         l2886 04AC                                           l2878 0490  
                                         l2966 0220                                           l2974 0236  
                                         l2958 020E                                           l2992 04DF  
                                         l2984 04D3                                           l2896 04B5  
                                         l2888 04B2                                           l2968 0222  
                                         l2976 023C                                           l2994 04E4  
                                         l2898 04C3                                           l2988 04D9  
                __end_of_snake_getSurroundings 02F5                                           u2000 0660  
                                         u2001 065F                                           u2010 0667  
                                         u2011 0666                                           u1300 0F6A  
                                         u2020 06B5                                           u1220 0097  
                                         u1301 0F69                                           u2021 06B4  
                                         u1221 0096                                           u1310 0F7E  
                                         u2030 0713                                           u1311 0F7D  
                                         u2031 0712                                           u1400 0FC5  
                                         u1320 0F8B                                           u2040 072D  
                                         u2120 031D                                           u1401 0FC4  
                                         u1321 0F8A                                           u2041 072C  
                                         u2121 031C                                           u1250 00B5  
                                         u1330 001B                                           u2130 0335  
                                         u1251 00B4                                           u1235 00A0  
                                         u1331 001A                                           u2131 0334  
                                         u2115 030B                                           u1500 0172  
                                         u2060 0761                                           u1340 0FB1  
                                         u1260 00EC                                           u2140 033F  
                                         u1501 0171                                           u2061 0760  
                                         u1341 0FB0                                           u1245 00A7  
                                         u2205 03B2                                           u2141 033E  
                                         _LATA 010C                                           u1430 0FD9  
                                         u1270 0038                                           u2070 077C  
                                         u1350 0FBB                                           _LATB 010D  
                                         u1431 0FD8                                           u1415 0FCA  
                                         u1271 0037                                           u2071 077B  
                                         u2055 0733                                           u1351 0FBA  
                                         u1520 0182                                           u1440 0137  
                                         u1280 004B                                           u1600 0273  
                                         u1521 0181                                           u1505 016E  
                                         u1441 0136                                           u1425 0FCF  
                                         u1281 004A                                           u1601 0272  
                                         u1265 00E8                                           u1530 0187  
                                         u1450 0142                                           u1290 005A  
                                         u2170 0388                                           u1531 0186  
                                         u1515 0178                                           u1451 0141  
                                         u1291 0059                                           u2171 0387  
                                         u2155 0347                                           u1460 0153  
                                         u1700 042F                                           u1620 0290  
                                         u2180 03A0                                           u1461 0152  
                                         u1365 0F34                                           u1701 042E  
                                         u1621 028F                                           u2181 039F  
                                         u2165 0376                                           u1710 0449  
                                         u2190 03AA                                           u1375 0EE4  
                                         u1711 0448                                           u1615 0288  
                                         u2191 03A9                                           u1480 0163  
                                         u1720 049A                                           u1544 0F44  
                                         u1560 0079                                           u1640 02AE  
                                         u1481 0162                                           u1385 0F21  
                                         u1721 0499                                           u1545 0F43  
                                         u1561 0078                                           u1641 02AD  
                                         u1730 04B2                                           u1554 0F56  
                                         u1570 008A                                           u1650 02D0  
                                         u1810 01D9                                           u1475 0157  
                                         u1395 0F11                                           u1731 04B1  
                                         u1555 0F55                                           u1571 0089  
                                         u1651 02CF                                           u1635 02A5  
                                         u1811 01D8                                           u1900 04E4  
                                         u1740 04C3                                           u1660 02E2  
                                         u1580 0252                                           u1901 04E3  
                                         u1741 04C2                                           u1661 02E1  
                                         u1581 0251                                           u1805 01D1  
                                         u1910 04F5                                           u1750 04CF  
                                         u1670 02F4                                           u1590 0259  
                                         u1830 01E9                                           u1495 0164  
                                         u1911 04F4                                           u1751 04CE  
                                         u1671 02F3                                           u1591 0258  
                                         u1831 01E8                                           u2287 035A  
                                         u1920 050B                                           u1680 03CD  
                                         u1840 020A                                           u1760 019D  
                                         u1921 050A                                           u1681 03CC  
                                         u2297 011F                                           u1841 0209  
                                         u1825 01E0                                           u1761 019C  
                                         u1930 054C                                           u1690 03DD  
                                         u1850 0217                                           u1770 01AD  
                                         u1931 054B                                           u1691 03DC  
                                         u1851 0216                                           u1771 01AC  
                                         u1940 0556                                           u1860 0220  
                                         u1780 01B9                                           u1941 0555  
                                         u1861 021F                                           u1781 01B8  
                                         u1870 0236                                           u1790 01C8  
                                         u1871 0235                                           u1791 01C7  
                                         u1960 0593                                           u1880 04D8  
                                         u1961 0592                                           u1881 04D7  
                                         u1970 059D                                           u1890 04DE  
                                         u1971 059C                                           u1955 057B  
                                         u1891 04DD                                           u1990 0656  
                                         u1991 0655                                           u1985 063D  
                                         _WPUA 020C                                           _WPUB 020D  
                               ??_eeprom_write 0075                                           _main 02F5  
                                         _rand 00BE                                           _seed 0069  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         btemp 007E                                           start 0002  
                            ___bmul@multiplier 0073                                ??_weights1_read 0075  
                              ??_weights2_read 0075                     __end_of_deactivateElevator 0EE0  
                              biases1_read@add 0074                        ??_snake_getFoodPosition 0070  
                __end_of_OSCILLATOR_Initialize 0E86                                biases2_read@add 0074  
                                        ?_main 0070                                          ?_rand 007C  
                              __end_of___awdiv 0191                                          _EEADR 0191  
                              ___awdiv@divisor 0020                                ___awdiv@counter 0024  
                                        _RCREG 0199                                          _RCSTA 019D  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TXREG 019A                                          _TXSTA 019E  
                          ___lmul@multiplicand 0074                                          _field 00A0  
                               _WDT_Initialize 0E6A                                          main@i 0050  
                                        main@j 0051                                __end_of_sigmoid 0F2D  
                                        status 0003                                          wtemp0 007E  
                              __initialization 07BC                               ??_weights1_write 007D  
                                 __end_of_main 03C2                               ??_weights2_write 007A  
                                 __end_of_rand 00F3                                         ??_main 004A  
                                       ??_rand 0020                         __end_of_WDT_Initialize 0E6E  
            _EUSART_DefaultFramingErrorHandler 0000                     _EUSART_OverrunErrorHandler 016A  
                                       _EEADRH 0192                                         _EEADRL 0191  
                                       _EEDATA 0193                                         _EEDATH 0194  
                                       _EEDATL 0193                                         _EECON1 0195  
                                       _EECON2 0196                               ___awdiv@dividend 0022  
                                       _ANSELA 018C                                         _ANSELB 018D  
                                       _BORCON 0116                              ?_ai_getInputField 0070  
                                       _OSCCON 0099                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _WDTCON 0097  
                           ??_ai_getInputField 0070                               __end_of_ledClear 0F63  
            snake_getSurroundings@surroundings 0074                                         ___bmul 0F78  
                                       ___lmul 008B                                         ___wmul 0FBF  
                                    ??___awdiv 007D                                         _ai_run 03C2  
                                       _choice 0066                                         _ledSet 0F3E  
                             _de_sigmoidValues 0800                                         _matrix 013C  
                             ___awdiv@quotient 0026                           __end_of_eeprom_write 005C  
                             biases1_write@add 0079                               biases1_write@val 0078  
                              ?_WDT_Initialize 0070                                      ??_sigmoid 0070  
                                ai_propagate@S 0035                                  ai_propagate@i 003A  
                             biases2_write@add 0079                                  ai_propagate@j 003F  
                                ai_propagate@k 0045                               biases2_write@val 0078  
                                 _ai_propagate 04D1                              _SYSTEM_Initialize 0EFD  
                                 _biases1_read 0E86                                   _biases2_read 0E8D  
                      __end_of__initialization 07FD                                eeprom_read@addr 0073  
                           ?_SYSTEM_Initialize 0070                            ___bmul@multiplicand 0070  
                               __pcstackCOMMON 0070                                   __pidataBANK2 0E94  
                          ??_SYSTEM_Initialize 0072                              ??_SPI1_Initialize 0070  
                           _spi1_configuration 0820                                 _OPTION_REGbits 0095  
                        __end_of_sigmoidValues 0820                              eeprom_write@value 0074  
              ??_EUSART_SetOverrunErrorHandler 0072                                snake_initiate@i 0025  
                    __end_of_SYSTEM_Initialize 0F0D                            snake_move@direction 0028  
                                 _headPosition 0065                                     __pbssBANK0 0054  
                                   __pbssBANK1 00A0                                     __pbssBANK2 0120  
                        ai_propagate@incentive 0039                                     _de_sigmoid 0F0D  
                               _SPI1_WriteByte 0E6E                            snake_move@incentive 0029  
                                   __pmaintext 02F5                                        ?___bmul 0070  
                                      ?___lmul 0070                                        ?___wmul 0077  
                                      ?_ai_run 0070                                    sendMatrix@b 0074  
                                  sendMatrix@i 0077                                    sendMatrix@j 0076  
                                      ?_ledSet 0070                                        _BAUDCON 019F  
                               ___lmul@product 0078                                        _APFCON0 011D  
                                      _APFCON1 011E                  __end_of_snake_getFoodPosition 0E6A  
                         main@foodPosition_661 004F                             _deactivateElevator 0ED3  
                                      _OSCTUNE 0098                                      ?_ledClear 0070  
                                      _SSP1ADD 0212                                        _SSP1BUF 0211  
                     ??_EUSART_SetErrorHandler 0072                            ?_deactivateElevator 0070  
                       __end_of_SPI1_WriteByte 0E73                          _snake_getSurroundings 023F  
                            weights1_read@add1 0076                              weights1_read@add2 0074  
                             main@foodPosition 004E                          __end_of_weights1_read 0EEE  
                                      ___awdiv 0131                          __end_of_weights2_read 0ED3  
                            weights2_read@add1 0075                              weights2_read@add2 0074  
                         ??_deactivateElevator 0070                                        __ptext1 0191  
                                      __ptext2 000A                                        __ptext3 00BE  
                                      __ptext4 008B                                        __ptext5 023F  
                                      __ptext6 0E67                                        __ptext7 0E65  
                                      __ptext8 005C                                        __ptext9 0F3E  
                            __end_of_txMAX7219 0FBF                                        ai_run@i 002A  
                                      ai_run@j 0030                                        ai_run@z 002E  
                        _OSCILLATOR_Initialize 0E7F                                        _mapping 0160  
                     ??_PIN_MANAGER_Initialize 0070                                        _sigmoid 0F1D  
                                   ??_ledClear 0071                                        ledSet@c 0070  
                                      ledSet@l 0073                                        clrloop0 0EBB  
                         end_of_initialization 07FD                                     _sendMatrix 005C  
                     __end_of_de_sigmoidValues 0810                                    ?_de_sigmoid 0070  
        __end_of_EUSART_SetOverrunErrorHandler 000A                  _EUSART_SetOverrunErrorHandler 0004  
                              ?_SPI1_WriteByte 0070                                   _eeprom_write 0032  
                                  snake_move@i 002A                              _EUSART_Initialize 0FDE  
                            weights1_write@val 0021                             ?_EUSART_Initialize 0070  
                                    _RCSTAbits 019D                                     _snake_move 0191  
                               ai_propagate@dz 0048                              weights2_write@val 0079  
                          ??_EUSART_Initialize 0072                               ??_WDT_Initialize 0070  
                               txMAX7219@addr0 0072                                      _TRISAbits 008C  
                                    _TRISBbits 008D                                  _biases1_write 0E9C  
                                _biases2_write 0EA5                         ?_snake_getSurroundings 0070  
                    __end_of_EUSART_Initialize 1000                                _SPI1_Initialize 0EAE  
                                ??_eeprom_read 0070                                      _TXSTAbits 019E  
                                 _foodPosition 0064                                 _snake_getField 0E65  
                               __end_of___bmul 0F8D                                 __end_of___lmul 00BE  
                   _EUSART_DefaultErrorHandler 0000                                 __end_of___wmul 0FDE  
                               __end_of_ai_run 04D1                                 __end_of_ledSet 0F50  
                       ?_OSCILLATOR_Initialize 0070                                 _snake_initiate 000A  
                          start_initialization 07BC                                  ??_initMAX7219 0073  
                               ?_biases1_write 0078                                 ?_biases2_write 0078  
                                  ?_sendMatrix 0070                         __end_of_snake_getField 0E67  
               ?_EUSART_SetOverrunErrorHandler 0070                     _EUSART_FramingErrorHandler 006D  
                                     ??___bmul 0071                                       ??___lmul 0078  
                                  ?_snake_move 0070                                       ??___wmul 007B  
                       _EUSART_SetErrorHandler 0E73                            __end_of_eeprom_read 0F78  
                                     ??_ai_run 0028                                       ??_ledSet 0071  
                                  __pdataBANK2 0160                         __end_of_snake_initiate 0032  
                                  __pbssBIGRAM 2100                                      ___latbits 0001  
                                __pcstackBANK0 0020                        __end_of_SPI1_Initialize 0EBA  
                             eeprom_write@addr 0077                            __end_of_initMAX7219 0131  
                                    __pnvBANK0 006D                                      __pnvBANK2 0168  
                              ?_snake_getField 0070                         _PIN_MANAGER_Initialize 0F8D  
                                     ?___awdiv 0020                               _ai_getInputField 0E63  
                              ?_snake_initiate 0070                                   sendMatrix@nb 0075  
                        _snake_getFoodPosition 0E67                                ??_biases1_write 0079  
                              ??_biases2_write 0079                                       ?_sigmoid 0070  
                             ??_SPI1_WriteByte 0070                                      _txMAX7219 0FA5  
                                 ??_de_sigmoid 0070                                 ___wmul@product 007B  
                                     _LATAbits 010C         EUSART_SetErrorHandler@interruptHandler 0070  
                                     _LATBbits 010D                                      clear_ram0 0EBA  
                                  _eeprom_read 0F63                              _eusartRxLastError 0068  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 0072  
                                    ledClear@c 0070                                      ledClear@l 0073  
                                    _snakeSize 0067                                       _SSP1CON1 0215  
                                     _SSP1CON2 0216              _EUSART_DefaultOverrunErrorHandler 0000  
                                     _SSP1STAT 0214                                  txMAX7219@dat0 0071  
                                    main@i_659 0052                                      main@j_660 0053  
                            ___wmul@multiplier 0077                             __end_of_de_sigmoid 0F1D  
                               _weights1_write 0F2D                                      main@field 004D  
                               _weights2_write 0EEE                                    _initMAX7219 00F3  
                      ??_snake_getSurroundings 0070                                     ?_txMAX7219 0071  
                                _sigmoidValues 0810                               ?_SPI1_Initialize 0070  
                                ?_ai_propagate 0070                              ___lmul@multiplier 0070  
                                ?_biases1_read 0070                                  ?_biases2_read 0070  
                                   _EECON1bits 0195                                    ai_run@i_903 002C  
                                  ai_run@i_905 002D                                    ai_run@j_901 0031  
                                  ai_run@i_899 002B                        ??_OSCILLATOR_Initialize 0070  
                          _EUSART_ErrorHandler 0168                         __end_of_weights1_write 0F3E  
                       __end_of_weights2_write 0EFD                         ?_snake_getFoodPosition 0070  
                       snake_getSurroundings@i 0072                         snake_getSurroundings@p 0071  
                            ai_propagate@i_910 003B                              ai_propagate@i_912 003C  
                            ai_propagate@i_921 0040                              ai_propagate@i_914 003D  
                            ai_propagate@i_923 0041                              ai_propagate@j_920 0046  
                            ai_propagate@j_913 0044                              ai_propagate@j_922 0047  
                            ai_propagate@j_917 0042                              ai_propagate@j_919 003E  
                            ai_propagate@k_918 0043                                    de_sigmoid@z 0071  
                                     _ledClear 0F50                                 ??_ai_propagate 0028  
                                     __ptext10 0F50                                       __ptext11 00F3  
                                     __ptext20 0F78                                       __ptext12 0FA5  
                                     __ptext21 0F2D                                       __ptext13 0E6E  
                                     __ptext30 0FBF                                       __ptext22 0EE0  
                                     __ptext14 0ED3                                       __ptext31 0131  
                                     __ptext23 0F0D                                       __ptext15 03C2  
                                     __ptext40 0E79                                       __ptext32 0E63  
                                     __ptext24 0EA5                                       __ptext16 0F1D  
                                     __ptext41 0E73                                       __ptext33 0EFD  
                                     __ptext25 0E8D                                       __ptext17 04D1  
                                     __ptext34 0E6A                                       __ptext26 0E9C  
                                     __ptext18 0EEE                                       __ptext35 0EAE  
                                     __ptext27 0032                                       __ptext19 0EC6  
                                     __ptext36 0F8D                                       __ptext28 0E86  
                                     __ptext37 0E7F                                       __ptext29 0F63  
                                     __ptext38 0FDE                                       __ptext39 0004  
                                 _SSP1CON1bits 0215                                   ??_sendMatrix 0073  
                               ??_biases1_read 0074                                 ??_biases2_read 0074  
                      ?_EUSART_SetErrorHandler 0070  EUSART_SetOverrunErrorHandler@interruptHandler 0070  
                                 ??_snake_move 0026                                  _weights1_read 0EE0  
                                _weights2_read 0EC6          __end_of_EUSART_SetFramingErrorHandler 0E7F  
                _EUSART_SetFramingErrorHandler 0E79                             __end_of_sendMatrix 008B  
                              ?_weights1_write 0020                                ?_weights2_write 0078  
                                   _INTCONbits 000B                                    ??_txMAX7219 0072  
                     __end_of_ai_getInputField 0E65                               ??_snake_getField 0070  
                           __end_of_snake_move 023F                        ?_PIN_MANAGER_Initialize 0070  
               __end_of_EUSART_SetErrorHandler 0E79                             weights1_write@add1 0022  
                           weights1_write@add2 0020                                       sigmoid@z 0071  
                             ??_snake_initiate 0024                     snake_getSurroundings@i_783 0073  
                               ?_weights1_read 0074                                 ?_weights2_read 0074  
EUSART_SetFramingErrorHandler@interruptHandler 0070                                  __pstringtext1 0800  
                                __pstringtext2 0810                                  __pstringtext3 0820  
                           weights2_write@add1 007A                             weights2_write@add2 0078  
               __end_of_PIN_MANAGER_Initialize 0FA5                                  ?_eeprom_write 0074  
                                   _STATUSbits 0003                                   ?_eeprom_read 0070  
                   __end_of_spi1_configuration 0824  
