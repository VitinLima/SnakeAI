

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Oct 08 23:13:21 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    15                           	psect	inittext,global,class=CODE,delta=2
    16                           	psect	clrtext,global,class=CODE,delta=2
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text19,local,class=CODE,merge=1,delta=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2
    45                           	psect	text26,local,class=CODE,merge=1,delta=2
    46                           	psect	text27,local,class=CODE,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,merge=1,delta=2
    48                           	psect	text29,local,class=CODE,merge=1,delta=2
    49                           	psect	text30,local,class=CODE,merge=1,delta=2
    50                           	psect	text31,local,class=CODE,merge=1,delta=2
    51                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    52                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    53                           	dabs	1,0x7E,2
    54     0000                     
    55                           ; Version 2.40
    56                           ; Generated 17/11/2021 GMT
    57                           ; 
    58                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution. Publication is not required when
    72                           ;        this file is used in an embedded application.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC16F1827 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90     0000                     	;# 
    91     0001                     	;# 
    92     0002                     	;# 
    93     0003                     	;# 
    94     0004                     	;# 
    95     0005                     	;# 
    96     0006                     	;# 
    97     0007                     	;# 
    98     0008                     	;# 
    99     0009                     	;# 
   100     000A                     	;# 
   101     000B                     	;# 
   102     000C                     	;# 
   103     000D                     	;# 
   104     0011                     	;# 
   105     0012                     	;# 
   106     0013                     	;# 
   107     0014                     	;# 
   108     0015                     	;# 
   109     0016                     	;# 
   110     0016                     	;# 
   111     0017                     	;# 
   112     0018                     	;# 
   113     0019                     	;# 
   114     001A                     	;# 
   115     001B                     	;# 
   116     001C                     	;# 
   117     001E                     	;# 
   118     001F                     	;# 
   119     008C                     	;# 
   120     008D                     	;# 
   121     0091                     	;# 
   122     0092                     	;# 
   123     0093                     	;# 
   124     0094                     	;# 
   125     0095                     	;# 
   126     0096                     	;# 
   127     0097                     	;# 
   128     0098                     	;# 
   129     0099                     	;# 
   130     009A                     	;# 
   131     009B                     	;# 
   132     009B                     	;# 
   133     009C                     	;# 
   134     009D                     	;# 
   135     009E                     	;# 
   136     010C                     	;# 
   137     010D                     	;# 
   138     0111                     	;# 
   139     0112                     	;# 
   140     0113                     	;# 
   141     0114                     	;# 
   142     0115                     	;# 
   143     0116                     	;# 
   144     0117                     	;# 
   145     0118                     	;# 
   146     0119                     	;# 
   147     011A                     	;# 
   148     011B                     	;# 
   149     011D                     	;# 
   150     011E                     	;# 
   151     018C                     	;# 
   152     018D                     	;# 
   153     0191                     	;# 
   154     0191                     	;# 
   155     0192                     	;# 
   156     0193                     	;# 
   157     0193                     	;# 
   158     0193                     	;# 
   159     0194                     	;# 
   160     0195                     	;# 
   161     0196                     	;# 
   162     0199                     	;# 
   163     019A                     	;# 
   164     019B                     	;# 
   165     019B                     	;# 
   166     019B                     	;# 
   167     019B                     	;# 
   168     019C                     	;# 
   169     019C                     	;# 
   170     019D                     	;# 
   171     019E                     	;# 
   172     019F                     	;# 
   173     020C                     	;# 
   174     020D                     	;# 
   175     0211                     	;# 
   176     0211                     	;# 
   177     0212                     	;# 
   178     0212                     	;# 
   179     0213                     	;# 
   180     0213                     	;# 
   181     0214                     	;# 
   182     0214                     	;# 
   183     0215                     	;# 
   184     0215                     	;# 
   185     0215                     	;# 
   186     0216                     	;# 
   187     0216                     	;# 
   188     0217                     	;# 
   189     0217                     	;# 
   190     0219                     	;# 
   191     021A                     	;# 
   192     021B                     	;# 
   193     021C                     	;# 
   194     021D                     	;# 
   195     021E                     	;# 
   196     021F                     	;# 
   197     0291                     	;# 
   198     0291                     	;# 
   199     0292                     	;# 
   200     0293                     	;# 
   201     0294                     	;# 
   202     0295                     	;# 
   203     0295                     	;# 
   204     0296                     	;# 
   205     0298                     	;# 
   206     0298                     	;# 
   207     0299                     	;# 
   208     029A                     	;# 
   209     029B                     	;# 
   210     029C                     	;# 
   211     029C                     	;# 
   212     029D                     	;# 
   213     029E                     	;# 
   214     029E                     	;# 
   215     0311                     	;# 
   216     0311                     	;# 
   217     0312                     	;# 
   218     0313                     	;# 
   219     0318                     	;# 
   220     0318                     	;# 
   221     0319                     	;# 
   222     031A                     	;# 
   223     0394                     	;# 
   224     0395                     	;# 
   225     0396                     	;# 
   226     039A                     	;# 
   227     039C                     	;# 
   228     039D                     	;# 
   229     039E                     	;# 
   230     039F                     	;# 
   231     0415                     	;# 
   232     0416                     	;# 
   233     0417                     	;# 
   234     041C                     	;# 
   235     041D                     	;# 
   236     041E                     	;# 
   237     0FE4                     	;# 
   238     0FE5                     	;# 
   239     0FE6                     	;# 
   240     0FE7                     	;# 
   241     0FE8                     	;# 
   242     0FE9                     	;# 
   243     0FEA                     	;# 
   244     0FEB                     	;# 
   245     0FED                     	;# 
   246     0FEE                     	;# 
   247     0FEF                     	;# 
   248     0000                     	;# 
   249     0001                     	;# 
   250     0002                     	;# 
   251     0003                     	;# 
   252     0004                     	;# 
   253     0005                     	;# 
   254     0006                     	;# 
   255     0007                     	;# 
   256     0008                     	;# 
   257     0009                     	;# 
   258     000A                     	;# 
   259     000B                     	;# 
   260     000C                     	;# 
   261     000D                     	;# 
   262     0011                     	;# 
   263     0012                     	;# 
   264     0013                     	;# 
   265     0014                     	;# 
   266     0015                     	;# 
   267     0016                     	;# 
   268     0016                     	;# 
   269     0017                     	;# 
   270     0018                     	;# 
   271     0019                     	;# 
   272     001A                     	;# 
   273     001B                     	;# 
   274     001C                     	;# 
   275     001E                     	;# 
   276     001F                     	;# 
   277     008C                     	;# 
   278     008D                     	;# 
   279     0091                     	;# 
   280     0092                     	;# 
   281     0093                     	;# 
   282     0094                     	;# 
   283     0095                     	;# 
   284     0096                     	;# 
   285     0097                     	;# 
   286     0098                     	;# 
   287     0099                     	;# 
   288     009A                     	;# 
   289     009B                     	;# 
   290     009B                     	;# 
   291     009C                     	;# 
   292     009D                     	;# 
   293     009E                     	;# 
   294     010C                     	;# 
   295     010D                     	;# 
   296     0111                     	;# 
   297     0112                     	;# 
   298     0113                     	;# 
   299     0114                     	;# 
   300     0115                     	;# 
   301     0116                     	;# 
   302     0117                     	;# 
   303     0118                     	;# 
   304     0119                     	;# 
   305     011A                     	;# 
   306     011B                     	;# 
   307     011D                     	;# 
   308     011E                     	;# 
   309     018C                     	;# 
   310     018D                     	;# 
   311     0191                     	;# 
   312     0191                     	;# 
   313     0192                     	;# 
   314     0193                     	;# 
   315     0193                     	;# 
   316     0193                     	;# 
   317     0194                     	;# 
   318     0195                     	;# 
   319     0196                     	;# 
   320     0199                     	;# 
   321     019A                     	;# 
   322     019B                     	;# 
   323     019B                     	;# 
   324     019B                     	;# 
   325     019B                     	;# 
   326     019C                     	;# 
   327     019C                     	;# 
   328     019D                     	;# 
   329     019E                     	;# 
   330     019F                     	;# 
   331     020C                     	;# 
   332     020D                     	;# 
   333     0211                     	;# 
   334     0211                     	;# 
   335     0212                     	;# 
   336     0212                     	;# 
   337     0213                     	;# 
   338     0213                     	;# 
   339     0214                     	;# 
   340     0214                     	;# 
   341     0215                     	;# 
   342     0215                     	;# 
   343     0215                     	;# 
   344     0216                     	;# 
   345     0216                     	;# 
   346     0217                     	;# 
   347     0217                     	;# 
   348     0219                     	;# 
   349     021A                     	;# 
   350     021B                     	;# 
   351     021C                     	;# 
   352     021D                     	;# 
   353     021E                     	;# 
   354     021F                     	;# 
   355     0291                     	;# 
   356     0291                     	;# 
   357     0292                     	;# 
   358     0293                     	;# 
   359     0294                     	;# 
   360     0295                     	;# 
   361     0295                     	;# 
   362     0296                     	;# 
   363     0298                     	;# 
   364     0298                     	;# 
   365     0299                     	;# 
   366     029A                     	;# 
   367     029B                     	;# 
   368     029C                     	;# 
   369     029C                     	;# 
   370     029D                     	;# 
   371     029E                     	;# 
   372     029E                     	;# 
   373     0311                     	;# 
   374     0311                     	;# 
   375     0312                     	;# 
   376     0313                     	;# 
   377     0318                     	;# 
   378     0318                     	;# 
   379     0319                     	;# 
   380     031A                     	;# 
   381     0394                     	;# 
   382     0395                     	;# 
   383     0396                     	;# 
   384     039A                     	;# 
   385     039C                     	;# 
   386     039D                     	;# 
   387     039E                     	;# 
   388     039F                     	;# 
   389     0415                     	;# 
   390     0416                     	;# 
   391     0417                     	;# 
   392     041C                     	;# 
   393     041D                     	;# 
   394     041E                     	;# 
   395     0FE4                     	;# 
   396     0FE5                     	;# 
   397     0FE6                     	;# 
   398     0FE7                     	;# 
   399     0FE8                     	;# 
   400     0FE9                     	;# 
   401     0FEA                     	;# 
   402     0FEB                     	;# 
   403     0FED                     	;# 
   404     0FEE                     	;# 
   405     0FEF                     	;# 
   406     0000                     	;# 
   407     0001                     	;# 
   408     0002                     	;# 
   409     0003                     	;# 
   410     0004                     	;# 
   411     0005                     	;# 
   412     0006                     	;# 
   413     0007                     	;# 
   414     0008                     	;# 
   415     0009                     	;# 
   416     000A                     	;# 
   417     000B                     	;# 
   418     000C                     	;# 
   419     000D                     	;# 
   420     0011                     	;# 
   421     0012                     	;# 
   422     0013                     	;# 
   423     0014                     	;# 
   424     0015                     	;# 
   425     0016                     	;# 
   426     0016                     	;# 
   427     0017                     	;# 
   428     0018                     	;# 
   429     0019                     	;# 
   430     001A                     	;# 
   431     001B                     	;# 
   432     001C                     	;# 
   433     001E                     	;# 
   434     001F                     	;# 
   435     008C                     	;# 
   436     008D                     	;# 
   437     0091                     	;# 
   438     0092                     	;# 
   439     0093                     	;# 
   440     0094                     	;# 
   441     0095                     	;# 
   442     0096                     	;# 
   443     0097                     	;# 
   444     0098                     	;# 
   445     0099                     	;# 
   446     009A                     	;# 
   447     009B                     	;# 
   448     009B                     	;# 
   449     009C                     	;# 
   450     009D                     	;# 
   451     009E                     	;# 
   452     010C                     	;# 
   453     010D                     	;# 
   454     0111                     	;# 
   455     0112                     	;# 
   456     0113                     	;# 
   457     0114                     	;# 
   458     0115                     	;# 
   459     0116                     	;# 
   460     0117                     	;# 
   461     0118                     	;# 
   462     0119                     	;# 
   463     011A                     	;# 
   464     011B                     	;# 
   465     011D                     	;# 
   466     011E                     	;# 
   467     018C                     	;# 
   468     018D                     	;# 
   469     0191                     	;# 
   470     0191                     	;# 
   471     0192                     	;# 
   472     0193                     	;# 
   473     0193                     	;# 
   474     0193                     	;# 
   475     0194                     	;# 
   476     0195                     	;# 
   477     0196                     	;# 
   478     0199                     	;# 
   479     019A                     	;# 
   480     019B                     	;# 
   481     019B                     	;# 
   482     019B                     	;# 
   483     019B                     	;# 
   484     019C                     	;# 
   485     019C                     	;# 
   486     019D                     	;# 
   487     019E                     	;# 
   488     019F                     	;# 
   489     020C                     	;# 
   490     020D                     	;# 
   491     0211                     	;# 
   492     0211                     	;# 
   493     0212                     	;# 
   494     0212                     	;# 
   495     0213                     	;# 
   496     0213                     	;# 
   497     0214                     	;# 
   498     0214                     	;# 
   499     0215                     	;# 
   500     0215                     	;# 
   501     0215                     	;# 
   502     0216                     	;# 
   503     0216                     	;# 
   504     0217                     	;# 
   505     0217                     	;# 
   506     0219                     	;# 
   507     021A                     	;# 
   508     021B                     	;# 
   509     021C                     	;# 
   510     021D                     	;# 
   511     021E                     	;# 
   512     021F                     	;# 
   513     0291                     	;# 
   514     0291                     	;# 
   515     0292                     	;# 
   516     0293                     	;# 
   517     0294                     	;# 
   518     0295                     	;# 
   519     0295                     	;# 
   520     0296                     	;# 
   521     0298                     	;# 
   522     0298                     	;# 
   523     0299                     	;# 
   524     029A                     	;# 
   525     029B                     	;# 
   526     029C                     	;# 
   527     029C                     	;# 
   528     029D                     	;# 
   529     029E                     	;# 
   530     029E                     	;# 
   531     0311                     	;# 
   532     0311                     	;# 
   533     0312                     	;# 
   534     0313                     	;# 
   535     0318                     	;# 
   536     0318                     	;# 
   537     0319                     	;# 
   538     031A                     	;# 
   539     0394                     	;# 
   540     0395                     	;# 
   541     0396                     	;# 
   542     039A                     	;# 
   543     039C                     	;# 
   544     039D                     	;# 
   545     039E                     	;# 
   546     039F                     	;# 
   547     0415                     	;# 
   548     0416                     	;# 
   549     0417                     	;# 
   550     041C                     	;# 
   551     041D                     	;# 
   552     041E                     	;# 
   553     0FE4                     	;# 
   554     0FE5                     	;# 
   555     0FE6                     	;# 
   556     0FE7                     	;# 
   557     0FE8                     	;# 
   558     0FE9                     	;# 
   559     0FEA                     	;# 
   560     0FEB                     	;# 
   561     0FED                     	;# 
   562     0FEE                     	;# 
   563     0FEF                     	;# 
   564     0000                     	;# 
   565     0001                     	;# 
   566     0002                     	;# 
   567     0003                     	;# 
   568     0004                     	;# 
   569     0005                     	;# 
   570     0006                     	;# 
   571     0007                     	;# 
   572     0008                     	;# 
   573     0009                     	;# 
   574     000A                     	;# 
   575     000B                     	;# 
   576     000C                     	;# 
   577     000D                     	;# 
   578     0011                     	;# 
   579     0012                     	;# 
   580     0013                     	;# 
   581     0014                     	;# 
   582     0015                     	;# 
   583     0016                     	;# 
   584     0016                     	;# 
   585     0017                     	;# 
   586     0018                     	;# 
   587     0019                     	;# 
   588     001A                     	;# 
   589     001B                     	;# 
   590     001C                     	;# 
   591     001E                     	;# 
   592     001F                     	;# 
   593     008C                     	;# 
   594     008D                     	;# 
   595     0091                     	;# 
   596     0092                     	;# 
   597     0093                     	;# 
   598     0094                     	;# 
   599     0095                     	;# 
   600     0096                     	;# 
   601     0097                     	;# 
   602     0098                     	;# 
   603     0099                     	;# 
   604     009A                     	;# 
   605     009B                     	;# 
   606     009B                     	;# 
   607     009C                     	;# 
   608     009D                     	;# 
   609     009E                     	;# 
   610     010C                     	;# 
   611     010D                     	;# 
   612     0111                     	;# 
   613     0112                     	;# 
   614     0113                     	;# 
   615     0114                     	;# 
   616     0115                     	;# 
   617     0116                     	;# 
   618     0117                     	;# 
   619     0118                     	;# 
   620     0119                     	;# 
   621     011A                     	;# 
   622     011B                     	;# 
   623     011D                     	;# 
   624     011E                     	;# 
   625     018C                     	;# 
   626     018D                     	;# 
   627     0191                     	;# 
   628     0191                     	;# 
   629     0192                     	;# 
   630     0193                     	;# 
   631     0193                     	;# 
   632     0193                     	;# 
   633     0194                     	;# 
   634     0195                     	;# 
   635     0196                     	;# 
   636     0199                     	;# 
   637     019A                     	;# 
   638     019B                     	;# 
   639     019B                     	;# 
   640     019B                     	;# 
   641     019B                     	;# 
   642     019C                     	;# 
   643     019C                     	;# 
   644     019D                     	;# 
   645     019E                     	;# 
   646     019F                     	;# 
   647     020C                     	;# 
   648     020D                     	;# 
   649     0211                     	;# 
   650     0211                     	;# 
   651     0212                     	;# 
   652     0212                     	;# 
   653     0213                     	;# 
   654     0213                     	;# 
   655     0214                     	;# 
   656     0214                     	;# 
   657     0215                     	;# 
   658     0215                     	;# 
   659     0215                     	;# 
   660     0216                     	;# 
   661     0216                     	;# 
   662     0217                     	;# 
   663     0217                     	;# 
   664     0219                     	;# 
   665     021A                     	;# 
   666     021B                     	;# 
   667     021C                     	;# 
   668     021D                     	;# 
   669     021E                     	;# 
   670     021F                     	;# 
   671     0291                     	;# 
   672     0291                     	;# 
   673     0292                     	;# 
   674     0293                     	;# 
   675     0294                     	;# 
   676     0295                     	;# 
   677     0295                     	;# 
   678     0296                     	;# 
   679     0298                     	;# 
   680     0298                     	;# 
   681     0299                     	;# 
   682     029A                     	;# 
   683     029B                     	;# 
   684     029C                     	;# 
   685     029C                     	;# 
   686     029D                     	;# 
   687     029E                     	;# 
   688     029E                     	;# 
   689     0311                     	;# 
   690     0311                     	;# 
   691     0312                     	;# 
   692     0313                     	;# 
   693     0318                     	;# 
   694     0318                     	;# 
   695     0319                     	;# 
   696     031A                     	;# 
   697     0394                     	;# 
   698     0395                     	;# 
   699     0396                     	;# 
   700     039A                     	;# 
   701     039C                     	;# 
   702     039D                     	;# 
   703     039E                     	;# 
   704     039F                     	;# 
   705     0415                     	;# 
   706     0416                     	;# 
   707     0417                     	;# 
   708     041C                     	;# 
   709     041D                     	;# 
   710     041E                     	;# 
   711     0FE4                     	;# 
   712     0FE5                     	;# 
   713     0FE6                     	;# 
   714     0FE7                     	;# 
   715     0FE8                     	;# 
   716     0FE9                     	;# 
   717     0FEA                     	;# 
   718     0FEB                     	;# 
   719     0FED                     	;# 
   720     0FEE                     	;# 
   721     0FEF                     	;# 
   722     0000                     	;# 
   723     0001                     	;# 
   724     0002                     	;# 
   725     0003                     	;# 
   726     0004                     	;# 
   727     0005                     	;# 
   728     0006                     	;# 
   729     0007                     	;# 
   730     0008                     	;# 
   731     0009                     	;# 
   732     000A                     	;# 
   733     000B                     	;# 
   734     000C                     	;# 
   735     000D                     	;# 
   736     0011                     	;# 
   737     0012                     	;# 
   738     0013                     	;# 
   739     0014                     	;# 
   740     0015                     	;# 
   741     0016                     	;# 
   742     0016                     	;# 
   743     0017                     	;# 
   744     0018                     	;# 
   745     0019                     	;# 
   746     001A                     	;# 
   747     001B                     	;# 
   748     001C                     	;# 
   749     001E                     	;# 
   750     001F                     	;# 
   751     008C                     	;# 
   752     008D                     	;# 
   753     0091                     	;# 
   754     0092                     	;# 
   755     0093                     	;# 
   756     0094                     	;# 
   757     0095                     	;# 
   758     0096                     	;# 
   759     0097                     	;# 
   760     0098                     	;# 
   761     0099                     	;# 
   762     009A                     	;# 
   763     009B                     	;# 
   764     009B                     	;# 
   765     009C                     	;# 
   766     009D                     	;# 
   767     009E                     	;# 
   768     010C                     	;# 
   769     010D                     	;# 
   770     0111                     	;# 
   771     0112                     	;# 
   772     0113                     	;# 
   773     0114                     	;# 
   774     0115                     	;# 
   775     0116                     	;# 
   776     0117                     	;# 
   777     0118                     	;# 
   778     0119                     	;# 
   779     011A                     	;# 
   780     011B                     	;# 
   781     011D                     	;# 
   782     011E                     	;# 
   783     018C                     	;# 
   784     018D                     	;# 
   785     0191                     	;# 
   786     0191                     	;# 
   787     0192                     	;# 
   788     0193                     	;# 
   789     0193                     	;# 
   790     0193                     	;# 
   791     0194                     	;# 
   792     0195                     	;# 
   793     0196                     	;# 
   794     0199                     	;# 
   795     019A                     	;# 
   796     019B                     	;# 
   797     019B                     	;# 
   798     019B                     	;# 
   799     019B                     	;# 
   800     019C                     	;# 
   801     019C                     	;# 
   802     019D                     	;# 
   803     019E                     	;# 
   804     019F                     	;# 
   805     020C                     	;# 
   806     020D                     	;# 
   807     0211                     	;# 
   808     0211                     	;# 
   809     0212                     	;# 
   810     0212                     	;# 
   811     0213                     	;# 
   812     0213                     	;# 
   813     0214                     	;# 
   814     0214                     	;# 
   815     0215                     	;# 
   816     0215                     	;# 
   817     0215                     	;# 
   818     0216                     	;# 
   819     0216                     	;# 
   820     0217                     	;# 
   821     0217                     	;# 
   822     0219                     	;# 
   823     021A                     	;# 
   824     021B                     	;# 
   825     021C                     	;# 
   826     021D                     	;# 
   827     021E                     	;# 
   828     021F                     	;# 
   829     0291                     	;# 
   830     0291                     	;# 
   831     0292                     	;# 
   832     0293                     	;# 
   833     0294                     	;# 
   834     0295                     	;# 
   835     0295                     	;# 
   836     0296                     	;# 
   837     0298                     	;# 
   838     0298                     	;# 
   839     0299                     	;# 
   840     029A                     	;# 
   841     029B                     	;# 
   842     029C                     	;# 
   843     029C                     	;# 
   844     029D                     	;# 
   845     029E                     	;# 
   846     029E                     	;# 
   847     0311                     	;# 
   848     0311                     	;# 
   849     0312                     	;# 
   850     0313                     	;# 
   851     0318                     	;# 
   852     0318                     	;# 
   853     0319                     	;# 
   854     031A                     	;# 
   855     0394                     	;# 
   856     0395                     	;# 
   857     0396                     	;# 
   858     039A                     	;# 
   859     039C                     	;# 
   860     039D                     	;# 
   861     039E                     	;# 
   862     039F                     	;# 
   863     0415                     	;# 
   864     0416                     	;# 
   865     0417                     	;# 
   866     041C                     	;# 
   867     041D                     	;# 
   868     041E                     	;# 
   869     0FE4                     	;# 
   870     0FE5                     	;# 
   871     0FE6                     	;# 
   872     0FE7                     	;# 
   873     0FE8                     	;# 
   874     0FE9                     	;# 
   875     0FEA                     	;# 
   876     0FEB                     	;# 
   877     0FED                     	;# 
   878     0FEE                     	;# 
   879     0FEF                     	;# 
   880     0000                     	;# 
   881     0001                     	;# 
   882     0002                     	;# 
   883     0003                     	;# 
   884     0004                     	;# 
   885     0005                     	;# 
   886     0006                     	;# 
   887     0007                     	;# 
   888     0008                     	;# 
   889     0009                     	;# 
   890     000A                     	;# 
   891     000B                     	;# 
   892     000C                     	;# 
   893     000D                     	;# 
   894     0011                     	;# 
   895     0012                     	;# 
   896     0013                     	;# 
   897     0014                     	;# 
   898     0015                     	;# 
   899     0016                     	;# 
   900     0016                     	;# 
   901     0017                     	;# 
   902     0018                     	;# 
   903     0019                     	;# 
   904     001A                     	;# 
   905     001B                     	;# 
   906     001C                     	;# 
   907     001E                     	;# 
   908     001F                     	;# 
   909     008C                     	;# 
   910     008D                     	;# 
   911     0091                     	;# 
   912     0092                     	;# 
   913     0093                     	;# 
   914     0094                     	;# 
   915     0095                     	;# 
   916     0096                     	;# 
   917     0097                     	;# 
   918     0098                     	;# 
   919     0099                     	;# 
   920     009A                     	;# 
   921     009B                     	;# 
   922     009B                     	;# 
   923     009C                     	;# 
   924     009D                     	;# 
   925     009E                     	;# 
   926     010C                     	;# 
   927     010D                     	;# 
   928     0111                     	;# 
   929     0112                     	;# 
   930     0113                     	;# 
   931     0114                     	;# 
   932     0115                     	;# 
   933     0116                     	;# 
   934     0117                     	;# 
   935     0118                     	;# 
   936     0119                     	;# 
   937     011A                     	;# 
   938     011B                     	;# 
   939     011D                     	;# 
   940     011E                     	;# 
   941     018C                     	;# 
   942     018D                     	;# 
   943     0191                     	;# 
   944     0191                     	;# 
   945     0192                     	;# 
   946     0193                     	;# 
   947     0193                     	;# 
   948     0193                     	;# 
   949     0194                     	;# 
   950     0195                     	;# 
   951     0196                     	;# 
   952     0199                     	;# 
   953     019A                     	;# 
   954     019B                     	;# 
   955     019B                     	;# 
   956     019B                     	;# 
   957     019B                     	;# 
   958     019C                     	;# 
   959     019C                     	;# 
   960     019D                     	;# 
   961     019E                     	;# 
   962     019F                     	;# 
   963     020C                     	;# 
   964     020D                     	;# 
   965     0211                     	;# 
   966     0211                     	;# 
   967     0212                     	;# 
   968     0212                     	;# 
   969     0213                     	;# 
   970     0213                     	;# 
   971     0214                     	;# 
   972     0214                     	;# 
   973     0215                     	;# 
   974     0215                     	;# 
   975     0215                     	;# 
   976     0216                     	;# 
   977     0216                     	;# 
   978     0217                     	;# 
   979     0217                     	;# 
   980     0219                     	;# 
   981     021A                     	;# 
   982     021B                     	;# 
   983     021C                     	;# 
   984     021D                     	;# 
   985     021E                     	;# 
   986     021F                     	;# 
   987     0291                     	;# 
   988     0291                     	;# 
   989     0292                     	;# 
   990     0293                     	;# 
   991     0294                     	;# 
   992     0295                     	;# 
   993     0295                     	;# 
   994     0296                     	;# 
   995     0298                     	;# 
   996     0298                     	;# 
   997     0299                     	;# 
   998     029A                     	;# 
   999     029B                     	;# 
  1000     029C                     	;# 
  1001     029C                     	;# 
  1002     029D                     	;# 
  1003     029E                     	;# 
  1004     029E                     	;# 
  1005     0311                     	;# 
  1006     0311                     	;# 
  1007     0312                     	;# 
  1008     0313                     	;# 
  1009     0318                     	;# 
  1010     0318                     	;# 
  1011     0319                     	;# 
  1012     031A                     	;# 
  1013     0394                     	;# 
  1014     0395                     	;# 
  1015     0396                     	;# 
  1016     039A                     	;# 
  1017     039C                     	;# 
  1018     039D                     	;# 
  1019     039E                     	;# 
  1020     039F                     	;# 
  1021     0415                     	;# 
  1022     0416                     	;# 
  1023     0417                     	;# 
  1024     041C                     	;# 
  1025     041D                     	;# 
  1026     041E                     	;# 
  1027     0FE4                     	;# 
  1028     0FE5                     	;# 
  1029     0FE6                     	;# 
  1030     0FE7                     	;# 
  1031     0FE8                     	;# 
  1032     0FE9                     	;# 
  1033     0FEA                     	;# 
  1034     0FEB                     	;# 
  1035     0FED                     	;# 
  1036     0FEE                     	;# 
  1037     0FEF                     	;# 
  1038     0000                     	;# 
  1039     0001                     	;# 
  1040     0002                     	;# 
  1041     0003                     	;# 
  1042     0004                     	;# 
  1043     0005                     	;# 
  1044     0006                     	;# 
  1045     0007                     	;# 
  1046     0008                     	;# 
  1047     0009                     	;# 
  1048     000A                     	;# 
  1049     000B                     	;# 
  1050     000C                     	;# 
  1051     000D                     	;# 
  1052     0011                     	;# 
  1053     0012                     	;# 
  1054     0013                     	;# 
  1055     0014                     	;# 
  1056     0015                     	;# 
  1057     0016                     	;# 
  1058     0016                     	;# 
  1059     0017                     	;# 
  1060     0018                     	;# 
  1061     0019                     	;# 
  1062     001A                     	;# 
  1063     001B                     	;# 
  1064     001C                     	;# 
  1065     001E                     	;# 
  1066     001F                     	;# 
  1067     008C                     	;# 
  1068     008D                     	;# 
  1069     0091                     	;# 
  1070     0092                     	;# 
  1071     0093                     	;# 
  1072     0094                     	;# 
  1073     0095                     	;# 
  1074     0096                     	;# 
  1075     0097                     	;# 
  1076     0098                     	;# 
  1077     0099                     	;# 
  1078     009A                     	;# 
  1079     009B                     	;# 
  1080     009B                     	;# 
  1081     009C                     	;# 
  1082     009D                     	;# 
  1083     009E                     	;# 
  1084     010C                     	;# 
  1085     010D                     	;# 
  1086     0111                     	;# 
  1087     0112                     	;# 
  1088     0113                     	;# 
  1089     0114                     	;# 
  1090     0115                     	;# 
  1091     0116                     	;# 
  1092     0117                     	;# 
  1093     0118                     	;# 
  1094     0119                     	;# 
  1095     011A                     	;# 
  1096     011B                     	;# 
  1097     011D                     	;# 
  1098     011E                     	;# 
  1099     018C                     	;# 
  1100     018D                     	;# 
  1101     0191                     	;# 
  1102     0191                     	;# 
  1103     0192                     	;# 
  1104     0193                     	;# 
  1105     0193                     	;# 
  1106     0193                     	;# 
  1107     0194                     	;# 
  1108     0195                     	;# 
  1109     0196                     	;# 
  1110     0199                     	;# 
  1111     019A                     	;# 
  1112     019B                     	;# 
  1113     019B                     	;# 
  1114     019B                     	;# 
  1115     019B                     	;# 
  1116     019C                     	;# 
  1117     019C                     	;# 
  1118     019D                     	;# 
  1119     019E                     	;# 
  1120     019F                     	;# 
  1121     020C                     	;# 
  1122     020D                     	;# 
  1123     0211                     	;# 
  1124     0211                     	;# 
  1125     0212                     	;# 
  1126     0212                     	;# 
  1127     0213                     	;# 
  1128     0213                     	;# 
  1129     0214                     	;# 
  1130     0214                     	;# 
  1131     0215                     	;# 
  1132     0215                     	;# 
  1133     0215                     	;# 
  1134     0216                     	;# 
  1135     0216                     	;# 
  1136     0217                     	;# 
  1137     0217                     	;# 
  1138     0219                     	;# 
  1139     021A                     	;# 
  1140     021B                     	;# 
  1141     021C                     	;# 
  1142     021D                     	;# 
  1143     021E                     	;# 
  1144     021F                     	;# 
  1145     0291                     	;# 
  1146     0291                     	;# 
  1147     0292                     	;# 
  1148     0293                     	;# 
  1149     0294                     	;# 
  1150     0295                     	;# 
  1151     0295                     	;# 
  1152     0296                     	;# 
  1153     0298                     	;# 
  1154     0298                     	;# 
  1155     0299                     	;# 
  1156     029A                     	;# 
  1157     029B                     	;# 
  1158     029C                     	;# 
  1159     029C                     	;# 
  1160     029D                     	;# 
  1161     029E                     	;# 
  1162     029E                     	;# 
  1163     0311                     	;# 
  1164     0311                     	;# 
  1165     0312                     	;# 
  1166     0313                     	;# 
  1167     0318                     	;# 
  1168     0318                     	;# 
  1169     0319                     	;# 
  1170     031A                     	;# 
  1171     0394                     	;# 
  1172     0395                     	;# 
  1173     0396                     	;# 
  1174     039A                     	;# 
  1175     039C                     	;# 
  1176     039D                     	;# 
  1177     039E                     	;# 
  1178     039F                     	;# 
  1179     0415                     	;# 
  1180     0416                     	;# 
  1181     0417                     	;# 
  1182     041C                     	;# 
  1183     041D                     	;# 
  1184     041E                     	;# 
  1185     0FE4                     	;# 
  1186     0FE5                     	;# 
  1187     0FE6                     	;# 
  1188     0FE7                     	;# 
  1189     0FE8                     	;# 
  1190     0FE9                     	;# 
  1191     0FEA                     	;# 
  1192     0FEB                     	;# 
  1193     0FED                     	;# 
  1194     0FEE                     	;# 
  1195     0FEF                     	;# 
  1196     0000                     	;# 
  1197     0001                     	;# 
  1198     0002                     	;# 
  1199     0003                     	;# 
  1200     0004                     	;# 
  1201     0005                     	;# 
  1202     0006                     	;# 
  1203     0007                     	;# 
  1204     0008                     	;# 
  1205     0009                     	;# 
  1206     000A                     	;# 
  1207     000B                     	;# 
  1208     000C                     	;# 
  1209     000D                     	;# 
  1210     0011                     	;# 
  1211     0012                     	;# 
  1212     0013                     	;# 
  1213     0014                     	;# 
  1214     0015                     	;# 
  1215     0016                     	;# 
  1216     0016                     	;# 
  1217     0017                     	;# 
  1218     0018                     	;# 
  1219     0019                     	;# 
  1220     001A                     	;# 
  1221     001B                     	;# 
  1222     001C                     	;# 
  1223     001E                     	;# 
  1224     001F                     	;# 
  1225     008C                     	;# 
  1226     008D                     	;# 
  1227     0091                     	;# 
  1228     0092                     	;# 
  1229     0093                     	;# 
  1230     0094                     	;# 
  1231     0095                     	;# 
  1232     0096                     	;# 
  1233     0097                     	;# 
  1234     0098                     	;# 
  1235     0099                     	;# 
  1236     009A                     	;# 
  1237     009B                     	;# 
  1238     009B                     	;# 
  1239     009C                     	;# 
  1240     009D                     	;# 
  1241     009E                     	;# 
  1242     010C                     	;# 
  1243     010D                     	;# 
  1244     0111                     	;# 
  1245     0112                     	;# 
  1246     0113                     	;# 
  1247     0114                     	;# 
  1248     0115                     	;# 
  1249     0116                     	;# 
  1250     0117                     	;# 
  1251     0118                     	;# 
  1252     0119                     	;# 
  1253     011A                     	;# 
  1254     011B                     	;# 
  1255     011D                     	;# 
  1256     011E                     	;# 
  1257     018C                     	;# 
  1258     018D                     	;# 
  1259     0191                     	;# 
  1260     0191                     	;# 
  1261     0192                     	;# 
  1262     0193                     	;# 
  1263     0193                     	;# 
  1264     0193                     	;# 
  1265     0194                     	;# 
  1266     0195                     	;# 
  1267     0196                     	;# 
  1268     0199                     	;# 
  1269     019A                     	;# 
  1270     019B                     	;# 
  1271     019B                     	;# 
  1272     019B                     	;# 
  1273     019B                     	;# 
  1274     019C                     	;# 
  1275     019C                     	;# 
  1276     019D                     	;# 
  1277     019E                     	;# 
  1278     019F                     	;# 
  1279     020C                     	;# 
  1280     020D                     	;# 
  1281     0211                     	;# 
  1282     0211                     	;# 
  1283     0212                     	;# 
  1284     0212                     	;# 
  1285     0213                     	;# 
  1286     0213                     	;# 
  1287     0214                     	;# 
  1288     0214                     	;# 
  1289     0215                     	;# 
  1290     0215                     	;# 
  1291     0215                     	;# 
  1292     0216                     	;# 
  1293     0216                     	;# 
  1294     0217                     	;# 
  1295     0217                     	;# 
  1296     0219                     	;# 
  1297     021A                     	;# 
  1298     021B                     	;# 
  1299     021C                     	;# 
  1300     021D                     	;# 
  1301     021E                     	;# 
  1302     021F                     	;# 
  1303     0291                     	;# 
  1304     0291                     	;# 
  1305     0292                     	;# 
  1306     0293                     	;# 
  1307     0294                     	;# 
  1308     0295                     	;# 
  1309     0295                     	;# 
  1310     0296                     	;# 
  1311     0298                     	;# 
  1312     0298                     	;# 
  1313     0299                     	;# 
  1314     029A                     	;# 
  1315     029B                     	;# 
  1316     029C                     	;# 
  1317     029C                     	;# 
  1318     029D                     	;# 
  1319     029E                     	;# 
  1320     029E                     	;# 
  1321     0311                     	;# 
  1322     0311                     	;# 
  1323     0312                     	;# 
  1324     0313                     	;# 
  1325     0318                     	;# 
  1326     0318                     	;# 
  1327     0319                     	;# 
  1328     031A                     	;# 
  1329     0394                     	;# 
  1330     0395                     	;# 
  1331     0396                     	;# 
  1332     039A                     	;# 
  1333     039C                     	;# 
  1334     039D                     	;# 
  1335     039E                     	;# 
  1336     039F                     	;# 
  1337     0415                     	;# 
  1338     0416                     	;# 
  1339     0417                     	;# 
  1340     041C                     	;# 
  1341     041D                     	;# 
  1342     041E                     	;# 
  1343     0FE4                     	;# 
  1344     0FE5                     	;# 
  1345     0FE6                     	;# 
  1346     0FE7                     	;# 
  1347     0FE8                     	;# 
  1348     0FE9                     	;# 
  1349     0FEA                     	;# 
  1350     0FEB                     	;# 
  1351     0FED                     	;# 
  1352     0FEE                     	;# 
  1353     0FEF                     	;# 
  1354     0000                     	;# 
  1355     0001                     	;# 
  1356     0002                     	;# 
  1357     0003                     	;# 
  1358     0004                     	;# 
  1359     0005                     	;# 
  1360     0006                     	;# 
  1361     0007                     	;# 
  1362     0008                     	;# 
  1363     0009                     	;# 
  1364     000A                     	;# 
  1365     000B                     	;# 
  1366     000C                     	;# 
  1367     000D                     	;# 
  1368     0011                     	;# 
  1369     0012                     	;# 
  1370     0013                     	;# 
  1371     0014                     	;# 
  1372     0015                     	;# 
  1373     0016                     	;# 
  1374     0016                     	;# 
  1375     0017                     	;# 
  1376     0018                     	;# 
  1377     0019                     	;# 
  1378     001A                     	;# 
  1379     001B                     	;# 
  1380     001C                     	;# 
  1381     001E                     	;# 
  1382     001F                     	;# 
  1383     008C                     	;# 
  1384     008D                     	;# 
  1385     0091                     	;# 
  1386     0092                     	;# 
  1387     0093                     	;# 
  1388     0094                     	;# 
  1389     0095                     	;# 
  1390     0096                     	;# 
  1391     0097                     	;# 
  1392     0098                     	;# 
  1393     0099                     	;# 
  1394     009A                     	;# 
  1395     009B                     	;# 
  1396     009B                     	;# 
  1397     009C                     	;# 
  1398     009D                     	;# 
  1399     009E                     	;# 
  1400     010C                     	;# 
  1401     010D                     	;# 
  1402     0111                     	;# 
  1403     0112                     	;# 
  1404     0113                     	;# 
  1405     0114                     	;# 
  1406     0115                     	;# 
  1407     0116                     	;# 
  1408     0117                     	;# 
  1409     0118                     	;# 
  1410     0119                     	;# 
  1411     011A                     	;# 
  1412     011B                     	;# 
  1413     011D                     	;# 
  1414     011E                     	;# 
  1415     018C                     	;# 
  1416     018D                     	;# 
  1417     0191                     	;# 
  1418     0191                     	;# 
  1419     0192                     	;# 
  1420     0193                     	;# 
  1421     0193                     	;# 
  1422     0193                     	;# 
  1423     0194                     	;# 
  1424     0195                     	;# 
  1425     0196                     	;# 
  1426     0199                     	;# 
  1427     019A                     	;# 
  1428     019B                     	;# 
  1429     019B                     	;# 
  1430     019B                     	;# 
  1431     019B                     	;# 
  1432     019C                     	;# 
  1433     019C                     	;# 
  1434     019D                     	;# 
  1435     019E                     	;# 
  1436     019F                     	;# 
  1437     020C                     	;# 
  1438     020D                     	;# 
  1439     0211                     	;# 
  1440     0211                     	;# 
  1441     0212                     	;# 
  1442     0212                     	;# 
  1443     0213                     	;# 
  1444     0213                     	;# 
  1445     0214                     	;# 
  1446     0214                     	;# 
  1447     0215                     	;# 
  1448     0215                     	;# 
  1449     0215                     	;# 
  1450     0216                     	;# 
  1451     0216                     	;# 
  1452     0217                     	;# 
  1453     0217                     	;# 
  1454     0219                     	;# 
  1455     021A                     	;# 
  1456     021B                     	;# 
  1457     021C                     	;# 
  1458     021D                     	;# 
  1459     021E                     	;# 
  1460     021F                     	;# 
  1461     0291                     	;# 
  1462     0291                     	;# 
  1463     0292                     	;# 
  1464     0293                     	;# 
  1465     0294                     	;# 
  1466     0295                     	;# 
  1467     0295                     	;# 
  1468     0296                     	;# 
  1469     0298                     	;# 
  1470     0298                     	;# 
  1471     0299                     	;# 
  1472     029A                     	;# 
  1473     029B                     	;# 
  1474     029C                     	;# 
  1475     029C                     	;# 
  1476     029D                     	;# 
  1477     029E                     	;# 
  1478     029E                     	;# 
  1479     0311                     	;# 
  1480     0311                     	;# 
  1481     0312                     	;# 
  1482     0313                     	;# 
  1483     0318                     	;# 
  1484     0318                     	;# 
  1485     0319                     	;# 
  1486     031A                     	;# 
  1487     0394                     	;# 
  1488     0395                     	;# 
  1489     0396                     	;# 
  1490     039A                     	;# 
  1491     039C                     	;# 
  1492     039D                     	;# 
  1493     039E                     	;# 
  1494     039F                     	;# 
  1495     0415                     	;# 
  1496     0416                     	;# 
  1497     0417                     	;# 
  1498     041C                     	;# 
  1499     041D                     	;# 
  1500     041E                     	;# 
  1501     0FE4                     	;# 
  1502     0FE5                     	;# 
  1503     0FE6                     	;# 
  1504     0FE7                     	;# 
  1505     0FE8                     	;# 
  1506     0FE9                     	;# 
  1507     0FEA                     	;# 
  1508     0FEB                     	;# 
  1509     0FED                     	;# 
  1510     0FEE                     	;# 
  1511     0FEF                     	;# 
  1512     0000                     	;# 
  1513     0001                     	;# 
  1514     0002                     	;# 
  1515     0003                     	;# 
  1516     0004                     	;# 
  1517     0005                     	;# 
  1518     0006                     	;# 
  1519     0007                     	;# 
  1520     0008                     	;# 
  1521     0009                     	;# 
  1522     000A                     	;# 
  1523     000B                     	;# 
  1524     000C                     	;# 
  1525     000D                     	;# 
  1526     0011                     	;# 
  1527     0012                     	;# 
  1528     0013                     	;# 
  1529     0014                     	;# 
  1530     0015                     	;# 
  1531     0016                     	;# 
  1532     0016                     	;# 
  1533     0017                     	;# 
  1534     0018                     	;# 
  1535     0019                     	;# 
  1536     001A                     	;# 
  1537     001B                     	;# 
  1538     001C                     	;# 
  1539     001E                     	;# 
  1540     001F                     	;# 
  1541     008C                     	;# 
  1542     008D                     	;# 
  1543     0091                     	;# 
  1544     0092                     	;# 
  1545     0093                     	;# 
  1546     0094                     	;# 
  1547     0095                     	;# 
  1548     0096                     	;# 
  1549     0097                     	;# 
  1550     0098                     	;# 
  1551     0099                     	;# 
  1552     009A                     	;# 
  1553     009B                     	;# 
  1554     009B                     	;# 
  1555     009C                     	;# 
  1556     009D                     	;# 
  1557     009E                     	;# 
  1558     010C                     	;# 
  1559     010D                     	;# 
  1560     0111                     	;# 
  1561     0112                     	;# 
  1562     0113                     	;# 
  1563     0114                     	;# 
  1564     0115                     	;# 
  1565     0116                     	;# 
  1566     0117                     	;# 
  1567     0118                     	;# 
  1568     0119                     	;# 
  1569     011A                     	;# 
  1570     011B                     	;# 
  1571     011D                     	;# 
  1572     011E                     	;# 
  1573     018C                     	;# 
  1574     018D                     	;# 
  1575     0191                     	;# 
  1576     0191                     	;# 
  1577     0192                     	;# 
  1578     0193                     	;# 
  1579     0193                     	;# 
  1580     0193                     	;# 
  1581     0194                     	;# 
  1582     0195                     	;# 
  1583     0196                     	;# 
  1584     0199                     	;# 
  1585     019A                     	;# 
  1586     019B                     	;# 
  1587     019B                     	;# 
  1588     019B                     	;# 
  1589     019B                     	;# 
  1590     019C                     	;# 
  1591     019C                     	;# 
  1592     019D                     	;# 
  1593     019E                     	;# 
  1594     019F                     	;# 
  1595     020C                     	;# 
  1596     020D                     	;# 
  1597     0211                     	;# 
  1598     0211                     	;# 
  1599     0212                     	;# 
  1600     0212                     	;# 
  1601     0213                     	;# 
  1602     0213                     	;# 
  1603     0214                     	;# 
  1604     0214                     	;# 
  1605     0215                     	;# 
  1606     0215                     	;# 
  1607     0215                     	;# 
  1608     0216                     	;# 
  1609     0216                     	;# 
  1610     0217                     	;# 
  1611     0217                     	;# 
  1612     0219                     	;# 
  1613     021A                     	;# 
  1614     021B                     	;# 
  1615     021C                     	;# 
  1616     021D                     	;# 
  1617     021E                     	;# 
  1618     021F                     	;# 
  1619     0291                     	;# 
  1620     0291                     	;# 
  1621     0292                     	;# 
  1622     0293                     	;# 
  1623     0294                     	;# 
  1624     0295                     	;# 
  1625     0295                     	;# 
  1626     0296                     	;# 
  1627     0298                     	;# 
  1628     0298                     	;# 
  1629     0299                     	;# 
  1630     029A                     	;# 
  1631     029B                     	;# 
  1632     029C                     	;# 
  1633     029C                     	;# 
  1634     029D                     	;# 
  1635     029E                     	;# 
  1636     029E                     	;# 
  1637     0311                     	;# 
  1638     0311                     	;# 
  1639     0312                     	;# 
  1640     0313                     	;# 
  1641     0318                     	;# 
  1642     0318                     	;# 
  1643     0319                     	;# 
  1644     031A                     	;# 
  1645     0394                     	;# 
  1646     0395                     	;# 
  1647     0396                     	;# 
  1648     039A                     	;# 
  1649     039C                     	;# 
  1650     039D                     	;# 
  1651     039E                     	;# 
  1652     039F                     	;# 
  1653     0415                     	;# 
  1654     0416                     	;# 
  1655     0417                     	;# 
  1656     041C                     	;# 
  1657     041D                     	;# 
  1658     041E                     	;# 
  1659     0FE4                     	;# 
  1660     0FE5                     	;# 
  1661     0FE6                     	;# 
  1662     0FE7                     	;# 
  1663     0FE8                     	;# 
  1664     0FE9                     	;# 
  1665     0FEA                     	;# 
  1666     0FEB                     	;# 
  1667     0FED                     	;# 
  1668     0FEE                     	;# 
  1669     0FEF                     	;# 
  1670     0000                     	;# 
  1671     0001                     	;# 
  1672     0002                     	;# 
  1673     0003                     	;# 
  1674     0004                     	;# 
  1675     0005                     	;# 
  1676     0006                     	;# 
  1677     0007                     	;# 
  1678     0008                     	;# 
  1679     0009                     	;# 
  1680     000A                     	;# 
  1681     000B                     	;# 
  1682     000C                     	;# 
  1683     000D                     	;# 
  1684     0011                     	;# 
  1685     0012                     	;# 
  1686     0013                     	;# 
  1687     0014                     	;# 
  1688     0015                     	;# 
  1689     0016                     	;# 
  1690     0016                     	;# 
  1691     0017                     	;# 
  1692     0018                     	;# 
  1693     0019                     	;# 
  1694     001A                     	;# 
  1695     001B                     	;# 
  1696     001C                     	;# 
  1697     001E                     	;# 
  1698     001F                     	;# 
  1699     008C                     	;# 
  1700     008D                     	;# 
  1701     0091                     	;# 
  1702     0092                     	;# 
  1703     0093                     	;# 
  1704     0094                     	;# 
  1705     0095                     	;# 
  1706     0096                     	;# 
  1707     0097                     	;# 
  1708     0098                     	;# 
  1709     0099                     	;# 
  1710     009A                     	;# 
  1711     009B                     	;# 
  1712     009B                     	;# 
  1713     009C                     	;# 
  1714     009D                     	;# 
  1715     009E                     	;# 
  1716     010C                     	;# 
  1717     010D                     	;# 
  1718     0111                     	;# 
  1719     0112                     	;# 
  1720     0113                     	;# 
  1721     0114                     	;# 
  1722     0115                     	;# 
  1723     0116                     	;# 
  1724     0117                     	;# 
  1725     0118                     	;# 
  1726     0119                     	;# 
  1727     011A                     	;# 
  1728     011B                     	;# 
  1729     011D                     	;# 
  1730     011E                     	;# 
  1731     018C                     	;# 
  1732     018D                     	;# 
  1733     0191                     	;# 
  1734     0191                     	;# 
  1735     0192                     	;# 
  1736     0193                     	;# 
  1737     0193                     	;# 
  1738     0193                     	;# 
  1739     0194                     	;# 
  1740     0195                     	;# 
  1741     0196                     	;# 
  1742     0199                     	;# 
  1743     019A                     	;# 
  1744     019B                     	;# 
  1745     019B                     	;# 
  1746     019B                     	;# 
  1747     019B                     	;# 
  1748     019C                     	;# 
  1749     019C                     	;# 
  1750     019D                     	;# 
  1751     019E                     	;# 
  1752     019F                     	;# 
  1753     020C                     	;# 
  1754     020D                     	;# 
  1755     0211                     	;# 
  1756     0211                     	;# 
  1757     0212                     	;# 
  1758     0212                     	;# 
  1759     0213                     	;# 
  1760     0213                     	;# 
  1761     0214                     	;# 
  1762     0214                     	;# 
  1763     0215                     	;# 
  1764     0215                     	;# 
  1765     0215                     	;# 
  1766     0216                     	;# 
  1767     0216                     	;# 
  1768     0217                     	;# 
  1769     0217                     	;# 
  1770     0219                     	;# 
  1771     021A                     	;# 
  1772     021B                     	;# 
  1773     021C                     	;# 
  1774     021D                     	;# 
  1775     021E                     	;# 
  1776     021F                     	;# 
  1777     0291                     	;# 
  1778     0291                     	;# 
  1779     0292                     	;# 
  1780     0293                     	;# 
  1781     0294                     	;# 
  1782     0295                     	;# 
  1783     0295                     	;# 
  1784     0296                     	;# 
  1785     0298                     	;# 
  1786     0298                     	;# 
  1787     0299                     	;# 
  1788     029A                     	;# 
  1789     029B                     	;# 
  1790     029C                     	;# 
  1791     029C                     	;# 
  1792     029D                     	;# 
  1793     029E                     	;# 
  1794     029E                     	;# 
  1795     0311                     	;# 
  1796     0311                     	;# 
  1797     0312                     	;# 
  1798     0313                     	;# 
  1799     0318                     	;# 
  1800     0318                     	;# 
  1801     0319                     	;# 
  1802     031A                     	;# 
  1803     0394                     	;# 
  1804     0395                     	;# 
  1805     0396                     	;# 
  1806     039A                     	;# 
  1807     039C                     	;# 
  1808     039D                     	;# 
  1809     039E                     	;# 
  1810     039F                     	;# 
  1811     0415                     	;# 
  1812     0416                     	;# 
  1813     0417                     	;# 
  1814     041C                     	;# 
  1815     041D                     	;# 
  1816     041E                     	;# 
  1817     0FE4                     	;# 
  1818     0FE5                     	;# 
  1819     0FE6                     	;# 
  1820     0FE7                     	;# 
  1821     0FE8                     	;# 
  1822     0FE9                     	;# 
  1823     0FEA                     	;# 
  1824     0FEB                     	;# 
  1825     0FED                     	;# 
  1826     0FEE                     	;# 
  1827     0FEF                     	;# 
  1828                           
  1829 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  1830     0000                     
  1831 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  1832     0000                     
  1833 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  1834     0000                     
  1835                           	psect	idataBANK1
  1836     0EF7                     __pidataBANK1:
  1837                           
  1838                           ;initializer for _mapping
  1839     0EF7  340B               	retlw	11
  1840     0EF8  340F               	retlw	15
  1841     0EF9  3403               	retlw	3
  1842     0EFA  3404               	retlw	4
  1843     0EFB  3405               	retlw	5
  1844     0EFC  3401               	retlw	1
  1845     0EFD  340D               	retlw	13
  1846     0EFE  340C               	retlw	12
  1847                           
  1848                           	psect	stringtext1
  1849     0800                     __pstringtext1:
  1850     0800                     _de_sigmoidValues:
  1851     0800  3440               	retlw	64
  1852     0801  3432               	retlw	50
  1853     0802  341B               	retlw	27
  1854     0803  340C               	retlw	12
  1855     0804  3405               	retlw	5
  1856     0805  3402               	retlw	2
  1857     0806  3401               	retlw	1
  1858     0807  3400               	retlw	0
  1859     0808  3400               	retlw	0
  1860     0809  3400               	retlw	0
  1861     080A  3401               	retlw	1
  1862     080B  3402               	retlw	2
  1863     080C  3405               	retlw	5
  1864     080D  340C               	retlw	12
  1865     080E  341B               	retlw	27
  1866     080F  3432               	retlw	50
  1867     0810                     __end_of_de_sigmoidValues:
  1868                           
  1869                           	psect	stringtext2
  1870     0810                     __pstringtext2:
  1871     0810                     _sigmoidValues:
  1872     0810  3480               	retlw	128
  1873     0811  34BA               	retlw	186
  1874     0812  34E1               	retlw	225
  1875     0813  34F3               	retlw	243
  1876     0814  34FA               	retlw	250
  1877     0815  34FD               	retlw	253
  1878     0816  34FE               	retlw	254
  1879     0817  34FF               	retlw	255
  1880     0818  3400               	retlw	0
  1881     0819  3400               	retlw	0
  1882     081A  3401               	retlw	1
  1883     081B  3402               	retlw	2
  1884     081C  3405               	retlw	5
  1885     081D  340C               	retlw	12
  1886     081E  341E               	retlw	30
  1887     081F  3445               	retlw	69
  1888     0820                     __end_of_sigmoidValues:
  1889                           
  1890                           	psect	stringtext3
  1891     0820                     __pstringtext3:
  1892     0820                     _spi1_configuration:
  1893     0820  3402               	retlw	2
  1894     0821  3440               	retlw	64
  1895     0822  3401               	retlw	1
  1896     0823  3400               	retlw	0
  1897     0824                     __end_of_spi1_configuration:
  1898                           
  1899                           	psect	nvBANK0
  1900     006D                     __pnvBANK0:
  1901     006D                     _EUSART_FramingErrorHandler:
  1902     006D                     	ds	2
  1903                           
  1904                           	psect	nvBANK1
  1905     00E8                     __pnvBANK1:
  1906     00E8                     _EUSART_ErrorHandler:
  1907     00E8                     	ds	2
  1908     00EA                     _EUSART_OverrunErrorHandler:
  1909     00EA                     	ds	2
  1910     0011                     _PIR1bits	set	17
  1911     000B                     _INTCONbits	set	11
  1912     008C                     _TRISAbits	set	140
  1913     0097                     _WDTCON	set	151
  1914     0098                     _OSCTUNE	set	152
  1915     0099                     _OSCCON	set	153
  1916     008D                     _TRISBbits	set	141
  1917     0095                     _OPTION_REGbits	set	149
  1918     008D                     _TRISB	set	141
  1919     008C                     _TRISA	set	140
  1920     010D                     _LATBbits	set	269
  1921     010C                     _LATAbits	set	268
  1922     0116                     _BORCON	set	278
  1923     011E                     _APFCON1	set	286
  1924     011D                     _APFCON0	set	285
  1925     010D                     _LATB	set	269
  1926     010C                     _LATA	set	268
  1927     018C                     _ANSELA	set	396
  1928     018D                     _ANSELB	set	397
  1929     019A                     _TXREG	set	410
  1930     0199                     _RCREG	set	409
  1931     019D                     _RCSTAbits	set	413
  1932     019E                     _TXSTAbits	set	414
  1933     019C                     _SPBRGH	set	412
  1934     019B                     _SPBRGL	set	411
  1935     019E                     _TXSTA	set	414
  1936     019D                     _RCSTA	set	413
  1937     019F                     _BAUDCON	set	415
  1938     0196                     _EECON2	set	406
  1939     0193                     _EEDATL	set	403
  1940     0194                     _EEDATH	set	404
  1941     0195                     _EECON1bits	set	405
  1942     0192                     _EEADRH	set	402
  1943     0191                     _EEADRL	set	401
  1944     0211                     _SSP1BUF	set	529
  1945     0216                     _SSP1CON2	set	534
  1946     0215                     _SSP1CON1bits	set	533
  1947     0212                     _SSP1ADD	set	530
  1948     0215                     _SSP1CON1	set	533
  1949     0214                     _SSP1STAT	set	532
  1950     020C                     _WPUA	set	524
  1951     020D                     _WPUB	set	525
  1952                           
  1953                           	psect	cinit
  1954     07D9                     start_initialization:	
  1955                           ; #config settings
  1956                           
  1957     07D9                     __initialization:
  1958                           
  1959                           ; Initialize objects allocated to BANK1
  1960     07D9  30F7               	movlw	low __pidataBANK1
  1961     07DA  0084               	movwf	4
  1962     07DB  308E               	movlw	(high __pidataBANK1)| (0+128)
  1963     07DC  0085               	movwf	5
  1964     07DD  30E0               	movlw	low __pdataBANK1
  1965     07DE  0086               	movwf	6
  1966     07DF  3000               	movlw	high __pdataBANK1
  1967     07E0  0087               	movwf	7
  1968     07E1  3008               	movlw	8
  1969     07E2  318E  26EA  3187   	fcall	init_ram
  1970                           
  1971                           ; Clear objects allocated to BANK0
  1972     07E5  304B               	movlw	low __pbssBANK0
  1973     07E6  0084               	movwf	4
  1974     07E7  3000               	movlw	high __pbssBANK0
  1975     07E8  0085               	movwf	5
  1976     07E9  3022               	movlw	34
  1977     07EA  318E  26E4  3187   	fcall	clear_ram0
  1978                           
  1979                           ; Clear objects allocated to BANK1
  1980     07ED  30A0               	movlw	low __pbssBANK1
  1981     07EE  0084               	movwf	4
  1982     07EF  3000               	movlw	high __pbssBANK1
  1983     07F0  0085               	movwf	5
  1984     07F1  3040               	movlw	64
  1985     07F2  318E  26E4  3187   	fcall	clear_ram0
  1986                           
  1987                           ; Clear objects allocated to BANK2
  1988     07F5  3020               	movlw	low __pbssBANK2
  1989     07F6  0084               	movwf	4
  1990     07F7  3001               	movlw	high __pbssBANK2
  1991     07F8  0085               	movwf	5
  1992     07F9  3050               	movlw	80
  1993     07FA  318E  26E4  3187   	fcall	clear_ram0
  1994     07FD                     end_of_initialization:	
  1995                           ;End of C runtime variable initialization code
  1996                           
  1997     07FD                     __end_of__initialization:
  1998     07FD  0020               	movlb	0
  1999     07FE  3182  2A86         	ljmp	_main	;jump to C main() function
  2000                           
  2001                           	psect	bssBANK0
  2002     004B                     __pbssBANK0:
  2003     004B                     _Z2:
  2004     004B                     	ds	4
  2005     004F                     _Z1:
  2006     004F                     	ds	4
  2007     0053                     _B2:
  2008     0053                     	ds	4
  2009     0057                     _B1:
  2010     0057                     	ds	4
  2011     005B                     _Y2:
  2012     005B                     	ds	4
  2013     005F                     _Y1:
  2014     005F                     	ds	4
  2015     0063                     _remainingMoves:
  2016     0063                     	ds	1
  2017     0064                     _foodPosition:
  2018     0064                     	ds	1
  2019     0065                     _headPosition:
  2020     0065                     	ds	1
  2021     0066                     _choice:
  2022     0066                     	ds	1
  2023     0067                     _snakeSize:
  2024     0067                     	ds	1
  2025     0068                     _eusartRxLastError:
  2026     0068                     	ds	1
  2027     0069                     _seed:
  2028     0069                     	ds	4
  2029                           
  2030                           	psect	bssBANK1
  2031     00A0                     __pbssBANK1:
  2032     00A0                     _W2:
  2033     00A0                     	ds	16
  2034     00B0                     _matrix:
  2035     00B0                     	ds	8
  2036     00B8                     _DB2:
  2037     00B8                     	ds	4
  2038     00BC                     _DB1:
  2039     00BC                     	ds	4
  2040     00C0                     _DY1:
  2041     00C0                     	ds	4
  2042     00C4                     _DY2:
  2043     00C4                     	ds	4
  2044     00C8                     _field:
  2045     00C8                     	ds	16
  2046     00D8                     _Y0:
  2047     00D8                     	ds	8
  2048                           
  2049                           	psect	dataBANK1
  2050     00E0                     __pdataBANK1:
  2051     00E0                     _mapping:
  2052     00E0                     	ds	8
  2053                           
  2054                           	psect	bssBANK2
  2055     0120                     __pbssBANK2:
  2056     0120                     _DW1:
  2057     0120                     	ds	32
  2058     0140                     _W1:
  2059     0140                     	ds	32
  2060     0160                     _DW2:
  2061     0160                     	ds	16
  2062                           
  2063                           	psect	inittext
  2064     0EEA                     init_ram:
  2065     0EEA  00FE               	movwf	btemp
  2066     0EEB                     initloop:
  2067     0EEB  0012               	moviw fsr0++
  2068     0EEC  001E               	movwi fsr1++
  2069     0EED  0BFE               	decfsz	btemp,f
  2070     0EEE  2EEB               	goto	initloop
  2071     0EEF  3400               	retlw	0
  2072                           
  2073                           	psect	clrtext
  2074     0EE4                     clear_ram0:	
  2075                           ;	Called with FSR0 containing the base address, and
  2076                           ;	WREG with the size to clear
  2077                           
  2078     0EE4  0064               	clrwdt	;clear the watchdog before getting into this loop
  2079     0EE5                     clrloop0:
  2080     0EE5  0180               	clrf	0	;clear RAM location pointed to by FSR
  2081     0EE6  3101               	addfsr 0,1
  2082     0EE7  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2083     0EE8  2EE5               	goto	clrloop0	;have we reached the end yet?
  2084     0EE9  3400               	retlw	0	;all done for this memory range, return
  2085                           
  2086                           	psect	cstackCOMMON
  2087     0070                     __pcstackCOMMON:
  2088     0070                     ?_EUSART_SetFramingErrorHandler:
  2089     0070                     ?_EUSART_SetOverrunErrorHandler:	
  2090                           ; 1 bytes @ 0x0
  2091                           
  2092     0070                     ?_EUSART_SetErrorHandler:	
  2093                           ; 1 bytes @ 0x0
  2094                           
  2095     0070                     ?_OSCILLATOR_Initialize:	
  2096                           ; 1 bytes @ 0x0
  2097                           
  2098     0070                     ??_OSCILLATOR_Initialize:	
  2099                           ; 1 bytes @ 0x0
  2100                           
  2101     0070                     ?_WDT_Initialize:	
  2102                           ; 1 bytes @ 0x0
  2103                           
  2104     0070                     ??_WDT_Initialize:	
  2105                           ; 1 bytes @ 0x0
  2106                           
  2107     0070                     ?_snake_initiate:	
  2108                           ; 1 bytes @ 0x0
  2109                           
  2110     0070                     ?_ai_initiate:	
  2111                           ; 1 bytes @ 0x0
  2112                           
  2113     0070                     ?_initMAX7219:	
  2114                           ; 1 bytes @ 0x0
  2115                           
  2116     0070                     ?_snake_getField:	
  2117                           ; 1 bytes @ 0x0
  2118                           
  2119     0070                     ??_snake_getField:	
  2120                           ; 1 bytes @ 0x0
  2121                           
  2122     0070                     ?_ledClear:	
  2123                           ; 1 bytes @ 0x0
  2124                           
  2125     0070                     ?_snake_getFoodPosition:	
  2126                           ; 1 bytes @ 0x0
  2127                           
  2128     0070                     ??_snake_getFoodPosition:	
  2129                           ; 1 bytes @ 0x0
  2130                           
  2131     0070                     ?_sendMatrix:	
  2132                           ; 1 bytes @ 0x0
  2133                           
  2134     0070                     ?_snake_getSurroundings:	
  2135                           ; 1 bytes @ 0x0
  2136                           
  2137     0070                     ?_ai_getInputField:	
  2138                           ; 1 bytes @ 0x0
  2139                           
  2140     0070                     ??_ai_getInputField:	
  2141                           ; 1 bytes @ 0x0
  2142                           
  2143     0070                     ?_ai_propagate:	
  2144                           ; 1 bytes @ 0x0
  2145                           
  2146     0070                     ?_snake_move:	
  2147                           ; 1 bytes @ 0x0
  2148                           
  2149     0070                     ?_ai_run:	
  2150                           ; 1 bytes @ 0x0
  2151                           
  2152     0070                     ?_sigmoid:	
  2153                           ; 1 bytes @ 0x0
  2154                           
  2155     0070                     ??_sigmoid:	
  2156                           ; 1 bytes @ 0x0
  2157                           
  2158     0070                     ?_de_sigmoid:	
  2159                           ; 1 bytes @ 0x0
  2160                           
  2161     0070                     ??_de_sigmoid:	
  2162                           ; 1 bytes @ 0x0
  2163                           
  2164     0070                     ?_EUSART_Initialize:	
  2165                           ; 1 bytes @ 0x0
  2166                           
  2167     0070                     ?_PIN_MANAGER_Initialize:	
  2168                           ; 1 bytes @ 0x0
  2169                           
  2170     0070                     ??_PIN_MANAGER_Initialize:	
  2171                           ; 1 bytes @ 0x0
  2172                           
  2173     0070                     ?_SPI1_Initialize:	
  2174                           ; 1 bytes @ 0x0
  2175                           
  2176     0070                     ??_SPI1_Initialize:	
  2177                           ; 1 bytes @ 0x0
  2178                           
  2179     0070                     ?_SPI1_WriteByte:	
  2180                           ; 1 bytes @ 0x0
  2181                           
  2182     0070                     ??_SPI1_WriteByte:	
  2183                           ; 1 bytes @ 0x0
  2184                           
  2185     0070                     ?_SYSTEM_Initialize:	
  2186                           ; 1 bytes @ 0x0
  2187                           
  2188     0070                     ?_deactivateElevator:	
  2189                           ; 1 bytes @ 0x0
  2190                           
  2191     0070                     ??_deactivateElevator:	
  2192                           ; 1 bytes @ 0x0
  2193                           
  2194     0070                     ?_main:	
  2195                           ; 1 bytes @ 0x0
  2196                           
  2197     0070                     ?___wmul:	
  2198                           ; 1 bytes @ 0x0
  2199                           
  2200     0070                     ?___lmul:	
  2201                           ; 2 bytes @ 0x0
  2202                           
  2203     0070                     SPI1_WriteByte@byte:	
  2204                           ; 4 bytes @ 0x0
  2205                           
  2206     0070                     ledClear@c:	
  2207                           ; 1 bytes @ 0x0
  2208                           
  2209     0070                     EUSART_SetFramingErrorHandler@interruptHandler:	
  2210                           ; 1 bytes @ 0x0
  2211                           
  2212     0070                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  2213                           ; 2 bytes @ 0x0
  2214                           
  2215     0070                     EUSART_SetErrorHandler@interruptHandler:	
  2216                           ; 2 bytes @ 0x0
  2217                           
  2218     0070                     ___wmul@multiplier:	
  2219                           ; 2 bytes @ 0x0
  2220                           
  2221     0070                     ___lmul@multiplier:	
  2222                           ; 2 bytes @ 0x0
  2223                           
  2224                           
  2225                           ; 4 bytes @ 0x0
  2226     0070                     	ds	1
  2227     0071                     ??_ledClear:
  2228     0071                     ?_txMAX7219:	
  2229                           ; 1 bytes @ 0x1
  2230                           
  2231     0071                     txMAX7219@dat0:	
  2232                           ; 1 bytes @ 0x1
  2233                           
  2234     0071                     sigmoid@z:	
  2235                           ; 1 bytes @ 0x1
  2236                           
  2237     0071                     de_sigmoid@z:	
  2238                           ; 1 bytes @ 0x1
  2239                           
  2240                           
  2241                           ; 1 bytes @ 0x1
  2242     0071                     	ds	1
  2243     0072                     ??_EUSART_SetFramingErrorHandler:
  2244     0072                     ??_EUSART_SetOverrunErrorHandler:	
  2245                           ; 1 bytes @ 0x2
  2246                           
  2247     0072                     ??_EUSART_SetErrorHandler:	
  2248                           ; 1 bytes @ 0x2
  2249                           
  2250     0072                     ??_EUSART_Initialize:	
  2251                           ; 1 bytes @ 0x2
  2252                           
  2253     0072                     ??_SYSTEM_Initialize:	
  2254                           ; 1 bytes @ 0x2
  2255                           
  2256     0072                     ??_txMAX7219:	
  2257                           ; 1 bytes @ 0x2
  2258                           
  2259     0072                     txMAX7219@addr0:	
  2260                           ; 1 bytes @ 0x2
  2261                           
  2262     0072                     ___wmul@multiplicand:	
  2263                           ; 1 bytes @ 0x2
  2264                           
  2265                           
  2266                           ; 2 bytes @ 0x2
  2267     0072                     	ds	1
  2268     0073                     ??_initMAX7219:
  2269     0073                     ??_sendMatrix:	
  2270                           ; 1 bytes @ 0x3
  2271                           
  2272     0073                     ledClear@l:	
  2273                           ; 1 bytes @ 0x3
  2274                           
  2275                           
  2276                           ; 1 bytes @ 0x3
  2277     0073                     	ds	1
  2278     0074                     ??___wmul:
  2279     0074                     sendMatrix@b:	
  2280                           ; 1 bytes @ 0x4
  2281                           
  2282     0074                     ___wmul@product:	
  2283                           ; 1 bytes @ 0x4
  2284                           
  2285     0074                     ___lmul@multiplicand:	
  2286                           ; 2 bytes @ 0x4
  2287                           
  2288                           
  2289                           ; 4 bytes @ 0x4
  2290     0074                     	ds	1
  2291     0075                     sendMatrix@nb:
  2292                           
  2293                           ; 1 bytes @ 0x5
  2294     0075                     	ds	1
  2295     0076                     ?___awdiv:
  2296     0076                     sendMatrix@j:	
  2297                           ; 2 bytes @ 0x6
  2298                           
  2299     0076                     ___awdiv@divisor:	
  2300                           ; 1 bytes @ 0x6
  2301                           
  2302                           
  2303                           ; 2 bytes @ 0x6
  2304     0076                     	ds	1
  2305     0077                     sendMatrix@i:
  2306                           
  2307                           ; 1 bytes @ 0x7
  2308     0077                     	ds	1
  2309     0078                     ??___lmul:
  2310     0078                     ___awdiv@dividend:	
  2311                           ; 1 bytes @ 0x8
  2312                           
  2313     0078                     ___lmul@product:	
  2314                           ; 2 bytes @ 0x8
  2315                           
  2316                           
  2317                           ; 4 bytes @ 0x8
  2318     0078                     	ds	2
  2319     007A                     ??___awdiv:
  2320                           
  2321                           ; 1 bytes @ 0xA
  2322     007A                     	ds	1
  2323     007B                     ??_ledSet:
  2324     007B                     ??_snake_getSurroundings:	
  2325                           ; 1 bytes @ 0xB
  2326                           
  2327     007B                     ??_ai_run:	
  2328                           ; 1 bytes @ 0xB
  2329                           
  2330                           
  2331                           ; 1 bytes @ 0xB
  2332     007B                     	ds	1
  2333     007C                     ?_rand:
  2334                           
  2335                           ; 2 bytes @ 0xC
  2336     007C                     	ds	1
  2337     007D                     ledSet@l:
  2338                           
  2339                           ; 1 bytes @ 0xD
  2340     007D                     	ds	1
  2341                           
  2342                           	psect	cstackBANK0
  2343     0020                     __pcstackBANK0:
  2344     0020                     ??_rand:
  2345     0020                     ___awdiv@counter:	
  2346                           ; 1 bytes @ 0x0
  2347                           
  2348                           
  2349                           ; 1 bytes @ 0x0
  2350     0020                     	ds	1
  2351     0021                     ___awdiv@sign:
  2352                           
  2353                           ; 1 bytes @ 0x1
  2354     0021                     	ds	1
  2355     0022                     ___awdiv@quotient:
  2356                           
  2357                           ; 2 bytes @ 0x2
  2358     0022                     	ds	2
  2359     0024                     ??_snake_initiate:
  2360     0024                     ??_ai_initiate:	
  2361                           ; 1 bytes @ 0x4
  2362                           
  2363     0024                     ?_ledSet:	
  2364                           ; 1 bytes @ 0x4
  2365                           
  2366     0024                     ??_ai_propagate:	
  2367                           ; 1 bytes @ 0x4
  2368                           
  2369     0024                     ledSet@c:	
  2370                           ; 1 bytes @ 0x4
  2371                           
  2372     0024                     snake_getSurroundings@p:	
  2373                           ; 1 bytes @ 0x4
  2374                           
  2375     0024                     ai_run@i:	
  2376                           ; 1 bytes @ 0x4
  2377                           
  2378                           
  2379                           ; 1 bytes @ 0x4
  2380     0024                     	ds	1
  2381     0025                     snake_initiate@i:
  2382     0025                     snake_getSurroundings@lf:	
  2383                           ; 1 bytes @ 0x5
  2384                           
  2385     0025                     ai_run@i_874:	
  2386                           ; 1 bytes @ 0x5
  2387                           
  2388                           
  2389                           ; 1 bytes @ 0x5
  2390     0025                     	ds	1
  2391     0026                     ??_snake_move:
  2392     0026                     snake_getSurroundings@cf:	
  2393                           ; 1 bytes @ 0x6
  2394                           
  2395     0026                     ai_run@i_876:	
  2396                           ; 1 bytes @ 0x6
  2397                           
  2398                           
  2399                           ; 1 bytes @ 0x6
  2400     0026                     	ds	1
  2401     0027                     snake_getSurroundings@i:
  2402     0027                     ai_initiate@i:	
  2403                           ; 1 bytes @ 0x7
  2404                           
  2405     0027                     ai_run@i_877:	
  2406                           ; 1 bytes @ 0x7
  2407                           
  2408                           
  2409                           ; 1 bytes @ 0x7
  2410     0027                     	ds	1
  2411     0028                     snake_move@direction:
  2412     0028                     snake_getSurroundings@lh:	
  2413                           ; 1 bytes @ 0x8
  2414                           
  2415     0028                     ai_initiate@i_868:	
  2416                           ; 1 bytes @ 0x8
  2417                           
  2418     0028                     ai_run@z:	
  2419                           ; 1 bytes @ 0x8
  2420                           
  2421                           
  2422                           ; 2 bytes @ 0x8
  2423     0028                     	ds	1
  2424     0029                     snake_move@incentive:
  2425     0029                     snake_getSurroundings@ch:	
  2426                           ; 1 bytes @ 0x9
  2427                           
  2428     0029                     ai_initiate@j:	
  2429                           ; 1 bytes @ 0x9
  2430                           
  2431                           
  2432                           ; 1 bytes @ 0x9
  2433     0029                     	ds	1
  2434     002A                     snake_move@i:
  2435     002A                     snake_getSurroundings@i_795:	
  2436                           ; 1 bytes @ 0xA
  2437                           
  2438     002A                     ai_initiate@j_867:	
  2439                           ; 1 bytes @ 0xA
  2440                           
  2441     002A                     ai_run@j:	
  2442                           ; 1 bytes @ 0xA
  2443                           
  2444                           
  2445                           ; 1 bytes @ 0xA
  2446     002A                     	ds	1
  2447     002B                     snake_getSurroundings@surroundings:
  2448     002B                     ai_run@j_875:	
  2449                           ; 1 bytes @ 0xB
  2450                           
  2451                           
  2452                           ; 1 bytes @ 0xB
  2453     002B                     	ds	1
  2454     002C                     ai_propagate@S:
  2455                           
  2456                           ; 4 bytes @ 0xC
  2457     002C                     	ds	4
  2458     0030                     ai_propagate@incentive:
  2459                           
  2460                           ; 1 bytes @ 0x10
  2461     0030                     	ds	1
  2462     0031                     ai_propagate@i:
  2463                           
  2464                           ; 1 bytes @ 0x11
  2465     0031                     	ds	1
  2466     0032                     ai_propagate@i_882:
  2467                           
  2468                           ; 1 bytes @ 0x12
  2469     0032                     	ds	1
  2470     0033                     ai_propagate@i_884:
  2471                           
  2472                           ; 1 bytes @ 0x13
  2473     0033                     	ds	1
  2474     0034                     ai_propagate@i_886:
  2475                           
  2476                           ; 1 bytes @ 0x14
  2477     0034                     	ds	1
  2478     0035                     ai_propagate@i_891:
  2479                           
  2480                           ; 1 bytes @ 0x15
  2481     0035                     	ds	1
  2482     0036                     ai_propagate@i_893:
  2483                           
  2484                           ; 1 bytes @ 0x16
  2485     0036                     	ds	1
  2486     0037                     ai_propagate@i_895:
  2487                           
  2488                           ; 1 bytes @ 0x17
  2489     0037                     	ds	1
  2490     0038                     ai_propagate@j:
  2491                           
  2492                           ; 1 bytes @ 0x18
  2493     0038                     	ds	1
  2494     0039                     ai_propagate@i_889:
  2495                           
  2496                           ; 1 bytes @ 0x19
  2497     0039                     	ds	1
  2498     003A                     ai_propagate@j_890:
  2499                           
  2500                           ; 1 bytes @ 0x1A
  2501     003A                     	ds	1
  2502     003B                     ai_propagate@j_892:
  2503                           
  2504                           ; 1 bytes @ 0x1B
  2505     003B                     	ds	1
  2506     003C                     ai_propagate@j_894:
  2507                           
  2508                           ; 1 bytes @ 0x1C
  2509     003C                     	ds	1
  2510     003D                     ai_propagate@j_885:
  2511                           
  2512                           ; 1 bytes @ 0x1D
  2513     003D                     	ds	1
  2514     003E                     ai_propagate@j_888:
  2515                           
  2516                           ; 1 bytes @ 0x1E
  2517     003E                     	ds	1
  2518     003F                     ai_propagate@dz:
  2519                           
  2520                           ; 2 bytes @ 0x1F
  2521     003F                     	ds	2
  2522     0041                     ??_main:
  2523                           
  2524                           ; 1 bytes @ 0x21
  2525     0041                     	ds	3
  2526     0044                     main@field:
  2527                           
  2528                           ; 1 bytes @ 0x24
  2529     0044                     	ds	1
  2530     0045                     main@foodPosition:
  2531                           
  2532                           ; 1 bytes @ 0x25
  2533     0045                     	ds	1
  2534     0046                     main@foodPosition_664:
  2535                           
  2536                           ; 1 bytes @ 0x26
  2537     0046                     	ds	1
  2538     0047                     main@i:
  2539                           
  2540                           ; 1 bytes @ 0x27
  2541     0047                     	ds	1
  2542     0048                     main@j:
  2543                           
  2544                           ; 1 bytes @ 0x28
  2545     0048                     	ds	1
  2546     0049                     main@i_662:
  2547                           
  2548                           ; 1 bytes @ 0x29
  2549     0049                     	ds	1
  2550     004A                     main@j_663:
  2551                           
  2552                           ; 1 bytes @ 0x2A
  2553     004A                     	ds	1
  2554                           
  2555                           	psect	maintext
  2556     0286                     __pmaintext:	
  2557 ;;
  2558 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  2559 ;;
  2560 ;; *************** function _main *****************
  2561 ;; Defined at:
  2562 ;;		line 67 in file "main.c"
  2563 ;; Parameters:    Size  Location     Type
  2564 ;;		None
  2565 ;; Auto vars:     Size  Location     Type
  2566 ;;  j               1   42[BANK0 ] unsigned char 
  2567 ;;  j               1   40[BANK0 ] unsigned char 
  2568 ;;  i               1   41[BANK0 ] unsigned char 
  2569 ;;  foodPosition    1   38[BANK0 ] unsigned char 
  2570 ;;  i               1   39[BANK0 ] unsigned char 
  2571 ;;  foodPosition    1   37[BANK0 ] unsigned char 
  2572 ;;  field           1   36[BANK0 ] PTR unsigned char 
  2573 ;;		 -> field(16), 
  2574 ;; Return value:  Size  Location     Type
  2575 ;;                  1    wreg      void 
  2576 ;; Registers used:
  2577 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2578 ;; Tracked objects:
  2579 ;;		On entry : B1F/0
  2580 ;;		On exit  : 0/0
  2581 ;;		Unchanged: 0/0
  2582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2583 ;;      Params:         0       0       0       0       0       0
  2584 ;;      Locals:         0       7       0       0       0       0
  2585 ;;      Temps:          0       3       0       0       0       0
  2586 ;;      Totals:         0      10       0       0       0       0
  2587 ;;Total ram usage:       10 bytes
  2588 ;; Hardware stack levels required when called: 4
  2589 ;; This function calls:
  2590 ;;		_SYSTEM_Initialize
  2591 ;;		___awdiv
  2592 ;;		_ai_getInputField
  2593 ;;		_ai_initiate
  2594 ;;		_ai_propagate
  2595 ;;		_ai_run
  2596 ;;		_deactivateElevator
  2597 ;;		_initMAX7219
  2598 ;;		_ledClear
  2599 ;;		_ledSet
  2600 ;;		_sendMatrix
  2601 ;;		_snake_getField
  2602 ;;		_snake_getFoodPosition
  2603 ;;		_snake_getSurroundings
  2604 ;;		_snake_initiate
  2605 ;;		_snake_move
  2606 ;; This function is called by:
  2607 ;;		Startup code after reset
  2608 ;; This function uses a non-reentrant model
  2609 ;;
  2610                           
  2611     0286                     _main:	
  2612                           ;psect for function _main
  2613                           
  2614     0286                     l3127:	
  2615                           ;incstack = 0
  2616                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2617                           
  2618                           
  2619                           ;main.c: 70:     SYSTEM_Initialize();
  2620     0286  318F  270B  3182   	fcall	_SYSTEM_Initialize
  2621     0289                     l3129:
  2622                           
  2623                           ;main.c: 87:     deactivateElevator();
  2624     0289  3180  2006  3182   	fcall	_deactivateElevator
  2625     028C                     l3131:
  2626                           
  2627                           ;main.c: 88:     snake_initiate();
  2628     028C  3180  207B  3182   	fcall	_snake_initiate
  2629     028F                     l3133:
  2630                           
  2631                           ;main.c: 89:     ai_initiate();
  2632     028F  3181  2151  3182   	fcall	_ai_initiate
  2633     0292                     l3135:
  2634                           
  2635                           ;main.c: 90:     initMAX7219();
  2636     0292  3180  20B3  3182   	fcall	_initMAX7219
  2637     0295                     l3137:
  2638                           
  2639                           ;main.c: 103:     uint8_t* field = snake_getField();
  2640     0295  3180  2004  3182   	fcall	_snake_getField
  2641     0298  0020               	movlb	0	; select bank0
  2642     0299  00C4               	movwf	main@field
  2643     029A                     l3139:
  2644                           
  2645                           ;main.c: 105:     for(uint8_t i = 0; i < 4; i++){
  2646     029A  01C7               	clrf	main@i
  2647     029B                     l3145:
  2648                           
  2649                           ;main.c: 106:         for(uint8_t j = 0; j < 4; j++){
  2650     029B  01C8               	clrf	main@j
  2651     029C                     l3151:
  2652                           
  2653                           ;main.c: 107:             if(field[i+j*4]>0){
  2654     029C  0848               	movf	main@j,w
  2655     029D  00C1               	movwf	??_main
  2656     029E  3001               	movlw	1
  2657     029F                     u2255:
  2658     029F  35C1               	lslf	??_main,f
  2659     02A0  3EFF               	addlw	-1
  2660     02A1  1D03               	skipz
  2661     02A2  2A9F               	goto	u2255
  2662     02A3  3541               	lslf	??_main,w
  2663     02A4  0744               	addwf	main@field,w
  2664     02A5  00C2               	movwf	??_main+1
  2665     02A6  0847               	movf	main@i,w
  2666     02A7  0742               	addwf	??_main+1,w
  2667     02A8  00C3               	movwf	??_main+2
  2668     02A9  0843               	movf	??_main+2,w
  2669     02AA  0086               	movwf	6
  2670     02AB  0187               	clrf	7
  2671     02AC  0801               	movf	1,w
  2672     02AD  1903               	btfsc	3,2
  2673     02AE  2AB0               	goto	u2261
  2674     02AF  2AB1               	goto	u2260
  2675     02B0                     u2261:
  2676     02B0  2AB8               	goto	l3155
  2677     02B1                     u2260:
  2678     02B1                     l3153:
  2679                           
  2680                           ;main.c: 108:                 ledSet(i,j);
  2681     02B1  0848               	movf	main@j,w
  2682     02B2  00A4               	movwf	ledSet@c
  2683     02B3  0847               	movf	main@i,w
  2684     02B4  318F  274D  3182   	fcall	_ledSet
  2685                           
  2686                           ;main.c: 109:             } else{
  2687     02B7  2ABE               	goto	l3157
  2688     02B8                     l3155:
  2689                           
  2690                           ;main.c: 110:                 ledClear(i,j);
  2691     02B8  0848               	movf	main@j,w
  2692     02B9  00F0               	movwf	ledClear@c
  2693     02BA  0847               	movf	main@i,w
  2694     02BB  318F  273B  3182   	fcall	_ledClear
  2695     02BE                     l3157:
  2696                           
  2697                           ;main.c: 112:         }
  2698     02BE  3001               	movlw	1
  2699     02BF  0020               	movlb	0	; select bank0
  2700     02C0  00C1               	movwf	??_main
  2701     02C1  0841               	movf	??_main,w
  2702     02C2  07C8               	addwf	main@j,f
  2703     02C3                     l3159:
  2704     02C3  3004               	movlw	4
  2705     02C4  0248               	subwf	main@j,w
  2706     02C5  1C03               	skipc
  2707     02C6  2AC8               	goto	u2271
  2708     02C7  2AC9               	goto	u2270
  2709     02C8                     u2271:
  2710     02C8  2A9C               	goto	l3151
  2711     02C9                     u2270:
  2712     02C9                     l3161:
  2713                           
  2714                           ;main.c: 113:     }
  2715     02C9  3001               	movlw	1
  2716     02CA  00C1               	movwf	??_main
  2717     02CB  0841               	movf	??_main,w
  2718     02CC  07C7               	addwf	main@i,f
  2719     02CD                     l3163:
  2720     02CD  3004               	movlw	4
  2721     02CE  0247               	subwf	main@i,w
  2722     02CF  1C03               	skipc
  2723     02D0  2AD2               	goto	u2281
  2724     02D1  2AD3               	goto	u2280
  2725     02D2                     u2281:
  2726     02D2  2A9B               	goto	l3145
  2727     02D3                     u2280:
  2728     02D3                     l3165:
  2729                           
  2730                           ;main.c: 115:     uint8_t foodPosition = snake_getFoodPosition();
  2731     02D3  318E  26C6  3182   	fcall	_snake_getFoodPosition
  2732     02D6  0020               	movlb	0	; select bank0
  2733     02D7  00C5               	movwf	main@foodPosition
  2734     02D8                     l3167:
  2735                           
  2736                           ;main.c: 116:     ledSet(foodPosition%4, foodPosition/4);
  2737     02D8  3004               	movlw	4
  2738     02D9  00F6               	movwf	___awdiv@divisor
  2739     02DA  3000               	movlw	0
  2740     02DB  00F7               	movwf	___awdiv@divisor+1
  2741     02DC  0845               	movf	main@foodPosition,w
  2742     02DD  00C1               	movwf	??_main
  2743     02DE  01C2               	clrf	??_main+1
  2744     02DF  0841               	movf	??_main,w
  2745     02E0  00F8               	movwf	___awdiv@dividend
  2746     02E1  0842               	movf	??_main+1,w
  2747     02E2  00F9               	movwf	___awdiv@dividend+1
  2748     02E3  3180  20F1  3182   	fcall	___awdiv
  2749     02E6  0876               	movf	?___awdiv,w
  2750     02E7  0020               	movlb	0	; select bank0
  2751     02E8  00A4               	movwf	ledSet@c
  2752     02E9  0845               	movf	main@foodPosition,w
  2753     02EA  3903               	andlw	3
  2754     02EB  318F  274D  3182   	fcall	_ledSet
  2755     02EE                     l3169:
  2756                           
  2757                           ;main.c: 117:     sendMatrix();
  2758     02EE  318F  27D2  3182   	fcall	_sendMatrix
  2759     02F1                     l3171:
  2760                           
  2761                           ;main.c: 120:     {;main.c: 123:         snake_getSurroundings(ai_getInputField());
  2762     02F1  318E  26C4  3182   	fcall	_ai_getInputField
  2763     02F4  3181  21BE  3182   	fcall	_snake_getSurroundings
  2764     02F7                     l3173:
  2765                           
  2766                           ;main.c: 124:         ai_propagate(snake_move(ai_run()));
  2767     02F7  3184  2431  3182   	fcall	_ai_run
  2768     02FA  3183  2358  3182   	fcall	_snake_move
  2769     02FD  3185  254E  3182   	fcall	_ai_propagate
  2770     0300                     l3175:
  2771                           
  2772                           ;main.c: 125:         for(uint8_t i = 0; i < 4; i++){
  2773     0300  0020               	movlb	0	; select bank0
  2774     0301  01C9               	clrf	main@i_662
  2775     0302                     l3181:
  2776                           
  2777                           ;main.c: 126:             for(uint8_t j = 0; j < 4; j++){
  2778     0302  01CA               	clrf	main@j_663
  2779     0303                     l3187:
  2780                           
  2781                           ;main.c: 127:                 if(field[i+j*4]>0){
  2782     0303  084A               	movf	main@j_663,w
  2783     0304  00C1               	movwf	??_main
  2784     0305  3001               	movlw	1
  2785     0306                     u2295:
  2786     0306  35C1               	lslf	??_main,f
  2787     0307  3EFF               	addlw	-1
  2788     0308  1D03               	skipz
  2789     0309  2B06               	goto	u2295
  2790     030A  3541               	lslf	??_main,w
  2791     030B  0744               	addwf	main@field,w
  2792     030C  00C2               	movwf	??_main+1
  2793     030D  0849               	movf	main@i_662,w
  2794     030E  0742               	addwf	??_main+1,w
  2795     030F  00C3               	movwf	??_main+2
  2796     0310  0843               	movf	??_main+2,w
  2797     0311  0086               	movwf	6
  2798     0312  0187               	clrf	7
  2799     0313  0801               	movf	1,w
  2800     0314  1903               	btfsc	3,2
  2801     0315  2B17               	goto	u2301
  2802     0316  2B18               	goto	u2300
  2803     0317                     u2301:
  2804     0317  2B1F               	goto	l3191
  2805     0318                     u2300:
  2806     0318                     l3189:
  2807                           
  2808                           ;main.c: 128:                     ledSet(i,j);
  2809     0318  084A               	movf	main@j_663,w
  2810     0319  00A4               	movwf	ledSet@c
  2811     031A  0849               	movf	main@i_662,w
  2812     031B  318F  274D  3182   	fcall	_ledSet
  2813                           
  2814                           ;main.c: 129:                 } else{
  2815     031E  2B25               	goto	l3193
  2816     031F                     l3191:
  2817                           
  2818                           ;main.c: 130:                     ledClear(i,j);
  2819     031F  084A               	movf	main@j_663,w
  2820     0320  00F0               	movwf	ledClear@c
  2821     0321  0849               	movf	main@i_662,w
  2822     0322  318F  273B  3182   	fcall	_ledClear
  2823     0325                     l3193:
  2824                           
  2825                           ;main.c: 132:             }
  2826     0325  3001               	movlw	1
  2827     0326  0020               	movlb	0	; select bank0
  2828     0327  00C1               	movwf	??_main
  2829     0328  0841               	movf	??_main,w
  2830     0329  07CA               	addwf	main@j_663,f
  2831     032A                     l3195:
  2832     032A  3004               	movlw	4
  2833     032B  024A               	subwf	main@j_663,w
  2834     032C  1C03               	skipc
  2835     032D  2B2F               	goto	u2311
  2836     032E  2B30               	goto	u2310
  2837     032F                     u2311:
  2838     032F  2B03               	goto	l3187
  2839     0330                     u2310:
  2840     0330                     l3197:
  2841                           
  2842                           ;main.c: 133:         }
  2843     0330  3001               	movlw	1
  2844     0331  00C1               	movwf	??_main
  2845     0332  0841               	movf	??_main,w
  2846     0333  07C9               	addwf	main@i_662,f
  2847     0334                     l3199:
  2848     0334  3004               	movlw	4
  2849     0335  0249               	subwf	main@i_662,w
  2850     0336  1C03               	skipc
  2851     0337  2B39               	goto	u2321
  2852     0338  2B3A               	goto	u2320
  2853     0339                     u2321:
  2854     0339  2B02               	goto	l3181
  2855     033A                     u2320:
  2856     033A                     l3201:
  2857                           
  2858                           ;main.c: 134:         uint8_t foodPosition = snake_getFoodPosition();
  2859     033A  318E  26C6  3182   	fcall	_snake_getFoodPosition
  2860     033D  0020               	movlb	0	; select bank0
  2861     033E  00C6               	movwf	main@foodPosition_664
  2862     033F                     l3203:
  2863                           
  2864                           ;main.c: 135:         ledSet(foodPosition%4, foodPosition/4);
  2865     033F  3004               	movlw	4
  2866     0340  00F6               	movwf	___awdiv@divisor
  2867     0341  3000               	movlw	0
  2868     0342  00F7               	movwf	___awdiv@divisor+1
  2869     0343  0846               	movf	main@foodPosition_664,w
  2870     0344  00C1               	movwf	??_main
  2871     0345  01C2               	clrf	??_main+1
  2872     0346  0841               	movf	??_main,w
  2873     0347  00F8               	movwf	___awdiv@dividend
  2874     0348  0842               	movf	??_main+1,w
  2875     0349  00F9               	movwf	___awdiv@dividend+1
  2876     034A  3180  20F1  3182   	fcall	___awdiv
  2877     034D  0876               	movf	?___awdiv,w
  2878     034E  0020               	movlb	0	; select bank0
  2879     034F  00A4               	movwf	ledSet@c
  2880     0350  0846               	movf	main@foodPosition_664,w
  2881     0351  3903               	andlw	3
  2882     0352  318F  274D  3182   	fcall	_ledSet
  2883     0355  2AEE               	goto	l3169
  2884     0356  3180  2802         	ljmp	start
  2885     0358                     __end_of_main:
  2886                           
  2887                           	psect	text1
  2888     0358                     __ptext1:	
  2889 ;; *************** function _snake_move *****************
  2890 ;; Defined at:
  2891 ;;		line 32 in file "snake.c"
  2892 ;; Parameters:    Size  Location     Type
  2893 ;;  direction       1    wreg     unsigned char 
  2894 ;; Auto vars:     Size  Location     Type
  2895 ;;  direction       1    8[BANK0 ] unsigned char 
  2896 ;;  i               1   10[BANK0 ] unsigned char 
  2897 ;;  incentive       1    9[BANK0 ] char 
  2898 ;; Return value:  Size  Location     Type
  2899 ;;                  1    wreg      char 
  2900 ;; Registers used:
  2901 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2902 ;; Tracked objects:
  2903 ;;		On entry : 0/0
  2904 ;;		On exit  : 0/0
  2905 ;;		Unchanged: 0/0
  2906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2907 ;;      Params:         0       0       0       0       0       0
  2908 ;;      Locals:         0       3       0       0       0       0
  2909 ;;      Temps:          0       2       0       0       0       0
  2910 ;;      Totals:         0       5       0       0       0       0
  2911 ;;Total ram usage:        5 bytes
  2912 ;; Hardware stack levels used: 1
  2913 ;; Hardware stack levels required when called: 3
  2914 ;; This function calls:
  2915 ;;		___awdiv
  2916 ;;		_rand
  2917 ;;		_snake_initiate
  2918 ;; This function is called by:
  2919 ;;		_main
  2920 ;; This function uses a non-reentrant model
  2921 ;;
  2922                           
  2923     0358                     _snake_move:	
  2924                           ;psect for function _snake_move
  2925                           
  2926                           
  2927                           ;incstack = 0
  2928                           ; Regs used in _snake_move: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2929                           ;snake_move@direction stored from wreg
  2930     0358  0020               	movlb	0	; select bank0
  2931     0359  00A8               	movwf	snake_move@direction
  2932     035A                     l2833:
  2933                           
  2934                           ;snake.c: 33:     remainingMoves--;
  2935     035A  3001               	movlw	1
  2936     035B  02E3               	subwf	_remainingMoves,f
  2937     035C                     l2835:
  2938                           
  2939                           ;snake.c: 34:     for(uint8_t i = 0; i < 4*4; i++){
  2940     035C  01AA               	clrf	snake_move@i
  2941     035D                     l2841:
  2942                           
  2943                           ;snake.c: 35:         if(field[i] > 0){
  2944     035D  082A               	movf	snake_move@i,w
  2945     035E  3EC8               	addlw	(low (_field| 0))& (0+255)
  2946     035F  0086               	movwf	6
  2947     0360  0187               	clrf	7
  2948     0361  0801               	movf	1,w
  2949     0362  1903               	btfsc	3,2
  2950     0363  2B65               	goto	u1851
  2951     0364  2B66               	goto	u1850
  2952     0365                     u1851:
  2953     0365  2B6C               	goto	l2845
  2954     0366                     u1850:
  2955     0366                     l2843:
  2956                           
  2957                           ;snake.c: 36:             field[i]--;
  2958     0366  082A               	movf	snake_move@i,w
  2959     0367  3EC8               	addlw	(low (_field| 0))& (0+255)
  2960     0368  0086               	movwf	6
  2961     0369  0187               	clrf	7
  2962     036A  3001               	movlw	1
  2963     036B  0281               	subwf	1,f
  2964     036C                     l2845:
  2965                           
  2966                           ;snake.c: 38:     }
  2967     036C  3001               	movlw	1
  2968     036D  00A6               	movwf	??_snake_move
  2969     036E  0826               	movf	??_snake_move,w
  2970     036F  07AA               	addwf	snake_move@i,f
  2971     0370                     l2847:
  2972     0370  3010               	movlw	16
  2973     0371  022A               	subwf	snake_move@i,w
  2974     0372  1C03               	skipc
  2975     0373  2B75               	goto	u1861
  2976     0374  2B76               	goto	u1860
  2977     0375                     u1861:
  2978     0375  2B5D               	goto	l2841
  2979     0376                     u1860:
  2980     0376                     l2849:
  2981                           
  2982                           ;snake.c: 39:     int8_t incentive = 0;
  2983     0376  01A9               	clrf	snake_move@incentive
  2984     0377                     l2851:
  2985                           
  2986                           ;snake.c: 40:     direction &= 0x03;
  2987     0377  3003               	movlw	3
  2988     0378  00A6               	movwf	??_snake_move
  2989     0379  0826               	movf	??_snake_move,w
  2990     037A  05A8               	andwf	snake_move@direction,f
  2991                           
  2992                           ;snake.c: 41:     switch(direction){
  2993     037B  2BCD               	goto	l2879
  2994     037C                     l2853:
  2995                           
  2996                           ;snake.c: 43:             if((headPosition%4) == 0){
  2997     037C  0865               	movf	_headPosition,w
  2998     037D  3903               	andlw	3
  2999     037E  1D03               	btfss	3,2
  3000     037F  2B81               	goto	u1871
  3001     0380  2B82               	goto	u1870
  3002     0381                     u1871:
  3003     0381  2B86               	goto	l2857
  3004     0382                     u1870:
  3005     0382                     l2855:
  3006                           
  3007                           ;snake.c: 44:                 incentive = -1;
  3008     0382  0020               	movlb	0	; select bank0
  3009     0383  01A9               	clrf	snake_move@incentive
  3010     0384  03A9               	decf	snake_move@incentive,f
  3011                           
  3012                           ;snake.c: 45:             } else{
  3013     0385  2BE3               	goto	l2881
  3014     0386                     l2857:
  3015                           
  3016                           ;snake.c: 46:                 headPosition--;
  3017     0386  3001               	movlw	1
  3018     0387  02E5               	subwf	_headPosition,f
  3019     0388  2BE3               	goto	l2881
  3020     0389                     l2859:
  3021                           
  3022                           ;snake.c: 50:             if((headPosition%4) == 7){
  3023     0389  3003               	movlw	3
  3024     038A  0565               	andwf	_headPosition,w
  3025     038B  00A6               	movwf	??_snake_move
  3026     038C  3007               	movlw	7
  3027     038D  0626               	xorwf	??_snake_move,w
  3028     038E  1D03               	btfss	3,2
  3029     038F  2B91               	goto	u1881
  3030     0390  2B92               	goto	u1880
  3031     0391                     u1881:
  3032     0391  2B93               	goto	l2863
  3033     0392                     u1880:
  3034     0392  2B82               	goto	l2855
  3035     0393                     l2863:
  3036                           
  3037                           ;snake.c: 53:                 headPosition++;
  3038     0393  3001               	movlw	1
  3039     0394  00A6               	movwf	??_snake_move
  3040     0395  0826               	movf	??_snake_move,w
  3041     0396  07E5               	addwf	_headPosition,f
  3042     0397  2BE3               	goto	l2881
  3043     0398                     l2865:
  3044                           
  3045                           ;snake.c: 57:             if((headPosition/4) == 0){
  3046     0398  3004               	movlw	4
  3047     0399  00F6               	movwf	___awdiv@divisor
  3048     039A  3000               	movlw	0
  3049     039B  00F7               	movwf	___awdiv@divisor+1
  3050     039C  0865               	movf	_headPosition,w
  3051     039D  00A6               	movwf	??_snake_move
  3052     039E  01A7               	clrf	??_snake_move+1
  3053     039F  0826               	movf	??_snake_move,w
  3054     03A0  00F8               	movwf	___awdiv@dividend
  3055     03A1  0827               	movf	??_snake_move+1,w
  3056     03A2  00F9               	movwf	___awdiv@dividend+1
  3057     03A3  3180  20F1  3183   	fcall	___awdiv
  3058     03A6  0876               	movf	?___awdiv,w
  3059     03A7  0477               	iorwf	?___awdiv+1,w
  3060     03A8  1D03               	btfss	3,2
  3061     03A9  2BAB               	goto	u1891
  3062     03AA  2BAC               	goto	u1890
  3063     03AB                     u1891:
  3064     03AB  2BAD               	goto	l2869
  3065     03AC                     u1890:
  3066     03AC  2B82               	goto	l2855
  3067     03AD                     l2869:
  3068                           
  3069                           ;snake.c: 60:                 headPosition -= 8;
  3070     03AD  3008               	movlw	8
  3071     03AE  0020               	movlb	0	; select bank0
  3072     03AF  02E5               	subwf	_headPosition,f
  3073     03B0  2BE3               	goto	l2881
  3074     03B1                     l2871:
  3075                           
  3076                           ;snake.c: 64:             if((headPosition/4) == 7){
  3077     03B1  3004               	movlw	4
  3078     03B2  00F6               	movwf	___awdiv@divisor
  3079     03B3  3000               	movlw	0
  3080     03B4  00F7               	movwf	___awdiv@divisor+1
  3081     03B5  0865               	movf	_headPosition,w
  3082     03B6  00A6               	movwf	??_snake_move
  3083     03B7  01A7               	clrf	??_snake_move+1
  3084     03B8  0826               	movf	??_snake_move,w
  3085     03B9  00F8               	movwf	___awdiv@dividend
  3086     03BA  0827               	movf	??_snake_move+1,w
  3087     03BB  00F9               	movwf	___awdiv@dividend+1
  3088     03BC  3180  20F1  3183   	fcall	___awdiv
  3089     03BF  3007               	movlw	7
  3090     03C0  0676               	xorwf	?___awdiv,w
  3091     03C1  0477               	iorwf	?___awdiv+1,w
  3092     03C2  1D03               	btfss	3,2
  3093     03C3  2BC5               	goto	u1901
  3094     03C4  2BC6               	goto	u1900
  3095     03C5                     u1901:
  3096     03C5  2BC7               	goto	l2875
  3097     03C6                     u1900:
  3098     03C6  2B82               	goto	l2855
  3099     03C7                     l2875:
  3100                           
  3101                           ;snake.c: 67:                 headPosition += 8;
  3102     03C7  3008               	movlw	8
  3103     03C8  0020               	movlb	0	; select bank0
  3104     03C9  00A6               	movwf	??_snake_move
  3105     03CA  0826               	movf	??_snake_move,w
  3106     03CB  07E5               	addwf	_headPosition,f
  3107     03CC  2BE3               	goto	l2881
  3108     03CD                     l2879:
  3109     03CD  0828               	movf	snake_move@direction,w
  3110     03CE  00A6               	movwf	??_snake_move
  3111     03CF  01A7               	clrf	??_snake_move+1
  3112                           
  3113                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3114                           ; Switch size 1, requested type "simple"
  3115                           ; Number of cases is 1, Range of values is 0 to 0
  3116                           ; switch strategies available:
  3117                           ; Name         Instructions Cycles
  3118                           ; simple_byte            4     3 (average)
  3119                           ; direct_byte            8     6 (fixed)
  3120                           ; jumptable            260     6 (fixed)
  3121                           ;	Chosen strategy is simple_byte
  3122     03D0  0827               	movf	??_snake_move+1,w
  3123     03D1  3A00               	xorlw	0	; case 0
  3124     03D2  1903               	skipnz
  3125     03D3  2BD5               	goto	l3279
  3126     03D4  2BE3               	goto	l2881
  3127     03D5                     l3279:
  3128                           
  3129                           ; Switch size 1, requested type "simple"
  3130                           ; Number of cases is 4, Range of values is 0 to 3
  3131                           ; switch strategies available:
  3132                           ; Name         Instructions Cycles
  3133                           ; simple_byte           13     7 (average)
  3134                           ; direct_byte           14     6 (fixed)
  3135                           ; jumptable            260     6 (fixed)
  3136                           ;	Chosen strategy is simple_byte
  3137     03D5  0826               	movf	??_snake_move,w
  3138     03D6  3A00               	xorlw	0	; case 0
  3139     03D7  1903               	skipnz
  3140     03D8  2B7C               	goto	l2853
  3141     03D9  3A01               	xorlw	1	; case 1
  3142     03DA  1903               	skipnz
  3143     03DB  2B89               	goto	l2859
  3144     03DC  3A03               	xorlw	3	; case 2
  3145     03DD  1903               	skipnz
  3146     03DE  2B98               	goto	l2865
  3147     03DF  3A01               	xorlw	1	; case 3
  3148     03E0  1903               	skipnz
  3149     03E1  2BB1               	goto	l2871
  3150     03E2  2BE3               	goto	l2881
  3151     03E3                     l2881:
  3152                           
  3153                           ;snake.c: 71:     if(incentive == -1){
  3154     03E3  0A29               	incf	snake_move@incentive,w
  3155     03E4  1D03               	btfss	3,2
  3156     03E5  2BE7               	goto	u1911
  3157     03E6  2BE8               	goto	u1910
  3158     03E7                     u1911:
  3159     03E7  2BEC               	goto	l2885
  3160     03E8                     u1910:
  3161     03E8                     l2883:
  3162                           
  3163                           ;snake.c: 72:         snake_initiate();
  3164     03E8  3180  207B  3183   	fcall	_snake_initiate
  3165                           
  3166                           ;snake.c: 73:     } else if(field[headPosition] > 0){
  3167     03EB  2C23               	goto	l2905
  3168     03EC                     l2885:
  3169     03EC  0865               	movf	_headPosition,w
  3170     03ED  3EC8               	addlw	(low (_field| 0))& (0+255)
  3171     03EE  0086               	movwf	6
  3172     03EF  0187               	clrf	7
  3173     03F0  0801               	movf	1,w
  3174     03F1  1903               	btfsc	3,2
  3175     03F2  2BF4               	goto	u1921
  3176     03F3  2BF5               	goto	u1920
  3177     03F4                     u1921:
  3178     03F4  2BF8               	goto	l2891
  3179     03F5                     u1920:
  3180     03F5                     l2887:
  3181                           
  3182                           ;snake.c: 74:         incentive = -1;
  3183     03F5  01A9               	clrf	snake_move@incentive
  3184     03F6  03A9               	decf	snake_move@incentive,f
  3185     03F7  2BE8               	goto	l2883
  3186     03F8                     l2891:
  3187                           
  3188                           ;snake.c: 77:         if(headPosition == foodPosition){
  3189     03F8  0865               	movf	_headPosition,w
  3190     03F9  0664               	xorwf	_foodPosition,w
  3191     03FA  1D03               	skipz
  3192     03FB  2BFD               	goto	u1931
  3193     03FC  2BFE               	goto	u1930
  3194     03FD                     u1931:
  3195     03FD  2C1D               	goto	l2903
  3196     03FE                     u1930:
  3197     03FE                     l2893:
  3198                           
  3199                           ;snake.c: 78:             remainingMoves = 40;
  3200     03FE  3028               	movlw	40
  3201     03FF  00E3               	movwf	_remainingMoves
  3202     0400                     l2895:
  3203                           
  3204                           ;snake.c: 79:             incentive = 1;
  3205     0400  01A9               	clrf	snake_move@incentive
  3206     0401  0AA9               	incf	snake_move@incentive,f
  3207     0402                     l2897:
  3208                           
  3209                           ;snake.c: 80:             snakeSize++;
  3210     0402  3001               	movlw	1
  3211     0403  00A6               	movwf	??_snake_move
  3212     0404  0826               	movf	??_snake_move,w
  3213     0405  07E7               	addwf	_snakeSize,f
  3214     0406                     l2899:
  3215                           
  3216                           ;snake.c: 82:                 foodPosition = ((uint8_t)rand())%4*4;
  3217     0406  3180  2046  3183   	fcall	_rand
  3218     0409  087C               	movf	?_rand,w
  3219     040A  3903               	andlw	3
  3220     040B  0020               	movlb	0	; select bank0
  3221     040C  00A6               	movwf	??_snake_move
  3222     040D  3001               	movlw	1
  3223     040E                     u1945:
  3224     040E  35A6               	lslf	??_snake_move,f
  3225     040F  3EFF               	addlw	-1
  3226     0410  1D03               	skipz
  3227     0411  2C0E               	goto	u1945
  3228     0412  3526               	lslf	??_snake_move,w
  3229     0413  00E4               	movwf	_foodPosition
  3230     0414                     l2901:
  3231                           
  3232                           ;snake.c: 83:             }while(field[foodPosition] > 0);
  3233     0414  0864               	movf	_foodPosition,w
  3234     0415  3EC8               	addlw	(low (_field| 0))& (0+255)
  3235     0416  0086               	movwf	6
  3236     0417  0187               	clrf	7
  3237     0418  0801               	movf	1,w
  3238     0419  1D03               	btfss	3,2
  3239     041A  2C1C               	goto	u1951
  3240     041B  2C1D               	goto	u1950
  3241     041C                     u1951:
  3242     041C  2C06               	goto	l2899
  3243     041D                     u1950:
  3244     041D                     l2903:
  3245                           
  3246                           ;snake.c: 85:         field[headPosition] = snakeSize;
  3247     041D  0865               	movf	_headPosition,w
  3248     041E  3EC8               	addlw	(low (_field| 0))& (0+255)
  3249     041F  0086               	movwf	6
  3250     0420  0187               	clrf	7
  3251     0421  0867               	movf	_snakeSize,w
  3252     0422  0081               	movwf	1
  3253     0423                     l2905:
  3254                           
  3255                           ;snake.c: 87:     if(remainingMoves == 0){
  3256     0423  0020               	movlb	0	; select bank0
  3257     0424  0863               	movf	_remainingMoves,w
  3258     0425  1D03               	btfss	3,2
  3259     0426  2C28               	goto	u1961
  3260     0427  2C29               	goto	u1960
  3261     0428                     u1961:
  3262     0428  2C2E               	goto	l2911
  3263     0429                     u1960:
  3264     0429                     l2907:
  3265                           
  3266                           ;snake.c: 88:         incentive = -1;
  3267     0429  01A9               	clrf	snake_move@incentive
  3268     042A  03A9               	decf	snake_move@incentive,f
  3269     042B                     l2909:
  3270                           
  3271                           ;snake.c: 89:         snake_initiate();
  3272     042B  3180  207B  3183   	fcall	_snake_initiate
  3273     042E                     l2911:
  3274                           
  3275                           ;snake.c: 91:     return incentive;
  3276     042E  0020               	movlb	0	; select bank0
  3277     042F  0829               	movf	snake_move@incentive,w
  3278     0430                     l455:
  3279     0430  0008               	return
  3280     0431                     __end_of_snake_move:
  3281                           
  3282                           	psect	text2
  3283     007B                     __ptext2:	
  3284 ;; *************** function _snake_initiate *****************
  3285 ;; Defined at:
  3286 ;;		line 21 in file "snake.c"
  3287 ;; Parameters:    Size  Location     Type
  3288 ;;		None
  3289 ;; Auto vars:     Size  Location     Type
  3290 ;;  i               1    5[BANK0 ] unsigned char 
  3291 ;; Return value:  Size  Location     Type
  3292 ;;                  1    wreg      void 
  3293 ;; Registers used:
  3294 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3295 ;; Tracked objects:
  3296 ;;		On entry : 0/0
  3297 ;;		On exit  : 0/0
  3298 ;;		Unchanged: 0/0
  3299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3300 ;;      Params:         0       0       0       0       0       0
  3301 ;;      Locals:         0       1       0       0       0       0
  3302 ;;      Temps:          0       1       0       0       0       0
  3303 ;;      Totals:         0       2       0       0       0       0
  3304 ;;Total ram usage:        2 bytes
  3305 ;; Hardware stack levels used: 1
  3306 ;; Hardware stack levels required when called: 2
  3307 ;; This function calls:
  3308 ;;		_rand
  3309 ;; This function is called by:
  3310 ;;		_main
  3311 ;;		_snake_move
  3312 ;; This function uses a non-reentrant model
  3313 ;;
  3314                           
  3315     007B                     _snake_initiate:	
  3316                           ;psect for function _snake_initiate
  3317                           
  3318     007B                     l2467:	
  3319                           ;incstack = 0
  3320                           ; Regs used in _snake_initiate: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3321                           
  3322                           
  3323                           ;snake.c: 22:     for(uint8_t i = 0; i < 4*4; i++){
  3324     007B  0020               	movlb	0	; select bank0
  3325     007C  01A5               	clrf	snake_initiate@i
  3326     007D                     l2473:
  3327                           
  3328                           ;snake.c: 23:         field[i] = 0;
  3329     007D  0825               	movf	snake_initiate@i,w
  3330     007E  3EC8               	addlw	(low (_field| 0))& (0+255)
  3331     007F  0086               	movwf	6
  3332     0080  0187               	clrf	7
  3333     0081  0181               	clrf	1
  3334     0082                     l2475:
  3335                           
  3336                           ;snake.c: 24:     }
  3337     0082  3001               	movlw	1
  3338     0083  00A4               	movwf	??_snake_initiate
  3339     0084  0824               	movf	??_snake_initiate,w
  3340     0085  07A5               	addwf	snake_initiate@i,f
  3341     0086                     l2477:
  3342     0086  3010               	movlw	16
  3343     0087  0225               	subwf	snake_initiate@i,w
  3344     0088  1C03               	skipc
  3345     0089  288B               	goto	u1311
  3346     008A  288C               	goto	u1310
  3347     008B                     u1311:
  3348     008B  287D               	goto	l2473
  3349     008C                     u1310:
  3350     008C                     l2479:
  3351                           
  3352                           ;snake.c: 25:     headPosition = ((uint8_t)rand())%4*4;
  3353     008C  3180  2046  3180   	fcall	_rand
  3354     008F  087C               	movf	?_rand,w
  3355     0090  3903               	andlw	3
  3356     0091  0020               	movlb	0	; select bank0
  3357     0092  00A4               	movwf	??_snake_initiate
  3358     0093  3001               	movlw	1
  3359     0094                     u1325:
  3360     0094  35A4               	lslf	??_snake_initiate,f
  3361     0095  3EFF               	addlw	-1
  3362     0096  1D03               	skipz
  3363     0097  2894               	goto	u1325
  3364     0098  3524               	lslf	??_snake_initiate,w
  3365     0099  00E5               	movwf	_headPosition
  3366                           
  3367                           ;snake.c: 26:     foodPosition = ((uint8_t)rand())%4*4;
  3368     009A  3180  2046  3180   	fcall	_rand
  3369     009D  087C               	movf	?_rand,w
  3370     009E  3903               	andlw	3
  3371     009F  0020               	movlb	0	; select bank0
  3372     00A0  00A4               	movwf	??_snake_initiate
  3373     00A1  3001               	movlw	1
  3374     00A2                     u1335:
  3375     00A2  35A4               	lslf	??_snake_initiate,f
  3376     00A3  3EFF               	addlw	-1
  3377     00A4  1D03               	skipz
  3378     00A5  28A2               	goto	u1335
  3379     00A6  3524               	lslf	??_snake_initiate,w
  3380     00A7  00E4               	movwf	_foodPosition
  3381     00A8                     l2481:
  3382                           
  3383                           ;snake.c: 27:     snakeSize = 1;
  3384     00A8  01E7               	clrf	_snakeSize
  3385     00A9  0AE7               	incf	_snakeSize,f
  3386     00AA                     l2483:
  3387                           
  3388                           ;snake.c: 28:     remainingMoves = 40;
  3389     00AA  3028               	movlw	40
  3390     00AB  00E3               	movwf	_remainingMoves
  3391     00AC                     l2485:
  3392                           
  3393                           ;snake.c: 29:     field[headPosition] = snakeSize;
  3394     00AC  0865               	movf	_headPosition,w
  3395     00AD  3EC8               	addlw	(low (_field| 0))& (0+255)
  3396     00AE  0086               	movwf	6
  3397     00AF  0187               	clrf	7
  3398     00B0  0867               	movf	_snakeSize,w
  3399     00B1  0081               	movwf	1
  3400     00B2                     l427:
  3401     00B2  0008               	return
  3402     00B3                     __end_of_snake_initiate:
  3403                           
  3404                           	psect	text3
  3405     01BE                     __ptext3:	
  3406 ;; *************** function _snake_getSurroundings *****************
  3407 ;; Defined at:
  3408 ;;		line 98 in file "snake.c"
  3409 ;; Parameters:    Size  Location     Type
  3410 ;;  surroundings    1    wreg     PTR unsigned char 
  3411 ;;		 -> Y0(8), 
  3412 ;; Auto vars:     Size  Location     Type
  3413 ;;  surroundings    1   11[BANK0 ] PTR unsigned char 
  3414 ;;		 -> Y0(8), 
  3415 ;;  i               1   10[BANK0 ] unsigned char 
  3416 ;;  i               1    7[BANK0 ] unsigned char 
  3417 ;;  ch              1    9[BANK0 ] unsigned char 
  3418 ;;  lh              1    8[BANK0 ] unsigned char 
  3419 ;;  cf              1    6[BANK0 ] unsigned char 
  3420 ;;  lf              1    5[BANK0 ] unsigned char 
  3421 ;;  p               1    4[BANK0 ] unsigned char 
  3422 ;; Return value:  Size  Location     Type
  3423 ;;                  1    wreg      void 
  3424 ;; Registers used:
  3425 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3426 ;; Tracked objects:
  3427 ;;		On entry : 0/0
  3428 ;;		On exit  : 0/0
  3429 ;;		Unchanged: 0/0
  3430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3431 ;;      Params:         0       0       0       0       0       0
  3432 ;;      Locals:         0       8       0       0       0       0
  3433 ;;      Temps:          2       0       0       0       0       0
  3434 ;;      Totals:         2       8       0       0       0       0
  3435 ;;Total ram usage:       10 bytes
  3436 ;; Hardware stack levels used: 1
  3437 ;; Hardware stack levels required when called: 1
  3438 ;; This function calls:
  3439 ;;		___awdiv
  3440 ;; This function is called by:
  3441 ;;		_main
  3442 ;; This function uses a non-reentrant model
  3443 ;;
  3444                           
  3445     01BE                     _snake_getSurroundings:	
  3446                           ;psect for function _snake_getSurroundings
  3447                           
  3448                           
  3449                           ;incstack = 0
  3450                           ; Regs used in _snake_getSurroundings: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  3451                           ;snake_getSurroundings@surroundings stored from wreg
  3452     01BE  0020               	movlb	0	; select bank0
  3453     01BF  00AB               	movwf	snake_getSurroundings@surroundings
  3454     01C0                     l2671:
  3455                           
  3456                           ;snake.c: 99:     for(uint8_t i = 0; i < 8; i++){
  3457     01C0  01A7               	clrf	snake_getSurroundings@i
  3458     01C1                     l2677:
  3459                           
  3460                           ;snake.c: 100:         surroundings[i] = 0;
  3461     01C1  0827               	movf	snake_getSurroundings@i,w
  3462     01C2  072B               	addwf	snake_getSurroundings@surroundings,w
  3463     01C3  00FB               	movwf	??_snake_getSurroundings
  3464     01C4  087B               	movf	??_snake_getSurroundings,w
  3465     01C5  0086               	movwf	6
  3466     01C6  0187               	clrf	7
  3467     01C7  0181               	clrf	1
  3468     01C8                     l2679:
  3469                           
  3470                           ;snake.c: 101:     }
  3471     01C8  3001               	movlw	1
  3472     01C9  00FB               	movwf	??_snake_getSurroundings
  3473     01CA  087B               	movf	??_snake_getSurroundings,w
  3474     01CB  07A7               	addwf	snake_getSurroundings@i,f
  3475     01CC                     l2681:
  3476     01CC  3008               	movlw	8
  3477     01CD  0227               	subwf	snake_getSurroundings@i,w
  3478     01CE  1C03               	skipc
  3479     01CF  29D1               	goto	u1631
  3480     01D0  29D2               	goto	u1630
  3481     01D1                     u1631:
  3482     01D1  29C1               	goto	l2677
  3483     01D2                     u1630:
  3484     01D2                     l2683:
  3485                           
  3486                           ;snake.c: 102:     uint8_t lh = headPosition%4;
  3487     01D2  0865               	movf	_headPosition,w
  3488     01D3  3903               	andlw	3
  3489     01D4  00A8               	movwf	snake_getSurroundings@lh
  3490     01D5                     l2685:
  3491                           
  3492                           ;snake.c: 103:     uint8_t ch = headPosition/4;
  3493     01D5  3004               	movlw	4
  3494     01D6  00F6               	movwf	___awdiv@divisor
  3495     01D7  3000               	movlw	0
  3496     01D8  00F7               	movwf	___awdiv@divisor+1
  3497     01D9  0865               	movf	_headPosition,w
  3498     01DA  00FB               	movwf	??_snake_getSurroundings
  3499     01DB  01FC               	clrf	??_snake_getSurroundings+1
  3500     01DC  087B               	movf	??_snake_getSurroundings,w
  3501     01DD  00F8               	movwf	___awdiv@dividend
  3502     01DE  087C               	movf	??_snake_getSurroundings+1,w
  3503     01DF  00F9               	movwf	___awdiv@dividend+1
  3504     01E0  3180  20F1  3181   	fcall	___awdiv
  3505     01E3  0876               	movf	?___awdiv,w
  3506     01E4  0020               	movlb	0	; select bank0
  3507     01E5  00A9               	movwf	snake_getSurroundings@ch
  3508     01E6                     l2687:
  3509                           
  3510                           ;snake.c: 104:     uint8_t lf = foodPosition%4;
  3511     01E6  0864               	movf	_foodPosition,w
  3512     01E7  3903               	andlw	3
  3513     01E8  00A5               	movwf	snake_getSurroundings@lf
  3514                           
  3515                           ;snake.c: 105:     uint8_t cf = foodPosition/4;
  3516     01E9  3004               	movlw	4
  3517     01EA  00F6               	movwf	___awdiv@divisor
  3518     01EB  3000               	movlw	0
  3519     01EC  00F7               	movwf	___awdiv@divisor+1
  3520     01ED  0864               	movf	_foodPosition,w
  3521     01EE  00FB               	movwf	??_snake_getSurroundings
  3522     01EF  01FC               	clrf	??_snake_getSurroundings+1
  3523     01F0  087B               	movf	??_snake_getSurroundings,w
  3524     01F1  00F8               	movwf	___awdiv@dividend
  3525     01F2  087C               	movf	??_snake_getSurroundings+1,w
  3526     01F3  00F9               	movwf	___awdiv@dividend+1
  3527     01F4  3180  20F1  3181   	fcall	___awdiv
  3528     01F7  0876               	movf	?___awdiv,w
  3529     01F8  0020               	movlb	0	; select bank0
  3530     01F9  00A6               	movwf	snake_getSurroundings@cf
  3531     01FA                     l2689:
  3532                           
  3533                           ;snake.c: 106:     if(lh == 0){
  3534     01FA  0828               	movf	snake_getSurroundings@lh,w
  3535     01FB  1D03               	btfss	3,2
  3536     01FC  29FE               	goto	u1641
  3537     01FD  29FF               	goto	u1640
  3538     01FE                     u1641:
  3539     01FE  2A05               	goto	l2693
  3540     01FF                     u1640:
  3541     01FF                     l2691:
  3542                           
  3543                           ;snake.c: 107:         surroundings[0] = 1;
  3544     01FF  082B               	movf	snake_getSurroundings@surroundings,w
  3545     0200  0086               	movwf	6
  3546     0201  0187               	clrf	7
  3547     0202  0181               	clrf	1
  3548     0203  0A81               	incf	1,f
  3549                           
  3550                           ;snake.c: 108:     } else if(lh == 7){
  3551     0204  2A10               	goto	l2697
  3552     0205                     l2693:
  3553     0205  3007               	movlw	7
  3554     0206  0628               	xorwf	snake_getSurroundings@lh,w
  3555     0207  1D03               	btfss	3,2
  3556     0208  2A0A               	goto	u1651
  3557     0209  2A0B               	goto	u1650
  3558     020A                     u1651:
  3559     020A  2A10               	goto	l2697
  3560     020B                     u1650:
  3561     020B                     l2695:
  3562                           
  3563                           ;snake.c: 109:         surroundings[1] = 1;
  3564     020B  0A2B               	incf	snake_getSurroundings@surroundings,w
  3565     020C  0086               	movwf	6
  3566     020D  0187               	clrf	7
  3567     020E  0181               	clrf	1
  3568     020F  0A81               	incf	1,f
  3569     0210                     l2697:
  3570                           
  3571                           ;snake.c: 111:     if(ch == 0){
  3572     0210  0829               	movf	snake_getSurroundings@ch,w
  3573     0211  1D03               	btfss	3,2
  3574     0212  2A14               	goto	u1661
  3575     0213  2A15               	goto	u1660
  3576     0214                     u1661:
  3577     0214  2A1C               	goto	l2701
  3578     0215                     u1660:
  3579     0215                     l2699:
  3580                           
  3581                           ;snake.c: 112:         surroundings[2] = 1;
  3582     0215  082B               	movf	snake_getSurroundings@surroundings,w
  3583     0216  3E02               	addlw	2
  3584     0217  0086               	movwf	6
  3585     0218  0187               	clrf	7
  3586     0219  0181               	clrf	1
  3587     021A  0A81               	incf	1,f
  3588                           
  3589                           ;snake.c: 113:     } else if(ch == 7){
  3590     021B  2A28               	goto	l2705
  3591     021C                     l2701:
  3592     021C  3007               	movlw	7
  3593     021D  0629               	xorwf	snake_getSurroundings@ch,w
  3594     021E  1D03               	btfss	3,2
  3595     021F  2A21               	goto	u1671
  3596     0220  2A22               	goto	u1670
  3597     0221                     u1671:
  3598     0221  2A28               	goto	l2705
  3599     0222                     u1670:
  3600     0222                     l2703:
  3601                           
  3602                           ;snake.c: 114:         surroundings[3] = 1;
  3603     0222  082B               	movf	snake_getSurroundings@surroundings,w
  3604     0223  3E03               	addlw	3
  3605     0224  0086               	movwf	6
  3606     0225  0187               	clrf	7
  3607     0226  0181               	clrf	1
  3608     0227  0A81               	incf	1,f
  3609     0228                     l2705:
  3610                           
  3611                           ;snake.c: 116:     uint8_t p;;snake.c: 117:     for(uint8_t i = 0; i < 4; i++){
  3612     0228  01AA               	clrf	snake_getSurroundings@i_795
  3613     0229                     l2711:
  3614                           
  3615                           ;snake.c: 118:         p = (headPosition+mapping[i])%4*4;
  3616     0229  082A               	movf	snake_getSurroundings@i_795,w
  3617     022A  3EE0               	addlw	(low (_mapping| 0))& (0+255)
  3618     022B  0086               	movwf	6
  3619     022C  0187               	clrf	7
  3620     022D  0801               	movf	1,w
  3621     022E  0765               	addwf	_headPosition,w
  3622     022F  3903               	andlw	3
  3623     0230  00FB               	movwf	??_snake_getSurroundings
  3624     0231  3001               	movlw	1
  3625     0232                     u1685:
  3626     0232  35FB               	lslf	??_snake_getSurroundings,f
  3627     0233  3EFF               	addlw	-1
  3628     0234  1D03               	skipz
  3629     0235  2A32               	goto	u1685
  3630     0236  357B               	lslf	??_snake_getSurroundings,w
  3631     0237  00A4               	movwf	snake_getSurroundings@p
  3632                           
  3633                           ;snake.c: 119:         if(field[p] > 0){
  3634     0238  0824               	movf	snake_getSurroundings@p,w
  3635     0239  3EC8               	addlw	(low (_field| 0))& (0+255)
  3636     023A  0086               	movwf	6
  3637     023B  0187               	clrf	7
  3638     023C  0801               	movf	1,w
  3639     023D  1903               	btfsc	3,2
  3640     023E  2A40               	goto	u1691
  3641     023F  2A41               	goto	u1690
  3642     0240                     u1691:
  3643     0240  2A49               	goto	l2715
  3644     0241                     u1690:
  3645     0241                     l2713:
  3646                           
  3647                           ;snake.c: 120:             surroundings[i] = 1;
  3648     0241  082A               	movf	snake_getSurroundings@i_795,w
  3649     0242  072B               	addwf	snake_getSurroundings@surroundings,w
  3650     0243  00FB               	movwf	??_snake_getSurroundings
  3651     0244  087B               	movf	??_snake_getSurroundings,w
  3652     0245  0086               	movwf	6
  3653     0246  0187               	clrf	7
  3654     0247  0181               	clrf	1
  3655     0248  0A81               	incf	1,f
  3656     0249                     l2715:
  3657                           
  3658                           ;snake.c: 122:     }
  3659     0249  3001               	movlw	1
  3660     024A  00FB               	movwf	??_snake_getSurroundings
  3661     024B  087B               	movf	??_snake_getSurroundings,w
  3662     024C  07AA               	addwf	snake_getSurroundings@i_795,f
  3663     024D                     l2717:
  3664     024D  3004               	movlw	4
  3665     024E  022A               	subwf	snake_getSurroundings@i_795,w
  3666     024F  1C03               	skipc
  3667     0250  2A52               	goto	u1701
  3668     0251  2A53               	goto	u1700
  3669     0252                     u1701:
  3670     0252  2A29               	goto	l2711
  3671     0253                     u1700:
  3672     0253                     l2719:
  3673                           
  3674                           ;snake.c: 123:     if(lf<lh){
  3675     0253  0828               	movf	snake_getSurroundings@lh,w
  3676     0254  0225               	subwf	snake_getSurroundings@lf,w
  3677     0255  1803               	skipnc
  3678     0256  2A58               	goto	u1711
  3679     0257  2A59               	goto	u1710
  3680     0258                     u1711:
  3681     0258  2A60               	goto	l2723
  3682     0259                     u1710:
  3683     0259                     l2721:
  3684                           
  3685                           ;snake.c: 124:         surroundings[4] = 1;
  3686     0259  082B               	movf	snake_getSurroundings@surroundings,w
  3687     025A  3E04               	addlw	4
  3688     025B  0086               	movwf	6
  3689     025C  0187               	clrf	7
  3690     025D  0181               	clrf	1
  3691     025E  0A81               	incf	1,f
  3692                           
  3693                           ;snake.c: 125:     } else if(lf>lh){
  3694     025F  2A6C               	goto	l2727
  3695     0260                     l2723:
  3696     0260  0825               	movf	snake_getSurroundings@lf,w
  3697     0261  0228               	subwf	snake_getSurroundings@lh,w
  3698     0262  1803               	skipnc
  3699     0263  2A65               	goto	u1721
  3700     0264  2A66               	goto	u1720
  3701     0265                     u1721:
  3702     0265  2A6C               	goto	l2727
  3703     0266                     u1720:
  3704     0266                     l2725:
  3705                           
  3706                           ;snake.c: 126:         surroundings[5] = 1;
  3707     0266  082B               	movf	snake_getSurroundings@surroundings,w
  3708     0267  3E05               	addlw	5
  3709     0268  0086               	movwf	6
  3710     0269  0187               	clrf	7
  3711     026A  0181               	clrf	1
  3712     026B  0A81               	incf	1,f
  3713     026C                     l2727:
  3714                           
  3715                           ;snake.c: 128:     if(cf<ch){
  3716     026C  0829               	movf	snake_getSurroundings@ch,w
  3717     026D  0226               	subwf	snake_getSurroundings@cf,w
  3718     026E  1803               	skipnc
  3719     026F  2A71               	goto	u1731
  3720     0270  2A72               	goto	u1730
  3721     0271                     u1731:
  3722     0271  2A79               	goto	l2731
  3723     0272                     u1730:
  3724     0272                     l2729:
  3725                           
  3726                           ;snake.c: 129:         surroundings[6] = 1;
  3727     0272  082B               	movf	snake_getSurroundings@surroundings,w
  3728     0273  3E06               	addlw	6
  3729     0274  0086               	movwf	6
  3730     0275  0187               	clrf	7
  3731     0276  0181               	clrf	1
  3732     0277  0A81               	incf	1,f
  3733                           
  3734                           ;snake.c: 130:     } else if(cf>ch){
  3735     0278  2A85               	goto	l478
  3736     0279                     l2731:
  3737     0279  0826               	movf	snake_getSurroundings@cf,w
  3738     027A  0229               	subwf	snake_getSurroundings@ch,w
  3739     027B  1803               	skipnc
  3740     027C  2A7E               	goto	u1741
  3741     027D  2A7F               	goto	u1740
  3742     027E                     u1741:
  3743     027E  2A85               	goto	l478
  3744     027F                     u1740:
  3745     027F                     l2733:
  3746                           
  3747                           ;snake.c: 131:         surroundings[7] = 1;
  3748     027F  082B               	movf	snake_getSurroundings@surroundings,w
  3749     0280  3E07               	addlw	7
  3750     0281  0086               	movwf	6
  3751     0282  0187               	clrf	7
  3752     0283  0181               	clrf	1
  3753     0284  0A81               	incf	1,f
  3754     0285                     l478:
  3755     0285  0008               	return
  3756     0286                     __end_of_snake_getSurroundings:
  3757                           
  3758                           	psect	text4
  3759     0EC6                     __ptext4:	
  3760 ;; *************** function _snake_getFoodPosition *****************
  3761 ;; Defined at:
  3762 ;;		line 142 in file "snake.c"
  3763 ;; Parameters:    Size  Location     Type
  3764 ;;		None
  3765 ;; Auto vars:     Size  Location     Type
  3766 ;;		None
  3767 ;; Return value:  Size  Location     Type
  3768 ;;                  1    wreg      unsigned char 
  3769 ;; Registers used:
  3770 ;;		wreg
  3771 ;; Tracked objects:
  3772 ;;		On entry : 0/0
  3773 ;;		On exit  : 0/0
  3774 ;;		Unchanged: 0/0
  3775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3776 ;;      Params:         0       0       0       0       0       0
  3777 ;;      Locals:         0       0       0       0       0       0
  3778 ;;      Temps:          0       0       0       0       0       0
  3779 ;;      Totals:         0       0       0       0       0       0
  3780 ;;Total ram usage:        0 bytes
  3781 ;; Hardware stack levels used: 1
  3782 ;; This function calls:
  3783 ;;		Nothing
  3784 ;; This function is called by:
  3785 ;;		_main
  3786 ;; This function uses a non-reentrant model
  3787 ;;
  3788                           
  3789     0EC6                     _snake_getFoodPosition:	
  3790                           ;psect for function _snake_getFoodPosition
  3791                           
  3792     0EC6                     l2633:	
  3793                           ;incstack = 0
  3794                           ; Regs used in _snake_getFoodPosition: [wreg]
  3795                           
  3796                           
  3797                           ;snake.c: 143:     return foodPosition;
  3798     0EC6  0020               	movlb	0	; select bank0
  3799     0EC7  0864               	movf	_foodPosition,w
  3800     0EC8                     l487:
  3801     0EC8  0008               	return
  3802     0EC9                     __end_of_snake_getFoodPosition:
  3803                           
  3804                           	psect	text5
  3805     0004                     __ptext5:	
  3806 ;; *************** function _snake_getField *****************
  3807 ;; Defined at:
  3808 ;;		line 94 in file "snake.c"
  3809 ;; Parameters:    Size  Location     Type
  3810 ;;		None
  3811 ;; Auto vars:     Size  Location     Type
  3812 ;;		None
  3813 ;; Return value:  Size  Location     Type
  3814 ;;                  1    wreg      PTR unsigned char 
  3815 ;; Registers used:
  3816 ;;		wreg
  3817 ;; Tracked objects:
  3818 ;;		On entry : 0/0
  3819 ;;		On exit  : 0/0
  3820 ;;		Unchanged: 0/0
  3821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3822 ;;      Params:         0       0       0       0       0       0
  3823 ;;      Locals:         0       0       0       0       0       0
  3824 ;;      Temps:          0       0       0       0       0       0
  3825 ;;      Totals:         0       0       0       0       0       0
  3826 ;;Total ram usage:        0 bytes
  3827 ;; Hardware stack levels used: 1
  3828 ;; This function calls:
  3829 ;;		Nothing
  3830 ;; This function is called by:
  3831 ;;		_main
  3832 ;; This function uses a non-reentrant model
  3833 ;;
  3834                           
  3835     0004                     _snake_getField:	
  3836                           ;psect for function _snake_getField
  3837                           
  3838     0004                     l2625:	
  3839                           ;incstack = 0
  3840                           ; Regs used in _snake_getField: [wreg]
  3841                           
  3842                           
  3843                           ;snake.c: 95:     return field;
  3844     0004  30C8               	movlw	(low (_field| 0))& (0+255)
  3845     0005                     l458:
  3846     0005  0008               	return
  3847     0006                     __end_of_snake_getField:
  3848                           
  3849                           	psect	text6
  3850     0FD2                     __ptext6:	
  3851 ;; *************** function _sendMatrix *****************
  3852 ;; Defined at:
  3853 ;;		line 55 in file "ledMatrix.c"
  3854 ;; Parameters:    Size  Location     Type
  3855 ;;		None
  3856 ;; Auto vars:     Size  Location     Type
  3857 ;;  j               1    6[COMMON] unsigned char 
  3858 ;;  i               1    7[COMMON] unsigned char 
  3859 ;;  nb              1    5[COMMON] unsigned char 
  3860 ;;  b               1    4[COMMON] unsigned char 
  3861 ;; Return value:  Size  Location     Type
  3862 ;;                  1    wreg      void 
  3863 ;; Registers used:
  3864 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3865 ;; Tracked objects:
  3866 ;;		On entry : 0/0
  3867 ;;		On exit  : 0/0
  3868 ;;		Unchanged: 0/0
  3869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3870 ;;      Params:         0       0       0       0       0       0
  3871 ;;      Locals:         4       0       0       0       0       0
  3872 ;;      Temps:          1       0       0       0       0       0
  3873 ;;      Totals:         5       0       0       0       0       0
  3874 ;;Total ram usage:        5 bytes
  3875 ;; Hardware stack levels used: 1
  3876 ;; Hardware stack levels required when called: 2
  3877 ;; This function calls:
  3878 ;;		_txMAX7219
  3879 ;; This function is called by:
  3880 ;;		_main
  3881 ;; This function uses a non-reentrant model
  3882 ;;
  3883                           
  3884     0FD2                     _sendMatrix:	
  3885                           ;psect for function _sendMatrix
  3886                           
  3887     0FD2                     l2637:	
  3888                           ;incstack = 0
  3889                           ; Regs used in _sendMatrix: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3890                           
  3891                           
  3892                           ;ledMatrix.c: 56:     uint8_t b;;ledMatrix.c: 57:     uint8_t nb;;ledMatrix.c: 58:     f
      +                          or(uint8_t i=0;i<8;i++){
  3893     0FD2  01F7               	clrf	sendMatrix@i
  3894     0FD3                     l2643:
  3895                           
  3896                           ;ledMatrix.c: 62:         b = matrix[i];
  3897     0FD3  0877               	movf	sendMatrix@i,w
  3898     0FD4  3EB0               	addlw	(low (_matrix| 0))& (0+255)
  3899     0FD5  0086               	movwf	6
  3900     0FD6  0187               	clrf	7
  3901     0FD7  0801               	movf	1,w
  3902     0FD8  00F4               	movwf	sendMatrix@b
  3903     0FD9                     l2645:
  3904                           
  3905                           ;ledMatrix.c: 65:         nb = 0x00;
  3906     0FD9  01F5               	clrf	sendMatrix@nb
  3907     0FDA                     l2647:
  3908                           
  3909                           ;ledMatrix.c: 66:         for(uint8_t j = 0; j < 8; j++){
  3910     0FDA  01F6               	clrf	sendMatrix@j
  3911     0FDB                     l2653:
  3912                           
  3913                           ;ledMatrix.c: 67:             nb <<= 1;
  3914     0FDB  1003               	clrc
  3915     0FDC  0DF5               	rlf	sendMatrix@nb,f
  3916     0FDD                     l2655:
  3917                           
  3918                           ;ledMatrix.c: 68:             nb |= b&0x01;
  3919     0FDD  0874               	movf	sendMatrix@b,w
  3920     0FDE  3901               	andlw	1
  3921     0FDF  00F3               	movwf	??_sendMatrix
  3922     0FE0  0873               	movf	??_sendMatrix,w
  3923     0FE1  04F5               	iorwf	sendMatrix@nb,f
  3924     0FE2                     l2657:
  3925                           
  3926                           ;ledMatrix.c: 69:             b >>= 1;
  3927     0FE2  1003               	clrc
  3928     0FE3  0CF4               	rrf	sendMatrix@b,f
  3929                           
  3930                           ;ledMatrix.c: 70:         }
  3931     0FE4  3001               	movlw	1
  3932     0FE5  00F3               	movwf	??_sendMatrix
  3933     0FE6  0873               	movf	??_sendMatrix,w
  3934     0FE7  07F6               	addwf	sendMatrix@j,f
  3935     0FE8                     l2659:
  3936     0FE8  3008               	movlw	8
  3937     0FE9  0276               	subwf	sendMatrix@j,w
  3938     0FEA  1C03               	skipc
  3939     0FEB  2FED               	goto	u1611
  3940     0FEC  2FEE               	goto	u1610
  3941     0FED                     u1611:
  3942     0FED  2FDB               	goto	l2653
  3943     0FEE                     u1610:
  3944     0FEE                     l2661:
  3945                           
  3946                           ;ledMatrix.c: 71:         txMAX7219(i+1,nb);
  3947     0FEE  0875               	movf	sendMatrix@nb,w
  3948     0FEF  00F1               	movwf	txMAX7219@dat0
  3949     0FF0  0877               	movf	sendMatrix@i,w
  3950     0FF1  3E01               	addlw	1
  3951     0FF2  318F  2777  318F   	fcall	_txMAX7219
  3952     0FF5                     l2663:
  3953                           
  3954                           ;ledMatrix.c: 75:     }
  3955     0FF5  3001               	movlw	1
  3956     0FF6  00F3               	movwf	??_sendMatrix
  3957     0FF7  0873               	movf	??_sendMatrix,w
  3958     0FF8  07F7               	addwf	sendMatrix@i,f
  3959     0FF9                     l2665:
  3960     0FF9  3008               	movlw	8
  3961     0FFA  0277               	subwf	sendMatrix@i,w
  3962     0FFB  1C03               	skipc
  3963     0FFC  2FFE               	goto	u1621
  3964     0FFD  2FFF               	goto	u1620
  3965     0FFE                     u1621:
  3966     0FFE  2FD3               	goto	l2643
  3967     0FFF                     u1620:
  3968     0FFF                     l400:
  3969     0FFF  0008               	return
  3970     1000                     __end_of_sendMatrix:
  3971                           
  3972                           	psect	text7
  3973     0F4D                     __ptext7:	
  3974 ;; *************** function _ledSet *****************
  3975 ;; Defined at:
  3976 ;;		line 31 in file "ledMatrix.c"
  3977 ;; Parameters:    Size  Location     Type
  3978 ;;  l               1    wreg     unsigned char 
  3979 ;;  c               1    4[BANK0 ] unsigned char 
  3980 ;; Auto vars:     Size  Location     Type
  3981 ;;  l               1   13[COMMON] unsigned char 
  3982 ;; Return value:  Size  Location     Type
  3983 ;;                  1    wreg      void 
  3984 ;; Registers used:
  3985 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3986 ;; Tracked objects:
  3987 ;;		On entry : 0/0
  3988 ;;		On exit  : 0/0
  3989 ;;		Unchanged: 0/0
  3990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3991 ;;      Params:         0       1       0       0       0       0
  3992 ;;      Locals:         1       0       0       0       0       0
  3993 ;;      Temps:          2       0       0       0       0       0
  3994 ;;      Totals:         3       1       0       0       0       0
  3995 ;;Total ram usage:        4 bytes
  3996 ;; Hardware stack levels used: 1
  3997 ;; This function calls:
  3998 ;;		Nothing
  3999 ;; This function is called by:
  4000 ;;		_main
  4001 ;;		_setLine
  4002 ;; This function uses a non-reentrant model
  4003 ;;
  4004                           
  4005     0F4D                     _ledSet:	
  4006                           ;psect for function _ledSet
  4007                           
  4008                           
  4009                           ;incstack = 0
  4010                           ; Regs used in _ledSet: [wreg+fsr1l+fsr1h+status,2+status,0]
  4011                           ;ledSet@l stored from wreg
  4012     0F4D  00FD               	movwf	ledSet@l
  4013     0F4E                     l2629:
  4014                           
  4015                           ;ledMatrix.c: 32:     (matrix[c]) |= 1UL << (l);
  4016     0F4E  3001               	movlw	1
  4017     0F4F  00FB               	movwf	??_ledSet
  4018     0F50  0A7D               	incf	ledSet@l,w
  4019     0F51  2F53               	goto	u1594
  4020     0F52                     u1595:
  4021     0F52  35FB               	lslf	??_ledSet,f
  4022     0F53                     u1594:
  4023     0F53  0B89               	decfsz	9,f
  4024     0F54  2F52               	goto	u1595
  4025     0F55  087B               	movf	??_ledSet,w
  4026     0F56  00FC               	movwf	??_ledSet+1
  4027     0F57  0020               	movlb	0	; select bank0
  4028     0F58  0824               	movf	ledSet@c,w
  4029     0F59  3EB0               	addlw	(low (_matrix| 0))& (0+255)
  4030     0F5A  0086               	movwf	6
  4031     0F5B  0187               	clrf	7
  4032     0F5C  087C               	movf	??_ledSet+1,w
  4033     0F5D  0481               	iorwf	1,f
  4034     0F5E                     l380:
  4035     0F5E  0008               	return
  4036     0F5F                     __end_of_ledSet:
  4037                           
  4038                           	psect	text8
  4039     0F3B                     __ptext8:	
  4040 ;; *************** function _ledClear *****************
  4041 ;; Defined at:
  4042 ;;		line 35 in file "ledMatrix.c"
  4043 ;; Parameters:    Size  Location     Type
  4044 ;;  l               1    wreg     unsigned char 
  4045 ;;  c               1    0[COMMON] unsigned char 
  4046 ;; Auto vars:     Size  Location     Type
  4047 ;;  l               1    3[COMMON] unsigned char 
  4048 ;; Return value:  Size  Location     Type
  4049 ;;                  1    wreg      void 
  4050 ;; Registers used:
  4051 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4052 ;; Tracked objects:
  4053 ;;		On entry : 0/0
  4054 ;;		On exit  : 0/0
  4055 ;;		Unchanged: 0/0
  4056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4057 ;;      Params:         1       0       0       0       0       0
  4058 ;;      Locals:         1       0       0       0       0       0
  4059 ;;      Temps:          2       0       0       0       0       0
  4060 ;;      Totals:         4       0       0       0       0       0
  4061 ;;Total ram usage:        4 bytes
  4062 ;; Hardware stack levels used: 1
  4063 ;; This function calls:
  4064 ;;		Nothing
  4065 ;; This function is called by:
  4066 ;;		_main
  4067 ;;		_setLine
  4068 ;; This function uses a non-reentrant model
  4069 ;;
  4070                           
  4071     0F3B                     _ledClear:	
  4072                           ;psect for function _ledClear
  4073                           
  4074                           
  4075                           ;incstack = 0
  4076                           ; Regs used in _ledClear: [wreg+fsr1l+fsr1h+status,2+status,0]
  4077                           ;ledClear@l stored from wreg
  4078     0F3B  00F3               	movwf	ledClear@l
  4079     0F3C                     l2631:
  4080                           
  4081                           ;ledMatrix.c: 36:     (matrix[c]) &= ~(1UL << (l));
  4082     0F3C  3001               	movlw	1
  4083     0F3D  00F1               	movwf	??_ledClear
  4084     0F3E  0A73               	incf	ledClear@l,w
  4085     0F3F  2F41               	goto	u1604
  4086     0F40                     u1605:
  4087     0F40  35F1               	lslf	??_ledClear,f
  4088     0F41                     u1604:
  4089     0F41  0B89               	decfsz	9,f
  4090     0F42  2F40               	goto	u1605
  4091     0F43  0871               	movf	??_ledClear,w
  4092     0F44  3AFF               	xorlw	255
  4093     0F45  00F2               	movwf	??_ledClear+1
  4094     0F46  0870               	movf	ledClear@c,w
  4095     0F47  3EB0               	addlw	(low (_matrix| 0))& (0+255)
  4096     0F48  0086               	movwf	6
  4097     0F49  0187               	clrf	7
  4098     0F4A  0872               	movf	??_ledClear+1,w
  4099     0F4B  0581               	andwf	1,f
  4100     0F4C                     l383:
  4101     0F4C  0008               	return
  4102     0F4D                     __end_of_ledClear:
  4103                           
  4104                           	psect	text9
  4105     00B3                     __ptext9:	
  4106 ;; *************** function _initMAX7219 *****************
  4107 ;; Defined at:
  4108 ;;		line 16 in file "ledMatrix.c"
  4109 ;; Parameters:    Size  Location     Type
  4110 ;;		None
  4111 ;; Auto vars:     Size  Location     Type
  4112 ;;		None
  4113 ;; Return value:  Size  Location     Type
  4114 ;;                  1    wreg      void 
  4115 ;; Registers used:
  4116 ;;		wreg, status,2, status,0, pclath, cstack
  4117 ;; Tracked objects:
  4118 ;;		On entry : 0/0
  4119 ;;		On exit  : 0/0
  4120 ;;		Unchanged: 0/0
  4121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4122 ;;      Params:         0       0       0       0       0       0
  4123 ;;      Locals:         0       0       0       0       0       0
  4124 ;;      Temps:          2       0       0       0       0       0
  4125 ;;      Totals:         2       0       0       0       0       0
  4126 ;;Total ram usage:        2 bytes
  4127 ;; Hardware stack levels used: 1
  4128 ;; Hardware stack levels required when called: 2
  4129 ;; This function calls:
  4130 ;;		_txMAX7219
  4131 ;; This function is called by:
  4132 ;;		_main
  4133 ;; This function uses a non-reentrant model
  4134 ;;
  4135                           
  4136     00B3                     _initMAX7219:	
  4137                           ;psect for function _initMAX7219
  4138                           
  4139     00B3                     l2615:	
  4140                           ;incstack = 0
  4141                           ; Regs used in _initMAX7219: [wreg+status,2+status,0+pclath+cstack]
  4142                           
  4143                           
  4144                           ;ledMatrix.c: 17:     LATBbits.LATB1 = 1;
  4145     00B3  0022               	movlb	2	; select bank2
  4146     00B4  148D               	bsf	13,1	;volatile
  4147                           
  4148                           ;ledMatrix.c: 18:     TRISBbits.TRISB1 = 0;
  4149     00B5  0021               	movlb	1	; select bank1
  4150     00B6  108D               	bcf	13,1	;volatile
  4151                           
  4152                           ;ledMatrix.c: 19:     SSP1CON1bits.SSPEN = 1;
  4153     00B7  0024               	movlb	4	; select bank4
  4154     00B8  1695               	bsf	21,5	;volatile
  4155     00B9                     l2617:
  4156                           
  4157                           ;ledMatrix.c: 20:     txMAX7219(0x09,0x00);
  4158     00B9  01F1               	clrf	txMAX7219@dat0
  4159     00BA  3009               	movlw	9
  4160     00BB  318F  2777  3180   	fcall	_txMAX7219
  4161                           
  4162                           ;ledMatrix.c: 21:     txMAX7219(0x0A,0x00);
  4163     00BE  01F1               	clrf	txMAX7219@dat0
  4164     00BF  300A               	movlw	10
  4165     00C0  318F  2777  3180   	fcall	_txMAX7219
  4166                           
  4167                           ;ledMatrix.c: 22:     txMAX7219(0x0C,0x00);
  4168     00C3  01F1               	clrf	txMAX7219@dat0
  4169     00C4  300C               	movlw	12
  4170     00C5  318F  2777  3180   	fcall	_txMAX7219
  4171                           
  4172                           ;ledMatrix.c: 23:     txMAX7219(0x0B,0x07);
  4173     00C8  3007               	movlw	7
  4174     00C9  00F1               	movwf	txMAX7219@dat0
  4175     00CA  300B               	movlw	11
  4176     00CB  318F  2777  3180   	fcall	_txMAX7219
  4177                           
  4178                           ;ledMatrix.c: 24:     txMAX7219(0x0C,0x01);
  4179     00CE  01F1               	clrf	txMAX7219@dat0
  4180     00CF  0AF1               	incf	txMAX7219@dat0,f
  4181     00D0  300C               	movlw	12
  4182     00D1  318F  2777  3180   	fcall	_txMAX7219
  4183                           
  4184                           ;ledMatrix.c: 25:     txMAX7219(0x0F,0x01);
  4185     00D4  01F1               	clrf	txMAX7219@dat0
  4186     00D5  0AF1               	incf	txMAX7219@dat0,f
  4187     00D6  300F               	movlw	15
  4188     00D7  318F  2777  3180   	fcall	_txMAX7219
  4189     00DA                     l2619:
  4190                           
  4191                           ;ledMatrix.c: 26:     _delay((unsigned long)((1000)*(8000000/4000.0)));
  4192     00DA  300B               	movlw	11
  4193     00DB  00F4               	movwf	??_initMAX7219+1
  4194     00DC  3026               	movlw	38
  4195     00DD  00F3               	movwf	??_initMAX7219
  4196     00DE  305E               	movlw	94
  4197     00DF                     u2377:
  4198     00DF  0B89               	decfsz	9,f
  4199     00E0  28DF               	goto	u2377
  4200     00E1  0BF3               	decfsz	??_initMAX7219,f
  4201     00E2  28DF               	goto	u2377
  4202     00E3  0BF4               	decfsz	??_initMAX7219+1,f
  4203     00E4  28DF               	goto	u2377
  4204     00E5                     l2621:
  4205                           
  4206                           ;ledMatrix.c: 27:     txMAX7219(0x0F,0x00);
  4207     00E5  01F1               	clrf	txMAX7219@dat0
  4208     00E6  300F               	movlw	15
  4209     00E7  318F  2777  3180   	fcall	_txMAX7219
  4210     00EA                     l2623:
  4211                           
  4212                           ;ledMatrix.c: 28:     txMAX7219(0x0C,0x01);
  4213     00EA  01F1               	clrf	txMAX7219@dat0
  4214     00EB  0AF1               	incf	txMAX7219@dat0,f
  4215     00EC  300C               	movlw	12
  4216     00ED  318F  2777  3180   	fcall	_txMAX7219
  4217     00F0                     l377:
  4218     00F0  0008               	return
  4219     00F1                     __end_of_initMAX7219:
  4220                           
  4221                           	psect	text10
  4222     0F77                     __ptext10:	
  4223 ;; *************** function _txMAX7219 *****************
  4224 ;; Defined at:
  4225 ;;		line 5 in file "ledMatrix.c"
  4226 ;; Parameters:    Size  Location     Type
  4227 ;;  addr0           1    wreg     unsigned char 
  4228 ;;  dat0            1    1[COMMON] unsigned char 
  4229 ;; Auto vars:     Size  Location     Type
  4230 ;;  addr0           1    2[COMMON] unsigned char 
  4231 ;; Return value:  Size  Location     Type
  4232 ;;                  1    wreg      void 
  4233 ;; Registers used:
  4234 ;;		wreg, status,2, status,0, pclath, cstack
  4235 ;; Tracked objects:
  4236 ;;		On entry : 0/0
  4237 ;;		On exit  : 0/0
  4238 ;;		Unchanged: 0/0
  4239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4240 ;;      Params:         1       0       0       0       0       0
  4241 ;;      Locals:         1       0       0       0       0       0
  4242 ;;      Temps:          0       0       0       0       0       0
  4243 ;;      Totals:         2       0       0       0       0       0
  4244 ;;Total ram usage:        2 bytes
  4245 ;; Hardware stack levels used: 1
  4246 ;; Hardware stack levels required when called: 1
  4247 ;; This function calls:
  4248 ;;		_SPI1_WriteByte
  4249 ;; This function is called by:
  4250 ;;		_initMAX7219
  4251 ;;		_sendMatrix
  4252 ;; This function uses a non-reentrant model
  4253 ;;
  4254                           
  4255     0F77                     _txMAX7219:	
  4256                           ;psect for function _txMAX7219
  4257                           
  4258                           
  4259                           ;incstack = 0
  4260                           ; Regs used in _txMAX7219: [wreg+status,2+status,0+pclath+cstack]
  4261                           ;txMAX7219@addr0 stored from wreg
  4262     0F77  00F2               	movwf	txMAX7219@addr0
  4263     0F78                     l2487:
  4264                           
  4265                           ;ledMatrix.c: 6:     LATBbits.LATB1 = 0;
  4266     0F78  0022               	movlb	2	; select bank2
  4267     0F79  108D               	bcf	13,1	;volatile
  4268     0F7A                     l2489:
  4269                           
  4270                           ;ledMatrix.c: 7:     SPI1_WriteByte(addr0);
  4271     0F7A  0872               	movf	txMAX7219@addr0,w
  4272     0F7B  318E  26CD  318F   	fcall	_SPI1_WriteByte
  4273     0F7E                     l368:	
  4274                           ;ledMatrix.c: 8:     while(!PIR1bits.SSP1IF);
  4275                           
  4276     0F7E  0020               	movlb	0	; select bank0
  4277     0F7F  1D91               	btfss	17,3	;volatile
  4278     0F80  2F82               	goto	u1341
  4279     0F81  2F83               	goto	u1340
  4280     0F82                     u1341:
  4281     0F82  2F7E               	goto	l368
  4282     0F83                     u1340:
  4283     0F83                     l370:
  4284                           
  4285                           ;ledMatrix.c: 9:     PIR1bits.SSP1IF = 0;
  4286     0F83  1191               	bcf	17,3	;volatile
  4287     0F84                     l2491:
  4288                           
  4289                           ;ledMatrix.c: 10:     SPI1_WriteByte(dat0);
  4290     0F84  0871               	movf	txMAX7219@dat0,w
  4291     0F85  318E  26CD  318F   	fcall	_SPI1_WriteByte
  4292     0F88                     l371:	
  4293                           ;ledMatrix.c: 11:     while(!PIR1bits.SSP1IF);
  4294                           
  4295     0F88  0020               	movlb	0	; select bank0
  4296     0F89  1D91               	btfss	17,3	;volatile
  4297     0F8A  2F8C               	goto	u1351
  4298     0F8B  2F8D               	goto	u1350
  4299     0F8C                     u1351:
  4300     0F8C  2F88               	goto	l371
  4301     0F8D                     u1350:
  4302     0F8D                     l373:
  4303                           
  4304                           ;ledMatrix.c: 12:     PIR1bits.SSP1IF = 0;
  4305     0F8D  1191               	bcf	17,3	;volatile
  4306                           
  4307                           ;ledMatrix.c: 13:     LATBbits.LATB1 = 1;
  4308     0F8E  0022               	movlb	2	; select bank2
  4309     0F8F  148D               	bsf	13,1	;volatile
  4310     0F90                     l374:
  4311     0F90  0008               	return
  4312     0F91                     __end_of_txMAX7219:
  4313                           
  4314                           	psect	text11
  4315     0ECD                     __ptext11:	
  4316 ;; *************** function _SPI1_WriteByte *****************
  4317 ;; Defined at:
  4318 ;;		line 131 in file "mcc_generated_files/spi1.c"
  4319 ;; Parameters:    Size  Location     Type
  4320 ;;  byte            1    wreg     unsigned char 
  4321 ;; Auto vars:     Size  Location     Type
  4322 ;;  byte            1    0[COMMON] unsigned char 
  4323 ;; Return value:  Size  Location     Type
  4324 ;;                  1    wreg      void 
  4325 ;; Registers used:
  4326 ;;		wreg
  4327 ;; Tracked objects:
  4328 ;;		On entry : 0/0
  4329 ;;		On exit  : 0/0
  4330 ;;		Unchanged: 0/0
  4331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4332 ;;      Params:         0       0       0       0       0       0
  4333 ;;      Locals:         1       0       0       0       0       0
  4334 ;;      Temps:          0       0       0       0       0       0
  4335 ;;      Totals:         1       0       0       0       0       0
  4336 ;;Total ram usage:        1 bytes
  4337 ;; Hardware stack levels used: 1
  4338 ;; This function calls:
  4339 ;;		Nothing
  4340 ;; This function is called by:
  4341 ;;		_txMAX7219
  4342 ;; This function uses a non-reentrant model
  4343 ;;
  4344                           
  4345     0ECD                     _SPI1_WriteByte:	
  4346                           ;psect for function _SPI1_WriteByte
  4347                           
  4348                           
  4349                           ;incstack = 0
  4350                           ; Regs used in _SPI1_WriteByte: [wreg]
  4351                           ;SPI1_WriteByte@byte stored from wreg
  4352     0ECD  00F0               	movwf	SPI1_WriteByte@byte
  4353     0ECE                     l2417:
  4354                           
  4355                           ;mcc_generated_files/spi1.c: 131: void SPI1_WriteByte(uint8_t byte);mcc_generated_files/
      +                          spi1.c: 132: {;mcc_generated_files/spi1.c: 133:     SSP1BUF = byte;
  4356     0ECE  0870               	movf	SPI1_WriteByte@byte,w
  4357     0ECF  0024               	movlb	4	; select bank4
  4358     0ED0  0091               	movwf	17	;volatile
  4359     0ED1                     l224:
  4360     0ED1  0008               	return
  4361     0ED2                     __end_of_SPI1_WriteByte:
  4362                           
  4363                           	psect	text12
  4364     0006                     __ptext12:	
  4365 ;; *************** function _deactivateElevator *****************
  4366 ;; Defined at:
  4367 ;;		line 50 in file "main.c"
  4368 ;; Parameters:    Size  Location     Type
  4369 ;;		None
  4370 ;; Auto vars:     Size  Location     Type
  4371 ;;		None
  4372 ;; Return value:  Size  Location     Type
  4373 ;;                  1    wreg      void 
  4374 ;; Registers used:
  4375 ;;		None
  4376 ;; Tracked objects:
  4377 ;;		On entry : 0/0
  4378 ;;		On exit  : 0/0
  4379 ;;		Unchanged: 0/0
  4380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4381 ;;      Params:         0       0       0       0       0       0
  4382 ;;      Locals:         0       0       0       0       0       0
  4383 ;;      Temps:          0       0       0       0       0       0
  4384 ;;      Totals:         0       0       0       0       0       0
  4385 ;;Total ram usage:        0 bytes
  4386 ;; Hardware stack levels used: 1
  4387 ;; This function calls:
  4388 ;;		Nothing
  4389 ;; This function is called by:
  4390 ;;		_main
  4391 ;; This function uses a non-reentrant model
  4392 ;;
  4393                           
  4394     0006                     _deactivateElevator:	
  4395                           ;psect for function _deactivateElevator
  4396                           
  4397     0006                     l2565:	
  4398                           ;incstack = 0
  4399                           ; Regs used in _deactivateElevator: []
  4400                           
  4401                           
  4402                           ;main.c: 51:     LATAbits.LATA3 = 0;
  4403     0006  0022               	movlb	2	; select bank2
  4404     0007  118C               	bcf	12,3	;volatile
  4405                           
  4406                           ;main.c: 52:     LATAbits.LATA7 = 0;
  4407     0008  138C               	bcf	12,7	;volatile
  4408                           
  4409                           ;main.c: 54:     TRISAbits.TRISA0 = 1;
  4410     0009  0021               	movlb	1	; select bank1
  4411     000A  140C               	bsf	12,0	;volatile
  4412                           
  4413                           ;main.c: 55:     TRISAbits.TRISA1 = 1;
  4414     000B  148C               	bsf	12,1	;volatile
  4415                           
  4416                           ;main.c: 56:     TRISAbits.TRISA2 = 1;
  4417     000C  150C               	bsf	12,2	;volatile
  4418                           
  4419                           ;main.c: 57:     TRISAbits.TRISA3 = 0;
  4420     000D  118C               	bcf	12,3	;volatile
  4421                           
  4422                           ;main.c: 58:     TRISAbits.TRISA4 = 1;
  4423     000E  160C               	bsf	12,4	;volatile
  4424                           
  4425                           ;main.c: 59:     TRISAbits.TRISA7 = 0;
  4426     000F  138C               	bcf	12,7	;volatile
  4427                           
  4428                           ;main.c: 60:     TRISBbits.TRISB0 = 1;
  4429     0010  140D               	bsf	13,0	;volatile
  4430                           
  4431                           ;main.c: 61:     TRISBbits.TRISB3 = 1;
  4432     0011  158D               	bsf	13,3	;volatile
  4433     0012                     l331:
  4434     0012  0008               	return
  4435     0013                     __end_of_deactivateElevator:
  4436                           
  4437                           	psect	text13
  4438     0431                     __ptext13:	
  4439 ;; *************** function _ai_run *****************
  4440 ;; Defined at:
  4441 ;;		line 110 in file "ai.c"
  4442 ;; Parameters:    Size  Location     Type
  4443 ;;		None
  4444 ;; Auto vars:     Size  Location     Type
  4445 ;;  i               1    6[BANK0 ] unsigned char 
  4446 ;;  i               1    5[BANK0 ] unsigned char 
  4447 ;;  i               1    7[BANK0 ] unsigned char 
  4448 ;;  j               1   11[BANK0 ] unsigned char 
  4449 ;;  j               1   10[BANK0 ] unsigned char 
  4450 ;;  i               1    4[BANK0 ] unsigned char 
  4451 ;;  z               2    8[BANK0 ] short 
  4452 ;; Return value:  Size  Location     Type
  4453 ;;                  1    wreg      unsigned char 
  4454 ;; Registers used:
  4455 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4456 ;; Tracked objects:
  4457 ;;		On entry : 0/0
  4458 ;;		On exit  : 0/0
  4459 ;;		Unchanged: 0/0
  4460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4461 ;;      Params:         0       0       0       0       0       0
  4462 ;;      Locals:         0       8       0       0       0       0
  4463 ;;      Temps:          3       0       0       0       0       0
  4464 ;;      Totals:         3       8       0       0       0       0
  4465 ;;Total ram usage:       11 bytes
  4466 ;; Hardware stack levels used: 1
  4467 ;; Hardware stack levels required when called: 1
  4468 ;; This function calls:
  4469 ;;		___awdiv
  4470 ;;		___wmul
  4471 ;;		_sigmoid
  4472 ;; This function is called by:
  4473 ;;		_main
  4474 ;; This function uses a non-reentrant model
  4475 ;;
  4476                           
  4477     0431                     _ai_run:	
  4478                           ;psect for function _ai_run
  4479                           
  4480     0431                     l2735:	
  4481                           ;incstack = 0
  4482                           ; Regs used in _ai_run: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4483                           
  4484                           
  4485                           ;ai.c: 111:     for(uint8_t i = 0; i < 8; i++){
  4486     0431  0020               	movlb	0	; select bank0
  4487     0432  01A4               	clrf	ai_run@i
  4488     0433                     l2741:
  4489                           
  4490                           ;ai.c: 112:         if(Y0[i]> 0){
  4491     0433  0824               	movf	ai_run@i,w
  4492     0434  3ED8               	addlw	(low (_Y0| 0))& (0+255)
  4493     0435  0086               	movwf	6
  4494     0436  0187               	clrf	7
  4495     0437  0801               	movf	1,w
  4496     0438  1903               	btfsc	3,2
  4497     0439  2C3B               	goto	u1751
  4498     043A  2C3C               	goto	u1750
  4499     043B                     u1751:
  4500     043B  2C42               	goto	l2745
  4501     043C                     u1750:
  4502     043C                     l2743:
  4503                           
  4504                           ;ai.c: 113:             Y0[i] = 255u;
  4505     043C  0824               	movf	ai_run@i,w
  4506     043D  3ED8               	addlw	(low (_Y0| 0))& (0+255)
  4507     043E  0086               	movwf	6
  4508     043F  0187               	clrf	7
  4509     0440  30FF               	movlw	255
  4510     0441  0081               	movwf	1
  4511     0442                     l2745:
  4512                           
  4513                           ;ai.c: 115:     }
  4514     0442  3001               	movlw	1
  4515     0443  00FB               	movwf	??_ai_run
  4516     0444  087B               	movf	??_ai_run,w
  4517     0445  07A4               	addwf	ai_run@i,f
  4518     0446                     l2747:
  4519     0446  3008               	movlw	8
  4520     0447  0224               	subwf	ai_run@i,w
  4521     0448  1C03               	skipc
  4522     0449  2C4B               	goto	u1761
  4523     044A  2C4C               	goto	u1760
  4524     044B                     u1761:
  4525     044B  2C33               	goto	l2741
  4526     044C                     u1760:
  4527     044C                     l2749:
  4528                           
  4529                           ;ai.c: 117:     int16_t z;;ai.c: 118:     for(uint8_t j = 0; j < 4; j++){
  4530     044C  01AA               	clrf	ai_run@j
  4531     044D                     l2755:
  4532                           
  4533                           ;ai.c: 119:         Z1[j] = B1[j];
  4534     044D  082A               	movf	ai_run@j,w
  4535     044E  3E4F               	addlw	(low (_Z1| 0))& (0+255)
  4536     044F  0086               	movwf	6
  4537     0450  0187               	clrf	7
  4538     0451  082A               	movf	ai_run@j,w
  4539     0452  3E57               	addlw	(low (_B1| 0))& (0+255)
  4540     0453  0084               	movwf	4
  4541     0454  0185               	clrf	5
  4542     0455  0800               	movf	0,w
  4543     0456  0081               	movwf	1
  4544     0457                     l2757:
  4545                           
  4546                           ;ai.c: 120:         for(uint8_t i = 0; i < 8; i++){
  4547     0457  01A5               	clrf	ai_run@i_874
  4548     0458                     l2763:
  4549                           
  4550                           ;ai.c: 121:             z = (int16_t)Y0[i];
  4551     0458  0825               	movf	ai_run@i_874,w
  4552     0459  3ED8               	addlw	(low (_Y0| 0))& (0+255)
  4553     045A  0086               	movwf	6
  4554     045B  0187               	clrf	7
  4555     045C  0801               	movf	1,w
  4556     045D  00FB               	movwf	??_ai_run
  4557     045E  01FC               	clrf	??_ai_run+1
  4558     045F  087B               	movf	??_ai_run,w
  4559     0460  00A8               	movwf	ai_run@z
  4560     0461  087C               	movf	??_ai_run+1,w
  4561     0462  00A9               	movwf	ai_run@z+1
  4562     0463                     l2765:
  4563                           
  4564                           ;ai.c: 122:             z *= W1[i][j];
  4565     0463  0825               	movf	ai_run@i_874,w
  4566     0464  00FB               	movwf	??_ai_run
  4567     0465  3002               	movlw	2
  4568     0466                     u1775:
  4569     0466  35FB               	lslf	??_ai_run,f
  4570     0467  0B89               	decfsz	9,f
  4571     0468  2C66               	goto	u1775
  4572     0469  3040               	movlw	(low (_W1| (0+256)))& (0+255)
  4573     046A  077B               	addwf	??_ai_run,w
  4574     046B  00FC               	movwf	??_ai_run+1
  4575     046C  082A               	movf	ai_run@j,w
  4576     046D  077C               	addwf	??_ai_run+1,w
  4577     046E  00FD               	movwf	??_ai_run+2
  4578     046F  087D               	movf	??_ai_run+2,w
  4579     0470  0086               	movwf	6
  4580     0471  3001               	movlw	1	; select bank2/3
  4581     0472  0087               	movwf	7
  4582     0473  0801               	movf	1,w
  4583     0474  00F0               	movwf	___wmul@multiplier
  4584     0475  01F1               	clrf	___wmul@multiplier+1
  4585     0476  1BF0               	btfsc	___wmul@multiplier,7
  4586     0477  03F1               	decf	___wmul@multiplier+1,f
  4587     0478  0829               	movf	ai_run@z+1,w
  4588     0479  00F3               	movwf	___wmul@multiplicand+1
  4589     047A  0828               	movf	ai_run@z,w
  4590     047B  00F2               	movwf	___wmul@multiplicand
  4591     047C  318F  2791  3184   	fcall	___wmul
  4592     047F  0871               	movf	?___wmul+1,w
  4593     0480  0020               	movlb	0	; select bank0
  4594     0481  00A9               	movwf	ai_run@z+1
  4595     0482  0870               	movf	?___wmul,w
  4596     0483  00A8               	movwf	ai_run@z
  4597     0484                     l2767:
  4598                           
  4599                           ;ai.c: 123:             z /= 255;
  4600     0484  30FF               	movlw	255
  4601     0485  00F6               	movwf	___awdiv@divisor
  4602     0486  3000               	movlw	0
  4603     0487  00F7               	movwf	___awdiv@divisor+1
  4604     0488  0829               	movf	ai_run@z+1,w
  4605     0489  00F9               	movwf	___awdiv@dividend+1
  4606     048A  0828               	movf	ai_run@z,w
  4607     048B  00F8               	movwf	___awdiv@dividend
  4608     048C  3180  20F1  3184   	fcall	___awdiv
  4609     048F  0877               	movf	?___awdiv+1,w
  4610     0490  0020               	movlb	0	; select bank0
  4611     0491  00A9               	movwf	ai_run@z+1
  4612     0492  0876               	movf	?___awdiv,w
  4613     0493  00A8               	movwf	ai_run@z
  4614     0494                     l2769:
  4615                           
  4616                           ;ai.c: 124:             Z1[j] += z;
  4617     0494  0828               	movf	ai_run@z,w
  4618     0495  00FB               	movwf	??_ai_run
  4619     0496  082A               	movf	ai_run@j,w
  4620     0497  3E4F               	addlw	(low (_Z1| 0))& (0+255)
  4621     0498  0086               	movwf	6
  4622     0499  0187               	clrf	7
  4623     049A  087B               	movf	??_ai_run,w
  4624     049B  0781               	addwf	1,f
  4625     049C                     l2771:
  4626                           
  4627                           ;ai.c: 125:         }
  4628     049C  3001               	movlw	1
  4629     049D  00FB               	movwf	??_ai_run
  4630     049E  087B               	movf	??_ai_run,w
  4631     049F  07A5               	addwf	ai_run@i_874,f
  4632     04A0                     l2773:
  4633     04A0  3008               	movlw	8
  4634     04A1  0225               	subwf	ai_run@i_874,w
  4635     04A2  1C03               	skipc
  4636     04A3  2CA5               	goto	u1781
  4637     04A4  2CA6               	goto	u1780
  4638     04A5                     u1781:
  4639     04A5  2C58               	goto	l2763
  4640     04A6                     u1780:
  4641     04A6                     l2775:
  4642                           
  4643                           ;ai.c: 126:         Y1[j] = sigmoid(Z1[j]);
  4644     04A6  082A               	movf	ai_run@j,w
  4645     04A7  3E5F               	addlw	(low (_Y1| 0))& (0+255)
  4646     04A8  0086               	movwf	6
  4647     04A9  0187               	clrf	7
  4648     04AA  082A               	movf	ai_run@j,w
  4649     04AB  3E4F               	addlw	(low (_Z1| 0))& (0+255)
  4650     04AC  0084               	movwf	4
  4651     04AD  0185               	clrf	5
  4652     04AE  0800               	movf	0,w
  4653     04AF  318F  272B  3184   	fcall	_sigmoid
  4654     04B2  0081               	movwf	1
  4655     04B3                     l2777:
  4656                           
  4657                           ;ai.c: 127:     }
  4658     04B3  3001               	movlw	1
  4659     04B4  00FB               	movwf	??_ai_run
  4660     04B5  087B               	movf	??_ai_run,w
  4661     04B6  0020               	movlb	0	; select bank0
  4662     04B7  07AA               	addwf	ai_run@j,f
  4663     04B8                     l2779:
  4664     04B8  3004               	movlw	4
  4665     04B9  022A               	subwf	ai_run@j,w
  4666     04BA  1C03               	skipc
  4667     04BB  2CBD               	goto	u1791
  4668     04BC  2CBE               	goto	u1790
  4669     04BD                     u1791:
  4670     04BD  2C4D               	goto	l2755
  4671     04BE                     u1790:
  4672     04BE                     l2781:
  4673                           
  4674                           ;ai.c: 128:     for(uint8_t j = 0; j < 4; j++){
  4675     04BE  01AB               	clrf	ai_run@j_875
  4676     04BF                     l2787:
  4677                           
  4678                           ;ai.c: 129:         Z2[j] = B2[j];
  4679     04BF  082B               	movf	ai_run@j_875,w
  4680     04C0  3E4B               	addlw	(low (_Z2| 0))& (0+255)
  4681     04C1  0086               	movwf	6
  4682     04C2  0187               	clrf	7
  4683     04C3  082B               	movf	ai_run@j_875,w
  4684     04C4  3E53               	addlw	(low (_B2| 0))& (0+255)
  4685     04C5  0084               	movwf	4
  4686     04C6  0185               	clrf	5
  4687     04C7  0800               	movf	0,w
  4688     04C8  0081               	movwf	1
  4689     04C9                     l2789:
  4690                           
  4691                           ;ai.c: 130:         for(uint8_t i = 0; i < 4; i++){
  4692     04C9  01A6               	clrf	ai_run@i_876
  4693     04CA                     l2795:
  4694                           
  4695                           ;ai.c: 131:             z = (int16_t)Y1[i];
  4696     04CA  0826               	movf	ai_run@i_876,w
  4697     04CB  3E5F               	addlw	(low (_Y1| 0))& (0+255)
  4698     04CC  0086               	movwf	6
  4699     04CD  0187               	clrf	7
  4700     04CE  0801               	movf	1,w
  4701     04CF  00FB               	movwf	??_ai_run
  4702     04D0  01FC               	clrf	??_ai_run+1
  4703     04D1  087B               	movf	??_ai_run,w
  4704     04D2  00A8               	movwf	ai_run@z
  4705     04D3  087C               	movf	??_ai_run+1,w
  4706     04D4  00A9               	movwf	ai_run@z+1
  4707     04D5                     l2797:
  4708                           
  4709                           ;ai.c: 132:             z *= W2[i][j];
  4710     04D5  0826               	movf	ai_run@i_876,w
  4711     04D6  00FB               	movwf	??_ai_run
  4712     04D7  3002               	movlw	2
  4713     04D8                     u1805:
  4714     04D8  35FB               	lslf	??_ai_run,f
  4715     04D9  0B89               	decfsz	9,f
  4716     04DA  2CD8               	goto	u1805
  4717     04DB  30A0               	movlw	(low (_W2| 0))& (0+255)
  4718     04DC  077B               	addwf	??_ai_run,w
  4719     04DD  00FC               	movwf	??_ai_run+1
  4720     04DE  082B               	movf	ai_run@j_875,w
  4721     04DF  077C               	addwf	??_ai_run+1,w
  4722     04E0  00FD               	movwf	??_ai_run+2
  4723     04E1  087D               	movf	??_ai_run+2,w
  4724     04E2  0086               	movwf	6
  4725     04E3  0187               	clrf	7
  4726     04E4  0801               	movf	1,w
  4727     04E5  00F0               	movwf	___wmul@multiplier
  4728     04E6  01F1               	clrf	___wmul@multiplier+1
  4729     04E7  1BF0               	btfsc	___wmul@multiplier,7
  4730     04E8  03F1               	decf	___wmul@multiplier+1,f
  4731     04E9  0829               	movf	ai_run@z+1,w
  4732     04EA  00F3               	movwf	___wmul@multiplicand+1
  4733     04EB  0828               	movf	ai_run@z,w
  4734     04EC  00F2               	movwf	___wmul@multiplicand
  4735     04ED  318F  2791  3184   	fcall	___wmul
  4736     04F0  0871               	movf	?___wmul+1,w
  4737     04F1  0020               	movlb	0	; select bank0
  4738     04F2  00A9               	movwf	ai_run@z+1
  4739     04F3  0870               	movf	?___wmul,w
  4740     04F4  00A8               	movwf	ai_run@z
  4741     04F5                     l2799:
  4742                           
  4743                           ;ai.c: 133:             z /= 255;
  4744     04F5  30FF               	movlw	255
  4745     04F6  00F6               	movwf	___awdiv@divisor
  4746     04F7  3000               	movlw	0
  4747     04F8  00F7               	movwf	___awdiv@divisor+1
  4748     04F9  0829               	movf	ai_run@z+1,w
  4749     04FA  00F9               	movwf	___awdiv@dividend+1
  4750     04FB  0828               	movf	ai_run@z,w
  4751     04FC  00F8               	movwf	___awdiv@dividend
  4752     04FD  3180  20F1  3184   	fcall	___awdiv
  4753     0500  0877               	movf	?___awdiv+1,w
  4754     0501  0020               	movlb	0	; select bank0
  4755     0502  00A9               	movwf	ai_run@z+1
  4756     0503  0876               	movf	?___awdiv,w
  4757     0504  00A8               	movwf	ai_run@z
  4758     0505                     l2801:
  4759                           
  4760                           ;ai.c: 134:             Z2[j] += z;
  4761     0505  0828               	movf	ai_run@z,w
  4762     0506  00FB               	movwf	??_ai_run
  4763     0507  082B               	movf	ai_run@j_875,w
  4764     0508  3E4B               	addlw	(low (_Z2| 0))& (0+255)
  4765     0509  0086               	movwf	6
  4766     050A  0187               	clrf	7
  4767     050B  087B               	movf	??_ai_run,w
  4768     050C  0781               	addwf	1,f
  4769     050D                     l2803:
  4770                           
  4771                           ;ai.c: 135:         }
  4772     050D  3001               	movlw	1
  4773     050E  00FB               	movwf	??_ai_run
  4774     050F  087B               	movf	??_ai_run,w
  4775     0510  07A6               	addwf	ai_run@i_876,f
  4776     0511                     l2805:
  4777     0511  3004               	movlw	4
  4778     0512  0226               	subwf	ai_run@i_876,w
  4779     0513  1C03               	skipc
  4780     0514  2D16               	goto	u1811
  4781     0515  2D17               	goto	u1810
  4782     0516                     u1811:
  4783     0516  2CCA               	goto	l2795
  4784     0517                     u1810:
  4785     0517                     l2807:
  4786                           
  4787                           ;ai.c: 136:         Y2[j] = sigmoid(Z2[j]);
  4788     0517  082B               	movf	ai_run@j_875,w
  4789     0518  3E5B               	addlw	(low (_Y2| 0))& (0+255)
  4790     0519  0086               	movwf	6
  4791     051A  0187               	clrf	7
  4792     051B  082B               	movf	ai_run@j_875,w
  4793     051C  3E4B               	addlw	(low (_Z2| 0))& (0+255)
  4794     051D  0084               	movwf	4
  4795     051E  0185               	clrf	5
  4796     051F  0800               	movf	0,w
  4797     0520  318F  272B  3184   	fcall	_sigmoid
  4798     0523  0081               	movwf	1
  4799     0524                     l2809:
  4800                           
  4801                           ;ai.c: 137:     }
  4802     0524  3001               	movlw	1
  4803     0525  00FB               	movwf	??_ai_run
  4804     0526  087B               	movf	??_ai_run,w
  4805     0527  0020               	movlb	0	; select bank0
  4806     0528  07AB               	addwf	ai_run@j_875,f
  4807     0529                     l2811:
  4808     0529  3004               	movlw	4
  4809     052A  022B               	subwf	ai_run@j_875,w
  4810     052B  1C03               	skipc
  4811     052C  2D2E               	goto	u1821
  4812     052D  2D2F               	goto	u1820
  4813     052E                     u1821:
  4814     052E  2CBF               	goto	l2787
  4815     052F                     u1820:
  4816     052F                     l2813:
  4817                           
  4818                           ;ai.c: 139:     choice = 0;
  4819     052F  01E6               	clrf	_choice
  4820     0530                     l2815:
  4821                           
  4822                           ;ai.c: 140:     for(uint8_t i = 1; i < 4; i++){
  4823     0530  01A7               	clrf	ai_run@i_877
  4824     0531  0AA7               	incf	ai_run@i_877,f
  4825     0532                     l2821:
  4826                           
  4827                           ;ai.c: 141:         if(Y2[i]>Y2[choice]){
  4828     0532  0866               	movf	_choice,w
  4829     0533  3E5B               	addlw	(low (_Y2| 0))& (0+255)
  4830     0534  0086               	movwf	6
  4831     0535  0187               	clrf	7
  4832     0536  0827               	movf	ai_run@i_877,w
  4833     0537  3E5B               	addlw	(low (_Y2| 0))& (0+255)
  4834     0538  0084               	movwf	4
  4835     0539  0185               	clrf	5
  4836     053A  0800               	movf	0,w
  4837     053B  0201               	subwf	1,w
  4838     053C  1803               	skipnc
  4839     053D  2D3F               	goto	u1831
  4840     053E  2D40               	goto	u1830
  4841     053F                     u1831:
  4842     053F  2D42               	goto	l2825
  4843     0540                     u1830:
  4844     0540                     l2823:
  4845                           
  4846                           ;ai.c: 142:             choice = i;
  4847     0540  0827               	movf	ai_run@i_877,w
  4848     0541  00E6               	movwf	_choice
  4849     0542                     l2825:
  4850                           
  4851                           ;ai.c: 144:     }
  4852     0542  3001               	movlw	1
  4853     0543  00FB               	movwf	??_ai_run
  4854     0544  087B               	movf	??_ai_run,w
  4855     0545  07A7               	addwf	ai_run@i_877,f
  4856     0546                     l2827:
  4857     0546  3004               	movlw	4
  4858     0547  0227               	subwf	ai_run@i_877,w
  4859     0548  1C03               	skipc
  4860     0549  2D4B               	goto	u1841
  4861     054A  2D4C               	goto	u1840
  4862     054B                     u1841:
  4863     054B  2D32               	goto	l2821
  4864     054C                     u1840:
  4865     054C                     l2829:
  4866                           
  4867                           ;ai.c: 145:     return choice;
  4868     054C  0866               	movf	_choice,w
  4869     054D                     l601:
  4870     054D  0008               	return
  4871     054E                     __end_of_ai_run:
  4872                           
  4873                           	psect	text14
  4874     0F2B                     __ptext14:	
  4875 ;; *************** function _sigmoid *****************
  4876 ;; Defined at:
  4877 ;;		line 8 in file "sigmoid.c"
  4878 ;; Parameters:    Size  Location     Type
  4879 ;;  z               1    wreg     char 
  4880 ;; Auto vars:     Size  Location     Type
  4881 ;;  z               1    1[COMMON] char 
  4882 ;; Return value:  Size  Location     Type
  4883 ;;                  1    wreg      unsigned char 
  4884 ;; Registers used:
  4885 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  4886 ;; Tracked objects:
  4887 ;;		On entry : 0/0
  4888 ;;		On exit  : 0/0
  4889 ;;		Unchanged: 0/0
  4890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4891 ;;      Params:         0       0       0       0       0       0
  4892 ;;      Locals:         1       0       0       0       0       0
  4893 ;;      Temps:          1       0       0       0       0       0
  4894 ;;      Totals:         2       0       0       0       0       0
  4895 ;;Total ram usage:        2 bytes
  4896 ;; Hardware stack levels used: 1
  4897 ;; This function calls:
  4898 ;;		Nothing
  4899 ;; This function is called by:
  4900 ;;		_ai_run
  4901 ;; This function uses a non-reentrant model
  4902 ;;
  4903                           
  4904     0F2B                     _sigmoid:	
  4905                           ;psect for function _sigmoid
  4906                           
  4907                           
  4908                           ;incstack = 0
  4909                           ; Regs used in _sigmoid: [wreg-fsr0h+status,2+status,0+pclath]
  4910                           ;sigmoid@z stored from wreg
  4911     0F2B  00F1               	movwf	sigmoid@z
  4912     0F2C                     l2493:
  4913                           
  4914                           ;sigmoid.c: 9:     return sigmoidValues[((uint8_t)z)>>4];
  4915     0F2C  0871               	movf	sigmoid@z,w
  4916     0F2D  00F0               	movwf	??_sigmoid
  4917     0F2E  3004               	movlw	4
  4918     0F2F                     u1365:
  4919     0F2F  36F0               	lsrf	??_sigmoid,f
  4920     0F30  0B89               	decfsz	9,f
  4921     0F31  2F2F               	goto	u1365
  4922     0F32  0870               	movf	??_sigmoid,w
  4923     0F33  3E10               	addlw	low (_sigmoidValues| (0+32768))
  4924     0F34  0084               	movwf	4
  4925     0F35  3088               	movlw	high (_sigmoidValues| (0+32768))
  4926     0F36  1803               	skipnc
  4927     0F37  3E01               	addlw	1
  4928     0F38  0085               	movwf	5
  4929     0F39  0800               	movf	0,w	;code access
  4930     0F3A                     l654:
  4931     0F3A  0008               	return
  4932     0F3B                     __end_of_sigmoid:
  4933                           
  4934                           	psect	text15
  4935     054E                     __ptext15:	
  4936 ;; *************** function _ai_propagate *****************
  4937 ;; Defined at:
  4938 ;;		line 148 in file "ai.c"
  4939 ;; Parameters:    Size  Location     Type
  4940 ;;  incentive       1    wreg     char 
  4941 ;; Auto vars:     Size  Location     Type
  4942 ;;  incentive       1   16[BANK0 ] char 
  4943 ;;  i               1   23[BANK0 ] unsigned char 
  4944 ;;  i               1   22[BANK0 ] unsigned char 
  4945 ;;  i               1   21[BANK0 ] unsigned char 
  4946 ;;  i               1   25[BANK0 ] unsigned char 
  4947 ;;  i               1   20[BANK0 ] unsigned char 
  4948 ;;  i               1   19[BANK0 ] unsigned char 
  4949 ;;  i               1   18[BANK0 ] unsigned char 
  4950 ;;  i               1   17[BANK0 ] unsigned char 
  4951 ;;  j               1   28[BANK0 ] unsigned char 
  4952 ;;  j               1   27[BANK0 ] unsigned char 
  4953 ;;  j               1   26[BANK0 ] unsigned char 
  4954 ;;  j               1   30[BANK0 ] unsigned char 
  4955 ;;  j               1   29[BANK0 ] unsigned char 
  4956 ;;  j               1   24[BANK0 ] unsigned char 
  4957 ;;  S               4   12[BANK0 ] unsigned char [4]
  4958 ;;  dz              2   31[BANK0 ] short 
  4959 ;; Return value:  Size  Location     Type
  4960 ;;                  1    wreg      void 
  4961 ;; Registers used:
  4962 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4963 ;; Tracked objects:
  4964 ;;		On entry : 0/0
  4965 ;;		On exit  : 0/0
  4966 ;;		Unchanged: 0/0
  4967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4968 ;;      Params:         0       0       0       0       0       0
  4969 ;;      Locals:         0      21       0       0       0       0
  4970 ;;      Temps:          0       8       0       0       0       0
  4971 ;;      Totals:         0      29       0       0       0       0
  4972 ;;Total ram usage:       29 bytes
  4973 ;; Hardware stack levels used: 1
  4974 ;; Hardware stack levels required when called: 1
  4975 ;; This function calls:
  4976 ;;		___awdiv
  4977 ;;		___wmul
  4978 ;;		_de_sigmoid
  4979 ;; This function is called by:
  4980 ;;		_main
  4981 ;; This function uses a non-reentrant model
  4982 ;;
  4983                           
  4984     054E                     _ai_propagate:	
  4985                           ;psect for function _ai_propagate
  4986                           
  4987                           
  4988                           ;incstack = 0
  4989                           ; Regs used in _ai_propagate: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4990                           ;ai_propagate@incentive stored from wreg
  4991     054E  0020               	movlb	0	; select bank0
  4992     054F  00B0               	movwf	ai_propagate@incentive
  4993     0550                     l2919:
  4994                           
  4995                           ;ai.c: 149:     if(incentive == 0){
  4996     0550  0830               	movf	ai_propagate@incentive,w
  4997     0551  1D03               	btfss	3,2
  4998     0552  2D54               	goto	u1971
  4999     0553  2D55               	goto	u1970
  5000     0554                     u1971:
  5001     0554  2D56               	goto	l2923
  5002     0555                     u1970:
  5003     0555  2FD8               	goto	l605
  5004     0556                     l2923:
  5005                           
  5006                           ;ai.c: 153:     if(incentive == -1){
  5007     0556  0A30               	incf	ai_propagate@incentive,w
  5008     0557  1D03               	btfss	3,2
  5009     0558  2D5A               	goto	u1981
  5010     0559  2D5B               	goto	u1980
  5011     055A                     u1981:
  5012     055A  2D5C               	goto	l2927
  5013     055B                     u1980:
  5014     055B                     l2925:
  5015                           
  5016                           ;ai.c: 154:         incentive = 0;
  5017     055B  01B0               	clrf	ai_propagate@incentive
  5018     055C                     l2927:
  5019                           
  5020                           ;ai.c: 157:     uint8_t S[4];;ai.c: 158:     if(incentive == 0){
  5021     055C  0830               	movf	ai_propagate@incentive,w
  5022     055D  1D03               	btfss	3,2
  5023     055E  2D60               	goto	u1991
  5024     055F  2D61               	goto	u1990
  5025     0560                     u1991:
  5026     0560  2D78               	goto	l2943
  5027     0561                     u1990:
  5028     0561                     l2929:
  5029                           
  5030                           ;ai.c: 159:         for(uint8_t i = 0; i < 4; i++){
  5031     0561  01B1               	clrf	ai_propagate@i
  5032     0562                     l2935:
  5033                           
  5034                           ;ai.c: 160:             S[i] = 255u;
  5035     0562  0831               	movf	ai_propagate@i,w
  5036     0563  3E2C               	addlw	(low (ai_propagate@S| 0))& (0+255)
  5037     0564  0086               	movwf	6
  5038     0565  0187               	clrf	7
  5039     0566  30FF               	movlw	255
  5040     0567  0081               	movwf	1
  5041     0568                     l2937:
  5042                           
  5043                           ;ai.c: 161:         }
  5044     0568  3001               	movlw	1
  5045     0569  00A4               	movwf	??_ai_propagate
  5046     056A  0824               	movf	??_ai_propagate,w
  5047     056B  07B1               	addwf	ai_propagate@i,f
  5048     056C                     l2939:
  5049     056C  3004               	movlw	4
  5050     056D  0231               	subwf	ai_propagate@i,w
  5051     056E  1C03               	skipc
  5052     056F  2D71               	goto	u2001
  5053     0570  2D72               	goto	u2000
  5054     0571                     u2001:
  5055     0571  2D62               	goto	l2935
  5056     0572                     u2000:
  5057     0572                     l2941:
  5058                           
  5059                           ;ai.c: 162:         S[choice] = 0;
  5060     0572  0866               	movf	_choice,w
  5061     0573  3E2C               	addlw	(low (ai_propagate@S| 0))& (0+255)
  5062     0574  0086               	movwf	6
  5063     0575  0187               	clrf	7
  5064     0576  0181               	clrf	1
  5065                           
  5066                           ;ai.c: 163:     } else{
  5067     0577  2D8E               	goto	l2957
  5068     0578                     l2943:
  5069                           
  5070                           ;ai.c: 164:         for(uint8_t i = 0; i < 4; i++){
  5071     0578  01B2               	clrf	ai_propagate@i_882
  5072     0579                     l2949:
  5073                           
  5074                           ;ai.c: 165:             S[i] = 0;
  5075     0579  0832               	movf	ai_propagate@i_882,w
  5076     057A  3E2C               	addlw	(low (ai_propagate@S| 0))& (0+255)
  5077     057B  0086               	movwf	6
  5078     057C  0187               	clrf	7
  5079     057D  0181               	clrf	1
  5080     057E                     l2951:
  5081                           
  5082                           ;ai.c: 166:         }
  5083     057E  3001               	movlw	1
  5084     057F  00A4               	movwf	??_ai_propagate
  5085     0580  0824               	movf	??_ai_propagate,w
  5086     0581  07B2               	addwf	ai_propagate@i_882,f
  5087     0582                     l2953:
  5088     0582  3004               	movlw	4
  5089     0583  0232               	subwf	ai_propagate@i_882,w
  5090     0584  1C03               	skipc
  5091     0585  2D87               	goto	u2011
  5092     0586  2D88               	goto	u2010
  5093     0587                     u2011:
  5094     0587  2D79               	goto	l2949
  5095     0588                     u2010:
  5096     0588                     l2955:
  5097                           
  5098                           ;ai.c: 167:         S[choice] = 255u;
  5099     0588  0866               	movf	_choice,w
  5100     0589  3E2C               	addlw	(low (ai_propagate@S| 0))& (0+255)
  5101     058A  0086               	movwf	6
  5102     058B  0187               	clrf	7
  5103     058C  30FF               	movlw	255
  5104     058D  0081               	movwf	1
  5105     058E                     l2957:
  5106                           
  5107                           ;ai.c: 170:     for(uint8_t j = 0; j < 4; j++){
  5108     058E  01B8               	clrf	ai_propagate@j
  5109     058F                     l2963:
  5110                           
  5111                           ;ai.c: 171:         DY1[j] = 0;
  5112     058F  0838               	movf	ai_propagate@j,w
  5113     0590  3EC0               	addlw	(low (_DY1| 0))& (0+255)
  5114     0591  0086               	movwf	6
  5115     0592  0187               	clrf	7
  5116     0593  0181               	clrf	1
  5117                           
  5118                           ;ai.c: 172:         DB1[j] = 0;
  5119     0594  0838               	movf	ai_propagate@j,w
  5120     0595  3EBC               	addlw	(low (_DB1| 0))& (0+255)
  5121     0596  0086               	movwf	6
  5122     0597  0187               	clrf	7
  5123     0598  0181               	clrf	1
  5124     0599                     l2965:
  5125                           
  5126                           ;ai.c: 173:         for(uint8_t i = 0; i < 8; i++){
  5127     0599  01B3               	clrf	ai_propagate@i_884
  5128     059A                     l2971:
  5129                           
  5130                           ;ai.c: 174:             DW1[i][j] = 0;
  5131     059A  0833               	movf	ai_propagate@i_884,w
  5132     059B  00A4               	movwf	??_ai_propagate
  5133     059C  3002               	movlw	2
  5134     059D                     u2025:
  5135     059D  35A4               	lslf	??_ai_propagate,f
  5136     059E  0B89               	decfsz	9,f
  5137     059F  2D9D               	goto	u2025
  5138     05A0  3020               	movlw	(low (_DW1| (0+256)))& (0+255)
  5139     05A1  0724               	addwf	??_ai_propagate,w
  5140     05A2  00A5               	movwf	??_ai_propagate+1
  5141     05A3  0838               	movf	ai_propagate@j,w
  5142     05A4  0725               	addwf	??_ai_propagate+1,w
  5143     05A5  00A6               	movwf	??_ai_propagate+2
  5144     05A6  0826               	movf	??_ai_propagate+2,w
  5145     05A7  0086               	movwf	6
  5146     05A8  3001               	movlw	1	; select bank2/3
  5147     05A9  0087               	movwf	7
  5148     05AA  0181               	clrf	1
  5149     05AB                     l2973:
  5150                           
  5151                           ;ai.c: 175:         }
  5152     05AB  3001               	movlw	1
  5153     05AC  00A4               	movwf	??_ai_propagate
  5154     05AD  0824               	movf	??_ai_propagate,w
  5155     05AE  07B3               	addwf	ai_propagate@i_884,f
  5156     05AF                     l2975:
  5157     05AF  3008               	movlw	8
  5158     05B0  0233               	subwf	ai_propagate@i_884,w
  5159     05B1  1C03               	skipc
  5160     05B2  2DB4               	goto	u2031
  5161     05B3  2DB5               	goto	u2030
  5162     05B4                     u2031:
  5163     05B4  2D9A               	goto	l2971
  5164     05B5                     u2030:
  5165     05B5                     l2977:
  5166                           
  5167                           ;ai.c: 176:     }
  5168     05B5  3001               	movlw	1
  5169     05B6  00A4               	movwf	??_ai_propagate
  5170     05B7  0824               	movf	??_ai_propagate,w
  5171     05B8  07B8               	addwf	ai_propagate@j,f
  5172     05B9                     l2979:
  5173     05B9  3004               	movlw	4
  5174     05BA  0238               	subwf	ai_propagate@j,w
  5175     05BB  1C03               	skipc
  5176     05BC  2DBE               	goto	u2041
  5177     05BD  2DBF               	goto	u2040
  5178     05BE                     u2041:
  5179     05BE  2D8F               	goto	l2963
  5180     05BF                     u2040:
  5181     05BF                     l2981:
  5182                           
  5183                           ;ai.c: 177:     for(uint8_t j = 0; j < 4; j++){
  5184     05BF  01BD               	clrf	ai_propagate@j_885
  5185     05C0                     l2987:
  5186                           
  5187                           ;ai.c: 178:         DY2[j] = (int8_t)(((int16_t)Y2[j] - (int16_t)S[j])>>1);
  5188     05C0  083D               	movf	ai_propagate@j_885,w
  5189     05C1  3EC4               	addlw	(low (_DY2| 0))& (0+255)
  5190     05C2  0086               	movwf	6
  5191     05C3  0187               	clrf	7
  5192     05C4  083D               	movf	ai_propagate@j_885,w
  5193     05C5  3E5B               	addlw	(low (_Y2| 0))& (0+255)
  5194     05C6  0084               	movwf	4
  5195     05C7  0185               	clrf	5
  5196     05C8  0800               	movf	0,w
  5197     05C9  00A4               	movwf	??_ai_propagate
  5198     05CA  01A5               	clrf	??_ai_propagate+1
  5199     05CB  083D               	movf	ai_propagate@j_885,w
  5200     05CC  3E2C               	addlw	(low (ai_propagate@S| 0))& (0+255)
  5201     05CD  0084               	movwf	4
  5202     05CE  0185               	clrf	5
  5203     05CF  0825               	movf	??_ai_propagate+1,w
  5204     05D0  00A7               	movwf	??_ai_propagate+3
  5205     05D1  0800               	movf	0,w
  5206     05D2  0224               	subwf	??_ai_propagate,w
  5207     05D3  00A6               	movwf	??_ai_propagate+2
  5208     05D4  1C03               	skipc
  5209     05D5  03A7               	decf	??_ai_propagate+3,f
  5210     05D6  0D27               	rlf	??_ai_propagate+3,w
  5211     05D7  0CA7               	rrf	??_ai_propagate+3,f
  5212     05D8  0CA6               	rrf	??_ai_propagate+2,f
  5213     05D9  0826               	movf	??_ai_propagate+2,w
  5214     05DA  0081               	movwf	1
  5215     05DB                     l2989:
  5216                           
  5217                           ;ai.c: 179:         DB2[j] = 0;
  5218     05DB  083D               	movf	ai_propagate@j_885,w
  5219     05DC  3EB8               	addlw	(low (_DB2| 0))& (0+255)
  5220     05DD  0086               	movwf	6
  5221     05DE  0187               	clrf	7
  5222     05DF  0181               	clrf	1
  5223     05E0                     l2991:
  5224                           
  5225                           ;ai.c: 180:         for(uint8_t i = 0; i < 4; i++){
  5226     05E0  01B4               	clrf	ai_propagate@i_886
  5227     05E1                     l2997:
  5228                           
  5229                           ;ai.c: 181:             DW2[i][j] = 0;
  5230     05E1  0834               	movf	ai_propagate@i_886,w
  5231     05E2  00A4               	movwf	??_ai_propagate
  5232     05E3  3002               	movlw	2
  5233     05E4                     u2055:
  5234     05E4  35A4               	lslf	??_ai_propagate,f
  5235     05E5  0B89               	decfsz	9,f
  5236     05E6  2DE4               	goto	u2055
  5237     05E7  3060               	movlw	(low (_DW2| (0+256)))& (0+255)
  5238     05E8  0724               	addwf	??_ai_propagate,w
  5239     05E9  00A5               	movwf	??_ai_propagate+1
  5240     05EA  083D               	movf	ai_propagate@j_885,w
  5241     05EB  0725               	addwf	??_ai_propagate+1,w
  5242     05EC  00A6               	movwf	??_ai_propagate+2
  5243     05ED  0826               	movf	??_ai_propagate+2,w
  5244     05EE  0086               	movwf	6
  5245     05EF  3001               	movlw	1	; select bank2/3
  5246     05F0  0087               	movwf	7
  5247     05F1  0181               	clrf	1
  5248     05F2                     l2999:
  5249                           
  5250                           ;ai.c: 182:         }
  5251     05F2  3001               	movlw	1
  5252     05F3  00A4               	movwf	??_ai_propagate
  5253     05F4  0824               	movf	??_ai_propagate,w
  5254     05F5  07B4               	addwf	ai_propagate@i_886,f
  5255     05F6                     l3001:
  5256     05F6  3004               	movlw	4
  5257     05F7  0234               	subwf	ai_propagate@i_886,w
  5258     05F8  1C03               	skipc
  5259     05F9  2DFB               	goto	u2061
  5260     05FA  2DFC               	goto	u2060
  5261     05FB                     u2061:
  5262     05FB  2DE1               	goto	l2997
  5263     05FC                     u2060:
  5264     05FC                     l3003:
  5265                           
  5266                           ;ai.c: 183:     }
  5267     05FC  3001               	movlw	1
  5268     05FD  00A4               	movwf	??_ai_propagate
  5269     05FE  0824               	movf	??_ai_propagate,w
  5270     05FF  07BD               	addwf	ai_propagate@j_885,f
  5271     0600                     l3005:
  5272     0600  3004               	movlw	4
  5273     0601  023D               	subwf	ai_propagate@j_885,w
  5274     0602  1C03               	skipc
  5275     0603  2E05               	goto	u2071
  5276     0604  2E06               	goto	u2070
  5277     0605                     u2071:
  5278     0605  2DC0               	goto	l2987
  5279     0606                     u2070:
  5280     0606                     l3007:
  5281                           
  5282                           ;ai.c: 185:     int16_t dz;;ai.c: 186:     for(uint8_t j = 0; j < 4; j++){
  5283     0606  01BE               	clrf	ai_propagate@j_888
  5284     0607                     l3013:
  5285                           
  5286                           ;ai.c: 187:         dz = (int16_t)de_sigmoid(Z2[j]);
  5287     0607  083E               	movf	ai_propagate@j_888,w
  5288     0608  3E4B               	addlw	(low (_Z2| 0))& (0+255)
  5289     0609  0086               	movwf	6
  5290     060A  0187               	clrf	7
  5291     060B  0801               	movf	1,w
  5292     060C  318F  271B  3185   	fcall	_de_sigmoid
  5293     060F  0020               	movlb	0	; select bank0
  5294     0610  00A4               	movwf	??_ai_propagate
  5295     0611  01A5               	clrf	??_ai_propagate+1
  5296     0612  0824               	movf	??_ai_propagate,w
  5297     0613  00BF               	movwf	ai_propagate@dz
  5298     0614  0825               	movf	??_ai_propagate+1,w
  5299     0615  00C0               	movwf	ai_propagate@dz+1
  5300     0616                     l3015:
  5301                           
  5302                           ;ai.c: 188:         dz *= (int16_t)DY2[j];
  5303     0616  083E               	movf	ai_propagate@j_888,w
  5304     0617  3EC4               	addlw	(low (_DY2| 0))& (0+255)
  5305     0618  0086               	movwf	6
  5306     0619  0187               	clrf	7
  5307     061A  0801               	movf	1,w
  5308     061B  00F0               	movwf	___wmul@multiplier
  5309     061C  01F1               	clrf	___wmul@multiplier+1
  5310     061D  1BF0               	btfsc	___wmul@multiplier,7
  5311     061E  03F1               	decf	___wmul@multiplier+1,f
  5312     061F  0840               	movf	ai_propagate@dz+1,w
  5313     0620  00F3               	movwf	___wmul@multiplicand+1
  5314     0621  083F               	movf	ai_propagate@dz,w
  5315     0622  00F2               	movwf	___wmul@multiplicand
  5316     0623  318F  2791  3185   	fcall	___wmul
  5317     0626  0871               	movf	?___wmul+1,w
  5318     0627  0020               	movlb	0	; select bank0
  5319     0628  00C0               	movwf	ai_propagate@dz+1
  5320     0629  0870               	movf	?___wmul,w
  5321     062A  00BF               	movwf	ai_propagate@dz
  5322     062B                     l3017:
  5323                           
  5324                           ;ai.c: 189:         dz /= 255;
  5325     062B  30FF               	movlw	255
  5326     062C  00F6               	movwf	___awdiv@divisor
  5327     062D  3000               	movlw	0
  5328     062E  00F7               	movwf	___awdiv@divisor+1
  5329     062F  0840               	movf	ai_propagate@dz+1,w
  5330     0630  00F9               	movwf	___awdiv@dividend+1
  5331     0631  083F               	movf	ai_propagate@dz,w
  5332     0632  00F8               	movwf	___awdiv@dividend
  5333     0633  3180  20F1  3185   	fcall	___awdiv
  5334     0636  0877               	movf	?___awdiv+1,w
  5335     0637  0020               	movlb	0	; select bank0
  5336     0638  00C0               	movwf	ai_propagate@dz+1
  5337     0639  0876               	movf	?___awdiv,w
  5338     063A  00BF               	movwf	ai_propagate@dz
  5339     063B                     l3019:
  5340                           
  5341                           ;ai.c: 191:         DB2[j] += (int8_t)dz;
  5342     063B  083F               	movf	ai_propagate@dz,w
  5343     063C  00A4               	movwf	??_ai_propagate
  5344     063D  083E               	movf	ai_propagate@j_888,w
  5345     063E  3EB8               	addlw	(low (_DB2| 0))& (0+255)
  5346     063F  0086               	movwf	6
  5347     0640  0187               	clrf	7
  5348     0641  0824               	movf	??_ai_propagate,w
  5349     0642  0781               	addwf	1,f
  5350     0643                     l3021:
  5351                           
  5352                           ;ai.c: 192:         for(uint8_t i = 0; i < 4; i++){
  5353     0643  01B9               	clrf	ai_propagate@i_889
  5354     0644                     l3027:
  5355                           
  5356                           ;ai.c: 193:             DY1[i] += (int8_t)((dz*(int16_t)W2[i][j])/127);
  5357     0644  307F               	movlw	127
  5358     0645  00F6               	movwf	___awdiv@divisor
  5359     0646  3000               	movlw	0
  5360     0647  00F7               	movwf	___awdiv@divisor+1
  5361     0648  0839               	movf	ai_propagate@i_889,w
  5362     0649  00A4               	movwf	??_ai_propagate
  5363     064A  3002               	movlw	2
  5364     064B                     u2085:
  5365     064B  35A4               	lslf	??_ai_propagate,f
  5366     064C  0B89               	decfsz	9,f
  5367     064D  2E4B               	goto	u2085
  5368     064E  30A0               	movlw	(low (_W2| 0))& (0+255)
  5369     064F  0724               	addwf	??_ai_propagate,w
  5370     0650  00A5               	movwf	??_ai_propagate+1
  5371     0651  083E               	movf	ai_propagate@j_888,w
  5372     0652  0725               	addwf	??_ai_propagate+1,w
  5373     0653  00A6               	movwf	??_ai_propagate+2
  5374     0654  0826               	movf	??_ai_propagate+2,w
  5375     0655  0086               	movwf	6
  5376     0656  0187               	clrf	7
  5377     0657  0801               	movf	1,w
  5378     0658  00F0               	movwf	___wmul@multiplier
  5379     0659  01F1               	clrf	___wmul@multiplier+1
  5380     065A  1BF0               	btfsc	___wmul@multiplier,7
  5381     065B  03F1               	decf	___wmul@multiplier+1,f
  5382     065C  0840               	movf	ai_propagate@dz+1,w
  5383     065D  00F3               	movwf	___wmul@multiplicand+1
  5384     065E  083F               	movf	ai_propagate@dz,w
  5385     065F  00F2               	movwf	___wmul@multiplicand
  5386     0660  318F  2791  3185   	fcall	___wmul
  5387     0663  0871               	movf	?___wmul+1,w
  5388     0664  00F9               	movwf	___awdiv@dividend+1
  5389     0665  0870               	movf	?___wmul,w
  5390     0666  00F8               	movwf	___awdiv@dividend
  5391     0667  3180  20F1  3185   	fcall	___awdiv
  5392     066A  0876               	movf	?___awdiv,w
  5393     066B  0020               	movlb	0	; select bank0
  5394     066C  00A7               	movwf	??_ai_propagate+3
  5395     066D  0839               	movf	ai_propagate@i_889,w
  5396     066E  3EC0               	addlw	(low (_DY1| 0))& (0+255)
  5397     066F  0086               	movwf	6
  5398     0670  0187               	clrf	7
  5399     0671  0827               	movf	??_ai_propagate+3,w
  5400     0672  0781               	addwf	1,f
  5401                           
  5402                           ;ai.c: 194:             DW2[i][j] += (int8_t)(((dz*(int16_t)Y1[i])/127)>>1);
  5403     0673  307F               	movlw	127
  5404     0674  00F6               	movwf	___awdiv@divisor
  5405     0675  3000               	movlw	0
  5406     0676  00F7               	movwf	___awdiv@divisor+1
  5407     0677  0839               	movf	ai_propagate@i_889,w
  5408     0678  3E5F               	addlw	(low (_Y1| 0))& (0+255)
  5409     0679  0086               	movwf	6
  5410     067A  0187               	clrf	7
  5411     067B  0801               	movf	1,w
  5412     067C  00A4               	movwf	??_ai_propagate
  5413     067D  01A5               	clrf	??_ai_propagate+1
  5414     067E  0824               	movf	??_ai_propagate,w
  5415     067F  00F0               	movwf	___wmul@multiplier
  5416     0680  0825               	movf	??_ai_propagate+1,w
  5417     0681  00F1               	movwf	___wmul@multiplier+1
  5418     0682  0840               	movf	ai_propagate@dz+1,w
  5419     0683  00F3               	movwf	___wmul@multiplicand+1
  5420     0684  083F               	movf	ai_propagate@dz,w
  5421     0685  00F2               	movwf	___wmul@multiplicand
  5422     0686  318F  2791  3185   	fcall	___wmul
  5423     0689  0871               	movf	?___wmul+1,w
  5424     068A  00F9               	movwf	___awdiv@dividend+1
  5425     068B  0870               	movf	?___wmul,w
  5426     068C  00F8               	movwf	___awdiv@dividend
  5427     068D  3180  20F1  3185   	fcall	___awdiv
  5428     0690  0876               	movf	?___awdiv,w
  5429     0691  0020               	movlb	0	; select bank0
  5430     0692  00A6               	movwf	??_ai_propagate+2
  5431     0693  0877               	movf	?___awdiv+1,w
  5432     0694  00A7               	movwf	??_ai_propagate+3
  5433     0695  0D27               	rlf	??_ai_propagate+3,w
  5434     0696  0CA7               	rrf	??_ai_propagate+3,f
  5435     0697  0CA6               	rrf	??_ai_propagate+2,f
  5436     0698  0826               	movf	??_ai_propagate+2,w
  5437     0699  00A8               	movwf	??_ai_propagate+4
  5438     069A  0839               	movf	ai_propagate@i_889,w
  5439     069B  00A9               	movwf	??_ai_propagate+5
  5440     069C  3002               	movlw	2
  5441     069D                     u2095:
  5442     069D  35A9               	lslf	??_ai_propagate+5,f
  5443     069E  0B89               	decfsz	9,f
  5444     069F  2E9D               	goto	u2095
  5445     06A0  3060               	movlw	(low (_DW2| (0+256)))& (0+255)
  5446     06A1  0729               	addwf	??_ai_propagate+5,w
  5447     06A2  00AA               	movwf	??_ai_propagate+6
  5448     06A3  083E               	movf	ai_propagate@j_888,w
  5449     06A4  072A               	addwf	??_ai_propagate+6,w
  5450     06A5  00AB               	movwf	??_ai_propagate+7
  5451     06A6  082B               	movf	??_ai_propagate+7,w
  5452     06A7  0086               	movwf	6
  5453     06A8  3001               	movlw	1	; select bank2/3
  5454     06A9  0087               	movwf	7
  5455     06AA  0828               	movf	??_ai_propagate+4,w
  5456     06AB  0781               	addwf	1,f
  5457     06AC                     l3029:
  5458                           
  5459                           ;ai.c: 195:         }
  5460     06AC  3001               	movlw	1
  5461     06AD  00A4               	movwf	??_ai_propagate
  5462     06AE  0824               	movf	??_ai_propagate,w
  5463     06AF  07B9               	addwf	ai_propagate@i_889,f
  5464     06B0                     l3031:
  5465     06B0  3004               	movlw	4
  5466     06B1  0239               	subwf	ai_propagate@i_889,w
  5467     06B2  1C03               	skipc
  5468     06B3  2EB5               	goto	u2101
  5469     06B4  2EB6               	goto	u2100
  5470     06B5                     u2101:
  5471     06B5  2E44               	goto	l3027
  5472     06B6                     u2100:
  5473     06B6                     l3033:
  5474                           
  5475                           ;ai.c: 196:     }
  5476     06B6  3001               	movlw	1
  5477     06B7  00A4               	movwf	??_ai_propagate
  5478     06B8  0824               	movf	??_ai_propagate,w
  5479     06B9  07BE               	addwf	ai_propagate@j_888,f
  5480     06BA                     l3035:
  5481     06BA  3004               	movlw	4
  5482     06BB  023E               	subwf	ai_propagate@j_888,w
  5483     06BC  1C03               	skipc
  5484     06BD  2EBF               	goto	u2111
  5485     06BE  2EC0               	goto	u2110
  5486     06BF                     u2111:
  5487     06BF  2E07               	goto	l3013
  5488     06C0                     u2110:
  5489     06C0                     l3037:
  5490                           
  5491                           ;ai.c: 197:     for(uint8_t j = 0; j < 4; j++){
  5492     06C0  01BA               	clrf	ai_propagate@j_890
  5493     06C1                     l3043:
  5494                           
  5495                           ;ai.c: 198:         dz = (int16_t)de_sigmoid(Z1[j]);
  5496     06C1  083A               	movf	ai_propagate@j_890,w
  5497     06C2  3E4F               	addlw	(low (_Z1| 0))& (0+255)
  5498     06C3  0086               	movwf	6
  5499     06C4  0187               	clrf	7
  5500     06C5  0801               	movf	1,w
  5501     06C6  318F  271B  3185   	fcall	_de_sigmoid
  5502     06C9  0020               	movlb	0	; select bank0
  5503     06CA  00A4               	movwf	??_ai_propagate
  5504     06CB  01A5               	clrf	??_ai_propagate+1
  5505     06CC  0824               	movf	??_ai_propagate,w
  5506     06CD  00BF               	movwf	ai_propagate@dz
  5507     06CE  0825               	movf	??_ai_propagate+1,w
  5508     06CF  00C0               	movwf	ai_propagate@dz+1
  5509     06D0                     l3045:
  5510                           
  5511                           ;ai.c: 199:         dz *= (int16_t)DY1[j];
  5512     06D0  083A               	movf	ai_propagate@j_890,w
  5513     06D1  3EC0               	addlw	(low (_DY1| 0))& (0+255)
  5514     06D2  0086               	movwf	6
  5515     06D3  0187               	clrf	7
  5516     06D4  0801               	movf	1,w
  5517     06D5  00F0               	movwf	___wmul@multiplier
  5518     06D6  01F1               	clrf	___wmul@multiplier+1
  5519     06D7  1BF0               	btfsc	___wmul@multiplier,7
  5520     06D8  03F1               	decf	___wmul@multiplier+1,f
  5521     06D9  0840               	movf	ai_propagate@dz+1,w
  5522     06DA  00F3               	movwf	___wmul@multiplicand+1
  5523     06DB  083F               	movf	ai_propagate@dz,w
  5524     06DC  00F2               	movwf	___wmul@multiplicand
  5525     06DD  318F  2791  3185   	fcall	___wmul
  5526     06E0  0871               	movf	?___wmul+1,w
  5527     06E1  0020               	movlb	0	; select bank0
  5528     06E2  00C0               	movwf	ai_propagate@dz+1
  5529     06E3  0870               	movf	?___wmul,w
  5530     06E4  00BF               	movwf	ai_propagate@dz
  5531     06E5                     l3047:
  5532                           
  5533                           ;ai.c: 200:         dz /= 255;
  5534     06E5  30FF               	movlw	255
  5535     06E6  00F6               	movwf	___awdiv@divisor
  5536     06E7  3000               	movlw	0
  5537     06E8  00F7               	movwf	___awdiv@divisor+1
  5538     06E9  0840               	movf	ai_propagate@dz+1,w
  5539     06EA  00F9               	movwf	___awdiv@dividend+1
  5540     06EB  083F               	movf	ai_propagate@dz,w
  5541     06EC  00F8               	movwf	___awdiv@dividend
  5542     06ED  3180  20F1  3185   	fcall	___awdiv
  5543     06F0  0877               	movf	?___awdiv+1,w
  5544     06F1  0020               	movlb	0	; select bank0
  5545     06F2  00C0               	movwf	ai_propagate@dz+1
  5546     06F3  0876               	movf	?___awdiv,w
  5547     06F4  00BF               	movwf	ai_propagate@dz
  5548     06F5                     l3049:
  5549                           
  5550                           ;ai.c: 202:         DB1[j] += (int8_t)dz;
  5551     06F5  083F               	movf	ai_propagate@dz,w
  5552     06F6  00A4               	movwf	??_ai_propagate
  5553     06F7  083A               	movf	ai_propagate@j_890,w
  5554     06F8  3EBC               	addlw	(low (_DB1| 0))& (0+255)
  5555     06F9  0086               	movwf	6
  5556     06FA  0187               	clrf	7
  5557     06FB  0824               	movf	??_ai_propagate,w
  5558     06FC  0781               	addwf	1,f
  5559     06FD                     l3051:
  5560                           
  5561                           ;ai.c: 203:         for(uint8_t i = 0; i < 8; i++){
  5562     06FD  01B5               	clrf	ai_propagate@i_891
  5563     06FE                     l3053:
  5564     06FE  3008               	movlw	8
  5565     06FF  0235               	subwf	ai_propagate@i_891,w
  5566     0700  1C03               	skipc
  5567     0701  2F03               	goto	u2121
  5568     0702  2F04               	goto	u2120
  5569     0703                     u2121:
  5570     0703  2F05               	goto	l3057
  5571     0704                     u2120:
  5572     0704  2F43               	goto	l3063
  5573     0705                     l3057:
  5574                           
  5575                           ;ai.c: 204:             DW1[i][j] += (int8_t)(((dz*(int16_t)Y0[i])/127)>>1);
  5576     0705  307F               	movlw	127
  5577     0706  00F6               	movwf	___awdiv@divisor
  5578     0707  3000               	movlw	0
  5579     0708  00F7               	movwf	___awdiv@divisor+1
  5580     0709  0835               	movf	ai_propagate@i_891,w
  5581     070A  3ED8               	addlw	(low (_Y0| 0))& (0+255)
  5582     070B  0086               	movwf	6
  5583     070C  0187               	clrf	7
  5584     070D  0801               	movf	1,w
  5585     070E  00A4               	movwf	??_ai_propagate
  5586     070F  01A5               	clrf	??_ai_propagate+1
  5587     0710  0824               	movf	??_ai_propagate,w
  5588     0711  00F0               	movwf	___wmul@multiplier
  5589     0712  0825               	movf	??_ai_propagate+1,w
  5590     0713  00F1               	movwf	___wmul@multiplier+1
  5591     0714  0840               	movf	ai_propagate@dz+1,w
  5592     0715  00F3               	movwf	___wmul@multiplicand+1
  5593     0716  083F               	movf	ai_propagate@dz,w
  5594     0717  00F2               	movwf	___wmul@multiplicand
  5595     0718  318F  2791  3185   	fcall	___wmul
  5596     071B  0871               	movf	?___wmul+1,w
  5597     071C  00F9               	movwf	___awdiv@dividend+1
  5598     071D  0870               	movf	?___wmul,w
  5599     071E  00F8               	movwf	___awdiv@dividend
  5600     071F  3180  20F1  3185   	fcall	___awdiv
  5601     0722  0876               	movf	?___awdiv,w
  5602     0723  0020               	movlb	0	; select bank0
  5603     0724  00A6               	movwf	??_ai_propagate+2
  5604     0725  0877               	movf	?___awdiv+1,w
  5605     0726  00A7               	movwf	??_ai_propagate+3
  5606     0727  0D27               	rlf	??_ai_propagate+3,w
  5607     0728  0CA7               	rrf	??_ai_propagate+3,f
  5608     0729  0CA6               	rrf	??_ai_propagate+2,f
  5609     072A  0826               	movf	??_ai_propagate+2,w
  5610     072B  00A8               	movwf	??_ai_propagate+4
  5611     072C  0835               	movf	ai_propagate@i_891,w
  5612     072D  00A9               	movwf	??_ai_propagate+5
  5613     072E  3002               	movlw	2
  5614     072F                     u2135:
  5615     072F  35A9               	lslf	??_ai_propagate+5,f
  5616     0730  0B89               	decfsz	9,f
  5617     0731  2F2F               	goto	u2135
  5618     0732  3020               	movlw	(low (_DW1| (0+256)))& (0+255)
  5619     0733  0729               	addwf	??_ai_propagate+5,w
  5620     0734  00AA               	movwf	??_ai_propagate+6
  5621     0735  083A               	movf	ai_propagate@j_890,w
  5622     0736  072A               	addwf	??_ai_propagate+6,w
  5623     0737  00AB               	movwf	??_ai_propagate+7
  5624     0738  082B               	movf	??_ai_propagate+7,w
  5625     0739  0086               	movwf	6
  5626     073A  3001               	movlw	1	; select bank2/3
  5627     073B  0087               	movwf	7
  5628     073C  0828               	movf	??_ai_propagate+4,w
  5629     073D  0781               	addwf	1,f
  5630     073E                     l3059:
  5631                           
  5632                           ;ai.c: 205:         }
  5633     073E  3001               	movlw	1
  5634     073F  00A4               	movwf	??_ai_propagate
  5635     0740  0824               	movf	??_ai_propagate,w
  5636     0741  07B5               	addwf	ai_propagate@i_891,f
  5637     0742  2EFE               	goto	l3053
  5638     0743                     l3063:
  5639                           
  5640                           ;ai.c: 206:     }
  5641     0743  3001               	movlw	1
  5642     0744  00A4               	movwf	??_ai_propagate
  5643     0745  0824               	movf	??_ai_propagate,w
  5644     0746  07BA               	addwf	ai_propagate@j_890,f
  5645     0747                     l3065:
  5646     0747  3004               	movlw	4
  5647     0748  023A               	subwf	ai_propagate@j_890,w
  5648     0749  1C03               	skipc
  5649     074A  2F4C               	goto	u2141
  5650     074B  2F4D               	goto	u2140
  5651     074C                     u2141:
  5652     074C  2EC1               	goto	l3043
  5653     074D                     u2140:
  5654     074D                     l3067:
  5655                           
  5656                           ;ai.c: 208:     for(uint8_t j = 0; j < 4; j++){
  5657     074D  01BB               	clrf	ai_propagate@j_892
  5658     074E                     l3069:
  5659     074E  3004               	movlw	4
  5660     074F  023B               	subwf	ai_propagate@j_892,w
  5661     0750  1C03               	skipc
  5662     0751  2F53               	goto	u2151
  5663     0752  2F54               	goto	u2150
  5664     0753                     u2151:
  5665     0753  2F55               	goto	l3073
  5666     0754                     u2150:
  5667     0754  2F92               	goto	l3091
  5668     0755                     l3073:
  5669                           
  5670                           ;ai.c: 209:         B2[j] -= DB2[j];
  5671     0755  083B               	movf	ai_propagate@j_892,w
  5672     0756  3EB8               	addlw	(low (_DB2| 0))& (0+255)
  5673     0757  0086               	movwf	6
  5674     0758  0187               	clrf	7
  5675     0759  083B               	movf	ai_propagate@j_892,w
  5676     075A  3E53               	addlw	(low (_B2| 0))& (0+255)
  5677     075B  0084               	movwf	4
  5678     075C  0185               	clrf	5
  5679     075D  0801               	movf	1,w
  5680     075E  0280               	subwf	0,f
  5681     075F                     l3075:
  5682                           
  5683                           ;ai.c: 210:         for(uint8_t i = 0; i < 4; i++){
  5684     075F  01B6               	clrf	ai_propagate@i_893
  5685     0760                     l3077:
  5686     0760  3004               	movlw	4
  5687     0761  0236               	subwf	ai_propagate@i_893,w
  5688     0762  1C03               	skipc
  5689     0763  2F65               	goto	u2161
  5690     0764  2F66               	goto	u2160
  5691     0765                     u2161:
  5692     0765  2F67               	goto	l3081
  5693     0766                     u2160:
  5694     0766  2F8D               	goto	l3087
  5695     0767                     l3081:
  5696                           
  5697                           ;ai.c: 211:             W2[i][j] -= DW2[i][j];
  5698     0767  0836               	movf	ai_propagate@i_893,w
  5699     0768  00A4               	movwf	??_ai_propagate
  5700     0769  3002               	movlw	2
  5701     076A                     u2175:
  5702     076A  35A4               	lslf	??_ai_propagate,f
  5703     076B  0B89               	decfsz	9,f
  5704     076C  2F6A               	goto	u2175
  5705     076D  3060               	movlw	(low (_DW2| (0+256)))& (0+255)
  5706     076E  0724               	addwf	??_ai_propagate,w
  5707     076F  00A5               	movwf	??_ai_propagate+1
  5708     0770  083B               	movf	ai_propagate@j_892,w
  5709     0771  0725               	addwf	??_ai_propagate+1,w
  5710     0772  00A6               	movwf	??_ai_propagate+2
  5711     0773  0826               	movf	??_ai_propagate+2,w
  5712     0774  0086               	movwf	6
  5713     0775  3001               	movlw	1	; select bank2/3
  5714     0776  0087               	movwf	7
  5715     0777  0836               	movf	ai_propagate@i_893,w
  5716     0778  00A7               	movwf	??_ai_propagate+3
  5717     0779  3002               	movlw	2
  5718     077A                     u2185:
  5719     077A  35A7               	lslf	??_ai_propagate+3,f
  5720     077B  0B89               	decfsz	9,f
  5721     077C  2F7A               	goto	u2185
  5722     077D  30A0               	movlw	(low (_W2| 0))& (0+255)
  5723     077E  0727               	addwf	??_ai_propagate+3,w
  5724     077F  00A8               	movwf	??_ai_propagate+4
  5725     0780  083B               	movf	ai_propagate@j_892,w
  5726     0781  0728               	addwf	??_ai_propagate+4,w
  5727     0782  00A9               	movwf	??_ai_propagate+5
  5728     0783  0829               	movf	??_ai_propagate+5,w
  5729     0784  0084               	movwf	4
  5730     0785  0185               	clrf	5
  5731     0786  0801               	movf	1,w
  5732     0787  0280               	subwf	0,f
  5733     0788                     l3083:
  5734                           
  5735                           ;ai.c: 212:         }
  5736     0788  3001               	movlw	1
  5737     0789  00A4               	movwf	??_ai_propagate
  5738     078A  0824               	movf	??_ai_propagate,w
  5739     078B  07B6               	addwf	ai_propagate@i_893,f
  5740     078C  2F60               	goto	l3077
  5741     078D                     l3087:
  5742                           
  5743                           ;ai.c: 213:     }
  5744     078D  3001               	movlw	1
  5745     078E  00A4               	movwf	??_ai_propagate
  5746     078F  0824               	movf	??_ai_propagate,w
  5747     0790  07BB               	addwf	ai_propagate@j_892,f
  5748     0791  2F4E               	goto	l3069
  5749     0792                     l3091:
  5750                           
  5751                           ;ai.c: 214:     for(uint8_t j = 0; j < 4; j++){
  5752     0792  01BC               	clrf	ai_propagate@j_894
  5753     0793                     l3093:
  5754     0793  3004               	movlw	4
  5755     0794  023C               	subwf	ai_propagate@j_894,w
  5756     0795  1C03               	skipc
  5757     0796  2F98               	goto	u2191
  5758     0797  2F99               	goto	u2190
  5759     0798                     u2191:
  5760     0798  2F9A               	goto	l3097
  5761     0799                     u2190:
  5762     0799  2FD8               	goto	l605
  5763     079A                     l3097:
  5764                           
  5765                           ;ai.c: 215:         B1[j] -= DB1[j];
  5766     079A  083C               	movf	ai_propagate@j_894,w
  5767     079B  3EBC               	addlw	(low (_DB1| 0))& (0+255)
  5768     079C  0086               	movwf	6
  5769     079D  0187               	clrf	7
  5770     079E  083C               	movf	ai_propagate@j_894,w
  5771     079F  3E57               	addlw	(low (_B1| 0))& (0+255)
  5772     07A0  0084               	movwf	4
  5773     07A1  0185               	clrf	5
  5774     07A2  0801               	movf	1,w
  5775     07A3  0280               	subwf	0,f
  5776     07A4                     l3099:
  5777                           
  5778                           ;ai.c: 216:         for(uint8_t i = 0; i < 8; i++){
  5779     07A4  01B7               	clrf	ai_propagate@i_895
  5780     07A5                     l3101:
  5781     07A5  3008               	movlw	8
  5782     07A6  0237               	subwf	ai_propagate@i_895,w
  5783     07A7  1C03               	skipc
  5784     07A8  2FAA               	goto	u2201
  5785     07A9  2FAB               	goto	u2200
  5786     07AA                     u2201:
  5787     07AA  2FAC               	goto	l3105
  5788     07AB                     u2200:
  5789     07AB  2FD3               	goto	l3111
  5790     07AC                     l3105:
  5791                           
  5792                           ;ai.c: 217:             W1[i][j] -= DW1[i][j];
  5793     07AC  0837               	movf	ai_propagate@i_895,w
  5794     07AD  00A4               	movwf	??_ai_propagate
  5795     07AE  3002               	movlw	2
  5796     07AF                     u2215:
  5797     07AF  35A4               	lslf	??_ai_propagate,f
  5798     07B0  0B89               	decfsz	9,f
  5799     07B1  2FAF               	goto	u2215
  5800     07B2  3020               	movlw	(low (_DW1| (0+256)))& (0+255)
  5801     07B3  0724               	addwf	??_ai_propagate,w
  5802     07B4  00A5               	movwf	??_ai_propagate+1
  5803     07B5  083C               	movf	ai_propagate@j_894,w
  5804     07B6  0725               	addwf	??_ai_propagate+1,w
  5805     07B7  00A6               	movwf	??_ai_propagate+2
  5806     07B8  0826               	movf	??_ai_propagate+2,w
  5807     07B9  0086               	movwf	6
  5808     07BA  3001               	movlw	1	; select bank2/3
  5809     07BB  0087               	movwf	7
  5810     07BC  0837               	movf	ai_propagate@i_895,w
  5811     07BD  00A7               	movwf	??_ai_propagate+3
  5812     07BE  3002               	movlw	2
  5813     07BF                     u2225:
  5814     07BF  35A7               	lslf	??_ai_propagate+3,f
  5815     07C0  0B89               	decfsz	9,f
  5816     07C1  2FBF               	goto	u2225
  5817     07C2  3040               	movlw	(low (_W1| (0+256)))& (0+255)
  5818     07C3  0727               	addwf	??_ai_propagate+3,w
  5819     07C4  00A8               	movwf	??_ai_propagate+4
  5820     07C5  083C               	movf	ai_propagate@j_894,w
  5821     07C6  0728               	addwf	??_ai_propagate+4,w
  5822     07C7  00A9               	movwf	??_ai_propagate+5
  5823     07C8  0829               	movf	??_ai_propagate+5,w
  5824     07C9  0084               	movwf	4
  5825     07CA  3001               	movlw	1	; select bank2/3
  5826     07CB  0085               	movwf	5
  5827     07CC  0801               	movf	1,w
  5828     07CD  0280               	subwf	0,f
  5829     07CE                     l3107:
  5830                           
  5831                           ;ai.c: 218:         }
  5832     07CE  3001               	movlw	1
  5833     07CF  00A4               	movwf	??_ai_propagate
  5834     07D0  0824               	movf	??_ai_propagate,w
  5835     07D1  07B7               	addwf	ai_propagate@i_895,f
  5836     07D2  2FA5               	goto	l3101
  5837     07D3                     l3111:
  5838                           
  5839                           ;ai.c: 219:     }
  5840     07D3  3001               	movlw	1
  5841     07D4  00A4               	movwf	??_ai_propagate
  5842     07D5  0824               	movf	??_ai_propagate,w
  5843     07D6  07BC               	addwf	ai_propagate@j_894,f
  5844     07D7  2F93               	goto	l3093
  5845     07D8                     l605:
  5846     07D8  0008               	return
  5847     07D9                     __end_of_ai_propagate:
  5848                           
  5849                           	psect	text16
  5850     0F1B                     __ptext16:	
  5851 ;; *************** function _de_sigmoid *****************
  5852 ;; Defined at:
  5853 ;;		line 12 in file "sigmoid.c"
  5854 ;; Parameters:    Size  Location     Type
  5855 ;;  z               1    wreg     char 
  5856 ;; Auto vars:     Size  Location     Type
  5857 ;;  z               1    1[COMMON] char 
  5858 ;; Return value:  Size  Location     Type
  5859 ;;                  1    wreg      unsigned char 
  5860 ;; Registers used:
  5861 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  5862 ;; Tracked objects:
  5863 ;;		On entry : 0/0
  5864 ;;		On exit  : 0/0
  5865 ;;		Unchanged: 0/0
  5866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5867 ;;      Params:         0       0       0       0       0       0
  5868 ;;      Locals:         1       0       0       0       0       0
  5869 ;;      Temps:          1       0       0       0       0       0
  5870 ;;      Totals:         2       0       0       0       0       0
  5871 ;;Total ram usage:        2 bytes
  5872 ;; Hardware stack levels used: 1
  5873 ;; This function calls:
  5874 ;;		Nothing
  5875 ;; This function is called by:
  5876 ;;		_ai_propagate
  5877 ;; This function uses a non-reentrant model
  5878 ;;
  5879                           
  5880     0F1B                     _de_sigmoid:	
  5881                           ;psect for function _de_sigmoid
  5882                           
  5883                           
  5884                           ;incstack = 0
  5885                           ; Regs used in _de_sigmoid: [wreg-fsr0h+status,2+status,0+pclath]
  5886                           ;de_sigmoid@z stored from wreg
  5887     0F1B  00F1               	movwf	de_sigmoid@z
  5888     0F1C                     l2497:
  5889                           
  5890                           ;sigmoid.c: 13:     return de_sigmoidValues[((uint8_t)z)>>4];
  5891     0F1C  0871               	movf	de_sigmoid@z,w
  5892     0F1D  00F0               	movwf	??_de_sigmoid
  5893     0F1E  3004               	movlw	4
  5894     0F1F                     u1375:
  5895     0F1F  36F0               	lsrf	??_de_sigmoid,f
  5896     0F20  0B89               	decfsz	9,f
  5897     0F21  2F1F               	goto	u1375
  5898     0F22  0870               	movf	??_de_sigmoid,w
  5899     0F23  3E00               	addlw	low (_de_sigmoidValues| (0+32768))
  5900     0F24  0084               	movwf	4
  5901     0F25  3088               	movlw	high (_de_sigmoidValues| (0+32768))
  5902     0F26  1803               	skipnc
  5903     0F27  3E01               	addlw	1
  5904     0F28  0085               	movwf	5
  5905     0F29  0800               	movf	0,w	;code access
  5906     0F2A                     l657:
  5907     0F2A  0008               	return
  5908     0F2B                     __end_of_de_sigmoid:
  5909                           
  5910                           	psect	text17
  5911     0F91                     __ptext17:	
  5912 ;; *************** function ___wmul *****************
  5913 ;; Defined at:
  5914 ;;		line 15 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  5915 ;; Parameters:    Size  Location     Type
  5916 ;;  multiplier      2    0[COMMON] unsigned int 
  5917 ;;  multiplicand    2    2[COMMON] unsigned int 
  5918 ;; Auto vars:     Size  Location     Type
  5919 ;;  product         2    4[COMMON] unsigned int 
  5920 ;; Return value:  Size  Location     Type
  5921 ;;                  2    0[COMMON] unsigned int 
  5922 ;; Registers used:
  5923 ;;		wreg, status,2, status,0
  5924 ;; Tracked objects:
  5925 ;;		On entry : 0/0
  5926 ;;		On exit  : 0/0
  5927 ;;		Unchanged: 0/0
  5928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5929 ;;      Params:         4       0       0       0       0       0
  5930 ;;      Locals:         2       0       0       0       0       0
  5931 ;;      Temps:          0       0       0       0       0       0
  5932 ;;      Totals:         6       0       0       0       0       0
  5933 ;;Total ram usage:        6 bytes
  5934 ;; Hardware stack levels used: 1
  5935 ;; This function calls:
  5936 ;;		Nothing
  5937 ;; This function is called by:
  5938 ;;		_ai_run
  5939 ;;		_ai_propagate
  5940 ;; This function uses a non-reentrant model
  5941 ;;
  5942                           
  5943     0F91                     ___wmul:	
  5944                           ;psect for function ___wmul
  5945                           
  5946     0F91                     l2501:	
  5947                           ;incstack = 0
  5948                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5949                           
  5950     0F91  01F4               	clrf	___wmul@product
  5951     0F92  01F5               	clrf	___wmul@product+1
  5952     0F93                     l2503:
  5953     0F93  1C70               	btfss	___wmul@multiplier,0
  5954     0F94  2F96               	goto	u1381
  5955     0F95  2F97               	goto	u1380
  5956     0F96                     u1381:
  5957     0F96  2F9B               	goto	l807
  5958     0F97                     u1380:
  5959     0F97                     l2505:
  5960     0F97  0872               	movf	___wmul@multiplicand,w
  5961     0F98  07F4               	addwf	___wmul@product,f
  5962     0F99  0873               	movf	___wmul@multiplicand+1,w
  5963     0F9A  3DF5               	addwfc	___wmul@product+1,f
  5964     0F9B                     l807:
  5965     0F9B  3001               	movlw	1
  5966     0F9C                     u1395:
  5967     0F9C  35F2               	lslf	___wmul@multiplicand,f
  5968     0F9D  0DF3               	rlf	___wmul@multiplicand+1,f
  5969     0F9E  0B89               	decfsz	9,f
  5970     0F9F  2F9C               	goto	u1395
  5971     0FA0                     l2507:
  5972     0FA0  3001               	movlw	1
  5973     0FA1                     u1405:
  5974     0FA1  36F1               	lsrf	___wmul@multiplier+1,f
  5975     0FA2  0CF0               	rrf	___wmul@multiplier,f
  5976     0FA3  0B89               	decfsz	9,f
  5977     0FA4  2FA1               	goto	u1405
  5978     0FA5                     l2509:
  5979     0FA5  0870               	movf	___wmul@multiplier,w
  5980     0FA6  0471               	iorwf	___wmul@multiplier+1,w
  5981     0FA7  1D03               	btfss	3,2
  5982     0FA8  2FAA               	goto	u1411
  5983     0FA9  2FAB               	goto	u1410
  5984     0FAA                     u1411:
  5985     0FAA  2F93               	goto	l2503
  5986     0FAB                     u1410:
  5987     0FAB                     l2511:
  5988     0FAB  0875               	movf	___wmul@product+1,w
  5989     0FAC  00F1               	movwf	?___wmul+1
  5990     0FAD  0874               	movf	___wmul@product,w
  5991     0FAE  00F0               	movwf	?___wmul
  5992     0FAF                     l809:
  5993     0FAF  0008               	return
  5994     0FB0                     __end_of___wmul:
  5995                           
  5996                           	psect	text18
  5997     00F1                     __ptext18:	
  5998 ;; *************** function ___awdiv *****************
  5999 ;; Defined at:
  6000 ;;		line 5 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
  6001 ;; Parameters:    Size  Location     Type
  6002 ;;  divisor         2    6[COMMON] int 
  6003 ;;  dividend        2    8[COMMON] int 
  6004 ;; Auto vars:     Size  Location     Type
  6005 ;;  quotient        2    2[BANK0 ] int 
  6006 ;;  sign            1    1[BANK0 ] unsigned char 
  6007 ;;  counter         1    0[BANK0 ] unsigned char 
  6008 ;; Return value:  Size  Location     Type
  6009 ;;                  2    6[COMMON] int 
  6010 ;; Registers used:
  6011 ;;		wreg, status,2, status,0
  6012 ;; Tracked objects:
  6013 ;;		On entry : 0/0
  6014 ;;		On exit  : 0/0
  6015 ;;		Unchanged: 0/0
  6016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6017 ;;      Params:         4       0       0       0       0       0
  6018 ;;      Locals:         0       4       0       0       0       0
  6019 ;;      Temps:          1       0       0       0       0       0
  6020 ;;      Totals:         5       4       0       0       0       0
  6021 ;;Total ram usage:        9 bytes
  6022 ;; Hardware stack levels used: 1
  6023 ;; This function calls:
  6024 ;;		Nothing
  6025 ;; This function is called by:
  6026 ;;		_main
  6027 ;;		_snake_move
  6028 ;;		_snake_getSurroundings
  6029 ;;		_ai_run
  6030 ;;		_ai_propagate
  6031 ;; This function uses a non-reentrant model
  6032 ;;
  6033                           
  6034     00F1                     ___awdiv:	
  6035                           ;psect for function ___awdiv
  6036                           
  6037     00F1                     l2515:	
  6038                           ;incstack = 0
  6039                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  6040                           
  6041     00F1  0020               	movlb	0	; select bank0
  6042     00F2  01A1               	clrf	___awdiv@sign
  6043     00F3                     l2517:
  6044     00F3  1FF7               	btfss	___awdiv@divisor+1,7
  6045     00F4  28F6               	goto	u1421
  6046     00F5  28F7               	goto	u1420
  6047     00F6                     u1421:
  6048     00F6  28FE               	goto	l2523
  6049     00F7                     u1420:
  6050     00F7                     l2519:
  6051     00F7  09F6               	comf	___awdiv@divisor,f
  6052     00F8  09F7               	comf	___awdiv@divisor+1,f
  6053     00F9  0AF6               	incf	___awdiv@divisor,f
  6054     00FA  1903               	skipnz
  6055     00FB  0AF7               	incf	___awdiv@divisor+1,f
  6056     00FC                     l2521:
  6057     00FC  01A1               	clrf	___awdiv@sign
  6058     00FD  0AA1               	incf	___awdiv@sign,f
  6059     00FE                     l2523:
  6060     00FE  1FF9               	btfss	___awdiv@dividend+1,7
  6061     00FF  2901               	goto	u1431
  6062     0100  2902               	goto	u1430
  6063     0101                     u1431:
  6064     0101  290B               	goto	l2529
  6065     0102                     u1430:
  6066     0102                     l2525:
  6067     0102  09F8               	comf	___awdiv@dividend,f
  6068     0103  09F9               	comf	___awdiv@dividend+1,f
  6069     0104  0AF8               	incf	___awdiv@dividend,f
  6070     0105  1903               	skipnz
  6071     0106  0AF9               	incf	___awdiv@dividend+1,f
  6072     0107                     l2527:
  6073     0107  3001               	movlw	1
  6074     0108  00FA               	movwf	??___awdiv
  6075     0109  087A               	movf	??___awdiv,w
  6076     010A  06A1               	xorwf	___awdiv@sign,f
  6077     010B                     l2529:
  6078     010B  01A2               	clrf	___awdiv@quotient
  6079     010C  01A3               	clrf	___awdiv@quotient+1
  6080     010D                     l2531:
  6081     010D  0876               	movf	___awdiv@divisor,w
  6082     010E  0477               	iorwf	___awdiv@divisor+1,w
  6083     010F  1903               	btfsc	3,2
  6084     0110  2912               	goto	u1441
  6085     0111  2913               	goto	u1440
  6086     0112                     u1441:
  6087     0112  2942               	goto	l2551
  6088     0113                     u1440:
  6089     0113                     l2533:
  6090     0113  01A0               	clrf	___awdiv@counter
  6091     0114  0AA0               	incf	___awdiv@counter,f
  6092     0115  291F               	goto	l2539
  6093     0116                     l2535:
  6094     0116  3001               	movlw	1
  6095     0117                     u1455:
  6096     0117  35F6               	lslf	___awdiv@divisor,f
  6097     0118  0DF7               	rlf	___awdiv@divisor+1,f
  6098     0119  0B89               	decfsz	9,f
  6099     011A  2917               	goto	u1455
  6100     011B                     l2537:
  6101     011B  3001               	movlw	1
  6102     011C  00FA               	movwf	??___awdiv
  6103     011D  087A               	movf	??___awdiv,w
  6104     011E  07A0               	addwf	___awdiv@counter,f
  6105     011F                     l2539:
  6106     011F  1FF7               	btfss	___awdiv@divisor+1,7
  6107     0120  2922               	goto	u1461
  6108     0121  2923               	goto	u1460
  6109     0122                     u1461:
  6110     0122  2916               	goto	l2535
  6111     0123                     u1460:
  6112     0123                     l2541:
  6113     0123  3001               	movlw	1
  6114     0124                     u1475:
  6115     0124  35A2               	lslf	___awdiv@quotient,f
  6116     0125  0DA3               	rlf	___awdiv@quotient+1,f
  6117     0126  0B89               	decfsz	9,f
  6118     0127  2924               	goto	u1475
  6119     0128  0877               	movf	___awdiv@divisor+1,w
  6120     0129  0279               	subwf	___awdiv@dividend+1,w
  6121     012A  1D03               	skipz
  6122     012B  292E               	goto	u1485
  6123     012C  0876               	movf	___awdiv@divisor,w
  6124     012D  0278               	subwf	___awdiv@dividend,w
  6125     012E                     u1485:
  6126     012E  1C03               	skipc
  6127     012F  2931               	goto	u1481
  6128     0130  2932               	goto	u1480
  6129     0131                     u1481:
  6130     0131  2937               	goto	l2547
  6131     0132                     u1480:
  6132     0132                     l2543:
  6133     0132  0876               	movf	___awdiv@divisor,w
  6134     0133  02F8               	subwf	___awdiv@dividend,f
  6135     0134  0877               	movf	___awdiv@divisor+1,w
  6136     0135  3BF9               	subwfb	___awdiv@dividend+1,f
  6137     0136                     l2545:
  6138     0136  1422               	bsf	___awdiv@quotient,0
  6139     0137                     l2547:
  6140     0137  3001               	movlw	1
  6141     0138                     u1495:
  6142     0138  36F7               	lsrf	___awdiv@divisor+1,f
  6143     0139  0CF6               	rrf	___awdiv@divisor,f
  6144     013A  0B89               	decfsz	9,f
  6145     013B  2938               	goto	u1495
  6146     013C                     l2549:
  6147     013C  3001               	movlw	1
  6148     013D  02A0               	subwf	___awdiv@counter,f
  6149     013E  1D03               	btfss	3,2
  6150     013F  2941               	goto	u1501
  6151     0140  2942               	goto	u1500
  6152     0141                     u1501:
  6153     0141  2923               	goto	l2541
  6154     0142                     u1500:
  6155     0142                     l2551:
  6156     0142  0821               	movf	___awdiv@sign,w
  6157     0143  1903               	btfsc	3,2
  6158     0144  2946               	goto	u1511
  6159     0145  2947               	goto	u1510
  6160     0146                     u1511:
  6161     0146  294C               	goto	l2555
  6162     0147                     u1510:
  6163     0147                     l2553:
  6164     0147  09A2               	comf	___awdiv@quotient,f
  6165     0148  09A3               	comf	___awdiv@quotient+1,f
  6166     0149  0AA2               	incf	___awdiv@quotient,f
  6167     014A  1903               	skipnz
  6168     014B  0AA3               	incf	___awdiv@quotient+1,f
  6169     014C                     l2555:
  6170     014C  0823               	movf	___awdiv@quotient+1,w
  6171     014D  00F7               	movwf	?___awdiv+1
  6172     014E  0822               	movf	___awdiv@quotient,w
  6173     014F  00F6               	movwf	?___awdiv
  6174     0150                     l960:
  6175     0150  0008               	return
  6176     0151                     __end_of___awdiv:
  6177                           
  6178                           	psect	text19
  6179     0151                     __ptext19:	
  6180 ;; *************** function _ai_initiate *****************
  6181 ;; Defined at:
  6182 ;;		line 87 in file "ai.c"
  6183 ;; Parameters:    Size  Location     Type
  6184 ;;		None
  6185 ;; Auto vars:     Size  Location     Type
  6186 ;;  i               1    8[BANK0 ] unsigned char 
  6187 ;;  i               1    7[BANK0 ] unsigned char 
  6188 ;;  j               1   10[BANK0 ] unsigned char 
  6189 ;;  j               1    9[BANK0 ] unsigned char 
  6190 ;; Return value:  Size  Location     Type
  6191 ;;                  1    wreg      void 
  6192 ;; Registers used:
  6193 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6194 ;; Tracked objects:
  6195 ;;		On entry : 0/0
  6196 ;;		On exit  : 0/0
  6197 ;;		Unchanged: 0/0
  6198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6199 ;;      Params:         0       0       0       0       0       0
  6200 ;;      Locals:         0       4       0       0       0       0
  6201 ;;      Temps:          0       3       0       0       0       0
  6202 ;;      Totals:         0       7       0       0       0       0
  6203 ;;Total ram usage:        7 bytes
  6204 ;; Hardware stack levels used: 1
  6205 ;; Hardware stack levels required when called: 2
  6206 ;; This function calls:
  6207 ;;		_rand
  6208 ;; This function is called by:
  6209 ;;		_main
  6210 ;; This function uses a non-reentrant model
  6211 ;;
  6212                           
  6213     0151                     _ai_initiate:	
  6214                           ;psect for function _ai_initiate
  6215                           
  6216     0151                     l2567:	
  6217                           ;incstack = 0
  6218                           ; Regs used in _ai_initiate: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6219                           
  6220                           
  6221                           ;ai.c: 91:     for(uint8_t j = 0; j < 4; j++){
  6222     0151  0020               	movlb	0	; select bank0
  6223     0152  01A9               	clrf	ai_initiate@j
  6224     0153                     l2573:
  6225                           
  6226                           ;ai.c: 92:         B1[j] = (int8_t)rand();
  6227     0153  0829               	movf	ai_initiate@j,w
  6228     0154  3E57               	addlw	(low (_B1| 0))& (0+255)
  6229     0155  0086               	movwf	6
  6230     0156  0187               	clrf	7
  6231     0157  3180  2046  3181   	fcall	_rand
  6232     015A  087C               	movf	?_rand,w
  6233     015B  0081               	movwf	1
  6234     015C                     l2575:
  6235                           
  6236                           ;ai.c: 93:         for(uint8_t i = 0; i < 8; i++){
  6237     015C  0020               	movlb	0	; select bank0
  6238     015D  01A7               	clrf	ai_initiate@i
  6239     015E                     l2581:
  6240                           
  6241                           ;ai.c: 94:             W1[i][j] = (int8_t)rand();
  6242     015E  0827               	movf	ai_initiate@i,w
  6243     015F  00A4               	movwf	??_ai_initiate
  6244     0160  3002               	movlw	2
  6245     0161                     u1535:
  6246     0161  35A4               	lslf	??_ai_initiate,f
  6247     0162  0B89               	decfsz	9,f
  6248     0163  2961               	goto	u1535
  6249     0164  3040               	movlw	(low (_W1| (0+256)))& (0+255)
  6250     0165  0724               	addwf	??_ai_initiate,w
  6251     0166  00A5               	movwf	??_ai_initiate+1
  6252     0167  0829               	movf	ai_initiate@j,w
  6253     0168  0725               	addwf	??_ai_initiate+1,w
  6254     0169  00A6               	movwf	??_ai_initiate+2
  6255     016A  0826               	movf	??_ai_initiate+2,w
  6256     016B  0086               	movwf	6
  6257     016C  3001               	movlw	1	; select bank2/3
  6258     016D  0087               	movwf	7
  6259     016E  3180  2046  3181   	fcall	_rand
  6260     0171  087C               	movf	?_rand,w
  6261     0172  0081               	movwf	1
  6262     0173                     l2583:
  6263                           
  6264                           ;ai.c: 95:         }
  6265     0173  3001               	movlw	1
  6266     0174  0020               	movlb	0	; select bank0
  6267     0175  00A4               	movwf	??_ai_initiate
  6268     0176  0824               	movf	??_ai_initiate,w
  6269     0177  07A7               	addwf	ai_initiate@i,f
  6270     0178                     l2585:
  6271     0178  3008               	movlw	8
  6272     0179  0227               	subwf	ai_initiate@i,w
  6273     017A  1C03               	skipc
  6274     017B  297D               	goto	u1541
  6275     017C  297E               	goto	u1540
  6276     017D                     u1541:
  6277     017D  295E               	goto	l2581
  6278     017E                     u1540:
  6279     017E                     l2587:
  6280                           
  6281                           ;ai.c: 96:     }
  6282     017E  3001               	movlw	1
  6283     017F  00A4               	movwf	??_ai_initiate
  6284     0180  0824               	movf	??_ai_initiate,w
  6285     0181  07A9               	addwf	ai_initiate@j,f
  6286     0182                     l2589:
  6287     0182  3004               	movlw	4
  6288     0183  0229               	subwf	ai_initiate@j,w
  6289     0184  1C03               	skipc
  6290     0185  2987               	goto	u1551
  6291     0186  2988               	goto	u1550
  6292     0187                     u1551:
  6293     0187  2953               	goto	l2573
  6294     0188                     u1550:
  6295     0188                     l2591:
  6296                           
  6297                           ;ai.c: 97:     for(uint8_t j = 0; j < 4; j++){
  6298     0188  01AA               	clrf	ai_initiate@j_867
  6299     0189                     l2597:
  6300                           
  6301                           ;ai.c: 98:         B2[j] = (int8_t)rand();
  6302     0189  082A               	movf	ai_initiate@j_867,w
  6303     018A  3E53               	addlw	(low (_B2| 0))& (0+255)
  6304     018B  0086               	movwf	6
  6305     018C  0187               	clrf	7
  6306     018D  3180  2046  3181   	fcall	_rand
  6307     0190  087C               	movf	?_rand,w
  6308     0191  0081               	movwf	1
  6309     0192                     l2599:
  6310                           
  6311                           ;ai.c: 99:         for(uint8_t i = 0; i < 4; i++){
  6312     0192  0020               	movlb	0	; select bank0
  6313     0193  01A8               	clrf	ai_initiate@i_868
  6314     0194                     l2605:
  6315                           
  6316                           ;ai.c: 100:             W2[i][j] = (int8_t)rand();
  6317     0194  0828               	movf	ai_initiate@i_868,w
  6318     0195  00A4               	movwf	??_ai_initiate
  6319     0196  3002               	movlw	2
  6320     0197                     u1565:
  6321     0197  35A4               	lslf	??_ai_initiate,f
  6322     0198  0B89               	decfsz	9,f
  6323     0199  2997               	goto	u1565
  6324     019A  30A0               	movlw	(low (_W2| 0))& (0+255)
  6325     019B  0724               	addwf	??_ai_initiate,w
  6326     019C  00A5               	movwf	??_ai_initiate+1
  6327     019D  082A               	movf	ai_initiate@j_867,w
  6328     019E  0725               	addwf	??_ai_initiate+1,w
  6329     019F  00A6               	movwf	??_ai_initiate+2
  6330     01A0  0826               	movf	??_ai_initiate+2,w
  6331     01A1  0086               	movwf	6
  6332     01A2  0187               	clrf	7
  6333     01A3  3180  2046  3181   	fcall	_rand
  6334     01A6  087C               	movf	?_rand,w
  6335     01A7  0081               	movwf	1
  6336     01A8                     l2607:
  6337                           
  6338                           ;ai.c: 101:         }
  6339     01A8  3001               	movlw	1
  6340     01A9  0020               	movlb	0	; select bank0
  6341     01AA  00A4               	movwf	??_ai_initiate
  6342     01AB  0824               	movf	??_ai_initiate,w
  6343     01AC  07A8               	addwf	ai_initiate@i_868,f
  6344     01AD                     l2609:
  6345     01AD  3004               	movlw	4
  6346     01AE  0228               	subwf	ai_initiate@i_868,w
  6347     01AF  1C03               	skipc
  6348     01B0  29B2               	goto	u1571
  6349     01B1  29B3               	goto	u1570
  6350     01B2                     u1571:
  6351     01B2  2994               	goto	l2605
  6352     01B3                     u1570:
  6353     01B3                     l2611:
  6354                           
  6355                           ;ai.c: 102:     }
  6356     01B3  3001               	movlw	1
  6357     01B4  00A4               	movwf	??_ai_initiate
  6358     01B5  0824               	movf	??_ai_initiate,w
  6359     01B6  07AA               	addwf	ai_initiate@j_867,f
  6360     01B7                     l2613:
  6361     01B7  3004               	movlw	4
  6362     01B8  022A               	subwf	ai_initiate@j_867,w
  6363     01B9  1C03               	skipc
  6364     01BA  29BC               	goto	u1581
  6365     01BB  29BD               	goto	u1580
  6366     01BC                     u1581:
  6367     01BC  2989               	goto	l2597
  6368     01BD                     u1580:
  6369     01BD                     l581:
  6370     01BD  0008               	return
  6371     01BE                     __end_of_ai_initiate:
  6372                           
  6373                           	psect	text20
  6374     0046                     __ptext20:	
  6375 ;; *************** function _rand *****************
  6376 ;; Defined at:
  6377 ;;		line 11 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\common\rand.c"
  6378 ;; Parameters:    Size  Location     Type
  6379 ;;		None
  6380 ;; Auto vars:     Size  Location     Type
  6381 ;;		None
  6382 ;; Return value:  Size  Location     Type
  6383 ;;                  2   12[COMMON] int 
  6384 ;; Registers used:
  6385 ;;		wreg, status,2, status,0, pclath, cstack
  6386 ;; Tracked objects:
  6387 ;;		On entry : 0/0
  6388 ;;		On exit  : 0/0
  6389 ;;		Unchanged: 0/0
  6390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6391 ;;      Params:         2       0       0       0       0       0
  6392 ;;      Locals:         0       0       0       0       0       0
  6393 ;;      Temps:          0       4       0       0       0       0
  6394 ;;      Totals:         2       4       0       0       0       0
  6395 ;;Total ram usage:        6 bytes
  6396 ;; Hardware stack levels used: 1
  6397 ;; Hardware stack levels required when called: 1
  6398 ;; This function calls:
  6399 ;;		___lmul
  6400 ;; This function is called by:
  6401 ;;		_snake_initiate
  6402 ;;		_snake_move
  6403 ;;		_ai_initiate
  6404 ;; This function uses a non-reentrant model
  6405 ;;
  6406                           
  6407     0046                     _rand:	
  6408                           ;psect for function _rand
  6409                           
  6410     0046                     l2419:	
  6411                           ;incstack = 0
  6412                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
  6413                           
  6414     0046  0020               	movlb	0	; select bank0
  6415     0047  086C               	movf	_seed+3,w
  6416     0048  00F3               	movwf	___lmul@multiplier+3
  6417     0049  086B               	movf	_seed+2,w
  6418     004A  00F2               	movwf	___lmul@multiplier+2
  6419     004B  086A               	movf	_seed+1,w
  6420     004C  00F1               	movwf	___lmul@multiplier+1
  6421     004D  0869               	movf	_seed,w
  6422     004E  00F0               	movwf	___lmul@multiplier
  6423     004F  304C               	movlw	76
  6424     0050  00F7               	movwf	___lmul@multiplicand+3
  6425     0051  3095               	movlw	149
  6426     0052  00F6               	movwf	___lmul@multiplicand+2
  6427     0053  307F               	movlw	127
  6428     0054  00F5               	movwf	___lmul@multiplicand+1
  6429     0055  302D               	movlw	45
  6430     0056  00F4               	movwf	___lmul@multiplicand
  6431     0057  3180  2013  3180   	fcall	___lmul
  6432     005A  3001               	movlw	1
  6433     005B  0770               	addwf	?___lmul,w
  6434     005C  0020               	movlb	0	; select bank0
  6435     005D  00E9               	movwf	_seed
  6436     005E  3000               	movlw	0
  6437     005F  3D71               	addwfc	?___lmul+1,w
  6438     0060  00EA               	movwf	_seed+1
  6439     0061  3000               	movlw	0
  6440     0062  3D72               	addwfc	?___lmul+2,w
  6441     0063  00EB               	movwf	_seed+2
  6442     0064  3000               	movlw	0
  6443     0065  3D73               	addwfc	?___lmul+3,w
  6444     0066  00EC               	movwf	_seed+3
  6445     0067                     l2421:
  6446     0067  0869               	movf	_seed,w
  6447     0068  00A0               	movwf	??_rand
  6448     0069  086A               	movf	_seed+1,w
  6449     006A  00A1               	movwf	??_rand+1
  6450     006B  086B               	movf	_seed+2,w
  6451     006C  00A2               	movwf	??_rand+2
  6452     006D  086C               	movf	_seed+3,w
  6453     006E  00A3               	movwf	??_rand+3
  6454     006F  3011               	movlw	17
  6455     0070                     u1305:
  6456     0070  36A3               	lsrf	??_rand+3,f
  6457     0071  0CA2               	rrf	??_rand+2,f
  6458     0072  0CA1               	rrf	??_rand+1,f
  6459     0073  0CA0               	rrf	??_rand,f
  6460     0074                     u1300:
  6461     0074  0B89               	decfsz	9,f
  6462     0075  2870               	goto	u1305
  6463     0076  0821               	movf	??_rand+1,w
  6464     0077  00FD               	movwf	?_rand+1
  6465     0078  0820               	movf	??_rand,w
  6466     0079  00FC               	movwf	?_rand
  6467     007A                     l1271:
  6468     007A  0008               	return
  6469     007B                     __end_of_rand:
  6470                           
  6471                           	psect	text21
  6472     0013                     __ptext21:	
  6473 ;; *************** function ___lmul *****************
  6474 ;; Defined at:
  6475 ;;		line 15 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\common\Umul32.c"
  6476 ;; Parameters:    Size  Location     Type
  6477 ;;  multiplier      4    0[COMMON] unsigned long 
  6478 ;;  multiplicand    4    4[COMMON] unsigned long 
  6479 ;; Auto vars:     Size  Location     Type
  6480 ;;  product         4    8[COMMON] unsigned long 
  6481 ;; Return value:  Size  Location     Type
  6482 ;;                  4    0[COMMON] unsigned long 
  6483 ;; Registers used:
  6484 ;;		wreg, status,2, status,0
  6485 ;; Tracked objects:
  6486 ;;		On entry : 0/0
  6487 ;;		On exit  : 0/0
  6488 ;;		Unchanged: 0/0
  6489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6490 ;;      Params:         8       0       0       0       0       0
  6491 ;;      Locals:         4       0       0       0       0       0
  6492 ;;      Temps:          0       0       0       0       0       0
  6493 ;;      Totals:        12       0       0       0       0       0
  6494 ;;Total ram usage:       12 bytes
  6495 ;; Hardware stack levels used: 1
  6496 ;; This function calls:
  6497 ;;		Nothing
  6498 ;; This function is called by:
  6499 ;;		_rand
  6500 ;; This function uses a non-reentrant model
  6501 ;;
  6502                           
  6503     0013                     ___lmul:	
  6504                           ;psect for function ___lmul
  6505                           
  6506     0013                     l2397:	
  6507                           ;incstack = 0
  6508                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  6509                           
  6510     0013  3000               	movlw	0
  6511     0014  00FB               	movwf	___lmul@product+3
  6512     0015  3000               	movlw	0
  6513     0016  00FA               	movwf	___lmul@product+2
  6514     0017  3000               	movlw	0
  6515     0018  00F9               	movwf	___lmul@product+1
  6516     0019  3000               	movlw	0
  6517     001A  00F8               	movwf	___lmul@product
  6518     001B                     l2399:
  6519     001B  1C70               	btfss	___lmul@multiplier,0
  6520     001C  281E               	goto	u1261
  6521     001D  281F               	goto	u1260
  6522     001E                     u1261:
  6523     001E  2827               	goto	l2403
  6524     001F                     u1260:
  6525     001F                     l2401:
  6526     001F  0874               	movf	___lmul@multiplicand,w
  6527     0020  07F8               	addwf	___lmul@product,f
  6528     0021  0875               	movf	___lmul@multiplicand+1,w
  6529     0022  3DF9               	addwfc	___lmul@product+1,f
  6530     0023  0876               	movf	___lmul@multiplicand+2,w
  6531     0024  3DFA               	addwfc	___lmul@product+2,f
  6532     0025  0877               	movf	___lmul@multiplicand+3,w
  6533     0026  3DFB               	addwfc	___lmul@product+3,f
  6534     0027                     l2403:
  6535     0027  3001               	movlw	1
  6536     0028                     u1275:
  6537     0028  35F4               	lslf	___lmul@multiplicand,f
  6538     0029  0DF5               	rlf	___lmul@multiplicand+1,f
  6539     002A  0DF6               	rlf	___lmul@multiplicand+2,f
  6540     002B  0DF7               	rlf	___lmul@multiplicand+3,f
  6541     002C  0B89               	decfsz	9,f
  6542     002D  2828               	goto	u1275
  6543     002E                     l2405:
  6544     002E  3001               	movlw	1
  6545     002F                     u1285:
  6546     002F  36F3               	lsrf	___lmul@multiplier+3,f
  6547     0030  0CF2               	rrf	___lmul@multiplier+2,f
  6548     0031  0CF1               	rrf	___lmul@multiplier+1,f
  6549     0032  0CF0               	rrf	___lmul@multiplier,f
  6550     0033  0B89               	decfsz	9,f
  6551     0034  282F               	goto	u1285
  6552     0035  0873               	movf	___lmul@multiplier+3,w
  6553     0036  0472               	iorwf	___lmul@multiplier+2,w
  6554     0037  0471               	iorwf	___lmul@multiplier+1,w
  6555     0038  0470               	iorwf	___lmul@multiplier,w
  6556     0039  1D03               	skipz
  6557     003A  283C               	goto	u1291
  6558     003B  283D               	goto	u1290
  6559     003C                     u1291:
  6560     003C  281B               	goto	l2399
  6561     003D                     u1290:
  6562     003D                     l2407:
  6563     003D  087B               	movf	___lmul@product+3,w
  6564     003E  00F3               	movwf	?___lmul+3
  6565     003F  087A               	movf	___lmul@product+2,w
  6566     0040  00F2               	movwf	?___lmul+2
  6567     0041  0879               	movf	___lmul@product+1,w
  6568     0042  00F1               	movwf	?___lmul+1
  6569     0043  0878               	movf	___lmul@product,w
  6570     0044  00F0               	movwf	?___lmul
  6571     0045                     l821:
  6572     0045  0008               	return
  6573     0046                     __end_of___lmul:
  6574                           
  6575                           	psect	text22
  6576     0EC4                     __ptext22:	
  6577 ;; *************** function _ai_getInputField *****************
  6578 ;; Defined at:
  6579 ;;		line 106 in file "ai.c"
  6580 ;; Parameters:    Size  Location     Type
  6581 ;;		None
  6582 ;; Auto vars:     Size  Location     Type
  6583 ;;		None
  6584 ;; Return value:  Size  Location     Type
  6585 ;;                  1    wreg      PTR unsigned char 
  6586 ;; Registers used:
  6587 ;;		wreg
  6588 ;; Tracked objects:
  6589 ;;		On entry : 0/0
  6590 ;;		On exit  : 0/0
  6591 ;;		Unchanged: 0/0
  6592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6593 ;;      Params:         0       0       0       0       0       0
  6594 ;;      Locals:         0       0       0       0       0       0
  6595 ;;      Temps:          0       0       0       0       0       0
  6596 ;;      Totals:         0       0       0       0       0       0
  6597 ;;Total ram usage:        0 bytes
  6598 ;; Hardware stack levels used: 1
  6599 ;; This function calls:
  6600 ;;		Nothing
  6601 ;; This function is called by:
  6602 ;;		_main
  6603 ;; This function uses a non-reentrant model
  6604 ;;
  6605                           
  6606     0EC4                     _ai_getInputField:	
  6607                           ;psect for function _ai_getInputField
  6608                           
  6609     0EC4                     l2667:	
  6610                           ;incstack = 0
  6611                           ; Regs used in _ai_getInputField: [wreg]
  6612                           
  6613                           
  6614                           ;ai.c: 107:     return Y0;
  6615     0EC4  30D8               	movlw	(low (_Y0| 0))& (0+255)
  6616     0EC5                     l584:
  6617     0EC5  0008               	return
  6618     0EC6                     __end_of_ai_getInputField:
  6619                           
  6620                           	psect	text23
  6621     0F0B                     __ptext23:	
  6622 ;; *************** function _SYSTEM_Initialize *****************
  6623 ;; Defined at:
  6624 ;;		line 50 in file "mcc_generated_files/mcc.c"
  6625 ;; Parameters:    Size  Location     Type
  6626 ;;		None
  6627 ;; Auto vars:     Size  Location     Type
  6628 ;;		None
  6629 ;; Return value:  Size  Location     Type
  6630 ;;                  1    wreg      void 
  6631 ;; Registers used:
  6632 ;;		wreg, status,2, status,0, pclath, cstack
  6633 ;; Tracked objects:
  6634 ;;		On entry : 0/0
  6635 ;;		On exit  : 0/0
  6636 ;;		Unchanged: 0/0
  6637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6638 ;;      Params:         0       0       0       0       0       0
  6639 ;;      Locals:         0       0       0       0       0       0
  6640 ;;      Temps:          0       0       0       0       0       0
  6641 ;;      Totals:         0       0       0       0       0       0
  6642 ;;Total ram usage:        0 bytes
  6643 ;; Hardware stack levels used: 1
  6644 ;; Hardware stack levels required when called: 2
  6645 ;; This function calls:
  6646 ;;		_EUSART_Initialize
  6647 ;;		_OSCILLATOR_Initialize
  6648 ;;		_PIN_MANAGER_Initialize
  6649 ;;		_SPI1_Initialize
  6650 ;;		_WDT_Initialize
  6651 ;; This function is called by:
  6652 ;;		_main
  6653 ;; This function uses a non-reentrant model
  6654 ;;
  6655                           
  6656     0F0B                     _SYSTEM_Initialize:	
  6657                           ;psect for function _SYSTEM_Initialize
  6658                           
  6659     0F0B                     l2563:	
  6660                           ;incstack = 0
  6661                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6662                           
  6663                           
  6664                           ;mcc_generated_files/mcc.c: 53:     SPI1_Initialize();
  6665     0F0B  318E  26FF  318F   	fcall	_SPI1_Initialize
  6666                           
  6667                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  6668     0F0E  318F  275F  318F   	fcall	_PIN_MANAGER_Initialize
  6669                           
  6670                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  6671     0F11  318E  26F0  318F   	fcall	_OSCILLATOR_Initialize
  6672                           
  6673                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  6674     0F14  318E  26C9  318F   	fcall	_WDT_Initialize
  6675                           
  6676                           ;mcc_generated_files/mcc.c: 57:     EUSART_Initialize();
  6677     0F17  318F  27B0  318F   	fcall	_EUSART_Initialize
  6678     0F1A                     l248:
  6679     0F1A  0008               	return
  6680     0F1B                     __end_of_SYSTEM_Initialize:
  6681                           
  6682                           	psect	text24
  6683     0EC9                     __ptext24:	
  6684 ;; *************** function _WDT_Initialize *****************
  6685 ;; Defined at:
  6686 ;;		line 70 in file "mcc_generated_files/mcc.c"
  6687 ;; Parameters:    Size  Location     Type
  6688 ;;		None
  6689 ;; Auto vars:     Size  Location     Type
  6690 ;;		None
  6691 ;; Return value:  Size  Location     Type
  6692 ;;                  1    wreg      void 
  6693 ;; Registers used:
  6694 ;;		wreg
  6695 ;; Tracked objects:
  6696 ;;		On entry : 0/0
  6697 ;;		On exit  : 0/0
  6698 ;;		Unchanged: 0/0
  6699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6700 ;;      Params:         0       0       0       0       0       0
  6701 ;;      Locals:         0       0       0       0       0       0
  6702 ;;      Temps:          0       0       0       0       0       0
  6703 ;;      Totals:         0       0       0       0       0       0
  6704 ;;Total ram usage:        0 bytes
  6705 ;; Hardware stack levels used: 1
  6706 ;; This function calls:
  6707 ;;		Nothing
  6708 ;; This function is called by:
  6709 ;;		_SYSTEM_Initialize
  6710 ;; This function uses a non-reentrant model
  6711 ;;
  6712                           
  6713     0EC9                     _WDT_Initialize:	
  6714                           ;psect for function _WDT_Initialize
  6715                           
  6716     0EC9                     l2465:	
  6717                           ;incstack = 0
  6718                           ; Regs used in _WDT_Initialize: [wreg]
  6719                           
  6720                           
  6721                           ;mcc_generated_files/mcc.c: 73:     WDTCON = 0x16;
  6722     0EC9  3016               	movlw	22
  6723     0ECA  0021               	movlb	1	; select bank1
  6724     0ECB  0097               	movwf	23	;volatile
  6725     0ECC                     l254:
  6726     0ECC  0008               	return
  6727     0ECD                     __end_of_WDT_Initialize:
  6728                           
  6729                           	psect	text25
  6730     0EFF                     __ptext25:	
  6731 ;; *************** function _SPI1_Initialize *****************
  6732 ;; Defined at:
  6733 ;;		line 62 in file "mcc_generated_files/spi1.c"
  6734 ;; Parameters:    Size  Location     Type
  6735 ;;		None
  6736 ;; Auto vars:     Size  Location     Type
  6737 ;;		None
  6738 ;; Return value:  Size  Location     Type
  6739 ;;                  1    wreg      void 
  6740 ;; Registers used:
  6741 ;;		wreg
  6742 ;; Tracked objects:
  6743 ;;		On entry : 0/0
  6744 ;;		On exit  : 0/0
  6745 ;;		Unchanged: 0/0
  6746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6747 ;;      Params:         0       0       0       0       0       0
  6748 ;;      Locals:         0       0       0       0       0       0
  6749 ;;      Temps:          0       0       0       0       0       0
  6750 ;;      Totals:         0       0       0       0       0       0
  6751 ;;Total ram usage:        0 bytes
  6752 ;; Hardware stack levels used: 1
  6753 ;; This function calls:
  6754 ;;		Nothing
  6755 ;; This function is called by:
  6756 ;;		_SYSTEM_Initialize
  6757 ;; This function uses a non-reentrant model
  6758 ;;
  6759                           
  6760     0EFF                     _SPI1_Initialize:	
  6761                           ;psect for function _SPI1_Initialize
  6762                           
  6763     0EFF                     l2453:	
  6764                           ;incstack = 0
  6765                           ; Regs used in _SPI1_Initialize: [wreg]
  6766                           
  6767                           
  6768                           ;mcc_generated_files/spi1.c: 65:     SSP1STAT = 0x40;
  6769     0EFF  3040               	movlw	64
  6770     0F00  0024               	movlb	4	; select bank4
  6771     0F01  0094               	movwf	20	;volatile
  6772                           
  6773                           ;mcc_generated_files/spi1.c: 66:     SSP1CON1 = 0x02;
  6774     0F02  3002               	movlw	2
  6775     0F03  0095               	movwf	21	;volatile
  6776                           
  6777                           ;mcc_generated_files/spi1.c: 67:     SSP1ADD = 0x01;
  6778     0F04  3001               	movlw	1
  6779     0F05  0092               	movwf	18	;volatile
  6780     0F06                     l2455:
  6781                           
  6782                           ;mcc_generated_files/spi1.c: 68:     TRISBbits.TRISB4 = 0;
  6783     0F06  0021               	movlb	1	; select bank1
  6784     0F07  120D               	bcf	13,4	;volatile
  6785     0F08                     l2457:
  6786                           
  6787                           ;mcc_generated_files/spi1.c: 69:     SSP1CON1bits.SSPEN = 0;
  6788     0F08  0024               	movlb	4	; select bank4
  6789     0F09  1295               	bcf	21,5	;volatile
  6790     0F0A                     l187:
  6791     0F0A  0008               	return
  6792     0F0B                     __end_of_SPI1_Initialize:
  6793                           
  6794                           	psect	text26
  6795     0F5F                     __ptext26:	
  6796 ;; *************** function _PIN_MANAGER_Initialize *****************
  6797 ;; Defined at:
  6798 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  6799 ;; Parameters:    Size  Location     Type
  6800 ;;		None
  6801 ;; Auto vars:     Size  Location     Type
  6802 ;;		None
  6803 ;; Return value:  Size  Location     Type
  6804 ;;                  1    wreg      void 
  6805 ;; Registers used:
  6806 ;;		wreg, status,2
  6807 ;; Tracked objects:
  6808 ;;		On entry : 0/0
  6809 ;;		On exit  : 0/0
  6810 ;;		Unchanged: 0/0
  6811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6812 ;;      Params:         0       0       0       0       0       0
  6813 ;;      Locals:         0       0       0       0       0       0
  6814 ;;      Temps:          0       0       0       0       0       0
  6815 ;;      Totals:         0       0       0       0       0       0
  6816 ;;Total ram usage:        0 bytes
  6817 ;; Hardware stack levels used: 1
  6818 ;; This function calls:
  6819 ;;		Nothing
  6820 ;; This function is called by:
  6821 ;;		_SYSTEM_Initialize
  6822 ;; This function uses a non-reentrant model
  6823 ;;
  6824                           
  6825     0F5F                     _PIN_MANAGER_Initialize:	
  6826                           ;psect for function _PIN_MANAGER_Initialize
  6827                           
  6828     0F5F                     l2437:	
  6829                           ;incstack = 0
  6830                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  6831                           
  6832                           
  6833                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  6834     0F5F  0022               	movlb	2	; select bank2
  6835     0F60  018C               	clrf	12	;volatile
  6836                           
  6837                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  6838     0F61  018D               	clrf	13	;volatile
  6839     0F62                     l2439:
  6840                           
  6841                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x37;
  6842     0F62  3037               	movlw	55
  6843     0F63  0021               	movlb	1	; select bank1
  6844     0F64  008C               	movwf	12	;volatile
  6845     0F65                     l2441:
  6846                           
  6847                           ;mcc_generated_files/pin_manager.c: 67:     TRISB = 0xEF;
  6848     0F65  30EF               	movlw	239
  6849     0F66  008D               	movwf	13	;volatile
  6850     0F67                     l2443:
  6851                           
  6852                           ;mcc_generated_files/pin_manager.c: 72:     ANSELB = 0xC8;
  6853     0F67  30C8               	movlw	200
  6854     0F68  0023               	movlb	3	; select bank3
  6855     0F69  008D               	movwf	13	;volatile
  6856     0F6A                     l2445:
  6857                           
  6858                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x1F;
  6859     0F6A  301F               	movlw	31
  6860     0F6B  008C               	movwf	12	;volatile
  6861                           
  6862                           ;mcc_generated_files/pin_manager.c: 78:     WPUB = 0x00;
  6863     0F6C  0024               	movlb	4	; select bank4
  6864     0F6D  018D               	clrf	13	;volatile
  6865                           
  6866                           ;mcc_generated_files/pin_manager.c: 79:     WPUA = 0x00;
  6867     0F6E  018C               	clrf	12	;volatile
  6868     0F6F                     l2447:
  6869                           
  6870                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  6871     0F6F  0021               	movlb	1	; select bank1
  6872     0F70  1795               	bsf	21,7	;volatile
  6873     0F71                     l2449:
  6874                           
  6875                           ;mcc_generated_files/pin_manager.c: 86:     APFCON0 = 0xC0;
  6876     0F71  30C0               	movlw	192
  6877     0F72  0022               	movlb	2	; select bank2
  6878     0F73  009D               	movwf	29	;volatile
  6879     0F74                     l2451:
  6880                           
  6881                           ;mcc_generated_files/pin_manager.c: 87:     APFCON1 = 0x01;
  6882     0F74  3001               	movlw	1
  6883     0F75  009E               	movwf	30	;volatile
  6884     0F76                     l163:
  6885     0F76  0008               	return
  6886     0F77                     __end_of_PIN_MANAGER_Initialize:
  6887                           
  6888                           	psect	text27
  6889     0EF0                     __ptext27:	
  6890 ;; *************** function _OSCILLATOR_Initialize *****************
  6891 ;; Defined at:
  6892 ;;		line 60 in file "mcc_generated_files/mcc.c"
  6893 ;; Parameters:    Size  Location     Type
  6894 ;;		None
  6895 ;; Auto vars:     Size  Location     Type
  6896 ;;		None
  6897 ;; Return value:  Size  Location     Type
  6898 ;;                  1    wreg      void 
  6899 ;; Registers used:
  6900 ;;		wreg, status,2
  6901 ;; Tracked objects:
  6902 ;;		On entry : 0/0
  6903 ;;		On exit  : 0/0
  6904 ;;		Unchanged: 0/0
  6905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6906 ;;      Params:         0       0       0       0       0       0
  6907 ;;      Locals:         0       0       0       0       0       0
  6908 ;;      Temps:          0       0       0       0       0       0
  6909 ;;      Totals:         0       0       0       0       0       0
  6910 ;;Total ram usage:        0 bytes
  6911 ;; Hardware stack levels used: 1
  6912 ;; This function calls:
  6913 ;;		Nothing
  6914 ;; This function is called by:
  6915 ;;		_SYSTEM_Initialize
  6916 ;; This function uses a non-reentrant model
  6917 ;;
  6918                           
  6919     0EF0                     _OSCILLATOR_Initialize:	
  6920                           ;psect for function _OSCILLATOR_Initialize
  6921                           
  6922     0EF0                     l2459:	
  6923                           ;incstack = 0
  6924                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  6925                           
  6926                           
  6927                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x70;
  6928     0EF0  3070               	movlw	112
  6929     0EF1  0021               	movlb	1	; select bank1
  6930     0EF2  0099               	movwf	25	;volatile
  6931     0EF3                     l2461:
  6932                           
  6933                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x00;
  6934     0EF3  0198               	clrf	24	;volatile
  6935     0EF4                     l2463:
  6936                           
  6937                           ;mcc_generated_files/mcc.c: 67:     BORCON = 0x00;
  6938     0EF4  0022               	movlb	2	; select bank2
  6939     0EF5  0196               	clrf	22	;volatile
  6940     0EF6                     l251:
  6941     0EF6  0008               	return
  6942     0EF7                     __end_of_OSCILLATOR_Initialize:
  6943                           
  6944                           	psect	text28
  6945     0FB0                     __ptext28:	
  6946 ;; *************** function _EUSART_Initialize *****************
  6947 ;; Defined at:
  6948 ;;		line 66 in file "mcc_generated_files/eusart.c"
  6949 ;; Parameters:    Size  Location     Type
  6950 ;;		None
  6951 ;; Auto vars:     Size  Location     Type
  6952 ;;		None
  6953 ;; Return value:  Size  Location     Type
  6954 ;;                  1    wreg      void 
  6955 ;; Registers used:
  6956 ;;		wreg, status,2, status,0, pclath, cstack
  6957 ;; Tracked objects:
  6958 ;;		On entry : 0/0
  6959 ;;		On exit  : 0/0
  6960 ;;		Unchanged: 0/0
  6961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6962 ;;      Params:         0       0       0       0       0       0
  6963 ;;      Locals:         0       0       0       0       0       0
  6964 ;;      Temps:          0       0       0       0       0       0
  6965 ;;      Totals:         0       0       0       0       0       0
  6966 ;;Total ram usage:        0 bytes
  6967 ;; Hardware stack levels used: 1
  6968 ;; Hardware stack levels required when called: 1
  6969 ;; This function calls:
  6970 ;;		_EUSART_SetErrorHandler
  6971 ;;		_EUSART_SetFramingErrorHandler
  6972 ;;		_EUSART_SetOverrunErrorHandler
  6973 ;; This function is called by:
  6974 ;;		_SYSTEM_Initialize
  6975 ;; This function uses a non-reentrant model
  6976 ;;
  6977                           
  6978     0FB0                     _EUSART_Initialize:	
  6979                           ;psect for function _EUSART_Initialize
  6980                           
  6981     0FB0                     l2425:	
  6982                           ;incstack = 0
  6983                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6984                           
  6985                           
  6986                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  6987     0FB0  3008               	movlw	8
  6988     0FB1  0023               	movlb	3	; select bank3
  6989     0FB2  009F               	movwf	31	;volatile
  6990                           
  6991                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
  6992     0FB3  3090               	movlw	144
  6993     0FB4  009D               	movwf	29	;volatile
  6994                           
  6995                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  6996     0FB5  3024               	movlw	36
  6997     0FB6  009E               	movwf	30	;volatile
  6998                           
  6999                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0x67;
  7000     0FB7  3067               	movlw	103
  7001     0FB8  009B               	movwf	27	;volatile
  7002     0FB9                     l2427:
  7003                           
  7004                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x00;
  7005     0FB9  019C               	clrf	28	;volatile
  7006     0FBA                     l2429:
  7007                           
  7008                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  7009     0FBA  3000               	movlw	0
  7010     0FBB  00F0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  7011     0FBC  3000               	movlw	0
  7012     0FBD  00F1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  7013     0FBE  318E  26D8  318F   	fcall	_EUSART_SetFramingErrorHandler
  7014     0FC1                     l2431:
  7015                           
  7016                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  7017     0FC1  3000               	movlw	0
  7018     0FC2  00F0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  7019     0FC3  3000               	movlw	0
  7020     0FC4  00F1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  7021     0FC5  318E  26DE  318F   	fcall	_EUSART_SetOverrunErrorHandler
  7022     0FC8                     l2433:
  7023                           
  7024                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  7025     0FC8  3000               	movlw	0
  7026     0FC9  00F0               	movwf	EUSART_SetErrorHandler@interruptHandler
  7027     0FCA  3000               	movlw	0
  7028     0FCB  00F1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  7029     0FCC  318E  26D2  318F   	fcall	_EUSART_SetErrorHandler
  7030     0FCF                     l2435:
  7031                           
  7032                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  7033     0FCF  0020               	movlb	0	; select bank0
  7034     0FD0  01E8               	clrf	_eusartRxLastError	;volatile
  7035     0FD1                     l93:
  7036     0FD1  0008               	return
  7037     0FD2                     __end_of_EUSART_Initialize:
  7038                           
  7039                           	psect	text29
  7040     0EDE                     __ptext29:	
  7041 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  7042 ;; Defined at:
  7043 ;;		line 161 in file "mcc_generated_files/eusart.c"
  7044 ;; Parameters:    Size  Location     Type
  7045 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  7046 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  7047 ;; Auto vars:     Size  Location     Type
  7048 ;;		None
  7049 ;; Return value:  Size  Location     Type
  7050 ;;                  1    wreg      void 
  7051 ;; Registers used:
  7052 ;;		wreg
  7053 ;; Tracked objects:
  7054 ;;		On entry : 0/0
  7055 ;;		On exit  : 0/0
  7056 ;;		Unchanged: 0/0
  7057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7058 ;;      Params:         2       0       0       0       0       0
  7059 ;;      Locals:         0       0       0       0       0       0
  7060 ;;      Temps:          0       0       0       0       0       0
  7061 ;;      Totals:         2       0       0       0       0       0
  7062 ;;Total ram usage:        2 bytes
  7063 ;; Hardware stack levels used: 1
  7064 ;; This function calls:
  7065 ;;		Nothing
  7066 ;; This function is called by:
  7067 ;;		_EUSART_Initialize
  7068 ;; This function uses a non-reentrant model
  7069 ;;
  7070                           
  7071     0EDE                     _EUSART_SetOverrunErrorHandler:	
  7072                           ;psect for function _EUSART_SetOverrunErrorHandler
  7073                           
  7074     0EDE                     l2413:	
  7075                           ;incstack = 0
  7076                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  7077                           
  7078                           
  7079                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  7080     0EDE  0871               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  7081     0EDF  0021               	movlb	1	; select bank1
  7082     0EE0  00EB               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  7083     0EE1  0870               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  7084     0EE2  00EA               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  7085     0EE3                     l135:
  7086     0EE3  0008               	return
  7087     0EE4                     __end_of_EUSART_SetOverrunErrorHandler:
  7088                           
  7089                           	psect	text30
  7090     0ED8                     __ptext30:	
  7091 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  7092 ;; Defined at:
  7093 ;;		line 157 in file "mcc_generated_files/eusart.c"
  7094 ;; Parameters:    Size  Location     Type
  7095 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  7096 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  7097 ;; Auto vars:     Size  Location     Type
  7098 ;;		None
  7099 ;; Return value:  Size  Location     Type
  7100 ;;                  1    wreg      void 
  7101 ;; Registers used:
  7102 ;;		wreg
  7103 ;; Tracked objects:
  7104 ;;		On entry : 0/0
  7105 ;;		On exit  : 0/0
  7106 ;;		Unchanged: 0/0
  7107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7108 ;;      Params:         2       0       0       0       0       0
  7109 ;;      Locals:         0       0       0       0       0       0
  7110 ;;      Temps:          0       0       0       0       0       0
  7111 ;;      Totals:         2       0       0       0       0       0
  7112 ;;Total ram usage:        2 bytes
  7113 ;; Hardware stack levels used: 1
  7114 ;; This function calls:
  7115 ;;		Nothing
  7116 ;; This function is called by:
  7117 ;;		_EUSART_Initialize
  7118 ;; This function uses a non-reentrant model
  7119 ;;
  7120                           
  7121     0ED8                     _EUSART_SetFramingErrorHandler:	
  7122                           ;psect for function _EUSART_SetFramingErrorHandler
  7123                           
  7124     0ED8                     l2411:	
  7125                           ;incstack = 0
  7126                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  7127                           
  7128                           
  7129                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  7130     0ED8  0871               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  7131     0ED9  0020               	movlb	0	; select bank0
  7132     0EDA  00EE               	movwf	_EUSART_FramingErrorHandler+1
  7133     0EDB  0870               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  7134     0EDC  00ED               	movwf	_EUSART_FramingErrorHandler
  7135     0EDD                     l132:
  7136     0EDD  0008               	return
  7137     0EDE                     __end_of_EUSART_SetFramingErrorHandler:
  7138                           
  7139                           	psect	text31
  7140     0ED2                     __ptext31:	
  7141 ;; *************** function _EUSART_SetErrorHandler *****************
  7142 ;; Defined at:
  7143 ;;		line 165 in file "mcc_generated_files/eusart.c"
  7144 ;; Parameters:    Size  Location     Type
  7145 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  7146 ;;		 -> EUSART_DefaultErrorHandler(1), 
  7147 ;; Auto vars:     Size  Location     Type
  7148 ;;		None
  7149 ;; Return value:  Size  Location     Type
  7150 ;;                  1    wreg      void 
  7151 ;; Registers used:
  7152 ;;		wreg
  7153 ;; Tracked objects:
  7154 ;;		On entry : 0/0
  7155 ;;		On exit  : 0/0
  7156 ;;		Unchanged: 0/0
  7157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7158 ;;      Params:         2       0       0       0       0       0
  7159 ;;      Locals:         0       0       0       0       0       0
  7160 ;;      Temps:          0       0       0       0       0       0
  7161 ;;      Totals:         2       0       0       0       0       0
  7162 ;;Total ram usage:        2 bytes
  7163 ;; Hardware stack levels used: 1
  7164 ;; This function calls:
  7165 ;;		Nothing
  7166 ;; This function is called by:
  7167 ;;		_EUSART_Initialize
  7168 ;; This function uses a non-reentrant model
  7169 ;;
  7170                           
  7171     0ED2                     _EUSART_SetErrorHandler:	
  7172                           ;psect for function _EUSART_SetErrorHandler
  7173                           
  7174     0ED2                     l2415:	
  7175                           ;incstack = 0
  7176                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  7177                           
  7178                           
  7179                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  7180     0ED2  0871               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  7181     0ED3  0021               	movlb	1	; select bank1
  7182     0ED4  00E9               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
  7183     0ED5  0870               	movf	EUSART_SetErrorHandler@interruptHandler,w
  7184     0ED6  00E8               	movwf	_EUSART_ErrorHandler^(0+128)
  7185     0ED7                     l138:
  7186     0ED7  0008               	return
  7187     0ED8                     __end_of_EUSART_SetErrorHandler:
  7188     007E                     btemp	set	126	;btemp
  7189     007E                     wtemp0	set	126
  7190                           
  7191                           	psect	idloc
  7192                           
  7193                           ;Config register IDLOC0 @ 0x8000
  7194                           ;	unspecified, using default values
  7195     8000                     	org	32768
  7196     8000  3FFF               	dw	16383
  7197                           
  7198                           ;Config register IDLOC1 @ 0x8001
  7199                           ;	unspecified, using default values
  7200     8001                     	org	32769
  7201     8001  3FFF               	dw	16383
  7202                           
  7203                           ;Config register IDLOC2 @ 0x8002
  7204                           ;	unspecified, using default values
  7205     8002                     	org	32770
  7206     8002  3FFF               	dw	16383
  7207                           
  7208                           ;Config register IDLOC3 @ 0x8003
  7209                           ;	unspecified, using default values
  7210     8003                     	org	32771
  7211     8003  3FFF               	dw	16383
  7212                           
  7213                           	psect	config
  7214                           
  7215                           ;Config register CONFIG1 @ 0x8007
  7216                           ;	Oscillator Selection
  7217                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  7218                           ;	Watchdog Timer Enable
  7219                           ;	WDTE = OFF, WDT disabled
  7220                           ;	Power-up Timer Enable
  7221                           ;	PWRTE = OFF, PWRT disabled
  7222                           ;	MCLR Pin Function Select
  7223                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  7224                           ;	Flash Program Memory Code Protection
  7225                           ;	CP = OFF, Program memory code protection is disabled
  7226                           ;	Data Memory Code Protection
  7227                           ;	CPD = OFF, Data memory code protection is disabled
  7228                           ;	Brown-out Reset Enable
  7229                           ;	BOREN = ON, Brown-out Reset enabled
  7230                           ;	Clock Out Enable
  7231                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  7232                           ;	Internal/External Switchover
  7233                           ;	IESO = ON, Internal/External Switchover mode is enabled
  7234                           ;	Fail-Safe Clock Monitor Enable
  7235                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  7236     8007                     	org	32775
  7237     8007  3FE4               	dw	16356
  7238                           
  7239                           ;Config register CONFIG2 @ 0x8008
  7240                           ;	Flash Memory Self-Write Protection
  7241                           ;	WRT = OFF, Write protection off
  7242                           ;	PLL Enable
  7243                           ;	PLLEN = OFF, 4x PLL disabled
  7244                           ;	Stack Overflow/Underflow Reset Enable
  7245                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  7246                           ;	Brown-out Reset Voltage Selection
  7247                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  7248                           ;	Low-Voltage Programming Enable
  7249                           ;	LVP = ON, Low-voltage programming enabled
  7250     8008                     	org	32776
  7251     8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    36
    Data        8
    BSS         178
    Persistent  38
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     43      79
    BANK1            80      0      76
    BANK2            80      0      80
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    snake_getSurroundings@surroundings	PTR unsigned char  size(1) Largest target is 8
		 -> Y0(BANK1[8]), 

    sp__ai_getInputField	PTR unsigned char  size(1) Largest target is 8
		 -> Y0(BANK1[8]), 

    sp__snake_getField	PTR unsigned char  size(1) Largest target is 16
		 -> field(BANK1[16]), 

    main@field	PTR unsigned char  size(1) Largest target is 16
		 -> field(BANK1[16]), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    _main->_ai_run
    _main->_ledSet
    _snake_move->_rand
    _snake_initiate->_rand
    _snake_getSurroundings->___awdiv
    _sendMatrix->_txMAX7219
    _ledSet->___awdiv
    _initMAX7219->_txMAX7219
    _txMAX7219->_SPI1_WriteByte
    _ai_run->___awdiv
    _ai_propagate->___awdiv
    ___awdiv->___wmul
    _ai_initiate->_rand
    _rand->___lmul
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _main in BANK0

    _main->_ai_propagate
    _snake_move->_snake_initiate
    _snake_initiate->_rand
    _snake_getSurroundings->___awdiv
    _ledSet->___awdiv
    _ai_run->___awdiv
    _ai_propagate->___awdiv
    _ai_initiate->_rand

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0   22035
                                             33 BANK0     10    10      0
                  _SYSTEM_Initialize
                            ___awdiv
                   _ai_getInputField
                        _ai_initiate
                       _ai_propagate
                             _ai_run
                 _deactivateElevator
                        _initMAX7219
                           _ledClear
                             _ledSet
                         _sendMatrix
                     _snake_getField
              _snake_getFoodPosition
              _snake_getSurroundings
                     _snake_initiate
                         _snake_move
 ---------------------------------------------------------------------------------
 (1) _snake_move                                           5     5      0    2997
                                              6 BANK0      5     5      0
                            ___awdiv
                               _rand
                     _snake_initiate
 ---------------------------------------------------------------------------------
 (2) _snake_initiate                                       2     2      0     312
                                              4 BANK0      2     2      0
                               _rand
 ---------------------------------------------------------------------------------
 (1) _snake_getSurroundings                               10    10      0    2978
                                             11 COMMON     2     2      0
                                              4 BANK0      8     8      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) _snake_getFoodPosition                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _snake_getField                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sendMatrix                                           5     5      0     935
                                              3 COMMON     5     5      0
                          _txMAX7219
 ---------------------------------------------------------------------------------
 (1) _ledSet                                               4     3      1     424
                                             11 COMMON     3     3      0
                                              4 BANK0      1     0      1
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _ledClear                                             4     3      1     272
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _initMAX7219                                          2     2      0     750
                                              3 COMMON     2     2      0
                          _txMAX7219
 ---------------------------------------------------------------------------------
 (2) _txMAX7219                                            2     1      1     750
                                              1 COMMON     2     1      1
                     _SPI1_WriteByte
 ---------------------------------------------------------------------------------
 (3) _SPI1_WriteByte                                       1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _deactivateElevator                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ai_run                                              11    11      0    4308
                                             11 COMMON     3     3      0
                                              4 BANK0      8     8      0
                            ___awdiv
                             ___wmul
                            _sigmoid
 ---------------------------------------------------------------------------------
 (2) _sigmoid                                              2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ai_propagate                                        29    29      0    5346
                                              4 BANK0     29    29      0
                            ___awdiv
                             ___wmul
                         _de_sigmoid
 ---------------------------------------------------------------------------------
 (2) _de_sigmoid                                           2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1156
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    2276
                                              6 COMMON     5     1      4
                                              0 BANK0      4     4      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _ai_initiate                                          7     7      0     560
                                              4 BANK0      7     7      0
                               _rand
 ---------------------------------------------------------------------------------
 (3) _rand                                                 6     4      2     244
                                             12 COMMON     2     0      2
                                              0 BANK0      4     4      0
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     244
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _ai_getInputField                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI1_Initialize
     _WDT_Initialize
   ___awdiv
     ___wmul (ARG)
   _ai_getInputField
   _ai_initiate
     _rand
       ___lmul
   _ai_propagate
     ___awdiv
     ___wmul
     _de_sigmoid
   _ai_run
     ___awdiv
     ___wmul
     _sigmoid
   _deactivateElevator
   _initMAX7219
     _txMAX7219
       _SPI1_WriteByte
   _ledClear
   _ledSet
     ___awdiv (ARG)
   _sendMatrix
     _txMAX7219
   _snake_getField
   _snake_getFoodPosition
   _snake_getSurroundings
     ___awdiv
   _snake_initiate
     _rand
   _snake_move
     ___awdiv
     _rand
     _snake_initiate

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      F9       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     2B      4F       6       98.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      4C       8       95.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      50      10      100.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      F9      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Oct 08 23:13:21 2022

                           SPI1_WriteByte@byte 0070                           __end_of_ai_propagate 07D9  
                                           _B1 0057                                             _B2 0053  
                                           l93 0FD1                                             _W1 0140  
                                           _W2 00A0                                             _Y0 00D8  
                                           _Y1 005F                                             _Y2 005B  
                                           _Z1 004F                                             _Z2 004B  
                                 ___awdiv@sign 0021                            ___wmul@multiplicand 0072  
                                          l132 0EDD                                            _DB1 00BC  
                                          _DB2 00B8                                            l135 0EE3  
                                          l224 0ED1                                            l400 0FFF  
                                          l138 0ED7                                            l251 0EF6  
                                          l163 0F76                                            l331 0012  
                                          l254 0ECC                                            l248 0F1A  
                                          l601 054D                                            l370 0F83  
                                          l187 0F0A                                            l371 0F88  
                                          l427 00B2                                            l380 0F5E  
                                          l605 07D8                                            l373 0F8D  
                                          l374 0F90                                            l383 0F4C  
                                          l455 0430                                            l368 0F7E  
                                          l377 00F0                                            l458 0005  
                                          l821 0045                                            l581 01BD  
                                          l654 0F3A                                            l478 0285  
                                          l807 0F9B                                            l487 0EC8  
                                          l584 0EC5                                            l809 0FAF  
                                          l657 0F2A                                            l960 0150  
                                          _DW1 0120                                            _DW2 0160  
                                          _DY1 00C0                                            _DY2 00C4  
               ?_EUSART_SetFramingErrorHandler 0070                                            wreg 0009  
                                 ?_initMAX7219 0070                                           l3001 05F6  
                                         l3003 05FC                                           l3101 07A5  
                                         l3021 0643                                           l3013 0607  
                                         l3005 0600                                           l1271 007A  
                                         l3111 07D3                                           l3031 06B0  
                                         l3015 0616                                           l3007 0606  
                                         l2401 001F                                           l3105 07AC  
                                         l3033 06B6                                           l3017 062B  
                                         l3201 033A                                           l2411 0ED8  
                                         l2403 0027                                           l3107 07CE  
                                         l3051 06FD                                           l3043 06C1  
                                         l3035 06BA                                           l3027 0644  
                                         l3019 063B                                           l3203 033F  
                                         l3131 028C                                           l2413 0EDE  
                                         l2405 002E                                           l2421 0067  
                                         l2501 0F91                                           l3053 06FE  
                                         l3045 06D0                                           l3037 06C0  
                                         l3029 06AC                                           l3133 028F  
                                         l2415 0ED2                                           l2431 0FC1  
                                         l2407 003D                                           l2511 0FAB  
                                         l2503 0F93                                           l3063 0743  
                                         l3047 06E5                                           l3151 029C  
                                         l3135 0292                                           l3127 0286  
                                         l2433 0FC8                                           l2425 0FB0  
                                         l2441 0F65                                           l2521 00FC  
                                         l2505 0F97                                           l3081 0767  
                                         l3073 0755                                           l3065 0747  
                                         l3057 0705                                           l3049 06F5  
                                         l2417 0ECE                                           l3161 02C9  
                                         l3153 02B1                                           l3145 029B  
                                         l3137 0295                                           l3129 0289  
                                         l2435 0FCF                                           l2427 0FB9  
                                         l2451 0F74                                           l2443 0F67  
                                         l2419 0046                                           l2611 01B3  
                                         l2531 010D                                           l2523 00FE  
                                         l2515 00F1                                           l2507 0FA0  
                                         l3083 0788                                           l3075 075F  
                                         l3091 0792                                           l3067 074D  
                                         l3059 073E                                           l3171 02F1  
                                         l3163 02CD                                           l3155 02B8  
                                         l3139 029A                                           l2429 0FBA  
                                         l2461 0EF3                                           l2445 0F6A  
                                         l2437 0F5F                                           l2453 0EFF  
                                         l2613 01B7                                           l2605 0194  
                                         l2541 0123                                           l2533 0113  
                                         l2525 0102                                           l2517 00F3  
                                         l2509 0FA5                                           l3093 0793  
                                         l3077 0760                                           l3069 074E  
                                         l2621 00E5                                           l2701 021C  
                                         l3181 0302                                           l3173 02F7  
                                         l3165 02D3                                           l3157 02BE  
                                         l2463 0EF4                                           l2447 0F6F  
                                         l2439 0F62                                           l2455 0F06  
                                         l2607 01A8                                           l2543 0132  
                                         l2535 0116                                           l2551 0142  
                                         l2527 0107                                           l2519 00F7  
                                         l3087 078D                                           l2623 00EA  
                                         l2615 00B3                                           l2631 0F3C  
                                         l2711 0229                                           l2703 0222  
                                         l3191 031F                                           l3175 0300  
                                         l3167 02D8                                           l3159 02C3  
                                         l2449 0F71                                           l2457 0F08  
                                         l2465 0EC9                                           l2609 01AD  
                                         l2553 0147                                           l2545 0136  
                                         l2537 011B                                           l2529 010B  
                                         l3097 079A                                           l2801 0505  
                                         l2617 00B9                                           l2625 0004  
                                         l2633 0EC6                                           l2721 0259  
                                         l2713 0241                                           l2705 0228  
                                         l2481 00A8                                           l2473 007D  
                                         l3193 0325                                           l3169 02EE  
                                         l2459 0EF0                                           l2563 0F0B  
                                         l2555 014C                                           l2547 0137  
                                         l2539 011F                                           l3099 07A4  
                                         l2811 0529                                           l2803 050D  
                                         l2491 0F84                                           l2619 00DA  
                                         l2643 0FD3                                           l2731 0279  
                                         l2723 0260                                           l2715 0249  
                                         l2483 00AA                                           l2475 0082  
                                         l2467 007B                                           l3195 032A  
                                         l3187 0303                                           l2397 0013  
                                         l2581 015E                                           l2573 0153  
                                         l2549 013C                                           l2493 0F2C  
                                         l2821 0532                                           l2813 052F  
                                         l2805 0511                                           l2741 0433  
                                         l2565 0006                                           l2629 0F4E  
                                         l2661 0FEE                                           l2653 0FDB  
                                         l2645 0FD9                                           l2637 0FD2  
                                         l2733 027F                                           l2725 0266  
                                         l2717 024D                                           l2485 00AC  
                                         l2477 0086                                           l2901 0414  
                                         l3197 0330                                           l3189 0318  
                                         l2399 001B                                           l2591 0188  
                                         l2583 0173                                           l2575 015C  
                                         l2567 0151                                           l2823 0540  
                                         l2815 0530                                           l2807 0517  
                                         l2743 043C                                           l2735 0431  
                                         l2487 0F78                                           l2663 0FF5  
                                         l2655 0FDD                                           l2647 0FDA  
                                         l2727 026C                                           l2719 0253  
                                         l2671 01C0                                           l2479 008C  
                                         l2911 042E                                           l2903 041D  
                                         l3279 03D5                                           l3199 0334  
                                         l2585 0178                                           l2497 0F1C  
                                         l2825 0542                                           l2809 0524  
                                         l2745 0442                                           l2489 0F7A  
                                         l2665 0FF9                                           l2657 0FE2  
                                         l2729 0272                                           l2681 01CC  
                                         l2905 0423                                           l2841 035D  
                                         l2833 035A                                           l2667 0EC4  
                                         l2587 017E                                           l2923 0556  
                                         l2827 0546                                           l2771 049C  
                                         l2763 0458                                           l2755 044D  
                                         l2747 0446                                           l2659 0FE8  
                                         l2691 01FF                                           l2683 01D2  
                                         l2907 0429                                           l2851 0377  
                                         l2843 0366                                           l2835 035C  
                                         l2597 0189                                           l2589 0182  
                                         l2941 0572                                           l2925 055B  
                                         l2829 054C                                           l2781 04BE  
                                         l2773 04A0                                           l2765 0463  
                                         l2757 0457                                           l2749 044C  
                                         l2693 0205                                           l2685 01D5  
                                         l2677 01C1                                           l2909 042B  
                                         l2853 037C                                           l2845 036C  
                                         l2599 0192                                           l2951 057E  
                                         l2935 0562                                           l2943 0578  
                                         l2927 055C                                           l2919 0550  
                                         l2775 04A6                                           l2767 0484  
                                         l2695 020B                                           l2687 01E6  
                                         l2679 01C8                                           l2871 03B1  
                                         l2863 0393                                           l2855 0382  
                                         l2847 0370                                           l2953 0582  
                                         l2937 0568                                           l2929 0561  
                                         l2777 04B3                                           l2769 0494  
                                         l2697 0210                                           l2689 01FA  
                                         l2865 0398                                           l2881 03E3  
                                         l2857 0386                                           l2849 0376  
                                         l2971 059A                                           l2963 058F  
                                         l2955 0588                                           l2939 056C  
                                         l2795 04CA                                           l2787 04BF  
                                         l2779 04B8                                           l2699 0215  
                                         l2891 03F8                                           l2883 03E8  
                                         l2875 03C7                                           l2859 0389  
                                         l2981 05BF                                           l2973 05AB  
                                         l2965 0599                                           l2949 0579  
                                         l2957 058E                                           l2797 04D5  
                                         l2789 04C9                                           l2893 03FE  
                                         l2885 03EC                                           l2869 03AD  
                                         l2991 05E0                                           l2975 05AF  
                                         l2799 04F5                                           l2895 0400  
                                         l2887 03F5                                           l2879 03CD  
                                         l2977 05B5                                           l2897 0402  
                                         l2987 05C0                                           l2979 05B9  
                                         l2899 0406                                           l2997 05E1  
                                         l2989 05DB                                           l2999 05F2  
                __end_of_snake_getSurroundings 0286                                           u2000 0572  
                                         u2001 0571                                           u2010 0588  
                                         u2011 0587                                           u1300 0074  
                                         u2100 06B6                                           u2101 06B5  
                                         u2110 06C0                                           u2030 05B5  
                                         u1310 008C                                           u2111 06BF  
                                         u2031 05B4                                           u1311 008B  
                                         u2200 07AB                                           u2120 0704  
                                         u2040 05BF                                           u1305 0070  
                                         u2201 07AA                                           u2121 0703  
                                         u2041 05BE                                           u2025 059D  
                                         u1410 0FAB                                           u1411 0FAA  
                                         u1260 001F                                           u1500 0142  
                                         u1420 00F7                                           u2140 074D  
                                         u2060 05FC                                           u1340 0F83  
                                         u2300 0318                                           u1261 001E  
                                         u1501 0141                                           u1421 00F6  
                                         u1405 0FA1                                           u2141 074C  
                                         u2061 05FB                                           u1341 0F82  
                                         u1325 0094                                           u2301 0317  
                                         _LATA 010C                                           u1510 0147  
                                         u1430 0102                                           u2150 0754  
                                         u2070 0606                                           u1350 0F8D  
                                         u2310 0330                                           _LATB 010D  
                                         u1511 0146                                           u1431 0101  
                                         u2215 07AF                                           u2151 0753  
                                         u2135 072F                                           u2071 0605  
                                         u2055 05E4                                           u1351 0F8C  
                                         u1335 00A2                                           u2311 032F  
                                         u1440 0113                                           u2160 0766  
                                         u2320 033A                                           u1441 0112  
                                         u2225 07BF                                           u2161 0765  
                                         u2321 0339                                           u1290 003D  
                                         u1610 0FEE                                           u1291 003C  
                                         u1275 0028                                           u1611 0FED  
                                         u1540 017E                                           u1460 0123  
                                         u1380 0F97                                           u1604 0F41  
                                         u1620 0FFF                                           u1700 0253  
                                         u2260 02B1                                           u1285 002F  
                                         u1541 017D                                           u1461 0122  
                                         u1381 0F96                                           u2085 064B  
                                         u1365 0F2F                                           u1605 0F40  
                                         u1621 0FFE                                           u1701 0252  
                                         u2261 02B0                                           u1550 0188  
                                         u2190 0799                                           u1710 0259  
                                         u1630 01D2                                           u2270 02C9  
                                         u1551 0187                                           u1535 0161  
                                         u1455 0117                                           u1375 0F1F  
                                         u2191 0798                                           u2175 076A  
                                         u2095 069D                                           u1711 0258  
                                         u1631 01D1                                           u2271 02C8  
                                         u2255 029F                                           u1480 0132  
                                         u1720 0266                                           u1640 01FF  
                                         u2280 02D3                                           u1481 0131  
                                         u2185 077A                                           u1721 0265  
                                         u1641 01FE                                           u2281 02D2  
                                         u1570 01B3                                           u1810 0517  
                                         u1730 0272                                           u1650 020B  
                                         u1571 01B2                                           u1475 0124  
                                         u1395 0F9C                                           u1811 0516  
                                         u1731 0271                                           u1651 020A  
                                         u1580 01BD                                           u1820 052F  
                                         u1740 027F                                           u1660 0215  
                                         u1900 03C6                                           u1581 01BC  
                                         u1565 0197                                           u1485 012E  
                                         u1821 052E                                           u1805 04D8  
                                         u1741 027E                                           u1661 0214  
                                         u1901 03C5                                           u1830 0540  
                                         u1750 043C                                           u1670 0222  
                                         u1910 03E8                                           u1495 0138  
                                         u1831 053F                                           u1751 043B  
                                         u1671 0221                                           u1911 03E7  
                                         u2295 0306                                           u1840 054C  
                                         u1760 044C                                           u1920 03F5  
                                         u1841 054B                                           u1761 044B  
                                         u2377 00DF                                           u1921 03F4  
                                         u1594 0F53                                           u1690 0241  
                                         u1930 03FE                                           u1850 0366  
                                         u1595 0F52                                           u1691 0240  
                                         u1931 03FD                                           u1851 0365  
                                         u1780 04A6                                           u1860 0376  
                                         u1781 04A5                                           u1685 0232  
                                         u1861 0375                                           u1790 04BE  
                                         u1950 041D                                           u1870 0382  
                                         u1791 04BD                                           u1775 0466  
                                         u1951 041C                                           u1871 0381  
                                         u1960 0429                                           u1880 0392  
                                         u1961 0428                                           u1945 040E  
                                         u1881 0391                                           u1970 0555  
                                         u1890 03AC                                           u1971 0554  
                                         u1891 03AB                                           u1980 055B  
                                         u1981 055A                                           u1990 0561  
                                         u1991 0560                                           _WPUA 020C  
                                         _WPUB 020D                                           _main 0286  
                                         _rand 0046                                           _seed 0069  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         btemp 007E                                           start 0002  
                   __end_of_deactivateElevator 0013                        ??_snake_getFoodPosition 0070  
                __end_of_OSCILLATOR_Initialize 0EF7                                          ?_main 0070  
                                        ?_rand 007C                                __end_of___awdiv 0151  
                              ___awdiv@divisor 0076                                ___awdiv@counter 0020  
                                        _RCREG 0199                                          _RCSTA 019D  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TXREG 019A                                          _TXSTA 019E  
                          ___lmul@multiplicand 0074                                          _field 00C8  
                               _WDT_Initialize 0EC9                                          main@i 0047  
                                        main@j 0048                                __end_of_sigmoid 0F3B  
                                        status 0003                                          wtemp0 007E  
                              __initialization 07D9                                 _remainingMoves 0063  
                                 __end_of_main 0358                                   __end_of_rand 007B  
                                       ??_main 0041                                         ??_rand 0020  
                       __end_of_WDT_Initialize 0ECD              _EUSART_DefaultFramingErrorHandler 0000  
                   _EUSART_OverrunErrorHandler 00EA                                         _EEADRH 0192  
                                       _EEADRL 0191                                         _EEDATH 0194  
                                       _EEDATL 0193                                         _EECON2 0196  
                             ___awdiv@dividend 0078                                         _ANSELA 018C  
                                       _ANSELB 018D                                         _BORCON 0116  
                            ?_ai_getInputField 0070                                         _OSCCON 0099  
                                       _SPBRGH 019C                                         _SPBRGL 019B  
                                       _WDTCON 0097                             ??_ai_getInputField 0070  
                             __end_of_ledClear 0F4D              snake_getSurroundings@surroundings 002B  
                                       ___lmul 0013                                         ___wmul 0F91  
                                    ??___awdiv 007A                                         _ai_run 0431  
                                       _choice 0066                                         _ledSet 0F4D  
                             _de_sigmoidValues 0800                                         _matrix 00B0  
                             ___awdiv@quotient 0022                                ?_WDT_Initialize 0070  
                                    ??_sigmoid 0070                                  ai_propagate@S 002C  
                                ai_propagate@i 0031                                  ai_propagate@j 0038  
                                 _ai_propagate 054E                              _SYSTEM_Initialize 0F0B  
                      __end_of__initialization 07FD                             ?_SYSTEM_Initialize 0070  
                               __pcstackCOMMON 0070                                   __pidataBANK1 0EF7  
                          ??_SYSTEM_Initialize 0072                              ??_SPI1_Initialize 0070  
                           _spi1_configuration 0820                                 _OPTION_REGbits 0095  
                        __end_of_sigmoidValues 0820                ??_EUSART_SetOverrunErrorHandler 0072  
                              snake_initiate@i 0025                      __end_of_SYSTEM_Initialize 0F1B  
                          snake_move@direction 0028                                   _headPosition 0065  
                                   __pbssBANK0 004B                                     __pbssBANK1 00A0  
                                   __pbssBANK2 0120                          ai_propagate@incentive 0030  
                                   _de_sigmoid 0F1B                                 _SPI1_WriteByte 0ECD  
                          snake_move@incentive 0029                                     __pmaintext 0286  
                                      ?___lmul 0070                                        ?___wmul 0070  
                                      ?_ai_run 0070                                    sendMatrix@b 0074  
                                  sendMatrix@i 0077                                    sendMatrix@j 0076  
                                      ?_ledSet 0024                                        _BAUDCON 019F  
                               ___lmul@product 0078                                        _APFCON0 011D  
                                      _APFCON1 011E                  __end_of_snake_getFoodPosition 0EC9  
                         main@foodPosition_664 0046                             _deactivateElevator 0006  
                                      _OSCTUNE 0098                                      ?_ledClear 0070  
                                      _SSP1ADD 0212                                        _SSP1BUF 0211  
                     ??_EUSART_SetErrorHandler 0072                            ?_deactivateElevator 0070  
                       __end_of_SPI1_WriteByte 0ED2                          _snake_getSurroundings 01BE  
                             main@foodPosition 0045                                  ??_ai_initiate 0024  
                                      ___awdiv 00F1                           ??_deactivateElevator 0070  
                                      __ptext1 0358                                        __ptext2 007B  
                                      __ptext3 01BE                                        __ptext4 0EC6  
                                      __ptext5 0004                                        __ptext6 0FD2  
                                      __ptext7 0F4D                                        __ptext8 0F3B  
                                      __ptext9 00B3                              __end_of_txMAX7219 0F91  
                                      ai_run@i 0024                                        ai_run@j 002A  
                                      ai_run@z 0028                          _OSCILLATOR_Initialize 0EF0  
                                      _mapping 00E0                       ??_PIN_MANAGER_Initialize 0070  
                                      _sigmoid 0F2B                                     ??_ledClear 0071  
                                      ledSet@c 0024                                        ledSet@l 007D  
                                      clrloop0 0EE5                           end_of_initialization 07FD  
                                   _sendMatrix 0FD2                       __end_of_de_sigmoidValues 0810  
                                  ?_de_sigmoid 0070          __end_of_EUSART_SetOverrunErrorHandler 0EE4  
                _EUSART_SetOverrunErrorHandler 0EDE                                ?_SPI1_WriteByte 0070  
                                      init_ram 0EEA                                        initloop 0EEB  
                                  snake_move@i 002A                              _EUSART_Initialize 0FB0  
                           ?_EUSART_Initialize 0070                                      _RCSTAbits 019D  
                                   _snake_move 0358                                 ai_propagate@dz 003F  
                          ??_EUSART_Initialize 0072                            __end_of_ai_initiate 01BE  
                             ??_WDT_Initialize 0070                                 txMAX7219@addr0 0072  
                                    _TRISAbits 008C                                      _TRISBbits 008D  
                       ?_snake_getSurroundings 0070                      __end_of_EUSART_Initialize 0FD2  
                              _SPI1_Initialize 0EFF                                      _TXSTAbits 019E  
                                 _foodPosition 0064                                 _snake_getField 0004  
                                 ai_initiate@i 0027                                   ai_initiate@j 0029  
                               __end_of___lmul 0046                     _EUSART_DefaultErrorHandler 0000  
                               __end_of___wmul 0FB0                                 __end_of_ai_run 054E  
                               __end_of_ledSet 0F5F                         ?_OSCILLATOR_Initialize 0070  
                               _snake_initiate 007B                            start_initialization 07D9  
                                ??_initMAX7219 0073                                    ?_sendMatrix 0070  
                       __end_of_snake_getField 0006                 ?_EUSART_SetOverrunErrorHandler 0070  
                                  _ai_initiate 0151                     _EUSART_FramingErrorHandler 006D  
                                     ??___lmul 0078                                    ?_snake_move 0070  
                                     ??___wmul 0074                         _EUSART_SetErrorHandler 0ED2  
                                     ??_ai_run 007B                                       ??_ledSet 007B  
                                  __pdataBANK1 00E0                               ai_initiate@i_868 0028  
                             ai_initiate@j_867 002A                         __end_of_snake_initiate 00B3  
                                    ___latbits 0001                                  __pcstackBANK0 0020  
                      __end_of_SPI1_Initialize 0F0B                        snake_getSurroundings@cf 0026  
                      snake_getSurroundings@ch 0029                        snake_getSurroundings@lf 0025  
                      snake_getSurroundings@lh 0028                            __end_of_initMAX7219 00F1  
                                    __pnvBANK0 006D                                      __pnvBANK1 00E8  
                              ?_snake_getField 0070                         _PIN_MANAGER_Initialize 0F5F  
                                     ?___awdiv 0076                               _ai_getInputField 0EC4  
                              ?_snake_initiate 0070                                   sendMatrix@nb 0075  
                        _snake_getFoodPosition 0EC6                                       ?_sigmoid 0070  
                             ??_SPI1_WriteByte 0070                                      _txMAX7219 0F77  
                                 ??_de_sigmoid 0070                                 ___wmul@product 0074  
                                     _LATAbits 010C         EUSART_SetErrorHandler@interruptHandler 0070  
                                     _LATBbits 010D                                      clear_ram0 0EE4  
                            _eusartRxLastError 0068                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 0072                                      ledClear@c 0070  
                                    ledClear@l 0073                                      _snakeSize 0067  
                                     _SSP1CON1 0215                                       _SSP1CON2 0216  
            _EUSART_DefaultOverrunErrorHandler 0000                                       _SSP1STAT 0214  
                                txMAX7219@dat0 0071                                      main@i_662 0049  
                            ___wmul@multiplier 0070                                      main@j_663 004A  
                           __end_of_de_sigmoid 0F2B                                      main@field 0044  
                                  _initMAX7219 00B3                        ??_snake_getSurroundings 007B  
                                   ?_txMAX7219 0071                                  _sigmoidValues 0810  
                             ?_SPI1_Initialize 0070                                  ?_ai_propagate 0070  
                            ___lmul@multiplier 0070                                     _EECON1bits 0195  
                                  ai_run@i_874 0025                                    ai_run@i_876 0026  
                                  ai_run@i_877 0027                                    ai_run@j_875 002B  
                      ??_OSCILLATOR_Initialize 0070                            _EUSART_ErrorHandler 00E8  
                       ?_snake_getFoodPosition 0070                         snake_getSurroundings@i 0027  
                       snake_getSurroundings@p 0024                              ai_propagate@i_882 0032  
                            ai_propagate@i_891 0035                              ai_propagate@i_884 0033  
                            ai_propagate@i_893 0036                              ai_propagate@i_886 0034  
                            ai_propagate@i_895 0037                              ai_propagate@i_889 0039  
                            ai_propagate@j_890 003A                              ai_propagate@j_892 003B  
                            ai_propagate@j_885 003D                              ai_propagate@j_894 003C  
                            ai_propagate@j_888 003E                                    de_sigmoid@z 0071  
                                     _ledClear 0F3B                                 ??_ai_propagate 0024  
                                     __ptext10 0F77                                       __ptext11 0ECD  
                                     __ptext20 0046                                       __ptext12 0006  
                                     __ptext21 0013                                       __ptext13 0431  
                                     __ptext30 0ED8                                       __ptext22 0EC4  
                                     __ptext14 0F2B                                       __ptext31 0ED2  
                                     __ptext23 0F0B                                       __ptext15 054E  
                                     __ptext24 0EC9                                       __ptext16 0F1B  
                                     __ptext25 0EFF                                       __ptext17 0F91  
                                     __ptext26 0F5F                                       __ptext18 00F1  
                                     __ptext27 0EF0                                       __ptext19 0151  
                                     __ptext28 0FB0                                       __ptext29 0EDE  
                                 _SSP1CON1bits 0215                                   ??_sendMatrix 0073  
                      ?_EUSART_SetErrorHandler 0070                                   ?_ai_initiate 0070  
EUSART_SetOverrunErrorHandler@interruptHandler 0070                                   ??_snake_move 0026  
        __end_of_EUSART_SetFramingErrorHandler 0EDE                  _EUSART_SetFramingErrorHandler 0ED8  
                           __end_of_sendMatrix 1000                                     _INTCONbits 000B  
                                  ??_txMAX7219 0072                       __end_of_ai_getInputField 0EC6  
                             ??_snake_getField 0070                             __end_of_snake_move 0431  
                      ?_PIN_MANAGER_Initialize 0070                 __end_of_EUSART_SetErrorHandler 0ED8  
                                     sigmoid@z 0071                               ??_snake_initiate 0024  
                   snake_getSurroundings@i_795 002A  EUSART_SetFramingErrorHandler@interruptHandler 0070  
                                __pstringtext1 0800                                  __pstringtext2 0810  
                                __pstringtext3 0820                 __end_of_PIN_MANAGER_Initialize 0F77  
                   __end_of_spi1_configuration 0824  
