

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Oct 09 01:51:14 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    15                           	psect	inittext,global,class=CODE,delta=2
    16                           	psect	clrtext,global,class=CODE,delta=2
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2
    45                           	psect	text26,local,class=CODE,merge=1,delta=2
    46                           	psect	text27,local,class=CODE,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,merge=1,delta=2
    48                           	psect	text29,local,class=CODE,merge=1,delta=2
    49                           	psect	text30,local,class=CODE,merge=1,delta=2
    50                           	psect	text31,local,class=CODE,merge=1,delta=2
    51                           	psect	text32,local,class=CODE,merge=1,delta=2
    52                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    53                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    54                           	dabs	1,0x7E,2
    55     0000                     
    56                           ; Version 2.40
    57                           ; Generated 17/11/2021 GMT
    58                           ; 
    59                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution. Publication is not required when
    73                           ;        this file is used in an embedded application.
    74                           ; 
    75                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    76                           ;        software without specific prior written permission.
    77                           ; 
    78                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    79                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    80                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    81                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    82                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    83                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    84                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    85                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    86                           ; 
    87                           ; 
    88                           ; Code-generator required, PIC16F1827 Definitions
    89                           ; 
    90                           ; SFR Addresses
    91     0000                     	;# 
    92     0001                     	;# 
    93     0002                     	;# 
    94     0003                     	;# 
    95     0004                     	;# 
    96     0005                     	;# 
    97     0006                     	;# 
    98     0007                     	;# 
    99     0008                     	;# 
   100     0009                     	;# 
   101     000A                     	;# 
   102     000B                     	;# 
   103     000C                     	;# 
   104     000D                     	;# 
   105     0011                     	;# 
   106     0012                     	;# 
   107     0013                     	;# 
   108     0014                     	;# 
   109     0015                     	;# 
   110     0016                     	;# 
   111     0016                     	;# 
   112     0017                     	;# 
   113     0018                     	;# 
   114     0019                     	;# 
   115     001A                     	;# 
   116     001B                     	;# 
   117     001C                     	;# 
   118     001E                     	;# 
   119     001F                     	;# 
   120     008C                     	;# 
   121     008D                     	;# 
   122     0091                     	;# 
   123     0092                     	;# 
   124     0093                     	;# 
   125     0094                     	;# 
   126     0095                     	;# 
   127     0096                     	;# 
   128     0097                     	;# 
   129     0098                     	;# 
   130     0099                     	;# 
   131     009A                     	;# 
   132     009B                     	;# 
   133     009B                     	;# 
   134     009C                     	;# 
   135     009D                     	;# 
   136     009E                     	;# 
   137     010C                     	;# 
   138     010D                     	;# 
   139     0111                     	;# 
   140     0112                     	;# 
   141     0113                     	;# 
   142     0114                     	;# 
   143     0115                     	;# 
   144     0116                     	;# 
   145     0117                     	;# 
   146     0118                     	;# 
   147     0119                     	;# 
   148     011A                     	;# 
   149     011B                     	;# 
   150     011D                     	;# 
   151     011E                     	;# 
   152     018C                     	;# 
   153     018D                     	;# 
   154     0191                     	;# 
   155     0191                     	;# 
   156     0192                     	;# 
   157     0193                     	;# 
   158     0193                     	;# 
   159     0193                     	;# 
   160     0194                     	;# 
   161     0195                     	;# 
   162     0196                     	;# 
   163     0199                     	;# 
   164     019A                     	;# 
   165     019B                     	;# 
   166     019B                     	;# 
   167     019B                     	;# 
   168     019B                     	;# 
   169     019C                     	;# 
   170     019C                     	;# 
   171     019D                     	;# 
   172     019E                     	;# 
   173     019F                     	;# 
   174     020C                     	;# 
   175     020D                     	;# 
   176     0211                     	;# 
   177     0211                     	;# 
   178     0212                     	;# 
   179     0212                     	;# 
   180     0213                     	;# 
   181     0213                     	;# 
   182     0214                     	;# 
   183     0214                     	;# 
   184     0215                     	;# 
   185     0215                     	;# 
   186     0215                     	;# 
   187     0216                     	;# 
   188     0216                     	;# 
   189     0217                     	;# 
   190     0217                     	;# 
   191     0219                     	;# 
   192     021A                     	;# 
   193     021B                     	;# 
   194     021C                     	;# 
   195     021D                     	;# 
   196     021E                     	;# 
   197     021F                     	;# 
   198     0291                     	;# 
   199     0291                     	;# 
   200     0292                     	;# 
   201     0293                     	;# 
   202     0294                     	;# 
   203     0295                     	;# 
   204     0295                     	;# 
   205     0296                     	;# 
   206     0298                     	;# 
   207     0298                     	;# 
   208     0299                     	;# 
   209     029A                     	;# 
   210     029B                     	;# 
   211     029C                     	;# 
   212     029C                     	;# 
   213     029D                     	;# 
   214     029E                     	;# 
   215     029E                     	;# 
   216     0311                     	;# 
   217     0311                     	;# 
   218     0312                     	;# 
   219     0313                     	;# 
   220     0318                     	;# 
   221     0318                     	;# 
   222     0319                     	;# 
   223     031A                     	;# 
   224     0394                     	;# 
   225     0395                     	;# 
   226     0396                     	;# 
   227     039A                     	;# 
   228     039C                     	;# 
   229     039D                     	;# 
   230     039E                     	;# 
   231     039F                     	;# 
   232     0415                     	;# 
   233     0416                     	;# 
   234     0417                     	;# 
   235     041C                     	;# 
   236     041D                     	;# 
   237     041E                     	;# 
   238     0FE4                     	;# 
   239     0FE5                     	;# 
   240     0FE6                     	;# 
   241     0FE7                     	;# 
   242     0FE8                     	;# 
   243     0FE9                     	;# 
   244     0FEA                     	;# 
   245     0FEB                     	;# 
   246     0FED                     	;# 
   247     0FEE                     	;# 
   248     0FEF                     	;# 
   249     0000                     	;# 
   250     0001                     	;# 
   251     0002                     	;# 
   252     0003                     	;# 
   253     0004                     	;# 
   254     0005                     	;# 
   255     0006                     	;# 
   256     0007                     	;# 
   257     0008                     	;# 
   258     0009                     	;# 
   259     000A                     	;# 
   260     000B                     	;# 
   261     000C                     	;# 
   262     000D                     	;# 
   263     0011                     	;# 
   264     0012                     	;# 
   265     0013                     	;# 
   266     0014                     	;# 
   267     0015                     	;# 
   268     0016                     	;# 
   269     0016                     	;# 
   270     0017                     	;# 
   271     0018                     	;# 
   272     0019                     	;# 
   273     001A                     	;# 
   274     001B                     	;# 
   275     001C                     	;# 
   276     001E                     	;# 
   277     001F                     	;# 
   278     008C                     	;# 
   279     008D                     	;# 
   280     0091                     	;# 
   281     0092                     	;# 
   282     0093                     	;# 
   283     0094                     	;# 
   284     0095                     	;# 
   285     0096                     	;# 
   286     0097                     	;# 
   287     0098                     	;# 
   288     0099                     	;# 
   289     009A                     	;# 
   290     009B                     	;# 
   291     009B                     	;# 
   292     009C                     	;# 
   293     009D                     	;# 
   294     009E                     	;# 
   295     010C                     	;# 
   296     010D                     	;# 
   297     0111                     	;# 
   298     0112                     	;# 
   299     0113                     	;# 
   300     0114                     	;# 
   301     0115                     	;# 
   302     0116                     	;# 
   303     0117                     	;# 
   304     0118                     	;# 
   305     0119                     	;# 
   306     011A                     	;# 
   307     011B                     	;# 
   308     011D                     	;# 
   309     011E                     	;# 
   310     018C                     	;# 
   311     018D                     	;# 
   312     0191                     	;# 
   313     0191                     	;# 
   314     0192                     	;# 
   315     0193                     	;# 
   316     0193                     	;# 
   317     0193                     	;# 
   318     0194                     	;# 
   319     0195                     	;# 
   320     0196                     	;# 
   321     0199                     	;# 
   322     019A                     	;# 
   323     019B                     	;# 
   324     019B                     	;# 
   325     019B                     	;# 
   326     019B                     	;# 
   327     019C                     	;# 
   328     019C                     	;# 
   329     019D                     	;# 
   330     019E                     	;# 
   331     019F                     	;# 
   332     020C                     	;# 
   333     020D                     	;# 
   334     0211                     	;# 
   335     0211                     	;# 
   336     0212                     	;# 
   337     0212                     	;# 
   338     0213                     	;# 
   339     0213                     	;# 
   340     0214                     	;# 
   341     0214                     	;# 
   342     0215                     	;# 
   343     0215                     	;# 
   344     0215                     	;# 
   345     0216                     	;# 
   346     0216                     	;# 
   347     0217                     	;# 
   348     0217                     	;# 
   349     0219                     	;# 
   350     021A                     	;# 
   351     021B                     	;# 
   352     021C                     	;# 
   353     021D                     	;# 
   354     021E                     	;# 
   355     021F                     	;# 
   356     0291                     	;# 
   357     0291                     	;# 
   358     0292                     	;# 
   359     0293                     	;# 
   360     0294                     	;# 
   361     0295                     	;# 
   362     0295                     	;# 
   363     0296                     	;# 
   364     0298                     	;# 
   365     0298                     	;# 
   366     0299                     	;# 
   367     029A                     	;# 
   368     029B                     	;# 
   369     029C                     	;# 
   370     029C                     	;# 
   371     029D                     	;# 
   372     029E                     	;# 
   373     029E                     	;# 
   374     0311                     	;# 
   375     0311                     	;# 
   376     0312                     	;# 
   377     0313                     	;# 
   378     0318                     	;# 
   379     0318                     	;# 
   380     0319                     	;# 
   381     031A                     	;# 
   382     0394                     	;# 
   383     0395                     	;# 
   384     0396                     	;# 
   385     039A                     	;# 
   386     039C                     	;# 
   387     039D                     	;# 
   388     039E                     	;# 
   389     039F                     	;# 
   390     0415                     	;# 
   391     0416                     	;# 
   392     0417                     	;# 
   393     041C                     	;# 
   394     041D                     	;# 
   395     041E                     	;# 
   396     0FE4                     	;# 
   397     0FE5                     	;# 
   398     0FE6                     	;# 
   399     0FE7                     	;# 
   400     0FE8                     	;# 
   401     0FE9                     	;# 
   402     0FEA                     	;# 
   403     0FEB                     	;# 
   404     0FED                     	;# 
   405     0FEE                     	;# 
   406     0FEF                     	;# 
   407     0000                     	;# 
   408     0001                     	;# 
   409     0002                     	;# 
   410     0003                     	;# 
   411     0004                     	;# 
   412     0005                     	;# 
   413     0006                     	;# 
   414     0007                     	;# 
   415     0008                     	;# 
   416     0009                     	;# 
   417     000A                     	;# 
   418     000B                     	;# 
   419     000C                     	;# 
   420     000D                     	;# 
   421     0011                     	;# 
   422     0012                     	;# 
   423     0013                     	;# 
   424     0014                     	;# 
   425     0015                     	;# 
   426     0016                     	;# 
   427     0016                     	;# 
   428     0017                     	;# 
   429     0018                     	;# 
   430     0019                     	;# 
   431     001A                     	;# 
   432     001B                     	;# 
   433     001C                     	;# 
   434     001E                     	;# 
   435     001F                     	;# 
   436     008C                     	;# 
   437     008D                     	;# 
   438     0091                     	;# 
   439     0092                     	;# 
   440     0093                     	;# 
   441     0094                     	;# 
   442     0095                     	;# 
   443     0096                     	;# 
   444     0097                     	;# 
   445     0098                     	;# 
   446     0099                     	;# 
   447     009A                     	;# 
   448     009B                     	;# 
   449     009B                     	;# 
   450     009C                     	;# 
   451     009D                     	;# 
   452     009E                     	;# 
   453     010C                     	;# 
   454     010D                     	;# 
   455     0111                     	;# 
   456     0112                     	;# 
   457     0113                     	;# 
   458     0114                     	;# 
   459     0115                     	;# 
   460     0116                     	;# 
   461     0117                     	;# 
   462     0118                     	;# 
   463     0119                     	;# 
   464     011A                     	;# 
   465     011B                     	;# 
   466     011D                     	;# 
   467     011E                     	;# 
   468     018C                     	;# 
   469     018D                     	;# 
   470     0191                     	;# 
   471     0191                     	;# 
   472     0192                     	;# 
   473     0193                     	;# 
   474     0193                     	;# 
   475     0193                     	;# 
   476     0194                     	;# 
   477     0195                     	;# 
   478     0196                     	;# 
   479     0199                     	;# 
   480     019A                     	;# 
   481     019B                     	;# 
   482     019B                     	;# 
   483     019B                     	;# 
   484     019B                     	;# 
   485     019C                     	;# 
   486     019C                     	;# 
   487     019D                     	;# 
   488     019E                     	;# 
   489     019F                     	;# 
   490     020C                     	;# 
   491     020D                     	;# 
   492     0211                     	;# 
   493     0211                     	;# 
   494     0212                     	;# 
   495     0212                     	;# 
   496     0213                     	;# 
   497     0213                     	;# 
   498     0214                     	;# 
   499     0214                     	;# 
   500     0215                     	;# 
   501     0215                     	;# 
   502     0215                     	;# 
   503     0216                     	;# 
   504     0216                     	;# 
   505     0217                     	;# 
   506     0217                     	;# 
   507     0219                     	;# 
   508     021A                     	;# 
   509     021B                     	;# 
   510     021C                     	;# 
   511     021D                     	;# 
   512     021E                     	;# 
   513     021F                     	;# 
   514     0291                     	;# 
   515     0291                     	;# 
   516     0292                     	;# 
   517     0293                     	;# 
   518     0294                     	;# 
   519     0295                     	;# 
   520     0295                     	;# 
   521     0296                     	;# 
   522     0298                     	;# 
   523     0298                     	;# 
   524     0299                     	;# 
   525     029A                     	;# 
   526     029B                     	;# 
   527     029C                     	;# 
   528     029C                     	;# 
   529     029D                     	;# 
   530     029E                     	;# 
   531     029E                     	;# 
   532     0311                     	;# 
   533     0311                     	;# 
   534     0312                     	;# 
   535     0313                     	;# 
   536     0318                     	;# 
   537     0318                     	;# 
   538     0319                     	;# 
   539     031A                     	;# 
   540     0394                     	;# 
   541     0395                     	;# 
   542     0396                     	;# 
   543     039A                     	;# 
   544     039C                     	;# 
   545     039D                     	;# 
   546     039E                     	;# 
   547     039F                     	;# 
   548     0415                     	;# 
   549     0416                     	;# 
   550     0417                     	;# 
   551     041C                     	;# 
   552     041D                     	;# 
   553     041E                     	;# 
   554     0FE4                     	;# 
   555     0FE5                     	;# 
   556     0FE6                     	;# 
   557     0FE7                     	;# 
   558     0FE8                     	;# 
   559     0FE9                     	;# 
   560     0FEA                     	;# 
   561     0FEB                     	;# 
   562     0FED                     	;# 
   563     0FEE                     	;# 
   564     0FEF                     	;# 
   565     0000                     	;# 
   566     0001                     	;# 
   567     0002                     	;# 
   568     0003                     	;# 
   569     0004                     	;# 
   570     0005                     	;# 
   571     0006                     	;# 
   572     0007                     	;# 
   573     0008                     	;# 
   574     0009                     	;# 
   575     000A                     	;# 
   576     000B                     	;# 
   577     000C                     	;# 
   578     000D                     	;# 
   579     0011                     	;# 
   580     0012                     	;# 
   581     0013                     	;# 
   582     0014                     	;# 
   583     0015                     	;# 
   584     0016                     	;# 
   585     0016                     	;# 
   586     0017                     	;# 
   587     0018                     	;# 
   588     0019                     	;# 
   589     001A                     	;# 
   590     001B                     	;# 
   591     001C                     	;# 
   592     001E                     	;# 
   593     001F                     	;# 
   594     008C                     	;# 
   595     008D                     	;# 
   596     0091                     	;# 
   597     0092                     	;# 
   598     0093                     	;# 
   599     0094                     	;# 
   600     0095                     	;# 
   601     0096                     	;# 
   602     0097                     	;# 
   603     0098                     	;# 
   604     0099                     	;# 
   605     009A                     	;# 
   606     009B                     	;# 
   607     009B                     	;# 
   608     009C                     	;# 
   609     009D                     	;# 
   610     009E                     	;# 
   611     010C                     	;# 
   612     010D                     	;# 
   613     0111                     	;# 
   614     0112                     	;# 
   615     0113                     	;# 
   616     0114                     	;# 
   617     0115                     	;# 
   618     0116                     	;# 
   619     0117                     	;# 
   620     0118                     	;# 
   621     0119                     	;# 
   622     011A                     	;# 
   623     011B                     	;# 
   624     011D                     	;# 
   625     011E                     	;# 
   626     018C                     	;# 
   627     018D                     	;# 
   628     0191                     	;# 
   629     0191                     	;# 
   630     0192                     	;# 
   631     0193                     	;# 
   632     0193                     	;# 
   633     0193                     	;# 
   634     0194                     	;# 
   635     0195                     	;# 
   636     0196                     	;# 
   637     0199                     	;# 
   638     019A                     	;# 
   639     019B                     	;# 
   640     019B                     	;# 
   641     019B                     	;# 
   642     019B                     	;# 
   643     019C                     	;# 
   644     019C                     	;# 
   645     019D                     	;# 
   646     019E                     	;# 
   647     019F                     	;# 
   648     020C                     	;# 
   649     020D                     	;# 
   650     0211                     	;# 
   651     0211                     	;# 
   652     0212                     	;# 
   653     0212                     	;# 
   654     0213                     	;# 
   655     0213                     	;# 
   656     0214                     	;# 
   657     0214                     	;# 
   658     0215                     	;# 
   659     0215                     	;# 
   660     0215                     	;# 
   661     0216                     	;# 
   662     0216                     	;# 
   663     0217                     	;# 
   664     0217                     	;# 
   665     0219                     	;# 
   666     021A                     	;# 
   667     021B                     	;# 
   668     021C                     	;# 
   669     021D                     	;# 
   670     021E                     	;# 
   671     021F                     	;# 
   672     0291                     	;# 
   673     0291                     	;# 
   674     0292                     	;# 
   675     0293                     	;# 
   676     0294                     	;# 
   677     0295                     	;# 
   678     0295                     	;# 
   679     0296                     	;# 
   680     0298                     	;# 
   681     0298                     	;# 
   682     0299                     	;# 
   683     029A                     	;# 
   684     029B                     	;# 
   685     029C                     	;# 
   686     029C                     	;# 
   687     029D                     	;# 
   688     029E                     	;# 
   689     029E                     	;# 
   690     0311                     	;# 
   691     0311                     	;# 
   692     0312                     	;# 
   693     0313                     	;# 
   694     0318                     	;# 
   695     0318                     	;# 
   696     0319                     	;# 
   697     031A                     	;# 
   698     0394                     	;# 
   699     0395                     	;# 
   700     0396                     	;# 
   701     039A                     	;# 
   702     039C                     	;# 
   703     039D                     	;# 
   704     039E                     	;# 
   705     039F                     	;# 
   706     0415                     	;# 
   707     0416                     	;# 
   708     0417                     	;# 
   709     041C                     	;# 
   710     041D                     	;# 
   711     041E                     	;# 
   712     0FE4                     	;# 
   713     0FE5                     	;# 
   714     0FE6                     	;# 
   715     0FE7                     	;# 
   716     0FE8                     	;# 
   717     0FE9                     	;# 
   718     0FEA                     	;# 
   719     0FEB                     	;# 
   720     0FED                     	;# 
   721     0FEE                     	;# 
   722     0FEF                     	;# 
   723     0000                     	;# 
   724     0001                     	;# 
   725     0002                     	;# 
   726     0003                     	;# 
   727     0004                     	;# 
   728     0005                     	;# 
   729     0006                     	;# 
   730     0007                     	;# 
   731     0008                     	;# 
   732     0009                     	;# 
   733     000A                     	;# 
   734     000B                     	;# 
   735     000C                     	;# 
   736     000D                     	;# 
   737     0011                     	;# 
   738     0012                     	;# 
   739     0013                     	;# 
   740     0014                     	;# 
   741     0015                     	;# 
   742     0016                     	;# 
   743     0016                     	;# 
   744     0017                     	;# 
   745     0018                     	;# 
   746     0019                     	;# 
   747     001A                     	;# 
   748     001B                     	;# 
   749     001C                     	;# 
   750     001E                     	;# 
   751     001F                     	;# 
   752     008C                     	;# 
   753     008D                     	;# 
   754     0091                     	;# 
   755     0092                     	;# 
   756     0093                     	;# 
   757     0094                     	;# 
   758     0095                     	;# 
   759     0096                     	;# 
   760     0097                     	;# 
   761     0098                     	;# 
   762     0099                     	;# 
   763     009A                     	;# 
   764     009B                     	;# 
   765     009B                     	;# 
   766     009C                     	;# 
   767     009D                     	;# 
   768     009E                     	;# 
   769     010C                     	;# 
   770     010D                     	;# 
   771     0111                     	;# 
   772     0112                     	;# 
   773     0113                     	;# 
   774     0114                     	;# 
   775     0115                     	;# 
   776     0116                     	;# 
   777     0117                     	;# 
   778     0118                     	;# 
   779     0119                     	;# 
   780     011A                     	;# 
   781     011B                     	;# 
   782     011D                     	;# 
   783     011E                     	;# 
   784     018C                     	;# 
   785     018D                     	;# 
   786     0191                     	;# 
   787     0191                     	;# 
   788     0192                     	;# 
   789     0193                     	;# 
   790     0193                     	;# 
   791     0193                     	;# 
   792     0194                     	;# 
   793     0195                     	;# 
   794     0196                     	;# 
   795     0199                     	;# 
   796     019A                     	;# 
   797     019B                     	;# 
   798     019B                     	;# 
   799     019B                     	;# 
   800     019B                     	;# 
   801     019C                     	;# 
   802     019C                     	;# 
   803     019D                     	;# 
   804     019E                     	;# 
   805     019F                     	;# 
   806     020C                     	;# 
   807     020D                     	;# 
   808     0211                     	;# 
   809     0211                     	;# 
   810     0212                     	;# 
   811     0212                     	;# 
   812     0213                     	;# 
   813     0213                     	;# 
   814     0214                     	;# 
   815     0214                     	;# 
   816     0215                     	;# 
   817     0215                     	;# 
   818     0215                     	;# 
   819     0216                     	;# 
   820     0216                     	;# 
   821     0217                     	;# 
   822     0217                     	;# 
   823     0219                     	;# 
   824     021A                     	;# 
   825     021B                     	;# 
   826     021C                     	;# 
   827     021D                     	;# 
   828     021E                     	;# 
   829     021F                     	;# 
   830     0291                     	;# 
   831     0291                     	;# 
   832     0292                     	;# 
   833     0293                     	;# 
   834     0294                     	;# 
   835     0295                     	;# 
   836     0295                     	;# 
   837     0296                     	;# 
   838     0298                     	;# 
   839     0298                     	;# 
   840     0299                     	;# 
   841     029A                     	;# 
   842     029B                     	;# 
   843     029C                     	;# 
   844     029C                     	;# 
   845     029D                     	;# 
   846     029E                     	;# 
   847     029E                     	;# 
   848     0311                     	;# 
   849     0311                     	;# 
   850     0312                     	;# 
   851     0313                     	;# 
   852     0318                     	;# 
   853     0318                     	;# 
   854     0319                     	;# 
   855     031A                     	;# 
   856     0394                     	;# 
   857     0395                     	;# 
   858     0396                     	;# 
   859     039A                     	;# 
   860     039C                     	;# 
   861     039D                     	;# 
   862     039E                     	;# 
   863     039F                     	;# 
   864     0415                     	;# 
   865     0416                     	;# 
   866     0417                     	;# 
   867     041C                     	;# 
   868     041D                     	;# 
   869     041E                     	;# 
   870     0FE4                     	;# 
   871     0FE5                     	;# 
   872     0FE6                     	;# 
   873     0FE7                     	;# 
   874     0FE8                     	;# 
   875     0FE9                     	;# 
   876     0FEA                     	;# 
   877     0FEB                     	;# 
   878     0FED                     	;# 
   879     0FEE                     	;# 
   880     0FEF                     	;# 
   881     0000                     	;# 
   882     0001                     	;# 
   883     0002                     	;# 
   884     0003                     	;# 
   885     0004                     	;# 
   886     0005                     	;# 
   887     0006                     	;# 
   888     0007                     	;# 
   889     0008                     	;# 
   890     0009                     	;# 
   891     000A                     	;# 
   892     000B                     	;# 
   893     000C                     	;# 
   894     000D                     	;# 
   895     0011                     	;# 
   896     0012                     	;# 
   897     0013                     	;# 
   898     0014                     	;# 
   899     0015                     	;# 
   900     0016                     	;# 
   901     0016                     	;# 
   902     0017                     	;# 
   903     0018                     	;# 
   904     0019                     	;# 
   905     001A                     	;# 
   906     001B                     	;# 
   907     001C                     	;# 
   908     001E                     	;# 
   909     001F                     	;# 
   910     008C                     	;# 
   911     008D                     	;# 
   912     0091                     	;# 
   913     0092                     	;# 
   914     0093                     	;# 
   915     0094                     	;# 
   916     0095                     	;# 
   917     0096                     	;# 
   918     0097                     	;# 
   919     0098                     	;# 
   920     0099                     	;# 
   921     009A                     	;# 
   922     009B                     	;# 
   923     009B                     	;# 
   924     009C                     	;# 
   925     009D                     	;# 
   926     009E                     	;# 
   927     010C                     	;# 
   928     010D                     	;# 
   929     0111                     	;# 
   930     0112                     	;# 
   931     0113                     	;# 
   932     0114                     	;# 
   933     0115                     	;# 
   934     0116                     	;# 
   935     0117                     	;# 
   936     0118                     	;# 
   937     0119                     	;# 
   938     011A                     	;# 
   939     011B                     	;# 
   940     011D                     	;# 
   941     011E                     	;# 
   942     018C                     	;# 
   943     018D                     	;# 
   944     0191                     	;# 
   945     0191                     	;# 
   946     0192                     	;# 
   947     0193                     	;# 
   948     0193                     	;# 
   949     0193                     	;# 
   950     0194                     	;# 
   951     0195                     	;# 
   952     0196                     	;# 
   953     0199                     	;# 
   954     019A                     	;# 
   955     019B                     	;# 
   956     019B                     	;# 
   957     019B                     	;# 
   958     019B                     	;# 
   959     019C                     	;# 
   960     019C                     	;# 
   961     019D                     	;# 
   962     019E                     	;# 
   963     019F                     	;# 
   964     020C                     	;# 
   965     020D                     	;# 
   966     0211                     	;# 
   967     0211                     	;# 
   968     0212                     	;# 
   969     0212                     	;# 
   970     0213                     	;# 
   971     0213                     	;# 
   972     0214                     	;# 
   973     0214                     	;# 
   974     0215                     	;# 
   975     0215                     	;# 
   976     0215                     	;# 
   977     0216                     	;# 
   978     0216                     	;# 
   979     0217                     	;# 
   980     0217                     	;# 
   981     0219                     	;# 
   982     021A                     	;# 
   983     021B                     	;# 
   984     021C                     	;# 
   985     021D                     	;# 
   986     021E                     	;# 
   987     021F                     	;# 
   988     0291                     	;# 
   989     0291                     	;# 
   990     0292                     	;# 
   991     0293                     	;# 
   992     0294                     	;# 
   993     0295                     	;# 
   994     0295                     	;# 
   995     0296                     	;# 
   996     0298                     	;# 
   997     0298                     	;# 
   998     0299                     	;# 
   999     029A                     	;# 
  1000     029B                     	;# 
  1001     029C                     	;# 
  1002     029C                     	;# 
  1003     029D                     	;# 
  1004     029E                     	;# 
  1005     029E                     	;# 
  1006     0311                     	;# 
  1007     0311                     	;# 
  1008     0312                     	;# 
  1009     0313                     	;# 
  1010     0318                     	;# 
  1011     0318                     	;# 
  1012     0319                     	;# 
  1013     031A                     	;# 
  1014     0394                     	;# 
  1015     0395                     	;# 
  1016     0396                     	;# 
  1017     039A                     	;# 
  1018     039C                     	;# 
  1019     039D                     	;# 
  1020     039E                     	;# 
  1021     039F                     	;# 
  1022     0415                     	;# 
  1023     0416                     	;# 
  1024     0417                     	;# 
  1025     041C                     	;# 
  1026     041D                     	;# 
  1027     041E                     	;# 
  1028     0FE4                     	;# 
  1029     0FE5                     	;# 
  1030     0FE6                     	;# 
  1031     0FE7                     	;# 
  1032     0FE8                     	;# 
  1033     0FE9                     	;# 
  1034     0FEA                     	;# 
  1035     0FEB                     	;# 
  1036     0FED                     	;# 
  1037     0FEE                     	;# 
  1038     0FEF                     	;# 
  1039     0000                     	;# 
  1040     0001                     	;# 
  1041     0002                     	;# 
  1042     0003                     	;# 
  1043     0004                     	;# 
  1044     0005                     	;# 
  1045     0006                     	;# 
  1046     0007                     	;# 
  1047     0008                     	;# 
  1048     0009                     	;# 
  1049     000A                     	;# 
  1050     000B                     	;# 
  1051     000C                     	;# 
  1052     000D                     	;# 
  1053     0011                     	;# 
  1054     0012                     	;# 
  1055     0013                     	;# 
  1056     0014                     	;# 
  1057     0015                     	;# 
  1058     0016                     	;# 
  1059     0016                     	;# 
  1060     0017                     	;# 
  1061     0018                     	;# 
  1062     0019                     	;# 
  1063     001A                     	;# 
  1064     001B                     	;# 
  1065     001C                     	;# 
  1066     001E                     	;# 
  1067     001F                     	;# 
  1068     008C                     	;# 
  1069     008D                     	;# 
  1070     0091                     	;# 
  1071     0092                     	;# 
  1072     0093                     	;# 
  1073     0094                     	;# 
  1074     0095                     	;# 
  1075     0096                     	;# 
  1076     0097                     	;# 
  1077     0098                     	;# 
  1078     0099                     	;# 
  1079     009A                     	;# 
  1080     009B                     	;# 
  1081     009B                     	;# 
  1082     009C                     	;# 
  1083     009D                     	;# 
  1084     009E                     	;# 
  1085     010C                     	;# 
  1086     010D                     	;# 
  1087     0111                     	;# 
  1088     0112                     	;# 
  1089     0113                     	;# 
  1090     0114                     	;# 
  1091     0115                     	;# 
  1092     0116                     	;# 
  1093     0117                     	;# 
  1094     0118                     	;# 
  1095     0119                     	;# 
  1096     011A                     	;# 
  1097     011B                     	;# 
  1098     011D                     	;# 
  1099     011E                     	;# 
  1100     018C                     	;# 
  1101     018D                     	;# 
  1102     0191                     	;# 
  1103     0191                     	;# 
  1104     0192                     	;# 
  1105     0193                     	;# 
  1106     0193                     	;# 
  1107     0193                     	;# 
  1108     0194                     	;# 
  1109     0195                     	;# 
  1110     0196                     	;# 
  1111     0199                     	;# 
  1112     019A                     	;# 
  1113     019B                     	;# 
  1114     019B                     	;# 
  1115     019B                     	;# 
  1116     019B                     	;# 
  1117     019C                     	;# 
  1118     019C                     	;# 
  1119     019D                     	;# 
  1120     019E                     	;# 
  1121     019F                     	;# 
  1122     020C                     	;# 
  1123     020D                     	;# 
  1124     0211                     	;# 
  1125     0211                     	;# 
  1126     0212                     	;# 
  1127     0212                     	;# 
  1128     0213                     	;# 
  1129     0213                     	;# 
  1130     0214                     	;# 
  1131     0214                     	;# 
  1132     0215                     	;# 
  1133     0215                     	;# 
  1134     0215                     	;# 
  1135     0216                     	;# 
  1136     0216                     	;# 
  1137     0217                     	;# 
  1138     0217                     	;# 
  1139     0219                     	;# 
  1140     021A                     	;# 
  1141     021B                     	;# 
  1142     021C                     	;# 
  1143     021D                     	;# 
  1144     021E                     	;# 
  1145     021F                     	;# 
  1146     0291                     	;# 
  1147     0291                     	;# 
  1148     0292                     	;# 
  1149     0293                     	;# 
  1150     0294                     	;# 
  1151     0295                     	;# 
  1152     0295                     	;# 
  1153     0296                     	;# 
  1154     0298                     	;# 
  1155     0298                     	;# 
  1156     0299                     	;# 
  1157     029A                     	;# 
  1158     029B                     	;# 
  1159     029C                     	;# 
  1160     029C                     	;# 
  1161     029D                     	;# 
  1162     029E                     	;# 
  1163     029E                     	;# 
  1164     0311                     	;# 
  1165     0311                     	;# 
  1166     0312                     	;# 
  1167     0313                     	;# 
  1168     0318                     	;# 
  1169     0318                     	;# 
  1170     0319                     	;# 
  1171     031A                     	;# 
  1172     0394                     	;# 
  1173     0395                     	;# 
  1174     0396                     	;# 
  1175     039A                     	;# 
  1176     039C                     	;# 
  1177     039D                     	;# 
  1178     039E                     	;# 
  1179     039F                     	;# 
  1180     0415                     	;# 
  1181     0416                     	;# 
  1182     0417                     	;# 
  1183     041C                     	;# 
  1184     041D                     	;# 
  1185     041E                     	;# 
  1186     0FE4                     	;# 
  1187     0FE5                     	;# 
  1188     0FE6                     	;# 
  1189     0FE7                     	;# 
  1190     0FE8                     	;# 
  1191     0FE9                     	;# 
  1192     0FEA                     	;# 
  1193     0FEB                     	;# 
  1194     0FED                     	;# 
  1195     0FEE                     	;# 
  1196     0FEF                     	;# 
  1197     0000                     	;# 
  1198     0001                     	;# 
  1199     0002                     	;# 
  1200     0003                     	;# 
  1201     0004                     	;# 
  1202     0005                     	;# 
  1203     0006                     	;# 
  1204     0007                     	;# 
  1205     0008                     	;# 
  1206     0009                     	;# 
  1207     000A                     	;# 
  1208     000B                     	;# 
  1209     000C                     	;# 
  1210     000D                     	;# 
  1211     0011                     	;# 
  1212     0012                     	;# 
  1213     0013                     	;# 
  1214     0014                     	;# 
  1215     0015                     	;# 
  1216     0016                     	;# 
  1217     0016                     	;# 
  1218     0017                     	;# 
  1219     0018                     	;# 
  1220     0019                     	;# 
  1221     001A                     	;# 
  1222     001B                     	;# 
  1223     001C                     	;# 
  1224     001E                     	;# 
  1225     001F                     	;# 
  1226     008C                     	;# 
  1227     008D                     	;# 
  1228     0091                     	;# 
  1229     0092                     	;# 
  1230     0093                     	;# 
  1231     0094                     	;# 
  1232     0095                     	;# 
  1233     0096                     	;# 
  1234     0097                     	;# 
  1235     0098                     	;# 
  1236     0099                     	;# 
  1237     009A                     	;# 
  1238     009B                     	;# 
  1239     009B                     	;# 
  1240     009C                     	;# 
  1241     009D                     	;# 
  1242     009E                     	;# 
  1243     010C                     	;# 
  1244     010D                     	;# 
  1245     0111                     	;# 
  1246     0112                     	;# 
  1247     0113                     	;# 
  1248     0114                     	;# 
  1249     0115                     	;# 
  1250     0116                     	;# 
  1251     0117                     	;# 
  1252     0118                     	;# 
  1253     0119                     	;# 
  1254     011A                     	;# 
  1255     011B                     	;# 
  1256     011D                     	;# 
  1257     011E                     	;# 
  1258     018C                     	;# 
  1259     018D                     	;# 
  1260     0191                     	;# 
  1261     0191                     	;# 
  1262     0192                     	;# 
  1263     0193                     	;# 
  1264     0193                     	;# 
  1265     0193                     	;# 
  1266     0194                     	;# 
  1267     0195                     	;# 
  1268     0196                     	;# 
  1269     0199                     	;# 
  1270     019A                     	;# 
  1271     019B                     	;# 
  1272     019B                     	;# 
  1273     019B                     	;# 
  1274     019B                     	;# 
  1275     019C                     	;# 
  1276     019C                     	;# 
  1277     019D                     	;# 
  1278     019E                     	;# 
  1279     019F                     	;# 
  1280     020C                     	;# 
  1281     020D                     	;# 
  1282     0211                     	;# 
  1283     0211                     	;# 
  1284     0212                     	;# 
  1285     0212                     	;# 
  1286     0213                     	;# 
  1287     0213                     	;# 
  1288     0214                     	;# 
  1289     0214                     	;# 
  1290     0215                     	;# 
  1291     0215                     	;# 
  1292     0215                     	;# 
  1293     0216                     	;# 
  1294     0216                     	;# 
  1295     0217                     	;# 
  1296     0217                     	;# 
  1297     0219                     	;# 
  1298     021A                     	;# 
  1299     021B                     	;# 
  1300     021C                     	;# 
  1301     021D                     	;# 
  1302     021E                     	;# 
  1303     021F                     	;# 
  1304     0291                     	;# 
  1305     0291                     	;# 
  1306     0292                     	;# 
  1307     0293                     	;# 
  1308     0294                     	;# 
  1309     0295                     	;# 
  1310     0295                     	;# 
  1311     0296                     	;# 
  1312     0298                     	;# 
  1313     0298                     	;# 
  1314     0299                     	;# 
  1315     029A                     	;# 
  1316     029B                     	;# 
  1317     029C                     	;# 
  1318     029C                     	;# 
  1319     029D                     	;# 
  1320     029E                     	;# 
  1321     029E                     	;# 
  1322     0311                     	;# 
  1323     0311                     	;# 
  1324     0312                     	;# 
  1325     0313                     	;# 
  1326     0318                     	;# 
  1327     0318                     	;# 
  1328     0319                     	;# 
  1329     031A                     	;# 
  1330     0394                     	;# 
  1331     0395                     	;# 
  1332     0396                     	;# 
  1333     039A                     	;# 
  1334     039C                     	;# 
  1335     039D                     	;# 
  1336     039E                     	;# 
  1337     039F                     	;# 
  1338     0415                     	;# 
  1339     0416                     	;# 
  1340     0417                     	;# 
  1341     041C                     	;# 
  1342     041D                     	;# 
  1343     041E                     	;# 
  1344     0FE4                     	;# 
  1345     0FE5                     	;# 
  1346     0FE6                     	;# 
  1347     0FE7                     	;# 
  1348     0FE8                     	;# 
  1349     0FE9                     	;# 
  1350     0FEA                     	;# 
  1351     0FEB                     	;# 
  1352     0FED                     	;# 
  1353     0FEE                     	;# 
  1354     0FEF                     	;# 
  1355     0000                     	;# 
  1356     0001                     	;# 
  1357     0002                     	;# 
  1358     0003                     	;# 
  1359     0004                     	;# 
  1360     0005                     	;# 
  1361     0006                     	;# 
  1362     0007                     	;# 
  1363     0008                     	;# 
  1364     0009                     	;# 
  1365     000A                     	;# 
  1366     000B                     	;# 
  1367     000C                     	;# 
  1368     000D                     	;# 
  1369     0011                     	;# 
  1370     0012                     	;# 
  1371     0013                     	;# 
  1372     0014                     	;# 
  1373     0015                     	;# 
  1374     0016                     	;# 
  1375     0016                     	;# 
  1376     0017                     	;# 
  1377     0018                     	;# 
  1378     0019                     	;# 
  1379     001A                     	;# 
  1380     001B                     	;# 
  1381     001C                     	;# 
  1382     001E                     	;# 
  1383     001F                     	;# 
  1384     008C                     	;# 
  1385     008D                     	;# 
  1386     0091                     	;# 
  1387     0092                     	;# 
  1388     0093                     	;# 
  1389     0094                     	;# 
  1390     0095                     	;# 
  1391     0096                     	;# 
  1392     0097                     	;# 
  1393     0098                     	;# 
  1394     0099                     	;# 
  1395     009A                     	;# 
  1396     009B                     	;# 
  1397     009B                     	;# 
  1398     009C                     	;# 
  1399     009D                     	;# 
  1400     009E                     	;# 
  1401     010C                     	;# 
  1402     010D                     	;# 
  1403     0111                     	;# 
  1404     0112                     	;# 
  1405     0113                     	;# 
  1406     0114                     	;# 
  1407     0115                     	;# 
  1408     0116                     	;# 
  1409     0117                     	;# 
  1410     0118                     	;# 
  1411     0119                     	;# 
  1412     011A                     	;# 
  1413     011B                     	;# 
  1414     011D                     	;# 
  1415     011E                     	;# 
  1416     018C                     	;# 
  1417     018D                     	;# 
  1418     0191                     	;# 
  1419     0191                     	;# 
  1420     0192                     	;# 
  1421     0193                     	;# 
  1422     0193                     	;# 
  1423     0193                     	;# 
  1424     0194                     	;# 
  1425     0195                     	;# 
  1426     0196                     	;# 
  1427     0199                     	;# 
  1428     019A                     	;# 
  1429     019B                     	;# 
  1430     019B                     	;# 
  1431     019B                     	;# 
  1432     019B                     	;# 
  1433     019C                     	;# 
  1434     019C                     	;# 
  1435     019D                     	;# 
  1436     019E                     	;# 
  1437     019F                     	;# 
  1438     020C                     	;# 
  1439     020D                     	;# 
  1440     0211                     	;# 
  1441     0211                     	;# 
  1442     0212                     	;# 
  1443     0212                     	;# 
  1444     0213                     	;# 
  1445     0213                     	;# 
  1446     0214                     	;# 
  1447     0214                     	;# 
  1448     0215                     	;# 
  1449     0215                     	;# 
  1450     0215                     	;# 
  1451     0216                     	;# 
  1452     0216                     	;# 
  1453     0217                     	;# 
  1454     0217                     	;# 
  1455     0219                     	;# 
  1456     021A                     	;# 
  1457     021B                     	;# 
  1458     021C                     	;# 
  1459     021D                     	;# 
  1460     021E                     	;# 
  1461     021F                     	;# 
  1462     0291                     	;# 
  1463     0291                     	;# 
  1464     0292                     	;# 
  1465     0293                     	;# 
  1466     0294                     	;# 
  1467     0295                     	;# 
  1468     0295                     	;# 
  1469     0296                     	;# 
  1470     0298                     	;# 
  1471     0298                     	;# 
  1472     0299                     	;# 
  1473     029A                     	;# 
  1474     029B                     	;# 
  1475     029C                     	;# 
  1476     029C                     	;# 
  1477     029D                     	;# 
  1478     029E                     	;# 
  1479     029E                     	;# 
  1480     0311                     	;# 
  1481     0311                     	;# 
  1482     0312                     	;# 
  1483     0313                     	;# 
  1484     0318                     	;# 
  1485     0318                     	;# 
  1486     0319                     	;# 
  1487     031A                     	;# 
  1488     0394                     	;# 
  1489     0395                     	;# 
  1490     0396                     	;# 
  1491     039A                     	;# 
  1492     039C                     	;# 
  1493     039D                     	;# 
  1494     039E                     	;# 
  1495     039F                     	;# 
  1496     0415                     	;# 
  1497     0416                     	;# 
  1498     0417                     	;# 
  1499     041C                     	;# 
  1500     041D                     	;# 
  1501     041E                     	;# 
  1502     0FE4                     	;# 
  1503     0FE5                     	;# 
  1504     0FE6                     	;# 
  1505     0FE7                     	;# 
  1506     0FE8                     	;# 
  1507     0FE9                     	;# 
  1508     0FEA                     	;# 
  1509     0FEB                     	;# 
  1510     0FED                     	;# 
  1511     0FEE                     	;# 
  1512     0FEF                     	;# 
  1513     0000                     	;# 
  1514     0001                     	;# 
  1515     0002                     	;# 
  1516     0003                     	;# 
  1517     0004                     	;# 
  1518     0005                     	;# 
  1519     0006                     	;# 
  1520     0007                     	;# 
  1521     0008                     	;# 
  1522     0009                     	;# 
  1523     000A                     	;# 
  1524     000B                     	;# 
  1525     000C                     	;# 
  1526     000D                     	;# 
  1527     0011                     	;# 
  1528     0012                     	;# 
  1529     0013                     	;# 
  1530     0014                     	;# 
  1531     0015                     	;# 
  1532     0016                     	;# 
  1533     0016                     	;# 
  1534     0017                     	;# 
  1535     0018                     	;# 
  1536     0019                     	;# 
  1537     001A                     	;# 
  1538     001B                     	;# 
  1539     001C                     	;# 
  1540     001E                     	;# 
  1541     001F                     	;# 
  1542     008C                     	;# 
  1543     008D                     	;# 
  1544     0091                     	;# 
  1545     0092                     	;# 
  1546     0093                     	;# 
  1547     0094                     	;# 
  1548     0095                     	;# 
  1549     0096                     	;# 
  1550     0097                     	;# 
  1551     0098                     	;# 
  1552     0099                     	;# 
  1553     009A                     	;# 
  1554     009B                     	;# 
  1555     009B                     	;# 
  1556     009C                     	;# 
  1557     009D                     	;# 
  1558     009E                     	;# 
  1559     010C                     	;# 
  1560     010D                     	;# 
  1561     0111                     	;# 
  1562     0112                     	;# 
  1563     0113                     	;# 
  1564     0114                     	;# 
  1565     0115                     	;# 
  1566     0116                     	;# 
  1567     0117                     	;# 
  1568     0118                     	;# 
  1569     0119                     	;# 
  1570     011A                     	;# 
  1571     011B                     	;# 
  1572     011D                     	;# 
  1573     011E                     	;# 
  1574     018C                     	;# 
  1575     018D                     	;# 
  1576     0191                     	;# 
  1577     0191                     	;# 
  1578     0192                     	;# 
  1579     0193                     	;# 
  1580     0193                     	;# 
  1581     0193                     	;# 
  1582     0194                     	;# 
  1583     0195                     	;# 
  1584     0196                     	;# 
  1585     0199                     	;# 
  1586     019A                     	;# 
  1587     019B                     	;# 
  1588     019B                     	;# 
  1589     019B                     	;# 
  1590     019B                     	;# 
  1591     019C                     	;# 
  1592     019C                     	;# 
  1593     019D                     	;# 
  1594     019E                     	;# 
  1595     019F                     	;# 
  1596     020C                     	;# 
  1597     020D                     	;# 
  1598     0211                     	;# 
  1599     0211                     	;# 
  1600     0212                     	;# 
  1601     0212                     	;# 
  1602     0213                     	;# 
  1603     0213                     	;# 
  1604     0214                     	;# 
  1605     0214                     	;# 
  1606     0215                     	;# 
  1607     0215                     	;# 
  1608     0215                     	;# 
  1609     0216                     	;# 
  1610     0216                     	;# 
  1611     0217                     	;# 
  1612     0217                     	;# 
  1613     0219                     	;# 
  1614     021A                     	;# 
  1615     021B                     	;# 
  1616     021C                     	;# 
  1617     021D                     	;# 
  1618     021E                     	;# 
  1619     021F                     	;# 
  1620     0291                     	;# 
  1621     0291                     	;# 
  1622     0292                     	;# 
  1623     0293                     	;# 
  1624     0294                     	;# 
  1625     0295                     	;# 
  1626     0295                     	;# 
  1627     0296                     	;# 
  1628     0298                     	;# 
  1629     0298                     	;# 
  1630     0299                     	;# 
  1631     029A                     	;# 
  1632     029B                     	;# 
  1633     029C                     	;# 
  1634     029C                     	;# 
  1635     029D                     	;# 
  1636     029E                     	;# 
  1637     029E                     	;# 
  1638     0311                     	;# 
  1639     0311                     	;# 
  1640     0312                     	;# 
  1641     0313                     	;# 
  1642     0318                     	;# 
  1643     0318                     	;# 
  1644     0319                     	;# 
  1645     031A                     	;# 
  1646     0394                     	;# 
  1647     0395                     	;# 
  1648     0396                     	;# 
  1649     039A                     	;# 
  1650     039C                     	;# 
  1651     039D                     	;# 
  1652     039E                     	;# 
  1653     039F                     	;# 
  1654     0415                     	;# 
  1655     0416                     	;# 
  1656     0417                     	;# 
  1657     041C                     	;# 
  1658     041D                     	;# 
  1659     041E                     	;# 
  1660     0FE4                     	;# 
  1661     0FE5                     	;# 
  1662     0FE6                     	;# 
  1663     0FE7                     	;# 
  1664     0FE8                     	;# 
  1665     0FE9                     	;# 
  1666     0FEA                     	;# 
  1667     0FEB                     	;# 
  1668     0FED                     	;# 
  1669     0FEE                     	;# 
  1670     0FEF                     	;# 
  1671     0000                     	;# 
  1672     0001                     	;# 
  1673     0002                     	;# 
  1674     0003                     	;# 
  1675     0004                     	;# 
  1676     0005                     	;# 
  1677     0006                     	;# 
  1678     0007                     	;# 
  1679     0008                     	;# 
  1680     0009                     	;# 
  1681     000A                     	;# 
  1682     000B                     	;# 
  1683     000C                     	;# 
  1684     000D                     	;# 
  1685     0011                     	;# 
  1686     0012                     	;# 
  1687     0013                     	;# 
  1688     0014                     	;# 
  1689     0015                     	;# 
  1690     0016                     	;# 
  1691     0016                     	;# 
  1692     0017                     	;# 
  1693     0018                     	;# 
  1694     0019                     	;# 
  1695     001A                     	;# 
  1696     001B                     	;# 
  1697     001C                     	;# 
  1698     001E                     	;# 
  1699     001F                     	;# 
  1700     008C                     	;# 
  1701     008D                     	;# 
  1702     0091                     	;# 
  1703     0092                     	;# 
  1704     0093                     	;# 
  1705     0094                     	;# 
  1706     0095                     	;# 
  1707     0096                     	;# 
  1708     0097                     	;# 
  1709     0098                     	;# 
  1710     0099                     	;# 
  1711     009A                     	;# 
  1712     009B                     	;# 
  1713     009B                     	;# 
  1714     009C                     	;# 
  1715     009D                     	;# 
  1716     009E                     	;# 
  1717     010C                     	;# 
  1718     010D                     	;# 
  1719     0111                     	;# 
  1720     0112                     	;# 
  1721     0113                     	;# 
  1722     0114                     	;# 
  1723     0115                     	;# 
  1724     0116                     	;# 
  1725     0117                     	;# 
  1726     0118                     	;# 
  1727     0119                     	;# 
  1728     011A                     	;# 
  1729     011B                     	;# 
  1730     011D                     	;# 
  1731     011E                     	;# 
  1732     018C                     	;# 
  1733     018D                     	;# 
  1734     0191                     	;# 
  1735     0191                     	;# 
  1736     0192                     	;# 
  1737     0193                     	;# 
  1738     0193                     	;# 
  1739     0193                     	;# 
  1740     0194                     	;# 
  1741     0195                     	;# 
  1742     0196                     	;# 
  1743     0199                     	;# 
  1744     019A                     	;# 
  1745     019B                     	;# 
  1746     019B                     	;# 
  1747     019B                     	;# 
  1748     019B                     	;# 
  1749     019C                     	;# 
  1750     019C                     	;# 
  1751     019D                     	;# 
  1752     019E                     	;# 
  1753     019F                     	;# 
  1754     020C                     	;# 
  1755     020D                     	;# 
  1756     0211                     	;# 
  1757     0211                     	;# 
  1758     0212                     	;# 
  1759     0212                     	;# 
  1760     0213                     	;# 
  1761     0213                     	;# 
  1762     0214                     	;# 
  1763     0214                     	;# 
  1764     0215                     	;# 
  1765     0215                     	;# 
  1766     0215                     	;# 
  1767     0216                     	;# 
  1768     0216                     	;# 
  1769     0217                     	;# 
  1770     0217                     	;# 
  1771     0219                     	;# 
  1772     021A                     	;# 
  1773     021B                     	;# 
  1774     021C                     	;# 
  1775     021D                     	;# 
  1776     021E                     	;# 
  1777     021F                     	;# 
  1778     0291                     	;# 
  1779     0291                     	;# 
  1780     0292                     	;# 
  1781     0293                     	;# 
  1782     0294                     	;# 
  1783     0295                     	;# 
  1784     0295                     	;# 
  1785     0296                     	;# 
  1786     0298                     	;# 
  1787     0298                     	;# 
  1788     0299                     	;# 
  1789     029A                     	;# 
  1790     029B                     	;# 
  1791     029C                     	;# 
  1792     029C                     	;# 
  1793     029D                     	;# 
  1794     029E                     	;# 
  1795     029E                     	;# 
  1796     0311                     	;# 
  1797     0311                     	;# 
  1798     0312                     	;# 
  1799     0313                     	;# 
  1800     0318                     	;# 
  1801     0318                     	;# 
  1802     0319                     	;# 
  1803     031A                     	;# 
  1804     0394                     	;# 
  1805     0395                     	;# 
  1806     0396                     	;# 
  1807     039A                     	;# 
  1808     039C                     	;# 
  1809     039D                     	;# 
  1810     039E                     	;# 
  1811     039F                     	;# 
  1812     0415                     	;# 
  1813     0416                     	;# 
  1814     0417                     	;# 
  1815     041C                     	;# 
  1816     041D                     	;# 
  1817     041E                     	;# 
  1818     0FE4                     	;# 
  1819     0FE5                     	;# 
  1820     0FE6                     	;# 
  1821     0FE7                     	;# 
  1822     0FE8                     	;# 
  1823     0FE9                     	;# 
  1824     0FEA                     	;# 
  1825     0FEB                     	;# 
  1826     0FED                     	;# 
  1827     0FEE                     	;# 
  1828     0FEF                     	;# 
  1829                           
  1830 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  1831     0000                     
  1832 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  1833     0000                     
  1834 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  1835     0000                     
  1836                           	psect	idataBANK1
  1837     0DF5                     __pidataBANK1:
  1838                           
  1839                           ;initializer for _mapping
  1840     0DF5  340B               	retlw	11
  1841     0DF6  340F               	retlw	15
  1842     0DF7  3403               	retlw	3
  1843     0DF8  3404               	retlw	4
  1844     0DF9  3405               	retlw	5
  1845     0DFA  3401               	retlw	1
  1846     0DFB  340D               	retlw	13
  1847     0DFC  340C               	retlw	12
  1848                           
  1849                           	psect	stringtext1
  1850     0800                     __pstringtext1:
  1851     0800                     _de_sigmoidValues:
  1852     0800  3440               	retlw	64
  1853     0801  3432               	retlw	50
  1854     0802  341B               	retlw	27
  1855     0803  340C               	retlw	12
  1856     0804  3405               	retlw	5
  1857     0805  3402               	retlw	2
  1858     0806  3401               	retlw	1
  1859     0807  3400               	retlw	0
  1860     0808  3400               	retlw	0
  1861     0809  3400               	retlw	0
  1862     080A  3401               	retlw	1
  1863     080B  3402               	retlw	2
  1864     080C  3405               	retlw	5
  1865     080D  340C               	retlw	12
  1866     080E  341B               	retlw	27
  1867     080F  3432               	retlw	50
  1868     0810                     __end_of_de_sigmoidValues:
  1869                           
  1870                           	psect	stringtext2
  1871     0810                     __pstringtext2:
  1872     0810                     _sigmoidValues:
  1873     0810  3480               	retlw	128
  1874     0811  34BA               	retlw	186
  1875     0812  34E1               	retlw	225
  1876     0813  34F3               	retlw	243
  1877     0814  34FA               	retlw	250
  1878     0815  34FD               	retlw	253
  1879     0816  34FE               	retlw	254
  1880     0817  34FF               	retlw	255
  1881     0818  3400               	retlw	0
  1882     0819  3400               	retlw	0
  1883     081A  3401               	retlw	1
  1884     081B  3402               	retlw	2
  1885     081C  3405               	retlw	5
  1886     081D  340C               	retlw	12
  1887     081E  341E               	retlw	30
  1888     081F  3445               	retlw	69
  1889     0820                     __end_of_sigmoidValues:
  1890                           
  1891                           	psect	stringtext3
  1892     0820                     __pstringtext3:
  1893     0820                     _spi1_configuration:
  1894     0820  3402               	retlw	2
  1895     0821  3440               	retlw	64
  1896     0822  3401               	retlw	1
  1897     0823  3400               	retlw	0
  1898     0824                     __end_of_spi1_configuration:
  1899                           
  1900                           	psect	nvBANK1
  1901     00E8                     __pnvBANK1:
  1902     00E8                     _EUSART_ErrorHandler:
  1903     00E8                     	ds	2
  1904     00EA                     _EUSART_OverrunErrorHandler:
  1905     00EA                     	ds	2
  1906     00EC                     _EUSART_FramingErrorHandler:
  1907     00EC                     	ds	2
  1908     0011                     _PIR1bits	set	17
  1909     000B                     _INTCONbits	set	11
  1910     008C                     _TRISAbits	set	140
  1911     0097                     _WDTCON	set	151
  1912     0098                     _OSCTUNE	set	152
  1913     0099                     _OSCCON	set	153
  1914     008D                     _TRISBbits	set	141
  1915     0095                     _OPTION_REGbits	set	149
  1916     008D                     _TRISB	set	141
  1917     008C                     _TRISA	set	140
  1918     010D                     _LATBbits	set	269
  1919     010C                     _LATAbits	set	268
  1920     0116                     _BORCON	set	278
  1921     011E                     _APFCON1	set	286
  1922     011D                     _APFCON0	set	285
  1923     010D                     _LATB	set	269
  1924     010C                     _LATA	set	268
  1925     018C                     _ANSELA	set	396
  1926     018D                     _ANSELB	set	397
  1927     019A                     _TXREG	set	410
  1928     0199                     _RCREG	set	409
  1929     019D                     _RCSTAbits	set	413
  1930     019E                     _TXSTAbits	set	414
  1931     019C                     _SPBRGH	set	412
  1932     019B                     _SPBRGL	set	411
  1933     019E                     _TXSTA	set	414
  1934     019D                     _RCSTA	set	413
  1935     019F                     _BAUDCON	set	415
  1936     0196                     _EECON2	set	406
  1937     0193                     _EEDATL	set	403
  1938     0194                     _EEDATH	set	404
  1939     0195                     _EECON1bits	set	405
  1940     0192                     _EEADRH	set	402
  1941     0191                     _EEADRL	set	401
  1942     0211                     _SSP1BUF	set	529
  1943     0216                     _SSP1CON2	set	534
  1944     0215                     _SSP1CON1bits	set	533
  1945     0212                     _SSP1ADD	set	530
  1946     0215                     _SSP1CON1	set	533
  1947     0214                     _SSP1STAT	set	532
  1948     020C                     _WPUA	set	524
  1949     020D                     _WPUB	set	525
  1950                           
  1951                           	psect	cinit
  1952     07D1                     start_initialization:	
  1953                           ; #config settings
  1954                           
  1955     07D1                     __initialization:
  1956                           
  1957                           ; Initialize objects allocated to BANK1
  1958     07D1  30F5               	movlw	low __pidataBANK1
  1959     07D2  0084               	movwf	4
  1960     07D3  308D               	movlw	(high __pidataBANK1)| (0+128)
  1961     07D4  0085               	movwf	5
  1962     07D5  30E0               	movlw	low __pdataBANK1
  1963     07D6  0086               	movwf	6
  1964     07D7  3000               	movlw	high __pdataBANK1
  1965     07D8  0087               	movwf	7
  1966     07D9  3008               	movlw	8
  1967     07DA  318D  25E8  3187   	fcall	init_ram
  1968                           
  1969                           ; Clear objects allocated to BANK0
  1970     07DD  304A               	movlw	low __pbssBANK0
  1971     07DE  0084               	movwf	4
  1972     07DF  3000               	movlw	high __pbssBANK0
  1973     07E0  0085               	movwf	5
  1974     07E1  3026               	movlw	38
  1975     07E2  318D  25E2  3187   	fcall	clear_ram0
  1976                           
  1977                           ; Clear objects allocated to BANK1
  1978     07E5  30A0               	movlw	low __pbssBANK1
  1979     07E6  0084               	movwf	4
  1980     07E7  3000               	movlw	high __pbssBANK1
  1981     07E8  0085               	movwf	5
  1982     07E9  3040               	movlw	64
  1983     07EA  318D  25E2  3187   	fcall	clear_ram0
  1984                           
  1985                           ; Clear objects allocated to BANK2
  1986     07ED  3020               	movlw	low __pbssBANK2
  1987     07EE  0084               	movwf	4
  1988     07EF  3001               	movlw	high __pbssBANK2
  1989     07F0  0085               	movwf	5
  1990     07F1  3050               	movlw	80
  1991     07F2  318D  25E2  3187   	fcall	clear_ram0
  1992                           
  1993                           ; Clear objects allocated to BANK3
  1994     07F5  30A0               	movlw	low __pbssBANK3
  1995     07F6  0084               	movwf	4
  1996     07F7  3001               	movlw	high __pbssBANK3
  1997     07F8  0085               	movwf	5
  1998     07F9  3040               	movlw	64
  1999     07FA  318D  25E2  3187   	fcall	clear_ram0
  2000     07FD                     end_of_initialization:	
  2001                           ;End of C runtime variable initialization code
  2002                           
  2003     07FD                     __end_of__initialization:
  2004     07FD  0020               	movlb	0
  2005     07FE  3183  2B73         	ljmp	_main	;jump to C main() function
  2006                           
  2007                           	psect	bssBANK0
  2008     004A                     __pbssBANK0:
  2009     004A                     _DC_DZ2:
  2010     004A                     	ds	4
  2011     004E                     _Z2:
  2012     004E                     	ds	4
  2013     0052                     _Z1:
  2014     0052                     	ds	4
  2015     0056                     _Y2:
  2016     0056                     	ds	4
  2017     005A                     _Y1:
  2018     005A                     	ds	4
  2019     005E                     _remainingMoves:
  2020     005E                     	ds	1
  2021     005F                     _foodPosition:
  2022     005F                     	ds	1
  2023     0060                     _headPosition:
  2024     0060                     	ds	1
  2025     0061                     _choice:
  2026     0061                     	ds	1
  2027     0062                     _snakeSize:
  2028     0062                     	ds	1
  2029     0063                     _eusartRxLastError:
  2030     0063                     	ds	1
  2031     0064                     _Y0:
  2032     0064                     	ds	8
  2033     006C                     _seed:
  2034     006C                     	ds	4
  2035                           
  2036                           	psect	bssBANK1
  2037     00A0                     __pbssBANK1:
  2038     00A0                     _matrix:
  2039     00A0                     	ds	8
  2040     00A8                     _DC_DB1:
  2041     00A8                     	ds	4
  2042     00AC                     _DC_DZ1:
  2043     00AC                     	ds	4
  2044     00B0                     _DC_DY1:
  2045     00B0                     	ds	4
  2046     00B4                     _DC_DB2:
  2047     00B4                     	ds	4
  2048     00B8                     _DZ2_DB2:
  2049     00B8                     	ds	4
  2050     00BC                     _DZ1_DB1:
  2051     00BC                     	ds	4
  2052     00C0                     _DZ2_DY1:
  2053     00C0                     	ds	4
  2054     00C4                     _DC_DY2:
  2055     00C4                     	ds	4
  2056     00C8                     _B2:
  2057     00C8                     	ds	4
  2058     00CC                     _B1:
  2059     00CC                     	ds	4
  2060     00D0                     _field:
  2061     00D0                     	ds	16
  2062                           
  2063                           	psect	dataBANK1
  2064     00E0                     __pdataBANK1:
  2065     00E0                     _mapping:
  2066     00E0                     	ds	8
  2067                           
  2068                           	psect	bssBANK2
  2069     0120                     __pbssBANK2:
  2070     0120                     _W1:
  2071     0120                     	ds	32
  2072     0140                     _DC_DW2:
  2073     0140                     	ds	16
  2074     0150                     _DZ2_DW2:
  2075     0150                     	ds	16
  2076     0160                     _W2:
  2077     0160                     	ds	16
  2078                           
  2079                           	psect	bssBANK3
  2080     01A0                     __pbssBANK3:
  2081     01A0                     _DC_DW1:
  2082     01A0                     	ds	32
  2083     01C0                     _DZ1_DW1:
  2084     01C0                     	ds	32
  2085                           
  2086                           	psect	inittext
  2087     0DE8                     init_ram:
  2088     0DE8  00FE               	movwf	btemp
  2089     0DE9                     initloop:
  2090     0DE9  0012               	moviw fsr0++
  2091     0DEA  001E               	movwi fsr1++
  2092     0DEB  0BFE               	decfsz	btemp,f
  2093     0DEC  2DE9               	goto	initloop
  2094     0DED  3400               	retlw	0
  2095                           
  2096                           	psect	clrtext
  2097     0DE2                     clear_ram0:	
  2098                           ;	Called with FSR0 containing the base address, and
  2099                           ;	WREG with the size to clear
  2100                           
  2101     0DE2  0064               	clrwdt	;clear the watchdog before getting into this loop
  2102     0DE3                     clrloop0:
  2103     0DE3  0180               	clrf	0	;clear RAM location pointed to by FSR
  2104     0DE4  3101               	addfsr 0,1
  2105     0DE5  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2106     0DE6  2DE3               	goto	clrloop0	;have we reached the end yet?
  2107     0DE7  3400               	retlw	0	;all done for this memory range, return
  2108                           
  2109                           	psect	cstackCOMMON
  2110     0070                     __pcstackCOMMON:
  2111     0070                     ?_EUSART_SetFramingErrorHandler:
  2112     0070                     ?_EUSART_SetOverrunErrorHandler:	
  2113                           ; 1 bytes @ 0x0
  2114                           
  2115     0070                     ?_EUSART_SetErrorHandler:	
  2116                           ; 1 bytes @ 0x0
  2117                           
  2118     0070                     ?_OSCILLATOR_Initialize:	
  2119                           ; 1 bytes @ 0x0
  2120                           
  2121     0070                     ??_OSCILLATOR_Initialize:	
  2122                           ; 1 bytes @ 0x0
  2123                           
  2124     0070                     ?_WDT_Initialize:	
  2125                           ; 1 bytes @ 0x0
  2126                           
  2127     0070                     ??_WDT_Initialize:	
  2128                           ; 1 bytes @ 0x0
  2129                           
  2130     0070                     ?_snake_initiate:	
  2131                           ; 1 bytes @ 0x0
  2132                           
  2133     0070                     ?_ai_initiate:	
  2134                           ; 1 bytes @ 0x0
  2135                           
  2136     0070                     ?_initMAX7219:	
  2137                           ; 1 bytes @ 0x0
  2138                           
  2139     0070                     ?_snake_getField:	
  2140                           ; 1 bytes @ 0x0
  2141                           
  2142     0070                     ??_snake_getField:	
  2143                           ; 1 bytes @ 0x0
  2144                           
  2145     0070                     ?_ledClear:	
  2146                           ; 1 bytes @ 0x0
  2147                           
  2148     0070                     ?_snake_getFoodPosition:	
  2149                           ; 1 bytes @ 0x0
  2150                           
  2151     0070                     ??_snake_getFoodPosition:	
  2152                           ; 1 bytes @ 0x0
  2153                           
  2154     0070                     ?_sendMatrix:	
  2155                           ; 1 bytes @ 0x0
  2156                           
  2157     0070                     ?_snake_getSurroundings:	
  2158                           ; 1 bytes @ 0x0
  2159                           
  2160     0070                     ?_ai_getInputField:	
  2161                           ; 1 bytes @ 0x0
  2162                           
  2163     0070                     ??_ai_getInputField:	
  2164                           ; 1 bytes @ 0x0
  2165                           
  2166     0070                     ?_snake_move:	
  2167                           ; 1 bytes @ 0x0
  2168                           
  2169     0070                     ?_ai_run:	
  2170                           ; 1 bytes @ 0x0
  2171                           
  2172     0070                     ?_ai_propagate:	
  2173                           ; 1 bytes @ 0x0
  2174                           
  2175     0070                     ?_srand:	
  2176                           ; 1 bytes @ 0x0
  2177                           
  2178     0070                     ?_sigmoid:	
  2179                           ; 1 bytes @ 0x0
  2180                           
  2181     0070                     ??_sigmoid:	
  2182                           ; 1 bytes @ 0x0
  2183                           
  2184     0070                     ?_de_sigmoid:	
  2185                           ; 1 bytes @ 0x0
  2186                           
  2187     0070                     ??_de_sigmoid:	
  2188                           ; 1 bytes @ 0x0
  2189                           
  2190     0070                     ?_EUSART_Initialize:	
  2191                           ; 1 bytes @ 0x0
  2192                           
  2193     0070                     ?_PIN_MANAGER_Initialize:	
  2194                           ; 1 bytes @ 0x0
  2195                           
  2196     0070                     ??_PIN_MANAGER_Initialize:	
  2197                           ; 1 bytes @ 0x0
  2198                           
  2199     0070                     ?_SPI1_Initialize:	
  2200                           ; 1 bytes @ 0x0
  2201                           
  2202     0070                     ??_SPI1_Initialize:	
  2203                           ; 1 bytes @ 0x0
  2204                           
  2205     0070                     ?_SPI1_WriteByte:	
  2206                           ; 1 bytes @ 0x0
  2207                           
  2208     0070                     ??_SPI1_WriteByte:	
  2209                           ; 1 bytes @ 0x0
  2210                           
  2211     0070                     ?_SYSTEM_Initialize:	
  2212                           ; 1 bytes @ 0x0
  2213                           
  2214     0070                     ?_deactivateElevator:	
  2215                           ; 1 bytes @ 0x0
  2216                           
  2217     0070                     ??_deactivateElevator:	
  2218                           ; 1 bytes @ 0x0
  2219                           
  2220     0070                     ?_main:	
  2221                           ; 1 bytes @ 0x0
  2222                           
  2223     0070                     ?___lmul:	
  2224                           ; 1 bytes @ 0x0
  2225                           
  2226     0070                     SPI1_WriteByte@byte:	
  2227                           ; 4 bytes @ 0x0
  2228                           
  2229     0070                     ledClear@c:	
  2230                           ; 1 bytes @ 0x0
  2231                           
  2232     0070                     EUSART_SetFramingErrorHandler@interruptHandler:	
  2233                           ; 1 bytes @ 0x0
  2234                           
  2235     0070                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  2236                           ; 2 bytes @ 0x0
  2237                           
  2238     0070                     EUSART_SetErrorHandler@interruptHandler:	
  2239                           ; 2 bytes @ 0x0
  2240                           
  2241     0070                     srand@s:	
  2242                           ; 2 bytes @ 0x0
  2243                           
  2244     0070                     ___lmul@multiplier:	
  2245                           ; 2 bytes @ 0x0
  2246                           
  2247                           
  2248                           ; 4 bytes @ 0x0
  2249     0070                     	ds	1
  2250     0071                     ??_ledClear:
  2251     0071                     ?_txMAX7219:	
  2252                           ; 1 bytes @ 0x1
  2253                           
  2254     0071                     txMAX7219@dat0:	
  2255                           ; 1 bytes @ 0x1
  2256                           
  2257     0071                     sigmoid@z:	
  2258                           ; 1 bytes @ 0x1
  2259                           
  2260     0071                     de_sigmoid@z:	
  2261                           ; 1 bytes @ 0x1
  2262                           
  2263                           
  2264                           ; 1 bytes @ 0x1
  2265     0071                     	ds	1
  2266     0072                     ??_EUSART_SetFramingErrorHandler:
  2267     0072                     ??_EUSART_SetOverrunErrorHandler:	
  2268                           ; 1 bytes @ 0x2
  2269                           
  2270     0072                     ??_EUSART_SetErrorHandler:	
  2271                           ; 1 bytes @ 0x2
  2272                           
  2273     0072                     ??_srand:	
  2274                           ; 1 bytes @ 0x2
  2275                           
  2276     0072                     ??_EUSART_Initialize:	
  2277                           ; 1 bytes @ 0x2
  2278                           
  2279     0072                     ??_SYSTEM_Initialize:	
  2280                           ; 1 bytes @ 0x2
  2281                           
  2282     0072                     ??_txMAX7219:	
  2283                           ; 1 bytes @ 0x2
  2284                           
  2285     0072                     ?___wmul:	
  2286                           ; 1 bytes @ 0x2
  2287                           
  2288     0072                     txMAX7219@addr0:	
  2289                           ; 2 bytes @ 0x2
  2290                           
  2291     0072                     ___wmul@multiplier:	
  2292                           ; 1 bytes @ 0x2
  2293                           
  2294                           
  2295                           ; 2 bytes @ 0x2
  2296     0072                     	ds	1
  2297     0073                     ??_initMAX7219:
  2298     0073                     ??_sendMatrix:	
  2299                           ; 1 bytes @ 0x3
  2300                           
  2301     0073                     ledClear@l:	
  2302                           ; 1 bytes @ 0x3
  2303                           
  2304                           
  2305                           ; 1 bytes @ 0x3
  2306     0073                     	ds	1
  2307     0074                     sendMatrix@b:
  2308     0074                     ___wmul@multiplicand:	
  2309                           ; 1 bytes @ 0x4
  2310                           
  2311     0074                     ___lmul@multiplicand:	
  2312                           ; 2 bytes @ 0x4
  2313                           
  2314                           
  2315                           ; 4 bytes @ 0x4
  2316     0074                     	ds	1
  2317     0075                     sendMatrix@nb:
  2318                           
  2319                           ; 1 bytes @ 0x5
  2320     0075                     	ds	1
  2321     0076                     ??___wmul:
  2322     0076                     sendMatrix@j:	
  2323                           ; 1 bytes @ 0x6
  2324                           
  2325     0076                     ___wmul@product:	
  2326                           ; 1 bytes @ 0x6
  2327                           
  2328                           
  2329                           ; 2 bytes @ 0x6
  2330     0076                     	ds	1
  2331     0077                     sendMatrix@i:
  2332                           
  2333                           ; 1 bytes @ 0x7
  2334     0077                     	ds	1
  2335     0078                     ??___lmul:
  2336     0078                     ?___awdiv:	
  2337                           ; 1 bytes @ 0x8
  2338                           
  2339     0078                     ___awdiv@divisor:	
  2340                           ; 2 bytes @ 0x8
  2341                           
  2342     0078                     ___lmul@product:	
  2343                           ; 2 bytes @ 0x8
  2344                           
  2345                           
  2346                           ; 4 bytes @ 0x8
  2347     0078                     	ds	2
  2348     007A                     ___awdiv@dividend:
  2349                           
  2350                           ; 2 bytes @ 0xA
  2351     007A                     	ds	2
  2352     007C                     ??___awdiv:
  2353     007C                     ?_rand:	
  2354                           ; 1 bytes @ 0xC
  2355                           
  2356                           
  2357                           ; 2 bytes @ 0xC
  2358     007C                     	ds	1
  2359     007D                     ?_ledSet:
  2360     007D                     ledSet@c:	
  2361                           ; 1 bytes @ 0xD
  2362                           
  2363                           
  2364                           ; 1 bytes @ 0xD
  2365     007D                     	ds	1
  2366                           
  2367                           	psect	cstackBANK0
  2368     0020                     __pcstackBANK0:
  2369     0020                     ??_rand:
  2370     0020                     ___awdiv@counter:	
  2371                           ; 1 bytes @ 0x0
  2372                           
  2373                           
  2374                           ; 1 bytes @ 0x0
  2375     0020                     	ds	1
  2376     0021                     ___awdiv@sign:
  2377                           
  2378                           ; 1 bytes @ 0x1
  2379     0021                     	ds	1
  2380     0022                     ___awdiv@quotient:
  2381                           
  2382                           ; 2 bytes @ 0x2
  2383     0022                     	ds	2
  2384     0024                     ??_snake_initiate:
  2385     0024                     ??_ai_initiate:	
  2386                           ; 1 bytes @ 0x4
  2387                           
  2388     0024                     ??_ledSet:	
  2389                           ; 1 bytes @ 0x4
  2390                           
  2391     0024                     ??_snake_getSurroundings:	
  2392                           ; 1 bytes @ 0x4
  2393                           
  2394     0024                     ??_ai_run:	
  2395                           ; 1 bytes @ 0x4
  2396                           
  2397     0024                     ??_ai_propagate:	
  2398                           ; 1 bytes @ 0x4
  2399                           
  2400                           
  2401                           ; 1 bytes @ 0x4
  2402     0024                     	ds	1
  2403     0025                     snake_initiate@i:
  2404                           
  2405                           ; 1 bytes @ 0x5
  2406     0025                     	ds	1
  2407     0026                     ??_snake_move:
  2408     0026                     ledSet@l:	
  2409                           ; 1 bytes @ 0x6
  2410                           
  2411     0026                     snake_getSurroundings@p:	
  2412                           ; 1 bytes @ 0x6
  2413                           
  2414                           
  2415                           ; 1 bytes @ 0x6
  2416     0026                     	ds	1
  2417     0027                     snake_getSurroundings@lf:
  2418     0027                     ai_initiate@i:	
  2419                           ; 1 bytes @ 0x7
  2420                           
  2421     0027                     ai_run@i:	
  2422                           ; 1 bytes @ 0x7
  2423                           
  2424                           
  2425                           ; 1 bytes @ 0x7
  2426     0027                     	ds	1
  2427     0028                     snake_move@direction:
  2428     0028                     snake_getSurroundings@cf:	
  2429                           ; 1 bytes @ 0x8
  2430                           
  2431     0028                     ai_initiate@i_869:	
  2432                           ; 1 bytes @ 0x8
  2433                           
  2434     0028                     ai_run@i_875:	
  2435                           ; 1 bytes @ 0x8
  2436                           
  2437                           
  2438                           ; 1 bytes @ 0x8
  2439     0028                     	ds	1
  2440     0029                     snake_move@incentive:
  2441     0029                     snake_getSurroundings@i:	
  2442                           ; 1 bytes @ 0x9
  2443                           
  2444     0029                     ai_initiate@j:	
  2445                           ; 1 bytes @ 0x9
  2446                           
  2447     0029                     ai_run@i_877:	
  2448                           ; 1 bytes @ 0x9
  2449                           
  2450                           
  2451                           ; 1 bytes @ 0x9
  2452     0029                     	ds	1
  2453     002A                     snake_move@i:
  2454     002A                     snake_getSurroundings@lh:	
  2455                           ; 1 bytes @ 0xA
  2456                           
  2457     002A                     ai_initiate@j_868:	
  2458                           ; 1 bytes @ 0xA
  2459                           
  2460     002A                     ai_run@i_878:	
  2461                           ; 1 bytes @ 0xA
  2462                           
  2463     002A                     ai_propagate@S:	
  2464                           ; 1 bytes @ 0xA
  2465                           
  2466                           
  2467                           ; 4 bytes @ 0xA
  2468     002A                     	ds	1
  2469     002B                     snake_getSurroundings@ch:
  2470     002B                     ai_run@z:	
  2471                           ; 1 bytes @ 0xB
  2472                           
  2473                           
  2474                           ; 2 bytes @ 0xB
  2475     002B                     	ds	1
  2476     002C                     snake_getSurroundings@i_803:
  2477                           
  2478                           ; 1 bytes @ 0xC
  2479     002C                     	ds	1
  2480     002D                     snake_getSurroundings@surroundings:
  2481     002D                     ai_run@j:	
  2482                           ; 1 bytes @ 0xD
  2483                           
  2484                           
  2485                           ; 1 bytes @ 0xD
  2486     002D                     	ds	1
  2487     002E                     ai_run@j_876:
  2488     002E                     _ai_propagate$1580:	
  2489                           ; 1 bytes @ 0xE
  2490                           
  2491                           
  2492                           ; 2 bytes @ 0xE
  2493     002E                     	ds	2
  2494     0030                     ai_propagate@incentive:
  2495                           
  2496                           ; 1 bytes @ 0x10
  2497     0030                     	ds	1
  2498     0031                     ai_propagate@i:
  2499                           
  2500                           ; 1 bytes @ 0x11
  2501     0031                     	ds	1
  2502     0032                     ai_propagate@i_883:
  2503                           
  2504                           ; 1 bytes @ 0x12
  2505     0032                     	ds	1
  2506     0033                     ai_propagate@i_885:
  2507                           
  2508                           ; 1 bytes @ 0x13
  2509     0033                     	ds	1
  2510     0034                     ai_propagate@i_887:
  2511                           
  2512                           ; 1 bytes @ 0x14
  2513     0034                     	ds	1
  2514     0035                     ai_propagate@i_892:
  2515                           
  2516                           ; 1 bytes @ 0x15
  2517     0035                     	ds	1
  2518     0036                     ai_propagate@i_894:
  2519                           
  2520                           ; 1 bytes @ 0x16
  2521     0036                     	ds	1
  2522     0037                     ai_propagate@i_896:
  2523                           
  2524                           ; 1 bytes @ 0x17
  2525     0037                     	ds	1
  2526     0038                     ai_propagate@j_886:
  2527                           
  2528                           ; 1 bytes @ 0x18
  2529     0038                     	ds	1
  2530     0039                     ai_propagate@i_890:
  2531                           
  2532                           ; 1 bytes @ 0x19
  2533     0039                     	ds	1
  2534     003A                     ai_propagate@j_893:
  2535                           
  2536                           ; 1 bytes @ 0x1A
  2537     003A                     	ds	1
  2538     003B                     ai_propagate@j_895:
  2539                           
  2540                           ; 1 bytes @ 0x1B
  2541     003B                     	ds	1
  2542     003C                     ai_propagate@j:
  2543                           
  2544                           ; 1 bytes @ 0x1C
  2545     003C                     	ds	1
  2546     003D                     ai_propagate@j_891:
  2547                           
  2548                           ; 1 bytes @ 0x1D
  2549     003D                     	ds	1
  2550     003E                     ai_propagate@j_889:
  2551                           
  2552                           ; 1 bytes @ 0x1E
  2553     003E                     	ds	1
  2554     003F                     ??_main:
  2555                           
  2556                           ; 1 bytes @ 0x1F
  2557     003F                     	ds	3
  2558     0042                     main@field:
  2559                           
  2560                           ; 1 bytes @ 0x22
  2561     0042                     	ds	1
  2562     0043                     main@foodPosition:
  2563                           
  2564                           ; 1 bytes @ 0x23
  2565     0043                     	ds	1
  2566     0044                     main@foodPosition_671:
  2567                           
  2568                           ; 1 bytes @ 0x24
  2569     0044                     	ds	1
  2570     0045                     main@incentive:
  2571                           
  2572                           ; 1 bytes @ 0x25
  2573     0045                     	ds	1
  2574     0046                     main@i:
  2575                           
  2576                           ; 1 bytes @ 0x26
  2577     0046                     	ds	1
  2578     0047                     main@j:
  2579                           
  2580                           ; 1 bytes @ 0x27
  2581     0047                     	ds	1
  2582     0048                     main@i_669:
  2583                           
  2584                           ; 1 bytes @ 0x28
  2585     0048                     	ds	1
  2586     0049                     main@j_670:
  2587                           
  2588                           ; 1 bytes @ 0x29
  2589     0049                     	ds	1
  2590                           
  2591                           	psect	maintext
  2592     0373                     __pmaintext:	
  2593 ;;
  2594 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  2595 ;;
  2596 ;; *************** function _main *****************
  2597 ;; Defined at:
  2598 ;;		line 67 in file "main.c"
  2599 ;; Parameters:    Size  Location     Type
  2600 ;;		None
  2601 ;; Auto vars:     Size  Location     Type
  2602 ;;  j               1   41[BANK0 ] unsigned char 
  2603 ;;  j               1   39[BANK0 ] unsigned char 
  2604 ;;  i               1   40[BANK0 ] unsigned char 
  2605 ;;  incentive       1   37[BANK0 ] char 
  2606 ;;  foodPosition    1   36[BANK0 ] unsigned char 
  2607 ;;  i               1   38[BANK0 ] unsigned char 
  2608 ;;  foodPosition    1   35[BANK0 ] unsigned char 
  2609 ;;  field           1   34[BANK0 ] PTR unsigned char 
  2610 ;;		 -> field(16), 
  2611 ;; Return value:  Size  Location     Type
  2612 ;;                  1    wreg      void 
  2613 ;; Registers used:
  2614 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2615 ;; Tracked objects:
  2616 ;;		On entry : B1F/0
  2617 ;;		On exit  : 0/0
  2618 ;;		Unchanged: 0/0
  2619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2620 ;;      Params:         0       0       0       0       0       0
  2621 ;;      Locals:         0       8       0       0       0       0
  2622 ;;      Temps:          0       3       0       0       0       0
  2623 ;;      Totals:         0      11       0       0       0       0
  2624 ;;Total ram usage:       11 bytes
  2625 ;; Hardware stack levels required when called: 4
  2626 ;; This function calls:
  2627 ;;		_SYSTEM_Initialize
  2628 ;;		___awdiv
  2629 ;;		_ai_getInputField
  2630 ;;		_ai_initiate
  2631 ;;		_ai_propagate
  2632 ;;		_ai_run
  2633 ;;		_deactivateElevator
  2634 ;;		_initMAX7219
  2635 ;;		_ledClear
  2636 ;;		_ledSet
  2637 ;;		_sendMatrix
  2638 ;;		_snake_getField
  2639 ;;		_snake_getFoodPosition
  2640 ;;		_snake_getSurroundings
  2641 ;;		_snake_initiate
  2642 ;;		_snake_move
  2643 ;; This function is called by:
  2644 ;;		Startup code after reset
  2645 ;; This function uses a non-reentrant model
  2646 ;;
  2647                           
  2648     0373                     _main:	
  2649                           ;psect for function _main
  2650                           
  2651     0373                     l3137:	
  2652                           ;incstack = 0
  2653                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2654                           
  2655                           
  2656                           ;main.c: 70:     SYSTEM_Initialize();
  2657     0373  318E  2613  3183   	fcall	_SYSTEM_Initialize
  2658     0376                     l3139:
  2659                           
  2660                           ;main.c: 87:     deactivateElevator();
  2661     0376  3180  2005  3183   	fcall	_deactivateElevator
  2662     0379                     l3141:
  2663                           
  2664                           ;main.c: 88:     snake_initiate();
  2665     0379  318F  2708  3183   	fcall	_snake_initiate
  2666     037C                     l3143:
  2667                           
  2668                           ;main.c: 89:     ai_initiate();
  2669     037C  3180  2050  3183   	fcall	_ai_initiate
  2670     037F                     l3145:
  2671                           
  2672                           ;main.c: 90:     initMAX7219();
  2673     037F  3180  2012  3183   	fcall	_initMAX7219
  2674     0382                     l3147:
  2675                           
  2676                           ;main.c: 103:     uint8_t* field = snake_getField();
  2677     0382  318D  25C2  3183   	fcall	_snake_getField
  2678     0385  0020               	movlb	0	; select bank0
  2679     0386  00C2               	movwf	main@field
  2680     0387                     l3149:
  2681                           
  2682                           ;main.c: 105:     for(uint8_t i = 0; i < 4; i++){
  2683     0387  01C6               	clrf	main@i
  2684     0388                     l3155:
  2685                           
  2686                           ;main.c: 106:         for(uint8_t j = 0; j < 4; j++){
  2687     0388  01C7               	clrf	main@j
  2688     0389                     l3161:
  2689                           
  2690                           ;main.c: 107:             if(field[i+j*4]>0){
  2691     0389  0847               	movf	main@j,w
  2692     038A  00BF               	movwf	??_main
  2693     038B  3001               	movlw	1
  2694     038C                     u2245:
  2695     038C  35BF               	lslf	??_main,f
  2696     038D  3EFF               	addlw	-1
  2697     038E  1D03               	skipz
  2698     038F  2B8C               	goto	u2245
  2699     0390  353F               	lslf	??_main,w
  2700     0391  0742               	addwf	main@field,w
  2701     0392  00C0               	movwf	??_main+1
  2702     0393  0846               	movf	main@i,w
  2703     0394  0740               	addwf	??_main+1,w
  2704     0395  00C1               	movwf	??_main+2
  2705     0396  0841               	movf	??_main+2,w
  2706     0397  0086               	movwf	6
  2707     0398  0187               	clrf	7
  2708     0399  0801               	movf	1,w
  2709     039A  1903               	btfsc	3,2
  2710     039B  2B9D               	goto	u2251
  2711     039C  2B9E               	goto	u2250
  2712     039D                     u2251:
  2713     039D  2BA5               	goto	l3165
  2714     039E                     u2250:
  2715     039E                     l3163:
  2716                           
  2717                           ;main.c: 108:                 ledSet(i,j);
  2718     039E  0847               	movf	main@j,w
  2719     039F  00FD               	movwf	ledSet@c
  2720     03A0  0846               	movf	main@i,w
  2721     03A1  318E  2655  3183   	fcall	_ledSet
  2722                           
  2723                           ;main.c: 109:             } else{
  2724     03A4  2BAB               	goto	l3167
  2725     03A5                     l3165:
  2726                           
  2727                           ;main.c: 110:                 ledClear(i,j);
  2728     03A5  0847               	movf	main@j,w
  2729     03A6  00F0               	movwf	ledClear@c
  2730     03A7  0846               	movf	main@i,w
  2731     03A8  318E  2643  3183   	fcall	_ledClear
  2732     03AB                     l3167:
  2733                           
  2734                           ;main.c: 112:         }
  2735     03AB  3001               	movlw	1
  2736     03AC  0020               	movlb	0	; select bank0
  2737     03AD  00BF               	movwf	??_main
  2738     03AE  083F               	movf	??_main,w
  2739     03AF  07C7               	addwf	main@j,f
  2740     03B0                     l3169:
  2741     03B0  3004               	movlw	4
  2742     03B1  0247               	subwf	main@j,w
  2743     03B2  1C03               	skipc
  2744     03B3  2BB5               	goto	u2261
  2745     03B4  2BB6               	goto	u2260
  2746     03B5                     u2261:
  2747     03B5  2B89               	goto	l3161
  2748     03B6                     u2260:
  2749     03B6                     l3171:
  2750                           
  2751                           ;main.c: 113:     }
  2752     03B6  3001               	movlw	1
  2753     03B7  00BF               	movwf	??_main
  2754     03B8  083F               	movf	??_main,w
  2755     03B9  07C6               	addwf	main@i,f
  2756     03BA                     l3173:
  2757     03BA  3004               	movlw	4
  2758     03BB  0246               	subwf	main@i,w
  2759     03BC  1C03               	skipc
  2760     03BD  2BBF               	goto	u2271
  2761     03BE  2BC0               	goto	u2270
  2762     03BF                     u2271:
  2763     03BF  2B88               	goto	l3155
  2764     03C0                     u2270:
  2765     03C0                     l3175:
  2766                           
  2767                           ;main.c: 115:     uint8_t foodPosition = snake_getFoodPosition();
  2768     03C0  318D  25C4  3183   	fcall	_snake_getFoodPosition
  2769     03C3  0020               	movlb	0	; select bank0
  2770     03C4  00C3               	movwf	main@foodPosition
  2771     03C5                     l3177:
  2772                           
  2773                           ;main.c: 116:     ledSet(foodPosition%4, foodPosition/4);
  2774     03C5  3004               	movlw	4
  2775     03C6  00F8               	movwf	___awdiv@divisor
  2776     03C7  3000               	movlw	0
  2777     03C8  00F9               	movwf	___awdiv@divisor+1
  2778     03C9  0843               	movf	main@foodPosition,w
  2779     03CA  00BF               	movwf	??_main
  2780     03CB  01C0               	clrf	??_main+1
  2781     03CC  083F               	movf	??_main,w
  2782     03CD  00FA               	movwf	___awdiv@dividend
  2783     03CE  0840               	movf	??_main+1,w
  2784     03CF  00FB               	movwf	___awdiv@dividend+1
  2785     03D0  318F  27A0  3183   	fcall	___awdiv
  2786     03D3  0878               	movf	?___awdiv,w
  2787     03D4  00FD               	movwf	ledSet@c
  2788     03D5  0020               	movlb	0	; select bank0
  2789     03D6  0843               	movf	main@foodPosition,w
  2790     03D7  3903               	andlw	3
  2791     03D8  318E  2655  3183   	fcall	_ledSet
  2792     03DB                     l3179:
  2793                           
  2794                           ;main.c: 117:     sendMatrix();
  2795     03DB  318E  26DA  3183   	fcall	_sendMatrix
  2796     03DE                     l3181:
  2797                           
  2798                           ;main.c: 120:     {;main.c: 122:         _delay((unsigned long)((100)*(8000000/4000.0)))
      +                          ;
  2799     03DE  3002               	movlw	2
  2800     03DF  0020               	movlb	0	; select bank0
  2801     03E0  00C0               	movwf	??_main+1
  2802     03E1  3004               	movlw	4
  2803     03E2  00BF               	movwf	??_main
  2804     03E3  30BA               	movlw	186
  2805     03E4                     u2447:
  2806     03E4  0B89               	decfsz	9,f
  2807     03E5  2BE4               	goto	u2447
  2808     03E6  0BBF               	decfsz	??_main,f
  2809     03E7  2BE4               	goto	u2447
  2810     03E8  0BC0               	decfsz	??_main+1,f
  2811     03E9  2BE4               	goto	u2447
  2812     03EA  0000               	nop
  2813     03EB                     l3183:
  2814                           
  2815                           ;main.c: 123:         snake_getSurroundings(ai_getInputField());
  2816     03EB  318D  25C0  3183   	fcall	_ai_getInputField
  2817     03EE  3180  20BE  3183   	fcall	_snake_getSurroundings
  2818     03F1                     l3185:
  2819                           
  2820                           ;main.c: 124:         int8_t incentive = snake_move(ai_run());
  2821     03F1  3182  2251  3183   	fcall	_ai_run
  2822     03F4  3181  217F  3183   	fcall	_snake_move
  2823     03F7  0020               	movlb	0	; select bank0
  2824     03F8  00C5               	movwf	main@incentive
  2825     03F9                     l3187:
  2826                           
  2827                           ;main.c: 125:         ai_propagate(incentive);
  2828     03F9  0845               	movf	main@incentive,w
  2829     03FA  3185  2517  3183   	fcall	_ai_propagate
  2830     03FD                     l3189:
  2831                           
  2832                           ;main.c: 126:         for(uint8_t i = 0; i < 4; i++){
  2833     03FD  0020               	movlb	0	; select bank0
  2834     03FE  01C8               	clrf	main@i_669
  2835     03FF                     l3195:
  2836                           
  2837                           ;main.c: 127:             for(uint8_t j = 0; j < 4; j++){
  2838     03FF  01C9               	clrf	main@j_670
  2839     0400                     l3201:
  2840                           
  2841                           ;main.c: 128:                 if(field[i+j*4]>0){
  2842     0400  0849               	movf	main@j_670,w
  2843     0401  00BF               	movwf	??_main
  2844     0402  3001               	movlw	1
  2845     0403                     u2285:
  2846     0403  35BF               	lslf	??_main,f
  2847     0404  3EFF               	addlw	-1
  2848     0405  1D03               	skipz
  2849     0406  2C03               	goto	u2285
  2850     0407  353F               	lslf	??_main,w
  2851     0408  0742               	addwf	main@field,w
  2852     0409  00C0               	movwf	??_main+1
  2853     040A  0848               	movf	main@i_669,w
  2854     040B  0740               	addwf	??_main+1,w
  2855     040C  00C1               	movwf	??_main+2
  2856     040D  0841               	movf	??_main+2,w
  2857     040E  0086               	movwf	6
  2858     040F  0187               	clrf	7
  2859     0410  0801               	movf	1,w
  2860     0411  1903               	btfsc	3,2
  2861     0412  2C14               	goto	u2291
  2862     0413  2C15               	goto	u2290
  2863     0414                     u2291:
  2864     0414  2C1C               	goto	l3205
  2865     0415                     u2290:
  2866     0415                     l3203:
  2867                           
  2868                           ;main.c: 129:                     ledSet(i,j);
  2869     0415  0849               	movf	main@j_670,w
  2870     0416  00FD               	movwf	ledSet@c
  2871     0417  0848               	movf	main@i_669,w
  2872     0418  318E  2655  3183   	fcall	_ledSet
  2873                           
  2874                           ;main.c: 130:                 } else{
  2875     041B  2C22               	goto	l3207
  2876     041C                     l3205:
  2877                           
  2878                           ;main.c: 131:                     ledClear(i,j);
  2879     041C  0849               	movf	main@j_670,w
  2880     041D  00F0               	movwf	ledClear@c
  2881     041E  0848               	movf	main@i_669,w
  2882     041F  318E  2643  3183   	fcall	_ledClear
  2883     0422                     l3207:
  2884                           
  2885                           ;main.c: 133:             }
  2886     0422  3001               	movlw	1
  2887     0423  0020               	movlb	0	; select bank0
  2888     0424  00BF               	movwf	??_main
  2889     0425  083F               	movf	??_main,w
  2890     0426  07C9               	addwf	main@j_670,f
  2891     0427                     l3209:
  2892     0427  3004               	movlw	4
  2893     0428  0249               	subwf	main@j_670,w
  2894     0429  1C03               	skipc
  2895     042A  2C2C               	goto	u2301
  2896     042B  2C2D               	goto	u2300
  2897     042C                     u2301:
  2898     042C  2C00               	goto	l3201
  2899     042D                     u2300:
  2900     042D                     l3211:
  2901                           
  2902                           ;main.c: 134:         }
  2903     042D  3001               	movlw	1
  2904     042E  00BF               	movwf	??_main
  2905     042F  083F               	movf	??_main,w
  2906     0430  07C8               	addwf	main@i_669,f
  2907     0431                     l3213:
  2908     0431  3004               	movlw	4
  2909     0432  0248               	subwf	main@i_669,w
  2910     0433  1C03               	skipc
  2911     0434  2C36               	goto	u2311
  2912     0435  2C37               	goto	u2310
  2913     0436                     u2311:
  2914     0436  2BFF               	goto	l3195
  2915     0437                     u2310:
  2916     0437                     l3215:
  2917                           
  2918                           ;main.c: 135:         ledClear(0,6);
  2919     0437  3006               	movlw	6
  2920     0438  00F0               	movwf	ledClear@c
  2921     0439  3000               	movlw	0
  2922     043A  318E  2643  3183   	fcall	_ledClear
  2923                           
  2924                           ;main.c: 136:         ledClear(2,6);
  2925     043D  3006               	movlw	6
  2926     043E  00F0               	movwf	ledClear@c
  2927     043F  3002               	movlw	2
  2928     0440  318E  2643  3183   	fcall	_ledClear
  2929                           
  2930                           ;main.c: 137:         ledClear(1,5);
  2931     0443  3005               	movlw	5
  2932     0444  00F0               	movwf	ledClear@c
  2933     0445  3001               	movlw	1
  2934     0446  318E  2643  3183   	fcall	_ledClear
  2935                           
  2936                           ;main.c: 138:         ledClear(1,7);
  2937     0449  3007               	movlw	7
  2938     044A  00F0               	movwf	ledClear@c
  2939     044B  3001               	movlw	1
  2940     044C  318E  2643  3183   	fcall	_ledClear
  2941                           
  2942                           ;main.c: 139:         ledClear(4,6);
  2943     044F  3006               	movlw	6
  2944     0450  00F0               	movwf	ledClear@c
  2945     0451  3004               	movlw	4
  2946     0452  318E  2643  3183   	fcall	_ledClear
  2947                           
  2948                           ;main.c: 140:         ledClear(6,6);
  2949     0455  3006               	movlw	6
  2950     0456  00F0               	movwf	ledClear@c
  2951     0457  3006               	movlw	6
  2952     0458  318E  2643  3183   	fcall	_ledClear
  2953                           
  2954                           ;main.c: 141:         ledClear(5,5);
  2955     045B  3005               	movlw	5
  2956     045C  00F0               	movwf	ledClear@c
  2957     045D  3005               	movlw	5
  2958     045E  318E  2643  3183   	fcall	_ledClear
  2959                           
  2960                           ;main.c: 142:         ledClear(5,7);
  2961     0461  3007               	movlw	7
  2962     0462  00F0               	movwf	ledClear@c
  2963     0463  3005               	movlw	5
  2964     0464  318E  2643  3183   	fcall	_ledClear
  2965     0467                     l3217:
  2966                           
  2967                           ;main.c: 143:         if(Y0[0]>0){
  2968     0467  0020               	movlb	0	; select bank0
  2969     0468  0864               	movf	_Y0,w
  2970     0469  3A80               	xorlw	128
  2971     046A  3E7F               	addlw	-129
  2972     046B  1C03               	skipc
  2973     046C  2C6E               	goto	u2321
  2974     046D  2C6F               	goto	u2320
  2975     046E                     u2321:
  2976     046E  2C76               	goto	l3221
  2977     046F                     u2320:
  2978     046F                     l3219:
  2979                           
  2980                           ;main.c: 144:             ledSet(0,6);
  2981     046F  3006               	movlw	6
  2982     0470  00FD               	movwf	ledSet@c
  2983     0471  3000               	movlw	0
  2984     0472  318E  2655  3183   	fcall	_ledSet
  2985                           
  2986                           ;main.c: 145:         } else if(Y0[1]>0){
  2987     0475  2C83               	goto	l3225
  2988     0476                     l3221:
  2989     0476  0865               	movf	_Y0+1,w
  2990     0477  3A80               	xorlw	128
  2991     0478  3E7F               	addlw	-129
  2992     0479  1C03               	skipc
  2993     047A  2C7C               	goto	u2331
  2994     047B  2C7D               	goto	u2330
  2995     047C                     u2331:
  2996     047C  2C83               	goto	l3225
  2997     047D                     u2330:
  2998     047D                     l3223:
  2999                           
  3000                           ;main.c: 146:             ledSet(2,6);
  3001     047D  3006               	movlw	6
  3002     047E  00FD               	movwf	ledSet@c
  3003     047F  3002               	movlw	2
  3004     0480  318E  2655  3183   	fcall	_ledSet
  3005     0483                     l3225:
  3006                           
  3007                           ;main.c: 148:         if(Y0[2]>0){
  3008     0483  0020               	movlb	0	; select bank0
  3009     0484  0866               	movf	_Y0+2,w
  3010     0485  3A80               	xorlw	128
  3011     0486  3E7F               	addlw	-129
  3012     0487  1C03               	skipc
  3013     0488  2C8A               	goto	u2341
  3014     0489  2C8B               	goto	u2340
  3015     048A                     u2341:
  3016     048A  2C92               	goto	l3229
  3017     048B                     u2340:
  3018     048B                     l3227:
  3019                           
  3020                           ;main.c: 149:             ledSet(1,5);
  3021     048B  3005               	movlw	5
  3022     048C  00FD               	movwf	ledSet@c
  3023     048D  3001               	movlw	1
  3024     048E  318E  2655  3183   	fcall	_ledSet
  3025                           
  3026                           ;main.c: 150:         } else if(Y0[3]>0){
  3027     0491  2C9F               	goto	l3233
  3028     0492                     l3229:
  3029     0492  0867               	movf	_Y0+3,w
  3030     0493  3A80               	xorlw	128
  3031     0494  3E7F               	addlw	-129
  3032     0495  1C03               	skipc
  3033     0496  2C98               	goto	u2351
  3034     0497  2C99               	goto	u2350
  3035     0498                     u2351:
  3036     0498  2C9F               	goto	l3233
  3037     0499                     u2350:
  3038     0499                     l3231:
  3039                           
  3040                           ;main.c: 151:             ledSet(1,7);
  3041     0499  3007               	movlw	7
  3042     049A  00FD               	movwf	ledSet@c
  3043     049B  3001               	movlw	1
  3044     049C  318E  2655  3183   	fcall	_ledSet
  3045     049F                     l3233:
  3046                           
  3047                           ;main.c: 153:         if(Y0[4]>0){
  3048     049F  0020               	movlb	0	; select bank0
  3049     04A0  0868               	movf	_Y0+4,w
  3050     04A1  3A80               	xorlw	128
  3051     04A2  3E7F               	addlw	-129
  3052     04A3  1C03               	skipc
  3053     04A4  2CA6               	goto	u2361
  3054     04A5  2CA7               	goto	u2360
  3055     04A6                     u2361:
  3056     04A6  2CAE               	goto	l3237
  3057     04A7                     u2360:
  3058     04A7                     l3235:
  3059                           
  3060                           ;main.c: 154:             ledSet(4,6);
  3061     04A7  3006               	movlw	6
  3062     04A8  00FD               	movwf	ledSet@c
  3063     04A9  3004               	movlw	4
  3064     04AA  318E  2655  3183   	fcall	_ledSet
  3065                           
  3066                           ;main.c: 155:         } else if(Y0[5]>0){
  3067     04AD  2CBB               	goto	l3241
  3068     04AE                     l3237:
  3069     04AE  0869               	movf	_Y0+5,w
  3070     04AF  3A80               	xorlw	128
  3071     04B0  3E7F               	addlw	-129
  3072     04B1  1C03               	skipc
  3073     04B2  2CB4               	goto	u2371
  3074     04B3  2CB5               	goto	u2370
  3075     04B4                     u2371:
  3076     04B4  2CBB               	goto	l3241
  3077     04B5                     u2370:
  3078     04B5                     l3239:
  3079                           
  3080                           ;main.c: 156:             ledSet(6,6);
  3081     04B5  3006               	movlw	6
  3082     04B6  00FD               	movwf	ledSet@c
  3083     04B7  3006               	movlw	6
  3084     04B8  318E  2655  3183   	fcall	_ledSet
  3085     04BB                     l3241:
  3086                           
  3087                           ;main.c: 158:         if(Y0[6]>0){
  3088     04BB  0020               	movlb	0	; select bank0
  3089     04BC  086A               	movf	_Y0+6,w
  3090     04BD  3A80               	xorlw	128
  3091     04BE  3E7F               	addlw	-129
  3092     04BF  1C03               	skipc
  3093     04C0  2CC2               	goto	u2381
  3094     04C1  2CC3               	goto	u2380
  3095     04C2                     u2381:
  3096     04C2  2CCA               	goto	l3245
  3097     04C3                     u2380:
  3098     04C3                     l3243:
  3099                           
  3100                           ;main.c: 159:             ledSet(5,5);
  3101     04C3  3005               	movlw	5
  3102     04C4  00FD               	movwf	ledSet@c
  3103     04C5  3005               	movlw	5
  3104     04C6  318E  2655  3183   	fcall	_ledSet
  3105                           
  3106                           ;main.c: 160:         } else if(Y0[7]>0){
  3107     04C9  2CD7               	goto	l361
  3108     04CA                     l3245:
  3109     04CA  086B               	movf	_Y0+7,w
  3110     04CB  3A80               	xorlw	128
  3111     04CC  3E7F               	addlw	-129
  3112     04CD  1C03               	skipc
  3113     04CE  2CD0               	goto	u2391
  3114     04CF  2CD1               	goto	u2390
  3115     04D0                     u2391:
  3116     04D0  2CD7               	goto	l361
  3117     04D1                     u2390:
  3118     04D1                     l3247:
  3119                           
  3120                           ;main.c: 161:             ledSet(5,7);
  3121     04D1  3007               	movlw	7
  3122     04D2  00FD               	movwf	ledSet@c
  3123     04D3  3005               	movlw	5
  3124     04D4  318E  2655  3183   	fcall	_ledSet
  3125     04D7                     l361:
  3126                           
  3127                           ;main.c: 163:         ledClear(7,0);
  3128     04D7  01F0               	clrf	ledClear@c
  3129     04D8  3007               	movlw	7
  3130     04D9  318E  2643  3183   	fcall	_ledClear
  3131                           
  3132                           ;main.c: 164:         ledClear(7,1);
  3133     04DC  01F0               	clrf	ledClear@c
  3134     04DD  0AF0               	incf	ledClear@c,f
  3135     04DE  3007               	movlw	7
  3136     04DF  318E  2643  3183   	fcall	_ledClear
  3137     04E2                     l3249:
  3138                           
  3139                           ;main.c: 165:         if(incentive == -1){
  3140     04E2  0020               	movlb	0	; select bank0
  3141     04E3  0A45               	incf	main@incentive,w
  3142     04E4  1D03               	btfss	3,2
  3143     04E5  2CE7               	goto	u2401
  3144     04E6  2CE8               	goto	u2400
  3145     04E7                     u2401:
  3146     04E7  2CEE               	goto	l3253
  3147     04E8                     u2400:
  3148     04E8                     l3251:
  3149                           
  3150                           ;main.c: 166:             ledSet(7,0);
  3151     04E8  01FD               	clrf	ledSet@c
  3152     04E9  3007               	movlw	7
  3153     04EA  318E  2655  3183   	fcall	_ledSet
  3154                           
  3155                           ;main.c: 167:         } else if(incentive == 1){
  3156     04ED  2CF9               	goto	l3257
  3157     04EE                     l3253:
  3158     04EE  0345               	decf	main@incentive,w
  3159     04EF  1D03               	btfss	3,2
  3160     04F0  2CF2               	goto	u2411
  3161     04F1  2CF3               	goto	u2410
  3162     04F2                     u2411:
  3163     04F2  2CF9               	goto	l3257
  3164     04F3                     u2410:
  3165     04F3                     l3255:
  3166                           
  3167                           ;main.c: 168:             ledSet(7,1);
  3168     04F3  01FD               	clrf	ledSet@c
  3169     04F4  0AFD               	incf	ledSet@c,f
  3170     04F5  3007               	movlw	7
  3171     04F6  318E  2655  3183   	fcall	_ledSet
  3172     04F9                     l3257:
  3173                           
  3174                           ;main.c: 170:         uint8_t foodPosition = snake_getFoodPosition();
  3175     04F9  318D  25C4  3183   	fcall	_snake_getFoodPosition
  3176     04FC  0020               	movlb	0	; select bank0
  3177     04FD  00C4               	movwf	main@foodPosition_671
  3178     04FE                     l3259:
  3179                           
  3180                           ;main.c: 171:         ledSet(foodPosition%4, foodPosition/4);
  3181     04FE  3004               	movlw	4
  3182     04FF  00F8               	movwf	___awdiv@divisor
  3183     0500  3000               	movlw	0
  3184     0501  00F9               	movwf	___awdiv@divisor+1
  3185     0502  0844               	movf	main@foodPosition_671,w
  3186     0503  00BF               	movwf	??_main
  3187     0504  01C0               	clrf	??_main+1
  3188     0505  083F               	movf	??_main,w
  3189     0506  00FA               	movwf	___awdiv@dividend
  3190     0507  0840               	movf	??_main+1,w
  3191     0508  00FB               	movwf	___awdiv@dividend+1
  3192     0509  318F  27A0  3183   	fcall	___awdiv
  3193     050C  0878               	movf	?___awdiv,w
  3194     050D  00FD               	movwf	ledSet@c
  3195     050E  0020               	movlb	0	; select bank0
  3196     050F  0844               	movf	main@foodPosition_671,w
  3197     0510  3903               	andlw	3
  3198     0511  318E  2655  3183   	fcall	_ledSet
  3199     0514  2BDB               	goto	l3179
  3200     0515  3180  2802         	ljmp	start
  3201     0517                     __end_of_main:
  3202                           
  3203                           	psect	text1
  3204     017F                     __ptext1:	
  3205 ;; *************** function _snake_move *****************
  3206 ;; Defined at:
  3207 ;;		line 33 in file "snake.c"
  3208 ;; Parameters:    Size  Location     Type
  3209 ;;  direction       1    wreg     unsigned char 
  3210 ;; Auto vars:     Size  Location     Type
  3211 ;;  direction       1    8[BANK0 ] unsigned char 
  3212 ;;  i               1   10[BANK0 ] unsigned char 
  3213 ;;  incentive       1    9[BANK0 ] char 
  3214 ;; Return value:  Size  Location     Type
  3215 ;;                  1    wreg      char 
  3216 ;; Registers used:
  3217 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3218 ;; Tracked objects:
  3219 ;;		On entry : 0/0
  3220 ;;		On exit  : 0/0
  3221 ;;		Unchanged: 0/0
  3222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3223 ;;      Params:         0       0       0       0       0       0
  3224 ;;      Locals:         0       3       0       0       0       0
  3225 ;;      Temps:          0       2       0       0       0       0
  3226 ;;      Totals:         0       5       0       0       0       0
  3227 ;;Total ram usage:        5 bytes
  3228 ;; Hardware stack levels used: 1
  3229 ;; Hardware stack levels required when called: 3
  3230 ;; This function calls:
  3231 ;;		___awdiv
  3232 ;;		_rand
  3233 ;;		_snake_initiate
  3234 ;; This function is called by:
  3235 ;;		_main
  3236 ;; This function uses a non-reentrant model
  3237 ;;
  3238                           
  3239     017F                     _snake_move:	
  3240                           ;psect for function _snake_move
  3241                           
  3242                           
  3243                           ;incstack = 0
  3244                           ; Regs used in _snake_move: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3245                           ;snake_move@direction stored from wreg
  3246     017F  0020               	movlb	0	; select bank0
  3247     0180  00A8               	movwf	snake_move@direction
  3248     0181                     l2853:
  3249                           
  3250                           ;snake.c: 34:     remainingMoves--;
  3251     0181  3001               	movlw	1
  3252     0182  02DE               	subwf	_remainingMoves,f
  3253     0183                     l2855:
  3254                           
  3255                           ;snake.c: 35:     for(uint8_t i = 0; i < (4*4); i++){
  3256     0183  01AA               	clrf	snake_move@i
  3257     0184                     l2861:
  3258                           
  3259                           ;snake.c: 36:         if(field[i] > 0){
  3260     0184  082A               	movf	snake_move@i,w
  3261     0185  3ED0               	addlw	(low (_field| 0))& (0+255)
  3262     0186  0086               	movwf	6
  3263     0187  0187               	clrf	7
  3264     0188  0801               	movf	1,w
  3265     0189  1903               	btfsc	3,2
  3266     018A  298C               	goto	u1851
  3267     018B  298D               	goto	u1850
  3268     018C                     u1851:
  3269     018C  2993               	goto	l2865
  3270     018D                     u1850:
  3271     018D                     l2863:
  3272                           
  3273                           ;snake.c: 37:             field[i]--;
  3274     018D  082A               	movf	snake_move@i,w
  3275     018E  3ED0               	addlw	(low (_field| 0))& (0+255)
  3276     018F  0086               	movwf	6
  3277     0190  0187               	clrf	7
  3278     0191  3001               	movlw	1
  3279     0192  0281               	subwf	1,f
  3280     0193                     l2865:
  3281                           
  3282                           ;snake.c: 39:     }
  3283     0193  3001               	movlw	1
  3284     0194  00A6               	movwf	??_snake_move
  3285     0195  0826               	movf	??_snake_move,w
  3286     0196  07AA               	addwf	snake_move@i,f
  3287     0197                     l2867:
  3288     0197  3010               	movlw	16
  3289     0198  022A               	subwf	snake_move@i,w
  3290     0199  1C03               	skipc
  3291     019A  299C               	goto	u1861
  3292     019B  299D               	goto	u1860
  3293     019C                     u1861:
  3294     019C  2984               	goto	l2861
  3295     019D                     u1860:
  3296     019D                     l2869:
  3297                           
  3298                           ;snake.c: 40:     int8_t incentive = 0;
  3299     019D  01A9               	clrf	snake_move@incentive
  3300     019E                     l2871:
  3301                           
  3302                           ;snake.c: 41:     direction &= 0x03;
  3303     019E  3003               	movlw	3
  3304     019F  00A6               	movwf	??_snake_move
  3305     01A0  0826               	movf	??_snake_move,w
  3306     01A1  05A8               	andwf	snake_move@direction,f
  3307                           
  3308                           ;snake.c: 42:     switch(direction){
  3309     01A2  29F4               	goto	l2899
  3310     01A3                     l2873:
  3311                           
  3312                           ;snake.c: 44:             if((headPosition%4) == 0){
  3313     01A3  0860               	movf	_headPosition,w
  3314     01A4  3903               	andlw	3
  3315     01A5  1D03               	btfss	3,2
  3316     01A6  29A8               	goto	u1871
  3317     01A7  29A9               	goto	u1870
  3318     01A8                     u1871:
  3319     01A8  29AD               	goto	l2877
  3320     01A9                     u1870:
  3321     01A9                     l2875:
  3322                           
  3323                           ;snake.c: 45:                 incentive = -1;
  3324     01A9  0020               	movlb	0	; select bank0
  3325     01AA  01A9               	clrf	snake_move@incentive
  3326     01AB  03A9               	decf	snake_move@incentive,f
  3327                           
  3328                           ;snake.c: 46:             } else{
  3329     01AC  2A0A               	goto	l2901
  3330     01AD                     l2877:
  3331                           
  3332                           ;snake.c: 47:                 headPosition--;
  3333     01AD  3001               	movlw	1
  3334     01AE  02E0               	subwf	_headPosition,f
  3335     01AF  2A0A               	goto	l2901
  3336     01B0                     l2879:
  3337                           
  3338                           ;snake.c: 51:             if((headPosition%4) == (4 -1)){
  3339     01B0  3003               	movlw	3
  3340     01B1  0560               	andwf	_headPosition,w
  3341     01B2  00A6               	movwf	??_snake_move
  3342     01B3  3003               	movlw	3
  3343     01B4  0626               	xorwf	??_snake_move,w
  3344     01B5  1D03               	btfss	3,2
  3345     01B6  29B8               	goto	u1881
  3346     01B7  29B9               	goto	u1880
  3347     01B8                     u1881:
  3348     01B8  29BA               	goto	l2883
  3349     01B9                     u1880:
  3350     01B9  29A9               	goto	l2875
  3351     01BA                     l2883:
  3352                           
  3353                           ;snake.c: 54:                 headPosition++;
  3354     01BA  3001               	movlw	1
  3355     01BB  00A6               	movwf	??_snake_move
  3356     01BC  0826               	movf	??_snake_move,w
  3357     01BD  07E0               	addwf	_headPosition,f
  3358     01BE  2A0A               	goto	l2901
  3359     01BF                     l2885:
  3360                           
  3361                           ;snake.c: 58:             if((headPosition/4) == 0){
  3362     01BF  3004               	movlw	4
  3363     01C0  00F8               	movwf	___awdiv@divisor
  3364     01C1  3000               	movlw	0
  3365     01C2  00F9               	movwf	___awdiv@divisor+1
  3366     01C3  0860               	movf	_headPosition,w
  3367     01C4  00A6               	movwf	??_snake_move
  3368     01C5  01A7               	clrf	??_snake_move+1
  3369     01C6  0826               	movf	??_snake_move,w
  3370     01C7  00FA               	movwf	___awdiv@dividend
  3371     01C8  0827               	movf	??_snake_move+1,w
  3372     01C9  00FB               	movwf	___awdiv@dividend+1
  3373     01CA  318F  27A0  3181   	fcall	___awdiv
  3374     01CD  0878               	movf	?___awdiv,w
  3375     01CE  0479               	iorwf	?___awdiv+1,w
  3376     01CF  1D03               	btfss	3,2
  3377     01D0  29D2               	goto	u1891
  3378     01D1  29D3               	goto	u1890
  3379     01D2                     u1891:
  3380     01D2  29D4               	goto	l2889
  3381     01D3                     u1890:
  3382     01D3  29A9               	goto	l2875
  3383     01D4                     l2889:
  3384                           
  3385                           ;snake.c: 61:                 headPosition -= 4;
  3386     01D4  3004               	movlw	4
  3387     01D5  0020               	movlb	0	; select bank0
  3388     01D6  02E0               	subwf	_headPosition,f
  3389     01D7  2A0A               	goto	l2901
  3390     01D8                     l2891:
  3391                           
  3392                           ;snake.c: 65:             if((headPosition/4) == (4 -1)){
  3393     01D8  3004               	movlw	4
  3394     01D9  00F8               	movwf	___awdiv@divisor
  3395     01DA  3000               	movlw	0
  3396     01DB  00F9               	movwf	___awdiv@divisor+1
  3397     01DC  0860               	movf	_headPosition,w
  3398     01DD  00A6               	movwf	??_snake_move
  3399     01DE  01A7               	clrf	??_snake_move+1
  3400     01DF  0826               	movf	??_snake_move,w
  3401     01E0  00FA               	movwf	___awdiv@dividend
  3402     01E1  0827               	movf	??_snake_move+1,w
  3403     01E2  00FB               	movwf	___awdiv@dividend+1
  3404     01E3  318F  27A0  3181   	fcall	___awdiv
  3405     01E6  3003               	movlw	3
  3406     01E7  0678               	xorwf	?___awdiv,w
  3407     01E8  0479               	iorwf	?___awdiv+1,w
  3408     01E9  1D03               	btfss	3,2
  3409     01EA  29EC               	goto	u1901
  3410     01EB  29ED               	goto	u1900
  3411     01EC                     u1901:
  3412     01EC  29EE               	goto	l2895
  3413     01ED                     u1900:
  3414     01ED  29A9               	goto	l2875
  3415     01EE                     l2895:
  3416                           
  3417                           ;snake.c: 68:                 headPosition += 4;
  3418     01EE  3004               	movlw	4
  3419     01EF  0020               	movlb	0	; select bank0
  3420     01F0  00A6               	movwf	??_snake_move
  3421     01F1  0826               	movf	??_snake_move,w
  3422     01F2  07E0               	addwf	_headPosition,f
  3423     01F3  2A0A               	goto	l2901
  3424     01F4                     l2899:
  3425     01F4  0828               	movf	snake_move@direction,w
  3426     01F5  00A6               	movwf	??_snake_move
  3427     01F6  01A7               	clrf	??_snake_move+1
  3428                           
  3429                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3430                           ; Switch size 1, requested type "simple"
  3431                           ; Number of cases is 1, Range of values is 0 to 0
  3432                           ; switch strategies available:
  3433                           ; Name         Instructions Cycles
  3434                           ; simple_byte            4     3 (average)
  3435                           ; direct_byte            8     6 (fixed)
  3436                           ; jumptable            260     6 (fixed)
  3437                           ;	Chosen strategy is simple_byte
  3438     01F7  0827               	movf	??_snake_move+1,w
  3439     01F8  3A00               	xorlw	0	; case 0
  3440     01F9  1903               	skipnz
  3441     01FA  29FC               	goto	l3309
  3442     01FB  2A0A               	goto	l2901
  3443     01FC                     l3309:
  3444                           
  3445                           ; Switch size 1, requested type "simple"
  3446                           ; Number of cases is 4, Range of values is 0 to 3
  3447                           ; switch strategies available:
  3448                           ; Name         Instructions Cycles
  3449                           ; simple_byte           13     7 (average)
  3450                           ; direct_byte           14     6 (fixed)
  3451                           ; jumptable            260     6 (fixed)
  3452                           ;	Chosen strategy is simple_byte
  3453     01FC  0826               	movf	??_snake_move,w
  3454     01FD  3A00               	xorlw	0	; case 0
  3455     01FE  1903               	skipnz
  3456     01FF  29A3               	goto	l2873
  3457     0200  3A01               	xorlw	1	; case 1
  3458     0201  1903               	skipnz
  3459     0202  29B0               	goto	l2879
  3460     0203  3A03               	xorlw	3	; case 2
  3461     0204  1903               	skipnz
  3462     0205  29BF               	goto	l2885
  3463     0206  3A01               	xorlw	1	; case 3
  3464     0207  1903               	skipnz
  3465     0208  29D8               	goto	l2891
  3466     0209  2A0A               	goto	l2901
  3467     020A                     l2901:
  3468                           
  3469                           ;snake.c: 72:     if(incentive == -1){
  3470     020A  0A29               	incf	snake_move@incentive,w
  3471     020B  1D03               	btfss	3,2
  3472     020C  2A0E               	goto	u1911
  3473     020D  2A0F               	goto	u1910
  3474     020E                     u1911:
  3475     020E  2A13               	goto	l2905
  3476     020F                     u1910:
  3477     020F                     l2903:
  3478                           
  3479                           ;snake.c: 73:         snake_initiate();
  3480     020F  318F  2708  3181   	fcall	_snake_initiate
  3481                           
  3482                           ;snake.c: 74:     } else if(field[headPosition] > 0){
  3483     0212  2A43               	goto	l2925
  3484     0213                     l2905:
  3485     0213  0860               	movf	_headPosition,w
  3486     0214  3ED0               	addlw	(low (_field| 0))& (0+255)
  3487     0215  0086               	movwf	6
  3488     0216  0187               	clrf	7
  3489     0217  0801               	movf	1,w
  3490     0218  1903               	btfsc	3,2
  3491     0219  2A1B               	goto	u1921
  3492     021A  2A1C               	goto	u1920
  3493     021B                     u1921:
  3494     021B  2A1F               	goto	l2911
  3495     021C                     u1920:
  3496     021C                     l2907:
  3497                           
  3498                           ;snake.c: 75:         incentive = -1;
  3499     021C  01A9               	clrf	snake_move@incentive
  3500     021D  03A9               	decf	snake_move@incentive,f
  3501     021E  2A0F               	goto	l2903
  3502     021F                     l2911:
  3503                           
  3504                           ;snake.c: 78:         if(headPosition == foodPosition){
  3505     021F  0860               	movf	_headPosition,w
  3506     0220  065F               	xorwf	_foodPosition,w
  3507     0221  1D03               	skipz
  3508     0222  2A24               	goto	u1931
  3509     0223  2A25               	goto	u1930
  3510     0224                     u1931:
  3511     0224  2A3D               	goto	l2923
  3512     0225                     u1930:
  3513     0225                     l2913:
  3514                           
  3515                           ;snake.c: 79:             remainingMoves = 40;
  3516     0225  3028               	movlw	40
  3517     0226  00DE               	movwf	_remainingMoves
  3518     0227                     l2915:
  3519                           
  3520                           ;snake.c: 80:             incentive = 1;
  3521     0227  01A9               	clrf	snake_move@incentive
  3522     0228  0AA9               	incf	snake_move@incentive,f
  3523     0229                     l2917:
  3524                           
  3525                           ;snake.c: 81:             snakeSize++;
  3526     0229  3001               	movlw	1
  3527     022A  00A6               	movwf	??_snake_move
  3528     022B  0826               	movf	??_snake_move,w
  3529     022C  07E2               	addwf	_snakeSize,f
  3530     022D                     l2919:
  3531                           
  3532                           ;snake.c: 83:                 foodPosition = rand()%(4*4);
  3533     022D  318F  276B  3181   	fcall	_rand
  3534     0230  087C               	movf	?_rand,w
  3535     0231  390F               	andlw	15
  3536     0232  0020               	movlb	0	; select bank0
  3537     0233  00DF               	movwf	_foodPosition
  3538     0234                     l2921:
  3539                           
  3540                           ;snake.c: 84:             }while(field[foodPosition] > 0);
  3541     0234  085F               	movf	_foodPosition,w
  3542     0235  3ED0               	addlw	(low (_field| 0))& (0+255)
  3543     0236  0086               	movwf	6
  3544     0237  0187               	clrf	7
  3545     0238  0801               	movf	1,w
  3546     0239  1D03               	btfss	3,2
  3547     023A  2A3C               	goto	u1941
  3548     023B  2A3D               	goto	u1940
  3549     023C                     u1941:
  3550     023C  2A2D               	goto	l2919
  3551     023D                     u1940:
  3552     023D                     l2923:
  3553                           
  3554                           ;snake.c: 86:         field[headPosition] = snakeSize;
  3555     023D  0860               	movf	_headPosition,w
  3556     023E  3ED0               	addlw	(low (_field| 0))& (0+255)
  3557     023F  0086               	movwf	6
  3558     0240  0187               	clrf	7
  3559     0241  0862               	movf	_snakeSize,w
  3560     0242  0081               	movwf	1
  3561     0243                     l2925:
  3562                           
  3563                           ;snake.c: 88:     if(remainingMoves == 0){
  3564     0243  0020               	movlb	0	; select bank0
  3565     0244  085E               	movf	_remainingMoves,w
  3566     0245  1D03               	btfss	3,2
  3567     0246  2A48               	goto	u1951
  3568     0247  2A49               	goto	u1950
  3569     0248                     u1951:
  3570     0248  2A4E               	goto	l2931
  3571     0249                     u1950:
  3572     0249                     l2927:
  3573                           
  3574                           ;snake.c: 89:         incentive = -1;
  3575     0249  01A9               	clrf	snake_move@incentive
  3576     024A  03A9               	decf	snake_move@incentive,f
  3577     024B                     l2929:
  3578                           
  3579                           ;snake.c: 90:         snake_initiate();
  3580     024B  318F  2708  3181   	fcall	_snake_initiate
  3581     024E                     l2931:
  3582                           
  3583                           ;snake.c: 92:     return incentive;
  3584     024E  0020               	movlb	0	; select bank0
  3585     024F  0829               	movf	snake_move@incentive,w
  3586     0250                     l474:
  3587     0250  0008               	return
  3588     0251                     __end_of_snake_move:
  3589                           
  3590                           	psect	text2
  3591     0F08                     __ptext2:	
  3592 ;; *************** function _snake_initiate *****************
  3593 ;; Defined at:
  3594 ;;		line 21 in file "snake.c"
  3595 ;; Parameters:    Size  Location     Type
  3596 ;;		None
  3597 ;; Auto vars:     Size  Location     Type
  3598 ;;  i               1    5[BANK0 ] unsigned char 
  3599 ;; Return value:  Size  Location     Type
  3600 ;;                  1    wreg      void 
  3601 ;; Registers used:
  3602 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3603 ;; Tracked objects:
  3604 ;;		On entry : 0/0
  3605 ;;		On exit  : 0/0
  3606 ;;		Unchanged: 0/0
  3607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3608 ;;      Params:         0       0       0       0       0       0
  3609 ;;      Locals:         0       1       0       0       0       0
  3610 ;;      Temps:          0       1       0       0       0       0
  3611 ;;      Totals:         0       2       0       0       0       0
  3612 ;;Total ram usage:        2 bytes
  3613 ;; Hardware stack levels used: 1
  3614 ;; Hardware stack levels required when called: 2
  3615 ;; This function calls:
  3616 ;;		_rand
  3617 ;;		_srand
  3618 ;; This function is called by:
  3619 ;;		_main
  3620 ;;		_snake_move
  3621 ;; This function uses a non-reentrant model
  3622 ;;
  3623                           
  3624     0F08                     _snake_initiate:	
  3625                           ;psect for function _snake_initiate
  3626                           
  3627     0F08                     l2491:	
  3628                           ;incstack = 0
  3629                           ; Regs used in _snake_initiate: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3630                           
  3631                           
  3632                           ;snake.c: 22:     for(uint8_t i = 0; i < (4*4); i++){
  3633     0F08  0020               	movlb	0	; select bank0
  3634     0F09  01A5               	clrf	snake_initiate@i
  3635     0F0A                     l2497:
  3636                           
  3637                           ;snake.c: 23:         field[i] = 0;
  3638     0F0A  0825               	movf	snake_initiate@i,w
  3639     0F0B  3ED0               	addlw	(low (_field| 0))& (0+255)
  3640     0F0C  0086               	movwf	6
  3641     0F0D  0187               	clrf	7
  3642     0F0E  0181               	clrf	1
  3643     0F0F                     l2499:
  3644                           
  3645                           ;snake.c: 24:     }
  3646     0F0F  3001               	movlw	1
  3647     0F10  00A4               	movwf	??_snake_initiate
  3648     0F11  0824               	movf	??_snake_initiate,w
  3649     0F12  07A5               	addwf	snake_initiate@i,f
  3650     0F13                     l2501:
  3651     0F13  3010               	movlw	16
  3652     0F14  0225               	subwf	snake_initiate@i,w
  3653     0F15  1C03               	skipc
  3654     0F16  2F18               	goto	u1351
  3655     0F17  2F19               	goto	u1350
  3656     0F18                     u1351:
  3657     0F18  2F0A               	goto	l2497
  3658     0F19                     u1350:
  3659     0F19                     l2503:
  3660                           
  3661                           ;snake.c: 25:     srand(0);
  3662     0F19  3000               	movlw	0
  3663     0F1A  00F0               	movwf	srand@s
  3664     0F1B  00F1               	movwf	srand@s+1
  3665     0F1C  318D  25FD  318F   	fcall	_srand
  3666                           
  3667                           ;snake.c: 26:     headPosition = rand()%(4*4);
  3668     0F1F  318F  276B  318F   	fcall	_rand
  3669     0F22  087C               	movf	?_rand,w
  3670     0F23  390F               	andlw	15
  3671     0F24  0020               	movlb	0	; select bank0
  3672     0F25  00E0               	movwf	_headPosition
  3673                           
  3674                           ;snake.c: 27:     foodPosition = rand()%(4*4);
  3675     0F26  318F  276B  318F   	fcall	_rand
  3676     0F29  087C               	movf	?_rand,w
  3677     0F2A  390F               	andlw	15
  3678     0F2B  0020               	movlb	0	; select bank0
  3679     0F2C  00DF               	movwf	_foodPosition
  3680     0F2D                     l2505:
  3681                           
  3682                           ;snake.c: 28:     snakeSize = 3;
  3683     0F2D  3003               	movlw	3
  3684     0F2E  00E2               	movwf	_snakeSize
  3685     0F2F                     l2507:
  3686                           
  3687                           ;snake.c: 29:     remainingMoves = 40;
  3688     0F2F  3028               	movlw	40
  3689     0F30  00DE               	movwf	_remainingMoves
  3690     0F31                     l2509:
  3691                           
  3692                           ;snake.c: 30:     field[headPosition] = snakeSize;
  3693     0F31  0860               	movf	_headPosition,w
  3694     0F32  3ED0               	addlw	(low (_field| 0))& (0+255)
  3695     0F33  0086               	movwf	6
  3696     0F34  0187               	clrf	7
  3697     0F35  0862               	movf	_snakeSize,w
  3698     0F36  0081               	movwf	1
  3699     0F37                     l446:
  3700     0F37  0008               	return
  3701     0F38                     __end_of_snake_initiate:
  3702                           
  3703                           	psect	text3
  3704     0DFD                     __ptext3:	
  3705 ;; *************** function _srand *****************
  3706 ;; Defined at:
  3707 ;;		line 6 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\common\rand.c"
  3708 ;; Parameters:    Size  Location     Type
  3709 ;;  s               2    0[COMMON] unsigned int 
  3710 ;; Auto vars:     Size  Location     Type
  3711 ;;		None
  3712 ;; Return value:  Size  Location     Type
  3713 ;;                  1    wreg      void 
  3714 ;; Registers used:
  3715 ;;		wreg, status,2, status,0
  3716 ;; Tracked objects:
  3717 ;;		On entry : 0/0
  3718 ;;		On exit  : 0/0
  3719 ;;		Unchanged: 0/0
  3720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3721 ;;      Params:         2       0       0       0       0       0
  3722 ;;      Locals:         0       0       0       0       0       0
  3723 ;;      Temps:          0       0       0       0       0       0
  3724 ;;      Totals:         2       0       0       0       0       0
  3725 ;;Total ram usage:        2 bytes
  3726 ;; Hardware stack levels used: 1
  3727 ;; This function calls:
  3728 ;;		Nothing
  3729 ;; This function is called by:
  3730 ;;		_snake_initiate
  3731 ;; This function uses a non-reentrant model
  3732 ;;
  3733                           
  3734     0DFD                     _srand:	
  3735                           ;psect for function _srand
  3736                           
  3737     0DFD                     l2441:	
  3738                           ;incstack = 0
  3739                           ; Regs used in _srand: [wreg+status,2+status,0]
  3740                           
  3741     0DFD  0870               	movf	srand@s,w
  3742     0DFE  3EFF               	addlw	255
  3743     0DFF  0020               	movlb	0	; select bank0
  3744     0E00  00EC               	movwf	_seed
  3745     0E01  30FF               	movlw	255
  3746     0E02  3D71               	addwfc	srand@s+1,w
  3747     0E03  00ED               	movwf	_seed+1
  3748     0E04  01EE               	clrf	_seed+2
  3749     0E05  01EF               	clrf	_seed+3
  3750     0E06                     l1278:
  3751     0E06  0008               	return
  3752     0E07                     __end_of_srand:
  3753                           
  3754                           	psect	text4
  3755     00BE                     __ptext4:	
  3756 ;; *************** function _snake_getSurroundings *****************
  3757 ;; Defined at:
  3758 ;;		line 99 in file "snake.c"
  3759 ;; Parameters:    Size  Location     Type
  3760 ;;  surroundings    1    wreg     PTR char 
  3761 ;;		 -> Y0(8), 
  3762 ;; Auto vars:     Size  Location     Type
  3763 ;;  surroundings    1   13[BANK0 ] PTR char 
  3764 ;;		 -> Y0(8), 
  3765 ;;  i               1   12[BANK0 ] unsigned char 
  3766 ;;  i               1    9[BANK0 ] unsigned char 
  3767 ;;  ch              1   11[BANK0 ] unsigned char 
  3768 ;;  lh              1   10[BANK0 ] unsigned char 
  3769 ;;  cf              1    8[BANK0 ] unsigned char 
  3770 ;;  lf              1    7[BANK0 ] unsigned char 
  3771 ;;  p               1    6[BANK0 ] unsigned char 
  3772 ;; Return value:  Size  Location     Type
  3773 ;;                  1    wreg      void 
  3774 ;; Registers used:
  3775 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3776 ;; Tracked objects:
  3777 ;;		On entry : 0/0
  3778 ;;		On exit  : 0/0
  3779 ;;		Unchanged: 0/0
  3780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3781 ;;      Params:         0       0       0       0       0       0
  3782 ;;      Locals:         0       8       0       0       0       0
  3783 ;;      Temps:          0       2       0       0       0       0
  3784 ;;      Totals:         0      10       0       0       0       0
  3785 ;;Total ram usage:       10 bytes
  3786 ;; Hardware stack levels used: 1
  3787 ;; Hardware stack levels required when called: 1
  3788 ;; This function calls:
  3789 ;;		___awdiv
  3790 ;; This function is called by:
  3791 ;;		_main
  3792 ;; This function uses a non-reentrant model
  3793 ;;
  3794                           
  3795     00BE                     _snake_getSurroundings:	
  3796                           ;psect for function _snake_getSurroundings
  3797                           
  3798                           
  3799                           ;incstack = 0
  3800                           ; Regs used in _snake_getSurroundings: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  3801                           ;snake_getSurroundings@surroundings stored from wreg
  3802     00BE  0020               	movlb	0	; select bank0
  3803     00BF  00AD               	movwf	snake_getSurroundings@surroundings
  3804     00C0                     l2691:
  3805                           
  3806                           ;snake.c: 100:     for(uint8_t i = 0; i < 8; i++){
  3807     00C0  01A9               	clrf	snake_getSurroundings@i
  3808     00C1                     l2697:
  3809                           
  3810                           ;snake.c: 101:         surroundings[i] = 0;
  3811     00C1  0829               	movf	snake_getSurroundings@i,w
  3812     00C2  072D               	addwf	snake_getSurroundings@surroundings,w
  3813     00C3  00A4               	movwf	??_snake_getSurroundings
  3814     00C4  0824               	movf	??_snake_getSurroundings,w
  3815     00C5  0086               	movwf	6
  3816     00C6  0187               	clrf	7
  3817     00C7  0181               	clrf	1
  3818     00C8                     l2699:
  3819                           
  3820                           ;snake.c: 102:     }
  3821     00C8  3001               	movlw	1
  3822     00C9  00A4               	movwf	??_snake_getSurroundings
  3823     00CA  0824               	movf	??_snake_getSurroundings,w
  3824     00CB  07A9               	addwf	snake_getSurroundings@i,f
  3825     00CC                     l2701:
  3826     00CC  3008               	movlw	8
  3827     00CD  0229               	subwf	snake_getSurroundings@i,w
  3828     00CE  1C03               	skipc
  3829     00CF  28D1               	goto	u1641
  3830     00D0  28D2               	goto	u1640
  3831     00D1                     u1641:
  3832     00D1  28C1               	goto	l2697
  3833     00D2                     u1640:
  3834     00D2                     l2703:
  3835                           
  3836                           ;snake.c: 103:     uint8_t lh = headPosition%4;
  3837     00D2  0860               	movf	_headPosition,w
  3838     00D3  3903               	andlw	3
  3839     00D4  00AA               	movwf	snake_getSurroundings@lh
  3840     00D5                     l2705:
  3841                           
  3842                           ;snake.c: 104:     uint8_t ch = headPosition/4;
  3843     00D5  3004               	movlw	4
  3844     00D6  00F8               	movwf	___awdiv@divisor
  3845     00D7  3000               	movlw	0
  3846     00D8  00F9               	movwf	___awdiv@divisor+1
  3847     00D9  0860               	movf	_headPosition,w
  3848     00DA  00A4               	movwf	??_snake_getSurroundings
  3849     00DB  01A5               	clrf	??_snake_getSurroundings+1
  3850     00DC  0824               	movf	??_snake_getSurroundings,w
  3851     00DD  00FA               	movwf	___awdiv@dividend
  3852     00DE  0825               	movf	??_snake_getSurroundings+1,w
  3853     00DF  00FB               	movwf	___awdiv@dividend+1
  3854     00E0  318F  27A0  3180   	fcall	___awdiv
  3855     00E3  0878               	movf	?___awdiv,w
  3856     00E4  0020               	movlb	0	; select bank0
  3857     00E5  00AB               	movwf	snake_getSurroundings@ch
  3858     00E6                     l2707:
  3859                           
  3860                           ;snake.c: 105:     uint8_t lf = foodPosition%4;
  3861     00E6  085F               	movf	_foodPosition,w
  3862     00E7  3903               	andlw	3
  3863     00E8  00A7               	movwf	snake_getSurroundings@lf
  3864                           
  3865                           ;snake.c: 106:     uint8_t cf = foodPosition/4;
  3866     00E9  3004               	movlw	4
  3867     00EA  00F8               	movwf	___awdiv@divisor
  3868     00EB  3000               	movlw	0
  3869     00EC  00F9               	movwf	___awdiv@divisor+1
  3870     00ED  085F               	movf	_foodPosition,w
  3871     00EE  00A4               	movwf	??_snake_getSurroundings
  3872     00EF  01A5               	clrf	??_snake_getSurroundings+1
  3873     00F0  0824               	movf	??_snake_getSurroundings,w
  3874     00F1  00FA               	movwf	___awdiv@dividend
  3875     00F2  0825               	movf	??_snake_getSurroundings+1,w
  3876     00F3  00FB               	movwf	___awdiv@dividend+1
  3877     00F4  318F  27A0  3180   	fcall	___awdiv
  3878     00F7  0878               	movf	?___awdiv,w
  3879     00F8  0020               	movlb	0	; select bank0
  3880     00F9  00A8               	movwf	snake_getSurroundings@cf
  3881     00FA                     l2709:
  3882                           
  3883                           ;snake.c: 107:     if(lh == 0){
  3884     00FA  082A               	movf	snake_getSurroundings@lh,w
  3885     00FB  1D03               	btfss	3,2
  3886     00FC  28FE               	goto	u1651
  3887     00FD  28FF               	goto	u1650
  3888     00FE                     u1651:
  3889     00FE  2905               	goto	l2713
  3890     00FF                     u1650:
  3891     00FF                     l2711:
  3892                           
  3893                           ;snake.c: 108:         surroundings[0] = 1;
  3894     00FF  082D               	movf	snake_getSurroundings@surroundings,w
  3895     0100  0086               	movwf	6
  3896     0101  0187               	clrf	7
  3897     0102  0181               	clrf	1
  3898     0103  0A81               	incf	1,f
  3899                           
  3900                           ;snake.c: 109:     } else if(lh == (4 -1)){
  3901     0104  2910               	goto	l2717
  3902     0105                     l2713:
  3903     0105  3003               	movlw	3
  3904     0106  062A               	xorwf	snake_getSurroundings@lh,w
  3905     0107  1D03               	btfss	3,2
  3906     0108  290A               	goto	u1661
  3907     0109  290B               	goto	u1660
  3908     010A                     u1661:
  3909     010A  2910               	goto	l2717
  3910     010B                     u1660:
  3911     010B                     l2715:
  3912                           
  3913                           ;snake.c: 110:         surroundings[1] = 1;
  3914     010B  0A2D               	incf	snake_getSurroundings@surroundings,w
  3915     010C  0086               	movwf	6
  3916     010D  0187               	clrf	7
  3917     010E  0181               	clrf	1
  3918     010F  0A81               	incf	1,f
  3919     0110                     l2717:
  3920                           
  3921                           ;snake.c: 112:     if(ch == 0){
  3922     0110  082B               	movf	snake_getSurroundings@ch,w
  3923     0111  1D03               	btfss	3,2
  3924     0112  2914               	goto	u1671
  3925     0113  2915               	goto	u1670
  3926     0114                     u1671:
  3927     0114  291C               	goto	l2721
  3928     0115                     u1670:
  3929     0115                     l2719:
  3930                           
  3931                           ;snake.c: 113:         surroundings[2] = 1;
  3932     0115  082D               	movf	snake_getSurroundings@surroundings,w
  3933     0116  3E02               	addlw	2
  3934     0117  0086               	movwf	6
  3935     0118  0187               	clrf	7
  3936     0119  0181               	clrf	1
  3937     011A  0A81               	incf	1,f
  3938                           
  3939                           ;snake.c: 114:     } else if(ch == (4 -1)){
  3940     011B  2928               	goto	l2725
  3941     011C                     l2721:
  3942     011C  3003               	movlw	3
  3943     011D  062B               	xorwf	snake_getSurroundings@ch,w
  3944     011E  1D03               	btfss	3,2
  3945     011F  2921               	goto	u1681
  3946     0120  2922               	goto	u1680
  3947     0121                     u1681:
  3948     0121  2928               	goto	l2725
  3949     0122                     u1680:
  3950     0122                     l2723:
  3951                           
  3952                           ;snake.c: 115:         surroundings[3] = 1;
  3953     0122  082D               	movf	snake_getSurroundings@surroundings,w
  3954     0123  3E03               	addlw	3
  3955     0124  0086               	movwf	6
  3956     0125  0187               	clrf	7
  3957     0126  0181               	clrf	1
  3958     0127  0A81               	incf	1,f
  3959     0128                     l2725:
  3960                           
  3961                           ;snake.c: 117:     uint8_t p;;snake.c: 118:     for(uint8_t i = 0; i < 4; i++){
  3962     0128  01AC               	clrf	snake_getSurroundings@i_803
  3963     0129                     l2731:
  3964                           
  3965                           ;snake.c: 119:         p = (headPosition+mapping[i])%(4*4);
  3966     0129  082C               	movf	snake_getSurroundings@i_803,w
  3967     012A  3EE0               	addlw	(low (_mapping| 0))& (0+255)
  3968     012B  0086               	movwf	6
  3969     012C  0187               	clrf	7
  3970     012D  0801               	movf	1,w
  3971     012E  0760               	addwf	_headPosition,w
  3972     012F  390F               	andlw	15
  3973     0130  00A6               	movwf	snake_getSurroundings@p
  3974                           
  3975                           ;snake.c: 120:         if(field[p] > 0){
  3976     0131  0826               	movf	snake_getSurroundings@p,w
  3977     0132  3ED0               	addlw	(low (_field| 0))& (0+255)
  3978     0133  0086               	movwf	6
  3979     0134  0187               	clrf	7
  3980     0135  0801               	movf	1,w
  3981     0136  1903               	btfsc	3,2
  3982     0137  2939               	goto	u1691
  3983     0138  293A               	goto	u1690
  3984     0139                     u1691:
  3985     0139  2942               	goto	l2735
  3986     013A                     u1690:
  3987     013A                     l2733:
  3988                           
  3989                           ;snake.c: 121:             surroundings[i] = 1;
  3990     013A  082C               	movf	snake_getSurroundings@i_803,w
  3991     013B  072D               	addwf	snake_getSurroundings@surroundings,w
  3992     013C  00A4               	movwf	??_snake_getSurroundings
  3993     013D  0824               	movf	??_snake_getSurroundings,w
  3994     013E  0086               	movwf	6
  3995     013F  0187               	clrf	7
  3996     0140  0181               	clrf	1
  3997     0141  0A81               	incf	1,f
  3998     0142                     l2735:
  3999                           
  4000                           ;snake.c: 123:     }
  4001     0142  3001               	movlw	1
  4002     0143  00A4               	movwf	??_snake_getSurroundings
  4003     0144  0824               	movf	??_snake_getSurroundings,w
  4004     0145  07AC               	addwf	snake_getSurroundings@i_803,f
  4005     0146                     l2737:
  4006     0146  3004               	movlw	4
  4007     0147  022C               	subwf	snake_getSurroundings@i_803,w
  4008     0148  1C03               	skipc
  4009     0149  294B               	goto	u1701
  4010     014A  294C               	goto	u1700
  4011     014B                     u1701:
  4012     014B  2929               	goto	l2731
  4013     014C                     u1700:
  4014     014C                     l2739:
  4015                           
  4016                           ;snake.c: 124:     if(lf<lh){
  4017     014C  082A               	movf	snake_getSurroundings@lh,w
  4018     014D  0227               	subwf	snake_getSurroundings@lf,w
  4019     014E  1803               	skipnc
  4020     014F  2951               	goto	u1711
  4021     0150  2952               	goto	u1710
  4022     0151                     u1711:
  4023     0151  2959               	goto	l2743
  4024     0152                     u1710:
  4025     0152                     l2741:
  4026                           
  4027                           ;snake.c: 125:         surroundings[4] = 1;
  4028     0152  082D               	movf	snake_getSurroundings@surroundings,w
  4029     0153  3E04               	addlw	4
  4030     0154  0086               	movwf	6
  4031     0155  0187               	clrf	7
  4032     0156  0181               	clrf	1
  4033     0157  0A81               	incf	1,f
  4034                           
  4035                           ;snake.c: 126:     } else if(lf>lh){
  4036     0158  2965               	goto	l2747
  4037     0159                     l2743:
  4038     0159  0827               	movf	snake_getSurroundings@lf,w
  4039     015A  022A               	subwf	snake_getSurroundings@lh,w
  4040     015B  1803               	skipnc
  4041     015C  295E               	goto	u1721
  4042     015D  295F               	goto	u1720
  4043     015E                     u1721:
  4044     015E  2965               	goto	l2747
  4045     015F                     u1720:
  4046     015F                     l2745:
  4047                           
  4048                           ;snake.c: 127:         surroundings[5] = 1;
  4049     015F  082D               	movf	snake_getSurroundings@surroundings,w
  4050     0160  3E05               	addlw	5
  4051     0161  0086               	movwf	6
  4052     0162  0187               	clrf	7
  4053     0163  0181               	clrf	1
  4054     0164  0A81               	incf	1,f
  4055     0165                     l2747:
  4056                           
  4057                           ;snake.c: 129:     if(cf<ch){
  4058     0165  082B               	movf	snake_getSurroundings@ch,w
  4059     0166  0228               	subwf	snake_getSurroundings@cf,w
  4060     0167  1803               	skipnc
  4061     0168  296A               	goto	u1731
  4062     0169  296B               	goto	u1730
  4063     016A                     u1731:
  4064     016A  2972               	goto	l2751
  4065     016B                     u1730:
  4066     016B                     l2749:
  4067                           
  4068                           ;snake.c: 130:         surroundings[6] = 1;
  4069     016B  082D               	movf	snake_getSurroundings@surroundings,w
  4070     016C  3E06               	addlw	6
  4071     016D  0086               	movwf	6
  4072     016E  0187               	clrf	7
  4073     016F  0181               	clrf	1
  4074     0170  0A81               	incf	1,f
  4075                           
  4076                           ;snake.c: 131:     } else if(cf>ch){
  4077     0171  297E               	goto	l497
  4078     0172                     l2751:
  4079     0172  0828               	movf	snake_getSurroundings@cf,w
  4080     0173  022B               	subwf	snake_getSurroundings@ch,w
  4081     0174  1803               	skipnc
  4082     0175  2977               	goto	u1741
  4083     0176  2978               	goto	u1740
  4084     0177                     u1741:
  4085     0177  297E               	goto	l497
  4086     0178                     u1740:
  4087     0178                     l2753:
  4088                           
  4089                           ;snake.c: 132:         surroundings[7] = 1;
  4090     0178  082D               	movf	snake_getSurroundings@surroundings,w
  4091     0179  3E07               	addlw	7
  4092     017A  0086               	movwf	6
  4093     017B  0187               	clrf	7
  4094     017C  0181               	clrf	1
  4095     017D  0A81               	incf	1,f
  4096     017E                     l497:
  4097     017E  0008               	return
  4098     017F                     __end_of_snake_getSurroundings:
  4099                           
  4100                           	psect	text5
  4101     0DC4                     __ptext5:	
  4102 ;; *************** function _snake_getFoodPosition *****************
  4103 ;; Defined at:
  4104 ;;		line 143 in file "snake.c"
  4105 ;; Parameters:    Size  Location     Type
  4106 ;;		None
  4107 ;; Auto vars:     Size  Location     Type
  4108 ;;		None
  4109 ;; Return value:  Size  Location     Type
  4110 ;;                  1    wreg      unsigned char 
  4111 ;; Registers used:
  4112 ;;		wreg
  4113 ;; Tracked objects:
  4114 ;;		On entry : 0/0
  4115 ;;		On exit  : 0/0
  4116 ;;		Unchanged: 0/0
  4117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4118 ;;      Params:         0       0       0       0       0       0
  4119 ;;      Locals:         0       0       0       0       0       0
  4120 ;;      Temps:          0       0       0       0       0       0
  4121 ;;      Totals:         0       0       0       0       0       0
  4122 ;;Total ram usage:        0 bytes
  4123 ;; Hardware stack levels used: 1
  4124 ;; This function calls:
  4125 ;;		Nothing
  4126 ;; This function is called by:
  4127 ;;		_main
  4128 ;; This function uses a non-reentrant model
  4129 ;;
  4130                           
  4131     0DC4                     _snake_getFoodPosition:	
  4132                           ;psect for function _snake_getFoodPosition
  4133                           
  4134     0DC4                     l2653:	
  4135                           ;incstack = 0
  4136                           ; Regs used in _snake_getFoodPosition: [wreg]
  4137                           
  4138                           
  4139                           ;snake.c: 144:     return foodPosition;
  4140     0DC4  0020               	movlb	0	; select bank0
  4141     0DC5  085F               	movf	_foodPosition,w
  4142     0DC6                     l506:
  4143     0DC6  0008               	return
  4144     0DC7                     __end_of_snake_getFoodPosition:
  4145                           
  4146                           	psect	text6
  4147     0DC2                     __ptext6:	
  4148 ;; *************** function _snake_getField *****************
  4149 ;; Defined at:
  4150 ;;		line 95 in file "snake.c"
  4151 ;; Parameters:    Size  Location     Type
  4152 ;;		None
  4153 ;; Auto vars:     Size  Location     Type
  4154 ;;		None
  4155 ;; Return value:  Size  Location     Type
  4156 ;;                  1    wreg      PTR unsigned char 
  4157 ;; Registers used:
  4158 ;;		wreg
  4159 ;; Tracked objects:
  4160 ;;		On entry : 0/0
  4161 ;;		On exit  : 0/0
  4162 ;;		Unchanged: 0/0
  4163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4164 ;;      Params:         0       0       0       0       0       0
  4165 ;;      Locals:         0       0       0       0       0       0
  4166 ;;      Temps:          0       0       0       0       0       0
  4167 ;;      Totals:         0       0       0       0       0       0
  4168 ;;Total ram usage:        0 bytes
  4169 ;; Hardware stack levels used: 1
  4170 ;; This function calls:
  4171 ;;		Nothing
  4172 ;; This function is called by:
  4173 ;;		_main
  4174 ;; This function uses a non-reentrant model
  4175 ;;
  4176                           
  4177     0DC2                     _snake_getField:	
  4178                           ;psect for function _snake_getField
  4179                           
  4180     0DC2                     l2645:	
  4181                           ;incstack = 0
  4182                           ; Regs used in _snake_getField: [wreg]
  4183                           
  4184                           
  4185                           ;snake.c: 96:     return field;
  4186     0DC2  30D0               	movlw	(low (_field| 0))& (0+255)
  4187     0DC3                     l477:
  4188     0DC3  0008               	return
  4189     0DC4                     __end_of_snake_getField:
  4190                           
  4191                           	psect	text7
  4192     0EDA                     __ptext7:	
  4193 ;; *************** function _sendMatrix *****************
  4194 ;; Defined at:
  4195 ;;		line 55 in file "ledMatrix.c"
  4196 ;; Parameters:    Size  Location     Type
  4197 ;;		None
  4198 ;; Auto vars:     Size  Location     Type
  4199 ;;  j               1    6[COMMON] unsigned char 
  4200 ;;  i               1    7[COMMON] unsigned char 
  4201 ;;  nb              1    5[COMMON] unsigned char 
  4202 ;;  b               1    4[COMMON] unsigned char 
  4203 ;; Return value:  Size  Location     Type
  4204 ;;                  1    wreg      void 
  4205 ;; Registers used:
  4206 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4207 ;; Tracked objects:
  4208 ;;		On entry : 0/0
  4209 ;;		On exit  : 0/0
  4210 ;;		Unchanged: 0/0
  4211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4212 ;;      Params:         0       0       0       0       0       0
  4213 ;;      Locals:         4       0       0       0       0       0
  4214 ;;      Temps:          1       0       0       0       0       0
  4215 ;;      Totals:         5       0       0       0       0       0
  4216 ;;Total ram usage:        5 bytes
  4217 ;; Hardware stack levels used: 1
  4218 ;; Hardware stack levels required when called: 2
  4219 ;; This function calls:
  4220 ;;		_txMAX7219
  4221 ;; This function is called by:
  4222 ;;		_main
  4223 ;; This function uses a non-reentrant model
  4224 ;;
  4225                           
  4226     0EDA                     _sendMatrix:	
  4227                           ;psect for function _sendMatrix
  4228                           
  4229     0EDA                     l2657:	
  4230                           ;incstack = 0
  4231                           ; Regs used in _sendMatrix: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4232                           
  4233                           
  4234                           ;ledMatrix.c: 56:     uint8_t b;;ledMatrix.c: 57:     uint8_t nb;;ledMatrix.c: 58:     f
      +                          or(uint8_t i=0;i<8;i++){
  4235     0EDA  01F7               	clrf	sendMatrix@i
  4236     0EDB                     l2663:
  4237                           
  4238                           ;ledMatrix.c: 62:         b = matrix[i];
  4239     0EDB  0877               	movf	sendMatrix@i,w
  4240     0EDC  3EA0               	addlw	(low (_matrix| 0))& (0+255)
  4241     0EDD  0086               	movwf	6
  4242     0EDE  0187               	clrf	7
  4243     0EDF  0801               	movf	1,w
  4244     0EE0  00F4               	movwf	sendMatrix@b
  4245     0EE1                     l2665:
  4246                           
  4247                           ;ledMatrix.c: 65:         nb = 0x00;
  4248     0EE1  01F5               	clrf	sendMatrix@nb
  4249     0EE2                     l2667:
  4250                           
  4251                           ;ledMatrix.c: 66:         for(uint8_t j = 0; j < 8; j++){
  4252     0EE2  01F6               	clrf	sendMatrix@j
  4253     0EE3                     l2673:
  4254                           
  4255                           ;ledMatrix.c: 67:             nb <<= 1;
  4256     0EE3  1003               	clrc
  4257     0EE4  0DF5               	rlf	sendMatrix@nb,f
  4258     0EE5                     l2675:
  4259                           
  4260                           ;ledMatrix.c: 68:             nb |= b&0x01;
  4261     0EE5  0874               	movf	sendMatrix@b,w
  4262     0EE6  3901               	andlw	1
  4263     0EE7  00F3               	movwf	??_sendMatrix
  4264     0EE8  0873               	movf	??_sendMatrix,w
  4265     0EE9  04F5               	iorwf	sendMatrix@nb,f
  4266     0EEA                     l2677:
  4267                           
  4268                           ;ledMatrix.c: 69:             b >>= 1;
  4269     0EEA  1003               	clrc
  4270     0EEB  0CF4               	rrf	sendMatrix@b,f
  4271                           
  4272                           ;ledMatrix.c: 70:         }
  4273     0EEC  3001               	movlw	1
  4274     0EED  00F3               	movwf	??_sendMatrix
  4275     0EEE  0873               	movf	??_sendMatrix,w
  4276     0EEF  07F6               	addwf	sendMatrix@j,f
  4277     0EF0                     l2679:
  4278     0EF0  3008               	movlw	8
  4279     0EF1  0276               	subwf	sendMatrix@j,w
  4280     0EF2  1C03               	skipc
  4281     0EF3  2EF5               	goto	u1621
  4282     0EF4  2EF6               	goto	u1620
  4283     0EF5                     u1621:
  4284     0EF5  2EE3               	goto	l2673
  4285     0EF6                     u1620:
  4286     0EF6                     l2681:
  4287                           
  4288                           ;ledMatrix.c: 71:         txMAX7219(i+1,nb);
  4289     0EF6  0875               	movf	sendMatrix@nb,w
  4290     0EF7  00F1               	movwf	txMAX7219@dat0
  4291     0EF8  0877               	movf	sendMatrix@i,w
  4292     0EF9  3E01               	addlw	1
  4293     0EFA  318E  267F  318E   	fcall	_txMAX7219
  4294     0EFD                     l2683:
  4295                           
  4296                           ;ledMatrix.c: 75:     }
  4297     0EFD  3001               	movlw	1
  4298     0EFE  00F3               	movwf	??_sendMatrix
  4299     0EFF  0873               	movf	??_sendMatrix,w
  4300     0F00  07F7               	addwf	sendMatrix@i,f
  4301     0F01                     l2685:
  4302     0F01  3008               	movlw	8
  4303     0F02  0277               	subwf	sendMatrix@i,w
  4304     0F03  1C03               	skipc
  4305     0F04  2F06               	goto	u1631
  4306     0F05  2F07               	goto	u1630
  4307     0F06                     u1631:
  4308     0F06  2EDB               	goto	l2663
  4309     0F07                     u1630:
  4310     0F07                     l417:
  4311     0F07  0008               	return
  4312     0F08                     __end_of_sendMatrix:
  4313                           
  4314                           	psect	text8
  4315     0E55                     __ptext8:	
  4316 ;; *************** function _ledSet *****************
  4317 ;; Defined at:
  4318 ;;		line 31 in file "ledMatrix.c"
  4319 ;; Parameters:    Size  Location     Type
  4320 ;;  l               1    wreg     unsigned char 
  4321 ;;  c               1   13[COMMON] unsigned char 
  4322 ;; Auto vars:     Size  Location     Type
  4323 ;;  l               1    6[BANK0 ] unsigned char 
  4324 ;; Return value:  Size  Location     Type
  4325 ;;                  1    wreg      void 
  4326 ;; Registers used:
  4327 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4328 ;; Tracked objects:
  4329 ;;		On entry : 0/0
  4330 ;;		On exit  : 0/0
  4331 ;;		Unchanged: 0/0
  4332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4333 ;;      Params:         1       0       0       0       0       0
  4334 ;;      Locals:         0       1       0       0       0       0
  4335 ;;      Temps:          0       2       0       0       0       0
  4336 ;;      Totals:         1       3       0       0       0       0
  4337 ;;Total ram usage:        4 bytes
  4338 ;; Hardware stack levels used: 1
  4339 ;; This function calls:
  4340 ;;		Nothing
  4341 ;; This function is called by:
  4342 ;;		_main
  4343 ;;		_setLine
  4344 ;; This function uses a non-reentrant model
  4345 ;;
  4346                           
  4347     0E55                     _ledSet:	
  4348                           ;psect for function _ledSet
  4349                           
  4350                           
  4351                           ;incstack = 0
  4352                           ; Regs used in _ledSet: [wreg+fsr1l+fsr1h+status,2+status,0]
  4353                           ;ledSet@l stored from wreg
  4354     0E55  0020               	movlb	0	; select bank0
  4355     0E56  00A6               	movwf	ledSet@l
  4356     0E57                     l2649:
  4357                           
  4358                           ;ledMatrix.c: 32:     (matrix[c]) |= 1UL << (l);
  4359     0E57  3001               	movlw	1
  4360     0E58  00A4               	movwf	??_ledSet
  4361     0E59  0A26               	incf	ledSet@l,w
  4362     0E5A  2E5C               	goto	u1604
  4363     0E5B                     u1605:
  4364     0E5B  35A4               	lslf	??_ledSet,f
  4365     0E5C                     u1604:
  4366     0E5C  0B89               	decfsz	9,f
  4367     0E5D  2E5B               	goto	u1605
  4368     0E5E  0824               	movf	??_ledSet,w
  4369     0E5F  00A5               	movwf	??_ledSet+1
  4370     0E60  087D               	movf	ledSet@c,w
  4371     0E61  3EA0               	addlw	(low (_matrix| 0))& (0+255)
  4372     0E62  0086               	movwf	6
  4373     0E63  0187               	clrf	7
  4374     0E64  0825               	movf	??_ledSet+1,w
  4375     0E65  0481               	iorwf	1,f
  4376     0E66                     l397:
  4377     0E66  0008               	return
  4378     0E67                     __end_of_ledSet:
  4379                           
  4380                           	psect	text9
  4381     0E43                     __ptext9:	
  4382 ;; *************** function _ledClear *****************
  4383 ;; Defined at:
  4384 ;;		line 35 in file "ledMatrix.c"
  4385 ;; Parameters:    Size  Location     Type
  4386 ;;  l               1    wreg     unsigned char 
  4387 ;;  c               1    0[COMMON] unsigned char 
  4388 ;; Auto vars:     Size  Location     Type
  4389 ;;  l               1    3[COMMON] unsigned char 
  4390 ;; Return value:  Size  Location     Type
  4391 ;;                  1    wreg      void 
  4392 ;; Registers used:
  4393 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4394 ;; Tracked objects:
  4395 ;;		On entry : 0/0
  4396 ;;		On exit  : 0/0
  4397 ;;		Unchanged: 0/0
  4398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4399 ;;      Params:         1       0       0       0       0       0
  4400 ;;      Locals:         1       0       0       0       0       0
  4401 ;;      Temps:          2       0       0       0       0       0
  4402 ;;      Totals:         4       0       0       0       0       0
  4403 ;;Total ram usage:        4 bytes
  4404 ;; Hardware stack levels used: 1
  4405 ;; This function calls:
  4406 ;;		Nothing
  4407 ;; This function is called by:
  4408 ;;		_main
  4409 ;;		_setLine
  4410 ;; This function uses a non-reentrant model
  4411 ;;
  4412                           
  4413     0E43                     _ledClear:	
  4414                           ;psect for function _ledClear
  4415                           
  4416                           
  4417                           ;incstack = 0
  4418                           ; Regs used in _ledClear: [wreg+fsr1l+fsr1h+status,2+status,0]
  4419                           ;ledClear@l stored from wreg
  4420     0E43  00F3               	movwf	ledClear@l
  4421     0E44                     l2651:
  4422                           
  4423                           ;ledMatrix.c: 36:     (matrix[c]) &= ~(1UL << (l));
  4424     0E44  3001               	movlw	1
  4425     0E45  00F1               	movwf	??_ledClear
  4426     0E46  0A73               	incf	ledClear@l,w
  4427     0E47  2E49               	goto	u1614
  4428     0E48                     u1615:
  4429     0E48  35F1               	lslf	??_ledClear,f
  4430     0E49                     u1614:
  4431     0E49  0B89               	decfsz	9,f
  4432     0E4A  2E48               	goto	u1615
  4433     0E4B  0871               	movf	??_ledClear,w
  4434     0E4C  3AFF               	xorlw	255
  4435     0E4D  00F2               	movwf	??_ledClear+1
  4436     0E4E  0870               	movf	ledClear@c,w
  4437     0E4F  3EA0               	addlw	(low (_matrix| 0))& (0+255)
  4438     0E50  0086               	movwf	6
  4439     0E51  0187               	clrf	7
  4440     0E52  0872               	movf	??_ledClear+1,w
  4441     0E53  0581               	andwf	1,f
  4442     0E54                     l400:
  4443     0E54  0008               	return
  4444     0E55                     __end_of_ledClear:
  4445                           
  4446                           	psect	text10
  4447     0012                     __ptext10:	
  4448 ;; *************** function _initMAX7219 *****************
  4449 ;; Defined at:
  4450 ;;		line 16 in file "ledMatrix.c"
  4451 ;; Parameters:    Size  Location     Type
  4452 ;;		None
  4453 ;; Auto vars:     Size  Location     Type
  4454 ;;		None
  4455 ;; Return value:  Size  Location     Type
  4456 ;;                  1    wreg      void 
  4457 ;; Registers used:
  4458 ;;		wreg, status,2, status,0, pclath, cstack
  4459 ;; Tracked objects:
  4460 ;;		On entry : 0/0
  4461 ;;		On exit  : 0/0
  4462 ;;		Unchanged: 0/0
  4463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4464 ;;      Params:         0       0       0       0       0       0
  4465 ;;      Locals:         0       0       0       0       0       0
  4466 ;;      Temps:          2       0       0       0       0       0
  4467 ;;      Totals:         2       0       0       0       0       0
  4468 ;;Total ram usage:        2 bytes
  4469 ;; Hardware stack levels used: 1
  4470 ;; Hardware stack levels required when called: 2
  4471 ;; This function calls:
  4472 ;;		_txMAX7219
  4473 ;; This function is called by:
  4474 ;;		_main
  4475 ;; This function uses a non-reentrant model
  4476 ;;
  4477                           
  4478     0012                     _initMAX7219:	
  4479                           ;psect for function _initMAX7219
  4480                           
  4481     0012                     l2635:	
  4482                           ;incstack = 0
  4483                           ; Regs used in _initMAX7219: [wreg+status,2+status,0+pclath+cstack]
  4484                           
  4485                           
  4486                           ;ledMatrix.c: 17:     LATBbits.LATB1 = 1;
  4487     0012  0022               	movlb	2	; select bank2
  4488     0013  148D               	bsf	13,1	;volatile
  4489                           
  4490                           ;ledMatrix.c: 18:     TRISBbits.TRISB1 = 0;
  4491     0014  0021               	movlb	1	; select bank1
  4492     0015  108D               	bcf	13,1	;volatile
  4493                           
  4494                           ;ledMatrix.c: 19:     SSP1CON1bits.SSPEN = 1;
  4495     0016  0024               	movlb	4	; select bank4
  4496     0017  1695               	bsf	21,5	;volatile
  4497     0018                     l2637:
  4498                           
  4499                           ;ledMatrix.c: 20:     txMAX7219(0x09,0x00);
  4500     0018  01F1               	clrf	txMAX7219@dat0
  4501     0019  3009               	movlw	9
  4502     001A  318E  267F  3180   	fcall	_txMAX7219
  4503                           
  4504                           ;ledMatrix.c: 21:     txMAX7219(0x0A,0x00);
  4505     001D  01F1               	clrf	txMAX7219@dat0
  4506     001E  300A               	movlw	10
  4507     001F  318E  267F  3180   	fcall	_txMAX7219
  4508                           
  4509                           ;ledMatrix.c: 22:     txMAX7219(0x0C,0x00);
  4510     0022  01F1               	clrf	txMAX7219@dat0
  4511     0023  300C               	movlw	12
  4512     0024  318E  267F  3180   	fcall	_txMAX7219
  4513                           
  4514                           ;ledMatrix.c: 23:     txMAX7219(0x0B,0x07);
  4515     0027  3007               	movlw	7
  4516     0028  00F1               	movwf	txMAX7219@dat0
  4517     0029  300B               	movlw	11
  4518     002A  318E  267F  3180   	fcall	_txMAX7219
  4519                           
  4520                           ;ledMatrix.c: 24:     txMAX7219(0x0C,0x01);
  4521     002D  01F1               	clrf	txMAX7219@dat0
  4522     002E  0AF1               	incf	txMAX7219@dat0,f
  4523     002F  300C               	movlw	12
  4524     0030  318E  267F  3180   	fcall	_txMAX7219
  4525                           
  4526                           ;ledMatrix.c: 25:     txMAX7219(0x0F,0x01);
  4527     0033  01F1               	clrf	txMAX7219@dat0
  4528     0034  0AF1               	incf	txMAX7219@dat0,f
  4529     0035  300F               	movlw	15
  4530     0036  318E  267F  3180   	fcall	_txMAX7219
  4531     0039                     l2639:
  4532                           
  4533                           ;ledMatrix.c: 26:     _delay((unsigned long)((1000)*(8000000/4000.0)));
  4534     0039  300B               	movlw	11
  4535     003A  00F4               	movwf	??_initMAX7219+1
  4536     003B  3026               	movlw	38
  4537     003C  00F3               	movwf	??_initMAX7219
  4538     003D  305E               	movlw	94
  4539     003E                     u2457:
  4540     003E  0B89               	decfsz	9,f
  4541     003F  283E               	goto	u2457
  4542     0040  0BF3               	decfsz	??_initMAX7219,f
  4543     0041  283E               	goto	u2457
  4544     0042  0BF4               	decfsz	??_initMAX7219+1,f
  4545     0043  283E               	goto	u2457
  4546     0044                     l2641:
  4547                           
  4548                           ;ledMatrix.c: 27:     txMAX7219(0x0F,0x00);
  4549     0044  01F1               	clrf	txMAX7219@dat0
  4550     0045  300F               	movlw	15
  4551     0046  318E  267F  3180   	fcall	_txMAX7219
  4552     0049                     l2643:
  4553                           
  4554                           ;ledMatrix.c: 28:     txMAX7219(0x0C,0x01);
  4555     0049  01F1               	clrf	txMAX7219@dat0
  4556     004A  0AF1               	incf	txMAX7219@dat0,f
  4557     004B  300C               	movlw	12
  4558     004C  318E  267F  3180   	fcall	_txMAX7219
  4559     004F                     l394:
  4560     004F  0008               	return
  4561     0050                     __end_of_initMAX7219:
  4562                           
  4563                           	psect	text11
  4564     0E7F                     __ptext11:	
  4565 ;; *************** function _txMAX7219 *****************
  4566 ;; Defined at:
  4567 ;;		line 5 in file "ledMatrix.c"
  4568 ;; Parameters:    Size  Location     Type
  4569 ;;  addr0           1    wreg     unsigned char 
  4570 ;;  dat0            1    1[COMMON] unsigned char 
  4571 ;; Auto vars:     Size  Location     Type
  4572 ;;  addr0           1    2[COMMON] unsigned char 
  4573 ;; Return value:  Size  Location     Type
  4574 ;;                  1    wreg      void 
  4575 ;; Registers used:
  4576 ;;		wreg, status,2, status,0, pclath, cstack
  4577 ;; Tracked objects:
  4578 ;;		On entry : 0/0
  4579 ;;		On exit  : 0/0
  4580 ;;		Unchanged: 0/0
  4581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4582 ;;      Params:         1       0       0       0       0       0
  4583 ;;      Locals:         1       0       0       0       0       0
  4584 ;;      Temps:          0       0       0       0       0       0
  4585 ;;      Totals:         2       0       0       0       0       0
  4586 ;;Total ram usage:        2 bytes
  4587 ;; Hardware stack levels used: 1
  4588 ;; Hardware stack levels required when called: 1
  4589 ;; This function calls:
  4590 ;;		_SPI1_WriteByte
  4591 ;; This function is called by:
  4592 ;;		_initMAX7219
  4593 ;;		_sendMatrix
  4594 ;; This function uses a non-reentrant model
  4595 ;;
  4596                           
  4597     0E7F                     _txMAX7219:	
  4598                           ;psect for function _txMAX7219
  4599                           
  4600                           
  4601                           ;incstack = 0
  4602                           ; Regs used in _txMAX7219: [wreg+status,2+status,0+pclath+cstack]
  4603                           ;txMAX7219@addr0 stored from wreg
  4604     0E7F  00F2               	movwf	txMAX7219@addr0
  4605     0E80                     l2511:
  4606                           
  4607                           ;ledMatrix.c: 6:     LATBbits.LATB1 = 0;
  4608     0E80  0022               	movlb	2	; select bank2
  4609     0E81  108D               	bcf	13,1	;volatile
  4610     0E82                     l2513:
  4611                           
  4612                           ;ledMatrix.c: 7:     SPI1_WriteByte(addr0);
  4613     0E82  0872               	movf	txMAX7219@addr0,w
  4614     0E83  318D  25CB  318E   	fcall	_SPI1_WriteByte
  4615     0E86                     l385:	
  4616                           ;ledMatrix.c: 8:     while(!PIR1bits.SSP1IF);
  4617                           
  4618     0E86  0020               	movlb	0	; select bank0
  4619     0E87  1D91               	btfss	17,3	;volatile
  4620     0E88  2E8A               	goto	u1361
  4621     0E89  2E8B               	goto	u1360
  4622     0E8A                     u1361:
  4623     0E8A  2E86               	goto	l385
  4624     0E8B                     u1360:
  4625     0E8B                     l387:
  4626                           
  4627                           ;ledMatrix.c: 9:     PIR1bits.SSP1IF = 0;
  4628     0E8B  1191               	bcf	17,3	;volatile
  4629     0E8C                     l2515:
  4630                           
  4631                           ;ledMatrix.c: 10:     SPI1_WriteByte(dat0);
  4632     0E8C  0871               	movf	txMAX7219@dat0,w
  4633     0E8D  318D  25CB  318E   	fcall	_SPI1_WriteByte
  4634     0E90                     l388:	
  4635                           ;ledMatrix.c: 11:     while(!PIR1bits.SSP1IF);
  4636                           
  4637     0E90  0020               	movlb	0	; select bank0
  4638     0E91  1D91               	btfss	17,3	;volatile
  4639     0E92  2E94               	goto	u1371
  4640     0E93  2E95               	goto	u1370
  4641     0E94                     u1371:
  4642     0E94  2E90               	goto	l388
  4643     0E95                     u1370:
  4644     0E95                     l390:
  4645                           
  4646                           ;ledMatrix.c: 12:     PIR1bits.SSP1IF = 0;
  4647     0E95  1191               	bcf	17,3	;volatile
  4648                           
  4649                           ;ledMatrix.c: 13:     LATBbits.LATB1 = 1;
  4650     0E96  0022               	movlb	2	; select bank2
  4651     0E97  148D               	bsf	13,1	;volatile
  4652     0E98                     l391:
  4653     0E98  0008               	return
  4654     0E99                     __end_of_txMAX7219:
  4655                           
  4656                           	psect	text12
  4657     0DCB                     __ptext12:	
  4658 ;; *************** function _SPI1_WriteByte *****************
  4659 ;; Defined at:
  4660 ;;		line 131 in file "mcc_generated_files/spi1.c"
  4661 ;; Parameters:    Size  Location     Type
  4662 ;;  byte            1    wreg     unsigned char 
  4663 ;; Auto vars:     Size  Location     Type
  4664 ;;  byte            1    0[COMMON] unsigned char 
  4665 ;; Return value:  Size  Location     Type
  4666 ;;                  1    wreg      void 
  4667 ;; Registers used:
  4668 ;;		wreg
  4669 ;; Tracked objects:
  4670 ;;		On entry : 0/0
  4671 ;;		On exit  : 0/0
  4672 ;;		Unchanged: 0/0
  4673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4674 ;;      Params:         0       0       0       0       0       0
  4675 ;;      Locals:         1       0       0       0       0       0
  4676 ;;      Temps:          0       0       0       0       0       0
  4677 ;;      Totals:         1       0       0       0       0       0
  4678 ;;Total ram usage:        1 bytes
  4679 ;; Hardware stack levels used: 1
  4680 ;; This function calls:
  4681 ;;		Nothing
  4682 ;; This function is called by:
  4683 ;;		_txMAX7219
  4684 ;; This function uses a non-reentrant model
  4685 ;;
  4686                           
  4687     0DCB                     _SPI1_WriteByte:	
  4688                           ;psect for function _SPI1_WriteByte
  4689                           
  4690                           
  4691                           ;incstack = 0
  4692                           ; Regs used in _SPI1_WriteByte: [wreg]
  4693                           ;SPI1_WriteByte@byte stored from wreg
  4694     0DCB  00F0               	movwf	SPI1_WriteByte@byte
  4695     0DCC                     l2439:
  4696                           
  4697                           ;mcc_generated_files/spi1.c: 131: void SPI1_WriteByte(uint8_t byte);mcc_generated_files/
      +                          spi1.c: 132: {;mcc_generated_files/spi1.c: 133:     SSP1BUF = byte;
  4698     0DCC  0870               	movf	SPI1_WriteByte@byte,w
  4699     0DCD  0024               	movlb	4	; select bank4
  4700     0DCE  0091               	movwf	17	;volatile
  4701     0DCF                     l224:
  4702     0DCF  0008               	return
  4703     0DD0                     __end_of_SPI1_WriteByte:
  4704                           
  4705                           	psect	text13
  4706     0005                     __ptext13:	
  4707 ;; *************** function _deactivateElevator *****************
  4708 ;; Defined at:
  4709 ;;		line 50 in file "main.c"
  4710 ;; Parameters:    Size  Location     Type
  4711 ;;		None
  4712 ;; Auto vars:     Size  Location     Type
  4713 ;;		None
  4714 ;; Return value:  Size  Location     Type
  4715 ;;                  1    wreg      void 
  4716 ;; Registers used:
  4717 ;;		None
  4718 ;; Tracked objects:
  4719 ;;		On entry : 0/0
  4720 ;;		On exit  : 0/0
  4721 ;;		Unchanged: 0/0
  4722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4723 ;;      Params:         0       0       0       0       0       0
  4724 ;;      Locals:         0       0       0       0       0       0
  4725 ;;      Temps:          0       0       0       0       0       0
  4726 ;;      Totals:         0       0       0       0       0       0
  4727 ;;Total ram usage:        0 bytes
  4728 ;; Hardware stack levels used: 1
  4729 ;; This function calls:
  4730 ;;		Nothing
  4731 ;; This function is called by:
  4732 ;;		_main
  4733 ;; This function uses a non-reentrant model
  4734 ;;
  4735                           
  4736     0005                     _deactivateElevator:	
  4737                           ;psect for function _deactivateElevator
  4738                           
  4739     0005                     l2585:	
  4740                           ;incstack = 0
  4741                           ; Regs used in _deactivateElevator: []
  4742                           
  4743                           
  4744                           ;main.c: 51:     LATAbits.LATA3 = 0;
  4745     0005  0022               	movlb	2	; select bank2
  4746     0006  118C               	bcf	12,3	;volatile
  4747                           
  4748                           ;main.c: 52:     LATAbits.LATA7 = 0;
  4749     0007  138C               	bcf	12,7	;volatile
  4750                           
  4751                           ;main.c: 54:     TRISAbits.TRISA0 = 1;
  4752     0008  0021               	movlb	1	; select bank1
  4753     0009  140C               	bsf	12,0	;volatile
  4754                           
  4755                           ;main.c: 55:     TRISAbits.TRISA1 = 1;
  4756     000A  148C               	bsf	12,1	;volatile
  4757                           
  4758                           ;main.c: 56:     TRISAbits.TRISA2 = 1;
  4759     000B  150C               	bsf	12,2	;volatile
  4760                           
  4761                           ;main.c: 57:     TRISAbits.TRISA3 = 0;
  4762     000C  118C               	bcf	12,3	;volatile
  4763                           
  4764                           ;main.c: 58:     TRISAbits.TRISA4 = 1;
  4765     000D  160C               	bsf	12,4	;volatile
  4766                           
  4767                           ;main.c: 59:     TRISAbits.TRISA7 = 0;
  4768     000E  138C               	bcf	12,7	;volatile
  4769                           
  4770                           ;main.c: 60:     TRISBbits.TRISB0 = 1;
  4771     000F  140D               	bsf	13,0	;volatile
  4772                           
  4773                           ;main.c: 61:     TRISBbits.TRISB3 = 1;
  4774     0010  158D               	bsf	13,3	;volatile
  4775     0011                     l333:
  4776     0011  0008               	return
  4777     0012                     __end_of_deactivateElevator:
  4778                           
  4779                           	psect	text14
  4780     0251                     __ptext14:	
  4781 ;; *************** function _ai_run *****************
  4782 ;; Defined at:
  4783 ;;		line 117 in file "ai.c"
  4784 ;; Parameters:    Size  Location     Type
  4785 ;;		None
  4786 ;; Auto vars:     Size  Location     Type
  4787 ;;  i               1    9[BANK0 ] unsigned char 
  4788 ;;  i               1    8[BANK0 ] unsigned char 
  4789 ;;  i               1   10[BANK0 ] unsigned char 
  4790 ;;  j               1   14[BANK0 ] unsigned char 
  4791 ;;  j               1   13[BANK0 ] unsigned char 
  4792 ;;  i               1    7[BANK0 ] unsigned char 
  4793 ;;  z               2   11[BANK0 ] int 
  4794 ;; Return value:  Size  Location     Type
  4795 ;;                  1    wreg      unsigned char 
  4796 ;; Registers used:
  4797 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4798 ;; Tracked objects:
  4799 ;;		On entry : 0/0
  4800 ;;		On exit  : 0/0
  4801 ;;		Unchanged: 0/0
  4802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4803 ;;      Params:         0       0       0       0       0       0
  4804 ;;      Locals:         0       8       0       0       0       0
  4805 ;;      Temps:          0       3       0       0       0       0
  4806 ;;      Totals:         0      11       0       0       0       0
  4807 ;;Total ram usage:       11 bytes
  4808 ;; Hardware stack levels used: 1
  4809 ;; Hardware stack levels required when called: 1
  4810 ;; This function calls:
  4811 ;;		___awdiv
  4812 ;;		___wmul
  4813 ;;		_sigmoid
  4814 ;; This function is called by:
  4815 ;;		_main
  4816 ;; This function uses a non-reentrant model
  4817 ;;
  4818                           
  4819     0251                     _ai_run:	
  4820                           ;psect for function _ai_run
  4821                           
  4822     0251                     l2755:	
  4823                           ;incstack = 0
  4824                           ; Regs used in _ai_run: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4825                           
  4826                           
  4827                           ;ai.c: 118:     for(uint8_t i = 0; i < 8; i++){
  4828     0251  0020               	movlb	0	; select bank0
  4829     0252  01A7               	clrf	ai_run@i
  4830     0253                     l2761:
  4831                           
  4832                           ;ai.c: 119:         if(Y0[i] > 0){
  4833     0253  0827               	movf	ai_run@i,w
  4834     0254  3E64               	addlw	(low (_Y0| 0))& (0+255)
  4835     0255  0086               	movwf	6
  4836     0256  0187               	clrf	7
  4837     0257  0801               	movf	1,w
  4838     0258  3A80               	xorlw	128
  4839     0259  3E7F               	addlw	-129
  4840     025A  1C03               	skipc
  4841     025B  2A5D               	goto	u1751
  4842     025C  2A5E               	goto	u1750
  4843     025D                     u1751:
  4844     025D  2A64               	goto	l2765
  4845     025E                     u1750:
  4846     025E                     l2763:
  4847                           
  4848                           ;ai.c: 120:             Y0[i] = 255u;
  4849     025E  0827               	movf	ai_run@i,w
  4850     025F  3E64               	addlw	(low (_Y0| 0))& (0+255)
  4851     0260  0086               	movwf	6
  4852     0261  0187               	clrf	7
  4853     0262  0181               	clrf	1
  4854     0263  0381               	decf	1,f
  4855     0264                     l2765:
  4856                           
  4857                           ;ai.c: 122:     }
  4858     0264  3001               	movlw	1
  4859     0265  00A4               	movwf	??_ai_run
  4860     0266  0824               	movf	??_ai_run,w
  4861     0267  07A7               	addwf	ai_run@i,f
  4862     0268                     l2767:
  4863     0268  3008               	movlw	8
  4864     0269  0227               	subwf	ai_run@i,w
  4865     026A  1C03               	skipc
  4866     026B  2A6D               	goto	u1761
  4867     026C  2A6E               	goto	u1760
  4868     026D                     u1761:
  4869     026D  2A53               	goto	l2761
  4870     026E                     u1760:
  4871     026E                     l2769:
  4872                           
  4873                           ;ai.c: 124:     int z;;ai.c: 125:     for(uint8_t j = 0; j < 4; j++){
  4874     026E  01AD               	clrf	ai_run@j
  4875     026F                     l2775:
  4876                           
  4877                           ;ai.c: 126:         Z1[j] = B1[j];
  4878     026F  082D               	movf	ai_run@j,w
  4879     0270  3E52               	addlw	(low (_Z1| 0))& (0+255)
  4880     0271  0086               	movwf	6
  4881     0272  0187               	clrf	7
  4882     0273  082D               	movf	ai_run@j,w
  4883     0274  3ECC               	addlw	(low (_B1| 0))& (0+255)
  4884     0275  0084               	movwf	4
  4885     0276  0185               	clrf	5
  4886     0277  0800               	movf	0,w
  4887     0278  0081               	movwf	1
  4888     0279                     l2777:
  4889                           
  4890                           ;ai.c: 127:         for(uint8_t i = 0; i < 8; i++){
  4891     0279  01A8               	clrf	ai_run@i_875
  4892     027A                     l2783:
  4893                           
  4894                           ;ai.c: 128:             z = Y0[i];
  4895     027A  0828               	movf	ai_run@i_875,w
  4896     027B  3E64               	addlw	(low (_Y0| 0))& (0+255)
  4897     027C  0086               	movwf	6
  4898     027D  0187               	clrf	7
  4899     027E  0801               	movf	1,w
  4900     027F  00AB               	movwf	ai_run@z
  4901     0280  01AC               	clrf	ai_run@z+1
  4902     0281  1BAB               	btfsc	ai_run@z,7
  4903     0282  03AC               	decf	ai_run@z+1,f
  4904     0283                     l2785:
  4905                           
  4906                           ;ai.c: 129:             z *= W1[i][j];
  4907     0283  0828               	movf	ai_run@i_875,w
  4908     0284  00A4               	movwf	??_ai_run
  4909     0285  3002               	movlw	2
  4910     0286                     u1775:
  4911     0286  35A4               	lslf	??_ai_run,f
  4912     0287  0B89               	decfsz	9,f
  4913     0288  2A86               	goto	u1775
  4914     0289  3020               	movlw	(low (_W1| (0+256)))& (0+255)
  4915     028A  0724               	addwf	??_ai_run,w
  4916     028B  00A5               	movwf	??_ai_run+1
  4917     028C  082D               	movf	ai_run@j,w
  4918     028D  0725               	addwf	??_ai_run+1,w
  4919     028E  00A6               	movwf	??_ai_run+2
  4920     028F  0826               	movf	??_ai_run+2,w
  4921     0290  0086               	movwf	6
  4922     0291  3001               	movlw	1	; select bank2/3
  4923     0292  0087               	movwf	7
  4924     0293  0801               	movf	1,w
  4925     0294  00F2               	movwf	___wmul@multiplier
  4926     0295  01F3               	clrf	___wmul@multiplier+1
  4927     0296  1BF2               	btfsc	___wmul@multiplier,7
  4928     0297  03F3               	decf	___wmul@multiplier+1,f
  4929     0298  082C               	movf	ai_run@z+1,w
  4930     0299  00F5               	movwf	___wmul@multiplicand+1
  4931     029A  082B               	movf	ai_run@z,w
  4932     029B  00F4               	movwf	___wmul@multiplicand
  4933     029C  318E  2699  3182   	fcall	___wmul
  4934     029F  0873               	movf	?___wmul+1,w
  4935     02A0  0020               	movlb	0	; select bank0
  4936     02A1  00AC               	movwf	ai_run@z+1
  4937     02A2  0872               	movf	?___wmul,w
  4938     02A3  00AB               	movwf	ai_run@z
  4939     02A4                     l2787:
  4940                           
  4941                           ;ai.c: 130:             z /= 255;
  4942     02A4  30FF               	movlw	255
  4943     02A5  00F8               	movwf	___awdiv@divisor
  4944     02A6  3000               	movlw	0
  4945     02A7  00F9               	movwf	___awdiv@divisor+1
  4946     02A8  082C               	movf	ai_run@z+1,w
  4947     02A9  00FB               	movwf	___awdiv@dividend+1
  4948     02AA  082B               	movf	ai_run@z,w
  4949     02AB  00FA               	movwf	___awdiv@dividend
  4950     02AC  318F  27A0  3182   	fcall	___awdiv
  4951     02AF  0879               	movf	?___awdiv+1,w
  4952     02B0  0020               	movlb	0	; select bank0
  4953     02B1  00AC               	movwf	ai_run@z+1
  4954     02B2  0878               	movf	?___awdiv,w
  4955     02B3  00AB               	movwf	ai_run@z
  4956     02B4                     l2789:
  4957                           
  4958                           ;ai.c: 131:             Z1[j] += z;
  4959     02B4  082B               	movf	ai_run@z,w
  4960     02B5  00A4               	movwf	??_ai_run
  4961     02B6  082D               	movf	ai_run@j,w
  4962     02B7  3E52               	addlw	(low (_Z1| 0))& (0+255)
  4963     02B8  0086               	movwf	6
  4964     02B9  0187               	clrf	7
  4965     02BA  0824               	movf	??_ai_run,w
  4966     02BB  0781               	addwf	1,f
  4967     02BC                     l2791:
  4968                           
  4969                           ;ai.c: 132:         }
  4970     02BC  3001               	movlw	1
  4971     02BD  00A4               	movwf	??_ai_run
  4972     02BE  0824               	movf	??_ai_run,w
  4973     02BF  07A8               	addwf	ai_run@i_875,f
  4974     02C0                     l2793:
  4975     02C0  3008               	movlw	8
  4976     02C1  0228               	subwf	ai_run@i_875,w
  4977     02C2  1C03               	skipc
  4978     02C3  2AC5               	goto	u1781
  4979     02C4  2AC6               	goto	u1780
  4980     02C5                     u1781:
  4981     02C5  2A7A               	goto	l2783
  4982     02C6                     u1780:
  4983     02C6                     l2795:
  4984                           
  4985                           ;ai.c: 133:         Y1[j] = sigmoid(Z1[j])>>1;
  4986     02C6  082D               	movf	ai_run@j,w
  4987     02C7  3E5A               	addlw	(low (_Y1| 0))& (0+255)
  4988     02C8  0086               	movwf	6
  4989     02C9  0187               	clrf	7
  4990     02CA  082D               	movf	ai_run@j,w
  4991     02CB  3E52               	addlw	(low (_Z1| 0))& (0+255)
  4992     02CC  0084               	movwf	4
  4993     02CD  0185               	clrf	5
  4994     02CE  0800               	movf	0,w
  4995     02CF  318E  2633  3182   	fcall	_sigmoid
  4996     02D2  3689               	lsrf	9,f
  4997     02D3  0081               	movwf	1
  4998     02D4                     l2797:
  4999                           
  5000                           ;ai.c: 134:     }
  5001     02D4  3001               	movlw	1
  5002     02D5  0020               	movlb	0	; select bank0
  5003     02D6  00A4               	movwf	??_ai_run
  5004     02D7  0824               	movf	??_ai_run,w
  5005     02D8  07AD               	addwf	ai_run@j,f
  5006     02D9                     l2799:
  5007     02D9  3004               	movlw	4
  5008     02DA  022D               	subwf	ai_run@j,w
  5009     02DB  1C03               	skipc
  5010     02DC  2ADE               	goto	u1791
  5011     02DD  2ADF               	goto	u1790
  5012     02DE                     u1791:
  5013     02DE  2A6F               	goto	l2775
  5014     02DF                     u1790:
  5015     02DF                     l2801:
  5016                           
  5017                           ;ai.c: 135:     for(uint8_t j = 0; j < 4; j++){
  5018     02DF  01AE               	clrf	ai_run@j_876
  5019     02E0                     l2807:
  5020                           
  5021                           ;ai.c: 136:         Z2[j] = B2[j];
  5022     02E0  082E               	movf	ai_run@j_876,w
  5023     02E1  3E4E               	addlw	(low (_Z2| 0))& (0+255)
  5024     02E2  0086               	movwf	6
  5025     02E3  0187               	clrf	7
  5026     02E4  082E               	movf	ai_run@j_876,w
  5027     02E5  3EC8               	addlw	(low (_B2| 0))& (0+255)
  5028     02E6  0084               	movwf	4
  5029     02E7  0185               	clrf	5
  5030     02E8  0800               	movf	0,w
  5031     02E9  0081               	movwf	1
  5032     02EA                     l2809:
  5033                           
  5034                           ;ai.c: 137:         for(uint8_t i = 0; i < 4; i++){
  5035     02EA  01A9               	clrf	ai_run@i_877
  5036     02EB                     l2815:
  5037                           
  5038                           ;ai.c: 138:             z = Y1[i];
  5039     02EB  0829               	movf	ai_run@i_877,w
  5040     02EC  3E5A               	addlw	(low (_Y1| 0))& (0+255)
  5041     02ED  0086               	movwf	6
  5042     02EE  0187               	clrf	7
  5043     02EF  0801               	movf	1,w
  5044     02F0  00AB               	movwf	ai_run@z
  5045     02F1  01AC               	clrf	ai_run@z+1
  5046     02F2  1BAB               	btfsc	ai_run@z,7
  5047     02F3  03AC               	decf	ai_run@z+1,f
  5048     02F4                     l2817:
  5049                           
  5050                           ;ai.c: 139:             z *= W2[i][j];
  5051     02F4  0829               	movf	ai_run@i_877,w
  5052     02F5  00A4               	movwf	??_ai_run
  5053     02F6  3002               	movlw	2
  5054     02F7                     u1805:
  5055     02F7  35A4               	lslf	??_ai_run,f
  5056     02F8  0B89               	decfsz	9,f
  5057     02F9  2AF7               	goto	u1805
  5058     02FA  3060               	movlw	(low (_W2| (0+256)))& (0+255)
  5059     02FB  0724               	addwf	??_ai_run,w
  5060     02FC  00A5               	movwf	??_ai_run+1
  5061     02FD  082E               	movf	ai_run@j_876,w
  5062     02FE  0725               	addwf	??_ai_run+1,w
  5063     02FF  00A6               	movwf	??_ai_run+2
  5064     0300  0826               	movf	??_ai_run+2,w
  5065     0301  0086               	movwf	6
  5066     0302  3001               	movlw	1	; select bank2/3
  5067     0303  0087               	movwf	7
  5068     0304  0801               	movf	1,w
  5069     0305  00F2               	movwf	___wmul@multiplier
  5070     0306  01F3               	clrf	___wmul@multiplier+1
  5071     0307  1BF2               	btfsc	___wmul@multiplier,7
  5072     0308  03F3               	decf	___wmul@multiplier+1,f
  5073     0309  082C               	movf	ai_run@z+1,w
  5074     030A  00F5               	movwf	___wmul@multiplicand+1
  5075     030B  082B               	movf	ai_run@z,w
  5076     030C  00F4               	movwf	___wmul@multiplicand
  5077     030D  318E  2699  3182   	fcall	___wmul
  5078     0310  0873               	movf	?___wmul+1,w
  5079     0311  0020               	movlb	0	; select bank0
  5080     0312  00AC               	movwf	ai_run@z+1
  5081     0313  0872               	movf	?___wmul,w
  5082     0314  00AB               	movwf	ai_run@z
  5083     0315                     l2819:
  5084                           
  5085                           ;ai.c: 140:             z /= 255;
  5086     0315  30FF               	movlw	255
  5087     0316  00F8               	movwf	___awdiv@divisor
  5088     0317  3000               	movlw	0
  5089     0318  00F9               	movwf	___awdiv@divisor+1
  5090     0319  082C               	movf	ai_run@z+1,w
  5091     031A  00FB               	movwf	___awdiv@dividend+1
  5092     031B  082B               	movf	ai_run@z,w
  5093     031C  00FA               	movwf	___awdiv@dividend
  5094     031D  318F  27A0  3182   	fcall	___awdiv
  5095     0320  0879               	movf	?___awdiv+1,w
  5096     0321  0020               	movlb	0	; select bank0
  5097     0322  00AC               	movwf	ai_run@z+1
  5098     0323  0878               	movf	?___awdiv,w
  5099     0324  00AB               	movwf	ai_run@z
  5100     0325                     l2821:
  5101                           
  5102                           ;ai.c: 141:             Z2[j] += z;
  5103     0325  082B               	movf	ai_run@z,w
  5104     0326  00A4               	movwf	??_ai_run
  5105     0327  082E               	movf	ai_run@j_876,w
  5106     0328  3E4E               	addlw	(low (_Z2| 0))& (0+255)
  5107     0329  0086               	movwf	6
  5108     032A  0187               	clrf	7
  5109     032B  0824               	movf	??_ai_run,w
  5110     032C  0781               	addwf	1,f
  5111     032D                     l2823:
  5112                           
  5113                           ;ai.c: 142:         }
  5114     032D  3001               	movlw	1
  5115     032E  00A4               	movwf	??_ai_run
  5116     032F  0824               	movf	??_ai_run,w
  5117     0330  07A9               	addwf	ai_run@i_877,f
  5118     0331                     l2825:
  5119     0331  3004               	movlw	4
  5120     0332  0229               	subwf	ai_run@i_877,w
  5121     0333  1C03               	skipc
  5122     0334  2B36               	goto	u1811
  5123     0335  2B37               	goto	u1810
  5124     0336                     u1811:
  5125     0336  2AEB               	goto	l2815
  5126     0337                     u1810:
  5127     0337                     l2827:
  5128                           
  5129                           ;ai.c: 143:         Y2[j] = sigmoid(Z2[j])>>1;
  5130     0337  082E               	movf	ai_run@j_876,w
  5131     0338  3E56               	addlw	(low (_Y2| 0))& (0+255)
  5132     0339  0086               	movwf	6
  5133     033A  0187               	clrf	7
  5134     033B  082E               	movf	ai_run@j_876,w
  5135     033C  3E4E               	addlw	(low (_Z2| 0))& (0+255)
  5136     033D  0084               	movwf	4
  5137     033E  0185               	clrf	5
  5138     033F  0800               	movf	0,w
  5139     0340  318E  2633  3182   	fcall	_sigmoid
  5140     0343  3689               	lsrf	9,f
  5141     0344  0081               	movwf	1
  5142     0345                     l2829:
  5143                           
  5144                           ;ai.c: 144:     }
  5145     0345  3001               	movlw	1
  5146     0346  0020               	movlb	0	; select bank0
  5147     0347  00A4               	movwf	??_ai_run
  5148     0348  0824               	movf	??_ai_run,w
  5149     0349  07AE               	addwf	ai_run@j_876,f
  5150     034A                     l2831:
  5151     034A  3004               	movlw	4
  5152     034B  022E               	subwf	ai_run@j_876,w
  5153     034C  1C03               	skipc
  5154     034D  2B4F               	goto	u1821
  5155     034E  2B50               	goto	u1820
  5156     034F                     u1821:
  5157     034F  2AE0               	goto	l2807
  5158     0350                     u1820:
  5159     0350                     l2833:
  5160                           
  5161                           ;ai.c: 146:     choice = 0;
  5162     0350  01E1               	clrf	_choice
  5163     0351                     l2835:
  5164                           
  5165                           ;ai.c: 147:     for(uint8_t i = 1; i < 4; i++){
  5166     0351  01AA               	clrf	ai_run@i_878
  5167     0352  0AAA               	incf	ai_run@i_878,f
  5168     0353                     l2841:
  5169                           
  5170                           ;ai.c: 148:         if(Y2[i]>Y2[choice]){
  5171     0353  0861               	movf	_choice,w
  5172     0354  3E56               	addlw	(low (_Y2| 0))& (0+255)
  5173     0355  0086               	movwf	6
  5174     0356  0187               	clrf	7
  5175     0357  0801               	movf	1,w
  5176     0358  3A80               	xorlw	128
  5177     0359  00A4               	movwf	??_ai_run
  5178     035A  082A               	movf	ai_run@i_878,w
  5179     035B  3E56               	addlw	(low (_Y2| 0))& (0+255)
  5180     035C  0086               	movwf	6
  5181     035D  0187               	clrf	7
  5182     035E  0801               	movf	1,w
  5183     035F  3A80               	xorlw	128
  5184     0360  02A4               	subwf	??_ai_run,f
  5185     0361  1803               	skipnc
  5186     0362  2B64               	goto	u1831
  5187     0363  2B65               	goto	u1830
  5188     0364                     u1831:
  5189     0364  2B67               	goto	l2845
  5190     0365                     u1830:
  5191     0365                     l2843:
  5192                           
  5193                           ;ai.c: 149:             choice = i;
  5194     0365  082A               	movf	ai_run@i_878,w
  5195     0366  00E1               	movwf	_choice
  5196     0367                     l2845:
  5197                           
  5198                           ;ai.c: 151:     }
  5199     0367  3001               	movlw	1
  5200     0368  00A4               	movwf	??_ai_run
  5201     0369  0824               	movf	??_ai_run,w
  5202     036A  07AA               	addwf	ai_run@i_878,f
  5203     036B                     l2847:
  5204     036B  3004               	movlw	4
  5205     036C  022A               	subwf	ai_run@i_878,w
  5206     036D  1C03               	skipc
  5207     036E  2B70               	goto	u1841
  5208     036F  2B71               	goto	u1840
  5209     0370                     u1841:
  5210     0370  2B53               	goto	l2841
  5211     0371                     u1840:
  5212     0371                     l2849:
  5213                           
  5214                           ;ai.c: 152:     return choice;
  5215     0371  0861               	movf	_choice,w
  5216     0372                     l618:
  5217     0372  0008               	return
  5218     0373                     __end_of_ai_run:
  5219                           
  5220                           	psect	text15
  5221     0E33                     __ptext15:	
  5222 ;; *************** function _sigmoid *****************
  5223 ;; Defined at:
  5224 ;;		line 8 in file "sigmoid.c"
  5225 ;; Parameters:    Size  Location     Type
  5226 ;;  z               1    wreg     char 
  5227 ;; Auto vars:     Size  Location     Type
  5228 ;;  z               1    1[COMMON] char 
  5229 ;; Return value:  Size  Location     Type
  5230 ;;                  1    wreg      unsigned char 
  5231 ;; Registers used:
  5232 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  5233 ;; Tracked objects:
  5234 ;;		On entry : 0/0
  5235 ;;		On exit  : 0/0
  5236 ;;		Unchanged: 0/0
  5237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5238 ;;      Params:         0       0       0       0       0       0
  5239 ;;      Locals:         1       0       0       0       0       0
  5240 ;;      Temps:          1       0       0       0       0       0
  5241 ;;      Totals:         2       0       0       0       0       0
  5242 ;;Total ram usage:        2 bytes
  5243 ;; Hardware stack levels used: 1
  5244 ;; This function calls:
  5245 ;;		Nothing
  5246 ;; This function is called by:
  5247 ;;		_ai_run
  5248 ;; This function uses a non-reentrant model
  5249 ;;
  5250                           
  5251     0E33                     _sigmoid:	
  5252                           ;psect for function _sigmoid
  5253                           
  5254                           
  5255                           ;incstack = 0
  5256                           ; Regs used in _sigmoid: [wreg-fsr0h+status,2+status,0+pclath]
  5257                           ;sigmoid@z stored from wreg
  5258     0E33  00F1               	movwf	sigmoid@z
  5259     0E34                     l2517:
  5260                           
  5261                           ;sigmoid.c: 9:     return sigmoidValues[((uint8_t)z)>>4];
  5262     0E34  0871               	movf	sigmoid@z,w
  5263     0E35  00F0               	movwf	??_sigmoid
  5264     0E36  3004               	movlw	4
  5265     0E37                     u1385:
  5266     0E37  36F0               	lsrf	??_sigmoid,f
  5267     0E38  0B89               	decfsz	9,f
  5268     0E39  2E37               	goto	u1385
  5269     0E3A  0870               	movf	??_sigmoid,w
  5270     0E3B  3E10               	addlw	low (_sigmoidValues| (0+32768))
  5271     0E3C  0084               	movwf	4
  5272     0E3D  3088               	movlw	high (_sigmoidValues| (0+32768))
  5273     0E3E  1803               	skipnc
  5274     0E3F  3E01               	addlw	1
  5275     0E40  0085               	movwf	5
  5276     0E41  0800               	movf	0,w	;code access
  5277     0E42                     l664:
  5278     0E42  0008               	return
  5279     0E43                     __end_of_sigmoid:
  5280                           
  5281                           	psect	text16
  5282     0517                     __ptext16:	
  5283 ;; *************** function _ai_propagate *****************
  5284 ;; Defined at:
  5285 ;;		line 155 in file "ai.c"
  5286 ;; Parameters:    Size  Location     Type
  5287 ;;  incentive       1    wreg     char 
  5288 ;; Auto vars:     Size  Location     Type
  5289 ;;  incentive       1   16[BANK0 ] char 
  5290 ;;  i               1   23[BANK0 ] unsigned char 
  5291 ;;  i               1   22[BANK0 ] unsigned char 
  5292 ;;  i               1   21[BANK0 ] unsigned char 
  5293 ;;  i               1   25[BANK0 ] unsigned char 
  5294 ;;  i               1   20[BANK0 ] unsigned char 
  5295 ;;  i               1   19[BANK0 ] unsigned char 
  5296 ;;  i               1   18[BANK0 ] unsigned char 
  5297 ;;  i               1   17[BANK0 ] unsigned char 
  5298 ;;  j               1   27[BANK0 ] unsigned char 
  5299 ;;  j               1   26[BANK0 ] unsigned char 
  5300 ;;  j               1   29[BANK0 ] unsigned char 
  5301 ;;  j               1   30[BANK0 ] unsigned char 
  5302 ;;  j               1   24[BANK0 ] unsigned char 
  5303 ;;  j               1   28[BANK0 ] unsigned char 
  5304 ;;  S               4   10[BANK0 ] char [4]
  5305 ;;  dz              2    0        int 
  5306 ;; Return value:  Size  Location     Type
  5307 ;;                  1    wreg      void 
  5308 ;; Registers used:
  5309 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5310 ;; Tracked objects:
  5311 ;;		On entry : 0/0
  5312 ;;		On exit  : 0/0
  5313 ;;		Unchanged: 0/0
  5314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5315 ;;      Params:         0       0       0       0       0       0
  5316 ;;      Locals:         0      21       0       0       0       0
  5317 ;;      Temps:          0       6       0       0       0       0
  5318 ;;      Totals:         0      27       0       0       0       0
  5319 ;;Total ram usage:       27 bytes
  5320 ;; Hardware stack levels used: 1
  5321 ;; Hardware stack levels required when called: 1
  5322 ;; This function calls:
  5323 ;;		___awdiv
  5324 ;;		___wmul
  5325 ;;		_de_sigmoid
  5326 ;; This function is called by:
  5327 ;;		_main
  5328 ;; This function uses a non-reentrant model
  5329 ;;
  5330                           
  5331     0517                     _ai_propagate:	
  5332                           ;psect for function _ai_propagate
  5333                           
  5334                           
  5335                           ;incstack = 0
  5336                           ; Regs used in _ai_propagate: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5337                           ;ai_propagate@incentive stored from wreg
  5338     0517  0020               	movlb	0	; select bank0
  5339     0518  00B0               	movwf	ai_propagate@incentive
  5340     0519                     l2939:
  5341                           
  5342                           ;ai.c: 156:     if(incentive == 0){
  5343     0519  0830               	movf	ai_propagate@incentive,w
  5344     051A  1D03               	btfss	3,2
  5345     051B  2D1D               	goto	u1961
  5346     051C  2D1E               	goto	u1960
  5347     051D                     u1961:
  5348     051D  2D1F               	goto	l2943
  5349     051E                     u1960:
  5350     051E  2FD0               	goto	l622
  5351     051F                     l2943:
  5352                           
  5353                           ;ai.c: 160:     if(incentive == -1){
  5354     051F  0A30               	incf	ai_propagate@incentive,w
  5355     0520  1D03               	btfss	3,2
  5356     0521  2D23               	goto	u1971
  5357     0522  2D24               	goto	u1970
  5358     0523                     u1971:
  5359     0523  2D25               	goto	l2947
  5360     0524                     u1970:
  5361     0524                     l2945:
  5362                           
  5363                           ;ai.c: 161:         incentive = 0;
  5364     0524  01B0               	clrf	ai_propagate@incentive
  5365     0525                     l2947:
  5366                           
  5367                           ;ai.c: 164:     int8_t S[4];;ai.c: 165:     if(incentive == 0){
  5368     0525  0830               	movf	ai_propagate@incentive,w
  5369     0526  1D03               	btfss	3,2
  5370     0527  2D29               	goto	u1981
  5371     0528  2D2A               	goto	u1980
  5372     0529                     u1981:
  5373     0529  2D41               	goto	l2963
  5374     052A                     u1980:
  5375     052A                     l2949:
  5376                           
  5377                           ;ai.c: 166:         for(uint8_t i = 0; i < 4; i++){
  5378     052A  01B1               	clrf	ai_propagate@i
  5379     052B                     l2955:
  5380                           
  5381                           ;ai.c: 167:             S[i] = 127;
  5382     052B  0831               	movf	ai_propagate@i,w
  5383     052C  3E2A               	addlw	(low (ai_propagate@S| 0))& (0+255)
  5384     052D  0086               	movwf	6
  5385     052E  0187               	clrf	7
  5386     052F  307F               	movlw	127
  5387     0530  0081               	movwf	1
  5388     0531                     l2957:
  5389                           
  5390                           ;ai.c: 168:         }
  5391     0531  3001               	movlw	1
  5392     0532  00A4               	movwf	??_ai_propagate
  5393     0533  0824               	movf	??_ai_propagate,w
  5394     0534  07B1               	addwf	ai_propagate@i,f
  5395     0535                     l2959:
  5396     0535  3004               	movlw	4
  5397     0536  0231               	subwf	ai_propagate@i,w
  5398     0537  1C03               	skipc
  5399     0538  2D3A               	goto	u1991
  5400     0539  2D3B               	goto	u1990
  5401     053A                     u1991:
  5402     053A  2D2B               	goto	l2955
  5403     053B                     u1990:
  5404     053B                     l2961:
  5405                           
  5406                           ;ai.c: 169:         S[choice] = 0;
  5407     053B  0861               	movf	_choice,w
  5408     053C  3E2A               	addlw	(low (ai_propagate@S| 0))& (0+255)
  5409     053D  0086               	movwf	6
  5410     053E  0187               	clrf	7
  5411     053F  0181               	clrf	1
  5412                           
  5413                           ;ai.c: 170:     } else{
  5414     0540  2D57               	goto	l2977
  5415     0541                     l2963:
  5416                           
  5417                           ;ai.c: 171:         for(uint8_t i = 0; i < 4; i++){
  5418     0541  01B2               	clrf	ai_propagate@i_883
  5419     0542                     l2969:
  5420                           
  5421                           ;ai.c: 172:             S[i] = 0;
  5422     0542  0832               	movf	ai_propagate@i_883,w
  5423     0543  3E2A               	addlw	(low (ai_propagate@S| 0))& (0+255)
  5424     0544  0086               	movwf	6
  5425     0545  0187               	clrf	7
  5426     0546  0181               	clrf	1
  5427     0547                     l2971:
  5428                           
  5429                           ;ai.c: 173:         }
  5430     0547  3001               	movlw	1
  5431     0548  00A4               	movwf	??_ai_propagate
  5432     0549  0824               	movf	??_ai_propagate,w
  5433     054A  07B2               	addwf	ai_propagate@i_883,f
  5434     054B                     l2973:
  5435     054B  3004               	movlw	4
  5436     054C  0232               	subwf	ai_propagate@i_883,w
  5437     054D  1C03               	skipc
  5438     054E  2D50               	goto	u2001
  5439     054F  2D51               	goto	u2000
  5440     0550                     u2001:
  5441     0550  2D42               	goto	l2969
  5442     0551                     u2000:
  5443     0551                     l2975:
  5444                           
  5445                           ;ai.c: 174:         S[choice] = 127;
  5446     0551  0861               	movf	_choice,w
  5447     0552  3E2A               	addlw	(low (ai_propagate@S| 0))& (0+255)
  5448     0553  0086               	movwf	6
  5449     0554  0187               	clrf	7
  5450     0555  307F               	movlw	127
  5451     0556  0081               	movwf	1
  5452     0557                     l2977:
  5453                           
  5454                           ;ai.c: 177:     for(uint8_t j = 0; j < 4; j++){
  5455     0557  01BC               	clrf	ai_propagate@j
  5456     0558                     l2983:
  5457                           
  5458                           ;ai.c: 178:         DC_DY2[j] = Y2[j] - S[j];
  5459     0558  083C               	movf	ai_propagate@j,w
  5460     0559  3EC4               	addlw	(low (_DC_DY2| 0))& (0+255)
  5461     055A  0086               	movwf	6
  5462     055B  0187               	clrf	7
  5463     055C  083C               	movf	ai_propagate@j,w
  5464     055D  3E2A               	addlw	(low (ai_propagate@S| 0))& (0+255)
  5465     055E  0084               	movwf	4
  5466     055F  0185               	clrf	5
  5467     0560  0800               	movf	0,w
  5468     0561  00A4               	movwf	??_ai_propagate
  5469     0562  083C               	movf	ai_propagate@j,w
  5470     0563  3E56               	addlw	(low (_Y2| 0))& (0+255)
  5471     0564  0084               	movwf	4
  5472     0565  0185               	clrf	5
  5473     0566  0800               	movf	0,w
  5474     0567  00A5               	movwf	??_ai_propagate+1
  5475     0568  0824               	movf	??_ai_propagate,w
  5476     0569  0225               	subwf	??_ai_propagate+1,w
  5477     056A  0081               	movwf	1
  5478     056B                     l2985:
  5479                           
  5480                           ;ai.c: 179:         DC_DZ2[j] = 0;
  5481     056B  083C               	movf	ai_propagate@j,w
  5482     056C  3E4A               	addlw	(low (_DC_DZ2| 0))& (0+255)
  5483     056D  0086               	movwf	6
  5484     056E  0187               	clrf	7
  5485     056F  0181               	clrf	1
  5486     0570                     l2987:
  5487                           
  5488                           ;ai.c: 180:         DC_DB2[j] = 0;
  5489     0570  083C               	movf	ai_propagate@j,w
  5490     0571  3EB4               	addlw	(low (_DC_DB2| 0))& (0+255)
  5491     0572  0086               	movwf	6
  5492     0573  0187               	clrf	7
  5493     0574  0181               	clrf	1
  5494     0575                     l2989:
  5495                           
  5496                           ;ai.c: 181:         for(uint8_t i = 0; i < 4; i++){
  5497     0575  01B3               	clrf	ai_propagate@i_885
  5498     0576                     l2995:
  5499                           
  5500                           ;ai.c: 182:             DC_DW2[i][j] = 0;
  5501     0576  0833               	movf	ai_propagate@i_885,w
  5502     0577  00A4               	movwf	??_ai_propagate
  5503     0578  3002               	movlw	2
  5504     0579                     u2015:
  5505     0579  35A4               	lslf	??_ai_propagate,f
  5506     057A  0B89               	decfsz	9,f
  5507     057B  2D79               	goto	u2015
  5508     057C  3040               	movlw	(low (_DC_DW2| (0+256)))& (0+255)
  5509     057D  0724               	addwf	??_ai_propagate,w
  5510     057E  00A5               	movwf	??_ai_propagate+1
  5511     057F  083C               	movf	ai_propagate@j,w
  5512     0580  0725               	addwf	??_ai_propagate+1,w
  5513     0581  00A6               	movwf	??_ai_propagate+2
  5514     0582  0826               	movf	??_ai_propagate+2,w
  5515     0583  0086               	movwf	6
  5516     0584  3001               	movlw	1	; select bank2/3
  5517     0585  0087               	movwf	7
  5518     0586  0181               	clrf	1
  5519     0587                     l2997:
  5520                           
  5521                           ;ai.c: 183:         }
  5522     0587  3001               	movlw	1
  5523     0588  00A4               	movwf	??_ai_propagate
  5524     0589  0824               	movf	??_ai_propagate,w
  5525     058A  07B3               	addwf	ai_propagate@i_885,f
  5526     058B                     l2999:
  5527     058B  3004               	movlw	4
  5528     058C  0233               	subwf	ai_propagate@i_885,w
  5529     058D  1C03               	skipc
  5530     058E  2D90               	goto	u2021
  5531     058F  2D91               	goto	u2020
  5532     0590                     u2021:
  5533     0590  2D76               	goto	l2995
  5534     0591                     u2020:
  5535     0591                     l3001:
  5536                           
  5537                           ;ai.c: 184:     }
  5538     0591  3001               	movlw	1
  5539     0592  00A4               	movwf	??_ai_propagate
  5540     0593  0824               	movf	??_ai_propagate,w
  5541     0594  07BC               	addwf	ai_propagate@j,f
  5542     0595                     l3003:
  5543     0595  3004               	movlw	4
  5544     0596  023C               	subwf	ai_propagate@j,w
  5545     0597  1C03               	skipc
  5546     0598  2D9A               	goto	u2031
  5547     0599  2D9B               	goto	u2030
  5548     059A                     u2031:
  5549     059A  2D58               	goto	l2983
  5550     059B                     u2030:
  5551     059B                     l3005:
  5552                           
  5553                           ;ai.c: 186:     for(uint8_t j = 0; j < 4; j++){
  5554     059B  01B8               	clrf	ai_propagate@j_886
  5555     059C                     l3011:
  5556                           
  5557                           ;ai.c: 187:         DC_DY1[j] = 0;
  5558     059C  0838               	movf	ai_propagate@j_886,w
  5559     059D  3EB0               	addlw	(low (_DC_DY1| 0))& (0+255)
  5560     059E  0086               	movwf	6
  5561     059F  0187               	clrf	7
  5562     05A0  0181               	clrf	1
  5563                           
  5564                           ;ai.c: 188:         DC_DZ1[j] = 0;
  5565     05A1  0838               	movf	ai_propagate@j_886,w
  5566     05A2  3EAC               	addlw	(low (_DC_DZ1| 0))& (0+255)
  5567     05A3  0086               	movwf	6
  5568     05A4  0187               	clrf	7
  5569     05A5  0181               	clrf	1
  5570                           
  5571                           ;ai.c: 189:         DC_DB1[j] = 0;
  5572     05A6  0838               	movf	ai_propagate@j_886,w
  5573     05A7  3EA8               	addlw	(low (_DC_DB1| 0))& (0+255)
  5574     05A8  0086               	movwf	6
  5575     05A9  0187               	clrf	7
  5576     05AA  0181               	clrf	1
  5577     05AB                     l3013:
  5578                           
  5579                           ;ai.c: 190:         for(uint8_t i = 0; i < 8; i++){
  5580     05AB  01B4               	clrf	ai_propagate@i_887
  5581     05AC                     l3019:
  5582                           
  5583                           ;ai.c: 191:             DC_DW1[i][j] = 0;
  5584     05AC  0834               	movf	ai_propagate@i_887,w
  5585     05AD  00A4               	movwf	??_ai_propagate
  5586     05AE  3002               	movlw	2
  5587     05AF                     u2045:
  5588     05AF  35A4               	lslf	??_ai_propagate,f
  5589     05B0  0B89               	decfsz	9,f
  5590     05B1  2DAF               	goto	u2045
  5591     05B2  30A0               	movlw	(low (_DC_DW1| (0+256)))& (0+255)
  5592     05B3  0724               	addwf	??_ai_propagate,w
  5593     05B4  00A5               	movwf	??_ai_propagate+1
  5594     05B5  0838               	movf	ai_propagate@j_886,w
  5595     05B6  0725               	addwf	??_ai_propagate+1,w
  5596     05B7  00A6               	movwf	??_ai_propagate+2
  5597     05B8  0826               	movf	??_ai_propagate+2,w
  5598     05B9  0086               	movwf	6
  5599     05BA  3001               	movlw	1	; select bank3/4
  5600     05BB  0087               	movwf	7
  5601     05BC  0181               	clrf	1
  5602     05BD                     l3021:
  5603                           
  5604                           ;ai.c: 192:         }
  5605     05BD  3001               	movlw	1
  5606     05BE  00A4               	movwf	??_ai_propagate
  5607     05BF  0824               	movf	??_ai_propagate,w
  5608     05C0  07B4               	addwf	ai_propagate@i_887,f
  5609     05C1                     l3023:
  5610     05C1  3008               	movlw	8
  5611     05C2  0234               	subwf	ai_propagate@i_887,w
  5612     05C3  1C03               	skipc
  5613     05C4  2DC6               	goto	u2051
  5614     05C5  2DC7               	goto	u2050
  5615     05C6                     u2051:
  5616     05C6  2DAC               	goto	l3019
  5617     05C7                     u2050:
  5618     05C7                     l3025:
  5619                           
  5620                           ;ai.c: 193:     }
  5621     05C7  3001               	movlw	1
  5622     05C8  00A4               	movwf	??_ai_propagate
  5623     05C9  0824               	movf	??_ai_propagate,w
  5624     05CA  07B8               	addwf	ai_propagate@j_886,f
  5625     05CB                     l3027:
  5626     05CB  3004               	movlw	4
  5627     05CC  0238               	subwf	ai_propagate@j_886,w
  5628     05CD  1C03               	skipc
  5629     05CE  2DD0               	goto	u2061
  5630     05CF  2DD1               	goto	u2060
  5631     05D0                     u2061:
  5632     05D0  2D9C               	goto	l3011
  5633     05D1                     u2060:
  5634     05D1                     l3029:
  5635                           
  5636                           ;ai.c: 195:     int dz;;ai.c: 196:     for(uint8_t j = 0; j < 4; j++){
  5637     05D1  01BE               	clrf	ai_propagate@j_889
  5638     05D2                     l3035:
  5639                           
  5640                           ;ai.c: 197:         DC_DZ2[j] = ((int)DC_DY2[j]*(int)(de_sigmoid(Z2[j])>>1))/127;
  5641     05D2  083E               	movf	ai_propagate@j_889,w
  5642     05D3  3E4A               	addlw	(low (_DC_DZ2| 0))& (0+255)
  5643     05D4  0086               	movwf	6
  5644     05D5  0187               	clrf	7
  5645     05D6  307F               	movlw	127
  5646     05D7  00F8               	movwf	___awdiv@divisor
  5647     05D8  3000               	movlw	0
  5648     05D9  00F9               	movwf	___awdiv@divisor+1
  5649     05DA  083E               	movf	ai_propagate@j_889,w
  5650     05DB  3EC4               	addlw	(low (_DC_DY2| 0))& (0+255)
  5651     05DC  0084               	movwf	4
  5652     05DD  0185               	clrf	5
  5653     05DE  0800               	movf	0,w
  5654     05DF  00F2               	movwf	___wmul@multiplier
  5655     05E0  01F3               	clrf	___wmul@multiplier+1
  5656     05E1  1BF2               	btfsc	___wmul@multiplier,7
  5657     05E2  03F3               	decf	___wmul@multiplier+1,f
  5658     05E3  083E               	movf	ai_propagate@j_889,w
  5659     05E4  3E4E               	addlw	(low (_Z2| 0))& (0+255)
  5660     05E5  0084               	movwf	4
  5661     05E6  0185               	clrf	5
  5662     05E7  0800               	movf	0,w
  5663     05E8  318E  2623  3185   	fcall	_de_sigmoid
  5664     05EB  3689               	lsrf	9,f
  5665     05EC  0020               	movlb	0	; select bank0
  5666     05ED  00A4               	movwf	??_ai_propagate
  5667     05EE  01A5               	clrf	??_ai_propagate+1
  5668     05EF  0824               	movf	??_ai_propagate,w
  5669     05F0  00F4               	movwf	___wmul@multiplicand
  5670     05F1  0825               	movf	??_ai_propagate+1,w
  5671     05F2  00F5               	movwf	___wmul@multiplicand+1
  5672     05F3  318E  2699  3185   	fcall	___wmul
  5673     05F6  0873               	movf	?___wmul+1,w
  5674     05F7  00FB               	movwf	___awdiv@dividend+1
  5675     05F8  0872               	movf	?___wmul,w
  5676     05F9  00FA               	movwf	___awdiv@dividend
  5677     05FA  318F  27A0  3185   	fcall	___awdiv
  5678     05FD  0878               	movf	?___awdiv,w
  5679     05FE  0081               	movwf	1
  5680                           
  5681                           ;ai.c: 198:         DC_DB2[j] = DC_DZ2[j]/64;
  5682     05FF  0020               	movlb	0	; select bank0
  5683     0600  083E               	movf	ai_propagate@j_889,w
  5684     0601  3EB4               	addlw	(low (_DC_DB2| 0))& (0+255)
  5685     0602  0086               	movwf	6
  5686     0603  0187               	clrf	7
  5687     0604  3040               	movlw	64
  5688     0605  00F8               	movwf	___awdiv@divisor
  5689     0606  3000               	movlw	0
  5690     0607  00F9               	movwf	___awdiv@divisor+1
  5691     0608  083E               	movf	ai_propagate@j_889,w
  5692     0609  3E4A               	addlw	(low (_DC_DZ2| 0))& (0+255)
  5693     060A  0084               	movwf	4
  5694     060B  0185               	clrf	5
  5695     060C  0800               	movf	0,w
  5696     060D  00FA               	movwf	___awdiv@dividend
  5697     060E  01FB               	clrf	___awdiv@dividend+1
  5698     060F  1BFA               	btfsc	___awdiv@dividend,7
  5699     0610  03FB               	decf	___awdiv@dividend+1,f
  5700     0611  318F  27A0  3185   	fcall	___awdiv
  5701     0614  0878               	movf	?___awdiv,w
  5702     0615  0081               	movwf	1
  5703     0616                     l3037:
  5704                           
  5705                           ;ai.c: 199:         for(uint8_t i = 0; i < 4; i++){
  5706     0616  0020               	movlb	0	; select bank0
  5707     0617  01B9               	clrf	ai_propagate@i_890
  5708     0618                     l3043:
  5709                           
  5710                           ;ai.c: 200:             DC_DW2[i][j] = (((int)DC_DZ2[j]*(int)Y1[i])/127)/64;
  5711     0618  307F               	movlw	127
  5712     0619  00F8               	movwf	___awdiv@divisor
  5713     061A  3000               	movlw	0
  5714     061B  00F9               	movwf	___awdiv@divisor+1
  5715     061C  083E               	movf	ai_propagate@j_889,w
  5716     061D  3E4A               	addlw	(low (_DC_DZ2| 0))& (0+255)
  5717     061E  0086               	movwf	6
  5718     061F  0187               	clrf	7
  5719     0620  0801               	movf	1,w
  5720     0621  00F2               	movwf	___wmul@multiplier
  5721     0622  01F3               	clrf	___wmul@multiplier+1
  5722     0623  1BF2               	btfsc	___wmul@multiplier,7
  5723     0624  03F3               	decf	___wmul@multiplier+1,f
  5724     0625  0839               	movf	ai_propagate@i_890,w
  5725     0626  3E5A               	addlw	(low (_Y1| 0))& (0+255)
  5726     0627  0086               	movwf	6
  5727     0628  0187               	clrf	7
  5728     0629  0801               	movf	1,w
  5729     062A  00F4               	movwf	___wmul@multiplicand
  5730     062B  01F5               	clrf	___wmul@multiplicand+1
  5731     062C  1BF4               	btfsc	___wmul@multiplicand,7
  5732     062D  03F5               	decf	___wmul@multiplicand+1,f
  5733     062E  318E  2699  3185   	fcall	___wmul
  5734     0631  0873               	movf	?___wmul+1,w
  5735     0632  00FB               	movwf	___awdiv@dividend+1
  5736     0633  0872               	movf	?___wmul,w
  5737     0634  00FA               	movwf	___awdiv@dividend
  5738     0635  318F  27A0  3185   	fcall	___awdiv
  5739     0638  0879               	movf	?___awdiv+1,w
  5740     0639  0020               	movlb	0	; select bank0
  5741     063A  00AF               	movwf	_ai_propagate$1580+1
  5742     063B  0878               	movf	?___awdiv,w
  5743     063C  00AE               	movwf	_ai_propagate$1580
  5744                           
  5745                           ;ai.c: 200:             DC_DW2[i][j] = (((int)DC_DZ2[j]*(int)Y1[i])/127)/64;
  5746     063D  0839               	movf	ai_propagate@i_890,w
  5747     063E  00A4               	movwf	??_ai_propagate
  5748     063F  3002               	movlw	2
  5749     0640                     u2075:
  5750     0640  35A4               	lslf	??_ai_propagate,f
  5751     0641  0B89               	decfsz	9,f
  5752     0642  2E40               	goto	u2075
  5753     0643  3040               	movlw	(low (_DC_DW2| (0+256)))& (0+255)
  5754     0644  0724               	addwf	??_ai_propagate,w
  5755     0645  00A5               	movwf	??_ai_propagate+1
  5756     0646  083E               	movf	ai_propagate@j_889,w
  5757     0647  0725               	addwf	??_ai_propagate+1,w
  5758     0648  00A6               	movwf	??_ai_propagate+2
  5759     0649  0826               	movf	??_ai_propagate+2,w
  5760     064A  0086               	movwf	6
  5761     064B  3001               	movlw	1	; select bank2/3
  5762     064C  0087               	movwf	7
  5763     064D  3040               	movlw	64
  5764     064E  00F8               	movwf	___awdiv@divisor
  5765     064F  3000               	movlw	0
  5766     0650  00F9               	movwf	___awdiv@divisor+1
  5767     0651  082F               	movf	_ai_propagate$1580+1,w
  5768     0652  00FB               	movwf	___awdiv@dividend+1
  5769     0653  082E               	movf	_ai_propagate$1580,w
  5770     0654  00FA               	movwf	___awdiv@dividend
  5771     0655  318F  27A0  3185   	fcall	___awdiv
  5772     0658  0878               	movf	?___awdiv,w
  5773     0659  0081               	movwf	1
  5774                           
  5775                           ;ai.c: 201:             DC_DY1[i] += ((int)DC_DZ2[j]*(int)W2[i][j])/127;
  5776     065A  307F               	movlw	127
  5777     065B  00F8               	movwf	___awdiv@divisor
  5778     065C  3000               	movlw	0
  5779     065D  00F9               	movwf	___awdiv@divisor+1
  5780     065E  0020               	movlb	0	; select bank0
  5781     065F  083E               	movf	ai_propagate@j_889,w
  5782     0660  3E4A               	addlw	(low (_DC_DZ2| 0))& (0+255)
  5783     0661  0086               	movwf	6
  5784     0662  0187               	clrf	7
  5785     0663  0801               	movf	1,w
  5786     0664  00F2               	movwf	___wmul@multiplier
  5787     0665  01F3               	clrf	___wmul@multiplier+1
  5788     0666  1BF2               	btfsc	___wmul@multiplier,7
  5789     0667  03F3               	decf	___wmul@multiplier+1,f
  5790     0668  0839               	movf	ai_propagate@i_890,w
  5791     0669  00A4               	movwf	??_ai_propagate
  5792     066A  3002               	movlw	2
  5793     066B                     u2085:
  5794     066B  35A4               	lslf	??_ai_propagate,f
  5795     066C  0B89               	decfsz	9,f
  5796     066D  2E6B               	goto	u2085
  5797     066E  3060               	movlw	(low (_W2| (0+256)))& (0+255)
  5798     066F  0724               	addwf	??_ai_propagate,w
  5799     0670  00A5               	movwf	??_ai_propagate+1
  5800     0671  083E               	movf	ai_propagate@j_889,w
  5801     0672  0725               	addwf	??_ai_propagate+1,w
  5802     0673  00A6               	movwf	??_ai_propagate+2
  5803     0674  0826               	movf	??_ai_propagate+2,w
  5804     0675  0086               	movwf	6
  5805     0676  3001               	movlw	1	; select bank2/3
  5806     0677  0087               	movwf	7
  5807     0678  0801               	movf	1,w
  5808     0679  00F4               	movwf	___wmul@multiplicand
  5809     067A  01F5               	clrf	___wmul@multiplicand+1
  5810     067B  1BF4               	btfsc	___wmul@multiplicand,7
  5811     067C  03F5               	decf	___wmul@multiplicand+1,f
  5812     067D  318E  2699  3185   	fcall	___wmul
  5813     0680  0873               	movf	?___wmul+1,w
  5814     0681  00FB               	movwf	___awdiv@dividend+1
  5815     0682  0872               	movf	?___wmul,w
  5816     0683  00FA               	movwf	___awdiv@dividend
  5817     0684  318F  27A0  3185   	fcall	___awdiv
  5818     0687  0878               	movf	?___awdiv,w
  5819     0688  0020               	movlb	0	; select bank0
  5820     0689  00A7               	movwf	??_ai_propagate+3
  5821     068A  0839               	movf	ai_propagate@i_890,w
  5822     068B  3EB0               	addlw	(low (_DC_DY1| 0))& (0+255)
  5823     068C  0086               	movwf	6
  5824     068D  0187               	clrf	7
  5825     068E  0827               	movf	??_ai_propagate+3,w
  5826     068F  0781               	addwf	1,f
  5827     0690                     l3045:
  5828                           
  5829                           ;ai.c: 202:         }
  5830     0690  3001               	movlw	1
  5831     0691  00A4               	movwf	??_ai_propagate
  5832     0692  0824               	movf	??_ai_propagate,w
  5833     0693  07B9               	addwf	ai_propagate@i_890,f
  5834     0694                     l3047:
  5835     0694  3004               	movlw	4
  5836     0695  0239               	subwf	ai_propagate@i_890,w
  5837     0696  1C03               	skipc
  5838     0697  2E99               	goto	u2091
  5839     0698  2E9A               	goto	u2090
  5840     0699                     u2091:
  5841     0699  2E18               	goto	l3043
  5842     069A                     u2090:
  5843     069A                     l3049:
  5844                           
  5845                           ;ai.c: 203:     }
  5846     069A  3001               	movlw	1
  5847     069B  00A4               	movwf	??_ai_propagate
  5848     069C  0824               	movf	??_ai_propagate,w
  5849     069D  07BE               	addwf	ai_propagate@j_889,f
  5850     069E                     l3051:
  5851     069E  3004               	movlw	4
  5852     069F  023E               	subwf	ai_propagate@j_889,w
  5853     06A0  1C03               	skipc
  5854     06A1  2EA3               	goto	u2101
  5855     06A2  2EA4               	goto	u2100
  5856     06A3                     u2101:
  5857     06A3  2DD2               	goto	l3035
  5858     06A4                     u2100:
  5859     06A4                     l3053:
  5860                           
  5861                           ;ai.c: 204:     for(uint8_t j = 0; j < 4; j++){
  5862     06A4  01BD               	clrf	ai_propagate@j_891
  5863     06A5                     l3059:
  5864                           
  5865                           ;ai.c: 205:         DC_DZ1[j] = ((int)DC_DY1[j]*(int)(de_sigmoid(Z1[j])>>1))/127;
  5866     06A5  083D               	movf	ai_propagate@j_891,w
  5867     06A6  3EAC               	addlw	(low (_DC_DZ1| 0))& (0+255)
  5868     06A7  0086               	movwf	6
  5869     06A8  0187               	clrf	7
  5870     06A9  307F               	movlw	127
  5871     06AA  00F8               	movwf	___awdiv@divisor
  5872     06AB  3000               	movlw	0
  5873     06AC  00F9               	movwf	___awdiv@divisor+1
  5874     06AD  083D               	movf	ai_propagate@j_891,w
  5875     06AE  3EB0               	addlw	(low (_DC_DY1| 0))& (0+255)
  5876     06AF  0084               	movwf	4
  5877     06B0  0185               	clrf	5
  5878     06B1  0800               	movf	0,w
  5879     06B2  00F2               	movwf	___wmul@multiplier
  5880     06B3  01F3               	clrf	___wmul@multiplier+1
  5881     06B4  1BF2               	btfsc	___wmul@multiplier,7
  5882     06B5  03F3               	decf	___wmul@multiplier+1,f
  5883     06B6  083D               	movf	ai_propagate@j_891,w
  5884     06B7  3E52               	addlw	(low (_Z1| 0))& (0+255)
  5885     06B8  0084               	movwf	4
  5886     06B9  0185               	clrf	5
  5887     06BA  0800               	movf	0,w
  5888     06BB  318E  2623  3185   	fcall	_de_sigmoid
  5889     06BE  3689               	lsrf	9,f
  5890     06BF  0020               	movlb	0	; select bank0
  5891     06C0  00A4               	movwf	??_ai_propagate
  5892     06C1  01A5               	clrf	??_ai_propagate+1
  5893     06C2  0824               	movf	??_ai_propagate,w
  5894     06C3  00F4               	movwf	___wmul@multiplicand
  5895     06C4  0825               	movf	??_ai_propagate+1,w
  5896     06C5  00F5               	movwf	___wmul@multiplicand+1
  5897     06C6  318E  2699  3185   	fcall	___wmul
  5898     06C9  0873               	movf	?___wmul+1,w
  5899     06CA  00FB               	movwf	___awdiv@dividend+1
  5900     06CB  0872               	movf	?___wmul,w
  5901     06CC  00FA               	movwf	___awdiv@dividend
  5902     06CD  318F  27A0  3185   	fcall	___awdiv
  5903     06D0  0878               	movf	?___awdiv,w
  5904     06D1  0081               	movwf	1
  5905                           
  5906                           ;ai.c: 206:         DC_DB1[j] = DC_DZ1[j]/64;
  5907     06D2  0020               	movlb	0	; select bank0
  5908     06D3  083D               	movf	ai_propagate@j_891,w
  5909     06D4  3EA8               	addlw	(low (_DC_DB1| 0))& (0+255)
  5910     06D5  0086               	movwf	6
  5911     06D6  0187               	clrf	7
  5912     06D7  3040               	movlw	64
  5913     06D8  00F8               	movwf	___awdiv@divisor
  5914     06D9  3000               	movlw	0
  5915     06DA  00F9               	movwf	___awdiv@divisor+1
  5916     06DB  083D               	movf	ai_propagate@j_891,w
  5917     06DC  3EAC               	addlw	(low (_DC_DZ1| 0))& (0+255)
  5918     06DD  0084               	movwf	4
  5919     06DE  0185               	clrf	5
  5920     06DF  0800               	movf	0,w
  5921     06E0  00FA               	movwf	___awdiv@dividend
  5922     06E1  01FB               	clrf	___awdiv@dividend+1
  5923     06E2  1BFA               	btfsc	___awdiv@dividend,7
  5924     06E3  03FB               	decf	___awdiv@dividend+1,f
  5925     06E4  318F  27A0  3185   	fcall	___awdiv
  5926     06E7  0878               	movf	?___awdiv,w
  5927     06E8  0081               	movwf	1
  5928     06E9                     l3061:
  5929                           
  5930                           ;ai.c: 207:         for(uint8_t i = 0; i < 8; i++){
  5931     06E9  0020               	movlb	0	; select bank0
  5932     06EA  01B5               	clrf	ai_propagate@i_892
  5933     06EB                     l3063:
  5934     06EB  3008               	movlw	8
  5935     06EC  0235               	subwf	ai_propagate@i_892,w
  5936     06ED  1C03               	skipc
  5937     06EE  2EF0               	goto	u2111
  5938     06EF  2EF1               	goto	u2110
  5939     06F0                     u2111:
  5940     06F0  2EF2               	goto	l3067
  5941     06F1                     u2110:
  5942     06F1  2F3A               	goto	l3073
  5943     06F2                     l3067:
  5944                           
  5945                           ;ai.c: 208:             DC_DW2[i][j] = (((int)DC_DZ2[j]*(int)Y0[i])/127)/64;
  5946     06F2  307F               	movlw	127
  5947     06F3  00F8               	movwf	___awdiv@divisor
  5948     06F4  3000               	movlw	0
  5949     06F5  00F9               	movwf	___awdiv@divisor+1
  5950     06F6  083D               	movf	ai_propagate@j_891,w
  5951     06F7  3E4A               	addlw	(low (_DC_DZ2| 0))& (0+255)
  5952     06F8  0086               	movwf	6
  5953     06F9  0187               	clrf	7
  5954     06FA  0801               	movf	1,w
  5955     06FB  00F2               	movwf	___wmul@multiplier
  5956     06FC  01F3               	clrf	___wmul@multiplier+1
  5957     06FD  1BF2               	btfsc	___wmul@multiplier,7
  5958     06FE  03F3               	decf	___wmul@multiplier+1,f
  5959     06FF  0835               	movf	ai_propagate@i_892,w
  5960     0700  3E64               	addlw	(low (_Y0| 0))& (0+255)
  5961     0701  0086               	movwf	6
  5962     0702  0187               	clrf	7
  5963     0703  0801               	movf	1,w
  5964     0704  00F4               	movwf	___wmul@multiplicand
  5965     0705  01F5               	clrf	___wmul@multiplicand+1
  5966     0706  1BF4               	btfsc	___wmul@multiplicand,7
  5967     0707  03F5               	decf	___wmul@multiplicand+1,f
  5968     0708  318E  2699  3185   	fcall	___wmul
  5969     070B  0873               	movf	?___wmul+1,w
  5970     070C  00FB               	movwf	___awdiv@dividend+1
  5971     070D  0872               	movf	?___wmul,w
  5972     070E  00FA               	movwf	___awdiv@dividend
  5973     070F  318F  27A0  3185   	fcall	___awdiv
  5974     0712  0879               	movf	?___awdiv+1,w
  5975     0713  0020               	movlb	0	; select bank0
  5976     0714  00AF               	movwf	_ai_propagate$1580+1
  5977     0715  0878               	movf	?___awdiv,w
  5978     0716  00AE               	movwf	_ai_propagate$1580
  5979                           
  5980                           ;ai.c: 208:             DC_DW2[i][j] = (((int)DC_DZ2[j]*(int)Y0[i])/127)/64;
  5981     0717  0835               	movf	ai_propagate@i_892,w
  5982     0718  00A4               	movwf	??_ai_propagate
  5983     0719  3002               	movlw	2
  5984     071A                     u2125:
  5985     071A  35A4               	lslf	??_ai_propagate,f
  5986     071B  0B89               	decfsz	9,f
  5987     071C  2F1A               	goto	u2125
  5988     071D  3040               	movlw	(low (_DC_DW2| (0+256)))& (0+255)
  5989     071E  0724               	addwf	??_ai_propagate,w
  5990     071F  00A5               	movwf	??_ai_propagate+1
  5991     0720  083D               	movf	ai_propagate@j_891,w
  5992     0721  0725               	addwf	??_ai_propagate+1,w
  5993     0722  00A6               	movwf	??_ai_propagate+2
  5994     0723  0826               	movf	??_ai_propagate+2,w
  5995     0724  0086               	movwf	6
  5996     0725  3001               	movlw	1	; select bank2/3
  5997     0726  0087               	movwf	7
  5998     0727  3040               	movlw	64
  5999     0728  00F8               	movwf	___awdiv@divisor
  6000     0729  3000               	movlw	0
  6001     072A  00F9               	movwf	___awdiv@divisor+1
  6002     072B  082F               	movf	_ai_propagate$1580+1,w
  6003     072C  00FB               	movwf	___awdiv@dividend+1
  6004     072D  082E               	movf	_ai_propagate$1580,w
  6005     072E  00FA               	movwf	___awdiv@dividend
  6006     072F  318F  27A0  3185   	fcall	___awdiv
  6007     0732  0878               	movf	?___awdiv,w
  6008     0733  0081               	movwf	1
  6009     0734                     l3069:
  6010                           
  6011                           ;ai.c: 209:         }
  6012     0734  3001               	movlw	1
  6013     0735  0020               	movlb	0	; select bank0
  6014     0736  00A4               	movwf	??_ai_propagate
  6015     0737  0824               	movf	??_ai_propagate,w
  6016     0738  07B5               	addwf	ai_propagate@i_892,f
  6017     0739  2EEB               	goto	l3063
  6018     073A                     l3073:
  6019                           
  6020                           ;ai.c: 210:     }
  6021     073A  3001               	movlw	1
  6022     073B  00A4               	movwf	??_ai_propagate
  6023     073C  0824               	movf	??_ai_propagate,w
  6024     073D  07BD               	addwf	ai_propagate@j_891,f
  6025     073E                     l3075:
  6026     073E  3004               	movlw	4
  6027     073F  023D               	subwf	ai_propagate@j_891,w
  6028     0740  1C03               	skipc
  6029     0741  2F43               	goto	u2131
  6030     0742  2F44               	goto	u2130
  6031     0743                     u2131:
  6032     0743  2EA5               	goto	l3059
  6033     0744                     u2130:
  6034     0744                     l3077:
  6035                           
  6036                           ;ai.c: 212:     for(uint8_t j = 0; j < 4; j++){
  6037     0744  01BA               	clrf	ai_propagate@j_893
  6038     0745                     l3079:
  6039     0745  3004               	movlw	4
  6040     0746  023A               	subwf	ai_propagate@j_893,w
  6041     0747  1C03               	skipc
  6042     0748  2F4A               	goto	u2141
  6043     0749  2F4B               	goto	u2140
  6044     074A                     u2141:
  6045     074A  2F4C               	goto	l3083
  6046     074B                     u2140:
  6047     074B  2F8A               	goto	l3101
  6048     074C                     l3083:
  6049                           
  6050                           ;ai.c: 213:         B2[j] -= DC_DB2[j];
  6051     074C  083A               	movf	ai_propagate@j_893,w
  6052     074D  3EB4               	addlw	(low (_DC_DB2| 0))& (0+255)
  6053     074E  0086               	movwf	6
  6054     074F  0187               	clrf	7
  6055     0750  083A               	movf	ai_propagate@j_893,w
  6056     0751  3EC8               	addlw	(low (_B2| 0))& (0+255)
  6057     0752  0084               	movwf	4
  6058     0753  0185               	clrf	5
  6059     0754  0801               	movf	1,w
  6060     0755  0280               	subwf	0,f
  6061     0756                     l3085:
  6062                           
  6063                           ;ai.c: 214:         for(uint8_t i = 0; i < 4; i++){
  6064     0756  01B6               	clrf	ai_propagate@i_894
  6065     0757                     l3087:
  6066     0757  3004               	movlw	4
  6067     0758  0236               	subwf	ai_propagate@i_894,w
  6068     0759  1C03               	skipc
  6069     075A  2F5C               	goto	u2151
  6070     075B  2F5D               	goto	u2150
  6071     075C                     u2151:
  6072     075C  2F5E               	goto	l3091
  6073     075D                     u2150:
  6074     075D  2F85               	goto	l3097
  6075     075E                     l3091:
  6076                           
  6077                           ;ai.c: 215:             W2[i][j] -= DC_DW2[i][j];
  6078     075E  0836               	movf	ai_propagate@i_894,w
  6079     075F  00A4               	movwf	??_ai_propagate
  6080     0760  3002               	movlw	2
  6081     0761                     u2165:
  6082     0761  35A4               	lslf	??_ai_propagate,f
  6083     0762  0B89               	decfsz	9,f
  6084     0763  2F61               	goto	u2165
  6085     0764  3040               	movlw	(low (_DC_DW2| (0+256)))& (0+255)
  6086     0765  0724               	addwf	??_ai_propagate,w
  6087     0766  00A5               	movwf	??_ai_propagate+1
  6088     0767  083A               	movf	ai_propagate@j_893,w
  6089     0768  0725               	addwf	??_ai_propagate+1,w
  6090     0769  00A6               	movwf	??_ai_propagate+2
  6091     076A  0826               	movf	??_ai_propagate+2,w
  6092     076B  0086               	movwf	6
  6093     076C  3001               	movlw	1	; select bank2/3
  6094     076D  0087               	movwf	7
  6095     076E  0836               	movf	ai_propagate@i_894,w
  6096     076F  00A7               	movwf	??_ai_propagate+3
  6097     0770  3002               	movlw	2
  6098     0771                     u2175:
  6099     0771  35A7               	lslf	??_ai_propagate+3,f
  6100     0772  0B89               	decfsz	9,f
  6101     0773  2F71               	goto	u2175
  6102     0774  3060               	movlw	(low (_W2| (0+256)))& (0+255)
  6103     0775  0727               	addwf	??_ai_propagate+3,w
  6104     0776  00A8               	movwf	??_ai_propagate+4
  6105     0777  083A               	movf	ai_propagate@j_893,w
  6106     0778  0728               	addwf	??_ai_propagate+4,w
  6107     0779  00A9               	movwf	??_ai_propagate+5
  6108     077A  0829               	movf	??_ai_propagate+5,w
  6109     077B  0084               	movwf	4
  6110     077C  3001               	movlw	1	; select bank2/3
  6111     077D  0085               	movwf	5
  6112     077E  0801               	movf	1,w
  6113     077F  0280               	subwf	0,f
  6114     0780                     l3093:
  6115                           
  6116                           ;ai.c: 216:         }
  6117     0780  3001               	movlw	1
  6118     0781  00A4               	movwf	??_ai_propagate
  6119     0782  0824               	movf	??_ai_propagate,w
  6120     0783  07B6               	addwf	ai_propagate@i_894,f
  6121     0784  2F57               	goto	l3087
  6122     0785                     l3097:
  6123                           
  6124                           ;ai.c: 217:     }
  6125     0785  3001               	movlw	1
  6126     0786  00A4               	movwf	??_ai_propagate
  6127     0787  0824               	movf	??_ai_propagate,w
  6128     0788  07BA               	addwf	ai_propagate@j_893,f
  6129     0789  2F45               	goto	l3079
  6130     078A                     l3101:
  6131                           
  6132                           ;ai.c: 218:     for(uint8_t j = 0; j < 4; j++){
  6133     078A  01BB               	clrf	ai_propagate@j_895
  6134     078B                     l3103:
  6135     078B  3004               	movlw	4
  6136     078C  023B               	subwf	ai_propagate@j_895,w
  6137     078D  1C03               	skipc
  6138     078E  2F90               	goto	u2181
  6139     078F  2F91               	goto	u2180
  6140     0790                     u2181:
  6141     0790  2F92               	goto	l3107
  6142     0791                     u2180:
  6143     0791  2FD0               	goto	l622
  6144     0792                     l3107:
  6145                           
  6146                           ;ai.c: 219:         B1[j] -= DC_DB1[j];
  6147     0792  083B               	movf	ai_propagate@j_895,w
  6148     0793  3EA8               	addlw	(low (_DC_DB1| 0))& (0+255)
  6149     0794  0086               	movwf	6
  6150     0795  0187               	clrf	7
  6151     0796  083B               	movf	ai_propagate@j_895,w
  6152     0797  3ECC               	addlw	(low (_B1| 0))& (0+255)
  6153     0798  0084               	movwf	4
  6154     0799  0185               	clrf	5
  6155     079A  0801               	movf	1,w
  6156     079B  0280               	subwf	0,f
  6157     079C                     l3109:
  6158                           
  6159                           ;ai.c: 220:         for(uint8_t i = 0; i < 8; i++){
  6160     079C  01B7               	clrf	ai_propagate@i_896
  6161     079D                     l3111:
  6162     079D  3008               	movlw	8
  6163     079E  0237               	subwf	ai_propagate@i_896,w
  6164     079F  1C03               	skipc
  6165     07A0  2FA2               	goto	u2191
  6166     07A1  2FA3               	goto	u2190
  6167     07A2                     u2191:
  6168     07A2  2FA4               	goto	l3115
  6169     07A3                     u2190:
  6170     07A3  2FCB               	goto	l3121
  6171     07A4                     l3115:
  6172                           
  6173                           ;ai.c: 221:             W1[i][j] -= DC_DW1[i][j];
  6174     07A4  0837               	movf	ai_propagate@i_896,w
  6175     07A5  00A4               	movwf	??_ai_propagate
  6176     07A6  3002               	movlw	2
  6177     07A7                     u2205:
  6178     07A7  35A4               	lslf	??_ai_propagate,f
  6179     07A8  0B89               	decfsz	9,f
  6180     07A9  2FA7               	goto	u2205
  6181     07AA  30A0               	movlw	(low (_DC_DW1| (0+256)))& (0+255)
  6182     07AB  0724               	addwf	??_ai_propagate,w
  6183     07AC  00A5               	movwf	??_ai_propagate+1
  6184     07AD  083B               	movf	ai_propagate@j_895,w
  6185     07AE  0725               	addwf	??_ai_propagate+1,w
  6186     07AF  00A6               	movwf	??_ai_propagate+2
  6187     07B0  0826               	movf	??_ai_propagate+2,w
  6188     07B1  0086               	movwf	6
  6189     07B2  3001               	movlw	1	; select bank3/4
  6190     07B3  0087               	movwf	7
  6191     07B4  0837               	movf	ai_propagate@i_896,w
  6192     07B5  00A7               	movwf	??_ai_propagate+3
  6193     07B6  3002               	movlw	2
  6194     07B7                     u2215:
  6195     07B7  35A7               	lslf	??_ai_propagate+3,f
  6196     07B8  0B89               	decfsz	9,f
  6197     07B9  2FB7               	goto	u2215
  6198     07BA  3020               	movlw	(low (_W1| (0+256)))& (0+255)
  6199     07BB  0727               	addwf	??_ai_propagate+3,w
  6200     07BC  00A8               	movwf	??_ai_propagate+4
  6201     07BD  083B               	movf	ai_propagate@j_895,w
  6202     07BE  0728               	addwf	??_ai_propagate+4,w
  6203     07BF  00A9               	movwf	??_ai_propagate+5
  6204     07C0  0829               	movf	??_ai_propagate+5,w
  6205     07C1  0084               	movwf	4
  6206     07C2  3001               	movlw	1	; select bank2/3
  6207     07C3  0085               	movwf	5
  6208     07C4  0801               	movf	1,w
  6209     07C5  0280               	subwf	0,f
  6210     07C6                     l3117:
  6211                           
  6212                           ;ai.c: 222:         }
  6213     07C6  3001               	movlw	1
  6214     07C7  00A4               	movwf	??_ai_propagate
  6215     07C8  0824               	movf	??_ai_propagate,w
  6216     07C9  07B7               	addwf	ai_propagate@i_896,f
  6217     07CA  2F9D               	goto	l3111
  6218     07CB                     l3121:
  6219                           
  6220                           ;ai.c: 223:     }
  6221     07CB  3001               	movlw	1
  6222     07CC  00A4               	movwf	??_ai_propagate
  6223     07CD  0824               	movf	??_ai_propagate,w
  6224     07CE  07BB               	addwf	ai_propagate@j_895,f
  6225     07CF  2F8B               	goto	l3103
  6226     07D0                     l622:
  6227     07D0  0008               	return
  6228     07D1                     __end_of_ai_propagate:
  6229                           
  6230                           	psect	text17
  6231     0E23                     __ptext17:	
  6232 ;; *************** function _de_sigmoid *****************
  6233 ;; Defined at:
  6234 ;;		line 12 in file "sigmoid.c"
  6235 ;; Parameters:    Size  Location     Type
  6236 ;;  z               1    wreg     char 
  6237 ;; Auto vars:     Size  Location     Type
  6238 ;;  z               1    1[COMMON] char 
  6239 ;; Return value:  Size  Location     Type
  6240 ;;                  1    wreg      unsigned char 
  6241 ;; Registers used:
  6242 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  6243 ;; Tracked objects:
  6244 ;;		On entry : 0/0
  6245 ;;		On exit  : 0/0
  6246 ;;		Unchanged: 0/0
  6247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6248 ;;      Params:         0       0       0       0       0       0
  6249 ;;      Locals:         1       0       0       0       0       0
  6250 ;;      Temps:          1       0       0       0       0       0
  6251 ;;      Totals:         2       0       0       0       0       0
  6252 ;;Total ram usage:        2 bytes
  6253 ;; Hardware stack levels used: 1
  6254 ;; This function calls:
  6255 ;;		Nothing
  6256 ;; This function is called by:
  6257 ;;		_ai_propagate
  6258 ;; This function uses a non-reentrant model
  6259 ;;
  6260                           
  6261     0E23                     _de_sigmoid:	
  6262                           ;psect for function _de_sigmoid
  6263                           
  6264                           
  6265                           ;incstack = 0
  6266                           ; Regs used in _de_sigmoid: [wreg-fsr0h+status,2+status,0+pclath]
  6267                           ;de_sigmoid@z stored from wreg
  6268     0E23  00F1               	movwf	de_sigmoid@z
  6269     0E24                     l2521:
  6270                           
  6271                           ;sigmoid.c: 13:     return de_sigmoidValues[((uint8_t)z)>>4];
  6272     0E24  0871               	movf	de_sigmoid@z,w
  6273     0E25  00F0               	movwf	??_de_sigmoid
  6274     0E26  3004               	movlw	4
  6275     0E27                     u1395:
  6276     0E27  36F0               	lsrf	??_de_sigmoid,f
  6277     0E28  0B89               	decfsz	9,f
  6278     0E29  2E27               	goto	u1395
  6279     0E2A  0870               	movf	??_de_sigmoid,w
  6280     0E2B  3E00               	addlw	low (_de_sigmoidValues| (0+32768))
  6281     0E2C  0084               	movwf	4
  6282     0E2D  3088               	movlw	high (_de_sigmoidValues| (0+32768))
  6283     0E2E  1803               	skipnc
  6284     0E2F  3E01               	addlw	1
  6285     0E30  0085               	movwf	5
  6286     0E31  0800               	movf	0,w	;code access
  6287     0E32                     l667:
  6288     0E32  0008               	return
  6289     0E33                     __end_of_de_sigmoid:
  6290                           
  6291                           	psect	text18
  6292     0E99                     __ptext18:	
  6293 ;; *************** function ___wmul *****************
  6294 ;; Defined at:
  6295 ;;		line 15 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  6296 ;; Parameters:    Size  Location     Type
  6297 ;;  multiplier      2    2[COMMON] unsigned int 
  6298 ;;  multiplicand    2    4[COMMON] unsigned int 
  6299 ;; Auto vars:     Size  Location     Type
  6300 ;;  product         2    6[COMMON] unsigned int 
  6301 ;; Return value:  Size  Location     Type
  6302 ;;                  2    2[COMMON] unsigned int 
  6303 ;; Registers used:
  6304 ;;		wreg, status,2, status,0
  6305 ;; Tracked objects:
  6306 ;;		On entry : 0/0
  6307 ;;		On exit  : 0/0
  6308 ;;		Unchanged: 0/0
  6309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6310 ;;      Params:         4       0       0       0       0       0
  6311 ;;      Locals:         2       0       0       0       0       0
  6312 ;;      Temps:          0       0       0       0       0       0
  6313 ;;      Totals:         6       0       0       0       0       0
  6314 ;;Total ram usage:        6 bytes
  6315 ;; Hardware stack levels used: 1
  6316 ;; This function calls:
  6317 ;;		Nothing
  6318 ;; This function is called by:
  6319 ;;		_ai_run
  6320 ;;		_ai_propagate
  6321 ;; This function uses a non-reentrant model
  6322 ;;
  6323                           
  6324     0E99                     ___wmul:	
  6325                           ;psect for function ___wmul
  6326                           
  6327     0E99                     l2525:	
  6328                           ;incstack = 0
  6329                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6330                           
  6331     0E99  01F6               	clrf	___wmul@product
  6332     0E9A  01F7               	clrf	___wmul@product+1
  6333     0E9B                     l2527:
  6334     0E9B  1C72               	btfss	___wmul@multiplier,0
  6335     0E9C  2E9E               	goto	u1401
  6336     0E9D  2E9F               	goto	u1400
  6337     0E9E                     u1401:
  6338     0E9E  2EA3               	goto	l817
  6339     0E9F                     u1400:
  6340     0E9F                     l2529:
  6341     0E9F  0874               	movf	___wmul@multiplicand,w
  6342     0EA0  07F6               	addwf	___wmul@product,f
  6343     0EA1  0875               	movf	___wmul@multiplicand+1,w
  6344     0EA2  3DF7               	addwfc	___wmul@product+1,f
  6345     0EA3                     l817:
  6346     0EA3  3001               	movlw	1
  6347     0EA4                     u1415:
  6348     0EA4  35F4               	lslf	___wmul@multiplicand,f
  6349     0EA5  0DF5               	rlf	___wmul@multiplicand+1,f
  6350     0EA6  0B89               	decfsz	9,f
  6351     0EA7  2EA4               	goto	u1415
  6352     0EA8                     l2531:
  6353     0EA8  3001               	movlw	1
  6354     0EA9                     u1425:
  6355     0EA9  36F3               	lsrf	___wmul@multiplier+1,f
  6356     0EAA  0CF2               	rrf	___wmul@multiplier,f
  6357     0EAB  0B89               	decfsz	9,f
  6358     0EAC  2EA9               	goto	u1425
  6359     0EAD                     l2533:
  6360     0EAD  0872               	movf	___wmul@multiplier,w
  6361     0EAE  0473               	iorwf	___wmul@multiplier+1,w
  6362     0EAF  1D03               	btfss	3,2
  6363     0EB0  2EB2               	goto	u1431
  6364     0EB1  2EB3               	goto	u1430
  6365     0EB2                     u1431:
  6366     0EB2  2E9B               	goto	l2527
  6367     0EB3                     u1430:
  6368     0EB3                     l2535:
  6369     0EB3  0877               	movf	___wmul@product+1,w
  6370     0EB4  00F3               	movwf	?___wmul+1
  6371     0EB5  0876               	movf	___wmul@product,w
  6372     0EB6  00F2               	movwf	?___wmul
  6373     0EB7                     l819:
  6374     0EB7  0008               	return
  6375     0EB8                     __end_of___wmul:
  6376                           
  6377                           	psect	text19
  6378     0FA0                     __ptext19:	
  6379 ;; *************** function ___awdiv *****************
  6380 ;; Defined at:
  6381 ;;		line 5 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
  6382 ;; Parameters:    Size  Location     Type
  6383 ;;  divisor         2    8[COMMON] int 
  6384 ;;  dividend        2   10[COMMON] int 
  6385 ;; Auto vars:     Size  Location     Type
  6386 ;;  quotient        2    2[BANK0 ] int 
  6387 ;;  sign            1    1[BANK0 ] unsigned char 
  6388 ;;  counter         1    0[BANK0 ] unsigned char 
  6389 ;; Return value:  Size  Location     Type
  6390 ;;                  2    8[COMMON] int 
  6391 ;; Registers used:
  6392 ;;		wreg, status,2, status,0
  6393 ;; Tracked objects:
  6394 ;;		On entry : 0/0
  6395 ;;		On exit  : 0/0
  6396 ;;		Unchanged: 0/0
  6397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6398 ;;      Params:         4       0       0       0       0       0
  6399 ;;      Locals:         0       4       0       0       0       0
  6400 ;;      Temps:          1       0       0       0       0       0
  6401 ;;      Totals:         5       4       0       0       0       0
  6402 ;;Total ram usage:        9 bytes
  6403 ;; Hardware stack levels used: 1
  6404 ;; This function calls:
  6405 ;;		Nothing
  6406 ;; This function is called by:
  6407 ;;		_main
  6408 ;;		_snake_move
  6409 ;;		_snake_getSurroundings
  6410 ;;		_ai_run
  6411 ;;		_ai_propagate
  6412 ;; This function uses a non-reentrant model
  6413 ;;
  6414                           
  6415     0FA0                     ___awdiv:	
  6416                           ;psect for function ___awdiv
  6417                           
  6418     0FA0                     l2539:	
  6419                           ;incstack = 0
  6420                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  6421                           
  6422     0FA0  0020               	movlb	0	; select bank0
  6423     0FA1  01A1               	clrf	___awdiv@sign
  6424     0FA2                     l2541:
  6425     0FA2  1FF9               	btfss	___awdiv@divisor+1,7
  6426     0FA3  2FA5               	goto	u1441
  6427     0FA4  2FA6               	goto	u1440
  6428     0FA5                     u1441:
  6429     0FA5  2FAD               	goto	l2547
  6430     0FA6                     u1440:
  6431     0FA6                     l2543:
  6432     0FA6  09F8               	comf	___awdiv@divisor,f
  6433     0FA7  09F9               	comf	___awdiv@divisor+1,f
  6434     0FA8  0AF8               	incf	___awdiv@divisor,f
  6435     0FA9  1903               	skipnz
  6436     0FAA  0AF9               	incf	___awdiv@divisor+1,f
  6437     0FAB                     l2545:
  6438     0FAB  01A1               	clrf	___awdiv@sign
  6439     0FAC  0AA1               	incf	___awdiv@sign,f
  6440     0FAD                     l2547:
  6441     0FAD  1FFB               	btfss	___awdiv@dividend+1,7
  6442     0FAE  2FB0               	goto	u1451
  6443     0FAF  2FB1               	goto	u1450
  6444     0FB0                     u1451:
  6445     0FB0  2FBA               	goto	l2553
  6446     0FB1                     u1450:
  6447     0FB1                     l2549:
  6448     0FB1  09FA               	comf	___awdiv@dividend,f
  6449     0FB2  09FB               	comf	___awdiv@dividend+1,f
  6450     0FB3  0AFA               	incf	___awdiv@dividend,f
  6451     0FB4  1903               	skipnz
  6452     0FB5  0AFB               	incf	___awdiv@dividend+1,f
  6453     0FB6                     l2551:
  6454     0FB6  3001               	movlw	1
  6455     0FB7  00FC               	movwf	??___awdiv
  6456     0FB8  087C               	movf	??___awdiv,w
  6457     0FB9  06A1               	xorwf	___awdiv@sign,f
  6458     0FBA                     l2553:
  6459     0FBA  01A2               	clrf	___awdiv@quotient
  6460     0FBB  01A3               	clrf	___awdiv@quotient+1
  6461     0FBC                     l2555:
  6462     0FBC  0878               	movf	___awdiv@divisor,w
  6463     0FBD  0479               	iorwf	___awdiv@divisor+1,w
  6464     0FBE  1903               	btfsc	3,2
  6465     0FBF  2FC1               	goto	u1461
  6466     0FC0  2FC2               	goto	u1460
  6467     0FC1                     u1461:
  6468     0FC1  2FF1               	goto	l2575
  6469     0FC2                     u1460:
  6470     0FC2                     l2557:
  6471     0FC2  01A0               	clrf	___awdiv@counter
  6472     0FC3  0AA0               	incf	___awdiv@counter,f
  6473     0FC4  2FCE               	goto	l2563
  6474     0FC5                     l2559:
  6475     0FC5  3001               	movlw	1
  6476     0FC6                     u1475:
  6477     0FC6  35F8               	lslf	___awdiv@divisor,f
  6478     0FC7  0DF9               	rlf	___awdiv@divisor+1,f
  6479     0FC8  0B89               	decfsz	9,f
  6480     0FC9  2FC6               	goto	u1475
  6481     0FCA                     l2561:
  6482     0FCA  3001               	movlw	1
  6483     0FCB  00FC               	movwf	??___awdiv
  6484     0FCC  087C               	movf	??___awdiv,w
  6485     0FCD  07A0               	addwf	___awdiv@counter,f
  6486     0FCE                     l2563:
  6487     0FCE  1FF9               	btfss	___awdiv@divisor+1,7
  6488     0FCF  2FD1               	goto	u1481
  6489     0FD0  2FD2               	goto	u1480
  6490     0FD1                     u1481:
  6491     0FD1  2FC5               	goto	l2559
  6492     0FD2                     u1480:
  6493     0FD2                     l2565:
  6494     0FD2  3001               	movlw	1
  6495     0FD3                     u1495:
  6496     0FD3  35A2               	lslf	___awdiv@quotient,f
  6497     0FD4  0DA3               	rlf	___awdiv@quotient+1,f
  6498     0FD5  0B89               	decfsz	9,f
  6499     0FD6  2FD3               	goto	u1495
  6500     0FD7  0879               	movf	___awdiv@divisor+1,w
  6501     0FD8  027B               	subwf	___awdiv@dividend+1,w
  6502     0FD9  1D03               	skipz
  6503     0FDA  2FDD               	goto	u1505
  6504     0FDB  0878               	movf	___awdiv@divisor,w
  6505     0FDC  027A               	subwf	___awdiv@dividend,w
  6506     0FDD                     u1505:
  6507     0FDD  1C03               	skipc
  6508     0FDE  2FE0               	goto	u1501
  6509     0FDF  2FE1               	goto	u1500
  6510     0FE0                     u1501:
  6511     0FE0  2FE6               	goto	l2571
  6512     0FE1                     u1500:
  6513     0FE1                     l2567:
  6514     0FE1  0878               	movf	___awdiv@divisor,w
  6515     0FE2  02FA               	subwf	___awdiv@dividend,f
  6516     0FE3  0879               	movf	___awdiv@divisor+1,w
  6517     0FE4  3BFB               	subwfb	___awdiv@dividend+1,f
  6518     0FE5                     l2569:
  6519     0FE5  1422               	bsf	___awdiv@quotient,0
  6520     0FE6                     l2571:
  6521     0FE6  3001               	movlw	1
  6522     0FE7                     u1515:
  6523     0FE7  36F9               	lsrf	___awdiv@divisor+1,f
  6524     0FE8  0CF8               	rrf	___awdiv@divisor,f
  6525     0FE9  0B89               	decfsz	9,f
  6526     0FEA  2FE7               	goto	u1515
  6527     0FEB                     l2573:
  6528     0FEB  3001               	movlw	1
  6529     0FEC  02A0               	subwf	___awdiv@counter,f
  6530     0FED  1D03               	btfss	3,2
  6531     0FEE  2FF0               	goto	u1521
  6532     0FEF  2FF1               	goto	u1520
  6533     0FF0                     u1521:
  6534     0FF0  2FD2               	goto	l2565
  6535     0FF1                     u1520:
  6536     0FF1                     l2575:
  6537     0FF1  0821               	movf	___awdiv@sign,w
  6538     0FF2  1903               	btfsc	3,2
  6539     0FF3  2FF5               	goto	u1531
  6540     0FF4  2FF6               	goto	u1530
  6541     0FF5                     u1531:
  6542     0FF5  2FFB               	goto	l2579
  6543     0FF6                     u1530:
  6544     0FF6                     l2577:
  6545     0FF6  09A2               	comf	___awdiv@quotient,f
  6546     0FF7  09A3               	comf	___awdiv@quotient+1,f
  6547     0FF8  0AA2               	incf	___awdiv@quotient,f
  6548     0FF9  1903               	skipnz
  6549     0FFA  0AA3               	incf	___awdiv@quotient+1,f
  6550     0FFB                     l2579:
  6551     0FFB  0823               	movf	___awdiv@quotient+1,w
  6552     0FFC  00F9               	movwf	?___awdiv+1
  6553     0FFD  0822               	movf	___awdiv@quotient,w
  6554     0FFE  00F8               	movwf	?___awdiv
  6555     0FFF                     l970:
  6556     0FFF  0008               	return
  6557     1000                     __end_of___awdiv:
  6558                           
  6559                           	psect	text20
  6560     0050                     __ptext20:	
  6561 ;; *************** function _ai_initiate *****************
  6562 ;; Defined at:
  6563 ;;		line 94 in file "ai.c"
  6564 ;; Parameters:    Size  Location     Type
  6565 ;;		None
  6566 ;; Auto vars:     Size  Location     Type
  6567 ;;  i               1    8[BANK0 ] unsigned char 
  6568 ;;  i               1    7[BANK0 ] unsigned char 
  6569 ;;  j               1   10[BANK0 ] unsigned char 
  6570 ;;  j               1    9[BANK0 ] unsigned char 
  6571 ;; Return value:  Size  Location     Type
  6572 ;;                  1    wreg      void 
  6573 ;; Registers used:
  6574 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6575 ;; Tracked objects:
  6576 ;;		On entry : 0/0
  6577 ;;		On exit  : 0/0
  6578 ;;		Unchanged: 0/0
  6579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6580 ;;      Params:         0       0       0       0       0       0
  6581 ;;      Locals:         0       4       0       0       0       0
  6582 ;;      Temps:          0       3       0       0       0       0
  6583 ;;      Totals:         0       7       0       0       0       0
  6584 ;;Total ram usage:        7 bytes
  6585 ;; Hardware stack levels used: 1
  6586 ;; Hardware stack levels required when called: 2
  6587 ;; This function calls:
  6588 ;;		_rand
  6589 ;; This function is called by:
  6590 ;;		_main
  6591 ;; This function uses a non-reentrant model
  6592 ;;
  6593                           
  6594     0050                     _ai_initiate:	
  6595                           ;psect for function _ai_initiate
  6596                           
  6597     0050                     l2587:	
  6598                           ;incstack = 0
  6599                           ; Regs used in _ai_initiate: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6600                           
  6601                           
  6602                           ;ai.c: 98:     for(uint8_t j = 0; j < 4; j++){
  6603     0050  0020               	movlb	0	; select bank0
  6604     0051  01A9               	clrf	ai_initiate@j
  6605     0052                     l2593:
  6606                           
  6607                           ;ai.c: 99:         B1[j] = rand();
  6608     0052  0829               	movf	ai_initiate@j,w
  6609     0053  3ECC               	addlw	(low (_B1| 0))& (0+255)
  6610     0054  0086               	movwf	6
  6611     0055  0187               	clrf	7
  6612     0056  318F  276B  3180   	fcall	_rand
  6613     0059  087C               	movf	?_rand,w
  6614     005A  0081               	movwf	1
  6615     005B                     l2595:
  6616                           
  6617                           ;ai.c: 100:         for(uint8_t i = 0; i < 8; i++){
  6618     005B  0020               	movlb	0	; select bank0
  6619     005C  01A7               	clrf	ai_initiate@i
  6620     005D                     l2601:
  6621                           
  6622                           ;ai.c: 101:             W1[i][j] = rand();
  6623     005D  0827               	movf	ai_initiate@i,w
  6624     005E  00A4               	movwf	??_ai_initiate
  6625     005F  3002               	movlw	2
  6626     0060                     u1545:
  6627     0060  35A4               	lslf	??_ai_initiate,f
  6628     0061  0B89               	decfsz	9,f
  6629     0062  2860               	goto	u1545
  6630     0063  3020               	movlw	(low (_W1| (0+256)))& (0+255)
  6631     0064  0724               	addwf	??_ai_initiate,w
  6632     0065  00A5               	movwf	??_ai_initiate+1
  6633     0066  0829               	movf	ai_initiate@j,w
  6634     0067  0725               	addwf	??_ai_initiate+1,w
  6635     0068  00A6               	movwf	??_ai_initiate+2
  6636     0069  0826               	movf	??_ai_initiate+2,w
  6637     006A  0086               	movwf	6
  6638     006B  3001               	movlw	1	; select bank2/3
  6639     006C  0087               	movwf	7
  6640     006D  318F  276B  3180   	fcall	_rand
  6641     0070  087C               	movf	?_rand,w
  6642     0071  0081               	movwf	1
  6643     0072                     l2603:
  6644                           
  6645                           ;ai.c: 102:         }
  6646     0072  3001               	movlw	1
  6647     0073  0020               	movlb	0	; select bank0
  6648     0074  00A4               	movwf	??_ai_initiate
  6649     0075  0824               	movf	??_ai_initiate,w
  6650     0076  07A7               	addwf	ai_initiate@i,f
  6651     0077                     l2605:
  6652     0077  3008               	movlw	8
  6653     0078  0227               	subwf	ai_initiate@i,w
  6654     0079  1C03               	skipc
  6655     007A  287C               	goto	u1551
  6656     007B  287D               	goto	u1550
  6657     007C                     u1551:
  6658     007C  285D               	goto	l2601
  6659     007D                     u1550:
  6660     007D                     l2607:
  6661                           
  6662                           ;ai.c: 103:     }
  6663     007D  3001               	movlw	1
  6664     007E  00A4               	movwf	??_ai_initiate
  6665     007F  0824               	movf	??_ai_initiate,w
  6666     0080  07A9               	addwf	ai_initiate@j,f
  6667     0081                     l2609:
  6668     0081  3004               	movlw	4
  6669     0082  0229               	subwf	ai_initiate@j,w
  6670     0083  1C03               	skipc
  6671     0084  2886               	goto	u1561
  6672     0085  2887               	goto	u1560
  6673     0086                     u1561:
  6674     0086  2852               	goto	l2593
  6675     0087                     u1560:
  6676     0087                     l2611:
  6677                           
  6678                           ;ai.c: 104:     for(uint8_t j = 0; j < 4; j++){
  6679     0087  01AA               	clrf	ai_initiate@j_868
  6680     0088                     l2617:
  6681                           
  6682                           ;ai.c: 105:         B2[j] = rand();
  6683     0088  082A               	movf	ai_initiate@j_868,w
  6684     0089  3EC8               	addlw	(low (_B2| 0))& (0+255)
  6685     008A  0086               	movwf	6
  6686     008B  0187               	clrf	7
  6687     008C  318F  276B  3180   	fcall	_rand
  6688     008F  087C               	movf	?_rand,w
  6689     0090  0081               	movwf	1
  6690     0091                     l2619:
  6691                           
  6692                           ;ai.c: 106:         for(uint8_t i = 0; i < 4; i++){
  6693     0091  0020               	movlb	0	; select bank0
  6694     0092  01A8               	clrf	ai_initiate@i_869
  6695     0093                     l2625:
  6696                           
  6697                           ;ai.c: 107:             W2[i][j] = rand();
  6698     0093  0828               	movf	ai_initiate@i_869,w
  6699     0094  00A4               	movwf	??_ai_initiate
  6700     0095  3002               	movlw	2
  6701     0096                     u1575:
  6702     0096  35A4               	lslf	??_ai_initiate,f
  6703     0097  0B89               	decfsz	9,f
  6704     0098  2896               	goto	u1575
  6705     0099  3060               	movlw	(low (_W2| (0+256)))& (0+255)
  6706     009A  0724               	addwf	??_ai_initiate,w
  6707     009B  00A5               	movwf	??_ai_initiate+1
  6708     009C  082A               	movf	ai_initiate@j_868,w
  6709     009D  0725               	addwf	??_ai_initiate+1,w
  6710     009E  00A6               	movwf	??_ai_initiate+2
  6711     009F  0826               	movf	??_ai_initiate+2,w
  6712     00A0  0086               	movwf	6
  6713     00A1  3001               	movlw	1	; select bank2/3
  6714     00A2  0087               	movwf	7
  6715     00A3  318F  276B  3180   	fcall	_rand
  6716     00A6  087C               	movf	?_rand,w
  6717     00A7  0081               	movwf	1
  6718     00A8                     l2627:
  6719                           
  6720                           ;ai.c: 108:         }
  6721     00A8  3001               	movlw	1
  6722     00A9  0020               	movlb	0	; select bank0
  6723     00AA  00A4               	movwf	??_ai_initiate
  6724     00AB  0824               	movf	??_ai_initiate,w
  6725     00AC  07A8               	addwf	ai_initiate@i_869,f
  6726     00AD                     l2629:
  6727     00AD  3004               	movlw	4
  6728     00AE  0228               	subwf	ai_initiate@i_869,w
  6729     00AF  1C03               	skipc
  6730     00B0  28B2               	goto	u1581
  6731     00B1  28B3               	goto	u1580
  6732     00B2                     u1581:
  6733     00B2  2893               	goto	l2625
  6734     00B3                     u1580:
  6735     00B3                     l2631:
  6736                           
  6737                           ;ai.c: 109:     }
  6738     00B3  3001               	movlw	1
  6739     00B4  00A4               	movwf	??_ai_initiate
  6740     00B5  0824               	movf	??_ai_initiate,w
  6741     00B6  07AA               	addwf	ai_initiate@j_868,f
  6742     00B7                     l2633:
  6743     00B7  3004               	movlw	4
  6744     00B8  022A               	subwf	ai_initiate@j_868,w
  6745     00B9  1C03               	skipc
  6746     00BA  28BC               	goto	u1591
  6747     00BB  28BD               	goto	u1590
  6748     00BC                     u1591:
  6749     00BC  2888               	goto	l2617
  6750     00BD                     u1590:
  6751     00BD                     l598:
  6752     00BD  0008               	return
  6753     00BE                     __end_of_ai_initiate:
  6754                           
  6755                           	psect	text21
  6756     0F6B                     __ptext21:	
  6757 ;; *************** function _rand *****************
  6758 ;; Defined at:
  6759 ;;		line 11 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\common\rand.c"
  6760 ;; Parameters:    Size  Location     Type
  6761 ;;		None
  6762 ;; Auto vars:     Size  Location     Type
  6763 ;;		None
  6764 ;; Return value:  Size  Location     Type
  6765 ;;                  2   12[COMMON] int 
  6766 ;; Registers used:
  6767 ;;		wreg, status,2, status,0, pclath, cstack
  6768 ;; Tracked objects:
  6769 ;;		On entry : 0/0
  6770 ;;		On exit  : 0/0
  6771 ;;		Unchanged: 0/0
  6772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6773 ;;      Params:         2       0       0       0       0       0
  6774 ;;      Locals:         0       0       0       0       0       0
  6775 ;;      Temps:          0       4       0       0       0       0
  6776 ;;      Totals:         2       4       0       0       0       0
  6777 ;;Total ram usage:        6 bytes
  6778 ;; Hardware stack levels used: 1
  6779 ;; Hardware stack levels required when called: 1
  6780 ;; This function calls:
  6781 ;;		___lmul
  6782 ;; This function is called by:
  6783 ;;		_snake_initiate
  6784 ;;		_snake_move
  6785 ;;		_ai_initiate
  6786 ;; This function uses a non-reentrant model
  6787 ;;
  6788                           
  6789     0F6B                     _rand:	
  6790                           ;psect for function _rand
  6791                           
  6792     0F6B                     l2443:	
  6793                           ;incstack = 0
  6794                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
  6795                           
  6796     0F6B  0020               	movlb	0	; select bank0
  6797     0F6C  086F               	movf	_seed+3,w
  6798     0F6D  00F3               	movwf	___lmul@multiplier+3
  6799     0F6E  086E               	movf	_seed+2,w
  6800     0F6F  00F2               	movwf	___lmul@multiplier+2
  6801     0F70  086D               	movf	_seed+1,w
  6802     0F71  00F1               	movwf	___lmul@multiplier+1
  6803     0F72  086C               	movf	_seed,w
  6804     0F73  00F0               	movwf	___lmul@multiplier
  6805     0F74  304C               	movlw	76
  6806     0F75  00F7               	movwf	___lmul@multiplicand+3
  6807     0F76  3095               	movlw	149
  6808     0F77  00F6               	movwf	___lmul@multiplicand+2
  6809     0F78  307F               	movlw	127
  6810     0F79  00F5               	movwf	___lmul@multiplicand+1
  6811     0F7A  302D               	movlw	45
  6812     0F7B  00F4               	movwf	___lmul@multiplicand
  6813     0F7C  318F  2738  318F   	fcall	___lmul
  6814     0F7F  3001               	movlw	1
  6815     0F80  0770               	addwf	?___lmul,w
  6816     0F81  0020               	movlb	0	; select bank0
  6817     0F82  00EC               	movwf	_seed
  6818     0F83  3000               	movlw	0
  6819     0F84  3D71               	addwfc	?___lmul+1,w
  6820     0F85  00ED               	movwf	_seed+1
  6821     0F86  3000               	movlw	0
  6822     0F87  3D72               	addwfc	?___lmul+2,w
  6823     0F88  00EE               	movwf	_seed+2
  6824     0F89  3000               	movlw	0
  6825     0F8A  3D73               	addwfc	?___lmul+3,w
  6826     0F8B  00EF               	movwf	_seed+3
  6827     0F8C                     l2445:
  6828     0F8C  086C               	movf	_seed,w
  6829     0F8D  00A0               	movwf	??_rand
  6830     0F8E  086D               	movf	_seed+1,w
  6831     0F8F  00A1               	movwf	??_rand+1
  6832     0F90  086E               	movf	_seed+2,w
  6833     0F91  00A2               	movwf	??_rand+2
  6834     0F92  086F               	movf	_seed+3,w
  6835     0F93  00A3               	movwf	??_rand+3
  6836     0F94  3011               	movlw	17
  6837     0F95                     u1345:
  6838     0F95  36A3               	lsrf	??_rand+3,f
  6839     0F96  0CA2               	rrf	??_rand+2,f
  6840     0F97  0CA1               	rrf	??_rand+1,f
  6841     0F98  0CA0               	rrf	??_rand,f
  6842     0F99                     u1340:
  6843     0F99  0B89               	decfsz	9,f
  6844     0F9A  2F95               	goto	u1345
  6845     0F9B  0821               	movf	??_rand+1,w
  6846     0F9C  00FD               	movwf	?_rand+1
  6847     0F9D  0820               	movf	??_rand,w
  6848     0F9E  00FC               	movwf	?_rand
  6849     0F9F                     l1281:
  6850     0F9F  0008               	return
  6851     0FA0                     __end_of_rand:
  6852                           
  6853                           	psect	text22
  6854     0F38                     __ptext22:	
  6855 ;; *************** function ___lmul *****************
  6856 ;; Defined at:
  6857 ;;		line 15 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\common\Umul32.c"
  6858 ;; Parameters:    Size  Location     Type
  6859 ;;  multiplier      4    0[COMMON] unsigned long 
  6860 ;;  multiplicand    4    4[COMMON] unsigned long 
  6861 ;; Auto vars:     Size  Location     Type
  6862 ;;  product         4    8[COMMON] unsigned long 
  6863 ;; Return value:  Size  Location     Type
  6864 ;;                  4    0[COMMON] unsigned long 
  6865 ;; Registers used:
  6866 ;;		wreg, status,2, status,0
  6867 ;; Tracked objects:
  6868 ;;		On entry : 0/0
  6869 ;;		On exit  : 0/0
  6870 ;;		Unchanged: 0/0
  6871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6872 ;;      Params:         8       0       0       0       0       0
  6873 ;;      Locals:         4       0       0       0       0       0
  6874 ;;      Temps:          0       0       0       0       0       0
  6875 ;;      Totals:        12       0       0       0       0       0
  6876 ;;Total ram usage:       12 bytes
  6877 ;; Hardware stack levels used: 1
  6878 ;; This function calls:
  6879 ;;		Nothing
  6880 ;; This function is called by:
  6881 ;;		_rand
  6882 ;; This function uses a non-reentrant model
  6883 ;;
  6884                           
  6885     0F38                     ___lmul:	
  6886                           ;psect for function ___lmul
  6887                           
  6888     0F38                     l2419:	
  6889                           ;incstack = 0
  6890                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  6891                           
  6892     0F38  3000               	movlw	0
  6893     0F39  00FB               	movwf	___lmul@product+3
  6894     0F3A  3000               	movlw	0
  6895     0F3B  00FA               	movwf	___lmul@product+2
  6896     0F3C  3000               	movlw	0
  6897     0F3D  00F9               	movwf	___lmul@product+1
  6898     0F3E  3000               	movlw	0
  6899     0F3F  00F8               	movwf	___lmul@product
  6900     0F40                     l2421:
  6901     0F40  1C70               	btfss	___lmul@multiplier,0
  6902     0F41  2F43               	goto	u1301
  6903     0F42  2F44               	goto	u1300
  6904     0F43                     u1301:
  6905     0F43  2F4C               	goto	l2425
  6906     0F44                     u1300:
  6907     0F44                     l2423:
  6908     0F44  0874               	movf	___lmul@multiplicand,w
  6909     0F45  07F8               	addwf	___lmul@product,f
  6910     0F46  0875               	movf	___lmul@multiplicand+1,w
  6911     0F47  3DF9               	addwfc	___lmul@product+1,f
  6912     0F48  0876               	movf	___lmul@multiplicand+2,w
  6913     0F49  3DFA               	addwfc	___lmul@product+2,f
  6914     0F4A  0877               	movf	___lmul@multiplicand+3,w
  6915     0F4B  3DFB               	addwfc	___lmul@product+3,f
  6916     0F4C                     l2425:
  6917     0F4C  3001               	movlw	1
  6918     0F4D                     u1315:
  6919     0F4D  35F4               	lslf	___lmul@multiplicand,f
  6920     0F4E  0DF5               	rlf	___lmul@multiplicand+1,f
  6921     0F4F  0DF6               	rlf	___lmul@multiplicand+2,f
  6922     0F50  0DF7               	rlf	___lmul@multiplicand+3,f
  6923     0F51  0B89               	decfsz	9,f
  6924     0F52  2F4D               	goto	u1315
  6925     0F53                     l2427:
  6926     0F53  3001               	movlw	1
  6927     0F54                     u1325:
  6928     0F54  36F3               	lsrf	___lmul@multiplier+3,f
  6929     0F55  0CF2               	rrf	___lmul@multiplier+2,f
  6930     0F56  0CF1               	rrf	___lmul@multiplier+1,f
  6931     0F57  0CF0               	rrf	___lmul@multiplier,f
  6932     0F58  0B89               	decfsz	9,f
  6933     0F59  2F54               	goto	u1325
  6934     0F5A  0873               	movf	___lmul@multiplier+3,w
  6935     0F5B  0472               	iorwf	___lmul@multiplier+2,w
  6936     0F5C  0471               	iorwf	___lmul@multiplier+1,w
  6937     0F5D  0470               	iorwf	___lmul@multiplier,w
  6938     0F5E  1D03               	skipz
  6939     0F5F  2F61               	goto	u1331
  6940     0F60  2F62               	goto	u1330
  6941     0F61                     u1331:
  6942     0F61  2F40               	goto	l2421
  6943     0F62                     u1330:
  6944     0F62                     l2429:
  6945     0F62  087B               	movf	___lmul@product+3,w
  6946     0F63  00F3               	movwf	?___lmul+3
  6947     0F64  087A               	movf	___lmul@product+2,w
  6948     0F65  00F2               	movwf	?___lmul+2
  6949     0F66  0879               	movf	___lmul@product+1,w
  6950     0F67  00F1               	movwf	?___lmul+1
  6951     0F68  0878               	movf	___lmul@product,w
  6952     0F69  00F0               	movwf	?___lmul
  6953     0F6A                     l831:
  6954     0F6A  0008               	return
  6955     0F6B                     __end_of___lmul:
  6956                           
  6957                           	psect	text23
  6958     0DC0                     __ptext23:	
  6959 ;; *************** function _ai_getInputField *****************
  6960 ;; Defined at:
  6961 ;;		line 113 in file "ai.c"
  6962 ;; Parameters:    Size  Location     Type
  6963 ;;		None
  6964 ;; Auto vars:     Size  Location     Type
  6965 ;;		None
  6966 ;; Return value:  Size  Location     Type
  6967 ;;                  1    wreg      PTR unsigned char 
  6968 ;; Registers used:
  6969 ;;		wreg
  6970 ;; Tracked objects:
  6971 ;;		On entry : 0/0
  6972 ;;		On exit  : 0/0
  6973 ;;		Unchanged: 0/0
  6974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6975 ;;      Params:         0       0       0       0       0       0
  6976 ;;      Locals:         0       0       0       0       0       0
  6977 ;;      Temps:          0       0       0       0       0       0
  6978 ;;      Totals:         0       0       0       0       0       0
  6979 ;;Total ram usage:        0 bytes
  6980 ;; Hardware stack levels used: 1
  6981 ;; This function calls:
  6982 ;;		Nothing
  6983 ;; This function is called by:
  6984 ;;		_main
  6985 ;; This function uses a non-reentrant model
  6986 ;;
  6987                           
  6988     0DC0                     _ai_getInputField:	
  6989                           ;psect for function _ai_getInputField
  6990                           
  6991     0DC0                     l2687:	
  6992                           ;incstack = 0
  6993                           ; Regs used in _ai_getInputField: [wreg]
  6994                           
  6995                           
  6996                           ;ai.c: 114:     return Y0;
  6997     0DC0  3064               	movlw	(low (_Y0| 0))& (0+255)
  6998     0DC1                     l601:
  6999     0DC1  0008               	return
  7000     0DC2                     __end_of_ai_getInputField:
  7001                           
  7002                           	psect	text24
  7003     0E13                     __ptext24:	
  7004 ;; *************** function _SYSTEM_Initialize *****************
  7005 ;; Defined at:
  7006 ;;		line 50 in file "mcc_generated_files/mcc.c"
  7007 ;; Parameters:    Size  Location     Type
  7008 ;;		None
  7009 ;; Auto vars:     Size  Location     Type
  7010 ;;		None
  7011 ;; Return value:  Size  Location     Type
  7012 ;;                  1    wreg      void 
  7013 ;; Registers used:
  7014 ;;		wreg, status,2, status,0, pclath, cstack
  7015 ;; Tracked objects:
  7016 ;;		On entry : 0/0
  7017 ;;		On exit  : 0/0
  7018 ;;		Unchanged: 0/0
  7019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7020 ;;      Params:         0       0       0       0       0       0
  7021 ;;      Locals:         0       0       0       0       0       0
  7022 ;;      Temps:          0       0       0       0       0       0
  7023 ;;      Totals:         0       0       0       0       0       0
  7024 ;;Total ram usage:        0 bytes
  7025 ;; Hardware stack levels used: 1
  7026 ;; Hardware stack levels required when called: 2
  7027 ;; This function calls:
  7028 ;;		_EUSART_Initialize
  7029 ;;		_OSCILLATOR_Initialize
  7030 ;;		_PIN_MANAGER_Initialize
  7031 ;;		_SPI1_Initialize
  7032 ;;		_WDT_Initialize
  7033 ;; This function is called by:
  7034 ;;		_main
  7035 ;; This function uses a non-reentrant model
  7036 ;;
  7037                           
  7038     0E13                     _SYSTEM_Initialize:	
  7039                           ;psect for function _SYSTEM_Initialize
  7040                           
  7041     0E13                     l2583:	
  7042                           ;incstack = 0
  7043                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7044                           
  7045                           
  7046                           ;mcc_generated_files/mcc.c: 53:     SPI1_Initialize();
  7047     0E13  318E  2607  318E   	fcall	_SPI1_Initialize
  7048                           
  7049                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  7050     0E16  318E  2667  318E   	fcall	_PIN_MANAGER_Initialize
  7051                           
  7052                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  7053     0E19  318D  25EE  318E   	fcall	_OSCILLATOR_Initialize
  7054                           
  7055                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  7056     0E1C  318D  25C7  318E   	fcall	_WDT_Initialize
  7057                           
  7058                           ;mcc_generated_files/mcc.c: 57:     EUSART_Initialize();
  7059     0E1F  318E  26B8  318E   	fcall	_EUSART_Initialize
  7060     0E22                     l248:
  7061     0E22  0008               	return
  7062     0E23                     __end_of_SYSTEM_Initialize:
  7063                           
  7064                           	psect	text25
  7065     0DC7                     __ptext25:	
  7066 ;; *************** function _WDT_Initialize *****************
  7067 ;; Defined at:
  7068 ;;		line 70 in file "mcc_generated_files/mcc.c"
  7069 ;; Parameters:    Size  Location     Type
  7070 ;;		None
  7071 ;; Auto vars:     Size  Location     Type
  7072 ;;		None
  7073 ;; Return value:  Size  Location     Type
  7074 ;;                  1    wreg      void 
  7075 ;; Registers used:
  7076 ;;		wreg
  7077 ;; Tracked objects:
  7078 ;;		On entry : 0/0
  7079 ;;		On exit  : 0/0
  7080 ;;		Unchanged: 0/0
  7081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7082 ;;      Params:         0       0       0       0       0       0
  7083 ;;      Locals:         0       0       0       0       0       0
  7084 ;;      Temps:          0       0       0       0       0       0
  7085 ;;      Totals:         0       0       0       0       0       0
  7086 ;;Total ram usage:        0 bytes
  7087 ;; Hardware stack levels used: 1
  7088 ;; This function calls:
  7089 ;;		Nothing
  7090 ;; This function is called by:
  7091 ;;		_SYSTEM_Initialize
  7092 ;; This function uses a non-reentrant model
  7093 ;;
  7094                           
  7095     0DC7                     _WDT_Initialize:	
  7096                           ;psect for function _WDT_Initialize
  7097                           
  7098     0DC7                     l2489:	
  7099                           ;incstack = 0
  7100                           ; Regs used in _WDT_Initialize: [wreg]
  7101                           
  7102                           
  7103                           ;mcc_generated_files/mcc.c: 73:     WDTCON = 0x16;
  7104     0DC7  3016               	movlw	22
  7105     0DC8  0021               	movlb	1	; select bank1
  7106     0DC9  0097               	movwf	23	;volatile
  7107     0DCA                     l254:
  7108     0DCA  0008               	return
  7109     0DCB                     __end_of_WDT_Initialize:
  7110                           
  7111                           	psect	text26
  7112     0E07                     __ptext26:	
  7113 ;; *************** function _SPI1_Initialize *****************
  7114 ;; Defined at:
  7115 ;;		line 62 in file "mcc_generated_files/spi1.c"
  7116 ;; Parameters:    Size  Location     Type
  7117 ;;		None
  7118 ;; Auto vars:     Size  Location     Type
  7119 ;;		None
  7120 ;; Return value:  Size  Location     Type
  7121 ;;                  1    wreg      void 
  7122 ;; Registers used:
  7123 ;;		wreg
  7124 ;; Tracked objects:
  7125 ;;		On entry : 0/0
  7126 ;;		On exit  : 0/0
  7127 ;;		Unchanged: 0/0
  7128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7129 ;;      Params:         0       0       0       0       0       0
  7130 ;;      Locals:         0       0       0       0       0       0
  7131 ;;      Temps:          0       0       0       0       0       0
  7132 ;;      Totals:         0       0       0       0       0       0
  7133 ;;Total ram usage:        0 bytes
  7134 ;; Hardware stack levels used: 1
  7135 ;; This function calls:
  7136 ;;		Nothing
  7137 ;; This function is called by:
  7138 ;;		_SYSTEM_Initialize
  7139 ;; This function uses a non-reentrant model
  7140 ;;
  7141                           
  7142     0E07                     _SPI1_Initialize:	
  7143                           ;psect for function _SPI1_Initialize
  7144                           
  7145     0E07                     l2477:	
  7146                           ;incstack = 0
  7147                           ; Regs used in _SPI1_Initialize: [wreg]
  7148                           
  7149                           
  7150                           ;mcc_generated_files/spi1.c: 65:     SSP1STAT = 0x40;
  7151     0E07  3040               	movlw	64
  7152     0E08  0024               	movlb	4	; select bank4
  7153     0E09  0094               	movwf	20	;volatile
  7154                           
  7155                           ;mcc_generated_files/spi1.c: 66:     SSP1CON1 = 0x02;
  7156     0E0A  3002               	movlw	2
  7157     0E0B  0095               	movwf	21	;volatile
  7158                           
  7159                           ;mcc_generated_files/spi1.c: 67:     SSP1ADD = 0x01;
  7160     0E0C  3001               	movlw	1
  7161     0E0D  0092               	movwf	18	;volatile
  7162     0E0E                     l2479:
  7163                           
  7164                           ;mcc_generated_files/spi1.c: 68:     TRISBbits.TRISB4 = 0;
  7165     0E0E  0021               	movlb	1	; select bank1
  7166     0E0F  120D               	bcf	13,4	;volatile
  7167     0E10                     l2481:
  7168                           
  7169                           ;mcc_generated_files/spi1.c: 69:     SSP1CON1bits.SSPEN = 0;
  7170     0E10  0024               	movlb	4	; select bank4
  7171     0E11  1295               	bcf	21,5	;volatile
  7172     0E12                     l187:
  7173     0E12  0008               	return
  7174     0E13                     __end_of_SPI1_Initialize:
  7175                           
  7176                           	psect	text27
  7177     0E67                     __ptext27:	
  7178 ;; *************** function _PIN_MANAGER_Initialize *****************
  7179 ;; Defined at:
  7180 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  7181 ;; Parameters:    Size  Location     Type
  7182 ;;		None
  7183 ;; Auto vars:     Size  Location     Type
  7184 ;;		None
  7185 ;; Return value:  Size  Location     Type
  7186 ;;                  1    wreg      void 
  7187 ;; Registers used:
  7188 ;;		wreg, status,2
  7189 ;; Tracked objects:
  7190 ;;		On entry : 0/0
  7191 ;;		On exit  : 0/0
  7192 ;;		Unchanged: 0/0
  7193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7194 ;;      Params:         0       0       0       0       0       0
  7195 ;;      Locals:         0       0       0       0       0       0
  7196 ;;      Temps:          0       0       0       0       0       0
  7197 ;;      Totals:         0       0       0       0       0       0
  7198 ;;Total ram usage:        0 bytes
  7199 ;; Hardware stack levels used: 1
  7200 ;; This function calls:
  7201 ;;		Nothing
  7202 ;; This function is called by:
  7203 ;;		_SYSTEM_Initialize
  7204 ;; This function uses a non-reentrant model
  7205 ;;
  7206                           
  7207     0E67                     _PIN_MANAGER_Initialize:	
  7208                           ;psect for function _PIN_MANAGER_Initialize
  7209                           
  7210     0E67                     l2461:	
  7211                           ;incstack = 0
  7212                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  7213                           
  7214                           
  7215                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  7216     0E67  0022               	movlb	2	; select bank2
  7217     0E68  018C               	clrf	12	;volatile
  7218                           
  7219                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  7220     0E69  018D               	clrf	13	;volatile
  7221     0E6A                     l2463:
  7222                           
  7223                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x37;
  7224     0E6A  3037               	movlw	55
  7225     0E6B  0021               	movlb	1	; select bank1
  7226     0E6C  008C               	movwf	12	;volatile
  7227     0E6D                     l2465:
  7228                           
  7229                           ;mcc_generated_files/pin_manager.c: 67:     TRISB = 0xEF;
  7230     0E6D  30EF               	movlw	239
  7231     0E6E  008D               	movwf	13	;volatile
  7232     0E6F                     l2467:
  7233                           
  7234                           ;mcc_generated_files/pin_manager.c: 72:     ANSELB = 0xC8;
  7235     0E6F  30C8               	movlw	200
  7236     0E70  0023               	movlb	3	; select bank3
  7237     0E71  008D               	movwf	13	;volatile
  7238     0E72                     l2469:
  7239                           
  7240                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x1F;
  7241     0E72  301F               	movlw	31
  7242     0E73  008C               	movwf	12	;volatile
  7243                           
  7244                           ;mcc_generated_files/pin_manager.c: 78:     WPUB = 0x00;
  7245     0E74  0024               	movlb	4	; select bank4
  7246     0E75  018D               	clrf	13	;volatile
  7247                           
  7248                           ;mcc_generated_files/pin_manager.c: 79:     WPUA = 0x00;
  7249     0E76  018C               	clrf	12	;volatile
  7250     0E77                     l2471:
  7251                           
  7252                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  7253     0E77  0021               	movlb	1	; select bank1
  7254     0E78  1795               	bsf	21,7	;volatile
  7255     0E79                     l2473:
  7256                           
  7257                           ;mcc_generated_files/pin_manager.c: 86:     APFCON0 = 0xC0;
  7258     0E79  30C0               	movlw	192
  7259     0E7A  0022               	movlb	2	; select bank2
  7260     0E7B  009D               	movwf	29	;volatile
  7261     0E7C                     l2475:
  7262                           
  7263                           ;mcc_generated_files/pin_manager.c: 87:     APFCON1 = 0x01;
  7264     0E7C  3001               	movlw	1
  7265     0E7D  009E               	movwf	30	;volatile
  7266     0E7E                     l163:
  7267     0E7E  0008               	return
  7268     0E7F                     __end_of_PIN_MANAGER_Initialize:
  7269                           
  7270                           	psect	text28
  7271     0DEE                     __ptext28:	
  7272 ;; *************** function _OSCILLATOR_Initialize *****************
  7273 ;; Defined at:
  7274 ;;		line 60 in file "mcc_generated_files/mcc.c"
  7275 ;; Parameters:    Size  Location     Type
  7276 ;;		None
  7277 ;; Auto vars:     Size  Location     Type
  7278 ;;		None
  7279 ;; Return value:  Size  Location     Type
  7280 ;;                  1    wreg      void 
  7281 ;; Registers used:
  7282 ;;		wreg, status,2
  7283 ;; Tracked objects:
  7284 ;;		On entry : 0/0
  7285 ;;		On exit  : 0/0
  7286 ;;		Unchanged: 0/0
  7287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7288 ;;      Params:         0       0       0       0       0       0
  7289 ;;      Locals:         0       0       0       0       0       0
  7290 ;;      Temps:          0       0       0       0       0       0
  7291 ;;      Totals:         0       0       0       0       0       0
  7292 ;;Total ram usage:        0 bytes
  7293 ;; Hardware stack levels used: 1
  7294 ;; This function calls:
  7295 ;;		Nothing
  7296 ;; This function is called by:
  7297 ;;		_SYSTEM_Initialize
  7298 ;; This function uses a non-reentrant model
  7299 ;;
  7300                           
  7301     0DEE                     _OSCILLATOR_Initialize:	
  7302                           ;psect for function _OSCILLATOR_Initialize
  7303                           
  7304     0DEE                     l2483:	
  7305                           ;incstack = 0
  7306                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  7307                           
  7308                           
  7309                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x70;
  7310     0DEE  3070               	movlw	112
  7311     0DEF  0021               	movlb	1	; select bank1
  7312     0DF0  0099               	movwf	25	;volatile
  7313     0DF1                     l2485:
  7314                           
  7315                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x00;
  7316     0DF1  0198               	clrf	24	;volatile
  7317     0DF2                     l2487:
  7318                           
  7319                           ;mcc_generated_files/mcc.c: 67:     BORCON = 0x00;
  7320     0DF2  0022               	movlb	2	; select bank2
  7321     0DF3  0196               	clrf	22	;volatile
  7322     0DF4                     l251:
  7323     0DF4  0008               	return
  7324     0DF5                     __end_of_OSCILLATOR_Initialize:
  7325                           
  7326                           	psect	text29
  7327     0EB8                     __ptext29:	
  7328 ;; *************** function _EUSART_Initialize *****************
  7329 ;; Defined at:
  7330 ;;		line 66 in file "mcc_generated_files/eusart.c"
  7331 ;; Parameters:    Size  Location     Type
  7332 ;;		None
  7333 ;; Auto vars:     Size  Location     Type
  7334 ;;		None
  7335 ;; Return value:  Size  Location     Type
  7336 ;;                  1    wreg      void 
  7337 ;; Registers used:
  7338 ;;		wreg, status,2, status,0, pclath, cstack
  7339 ;; Tracked objects:
  7340 ;;		On entry : 0/0
  7341 ;;		On exit  : 0/0
  7342 ;;		Unchanged: 0/0
  7343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7344 ;;      Params:         0       0       0       0       0       0
  7345 ;;      Locals:         0       0       0       0       0       0
  7346 ;;      Temps:          0       0       0       0       0       0
  7347 ;;      Totals:         0       0       0       0       0       0
  7348 ;;Total ram usage:        0 bytes
  7349 ;; Hardware stack levels used: 1
  7350 ;; Hardware stack levels required when called: 1
  7351 ;; This function calls:
  7352 ;;		_EUSART_SetErrorHandler
  7353 ;;		_EUSART_SetFramingErrorHandler
  7354 ;;		_EUSART_SetOverrunErrorHandler
  7355 ;; This function is called by:
  7356 ;;		_SYSTEM_Initialize
  7357 ;; This function uses a non-reentrant model
  7358 ;;
  7359                           
  7360     0EB8                     _EUSART_Initialize:	
  7361                           ;psect for function _EUSART_Initialize
  7362                           
  7363     0EB8                     l2449:	
  7364                           ;incstack = 0
  7365                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7366                           
  7367                           
  7368                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  7369     0EB8  3008               	movlw	8
  7370     0EB9  0023               	movlb	3	; select bank3
  7371     0EBA  009F               	movwf	31	;volatile
  7372                           
  7373                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
  7374     0EBB  3090               	movlw	144
  7375     0EBC  009D               	movwf	29	;volatile
  7376                           
  7377                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  7378     0EBD  3024               	movlw	36
  7379     0EBE  009E               	movwf	30	;volatile
  7380                           
  7381                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0x67;
  7382     0EBF  3067               	movlw	103
  7383     0EC0  009B               	movwf	27	;volatile
  7384     0EC1                     l2451:
  7385                           
  7386                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x00;
  7387     0EC1  019C               	clrf	28	;volatile
  7388     0EC2                     l2453:
  7389                           
  7390                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  7391     0EC2  3000               	movlw	0
  7392     0EC3  00F0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  7393     0EC4  3000               	movlw	0
  7394     0EC5  00F1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  7395     0EC6  318D  25D6  318E   	fcall	_EUSART_SetFramingErrorHandler
  7396     0EC9                     l2455:
  7397                           
  7398                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  7399     0EC9  3000               	movlw	0
  7400     0ECA  00F0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  7401     0ECB  3000               	movlw	0
  7402     0ECC  00F1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  7403     0ECD  318D  25DC  318E   	fcall	_EUSART_SetOverrunErrorHandler
  7404     0ED0                     l2457:
  7405                           
  7406                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  7407     0ED0  3000               	movlw	0
  7408     0ED1  00F0               	movwf	EUSART_SetErrorHandler@interruptHandler
  7409     0ED2  3000               	movlw	0
  7410     0ED3  00F1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  7411     0ED4  318D  25D0  318E   	fcall	_EUSART_SetErrorHandler
  7412     0ED7                     l2459:
  7413                           
  7414                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  7415     0ED7  0020               	movlb	0	; select bank0
  7416     0ED8  01E3               	clrf	_eusartRxLastError	;volatile
  7417     0ED9                     l93:
  7418     0ED9  0008               	return
  7419     0EDA                     __end_of_EUSART_Initialize:
  7420                           
  7421                           	psect	text30
  7422     0DDC                     __ptext30:	
  7423 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  7424 ;; Defined at:
  7425 ;;		line 161 in file "mcc_generated_files/eusart.c"
  7426 ;; Parameters:    Size  Location     Type
  7427 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  7428 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  7429 ;; Auto vars:     Size  Location     Type
  7430 ;;		None
  7431 ;; Return value:  Size  Location     Type
  7432 ;;                  1    wreg      void 
  7433 ;; Registers used:
  7434 ;;		wreg
  7435 ;; Tracked objects:
  7436 ;;		On entry : 0/0
  7437 ;;		On exit  : 0/0
  7438 ;;		Unchanged: 0/0
  7439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7440 ;;      Params:         2       0       0       0       0       0
  7441 ;;      Locals:         0       0       0       0       0       0
  7442 ;;      Temps:          0       0       0       0       0       0
  7443 ;;      Totals:         2       0       0       0       0       0
  7444 ;;Total ram usage:        2 bytes
  7445 ;; Hardware stack levels used: 1
  7446 ;; This function calls:
  7447 ;;		Nothing
  7448 ;; This function is called by:
  7449 ;;		_EUSART_Initialize
  7450 ;; This function uses a non-reentrant model
  7451 ;;
  7452                           
  7453     0DDC                     _EUSART_SetOverrunErrorHandler:	
  7454                           ;psect for function _EUSART_SetOverrunErrorHandler
  7455                           
  7456     0DDC                     l2435:	
  7457                           ;incstack = 0
  7458                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  7459                           
  7460                           
  7461                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  7462     0DDC  0871               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  7463     0DDD  0021               	movlb	1	; select bank1
  7464     0DDE  00EB               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  7465     0DDF  0870               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  7466     0DE0  00EA               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  7467     0DE1                     l135:
  7468     0DE1  0008               	return
  7469     0DE2                     __end_of_EUSART_SetOverrunErrorHandler:
  7470                           
  7471                           	psect	text31
  7472     0DD6                     __ptext31:	
  7473 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  7474 ;; Defined at:
  7475 ;;		line 157 in file "mcc_generated_files/eusart.c"
  7476 ;; Parameters:    Size  Location     Type
  7477 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  7478 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  7479 ;; Auto vars:     Size  Location     Type
  7480 ;;		None
  7481 ;; Return value:  Size  Location     Type
  7482 ;;                  1    wreg      void 
  7483 ;; Registers used:
  7484 ;;		wreg
  7485 ;; Tracked objects:
  7486 ;;		On entry : 0/0
  7487 ;;		On exit  : 0/0
  7488 ;;		Unchanged: 0/0
  7489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7490 ;;      Params:         2       0       0       0       0       0
  7491 ;;      Locals:         0       0       0       0       0       0
  7492 ;;      Temps:          0       0       0       0       0       0
  7493 ;;      Totals:         2       0       0       0       0       0
  7494 ;;Total ram usage:        2 bytes
  7495 ;; Hardware stack levels used: 1
  7496 ;; This function calls:
  7497 ;;		Nothing
  7498 ;; This function is called by:
  7499 ;;		_EUSART_Initialize
  7500 ;; This function uses a non-reentrant model
  7501 ;;
  7502                           
  7503     0DD6                     _EUSART_SetFramingErrorHandler:	
  7504                           ;psect for function _EUSART_SetFramingErrorHandler
  7505                           
  7506     0DD6                     l2433:	
  7507                           ;incstack = 0
  7508                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  7509                           
  7510                           
  7511                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  7512     0DD6  0871               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  7513     0DD7  0021               	movlb	1	; select bank1
  7514     0DD8  00ED               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
  7515     0DD9  0870               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  7516     0DDA  00EC               	movwf	_EUSART_FramingErrorHandler^(0+128)
  7517     0DDB                     l132:
  7518     0DDB  0008               	return
  7519     0DDC                     __end_of_EUSART_SetFramingErrorHandler:
  7520                           
  7521                           	psect	text32
  7522     0DD0                     __ptext32:	
  7523 ;; *************** function _EUSART_SetErrorHandler *****************
  7524 ;; Defined at:
  7525 ;;		line 165 in file "mcc_generated_files/eusart.c"
  7526 ;; Parameters:    Size  Location     Type
  7527 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  7528 ;;		 -> EUSART_DefaultErrorHandler(1), 
  7529 ;; Auto vars:     Size  Location     Type
  7530 ;;		None
  7531 ;; Return value:  Size  Location     Type
  7532 ;;                  1    wreg      void 
  7533 ;; Registers used:
  7534 ;;		wreg
  7535 ;; Tracked objects:
  7536 ;;		On entry : 0/0
  7537 ;;		On exit  : 0/0
  7538 ;;		Unchanged: 0/0
  7539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7540 ;;      Params:         2       0       0       0       0       0
  7541 ;;      Locals:         0       0       0       0       0       0
  7542 ;;      Temps:          0       0       0       0       0       0
  7543 ;;      Totals:         2       0       0       0       0       0
  7544 ;;Total ram usage:        2 bytes
  7545 ;; Hardware stack levels used: 1
  7546 ;; This function calls:
  7547 ;;		Nothing
  7548 ;; This function is called by:
  7549 ;;		_EUSART_Initialize
  7550 ;; This function uses a non-reentrant model
  7551 ;;
  7552                           
  7553     0DD0                     _EUSART_SetErrorHandler:	
  7554                           ;psect for function _EUSART_SetErrorHandler
  7555                           
  7556     0DD0                     l2437:	
  7557                           ;incstack = 0
  7558                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  7559                           
  7560                           
  7561                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  7562     0DD0  0871               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  7563     0DD1  0021               	movlb	1	; select bank1
  7564     0DD2  00E9               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
  7565     0DD3  0870               	movf	EUSART_SetErrorHandler@interruptHandler,w
  7566     0DD4  00E8               	movwf	_EUSART_ErrorHandler^(0+128)
  7567     0DD5                     l138:
  7568     0DD5  0008               	return
  7569     0DD6                     __end_of_EUSART_SetErrorHandler:
  7570     007E                     btemp	set	126	;btemp
  7571     007E                     wtemp0	set	126
  7572                           
  7573                           	psect	idloc
  7574                           
  7575                           ;Config register IDLOC0 @ 0x8000
  7576                           ;	unspecified, using default values
  7577     8000                     	org	32768
  7578     8000  3FFF               	dw	16383
  7579                           
  7580                           ;Config register IDLOC1 @ 0x8001
  7581                           ;	unspecified, using default values
  7582     8001                     	org	32769
  7583     8001  3FFF               	dw	16383
  7584                           
  7585                           ;Config register IDLOC2 @ 0x8002
  7586                           ;	unspecified, using default values
  7587     8002                     	org	32770
  7588     8002  3FFF               	dw	16383
  7589                           
  7590                           ;Config register IDLOC3 @ 0x8003
  7591                           ;	unspecified, using default values
  7592     8003                     	org	32771
  7593     8003  3FFF               	dw	16383
  7594                           
  7595                           	psect	config
  7596                           
  7597                           ;Config register CONFIG1 @ 0x8007
  7598                           ;	Oscillator Selection
  7599                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  7600                           ;	Watchdog Timer Enable
  7601                           ;	WDTE = OFF, WDT disabled
  7602                           ;	Power-up Timer Enable
  7603                           ;	PWRTE = OFF, PWRT disabled
  7604                           ;	MCLR Pin Function Select
  7605                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  7606                           ;	Flash Program Memory Code Protection
  7607                           ;	CP = OFF, Program memory code protection is disabled
  7608                           ;	Data Memory Code Protection
  7609                           ;	CPD = OFF, Data memory code protection is disabled
  7610                           ;	Brown-out Reset Enable
  7611                           ;	BOREN = ON, Brown-out Reset enabled
  7612                           ;	Clock Out Enable
  7613                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  7614                           ;	Internal/External Switchover
  7615                           ;	IESO = ON, Internal/External Switchover mode is enabled
  7616                           ;	Fail-Safe Clock Monitor Enable
  7617                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  7618     8007                     	org	32775
  7619     8007  3FE4               	dw	16356
  7620                           
  7621                           ;Config register CONFIG2 @ 0x8008
  7622                           ;	Flash Memory Self-Write Protection
  7623                           ;	WRT = OFF, Write protection off
  7624                           ;	PLL Enable
  7625                           ;	PLLEN = OFF, 4x PLL disabled
  7626                           ;	Stack Overflow/Underflow Reset Enable
  7627                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  7628                           ;	Brown-out Reset Voltage Selection
  7629                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  7630                           ;	Low-Voltage Programming Enable
  7631                           ;	LVP = ON, Low-voltage programming enabled
  7632     8008                     	org	32776
  7633     8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    36
    Data        8
    BSS         246
    Persistent  38
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     42      80
    BANK1            80      0      78
    BANK2            80      0      80
    BANK3            80      0      64
    BANK4            48      0       0

Pointer List with Targets:

    snake_getSurroundings@surroundings	PTR char  size(1) Largest target is 8
		 -> Y0(BANK0[8]), 

    sp__ai_getInputField	PTR unsigned char  size(1) Largest target is 8
		 -> Y0(BANK0[8]), 

    sp__snake_getField	PTR unsigned char  size(1) Largest target is 16
		 -> field(BANK1[16]), 

    main@field	PTR unsigned char  size(1) Largest target is 16
		 -> field(BANK1[16]), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    _main->_ledSet
    _snake_move->_rand
    _snake_initiate->_rand
    _snake_getSurroundings->___awdiv
    _sendMatrix->_txMAX7219
    _ledSet->___awdiv
    _initMAX7219->_txMAX7219
    _txMAX7219->_SPI1_WriteByte
    _ai_run->___awdiv
    _ai_propagate->___awdiv
    ___wmul->_de_sigmoid
    ___awdiv->___wmul
    _ai_initiate->_rand
    _rand->___lmul
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _main in BANK0

    _main->_ai_propagate
    _snake_move->_snake_initiate
    _snake_initiate->_rand
    _snake_getSurroundings->___awdiv
    _ledSet->___awdiv
    _ai_run->___awdiv
    _ai_propagate->___awdiv
    _ai_initiate->_rand

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0   26898
                                             31 BANK0     11    11      0
                  _SYSTEM_Initialize
                            ___awdiv
                   _ai_getInputField
                        _ai_initiate
                       _ai_propagate
                             _ai_run
                 _deactivateElevator
                        _initMAX7219
                           _ledClear
                             _ledSet
                         _sendMatrix
                     _snake_getField
              _snake_getFoodPosition
              _snake_getSurroundings
                     _snake_initiate
                         _snake_move
 ---------------------------------------------------------------------------------
 (1) _snake_move                                           5     5      0    3703
                                              6 BANK0      5     5      0
                            ___awdiv
                               _rand
                     _snake_initiate
 ---------------------------------------------------------------------------------
 (2) _snake_initiate                                       2     2      0     410
                                              4 BANK0      2     2      0
                               _rand
                              _srand
 ---------------------------------------------------------------------------------
 (3) _srand                                                2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _snake_getSurroundings                               10    10      0    3586
                                              4 BANK0     10    10      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) _snake_getFoodPosition                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _snake_getField                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sendMatrix                                           5     5      0     935
                                              3 COMMON     5     5      0
                          _txMAX7219
 ---------------------------------------------------------------------------------
 (1) _ledSet                                               4     3      1    1184
                                             13 COMMON     1     0      1
                                              4 BANK0      3     3      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _ledClear                                             4     3      1    1032
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _initMAX7219                                          2     2      0     750
                                              3 COMMON     2     2      0
                          _txMAX7219
 ---------------------------------------------------------------------------------
 (2) _txMAX7219                                            2     1      1     750
                                              1 COMMON     2     1      1
                     _SPI1_WriteByte
 ---------------------------------------------------------------------------------
 (3) _SPI1_WriteByte                                       1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _deactivateElevator                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ai_run                                              11    11      0    4916
                                              4 BANK0     11    11      0
                            ___awdiv
                             ___wmul
                            _sigmoid
 ---------------------------------------------------------------------------------
 (2) _sigmoid                                              2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ai_propagate                                        29    29      0    5994
                                              4 BANK0     27    27      0
                            ___awdiv
                             ___wmul
                         _de_sigmoid
 ---------------------------------------------------------------------------------
 (2) _de_sigmoid                                           2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1156
                                              2 COMMON     6     2      4
                         _de_sigmoid (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    2884
                                              8 COMMON     5     1      4
                                              0 BANK0      4     4      0
                             ___wmul (ARG)
                         _de_sigmoid (ARG)
 ---------------------------------------------------------------------------------
 (1) _ai_initiate                                          7     7      0     560
                                              4 BANK0      7     7      0
                               _rand
 ---------------------------------------------------------------------------------
 (3) _rand                                                 6     4      2     244
                                             12 COMMON     2     0      2
                                              0 BANK0      4     4      0
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     244
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _ai_getInputField                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI1_Initialize
     _WDT_Initialize
   ___awdiv
     ___wmul (ARG)
       _de_sigmoid (ARG)
     _de_sigmoid (ARG)
   _ai_getInputField
   _ai_initiate
     _rand
       ___lmul
   _ai_propagate
     ___awdiv
     ___wmul
     _de_sigmoid
   _ai_run
     ___awdiv
     ___wmul
     _sigmoid
   _deactivateElevator
   _initMAX7219
     _txMAX7219
       _SPI1_WriteByte
   _ledClear
   _ledSet
     ___awdiv (ARG)
   _sendMatrix
     _txMAX7219
   _snake_getField
   _snake_getFoodPosition
   _snake_getSurroundings
     ___awdiv
   _snake_initiate
     _rand
     _srand
   _snake_move
     ___awdiv
     _rand
     _snake_initiate

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0     13C       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     2A      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      4E       8       97.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      50      10      100.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      40      12       80.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0     13C      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Oct 09 01:51:14 2022

                           SPI1_WriteByte@byte 0070                           __end_of_ai_propagate 07D1  
                                           _B1 00CC                                             _B2 00C8  
                                           l93 0ED9                                             _W1 0120  
                                           _W2 0160                                             _Y0 0064  
                                           _Y1 005A                                             _Y2 0056  
                                           _Z1 0052                                             _Z2 004E  
                                 ___awdiv@sign 0021                            ___wmul@multiplicand 0074  
                                          l132 0DDB                                            l135 0DE1  
                                          l224 0DCF                                            l400 0E54  
                                          l138 0DD5                                            l251 0DF4  
                                          l163 0E7E                                            l333 0011  
                                          l254 0DCA                                            l248 0E22  
                                          l601 0DC1                                            l417 0F07  
                                          l361 04D7                                            l506 0DC6  
                                          l187 0E12                                            l622 07D0  
                                          l390 0E95                                            l446 0F37  
                                          l391 0E98                                            l385 0E86  
                                          l618 0372                                            l394 004F  
                                          l474 0250                                            l387 0E8B  
                                          l388 0E90                                            l397 0E66  
                                          l477 0DC3                                            l831 0F6A  
                                          l664 0E42                                            l817 0EA3  
                                          l497 017E                                            l819 0EB7  
                                          l667 0E32                                            l598 00BD  
                                          l970 0FFF                 ?_EUSART_SetFramingErrorHandler 0070  
                                          wreg 0009                                   ?_initMAX7219 0070  
                                         l3001 0591                                           l3011 059C  
                                         l3003 0595                                           l3101 078A  
                                         l3021 05BD                                           l3013 05AB  
                                         l3005 059B                                           l3111 079D  
                                         l3103 078B                                           l3023 05C1  
                                         l1281 0F9F                                           l3121 07CB  
                                         l3025 05C7                                           l3201 0400  
                                         l3115 07A4                                           l3107 0792  
                                         l3051 069E                                           l3043 0618  
                                         l3035 05D2                                           l3027 05CB  
                                         l3019 05AC                                           l3211 042D  
                                         l3203 0415                                           l2421 0F40  
                                         l3117 07C6                                           l3109 079C  
                                         l3061 06E9                                           l3053 06A4  
                                         l3045 0690                                           l3037 0616  
                                         l3029 05D1                                           l2501 0F13  
                                         l3221 0476                                           l3213 0431  
                                         l3205 041C                                           l3141 0379  
                                         l1278 0E06                                           l2423 0F44  
                                         l3063 06EB                                           l3047 0694  
                                         l2511 0E80                                           l2503 0F19  
                                         l3231 0499                                           l3223 047D  
                                         l3215 0437                                           l3207 0422  
                                         l3143 037C                                           l2433 0DD6  
                                         l2425 0F4C                                           l2601 005D  
                                         l2521 0E24                                           l3073 073A  
                                         l3049 069A                                           l2513 0E82  
                                         l2441 0DFD                                           l2505 0F2D  
                                         l3241 04BB                                           l3233 049F  
                                         l3225 0483                                           l3217 0467  
                                         l3209 0427                                           l3161 0389  
                                         l3145 037F                                           l3137 0373  
                                         l2435 0DDC                                           l2451 0EC1  
                                         l2427 0F53                                           l2419 0F38  
                                         l2443 0F6B                                           l2611 0087  
                                         l2603 0072                                           l2531 0EA8  
                                         l3091 075E                                           l3083 074C  
                                         l3075 073E                                           l3067 06F2  
                                         l3059 06A5                                           l2515 0E8C  
                                         l2507 0F2F                                           l3251 04E8  
                                         l3243 04C3                                           l3235 04A7  
                                         l3227 048B                                           l3219 046F  
                                         l3171 03B6                                           l3163 039E  
                                         l3155 0388                                           l3147 0382  
                                         l3139 0376                                           l2437 0DD0  
                                         l2453 0EC2                                           l2461 0E67  
                                         l2429 0F62                                           l2445 0F8C  
                                         l2605 0077                                           l2541 0FA2  
                                         l2533 0EAD                                           l2525 0E99  
                                         l3093 0780                                           l3085 0756  
                                         l3077 0744                                           l3069 0734  
                                         l2517 0E34                                           l2701 00CC  
                                         l2509 0F31                                           l3309 01FC  
                                         l3253 04EE                                           l3245 04CA  
                                         l3237 04AE                                           l3229 0492  
                                         l3181 03DE                                           l3173 03BA  
                                         l3165 03A5                                           l3149 0387  
                                         l2455 0EC9                                           l2471 0E77  
                                         l2463 0E6A                                           l2631 00B3  
                                         l2607 007D                                           l2551 0FB6  
                                         l2543 0FA6                                           l2535 0EB3  
                                         l2527 0E9B                                           l3087 0757  
                                         l3079 0745                                           l2439 0DCC  
                                         l2711 00FF                                           l2703 00D2  
                                         l3255 04F3                                           l3247 04D1  
                                         l3239 04B5                                           l3183 03EB  
                                         l3175 03C0                                           l3167 03AB  
                                         l2457 0ED0                                           l2449 0EB8  
                                         l2473 0E79                                           l2465 0E6D  
                                         l2481 0E10                                           l2633 00B7  
                                         l2625 0093                                           l2617 0088  
                                         l2609 0081                                           l2561 0FCA  
                                         l2553 0FBA                                           l2545 0FAB  
                                         l2529 0E9F                                           l3097 0785  
                                         l2801 02DF                                           l2641 0044  
                                         l2721 011C                                           l2713 0105  
                                         l2705 00D5                                           l3257 04F9  
                                         l3249 04E2                                           l3185 03F1  
                                         l3177 03C5                                           l3169 03B0  
                                         l2459 0ED7                                           l2483 0DEE  
                                         l2475 0E7C                                           l2467 0E6F  
                                         l2627 00A8                                           l2619 0091  
                                         l2571 0FE6                                           l2563 0FCE  
                                         l2555 0FBC                                           l2547 0FAD  
                                         l2539 0FA0                                           l2643 0049  
                                         l2635 0012                                           l2651 0E44  
                                         l2731 0129                                           l2723 0122  
                                         l2715 010B                                           l2707 00E6  
                                         l2491 0F08                                           l3259 04FE  
                                         l3195 03FF                                           l3187 03F9  
                                         l3179 03DB                                           l2485 0DF1  
                                         l2469 0E72                                           l2477 0E07  
                                         l2629 00AD                                           l2573 0FEB  
                                         l2565 0FD2                                           l2557 0FC2  
                                         l2549 0FB1                                           l2821 0325  
                                         l2637 0018                                           l2645 0DC2  
                                         l2653 0DC4                                           l2741 0152  
                                         l2733 013A                                           l2725 0128  
                                         l2717 0110                                           l2709 00FA  
                                         l2901 020A                                           l3189 03FD  
                                         l2487 0DF2                                           l2479 0E0E  
                                         l2583 0E13                                           l2567 0FE1  
                                         l2559 0FC5                                           l2575 0FF1  
                                         l2831 034A                                           l2823 032D  
                                         l2815 02EB                                           l2807 02E0  
                                         l2639 0039                                           l2663 0EDB  
                                         l2751 0172                                           l2743 0159  
                                         l2735 0142                                           l2719 0115  
                                         l2911 021F                                           l2903 020F  
                                         l2489 0DC7                                           l2593 0052  
                                         l2577 0FF6                                           l2569 0FE5  
                                         l2841 0353                                           l2833 0350  
                                         l2825 0331                                           l2817 02F4  
                                         l2809 02EA                                           l2761 0253  
                                         l2585 0005                                           l2649 0E57  
                                         l2681 0EF6                                           l2673 0EE3  
                                         l2665 0EE1                                           l2657 0EDA  
                                         l2753 0178                                           l2745 015F  
                                         l2737 0146                                           l2497 0F0A  
                                         l2921 0234                                           l2913 0225  
                                         l2905 0213                                           l2595 005B  
                                         l2587 0050                                           l2579 0FFB  
                                         l2843 0365                                           l2835 0351  
                                         l2827 0337                                           l2819 0315  
                                         l2763 025E                                           l2755 0251  
                                         l2683 0EFD                                           l2675 0EE5  
                                         l2667 0EE2                                           l2747 0165  
                                         l2739 014C                                           l2691 00C0  
                                         l2499 0F0F                                           l2931 024E  
                                         l2915 0227                                           l2923 023D  
                                         l2907 021C                                           l2845 0367  
                                         l2829 0345                                           l2765 0264  
                                         l2685 0F01                                           l2677 0EEA  
                                         l2749 016B                                           l2917 0229  
                                         l2925 0243                                           l2861 0184  
                                         l2853 0181                                           l2687 0DC0  
                                         l2943 051F                                           l2847 036B  
                                         l2791 02BC                                           l2783 027A  
                                         l2775 026F                                           l2767 0268  
                                         l2679 0EF0                                           l2927 0249  
                                         l2919 022D                                           l2871 019E  
                                         l2863 018D                                           l2855 0183  
                                         l2961 053B                                           l2945 0524  
                                         l2849 0371                                           l2793 02C0  
                                         l2785 0283                                           l2777 0279  
                                         l2769 026E                                           l2697 00C1  
                                         l2929 024B                                           l2873 01A3  
                                         l2865 0193                                           l2971 0547  
                                         l2955 052B                                           l2963 0541  
                                         l2947 0525                                           l2939 0519  
                                         l2795 02C6                                           l2787 02A4  
                                         l2699 00C8                                           l2891 01D8  
                                         l2883 01BA                                           l2875 01A9  
                                         l2867 0197                                           l2973 054B  
                                         l2957 0531                                           l2949 052A  
                                         l2797 02D4                                           l2789 02B4  
                                         l2885 01BF                                           l2877 01AD  
                                         l2869 019D                                           l2983 0558  
                                         l2975 0551                                           l2959 0535  
                                         l2799 02D9                                           l2895 01EE  
                                         l2879 01B0                                           l2985 056B  
                                         l2969 0542                                           l2977 0557  
                                         l2889 01D4                                           l2995 0576  
                                         l2987 0570                                           l2899 01F4  
                                         l2997 0587                                           l2989 0575  
                                         l2999 058B                  __end_of_snake_getSurroundings 017F  
                                         u2000 0551                                           u2001 0550  
                                         u1300 0F44                                           u2100 06A4  
                                         u2020 0591                                           u1301 0F43  
                                         u2101 06A3                                           u2021 0590  
                                         u2110 06F1                                           u2030 059B  
                                         u2111 06F0                                           u2031 059A  
                                         u2015 0579                                           u1400 0E9F  
                                         u1401 0E9E                                           u1330 0F62  
                                         u2130 0744                                           u2050 05C7  
                                         u1331 0F61                                           u1315 0F4D  
                                         u2131 0743                                           u2051 05C6  
                                         u1340 0F99                                           u1500 0FE1  
                                         u2140 074B                                           u2060 05D1  
                                         u2300 042D                                           u1325 0F54  
                                         u1501 0FE0                                           u2205 07A7  
                                         u2141 074A                                           u2125 071A  
                                         u2061 05D0                                           u2045 05AF  
                                         u2301 042C                                           _LATA 010C  
                                         u1430 0EB3                                           u2150 075D  
                                         u1350 0F19                                           u2310 0437  
                                         _LATB 010D                                           u1431 0EB2  
                                         u1415 0EA4                                           u2215 07B7  
                                         u2151 075C                                           u1351 0F18  
                                         u2311 0436                                           u1520 0FF1  
                                         u1440 0FA6                                           u1360 0E8B  
                                         u2400 04E8                                           u2320 046F  
                                         u1345 0F95                                           u1521 0FF0  
                                         u1505 0FDD                                           u1441 0FA5  
                                         u1425 0EA9                                           u1361 0E8A  
                                         u2401 04E7                                           u2321 046E  
                                         u1530 0FF6                                           u1450 0FB1  
                                         u2090 069A                                           u1370 0E95  
                                         u2410 04F3                                           u2330 047D  
                                         u2250 039E                                           u1531 0FF5  
                                         u1515 0FE7                                           u1451 0FB0  
                                         u2091 0699                                           u2075 0640  
                                         u1371 0E94                                           u2411 04F2  
                                         u2331 047C                                           u2251 039D  
                                         u1460 0FC2                                           u2180 0791  
                                         u1604 0E5C                                           u1620 0EF6  
                                         u1700 014C                                           u2340 048B  
                                         u2260 03B6                                           u1461 0FC1  
                                         u2181 0790                                           u2165 0761  
                                         u2085 066B                                           u1605 0E5B  
                                         u1621 0EF5                                           u1701 014B  
                                         u2341 048A                                           u2261 03B5  
                                         u2245 038C                                           u1550 007D  
                                         u2190 07A3                                           u1614 0E49  
                                         u1630 0F07                                           u1710 0152  
                                         u2350 0499                                           u2270 03C0  
                                         u1551 007C                                           u2191 07A2  
                                         u2175 0771                                           u1615 0E48  
                                         u1631 0F06                                           u1711 0151  
                                         u2351 0498                                           u2271 03BF  
                                         u1560 0087                                           u1480 0FD2  
                                         u1720 015F                                           u1640 00D2  
                                         u2360 04A7                                           u1561 0086  
                                         u1545 0060                                           u1481 0FD1  
                                         u1385 0E37                                           u1721 015E  
                                         u1641 00D1                                           u2361 04A6  
                                         u1810 0337                                           u1730 016B  
                                         u1650 00FF                                           u2370 04B5  
                                         u2290 0415                                           u1475 0FC6  
                                         u1395 0E27                                           u1811 0336  
                                         u1731 016A                                           u1651 00FE  
                                         u2371 04B4                                           u2291 0414  
                                         u1580 00B3                                           u1820 0350  
                                         u1740 0178                                           u1660 010B  
                                         u1900 01ED                                           u2380 04C3  
                                         u1581 00B2                                           u1821 034F  
                                         u1805 02F7                                           u1741 0177  
                                         u1661 010A                                           u1901 01EC  
                                         u2381 04C2                                           u2285 0403  
                                         u1590 00BD                                           u1830 0365  
                                         u1750 025E                                           u1670 0115  
                                         u1910 020F                                           u2390 04D1  
                                         u1591 00BC                                           u1575 0096  
                                         u1495 0FD3                                           u1831 0364  
                                         u1751 025D                                           u1671 0114  
                                         u1911 020E                                           u2391 04D0  
                                         u2447 03E4                                           u1840 0371  
                                         u1760 026E                                           u1680 0122  
                                         u1920 021C                                           u1841 0370  
                                         u1761 026D                                           u2457 003E  
                                         u1681 0121                                           u1921 021B  
                                         u1690 013A                                           u1930 0225  
                                         u1850 018D                                           u1691 0139  
                                         u1931 0224                                           u1851 018C  
                                         u1780 02C6                                           u1940 023D  
                                         u1860 019D                                           u1781 02C5  
                                         u1941 023C                                           u1861 019C  
                                         u1790 02DF                                           u1950 0249  
                                         u1870 01A9                                           u1791 02DE  
                                         u1775 0286                                           u1951 0248  
                                         u1871 01A8                                           u1960 051E  
                                         u1880 01B9                                           u1961 051D  
                                         u1881 01B8                                           u1970 0524  
                                         u1890 01D3                                           u1971 0523  
                                         u1891 01D2                                           u1980 052A  
                                         u1981 0529                                           u1990 053B  
                                         u1991 053A                                           _WPUA 020C  
                                         _WPUB 020D                                           _main 0373  
                                         _rand 0F6B                                           _seed 006C  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         btemp 007E                                           start 0002  
                   __end_of_deactivateElevator 0012                        ??_snake_getFoodPosition 0070  
                __end_of_OSCILLATOR_Initialize 0DF5                                          ?_main 0070  
                                        ?_rand 007C                                __end_of___awdiv 1000  
                              ___awdiv@divisor 0078                                ___awdiv@counter 0020  
                                        _RCREG 0199                                          _RCSTA 019D  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TXREG 019A                                          _TXSTA 019E  
                          ___lmul@multiplicand 0074                                          _field 00D0  
                               _WDT_Initialize 0DC7                                          _srand 0DFD  
                                        main@i 0046                                          main@j 0047  
                              __end_of_sigmoid 0E43                                          status 0003  
                                        wtemp0 007E                                __initialization 07D1  
                               _remainingMoves 005E                                   __end_of_main 0517  
                                 __end_of_rand 0FA0                                         ??_main 003F  
                                       ??_rand 0020                         __end_of_WDT_Initialize 0DCB  
            _EUSART_DefaultFramingErrorHandler 0000                     _EUSART_OverrunErrorHandler 00EA  
                                       _EEADRH 0192                                         _EEADRL 0191  
                                       _EEDATH 0194                                         _EEDATL 0193  
                                       _EECON2 0196                               ___awdiv@dividend 007A  
                                       ?_srand 0070                                         _DC_DB1 00A8  
                                       _DC_DB2 00B4                                         _ANSELA 018C  
                                       _ANSELB 018D                                         _DC_DW1 01A0  
                                       _DC_DW2 0140                                         _DC_DY1 00B0  
                                       _DC_DY2 00C4                                         _DC_DZ1 00AC  
                                       _DC_DZ2 004A                                         _BORCON 0116  
                            ?_ai_getInputField 0070                                  main@incentive 0045  
                                       _OSCCON 0099                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _WDTCON 0097  
                           ??_ai_getInputField 0070                               __end_of_ledClear 0E55  
            snake_getSurroundings@surroundings 002D                                         ___lmul 0F38  
                                       ___wmul 0E99                                      ??___awdiv 007C  
                                       _ai_run 0251                                         _choice 0061  
                                       _ledSet 0E55                               _de_sigmoidValues 0800  
                                       _matrix 00A0                               ___awdiv@quotient 0022  
                              ?_WDT_Initialize 0070                                      ??_sigmoid 0070  
                                       srand@s 0070                                  ai_propagate@S 002A  
                                ai_propagate@i 0031                                  ai_propagate@j 003C  
                                 _ai_propagate 0517                              _SYSTEM_Initialize 0E13  
                      __end_of__initialization 07FD                             ?_SYSTEM_Initialize 0070  
                               __pcstackCOMMON 0070                                   __pidataBANK1 0DF5  
                          ??_SYSTEM_Initialize 0072                              ??_SPI1_Initialize 0070  
                                __end_of_srand 0E07                             _spi1_configuration 0820  
                               _OPTION_REGbits 0095                          __end_of_sigmoidValues 0820  
              ??_EUSART_SetOverrunErrorHandler 0072                                snake_initiate@i 0025  
                    __end_of_SYSTEM_Initialize 0E23                            snake_move@direction 0028  
                                      ??_srand 0072                                   _headPosition 0060  
                                   __pbssBANK0 004A                                     __pbssBANK1 00A0  
                                   __pbssBANK2 0120                                     __pbssBANK3 01A0  
                        ai_propagate@incentive 0030                                     _de_sigmoid 0E23  
                               _SPI1_WriteByte 0DCB                            snake_move@incentive 0029  
                                   __pmaintext 0373                                        ?___lmul 0070  
                                      ?___wmul 0072                                        ?_ai_run 0070  
                                  sendMatrix@b 0074                                    sendMatrix@i 0077  
                                  sendMatrix@j 0076                                        ?_ledSet 007D  
                                      _BAUDCON 019F                                 ___lmul@product 0078  
                                      _APFCON0 011D                                        _APFCON1 011E  
                __end_of_snake_getFoodPosition 0DC7                                        _DZ1_DB1 00BC  
                                      _DZ2_DB2 00B8                                        _DZ1_DW1 01C0  
                                      _DZ2_DW2 0150                                        _DZ2_DY1 00C0  
                         main@foodPosition_671 0044                             _deactivateElevator 0005  
                                      _OSCTUNE 0098                                      ?_ledClear 0070  
                                      _SSP1ADD 0212                                        _SSP1BUF 0211  
                     ??_EUSART_SetErrorHandler 0072                            ?_deactivateElevator 0070  
                       __end_of_SPI1_WriteByte 0DD0                          _snake_getSurroundings 00BE  
                             main@foodPosition 0043                                  ??_ai_initiate 0024  
                                      ___awdiv 0FA0                           ??_deactivateElevator 0070  
                                      __ptext1 017F                                        __ptext2 0F08  
                                      __ptext3 0DFD                                        __ptext4 00BE  
                                      __ptext5 0DC4                                        __ptext6 0DC2  
                                      __ptext7 0EDA                                        __ptext8 0E55  
                                      __ptext9 0E43                              __end_of_txMAX7219 0E99  
                                      ai_run@i 0027                                        ai_run@j 002D  
                                      ai_run@z 002B                          _OSCILLATOR_Initialize 0DEE  
                                      _mapping 00E0                       ??_PIN_MANAGER_Initialize 0070  
                                      _sigmoid 0E33                                     ??_ledClear 0071  
                                      ledSet@c 007D                                        ledSet@l 0026  
                                      clrloop0 0DE3                           end_of_initialization 07FD  
                                   _sendMatrix 0EDA                       __end_of_de_sigmoidValues 0810  
                                  ?_de_sigmoid 0070          __end_of_EUSART_SetOverrunErrorHandler 0DE2  
                _EUSART_SetOverrunErrorHandler 0DDC                                ?_SPI1_WriteByte 0070  
                                      init_ram 0DE8                                        initloop 0DE9  
                                  snake_move@i 002A                              _EUSART_Initialize 0EB8  
                           ?_EUSART_Initialize 0070                                      _RCSTAbits 019D  
                                   _snake_move 017F                            ??_EUSART_Initialize 0072  
                          __end_of_ai_initiate 00BE                               ??_WDT_Initialize 0070  
                               txMAX7219@addr0 0072                                      _TRISAbits 008C  
                                    _TRISBbits 008D                         ?_snake_getSurroundings 0070  
                    __end_of_EUSART_Initialize 0EDA                                _SPI1_Initialize 0E07  
                                    _TXSTAbits 019E                                   _foodPosition 005F  
                               _snake_getField 0DC2                                   ai_initiate@i 0027  
                                 ai_initiate@j 0029                                 __end_of___lmul 0F6B  
                   _EUSART_DefaultErrorHandler 0000                                 __end_of___wmul 0EB8  
                               __end_of_ai_run 0373                                 __end_of_ledSet 0E67  
                       ?_OSCILLATOR_Initialize 0070                                 _snake_initiate 0F08  
                          start_initialization 07D1                                  ??_initMAX7219 0073  
                                  ?_sendMatrix 0070                         __end_of_snake_getField 0DC4  
               ?_EUSART_SetOverrunErrorHandler 0070                                    _ai_initiate 0050  
                   _EUSART_FramingErrorHandler 00EC                                       ??___lmul 0078  
                                  ?_snake_move 0070                                       ??___wmul 0076  
                       _EUSART_SetErrorHandler 0DD0                                       ??_ai_run 0024  
                                     ??_ledSet 0024                                    __pdataBANK1 00E0  
                             ai_initiate@i_869 0028                               ai_initiate@j_868 002A  
                       __end_of_snake_initiate 0F38                                      ___latbits 0001  
                                __pcstackBANK0 0020                        __end_of_SPI1_Initialize 0E13  
                      snake_getSurroundings@cf 0028                        snake_getSurroundings@ch 002B  
                      snake_getSurroundings@lf 0027                        snake_getSurroundings@lh 002A  
                          __end_of_initMAX7219 0050                                      __pnvBANK1 00E8  
                              ?_snake_getField 0070                         _PIN_MANAGER_Initialize 0E67  
                                     ?___awdiv 0078                               _ai_getInputField 0DC0  
                              ?_snake_initiate 0070                                   sendMatrix@nb 0075  
                        _snake_getFoodPosition 0DC4                                       ?_sigmoid 0070  
                             ??_SPI1_WriteByte 0070                                      _txMAX7219 0E7F  
                                 ??_de_sigmoid 0070                                 ___wmul@product 0076  
                                     _LATAbits 010C         EUSART_SetErrorHandler@interruptHandler 0070  
                                     _LATBbits 010D                                      clear_ram0 0DE2  
                            _eusartRxLastError 0063                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 0072                                      ledClear@c 0070  
                                    ledClear@l 0073                              _ai_propagate$1580 002E  
                                    _snakeSize 0062                                       _SSP1CON1 0215  
                                     _SSP1CON2 0216              _EUSART_DefaultOverrunErrorHandler 0000  
                                     _SSP1STAT 0214                                  txMAX7219@dat0 0071  
                                    main@i_669 0048                              ___wmul@multiplier 0072  
                                    main@j_670 0049                             __end_of_de_sigmoid 0E33  
                                    main@field 0042                                    _initMAX7219 0012  
                      ??_snake_getSurroundings 0024                                     ?_txMAX7219 0071  
                                _sigmoidValues 0810                               ?_SPI1_Initialize 0070  
                                ?_ai_propagate 0070                              ___lmul@multiplier 0070  
                                   _EECON1bits 0195                                    ai_run@i_875 0028  
                                  ai_run@i_877 0029                                    ai_run@i_878 002A  
                                  ai_run@j_876 002E                        ??_OSCILLATOR_Initialize 0070  
                          _EUSART_ErrorHandler 00E8                         ?_snake_getFoodPosition 0070  
                       snake_getSurroundings@i 0029                         snake_getSurroundings@p 0026  
                            ai_propagate@i_890 0039                              ai_propagate@i_883 0032  
                            ai_propagate@i_892 0035                              ai_propagate@i_885 0033  
                            ai_propagate@i_894 0036                              ai_propagate@i_887 0034  
                            ai_propagate@i_896 0037                              ai_propagate@j_891 003D  
                            ai_propagate@j_893 003A                              ai_propagate@j_886 0038  
                            ai_propagate@j_895 003B                              ai_propagate@j_889 003E  
                                  de_sigmoid@z 0071                                       _ledClear 0E43  
                               ??_ai_propagate 0024                                       __ptext10 0012  
                                     __ptext11 0E7F                                       __ptext20 0050  
                                     __ptext12 0DCB                                       __ptext21 0F6B  
                                     __ptext13 0005                                       __ptext30 0DDC  
                                     __ptext22 0F38                                       __ptext14 0251  
                                     __ptext31 0DD6                                       __ptext23 0DC0  
                                     __ptext15 0E33                                       __ptext32 0DD0  
                                     __ptext24 0E13                                       __ptext16 0517  
                                     __ptext25 0DC7                                       __ptext17 0E23  
                                     __ptext26 0E07                                       __ptext18 0E99  
                                     __ptext27 0E67                                       __ptext19 0FA0  
                                     __ptext28 0DEE                                       __ptext29 0EB8  
                                 _SSP1CON1bits 0215                                   ??_sendMatrix 0073  
                      ?_EUSART_SetErrorHandler 0070                                   ?_ai_initiate 0070  
EUSART_SetOverrunErrorHandler@interruptHandler 0070                                   ??_snake_move 0026  
        __end_of_EUSART_SetFramingErrorHandler 0DDC                  _EUSART_SetFramingErrorHandler 0DD6  
                           __end_of_sendMatrix 0F08                                     _INTCONbits 000B  
                                  ??_txMAX7219 0072                       __end_of_ai_getInputField 0DC2  
                             ??_snake_getField 0070                             __end_of_snake_move 0251  
                      ?_PIN_MANAGER_Initialize 0070                 __end_of_EUSART_SetErrorHandler 0DD6  
                                     sigmoid@z 0071                     snake_getSurroundings@i_803 002C  
                             ??_snake_initiate 0024  EUSART_SetFramingErrorHandler@interruptHandler 0070  
                                __pstringtext1 0800                                  __pstringtext2 0810  
                                __pstringtext3 0820                 __end_of_PIN_MANAGER_Initialize 0E7F  
                   __end_of_spi1_configuration 0824  
